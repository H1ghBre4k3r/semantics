/**
 * generated by Xtext 2.10.0
 */
package de.cau.rtsys.peu.railSL.impl;

import de.cau.rtsys.peu.railSL.Block;
import de.cau.rtsys.peu.railSL.ContactWaitStatement;
import de.cau.rtsys.peu.railSL.LightStatement;
import de.cau.rtsys.peu.railSL.OpStatement;
import de.cau.rtsys.peu.railSL.Program;
import de.cau.rtsys.peu.railSL.RailSLFactory;
import de.cau.rtsys.peu.railSL.RailSLPackage;
import de.cau.rtsys.peu.railSL.SetPointStatement;
import de.cau.rtsys.peu.railSL.SetStatement;
import de.cau.rtsys.peu.railSL.SetTrackStatement;
import de.cau.rtsys.peu.railSL.Statement;
import de.cau.rtsys.peu.railSL.TimeWaitStatement;
import de.cau.rtsys.peu.railSL.WaitStatement;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class RailSLPackageImpl extends EPackageImpl implements RailSLPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass programEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass blockEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass statementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass setStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass setTrackStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass setPointStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass waitStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass timeWaitStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass contactWaitStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass opStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass lightStatementEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see de.cau.rtsys.peu.railSL.RailSLPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private RailSLPackageImpl()
  {
    super(eNS_URI, RailSLFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   * 
   * <p>This method is used to initialize {@link RailSLPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static RailSLPackage init()
  {
    if (isInited) return (RailSLPackage)EPackage.Registry.INSTANCE.getEPackage(RailSLPackage.eNS_URI);

    // Obtain or create and register package
    RailSLPackageImpl theRailSLPackage = (RailSLPackageImpl)(EPackage.Registry.INSTANCE.get(eNS_URI) instanceof RailSLPackageImpl ? EPackage.Registry.INSTANCE.get(eNS_URI) : new RailSLPackageImpl());

    isInited = true;

    // Create package meta-data objects
    theRailSLPackage.createPackageContents();

    // Initialize created meta-data
    theRailSLPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theRailSLPackage.freeze();

  
    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(RailSLPackage.eNS_URI, theRailSLPackage);
    return theRailSLPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getProgram()
  {
    return programEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getProgram_Blocks()
  {
    return (EReference)programEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getBlock()
  {
    return blockEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getBlock_Statements()
  {
    return (EReference)blockEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getBlock_End()
  {
    return (EAttribute)blockEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getStatement()
  {
    return statementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getSetStatement()
  {
    return setStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getSetTrackStatement()
  {
    return setTrackStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getSetTrackStatement_Segments()
  {
    return (EAttribute)setTrackStatementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getSetTrackStatement_Mode()
  {
    return (EAttribute)setTrackStatementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getSetPointStatement()
  {
    return setPointStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getSetPointStatement_Points()
  {
    return (EAttribute)setPointStatementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getSetPointStatement_Orientation()
  {
    return (EAttribute)setPointStatementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getWaitStatement()
  {
    return waitStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTimeWaitStatement()
  {
    return timeWaitStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getTimeWaitStatement_Time()
  {
    return (EAttribute)timeWaitStatementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getContactWaitStatement()
  {
    return contactWaitStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getContactWaitStatement_Event()
  {
    return (EAttribute)contactWaitStatementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getContactWaitStatement_ContactIndex()
  {
    return (EAttribute)contactWaitStatementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getContactWaitStatement_SegName()
  {
    return (EAttribute)contactWaitStatementEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getOpStatement()
  {
    return opStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getLightStatement()
  {
    return lightStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getLightStatement_Lights()
  {
    return (EAttribute)lightStatementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getLightStatement_State()
  {
    return (EAttribute)lightStatementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RailSLFactory getRailSLFactory()
  {
    return (RailSLFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    programEClass = createEClass(PROGRAM);
    createEReference(programEClass, PROGRAM__BLOCKS);

    blockEClass = createEClass(BLOCK);
    createEReference(blockEClass, BLOCK__STATEMENTS);
    createEAttribute(blockEClass, BLOCK__END);

    statementEClass = createEClass(STATEMENT);

    setStatementEClass = createEClass(SET_STATEMENT);

    setTrackStatementEClass = createEClass(SET_TRACK_STATEMENT);
    createEAttribute(setTrackStatementEClass, SET_TRACK_STATEMENT__SEGMENTS);
    createEAttribute(setTrackStatementEClass, SET_TRACK_STATEMENT__MODE);

    setPointStatementEClass = createEClass(SET_POINT_STATEMENT);
    createEAttribute(setPointStatementEClass, SET_POINT_STATEMENT__POINTS);
    createEAttribute(setPointStatementEClass, SET_POINT_STATEMENT__ORIENTATION);

    waitStatementEClass = createEClass(WAIT_STATEMENT);

    timeWaitStatementEClass = createEClass(TIME_WAIT_STATEMENT);
    createEAttribute(timeWaitStatementEClass, TIME_WAIT_STATEMENT__TIME);

    contactWaitStatementEClass = createEClass(CONTACT_WAIT_STATEMENT);
    createEAttribute(contactWaitStatementEClass, CONTACT_WAIT_STATEMENT__EVENT);
    createEAttribute(contactWaitStatementEClass, CONTACT_WAIT_STATEMENT__CONTACT_INDEX);
    createEAttribute(contactWaitStatementEClass, CONTACT_WAIT_STATEMENT__SEG_NAME);

    opStatementEClass = createEClass(OP_STATEMENT);

    lightStatementEClass = createEClass(LIGHT_STATEMENT);
    createEAttribute(lightStatementEClass, LIGHT_STATEMENT__LIGHTS);
    createEAttribute(lightStatementEClass, LIGHT_STATEMENT__STATE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    setStatementEClass.getESuperTypes().add(this.getStatement());
    setTrackStatementEClass.getESuperTypes().add(this.getSetStatement());
    setPointStatementEClass.getESuperTypes().add(this.getSetStatement());
    waitStatementEClass.getESuperTypes().add(this.getStatement());
    timeWaitStatementEClass.getESuperTypes().add(this.getWaitStatement());
    contactWaitStatementEClass.getESuperTypes().add(this.getWaitStatement());
    opStatementEClass.getESuperTypes().add(this.getStatement());
    lightStatementEClass.getESuperTypes().add(this.getOpStatement());

    // Initialize classes and features; add operations and parameters
    initEClass(programEClass, Program.class, "Program", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getProgram_Blocks(), this.getBlock(), null, "blocks", null, 0, -1, Program.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(blockEClass, Block.class, "Block", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getBlock_Statements(), this.getStatement(), null, "statements", null, 0, -1, Block.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getBlock_End(), ecorePackage.getEString(), "end", null, 0, 1, Block.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(statementEClass, Statement.class, "Statement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(setStatementEClass, SetStatement.class, "SetStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(setTrackStatementEClass, SetTrackStatement.class, "SetTrackStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSetTrackStatement_Segments(), ecorePackage.getEString(), "segments", null, 0, -1, SetTrackStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSetTrackStatement_Mode(), ecorePackage.getEString(), "mode", null, 0, 1, SetTrackStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(setPointStatementEClass, SetPointStatement.class, "SetPointStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSetPointStatement_Points(), ecorePackage.getEInt(), "points", null, 0, -1, SetPointStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSetPointStatement_Orientation(), ecorePackage.getEString(), "orientation", null, 0, 1, SetPointStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(waitStatementEClass, WaitStatement.class, "WaitStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(timeWaitStatementEClass, TimeWaitStatement.class, "TimeWaitStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getTimeWaitStatement_Time(), ecorePackage.getEInt(), "time", null, 0, 1, TimeWaitStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(contactWaitStatementEClass, ContactWaitStatement.class, "ContactWaitStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getContactWaitStatement_Event(), ecorePackage.getEString(), "event", null, 0, 1, ContactWaitStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getContactWaitStatement_ContactIndex(), ecorePackage.getEString(), "contactIndex", null, 0, 1, ContactWaitStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getContactWaitStatement_SegName(), ecorePackage.getEString(), "segName", null, 0, 1, ContactWaitStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(opStatementEClass, OpStatement.class, "OpStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(lightStatementEClass, LightStatement.class, "LightStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getLightStatement_Lights(), ecorePackage.getEInt(), "lights", null, 0, -1, LightStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getLightStatement_State(), ecorePackage.getEString(), "state", null, 0, 1, LightStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Create resource
    createResource(eNS_URI);
  }

} //RailSLPackageImpl
