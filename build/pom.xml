<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>de.cau.cs.kieler</groupId>
  <artifactId>parent</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>pom</packaging>


  <!-- Define a few properties used throughout all build profiles. -->
  <properties>
    <tycho-version>1.2.0</tycho-version>
    <xtend-version>2.12.0</xtend-version>
    <targetJdk>1.8</targetJdk>
  
    <!-- Non-breakable space, as normal spaces are trimmed. -->
    <sourceFeatureLabelSuffix>&#xA0;(Sources)</sourceFeatureLabelSuffix>

    <!-- guarantee that we use utf8 for compilation, this is especially required due to xtend's template symbols (Â«) when running maven on windows. -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.build.resourceEncoding>UTF-8</project.build.resourceEncoding>
    <maven.compiler.encoding>UTF-8</maven.compiler.encoding>
    
    <!-- Updatesite for product build -->
    <kieler.semantics.updatesite>http://rtsys.informatik.uni-kiel.de/~kieler/updatesite/nightly/semantics/</kieler.semantics.updatesite>
  </properties>


  <!-- Define one profile for each output target we have. -->
  <profiles>
    <!-- The Semantics updatesite. -->
    <profile>
      <id>semantics</id>
      
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>

      <modules>
        <module>../plugins</module>
        <module>../features</module>
        <module>de.cau.cs.kieler.semantics.repository</module>
      </modules>
    </profile>
  

    <!-- The Semantics product. -->
    <profile>
      <id>semantics.product</id>
    
      <repositories>
        <repository>
          <id>p2.kieler-semantics</id>
          <layout>p2</layout>
          <url>${kieler.semantics.updatesite}</url>
        </repository>
      </repositories>
      
      <modules>
        <module>de.cau.cs.kieler.semantics.targetplatform</module>    
        <module>../plugins/de.cau.cs.kieler.core.product</module>
        <module>../features/de.cau.cs.kieler.product.feature</module>
        <module>de.cau.cs.kieler.semantics.product.repository</module>
      </modules>
    </profile>  


    <!-- The Semantics bechmarks. -->
    <profile>
      <id>semantics.benchmarks</id>
    
      <repositories>
        <repository>
          <id>p2.kieler-semantics</id>
          <layout>p2</layout>
          <url>${kieler.semantics.updatesite}</url>
        </repository>
      </repositories>
      
      <modules>
        <module>../test</module>
        <module>../features/de.cau.cs.kieler.benchmark.feature</module>
        <module>de.cau.cs.kieler.semantics.benchmark.repository</module>
        <module>de.cau.cs.kieler.semantics.targetplatform</module>  
      </modules>
    </profile> 
  
  </profiles>


  <!-- maven plugin repositories -->
  <pluginRepositories>
    <pluginRepository>
      <id>central</id>
      <name>Maven Plugin Repository</name>
      <url>http://repo1.maven.org/maven2</url>
    </pluginRepository>
    <pluginRepository>
      <id>xtend</id>
      <layout>default</layout>
      <url>http://build.eclipse.org/common/xtend/maven</url>
    </pluginRepository>
  </pluginRepositories>


  <build>
    <plugins>
      <!-- we need tycho plugin to build eclipse plugins -->
      <plugin>
        <groupId>org.eclipse.tycho</groupId>
        <artifactId>tycho-maven-plugin</artifactId>
        <version>${tycho-version}</version>
        <extensions>true</extensions>
      </plugin>

      <plugin>
        <groupId>org.eclipse.tycho</groupId>
        <artifactId>tycho-source-plugin</artifactId>
        <version>${tycho-version}</version>
        <executions>
          <execution>
            <id>plugin-source</id>
            <goals>
              <goal>plugin-source</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Enable java assertions during junit test runs. -->
      <!-- The "enableAssertions" property is only available in the maven-surefire plugin. -->
      <plugin>
        <groupId>org.eclipse.tycho</groupId>
        <artifactId>tycho-surefire-plugin</artifactId>
        <version>${tycho-version}</version>
        <configuration>
          <parallel>classes</parallel>
          <threadCount>4</threadCount>
          <argLine>-ea</argLine>
          <includes>
            <include>**/Test*.java</include>
            <include>**/*Test.java</include>
            <include>**/*Tests.java</include>
            <include>**/*TestCase.java</include>
          </includes>
          <excludes>
            <exclude>**/Abstract*.java</exclude>
          </excludes>
        </configuration>
      </plugin>      

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.8.1</version>
        <configuration>
          <doclet>de.cau.cs.kieler.doclets.rating.RatingDoclet</doclet>
          <docletArtifact>
            <groupId>de.cau.cs.kieler</groupId>
            <artifactId>de.cau.cs.kieler.doclets</artifactId>
            <version>0.0.1-SNAPSHOT</version>
          </docletArtifact>
          <useStandardDocletOptions>false</useStandardDocletOptions>
          <additionalJOption>-p semantics -d ./rating</additionalJOption>
          <excludedocfilessubdir>xtend-gen</excludedocfilessubdir>
        </configuration>
        <!--
        <executions>
          <execution>
            <id>aggregate</id>
            <goals>
              <goal>aggregate</goal>
            </goals>
            <phase>integration-test</phase>
          </execution>
        </executions>
        -->
      </plugin>


      <!-- as we have platform specific fragments we need to tell tycho about target platforms -->
      <plugin>
        <groupId>org.eclipse.tycho</groupId>
        <artifactId>target-platform-configuration</artifactId>
        <version>${tycho-version}</version>
        <configuration>      
          <target>
            <artifact>
              <groupId>de.cau.cs.kieler</groupId>
              <artifactId>de.cau.cs.kieler.semantics.targetplatform</artifactId>
              <version>0.1.0-SNAPSHOT</version>
            </artifact>
          </target>     
      
          <environments>
            <environment>
              <os>linux</os>
              <ws>gtk</ws>
              <arch>x86</arch>
            </environment>
            <environment>
              <os>linux</os>
              <ws>gtk</ws>
              <arch>x86_64</arch>
            </environment>
            <environment>
              <os>win32</os>
              <ws>win32</ws>
              <arch>x86</arch>
            </environment>
            <environment>
              <os>win32</os>
              <ws>win32</ws>
              <arch>x86_64</arch>
            </environment>
            <environment>
              <os>macosx</os>
              <ws>cocoa</ws>
              <arch>x86_64</arch>
            </environment>
          </environments>
        </configuration>
      </plugin>
    </plugins>
  
    <pluginManagement>
      <plugins>
        <!-- maven xtend plugin to tell maven how to compile xtend code -->
        <plugin>
          <groupId>org.eclipse.xtend</groupId>
          <artifactId>xtend-maven-plugin</artifactId>
          <version>${xtend-version}</version>
          <!-- Workaround for broken build from https://github.com/eclipse/xtext/issues/1231 -->
          <dependencies>
            <dependency>
              <groupId>org.eclipse.jdt</groupId>
              <artifactId>org.eclipse.jdt.core</artifactId>
              <version>3.12.2</version>
            </dependency>
          </dependencies>
          <!-- End Workaround -->
          <configuration>
            <outputDirectory>${basedir}/xtend-gen</outputDirectory>
            <javaSourceVersion>1.8</javaSourceVersion>
          </configuration>
        </plugin>
        <!-- add src-gen and xtend-gen to source-directories -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>1.3</version>
          <executions>
            <execution>
              <id>add-source</id>
              <phase>generate-sources</phase>
              <goals>
                <goal>add-source</goal>
              </goals>
              <configuration>
                <sources>
                  <source>src-gen</source>
                </sources>
                <sources>
                  <source>${project.build.directory}/xtend-gen</source>
                </sources>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <!-- generated code needs cleanup too -->
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>2.4.1</version>
          <configuration>
            <filesets>
              <fileset>
                <directory>xtend-gen</directory>
                <includes>
                  <include>**</include>
                </includes>
              </fileset>
            </filesets>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
