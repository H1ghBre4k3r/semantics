/**
 */
package de.cau.cs.kieler.esterel.esterel.provider;

import de.cau.cs.kieler.esterel.esterel.util.EsterelAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class EsterelItemProviderAdapterFactory extends EsterelAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    /**
     * This keeps track of the root adapter factory that delegates to this adapter factory.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ComposedAdapterFactory parentAdapterFactory;

    /**
     * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected IChangeNotifier changeNotifier = new ChangeNotifier();

    /**
     * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected Collection<Object> supportedTypes = new ArrayList<Object>();

    /**
     * This constructs an instance.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public EsterelItemProviderAdapterFactory() {
        supportedTypes.add(IEditingDomainItemProvider.class);
        supportedTypes.add(IStructuredItemContentProvider.class);
        supportedTypes.add(ITreeItemContentProvider.class);
        supportedTypes.add(IItemLabelProvider.class);
        supportedTypes.add(IItemPropertySource.class);
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.Program} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ProgramItemProvider programItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.Program}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createProgramAdapter() {
        if (programItemProvider == null) {
            programItemProvider = new ProgramItemProvider(this);
        }

        return programItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.Module} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ModuleItemProvider moduleItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.Module}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createModuleAdapter() {
        if (moduleItemProvider == null) {
            moduleItemProvider = new ModuleItemProvider(this);
        }

        return moduleItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.ModuleBody} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ModuleBodyItemProvider moduleBodyItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.ModuleBody}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createModuleBodyAdapter() {
        if (moduleBodyItemProvider == null) {
            moduleBodyItemProvider = new ModuleBodyItemProvider(this);
        }

        return moduleBodyItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.ModuleInterface} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ModuleInterfaceItemProvider moduleInterfaceItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.ModuleInterface}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createModuleInterfaceAdapter() {
        if (moduleInterfaceItemProvider == null) {
            moduleInterfaceItemProvider = new ModuleInterfaceItemProvider(this);
        }

        return moduleInterfaceItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.ChannelDescription} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ChannelDescriptionItemProvider channelDescriptionItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.ChannelDescription}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createChannelDescriptionAdapter() {
        if (channelDescriptionItemProvider == null) {
            channelDescriptionItemProvider = new ChannelDescriptionItemProvider(this);
        }

        return channelDescriptionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.TypeIdentifier} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected TypeIdentifierItemProvider typeIdentifierItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.TypeIdentifier}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createTypeIdentifierAdapter() {
        if (typeIdentifierItemProvider == null) {
            typeIdentifierItemProvider = new TypeIdentifierItemProvider(this);
        }

        return typeIdentifierItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.LocalSignalDecl} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected LocalSignalDeclItemProvider localSignalDeclItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.LocalSignalDecl}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createLocalSignalDeclAdapter() {
        if (localSignalDeclItemProvider == null) {
            localSignalDeclItemProvider = new LocalSignalDeclItemProvider(this);
        }

        return localSignalDeclItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.LocalSignalList} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected LocalSignalListItemProvider localSignalListItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.LocalSignalList}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createLocalSignalListAdapter() {
        if (localSignalListItemProvider == null) {
            localSignalListItemProvider = new LocalSignalListItemProvider(this);
        }

        return localSignalListItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.SensorDecl} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected SensorDeclItemProvider sensorDeclItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.SensorDecl}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createSensorDeclAdapter() {
        if (sensorDeclItemProvider == null) {
            sensorDeclItemProvider = new SensorDeclItemProvider(this);
        }

        return sensorDeclItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.SensorWithType} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected SensorWithTypeItemProvider sensorWithTypeItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.SensorWithType}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createSensorWithTypeAdapter() {
        if (sensorWithTypeItemProvider == null) {
            sensorWithTypeItemProvider = new SensorWithTypeItemProvider(this);
        }

        return sensorWithTypeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.RelationDecl} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected RelationDeclItemProvider relationDeclItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.RelationDecl}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createRelationDeclAdapter() {
        if (relationDeclItemProvider == null) {
            relationDeclItemProvider = new RelationDeclItemProvider(this);
        }

        return relationDeclItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.RelationType} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected RelationTypeItemProvider relationTypeItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.RelationType}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createRelationTypeAdapter() {
        if (relationTypeItemProvider == null) {
            relationTypeItemProvider = new RelationTypeItemProvider(this);
        }

        return relationTypeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.RelationImplication} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected RelationImplicationItemProvider relationImplicationItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.RelationImplication}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createRelationImplicationAdapter() {
        if (relationImplicationItemProvider == null) {
            relationImplicationItemProvider = new RelationImplicationItemProvider(this);
        }

        return relationImplicationItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.RelationIncompatibility} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected RelationIncompatibilityItemProvider relationIncompatibilityItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.RelationIncompatibility}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createRelationIncompatibilityAdapter() {
        if (relationIncompatibilityItemProvider == null) {
            relationIncompatibilityItemProvider = new RelationIncompatibilityItemProvider(this);
        }

        return relationIncompatibilityItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.TypeDecl} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected TypeDeclItemProvider typeDeclItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.TypeDecl}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createTypeDeclAdapter() {
        if (typeDeclItemProvider == null) {
            typeDeclItemProvider = new TypeDeclItemProvider(this);
        }

        return typeDeclItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.Type} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected TypeItemProvider typeItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.Type}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createTypeAdapter() {
        if (typeItemProvider == null) {
            typeItemProvider = new TypeItemProvider(this);
        }

        return typeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.ConstantDecls} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ConstantDeclsItemProvider constantDeclsItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.ConstantDecls}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createConstantDeclsAdapter() {
        if (constantDeclsItemProvider == null) {
            constantDeclsItemProvider = new ConstantDeclsItemProvider(this);
        }

        return constantDeclsItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.OneTypeConstantDecls} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected OneTypeConstantDeclsItemProvider oneTypeConstantDeclsItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.OneTypeConstantDecls}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createOneTypeConstantDeclsAdapter() {
        if (oneTypeConstantDeclsItemProvider == null) {
            oneTypeConstantDeclsItemProvider = new OneTypeConstantDeclsItemProvider(this);
        }

        return oneTypeConstantDeclsItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.ConstantWithValue} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ConstantWithValueItemProvider constantWithValueItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.ConstantWithValue}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createConstantWithValueAdapter() {
        if (constantWithValueItemProvider == null) {
            constantWithValueItemProvider = new ConstantWithValueItemProvider(this);
        }

        return constantWithValueItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.FunctionDecl} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected FunctionDeclItemProvider functionDeclItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.FunctionDecl}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createFunctionDeclAdapter() {
        if (functionDeclItemProvider == null) {
            functionDeclItemProvider = new FunctionDeclItemProvider(this);
        }

        return functionDeclItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.Function} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected FunctionItemProvider functionItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.Function}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createFunctionAdapter() {
        if (functionItemProvider == null) {
            functionItemProvider = new FunctionItemProvider(this);
        }

        return functionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.ProcedureDecl} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ProcedureDeclItemProvider procedureDeclItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.ProcedureDecl}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createProcedureDeclAdapter() {
        if (procedureDeclItemProvider == null) {
            procedureDeclItemProvider = new ProcedureDeclItemProvider(this);
        }

        return procedureDeclItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.Procedure} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ProcedureItemProvider procedureItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.Procedure}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createProcedureAdapter() {
        if (procedureItemProvider == null) {
            procedureItemProvider = new ProcedureItemProvider(this);
        }

        return procedureItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.TaskDecl} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected TaskDeclItemProvider taskDeclItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.TaskDecl}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createTaskDeclAdapter() {
        if (taskDeclItemProvider == null) {
            taskDeclItemProvider = new TaskDeclItemProvider(this);
        }

        return taskDeclItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.Task} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected TaskItemProvider taskItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.Task}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createTaskAdapter() {
        if (taskItemProvider == null) {
            taskItemProvider = new TaskItemProvider(this);
        }

        return taskItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.StatementContainer} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected StatementContainerItemProvider statementContainerItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.StatementContainer}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createStatementContainerAdapter() {
        if (statementContainerItemProvider == null) {
            statementContainerItemProvider = new StatementContainerItemProvider(this);
        }

        return statementContainerItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.Statement} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected StatementItemProvider statementItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.Statement}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createStatementAdapter() {
        if (statementItemProvider == null) {
            statementItemProvider = new StatementItemProvider(this);
        }

        return statementItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.Block} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected BlockItemProvider blockItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.Block}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createBlockAdapter() {
        if (blockItemProvider == null) {
            blockItemProvider = new BlockItemProvider(this);
        }

        return blockItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.Assignment} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected AssignmentItemProvider assignmentItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.Assignment}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createAssignmentAdapter() {
        if (assignmentItemProvider == null) {
            assignmentItemProvider = new AssignmentItemProvider(this);
        }

        return assignmentItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.Abort} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected AbortItemProvider abortItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.Abort}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createAbortAdapter() {
        if (abortItemProvider == null) {
            abortItemProvider = new AbortItemProvider(this);
        }

        return abortItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.AbortBody} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected AbortBodyItemProvider abortBodyItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.AbortBody}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createAbortBodyAdapter() {
        if (abortBodyItemProvider == null) {
            abortBodyItemProvider = new AbortBodyItemProvider(this);
        }

        return abortBodyItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.AbortInstance} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected AbortInstanceItemProvider abortInstanceItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.AbortInstance}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createAbortInstanceAdapter() {
        if (abortInstanceItemProvider == null) {
            abortInstanceItemProvider = new AbortInstanceItemProvider(this);
        }

        return abortInstanceItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.AbortCase} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected AbortCaseItemProvider abortCaseItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.AbortCase}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createAbortCaseAdapter() {
        if (abortCaseItemProvider == null) {
            abortCaseItemProvider = new AbortCaseItemProvider(this);
        }

        return abortCaseItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.AbortCaseSingle} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected AbortCaseSingleItemProvider abortCaseSingleItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.AbortCaseSingle}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createAbortCaseSingleAdapter() {
        if (abortCaseSingleItemProvider == null) {
            abortCaseSingleItemProvider = new AbortCaseSingleItemProvider(this);
        }

        return abortCaseSingleItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.WeakAbortBody} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected WeakAbortBodyItemProvider weakAbortBodyItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.WeakAbortBody}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createWeakAbortBodyAdapter() {
        if (weakAbortBodyItemProvider == null) {
            weakAbortBodyItemProvider = new WeakAbortBodyItemProvider(this);
        }

        return weakAbortBodyItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.WeakAbortEnd} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected WeakAbortEndItemProvider weakAbortEndItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.WeakAbortEnd}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createWeakAbortEndAdapter() {
        if (weakAbortEndItemProvider == null) {
            weakAbortEndItemProvider = new WeakAbortEndItemProvider(this);
        }

        return weakAbortEndItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.WeakAbortEndAlt} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected WeakAbortEndAltItemProvider weakAbortEndAltItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.WeakAbortEndAlt}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createWeakAbortEndAltAdapter() {
        if (weakAbortEndAltItemProvider == null) {
            weakAbortEndAltItemProvider = new WeakAbortEndAltItemProvider(this);
        }

        return weakAbortEndAltItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.Await} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected AwaitItemProvider awaitItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.Await}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createAwaitAdapter() {
        if (awaitItemProvider == null) {
            awaitItemProvider = new AwaitItemProvider(this);
        }

        return awaitItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.AwaitBody} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected AwaitBodyItemProvider awaitBodyItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.AwaitBody}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createAwaitBodyAdapter() {
        if (awaitBodyItemProvider == null) {
            awaitBodyItemProvider = new AwaitBodyItemProvider(this);
        }

        return awaitBodyItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.AwaitInstance} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected AwaitInstanceItemProvider awaitInstanceItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.AwaitInstance}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createAwaitInstanceAdapter() {
        if (awaitInstanceItemProvider == null) {
            awaitInstanceItemProvider = new AwaitInstanceItemProvider(this);
        }

        return awaitInstanceItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.AwaitCase} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected AwaitCaseItemProvider awaitCaseItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.AwaitCase}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createAwaitCaseAdapter() {
        if (awaitCaseItemProvider == null) {
            awaitCaseItemProvider = new AwaitCaseItemProvider(this);
        }

        return awaitCaseItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.ProcCall} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ProcCallItemProvider procCallItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.ProcCall}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createProcCallAdapter() {
        if (procCallItemProvider == null) {
            procCallItemProvider = new ProcCallItemProvider(this);
        }

        return procCallItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.Do} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected DoItemProvider doItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.Do}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createDoAdapter() {
        if (doItemProvider == null) {
            doItemProvider = new DoItemProvider(this);
        }

        return doItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.DoUpto} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected DoUptoItemProvider doUptoItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.DoUpto}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createDoUptoAdapter() {
        if (doUptoItemProvider == null) {
            doUptoItemProvider = new DoUptoItemProvider(this);
        }

        return doUptoItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.DoWatching} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected DoWatchingItemProvider doWatchingItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.DoWatching}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createDoWatchingAdapter() {
        if (doWatchingItemProvider == null) {
            doWatchingItemProvider = new DoWatchingItemProvider(this);
        }

        return doWatchingItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.DoWatchingEnd} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected DoWatchingEndItemProvider doWatchingEndItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.DoWatchingEnd}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createDoWatchingEndAdapter() {
        if (doWatchingEndItemProvider == null) {
            doWatchingEndItemProvider = new DoWatchingEndItemProvider(this);
        }

        return doWatchingEndItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.Emit} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected EmitItemProvider emitItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.Emit}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createEmitAdapter() {
        if (emitItemProvider == null) {
            emitItemProvider = new EmitItemProvider(this);
        }

        return emitItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.EveryDo} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected EveryDoItemProvider everyDoItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.EveryDo}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createEveryDoAdapter() {
        if (everyDoItemProvider == null) {
            everyDoItemProvider = new EveryDoItemProvider(this);
        }

        return everyDoItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.Exit} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ExitItemProvider exitItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.Exit}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createExitAdapter() {
        if (exitItemProvider == null) {
            exitItemProvider = new ExitItemProvider(this);
        }

        return exitItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.Halt} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected HaltItemProvider haltItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.Halt}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createHaltAdapter() {
        if (haltItemProvider == null) {
            haltItemProvider = new HaltItemProvider(this);
        }

        return haltItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.IfTest} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected IfTestItemProvider ifTestItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.IfTest}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createIfTestAdapter() {
        if (ifTestItemProvider == null) {
            ifTestItemProvider = new IfTestItemProvider(this);
        }

        return ifTestItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.ElsIf} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ElsIfItemProvider elsIfItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.ElsIf}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createElsIfAdapter() {
        if (elsIfItemProvider == null) {
            elsIfItemProvider = new ElsIfItemProvider(this);
        }

        return elsIfItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.ThenPart} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ThenPartItemProvider thenPartItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.ThenPart}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createThenPartAdapter() {
        if (thenPartItemProvider == null) {
            thenPartItemProvider = new ThenPartItemProvider(this);
        }

        return thenPartItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.ElsePart} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ElsePartItemProvider elsePartItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.ElsePart}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createElsePartAdapter() {
        if (elsePartItemProvider == null) {
            elsePartItemProvider = new ElsePartItemProvider(this);
        }

        return elsePartItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.Loop} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected LoopItemProvider loopItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.Loop}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createLoopAdapter() {
        if (loopItemProvider == null) {
            loopItemProvider = new LoopItemProvider(this);
        }

        return loopItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.EndLoop} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected EndLoopItemProvider endLoopItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.EndLoop}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createEndLoopAdapter() {
        if (endLoopItemProvider == null) {
            endLoopItemProvider = new EndLoopItemProvider(this);
        }

        return endLoopItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.LoopEach} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected LoopEachItemProvider loopEachItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.LoopEach}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createLoopEachAdapter() {
        if (loopEachItemProvider == null) {
            loopEachItemProvider = new LoopEachItemProvider(this);
        }

        return loopEachItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.LoopDelay} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected LoopDelayItemProvider loopDelayItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.LoopDelay}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createLoopDelayAdapter() {
        if (loopDelayItemProvider == null) {
            loopDelayItemProvider = new LoopDelayItemProvider(this);
        }

        return loopDelayItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.LoopBody} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected LoopBodyItemProvider loopBodyItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.LoopBody}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createLoopBodyAdapter() {
        if (loopBodyItemProvider == null) {
            loopBodyItemProvider = new LoopBodyItemProvider(this);
        }

        return loopBodyItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.Nothing} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected NothingItemProvider nothingItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.Nothing}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createNothingAdapter() {
        if (nothingItemProvider == null) {
            nothingItemProvider = new NothingItemProvider(this);
        }

        return nothingItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.Pause} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected PauseItemProvider pauseItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.Pause}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createPauseAdapter() {
        if (pauseItemProvider == null) {
            pauseItemProvider = new PauseItemProvider(this);
        }

        return pauseItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.Present} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected PresentItemProvider presentItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.Present}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createPresentAdapter() {
        if (presentItemProvider == null) {
            presentItemProvider = new PresentItemProvider(this);
        }

        return presentItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.PresentBody} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected PresentBodyItemProvider presentBodyItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.PresentBody}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createPresentBodyAdapter() {
        if (presentBodyItemProvider == null) {
            presentBodyItemProvider = new PresentBodyItemProvider(this);
        }

        return presentBodyItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.PresentEventBody} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected PresentEventBodyItemProvider presentEventBodyItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.PresentEventBody}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createPresentEventBodyAdapter() {
        if (presentEventBodyItemProvider == null) {
            presentEventBodyItemProvider = new PresentEventBodyItemProvider(this);
        }

        return presentEventBodyItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.PresentCaseList} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected PresentCaseListItemProvider presentCaseListItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.PresentCaseList}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createPresentCaseListAdapter() {
        if (presentCaseListItemProvider == null) {
            presentCaseListItemProvider = new PresentCaseListItemProvider(this);
        }

        return presentCaseListItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.PresentCase} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected PresentCaseItemProvider presentCaseItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.PresentCase}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createPresentCaseAdapter() {
        if (presentCaseItemProvider == null) {
            presentCaseItemProvider = new PresentCaseItemProvider(this);
        }

        return presentCaseItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.PresentEvent} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected PresentEventItemProvider presentEventItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.PresentEvent}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createPresentEventAdapter() {
        if (presentEventItemProvider == null) {
            presentEventItemProvider = new PresentEventItemProvider(this);
        }

        return presentEventItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.Repeat} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected RepeatItemProvider repeatItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.Repeat}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createRepeatAdapter() {
        if (repeatItemProvider == null) {
            repeatItemProvider = new RepeatItemProvider(this);
        }

        return repeatItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.Run} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected RunItemProvider runItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.Run}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createRunAdapter() {
        if (runItemProvider == null) {
            runItemProvider = new RunItemProvider(this);
        }

        return runItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.ModuleRenaming} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ModuleRenamingItemProvider moduleRenamingItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.ModuleRenaming}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createModuleRenamingAdapter() {
        if (moduleRenamingItemProvider == null) {
            moduleRenamingItemProvider = new ModuleRenamingItemProvider(this);
        }

        return moduleRenamingItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.RenamingList} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected RenamingListItemProvider renamingListItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.RenamingList}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createRenamingListAdapter() {
        if (renamingListItemProvider == null) {
            renamingListItemProvider = new RenamingListItemProvider(this);
        }

        return renamingListItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.Renaming} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected RenamingItemProvider renamingItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.Renaming}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createRenamingAdapter() {
        if (renamingItemProvider == null) {
            renamingItemProvider = new RenamingItemProvider(this);
        }

        return renamingItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.TypeRenaming} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected TypeRenamingItemProvider typeRenamingItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.TypeRenaming}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createTypeRenamingAdapter() {
        if (typeRenamingItemProvider == null) {
            typeRenamingItemProvider = new TypeRenamingItemProvider(this);
        }

        return typeRenamingItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.ConstantRenaming} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ConstantRenamingItemProvider constantRenamingItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.ConstantRenaming}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createConstantRenamingAdapter() {
        if (constantRenamingItemProvider == null) {
            constantRenamingItemProvider = new ConstantRenamingItemProvider(this);
        }

        return constantRenamingItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.FunctionRenaming} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected FunctionRenamingItemProvider functionRenamingItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.FunctionRenaming}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createFunctionRenamingAdapter() {
        if (functionRenamingItemProvider == null) {
            functionRenamingItemProvider = new FunctionRenamingItemProvider(this);
        }

        return functionRenamingItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.ProcedureRenaming} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ProcedureRenamingItemProvider procedureRenamingItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.ProcedureRenaming}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createProcedureRenamingAdapter() {
        if (procedureRenamingItemProvider == null) {
            procedureRenamingItemProvider = new ProcedureRenamingItemProvider(this);
        }

        return procedureRenamingItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.TaskRenaming} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected TaskRenamingItemProvider taskRenamingItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.TaskRenaming}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createTaskRenamingAdapter() {
        if (taskRenamingItemProvider == null) {
            taskRenamingItemProvider = new TaskRenamingItemProvider(this);
        }

        return taskRenamingItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.SignalRenaming} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected SignalRenamingItemProvider signalRenamingItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.SignalRenaming}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createSignalRenamingAdapter() {
        if (signalRenamingItemProvider == null) {
            signalRenamingItemProvider = new SignalRenamingItemProvider(this);
        }

        return signalRenamingItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.Suspend} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected SuspendItemProvider suspendItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.Suspend}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createSuspendAdapter() {
        if (suspendItemProvider == null) {
            suspendItemProvider = new SuspendItemProvider(this);
        }

        return suspendItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.Sustain} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected SustainItemProvider sustainItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.Sustain}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createSustainAdapter() {
        if (sustainItemProvider == null) {
            sustainItemProvider = new SustainItemProvider(this);
        }

        return sustainItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.Trap} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected TrapItemProvider trapItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.Trap}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createTrapAdapter() {
        if (trapItemProvider == null) {
            trapItemProvider = new TrapItemProvider(this);
        }

        return trapItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.TrapDeclList} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected TrapDeclListItemProvider trapDeclListItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.TrapDeclList}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createTrapDeclListAdapter() {
        if (trapDeclListItemProvider == null) {
            trapDeclListItemProvider = new TrapDeclListItemProvider(this);
        }

        return trapDeclListItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.TrapHandler} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected TrapHandlerItemProvider trapHandlerItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.TrapHandler}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createTrapHandlerAdapter() {
        if (trapHandlerItemProvider == null) {
            trapHandlerItemProvider = new TrapHandlerItemProvider(this);
        }

        return trapHandlerItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.LocalVariable} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected LocalVariableItemProvider localVariableItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.LocalVariable}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createLocalVariableAdapter() {
        if (localVariableItemProvider == null) {
            localVariableItemProvider = new LocalVariableItemProvider(this);
        }

        return localVariableItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.Goto} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected GotoItemProvider gotoItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.Goto}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createGotoAdapter() {
        if (gotoItemProvider == null) {
            gotoItemProvider = new GotoItemProvider(this);
        }

        return gotoItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.Label} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected LabelItemProvider labelItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.Label}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createLabelAdapter() {
        if (labelItemProvider == null) {
            labelItemProvider = new LabelItemProvider(this);
        }

        return labelItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.DelayExpr} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected DelayExprItemProvider delayExprItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.DelayExpr}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createDelayExprAdapter() {
        if (delayExprItemProvider == null) {
            delayExprItemProvider = new DelayExprItemProvider(this);
        }

        return delayExprItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.DelayEvent} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected DelayEventItemProvider delayEventItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.DelayEvent}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createDelayEventAdapter() {
        if (delayEventItemProvider == null) {
            delayEventItemProvider = new DelayEventItemProvider(this);
        }

        return delayEventItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.Exec} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ExecItemProvider execItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.Exec}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createExecAdapter() {
        if (execItemProvider == null) {
            execItemProvider = new ExecItemProvider(this);
        }

        return execItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.ExecBody} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ExecBodyItemProvider execBodyItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.ExecBody}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createExecBodyAdapter() {
        if (execBodyItemProvider == null) {
            execBodyItemProvider = new ExecBodyItemProvider(this);
        }

        return execBodyItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.ExecCase} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ExecCaseItemProvider execCaseItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.ExecCase}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createExecCaseAdapter() {
        if (execCaseItemProvider == null) {
            execCaseItemProvider = new ExecCaseItemProvider(this);
        }

        return execCaseItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.EsterelTypeIdentifier} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected EsterelTypeIdentifierItemProvider esterelTypeIdentifierItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.EsterelTypeIdentifier}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createEsterelTypeIdentifierAdapter() {
        if (esterelTypeIdentifierItemProvider == null) {
            esterelTypeIdentifierItemProvider = new EsterelTypeIdentifierItemProvider(this);
        }

        return esterelTypeIdentifierItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.EsterelType} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected EsterelTypeItemProvider esterelTypeItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.EsterelType}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createEsterelTypeAdapter() {
        if (esterelTypeItemProvider == null) {
            esterelTypeItemProvider = new EsterelTypeItemProvider(this);
        }

        return esterelTypeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.LocalSignal} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected LocalSignalItemProvider localSignalItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.LocalSignal}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createLocalSignalAdapter() {
        if (localSignalItemProvider == null) {
            localSignalItemProvider = new LocalSignalItemProvider(this);
        }

        return localSignalItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.Relation} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected RelationItemProvider relationItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.Relation}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createRelationAdapter() {
        if (relationItemProvider == null) {
            relationItemProvider = new RelationItemProvider(this);
        }

        return relationItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.Constant} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ConstantItemProvider constantItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.Constant}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createConstantAdapter() {
        if (constantItemProvider == null) {
            constantItemProvider = new ConstantItemProvider(this);
        }

        return constantItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.Parallel} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ParallelItemProvider parallelItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.Parallel}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createParallelAdapter() {
        if (parallelItemProvider == null) {
            parallelItemProvider = new ParallelItemProvider(this);
        }

        return parallelItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.Sequence} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected SequenceItemProvider sequenceItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.Sequence}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createSequenceAdapter() {
        if (sequenceItemProvider == null) {
            sequenceItemProvider = new SequenceItemProvider(this);
        }

        return sequenceItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.WeakAbort} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected WeakAbortItemProvider weakAbortItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.WeakAbort}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createWeakAbortAdapter() {
        if (weakAbortItemProvider == null) {
            weakAbortItemProvider = new WeakAbortItemProvider(this);
        }

        return weakAbortItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.WeakAbortInstance} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected WeakAbortInstanceItemProvider weakAbortInstanceItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.WeakAbortInstance}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createWeakAbortInstanceAdapter() {
        if (weakAbortInstanceItemProvider == null) {
            weakAbortInstanceItemProvider = new WeakAbortInstanceItemProvider(this);
        }

        return weakAbortInstanceItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.WeakAbortCase} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected WeakAbortCaseItemProvider weakAbortCaseItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.WeakAbortCase}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createWeakAbortCaseAdapter() {
        if (weakAbortCaseItemProvider == null) {
            weakAbortCaseItemProvider = new WeakAbortCaseItemProvider(this);
        }

        return weakAbortCaseItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.TrapDecl} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected TrapDeclItemProvider trapDeclItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.TrapDecl}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createTrapDeclAdapter() {
        if (trapDeclItemProvider == null) {
            trapDeclItemProvider = new TrapDeclItemProvider(this);
        }

        return trapDeclItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.TrapExpression} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected TrapExpressionItemProvider trapExpressionItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.TrapExpression}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createTrapExpressionAdapter() {
        if (trapExpressionItemProvider == null) {
            trapExpressionItemProvider = new TrapExpressionItemProvider(this);
        }

        return trapExpressionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.FunctionExpression} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected FunctionExpressionItemProvider functionExpressionItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.FunctionExpression}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createFunctionExpressionAdapter() {
        if (functionExpressionItemProvider == null) {
            functionExpressionItemProvider = new FunctionExpressionItemProvider(this);
        }

        return functionExpressionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.ConstantExpression} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ConstantExpressionItemProvider constantExpressionItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.ConstantExpression}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createConstantExpressionAdapter() {
        if (constantExpressionItemProvider == null) {
            constantExpressionItemProvider = new ConstantExpressionItemProvider(this);
        }

        return constantExpressionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.TrapReferenceExpr} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected TrapReferenceExprItemProvider trapReferenceExprItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.TrapReferenceExpr}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createTrapReferenceExprAdapter() {
        if (trapReferenceExprItemProvider == null) {
            trapReferenceExprItemProvider = new TrapReferenceExprItemProvider(this);
        }

        return trapReferenceExprItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cau.cs.kieler.esterel.esterel.WeakSuspend} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected WeakSuspendItemProvider weakSuspendItemProvider;

    /**
     * This creates an adapter for a {@link de.cau.cs.kieler.esterel.esterel.WeakSuspend}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createWeakSuspendAdapter() {
        if (weakSuspendItemProvider == null) {
            weakSuspendItemProvider = new WeakSuspendItemProvider(this);
        }

        return weakSuspendItemProvider;
    }

    /**
     * This returns the root adapter factory that contains this factory.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public ComposeableAdapterFactory getRootAdapterFactory() {
        return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
    }

    /**
     * This sets the composed adapter factory that contains this factory.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
        this.parentAdapterFactory = parentAdapterFactory;
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public boolean isFactoryForType(Object type) {
        return supportedTypes.contains(type) || super.isFactoryForType(type);
    }

    /**
     * This implementation substitutes the factory itself as the key for the adapter.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter adapt(Notifier notifier, Object type) {
        return super.adapt(notifier, this);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Object adapt(Object object, Object type) {
        if (isFactoryForType(type)) {
            Object adapter = super.adapt(object, type);
            if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
                return adapter;
            }
        }

        return null;
    }

    /**
     * This adds a listener.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public void addListener(INotifyChangedListener notifyChangedListener) {
        changeNotifier.addListener(notifyChangedListener);
    }

    /**
     * This removes a listener.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public void removeListener(INotifyChangedListener notifyChangedListener) {
        changeNotifier.removeListener(notifyChangedListener);
    }

    /**
     * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public void fireNotifyChanged(Notification notification) {
        changeNotifier.fireNotifyChanged(notification);

        if (parentAdapterFactory != null) {
            parentAdapterFactory.fireNotifyChanged(notification);
        }
    }

    /**
     * This disposes all of the item providers created by this factory. 
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public void dispose() {
        if (programItemProvider != null) programItemProvider.dispose();
        if (moduleItemProvider != null) moduleItemProvider.dispose();
        if (moduleBodyItemProvider != null) moduleBodyItemProvider.dispose();
        if (moduleInterfaceItemProvider != null) moduleInterfaceItemProvider.dispose();
        if (channelDescriptionItemProvider != null) channelDescriptionItemProvider.dispose();
        if (typeIdentifierItemProvider != null) typeIdentifierItemProvider.dispose();
        if (localSignalDeclItemProvider != null) localSignalDeclItemProvider.dispose();
        if (localSignalListItemProvider != null) localSignalListItemProvider.dispose();
        if (sensorDeclItemProvider != null) sensorDeclItemProvider.dispose();
        if (sensorWithTypeItemProvider != null) sensorWithTypeItemProvider.dispose();
        if (relationDeclItemProvider != null) relationDeclItemProvider.dispose();
        if (relationTypeItemProvider != null) relationTypeItemProvider.dispose();
        if (relationImplicationItemProvider != null) relationImplicationItemProvider.dispose();
        if (relationIncompatibilityItemProvider != null) relationIncompatibilityItemProvider.dispose();
        if (typeDeclItemProvider != null) typeDeclItemProvider.dispose();
        if (typeItemProvider != null) typeItemProvider.dispose();
        if (constantDeclsItemProvider != null) constantDeclsItemProvider.dispose();
        if (oneTypeConstantDeclsItemProvider != null) oneTypeConstantDeclsItemProvider.dispose();
        if (constantWithValueItemProvider != null) constantWithValueItemProvider.dispose();
        if (functionDeclItemProvider != null) functionDeclItemProvider.dispose();
        if (functionItemProvider != null) functionItemProvider.dispose();
        if (procedureDeclItemProvider != null) procedureDeclItemProvider.dispose();
        if (procedureItemProvider != null) procedureItemProvider.dispose();
        if (taskDeclItemProvider != null) taskDeclItemProvider.dispose();
        if (taskItemProvider != null) taskItemProvider.dispose();
        if (statementContainerItemProvider != null) statementContainerItemProvider.dispose();
        if (statementItemProvider != null) statementItemProvider.dispose();
        if (blockItemProvider != null) blockItemProvider.dispose();
        if (assignmentItemProvider != null) assignmentItemProvider.dispose();
        if (abortItemProvider != null) abortItemProvider.dispose();
        if (abortBodyItemProvider != null) abortBodyItemProvider.dispose();
        if (abortInstanceItemProvider != null) abortInstanceItemProvider.dispose();
        if (abortCaseItemProvider != null) abortCaseItemProvider.dispose();
        if (abortCaseSingleItemProvider != null) abortCaseSingleItemProvider.dispose();
        if (weakAbortBodyItemProvider != null) weakAbortBodyItemProvider.dispose();
        if (weakAbortEndItemProvider != null) weakAbortEndItemProvider.dispose();
        if (weakAbortEndAltItemProvider != null) weakAbortEndAltItemProvider.dispose();
        if (awaitItemProvider != null) awaitItemProvider.dispose();
        if (awaitBodyItemProvider != null) awaitBodyItemProvider.dispose();
        if (awaitInstanceItemProvider != null) awaitInstanceItemProvider.dispose();
        if (awaitCaseItemProvider != null) awaitCaseItemProvider.dispose();
        if (procCallItemProvider != null) procCallItemProvider.dispose();
        if (doItemProvider != null) doItemProvider.dispose();
        if (doUptoItemProvider != null) doUptoItemProvider.dispose();
        if (doWatchingItemProvider != null) doWatchingItemProvider.dispose();
        if (doWatchingEndItemProvider != null) doWatchingEndItemProvider.dispose();
        if (emitItemProvider != null) emitItemProvider.dispose();
        if (everyDoItemProvider != null) everyDoItemProvider.dispose();
        if (exitItemProvider != null) exitItemProvider.dispose();
        if (haltItemProvider != null) haltItemProvider.dispose();
        if (ifTestItemProvider != null) ifTestItemProvider.dispose();
        if (elsIfItemProvider != null) elsIfItemProvider.dispose();
        if (thenPartItemProvider != null) thenPartItemProvider.dispose();
        if (elsePartItemProvider != null) elsePartItemProvider.dispose();
        if (loopItemProvider != null) loopItemProvider.dispose();
        if (endLoopItemProvider != null) endLoopItemProvider.dispose();
        if (loopEachItemProvider != null) loopEachItemProvider.dispose();
        if (loopDelayItemProvider != null) loopDelayItemProvider.dispose();
        if (loopBodyItemProvider != null) loopBodyItemProvider.dispose();
        if (nothingItemProvider != null) nothingItemProvider.dispose();
        if (pauseItemProvider != null) pauseItemProvider.dispose();
        if (presentItemProvider != null) presentItemProvider.dispose();
        if (presentBodyItemProvider != null) presentBodyItemProvider.dispose();
        if (presentEventBodyItemProvider != null) presentEventBodyItemProvider.dispose();
        if (presentCaseListItemProvider != null) presentCaseListItemProvider.dispose();
        if (presentCaseItemProvider != null) presentCaseItemProvider.dispose();
        if (presentEventItemProvider != null) presentEventItemProvider.dispose();
        if (repeatItemProvider != null) repeatItemProvider.dispose();
        if (runItemProvider != null) runItemProvider.dispose();
        if (moduleRenamingItemProvider != null) moduleRenamingItemProvider.dispose();
        if (renamingListItemProvider != null) renamingListItemProvider.dispose();
        if (renamingItemProvider != null) renamingItemProvider.dispose();
        if (typeRenamingItemProvider != null) typeRenamingItemProvider.dispose();
        if (constantRenamingItemProvider != null) constantRenamingItemProvider.dispose();
        if (functionRenamingItemProvider != null) functionRenamingItemProvider.dispose();
        if (procedureRenamingItemProvider != null) procedureRenamingItemProvider.dispose();
        if (taskRenamingItemProvider != null) taskRenamingItemProvider.dispose();
        if (signalRenamingItemProvider != null) signalRenamingItemProvider.dispose();
        if (suspendItemProvider != null) suspendItemProvider.dispose();
        if (weakSuspendItemProvider != null) weakSuspendItemProvider.dispose();
        if (sustainItemProvider != null) sustainItemProvider.dispose();
        if (trapItemProvider != null) trapItemProvider.dispose();
        if (trapDeclListItemProvider != null) trapDeclListItemProvider.dispose();
        if (trapHandlerItemProvider != null) trapHandlerItemProvider.dispose();
        if (localVariableItemProvider != null) localVariableItemProvider.dispose();
        if (gotoItemProvider != null) gotoItemProvider.dispose();
        if (labelItemProvider != null) labelItemProvider.dispose();
        if (delayExprItemProvider != null) delayExprItemProvider.dispose();
        if (delayEventItemProvider != null) delayEventItemProvider.dispose();
        if (execItemProvider != null) execItemProvider.dispose();
        if (execBodyItemProvider != null) execBodyItemProvider.dispose();
        if (execCaseItemProvider != null) execCaseItemProvider.dispose();
        if (esterelTypeIdentifierItemProvider != null) esterelTypeIdentifierItemProvider.dispose();
        if (esterelTypeItemProvider != null) esterelTypeItemProvider.dispose();
        if (localSignalItemProvider != null) localSignalItemProvider.dispose();
        if (relationItemProvider != null) relationItemProvider.dispose();
        if (constantItemProvider != null) constantItemProvider.dispose();
        if (parallelItemProvider != null) parallelItemProvider.dispose();
        if (sequenceItemProvider != null) sequenceItemProvider.dispose();
        if (weakAbortItemProvider != null) weakAbortItemProvider.dispose();
        if (weakAbortInstanceItemProvider != null) weakAbortInstanceItemProvider.dispose();
        if (weakAbortCaseItemProvider != null) weakAbortCaseItemProvider.dispose();
        if (trapDeclItemProvider != null) trapDeclItemProvider.dispose();
        if (trapExpressionItemProvider != null) trapExpressionItemProvider.dispose();
        if (functionExpressionItemProvider != null) functionExpressionItemProvider.dispose();
        if (constantExpressionItemProvider != null) constantExpressionItemProvider.dispose();
        if (trapReferenceExprItemProvider != null) trapReferenceExprItemProvider.dispose();
    }

}
