/*
 * generated by Xtext 2.10.0
 */
grammar InternalLustre;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package de.cau.cs.kieler.lustre.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.cau.cs.kieler.lustre.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import de.cau.cs.kieler.lustre.services.LustreGrammarAccess;

}
@parser::members {
	private LustreGrammarAccess grammarAccess;

	public void setGrammarAccess(LustreGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleProgram
entryRuleProgram
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_LUSTRE_COMMENT");
}
:
{ before(grammarAccess.getProgramRule()); }
	 ruleProgram
{ after(grammarAccess.getProgramRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Program
ruleProgram 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_LUSTRE_COMMENT");
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProgramAccess().getPkgAssignment()); }
		(rule__Program__PkgAssignment)
		{ after(grammarAccess.getProgramAccess().getPkgAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRulePackage
entryRulePackage
:
{ before(grammarAccess.getPackageRule()); }
	 rulePackage
{ after(grammarAccess.getPackageRule()); } 
	 EOF 
;

// Rule Package
rulePackage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPackageAccess().getGroup()); }
		(rule__Package__Group__0)
		{ after(grammarAccess.getPackageAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePackage_Header
entryRulePackage_Header
:
{ before(grammarAccess.getPackage_HeaderRule()); }
	 rulePackage_Header
{ after(grammarAccess.getPackage_HeaderRule()); } 
	 EOF 
;

// Rule Package_Header
rulePackage_Header 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPackage_HeaderAccess().getGroup()); }
		(rule__Package_Header__Group__0)
		{ after(grammarAccess.getPackage_HeaderAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePackage_Provide
entryRulePackage_Provide
:
{ before(grammarAccess.getPackage_ProvideRule()); }
	 rulePackage_Provide
{ after(grammarAccess.getPackage_ProvideRule()); } 
	 EOF 
;

// Rule Package_Provide
rulePackage_Provide 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPackage_ProvideAccess().getGroup()); }
		(rule__Package_Provide__Group__0)
		{ after(grammarAccess.getPackage_ProvideAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePackage_Body_Content
entryRulePackage_Body_Content
:
{ before(grammarAccess.getPackage_Body_ContentRule()); }
	 rulePackage_Body_Content
{ after(grammarAccess.getPackage_Body_ContentRule()); } 
	 EOF 
;

// Rule Package_Body_Content
rulePackage_Body_Content 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPackage_Body_ContentAccess().getGroup()); }
		(rule__Package_Body_Content__Group__0)
		{ after(grammarAccess.getPackage_Body_ContentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEntity_Decl
entryRuleEntity_Decl
:
{ before(grammarAccess.getEntity_DeclRule()); }
	 ruleEntity_Decl
{ after(grammarAccess.getEntity_DeclRule()); } 
	 EOF 
;

// Rule Entity_Decl
ruleEntity_Decl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntity_DeclAccess().getNode_DeclParserRuleCall()); }
		ruleNode_Decl
		{ after(grammarAccess.getEntity_DeclAccess().getNode_DeclParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIdentifier
entryRuleIdentifier
:
{ before(grammarAccess.getIdentifierRule()); }
	 ruleIdentifier
{ after(grammarAccess.getIdentifierRule()); } 
	 EOF 
;

// Rule Identifier
ruleIdentifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIdentifierAccess().getGroup()); }
		(rule__Identifier__Group__0)
		{ after(grammarAccess.getIdentifierAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getNameAssignment()); }
		(rule__Type__NameAssignment)
		{ after(grammarAccess.getTypeAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleField_List
entryRuleField_List
:
{ before(grammarAccess.getField_ListRule()); }
	 ruleField_List
{ after(grammarAccess.getField_ListRule()); } 
	 EOF 
;

// Rule Field_List
ruleField_List 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getField_ListAccess().getGroup()); }
		(rule__Field_List__Group__0)
		{ after(grammarAccess.getField_ListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleField
entryRuleField
:
{ before(grammarAccess.getFieldRule()); }
	 ruleField
{ after(grammarAccess.getFieldRule()); } 
	 EOF 
;

// Rule Field
ruleField 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFieldAccess().getGroup()); }
		(rule__Field__Group__0)
		{ after(grammarAccess.getFieldAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIdent_List
entryRuleIdent_List
:
{ before(grammarAccess.getIdent_ListRule()); }
	 ruleIdent_List
{ after(grammarAccess.getIdent_ListRule()); } 
	 EOF 
;

// Rule Ident_List
ruleIdent_List 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIdent_ListAccess().getGroup()); }
		(rule__Ident_List__Group__0)
		{ after(grammarAccess.getIdent_ListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNode_Decl
entryRuleNode_Decl
:
{ before(grammarAccess.getNode_DeclRule()); }
	 ruleNode_Decl
{ after(grammarAccess.getNode_DeclRule()); } 
	 EOF 
;

// Rule Node_Decl
ruleNode_Decl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNode_DeclAccess().getGroup()); }
		(rule__Node_Decl__Group__0)
		{ after(grammarAccess.getNode_DeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNode_Header
entryRuleNode_Header
:
{ before(grammarAccess.getNode_HeaderRule()); }
	 ruleNode_Header
{ after(grammarAccess.getNode_HeaderRule()); } 
	 EOF 
;

// Rule Node_Header
ruleNode_Header 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNode_HeaderAccess().getGroup()); }
		(rule__Node_Header__Group__0)
		{ after(grammarAccess.getNode_HeaderAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVar_Decl_List
entryRuleVar_Decl_List
:
{ before(grammarAccess.getVar_Decl_ListRule()); }
	 ruleVar_Decl_List
{ after(grammarAccess.getVar_Decl_ListRule()); } 
	 EOF 
;

// Rule Var_Decl_List
ruleVar_Decl_List 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVar_Decl_ListAccess().getGroup()); }
		(rule__Var_Decl_List__Group__0)
		{ after(grammarAccess.getVar_Decl_ListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVar_Decl
entryRuleVar_Decl
:
{ before(grammarAccess.getVar_DeclRule()); }
	 ruleVar_Decl
{ after(grammarAccess.getVar_DeclRule()); } 
	 EOF 
;

// Rule Var_Decl
ruleVar_Decl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVar_DeclAccess().getGroup()); }
		(rule__Var_Decl__Group__0)
		{ after(grammarAccess.getVar_DeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeclared_Clock
entryRuleDeclared_Clock
:
{ before(grammarAccess.getDeclared_ClockRule()); }
	 ruleDeclared_Clock
{ after(grammarAccess.getDeclared_ClockRule()); } 
	 EOF 
;

// Rule Declared_Clock
ruleDeclared_Clock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeclared_ClockAccess().getGroup()); }
		(rule__Declared_Clock__Group__0)
		{ after(grammarAccess.getDeclared_ClockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFN_Body
entryRuleFN_Body
:
{ before(grammarAccess.getFN_BodyRule()); }
	 ruleFN_Body
{ after(grammarAccess.getFN_BodyRule()); } 
	 EOF 
;

// Rule FN_Body
ruleFN_Body 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFN_BodyAccess().getGroup()); }
		(rule__FN_Body__Group__0)
		{ after(grammarAccess.getFN_BodyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLocal_Var_Decl
entryRuleLocal_Var_Decl
:
{ before(grammarAccess.getLocal_Var_DeclRule()); }
	 ruleLocal_Var_Decl
{ after(grammarAccess.getLocal_Var_DeclRule()); } 
	 EOF 
;

// Rule Local_Var_Decl
ruleLocal_Var_Decl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLocal_Var_DeclAccess().getGroup()); }
		(rule__Local_Var_Decl__Group__0)
		{ after(grammarAccess.getLocal_Var_DeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEq_or_Ast
entryRuleEq_or_Ast
:
{ before(grammarAccess.getEq_or_AstRule()); }
	 ruleEq_or_Ast
{ after(grammarAccess.getEq_or_AstRule()); } 
	 EOF 
;

// Rule Eq_or_Ast
ruleEq_or_Ast 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEq_or_AstAccess().getAlternatives()); }
		(rule__Eq_or_Ast__Alternatives)
		{ after(grammarAccess.getEq_or_AstAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEquation
entryRuleEquation
:
{ before(grammarAccess.getEquationRule()); }
	 ruleEquation
{ after(grammarAccess.getEquationRule()); } 
	 EOF 
;

// Rule Equation
ruleEquation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEquationAccess().getGroup()); }
		(rule__Equation__Group__0)
		{ after(grammarAccess.getEquationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLeft_List
entryRuleLeft_List
:
{ before(grammarAccess.getLeft_ListRule()); }
	 ruleLeft_List
{ after(grammarAccess.getLeft_ListRule()); } 
	 EOF 
;

// Rule Left_List
ruleLeft_List 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLeft_ListAccess().getGroup()); }
		(rule__Left_List__Group__0)
		{ after(grammarAccess.getLeft_ListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLeft
entryRuleLeft
:
{ before(grammarAccess.getLeftRule()); }
	 ruleLeft
{ after(grammarAccess.getLeftRule()); } 
	 EOF 
;

// Rule Left
ruleLeft 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLeftAccess().getGroup()); }
		(rule__Left__Group__0)
		{ after(grammarAccess.getLeftAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelector
entryRuleSelector
:
{ before(grammarAccess.getSelectorRule()); }
	 ruleSelector
{ after(grammarAccess.getSelectorRule()); } 
	 EOF 
;

// Rule Selector
ruleSelector 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectorAccess().getAlternatives()); }
		(rule__Selector__Alternatives)
		{ after(grammarAccess.getSelectorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelTrancheEnd
entryRuleSelTrancheEnd
:
{ before(grammarAccess.getSelTrancheEndRule()); }
	 ruleSelTrancheEnd
{ after(grammarAccess.getSelTrancheEndRule()); } 
	 EOF 
;

// Rule SelTrancheEnd
ruleSelTrancheEnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelTrancheEndAccess().getGroup()); }
		(rule__SelTrancheEnd__Group__0)
		{ after(grammarAccess.getSelTrancheEndAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRight_Part
entryRuleRight_Part
:
{ before(grammarAccess.getRight_PartRule()); }
	 ruleRight_Part
{ after(grammarAccess.getRight_PartRule()); } 
	 EOF 
;

// Rule Right_Part
ruleRight_Part 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRight_PartAccess().getExpressionParserRuleCall()); }
		ruleExpression
		{ after(grammarAccess.getRight_PartAccess().getExpressionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssertion
entryRuleAssertion
:
{ before(grammarAccess.getAssertionRule()); }
	 ruleAssertion
{ after(grammarAccess.getAssertionRule()); } 
	 EOF 
;

// Rule Assertion
ruleAssertion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssertionAccess().getGroup()); }
		(rule__Assertion__Group__0)
		{ after(grammarAccess.getAssertionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
		(rule__Expression__Alternatives)
		{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFby
entryRuleFby
:
{ before(grammarAccess.getFbyRule()); }
	 ruleFby
{ after(grammarAccess.getFbyRule()); } 
	 EOF 
;

// Rule Fby
ruleFby 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFbyAccess().getGroup()); }
		(rule__Fby__Group__0)
		{ after(grammarAccess.getFbyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArrow
entryRuleArrow
:
{ before(grammarAccess.getArrowRule()); }
	 ruleArrow
{ after(grammarAccess.getArrowRule()); } 
	 EOF 
;

// Rule Arrow
ruleArrow 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArrowAccess().getGroup()); }
		(rule__Arrow__Group__0)
		{ after(grammarAccess.getArrowAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOr
entryRuleOr
:
{ before(grammarAccess.getOrRule()); }
	 ruleOr
{ after(grammarAccess.getOrRule()); } 
	 EOF 
;

// Rule Or
ruleOr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrAccess().getGroup()); }
		(rule__Or__Group__0)
		{ after(grammarAccess.getOrAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnd
entryRuleAnd
:
{ before(grammarAccess.getAndRule()); }
	 ruleAnd
{ after(grammarAccess.getAndRule()); } 
	 EOF 
;

// Rule And
ruleAnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndAccess().getGroup()); }
		(rule__And__Group__0)
		{ after(grammarAccess.getAndAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEquality
entryRuleEquality
:
{ before(grammarAccess.getEqualityRule()); }
	 ruleEquality
{ after(grammarAccess.getEqualityRule()); } 
	 EOF 
;

// Rule Equality
ruleEquality 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEqualityAccess().getGroup()); }
		(rule__Equality__Group__0)
		{ after(grammarAccess.getEqualityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComparison
entryRuleComparison
:
{ before(grammarAccess.getComparisonRule()); }
	 ruleComparison
{ after(grammarAccess.getComparisonRule()); } 
	 EOF 
;

// Rule Comparison
ruleComparison 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComparisonAccess().getGroup()); }
		(rule__Comparison__Group__0)
		{ after(grammarAccess.getComparisonAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePlusOrMinus
entryRulePlusOrMinus
:
{ before(grammarAccess.getPlusOrMinusRule()); }
	 rulePlusOrMinus
{ after(grammarAccess.getPlusOrMinusRule()); } 
	 EOF 
;

// Rule PlusOrMinus
rulePlusOrMinus 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPlusOrMinusAccess().getGroup()); }
		(rule__PlusOrMinus__Group__0)
		{ after(grammarAccess.getPlusOrMinusAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMulOrDiv
entryRuleMulOrDiv
:
{ before(grammarAccess.getMulOrDivRule()); }
	 ruleMulOrDiv
{ after(grammarAccess.getMulOrDivRule()); } 
	 EOF 
;

// Rule MulOrDiv
ruleMulOrDiv 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMulOrDivAccess().getGroup()); }
		(rule__MulOrDiv__Group__0)
		{ after(grammarAccess.getMulOrDivAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimary
entryRulePrimary
:
{ before(grammarAccess.getPrimaryRule()); }
	 rulePrimary
{ after(grammarAccess.getPrimaryRule()); } 
	 EOF 
;

// Rule Primary
rulePrimary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryAccess().getAlternatives()); }
		(rule__Primary__Alternatives)
		{ after(grammarAccess.getPrimaryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAtomicExpression
entryRuleAtomicExpression
:
{ before(grammarAccess.getAtomicExpressionRule()); }
	 ruleAtomicExpression
{ after(grammarAccess.getAtomicExpressionRule()); } 
	 EOF 
;

// Rule AtomicExpression
ruleAtomicExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAtomicExpressionAccess().getAlternatives()); }
		(rule__AtomicExpression__Alternatives)
		{ after(grammarAccess.getAtomicExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstantExpression
entryRuleConstantExpression
:
{ before(grammarAccess.getConstantExpressionRule()); }
	 ruleConstantExpression
{ after(grammarAccess.getConstantExpressionRule()); } 
	 EOF 
;

// Rule ConstantExpression
ruleConstantExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstantExpressionAccess().getAlternatives()); }
		(rule__ConstantExpression__Alternatives)
		{ after(grammarAccess.getConstantExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Eq_or_Ast__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEq_or_AstAccess().getEquationParserRuleCall_0()); }
		ruleEquation
		{ after(grammarAccess.getEq_or_AstAccess().getEquationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEq_or_AstAccess().getAssertionParserRuleCall_1()); }
		ruleAssertion
		{ after(grammarAccess.getEq_or_AstAccess().getAssertionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectorAccess().getGroup_0()); }
		(rule__Selector__Group_0__0)
		{ after(grammarAccess.getSelectorAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getSelectorAccess().getGroup_1()); }
		(rule__Selector__Group_1__0)
		{ after(grammarAccess.getSelectorAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getGroup_0()); }
		(rule__Expression__Group_0__0)
		{ after(grammarAccess.getExpressionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getFbyParserRuleCall_1()); }
		ruleFby
		{ after(grammarAccess.getExpressionAccess().getFbyParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityAccess().getOpEqualsSignKeyword_1_1_0_0()); }
		'='
		{ after(grammarAccess.getEqualityAccess().getOpEqualsSignKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getEqualityAccess().getOpLessThanSignGreaterThanSignKeyword_1_1_0_1()); }
		'<>'
		{ after(grammarAccess.getEqualityAccess().getOpLessThanSignGreaterThanSignKeyword_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_0()); }
		'>='
		{ after(grammarAccess.getComparisonAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_1()); }
		'<='
		{ after(grammarAccess.getComparisonAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonAccess().getOpGreaterThanSignKeyword_1_1_0_2()); }
		'>'
		{ after(grammarAccess.getComparisonAccess().getOpGreaterThanSignKeyword_1_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonAccess().getOpLessThanSignKeyword_1_1_0_3()); }
		'<'
		{ after(grammarAccess.getComparisonAccess().getOpLessThanSignKeyword_1_1_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlusOrMinusAccess().getGroup_1_0_0()); }
		(rule__PlusOrMinus__Group_1_0_0__0)
		{ after(grammarAccess.getPlusOrMinusAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPlusOrMinusAccess().getGroup_1_0_1()); }
		(rule__PlusOrMinus__Group_1_0_1__0)
		{ after(grammarAccess.getPlusOrMinusAccess().getGroup_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMulOrDivAccess().getGroup_1_0_0()); }
		(rule__MulOrDiv__Group_1_0_0__0)
		{ after(grammarAccess.getMulOrDivAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMulOrDivAccess().getGroup_1_0_1()); }
		(rule__MulOrDiv__Group_1_0_1__0)
		{ after(grammarAccess.getMulOrDivAccess().getGroup_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_0()); }
		(rule__Primary__Group_0__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_1()); }
		(rule__Primary__Group_1__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_2()); }
		(rule__Primary__Group_2__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_3()); }
		(rule__Primary__Group_3__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_4()); }
		(rule__Primary__Group_4__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getAtomicExpressionParserRuleCall_5()); }
		ruleAtomicExpression
		{ after(grammarAccess.getPrimaryAccess().getAtomicExpressionParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicExpressionAccess().getConstantExpressionParserRuleCall_0()); }
		ruleConstantExpression
		{ after(grammarAccess.getAtomicExpressionAccess().getConstantExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicExpressionAccess().getGroup_1()); }
		(rule__AtomicExpression__Group_1__0)
		{ after(grammarAccess.getAtomicExpressionAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantExpressionAccess().getGroup_0()); }
		(rule__ConstantExpression__Group_0__0)
		{ after(grammarAccess.getConstantExpressionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getConstantExpressionAccess().getGroup_1()); }
		(rule__ConstantExpression__Group_1__0)
		{ after(grammarAccess.getConstantExpressionAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getConstantExpressionAccess().getGroup_2()); }
		(rule__ConstantExpression__Group_2__0)
		{ after(grammarAccess.getConstantExpressionAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package__Group__0__Impl
	rule__Package__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageAccess().getHeadAssignment_0()); }
	(rule__Package__HeadAssignment_0)
	{ after(grammarAccess.getPackageAccess().getHeadAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package__Group__1__Impl
	rule__Package__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageAccess().getBodyAssignment_1()); }
	(rule__Package__BodyAssignment_1)
	{ after(grammarAccess.getPackageAccess().getBodyAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageAccess().getEndKeyword_2()); }
	'end'
	{ after(grammarAccess.getPackageAccess().getEndKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Package_Header__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package_Header__Group__0__Impl
	rule__Package_Header__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Header__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackage_HeaderAccess().getPackageKeyword_0()); }
	'package'
	{ after(grammarAccess.getPackage_HeaderAccess().getPackageKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Header__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package_Header__Group__1__Impl
	rule__Package_Header__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Header__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackage_HeaderAccess().getNameAssignment_1()); }
	(rule__Package_Header__NameAssignment_1)
	{ after(grammarAccess.getPackage_HeaderAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Header__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package_Header__Group__2__Impl
	rule__Package_Header__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Header__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackage_HeaderAccess().getGroup_2()); }
	(rule__Package_Header__Group_2__0)?
	{ after(grammarAccess.getPackage_HeaderAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Header__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package_Header__Group__3__Impl
	rule__Package_Header__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Header__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackage_HeaderAccess().getProvidesKeyword_3()); }
	'provides'
	{ after(grammarAccess.getPackage_HeaderAccess().getProvidesKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Header__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package_Header__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Header__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getPackage_HeaderAccess().getProvidesAssignment_4()); }
		(rule__Package_Header__ProvidesAssignment_4)
		{ after(grammarAccess.getPackage_HeaderAccess().getProvidesAssignment_4()); }
	)
	(
		{ before(grammarAccess.getPackage_HeaderAccess().getProvidesAssignment_4()); }
		(rule__Package_Header__ProvidesAssignment_4)*
		{ after(grammarAccess.getPackage_HeaderAccess().getProvidesAssignment_4()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Package_Header__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package_Header__Group_2__0__Impl
	rule__Package_Header__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Header__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackage_HeaderAccess().getUsesKeyword_2_0()); }
	'uses'
	{ after(grammarAccess.getPackage_HeaderAccess().getUsesKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Header__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package_Header__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Header__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackage_HeaderAccess().getUsesAssignment_2_1()); }
	(rule__Package_Header__UsesAssignment_2_1)
	{ after(grammarAccess.getPackage_HeaderAccess().getUsesAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Package_Provide__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package_Provide__Group__0__Impl
	rule__Package_Provide__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provide__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackage_ProvideAccess().getNodeKeyword_0()); }
	'node'
	{ after(grammarAccess.getPackage_ProvideAccess().getNodeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provide__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package_Provide__Group__1__Impl
	rule__Package_Provide__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provide__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackage_ProvideAccess().getNameAssignment_1()); }
	(rule__Package_Provide__NameAssignment_1)
	{ after(grammarAccess.getPackage_ProvideAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provide__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package_Provide__Group__2__Impl
	rule__Package_Provide__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provide__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackage_ProvideAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getPackage_ProvideAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provide__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package_Provide__Group__3__Impl
	rule__Package_Provide__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provide__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackage_ProvideAccess().getParamAssignment_3()); }
	(rule__Package_Provide__ParamAssignment_3)
	{ after(grammarAccess.getPackage_ProvideAccess().getParamAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provide__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package_Provide__Group__4__Impl
	rule__Package_Provide__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provide__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackage_ProvideAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getPackage_ProvideAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provide__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package_Provide__Group__5__Impl
	rule__Package_Provide__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provide__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackage_ProvideAccess().getReturnsKeyword_5()); }
	'returns'
	{ after(grammarAccess.getPackage_ProvideAccess().getReturnsKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provide__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package_Provide__Group__6__Impl
	rule__Package_Provide__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provide__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackage_ProvideAccess().getLeftParenthesisKeyword_6()); }
	'('
	{ after(grammarAccess.getPackage_ProvideAccess().getLeftParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provide__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package_Provide__Group__7__Impl
	rule__Package_Provide__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provide__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackage_ProvideAccess().getRetAssignment_7()); }
	(rule__Package_Provide__RetAssignment_7)
	{ after(grammarAccess.getPackage_ProvideAccess().getRetAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provide__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package_Provide__Group__8__Impl
	rule__Package_Provide__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provide__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackage_ProvideAccess().getRightParenthesisKeyword_8()); }
	')'
	{ after(grammarAccess.getPackage_ProvideAccess().getRightParenthesisKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provide__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package_Provide__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provide__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackage_ProvideAccess().getSemicolonKeyword_9()); }
	';'
	{ after(grammarAccess.getPackage_ProvideAccess().getSemicolonKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Package_Body_Content__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package_Body_Content__Group__0__Impl
	rule__Package_Body_Content__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Body_Content__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackage_Body_ContentAccess().getBodyKeyword_0()); }
	'body'
	{ after(grammarAccess.getPackage_Body_ContentAccess().getBodyKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Body_Content__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package_Body_Content__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Body_Content__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getPackage_Body_ContentAccess().getEntitiesAssignment_1()); }
		(rule__Package_Body_Content__EntitiesAssignment_1)
		{ after(grammarAccess.getPackage_Body_ContentAccess().getEntitiesAssignment_1()); }
	)
	(
		{ before(grammarAccess.getPackage_Body_ContentAccess().getEntitiesAssignment_1()); }
		(rule__Package_Body_Content__EntitiesAssignment_1)*
		{ after(grammarAccess.getPackage_Body_ContentAccess().getEntitiesAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Identifier__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Identifier__Group__0__Impl
	rule__Identifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierAccess().getGroup_0()); }
	(rule__Identifier__Group_0__0)?
	{ after(grammarAccess.getIdentifierAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Identifier__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierAccess().getNameAssignment_1()); }
	(rule__Identifier__NameAssignment_1)
	{ after(grammarAccess.getIdentifierAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Identifier__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Identifier__Group_0__0__Impl
	rule__Identifier__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierAccess().getPkgAssignment_0_0()); }
	(rule__Identifier__PkgAssignment_0_0)
	{ after(grammarAccess.getIdentifierAccess().getPkgAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Identifier__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierAccess().getFromPgkAssignment_0_1()); }
	(rule__Identifier__FromPgkAssignment_0_1)
	{ after(grammarAccess.getIdentifierAccess().getFromPgkAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Field_List__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field_List__Group__0__Impl
	rule__Field_List__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Field_List__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getField_ListAccess().getFieldsAssignment_0()); }
	(rule__Field_List__FieldsAssignment_0)
	{ after(grammarAccess.getField_ListAccess().getFieldsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field_List__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field_List__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Field_List__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getField_ListAccess().getGroup_1()); }
	(rule__Field_List__Group_1__0)*
	{ after(grammarAccess.getField_ListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Field_List__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field_List__Group_1__0__Impl
	rule__Field_List__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Field_List__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getField_ListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getField_ListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field_List__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field_List__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Field_List__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getField_ListAccess().getFieldsAssignment_1_1()); }
	(rule__Field_List__FieldsAssignment_1_1)
	{ after(grammarAccess.getField_ListAccess().getFieldsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__0__Impl
	rule__Field__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getNameAssignment_0()); }
	(rule__Field__NameAssignment_0)
	{ after(grammarAccess.getFieldAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__1__Impl
	rule__Field__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getFieldAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getTypeAssignment_2()); }
	(rule__Field__TypeAssignment_2)
	{ after(grammarAccess.getFieldAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Ident_List__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ident_List__Group__0__Impl
	rule__Ident_List__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ident_List__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdent_ListAccess().getNamesAssignment_0()); }
	(rule__Ident_List__NamesAssignment_0)
	{ after(grammarAccess.getIdent_ListAccess().getNamesAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ident_List__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ident_List__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ident_List__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdent_ListAccess().getGroup_1()); }
	(rule__Ident_List__Group_1__0)*
	{ after(grammarAccess.getIdent_ListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Ident_List__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ident_List__Group_1__0__Impl
	rule__Ident_List__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ident_List__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdent_ListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getIdent_ListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ident_List__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ident_List__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ident_List__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdent_ListAccess().getNamesAssignment_1_1()); }
	(rule__Ident_List__NamesAssignment_1_1)
	{ after(grammarAccess.getIdent_ListAccess().getNamesAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Node_Decl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node_Decl__Group__0__Impl
	rule__Node_Decl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Decl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNode_DeclAccess().getHeadAssignment_0()); }
	(rule__Node_Decl__HeadAssignment_0)
	{ after(grammarAccess.getNode_DeclAccess().getHeadAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Decl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node_Decl__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Decl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNode_DeclAccess().getBdyAssignment_1()); }
	(rule__Node_Decl__BdyAssignment_1)
	{ after(grammarAccess.getNode_DeclAccess().getBdyAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Node_Header__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node_Header__Group__0__Impl
	rule__Node_Header__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Header__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNode_HeaderAccess().getNodeKeyword_0()); }
	'node'
	{ after(grammarAccess.getNode_HeaderAccess().getNodeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Header__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node_Header__Group__1__Impl
	rule__Node_Header__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Header__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNode_HeaderAccess().getNameAssignment_1()); }
	(rule__Node_Header__NameAssignment_1)
	{ after(grammarAccess.getNode_HeaderAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Header__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node_Header__Group__2__Impl
	rule__Node_Header__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Header__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNode_HeaderAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getNode_HeaderAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Header__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node_Header__Group__3__Impl
	rule__Node_Header__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Header__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNode_HeaderAccess().getParamAssignment_3()); }
	(rule__Node_Header__ParamAssignment_3)
	{ after(grammarAccess.getNode_HeaderAccess().getParamAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Header__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node_Header__Group__4__Impl
	rule__Node_Header__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Header__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNode_HeaderAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getNode_HeaderAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Header__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node_Header__Group__5__Impl
	rule__Node_Header__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Header__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNode_HeaderAccess().getReturnsKeyword_5()); }
	'returns'
	{ after(grammarAccess.getNode_HeaderAccess().getReturnsKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Header__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node_Header__Group__6__Impl
	rule__Node_Header__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Header__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNode_HeaderAccess().getLeftParenthesisKeyword_6()); }
	'('
	{ after(grammarAccess.getNode_HeaderAccess().getLeftParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Header__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node_Header__Group__7__Impl
	rule__Node_Header__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Header__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNode_HeaderAccess().getRetAssignment_7()); }
	(rule__Node_Header__RetAssignment_7)
	{ after(grammarAccess.getNode_HeaderAccess().getRetAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Header__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node_Header__Group__8__Impl
	rule__Node_Header__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Header__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNode_HeaderAccess().getRightParenthesisKeyword_8()); }
	')'
	{ after(grammarAccess.getNode_HeaderAccess().getRightParenthesisKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Header__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node_Header__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Header__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNode_HeaderAccess().getSemicolonKeyword_9()); }
	';'
	{ after(grammarAccess.getNode_HeaderAccess().getSemicolonKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Var_Decl_List__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Var_Decl_List__Group__0__Impl
	rule__Var_Decl_List__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl_List__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVar_Decl_ListAccess().getVarListAssignment_0()); }
	(rule__Var_Decl_List__VarListAssignment_0)
	{ after(grammarAccess.getVar_Decl_ListAccess().getVarListAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl_List__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Var_Decl_List__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl_List__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVar_Decl_ListAccess().getGroup_1()); }
	(rule__Var_Decl_List__Group_1__0)*
	{ after(grammarAccess.getVar_Decl_ListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Var_Decl_List__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Var_Decl_List__Group_1__0__Impl
	rule__Var_Decl_List__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl_List__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVar_Decl_ListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getVar_Decl_ListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl_List__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Var_Decl_List__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl_List__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVar_Decl_ListAccess().getVarListAssignment_1_1()); }
	(rule__Var_Decl_List__VarListAssignment_1_1)
	{ after(grammarAccess.getVar_Decl_ListAccess().getVarListAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Var_Decl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Var_Decl__Group__0__Impl
	rule__Var_Decl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVar_DeclAccess().getNameAssignment_0()); }
	(rule__Var_Decl__NameAssignment_0)
	{ after(grammarAccess.getVar_DeclAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Var_Decl__Group__1__Impl
	rule__Var_Decl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVar_DeclAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getVar_DeclAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Var_Decl__Group__2__Impl
	rule__Var_Decl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVar_DeclAccess().getTypeAssignment_2()); }
	(rule__Var_Decl__TypeAssignment_2)
	{ after(grammarAccess.getVar_DeclAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Var_Decl__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVar_DeclAccess().getClkAssignment_3()); }
	(rule__Var_Decl__ClkAssignment_3)?
	{ after(grammarAccess.getVar_DeclAccess().getClkAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Declared_Clock__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declared_Clock__Group__0__Impl
	rule__Declared_Clock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declared_Clock__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclared_ClockAccess().getWhenKeyword_0()); }
	'when'
	{ after(grammarAccess.getDeclared_ClockAccess().getWhenKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declared_Clock__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declared_Clock__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declared_Clock__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclared_ClockAccess().getNameAssignment_1()); }
	(rule__Declared_Clock__NameAssignment_1)
	{ after(grammarAccess.getDeclared_ClockAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FN_Body__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FN_Body__Group__0__Impl
	rule__FN_Body__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FN_Body__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFN_BodyAccess().getFN_BodyAction_0()); }
	()
	{ after(grammarAccess.getFN_BodyAccess().getFN_BodyAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FN_Body__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FN_Body__Group__1__Impl
	rule__FN_Body__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FN_Body__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFN_BodyAccess().getDeclAssignment_1()); }
	(rule__FN_Body__DeclAssignment_1)*
	{ after(grammarAccess.getFN_BodyAccess().getDeclAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FN_Body__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FN_Body__Group__2__Impl
	rule__FN_Body__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FN_Body__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFN_BodyAccess().getLetKeyword_2()); }
	'let'
	{ after(grammarAccess.getFN_BodyAccess().getLetKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FN_Body__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FN_Body__Group__3__Impl
	rule__FN_Body__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FN_Body__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFN_BodyAccess().getEqAssignment_3()); }
	(rule__FN_Body__EqAssignment_3)*
	{ after(grammarAccess.getFN_BodyAccess().getEqAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FN_Body__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FN_Body__Group__4__Impl
	rule__FN_Body__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FN_Body__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFN_BodyAccess().getTelKeyword_4()); }
	'tel'
	{ after(grammarAccess.getFN_BodyAccess().getTelKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FN_Body__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FN_Body__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FN_Body__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFN_BodyAccess().getSemicolonKeyword_5()); }
	(';')?
	{ after(grammarAccess.getFN_BodyAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Local_Var_Decl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Local_Var_Decl__Group__0__Impl
	rule__Local_Var_Decl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Local_Var_Decl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocal_Var_DeclAccess().getVarKeyword_0()); }
	'var'
	{ after(grammarAccess.getLocal_Var_DeclAccess().getVarKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Local_Var_Decl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Local_Var_Decl__Group__1__Impl
	rule__Local_Var_Decl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Local_Var_Decl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocal_Var_DeclAccess().getVar_DeclParserRuleCall_1()); }
	ruleVar_Decl
	{ after(grammarAccess.getLocal_Var_DeclAccess().getVar_DeclParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Local_Var_Decl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Local_Var_Decl__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Local_Var_Decl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocal_Var_DeclAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getLocal_Var_DeclAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equation__Group__0__Impl
	rule__Equation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationAccess().getLeftAssignment_0()); }
	(rule__Equation__LeftAssignment_0)
	{ after(grammarAccess.getEquationAccess().getLeftAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equation__Group__1__Impl
	rule__Equation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getEquationAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equation__Group__2__Impl
	rule__Equation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationAccess().getRightAssignment_2()); }
	(rule__Equation__RightAssignment_2)
	{ after(grammarAccess.getEquationAccess().getRightAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getEquationAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Left_List__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Left_List__Group__0__Impl
	rule__Left_List__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Left_List__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeft_ListAccess().getIdAssignment_0()); }
	(rule__Left_List__IdAssignment_0)
	{ after(grammarAccess.getLeft_ListAccess().getIdAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Left_List__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Left_List__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Left_List__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeft_ListAccess().getGroup_1()); }
	(rule__Left_List__Group_1__0)*
	{ after(grammarAccess.getLeft_ListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Left_List__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Left_List__Group_1__0__Impl
	rule__Left_List__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Left_List__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeft_ListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getLeft_ListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Left_List__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Left_List__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Left_List__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeft_ListAccess().getIdAssignment_1_1()); }
	(rule__Left_List__IdAssignment_1_1)
	{ after(grammarAccess.getLeft_ListAccess().getIdAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Left__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Left__Group__0__Impl
	rule__Left__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Left__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAccess().getNameAssignment_0()); }
	(rule__Left__NameAssignment_0)
	{ after(grammarAccess.getLeftAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Left__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Left__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Left__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAccess().getSelAssignment_1()); }
	(rule__Left__SelAssignment_1)?
	{ after(grammarAccess.getLeftAccess().getSelAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Selector__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group_0__0__Impl
	rule__Selector__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getFullStopKeyword_0_0()); }
	'.'
	{ after(grammarAccess.getSelectorAccess().getFullStopKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getNameAssignment_0_1()); }
	(rule__Selector__NameAssignment_0_1)
	{ after(grammarAccess.getSelectorAccess().getNameAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Selector__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group_1__0__Impl
	rule__Selector__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getLeftSquareBracketKeyword_1_0()); }
	'['
	{ after(grammarAccess.getSelectorAccess().getLeftSquareBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group_1__1__Impl
	rule__Selector__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getBeginAssignment_1_1()); }
	(rule__Selector__BeginAssignment_1_1)
	{ after(grammarAccess.getSelectorAccess().getBeginAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group_1__2__Impl
	rule__Selector__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getEndAssignment_1_2()); }
	(rule__Selector__EndAssignment_1_2)?
	{ after(grammarAccess.getSelectorAccess().getEndAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getRightSquareBracketKeyword_1_3()); }
	']'
	{ after(grammarAccess.getSelectorAccess().getRightSquareBracketKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelTrancheEnd__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelTrancheEnd__Group__0__Impl
	rule__SelTrancheEnd__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelTrancheEnd__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelTrancheEndAccess().getFullStopFullStopKeyword_0()); }
	'..'
	{ after(grammarAccess.getSelTrancheEndAccess().getFullStopFullStopKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelTrancheEnd__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelTrancheEnd__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelTrancheEnd__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelTrancheEndAccess().getExpressionParserRuleCall_1()); }
	ruleExpression
	{ after(grammarAccess.getSelTrancheEndAccess().getExpressionParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assertion__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assertion__Group__0__Impl
	rule__Assertion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assertion__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssertionAccess().getAssertKeyword_0()); }
	'assert'
	{ after(grammarAccess.getAssertionAccess().getAssertKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assertion__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assertion__Group__1__Impl
	rule__Assertion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assertion__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssertionAccess().getExpressionParserRuleCall_1()); }
	ruleExpression
	{ after(grammarAccess.getAssertionAccess().getExpressionParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assertion__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assertion__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assertion__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssertionAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getAssertionAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_0__0__Impl
	rule__Expression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getIfThenElseAction_0_0()); }
	()
	{ after(grammarAccess.getExpressionAccess().getIfThenElseAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_0__1__Impl
	rule__Expression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getIfKeyword_0_1()); }
	'if'
	{ after(grammarAccess.getExpressionAccess().getIfKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_0__2__Impl
	rule__Expression__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getIfexprAssignment_0_2()); }
	(rule__Expression__IfexprAssignment_0_2)
	{ after(grammarAccess.getExpressionAccess().getIfexprAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_0__3__Impl
	rule__Expression__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getThenKeyword_0_3()); }
	'then'
	{ after(grammarAccess.getExpressionAccess().getThenKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_0__4__Impl
	rule__Expression__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getThenexprAssignment_0_4()); }
	(rule__Expression__ThenexprAssignment_0_4)
	{ after(grammarAccess.getExpressionAccess().getThenexprAssignment_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_0__5__Impl
	rule__Expression__Group_0__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getElseKeyword_0_5()); }
	'else'
	{ after(grammarAccess.getExpressionAccess().getElseKeyword_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_0__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getElseexprAssignment_0_6()); }
	(rule__Expression__ElseexprAssignment_0_6)
	{ after(grammarAccess.getExpressionAccess().getElseexprAssignment_0_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Fby__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fby__Group__0__Impl
	rule__Fby__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Fby__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFbyAccess().getArrowParserRuleCall_0()); }
	ruleArrow
	{ after(grammarAccess.getFbyAccess().getArrowParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fby__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fby__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Fby__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFbyAccess().getGroup_1()); }
	(rule__Fby__Group_1__0)*
	{ after(grammarAccess.getFbyAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Fby__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fby__Group_1__0__Impl
	rule__Fby__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Fby__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFbyAccess().getFbyLeftAction_1_0()); }
	()
	{ after(grammarAccess.getFbyAccess().getFbyLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fby__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fby__Group_1__1__Impl
	rule__Fby__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Fby__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFbyAccess().getFbyKeyword_1_1()); }
	'fby'
	{ after(grammarAccess.getFbyAccess().getFbyKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fby__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fby__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Fby__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFbyAccess().getRightAssignment_1_2()); }
	(rule__Fby__RightAssignment_1_2)
	{ after(grammarAccess.getFbyAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Arrow__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arrow__Group__0__Impl
	rule__Arrow__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrowAccess().getOrParserRuleCall_0()); }
	ruleOr
	{ after(grammarAccess.getArrowAccess().getOrParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arrow__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrowAccess().getGroup_1()); }
	(rule__Arrow__Group_1__0)*
	{ after(grammarAccess.getArrowAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Arrow__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arrow__Group_1__0__Impl
	rule__Arrow__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrowAccess().getArrowLeftAction_1_0()); }
	()
	{ after(grammarAccess.getArrowAccess().getArrowLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arrow__Group_1__1__Impl
	rule__Arrow__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrowAccess().getHyphenMinusGreaterThanSignKeyword_1_1()); }
	'->'
	{ after(grammarAccess.getArrowAccess().getHyphenMinusGreaterThanSignKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arrow__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrowAccess().getRightAssignment_1_2()); }
	(rule__Arrow__RightAssignment_1_2)
	{ after(grammarAccess.getArrowAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group__0__Impl
	rule__Or__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getAndParserRuleCall_0()); }
	ruleAnd
	{ after(grammarAccess.getOrAccess().getAndParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getGroup_1()); }
	(rule__Or__Group_1__0)*
	{ after(grammarAccess.getOrAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1__0__Impl
	rule__Or__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getOrLeftAction_1_0()); }
	()
	{ after(grammarAccess.getOrAccess().getOrLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1__1__Impl
	rule__Or__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getOrKeyword_1_1()); }
	'or'
	{ after(grammarAccess.getOrAccess().getOrKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getRightAssignment_1_2()); }
	(rule__Or__RightAssignment_1_2)
	{ after(grammarAccess.getOrAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__0__Impl
	rule__And__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getEqualityParserRuleCall_0()); }
	ruleEquality
	{ after(grammarAccess.getAndAccess().getEqualityParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getGroup_1()); }
	(rule__And__Group_1__0)*
	{ after(grammarAccess.getAndAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__0__Impl
	rule__And__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getAndLeftAction_1_0()); }
	()
	{ after(grammarAccess.getAndAccess().getAndLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__1__Impl
	rule__And__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getAndKeyword_1_1()); }
	'and'
	{ after(grammarAccess.getAndAccess().getAndKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getRightAssignment_1_2()); }
	(rule__And__RightAssignment_1_2)
	{ after(grammarAccess.getAndAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equality__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group__0__Impl
	rule__Equality__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getComparisonParserRuleCall_0()); }
	ruleComparison
	{ after(grammarAccess.getEqualityAccess().getComparisonParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getGroup_1()); }
	(rule__Equality__Group_1__0)*
	{ after(grammarAccess.getEqualityAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equality__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group_1__0__Impl
	rule__Equality__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getEqualityLeftAction_1_0()); }
	()
	{ after(grammarAccess.getEqualityAccess().getEqualityLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group_1__1__Impl
	rule__Equality__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getOpAssignment_1_1()); }
	(rule__Equality__OpAssignment_1_1)
	{ after(grammarAccess.getEqualityAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getRightAssignment_1_2()); }
	(rule__Equality__RightAssignment_1_2)
	{ after(grammarAccess.getEqualityAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group__0__Impl
	rule__Comparison__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getPlusOrMinusParserRuleCall_0()); }
	rulePlusOrMinus
	{ after(grammarAccess.getComparisonAccess().getPlusOrMinusParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getGroup_1()); }
	(rule__Comparison__Group_1__0)*
	{ after(grammarAccess.getComparisonAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1__0__Impl
	rule__Comparison__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getComparisonLeftAction_1_0()); }
	()
	{ after(grammarAccess.getComparisonAccess().getComparisonLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1__1__Impl
	rule__Comparison__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getOpAssignment_1_1()); }
	(rule__Comparison__OpAssignment_1_1)
	{ after(grammarAccess.getComparisonAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getRightAssignment_1_2()); }
	(rule__Comparison__RightAssignment_1_2)
	{ after(grammarAccess.getComparisonAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusOrMinus__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group__0__Impl
	rule__PlusOrMinus__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getMulOrDivParserRuleCall_0()); }
	ruleMulOrDiv
	{ after(grammarAccess.getPlusOrMinusAccess().getMulOrDivParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getGroup_1()); }
	(rule__PlusOrMinus__Group_1__0)*
	{ after(grammarAccess.getPlusOrMinusAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusOrMinus__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1__0__Impl
	rule__PlusOrMinus__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getAlternatives_1_0()); }
	(rule__PlusOrMinus__Alternatives_1_0)
	{ after(grammarAccess.getPlusOrMinusAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getRightAssignment_1_1()); }
	(rule__PlusOrMinus__RightAssignment_1_1)
	{ after(grammarAccess.getPlusOrMinusAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusOrMinus__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1_0_0__0__Impl
	rule__PlusOrMinus__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getPlusLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getPlusOrMinusAccess().getPlusLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getPlusSignKeyword_1_0_0_1()); }
	'+'
	{ after(grammarAccess.getPlusOrMinusAccess().getPlusSignKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusOrMinus__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1_0_1__0__Impl
	rule__PlusOrMinus__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getMinusLeftAction_1_0_1_0()); }
	()
	{ after(grammarAccess.getPlusOrMinusAccess().getMinusLeftAction_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getHyphenMinusKeyword_1_0_1_1()); }
	'-'
	{ after(grammarAccess.getPlusOrMinusAccess().getHyphenMinusKeyword_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MulOrDiv__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDiv__Group__0__Impl
	rule__MulOrDiv__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivAccess().getPrimaryParserRuleCall_0()); }
	rulePrimary
	{ after(grammarAccess.getMulOrDivAccess().getPrimaryParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDiv__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivAccess().getGroup_1()); }
	(rule__MulOrDiv__Group_1__0)*
	{ after(grammarAccess.getMulOrDivAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MulOrDiv__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDiv__Group_1__0__Impl
	rule__MulOrDiv__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivAccess().getAlternatives_1_0()); }
	(rule__MulOrDiv__Alternatives_1_0)
	{ after(grammarAccess.getMulOrDivAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDiv__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivAccess().getRightAssignment_1_1()); }
	(rule__MulOrDiv__RightAssignment_1_1)
	{ after(grammarAccess.getMulOrDivAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MulOrDiv__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDiv__Group_1_0_0__0__Impl
	rule__MulOrDiv__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivAccess().getMulLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getMulOrDivAccess().getMulLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDiv__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivAccess().getAsteriskKeyword_1_0_0_1()); }
	'*'
	{ after(grammarAccess.getMulOrDivAccess().getAsteriskKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MulOrDiv__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDiv__Group_1_0_1__0__Impl
	rule__MulOrDiv__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivAccess().getDivLeftAction_1_0_1_0()); }
	()
	{ after(grammarAccess.getMulOrDivAccess().getDivLeftAction_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDiv__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivAccess().getSolidusKeyword_1_0_1_1()); }
	'/'
	{ after(grammarAccess.getMulOrDivAccess().getSolidusKeyword_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__0__Impl
	rule__Primary__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_0()); }
	'('
	{ after(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__1__Impl
	rule__Primary__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getExpressionParserRuleCall_0_1()); }
	ruleExpression
	{ after(grammarAccess.getPrimaryAccess().getExpressionParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_2()); }
	')'
	{ after(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__0__Impl
	rule__Primary__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getNotAction_1_0()); }
	()
	{ after(grammarAccess.getPrimaryAccess().getNotAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__1__Impl
	rule__Primary__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getNotKeyword_1_1()); }
	'not'
	{ after(grammarAccess.getPrimaryAccess().getNotKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getExpressionAssignment_1_2()); }
	(rule__Primary__ExpressionAssignment_1_2)
	{ after(grammarAccess.getPrimaryAccess().getExpressionAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_2__0__Impl
	rule__Primary__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getUMinusAction_2_0()); }
	()
	{ after(grammarAccess.getPrimaryAccess().getUMinusAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_2__1__Impl
	rule__Primary__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getHyphenMinusKeyword_2_1()); }
	'-'
	{ after(grammarAccess.getPrimaryAccess().getHyphenMinusKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getExpressionAssignment_2_2()); }
	(rule__Primary__ExpressionAssignment_2_2)
	{ after(grammarAccess.getPrimaryAccess().getExpressionAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_3__0__Impl
	rule__Primary__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getPreAction_3_0()); }
	()
	{ after(grammarAccess.getPrimaryAccess().getPreAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_3__1__Impl
	rule__Primary__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getPreKeyword_3_1()); }
	'pre'
	{ after(grammarAccess.getPrimaryAccess().getPreKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getExpressionAssignment_3_2()); }
	(rule__Primary__ExpressionAssignment_3_2)
	{ after(grammarAccess.getPrimaryAccess().getExpressionAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_4__0__Impl
	rule__Primary__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getCurrentAction_4_0()); }
	()
	{ after(grammarAccess.getPrimaryAccess().getCurrentAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_4__1__Impl
	rule__Primary__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getCurrentKeyword_4_1()); }
	'current'
	{ after(grammarAccess.getPrimaryAccess().getCurrentKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getExpressionAssignment_4_2()); }
	(rule__Primary__ExpressionAssignment_4_2)
	{ after(grammarAccess.getPrimaryAccess().getExpressionAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicExpression__Group_1__0__Impl
	rule__AtomicExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicExpressionAccess().getVariablerefAction_1_0()); }
	()
	{ after(grammarAccess.getAtomicExpressionAccess().getVariablerefAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicExpressionAccess().getValueAssignment_1_1()); }
	(rule__AtomicExpression__ValueAssignment_1_1)
	{ after(grammarAccess.getAtomicExpressionAccess().getValueAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantExpression__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantExpression__Group_0__0__Impl
	rule__ConstantExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantExpressionAccess().getBooleanConstantAction_0_0()); }
	()
	{ after(grammarAccess.getConstantExpressionAccess().getBooleanConstantAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantExpression__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantExpressionAccess().getValueAssignment_0_1()); }
	(rule__ConstantExpression__ValueAssignment_0_1)
	{ after(grammarAccess.getConstantExpressionAccess().getValueAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantExpression__Group_1__0__Impl
	rule__ConstantExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantExpressionAccess().getFloatConstantAction_1_0()); }
	()
	{ after(grammarAccess.getConstantExpressionAccess().getFloatConstantAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantExpressionAccess().getValueAssignment_1_1()); }
	(rule__ConstantExpression__ValueAssignment_1_1)
	{ after(grammarAccess.getConstantExpressionAccess().getValueAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantExpression__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantExpression__Group_2__0__Impl
	rule__ConstantExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantExpressionAccess().getIntConstantAction_2_0()); }
	()
	{ after(grammarAccess.getConstantExpressionAccess().getIntConstantAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantExpressionAccess().getValueAssignment_2_1()); }
	(rule__ConstantExpression__ValueAssignment_2_1)
	{ after(grammarAccess.getConstantExpressionAccess().getValueAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Program__PkgAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getPkgPackageParserRuleCall_0()); }
		rulePackage
		{ after(grammarAccess.getProgramAccess().getPkgPackageParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__HeadAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageAccess().getHeadPackage_HeaderParserRuleCall_0_0()); }
		rulePackage_Header
		{ after(grammarAccess.getPackageAccess().getHeadPackage_HeaderParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__BodyAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageAccess().getBodyPackage_Body_ContentParserRuleCall_1_0()); }
		rulePackage_Body_Content
		{ after(grammarAccess.getPackageAccess().getBodyPackage_Body_ContentParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Header__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackage_HeaderAccess().getNameIDENTTerminalRuleCall_1_0()); }
		RULE_IDENT
		{ after(grammarAccess.getPackage_HeaderAccess().getNameIDENTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Header__UsesAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackage_HeaderAccess().getUsesIdent_ListParserRuleCall_2_1_0()); }
		ruleIdent_List
		{ after(grammarAccess.getPackage_HeaderAccess().getUsesIdent_ListParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Header__ProvidesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackage_HeaderAccess().getProvidesPackage_ProvideParserRuleCall_4_0()); }
		rulePackage_Provide
		{ after(grammarAccess.getPackage_HeaderAccess().getProvidesPackage_ProvideParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provide__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackage_ProvideAccess().getNameNode_HeaderCrossReference_1_0()); }
		(
			{ before(grammarAccess.getPackage_ProvideAccess().getNameNode_HeaderIDENTTerminalRuleCall_1_0_1()); }
			RULE_IDENT
			{ after(grammarAccess.getPackage_ProvideAccess().getNameNode_HeaderIDENTTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getPackage_ProvideAccess().getNameNode_HeaderCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provide__ParamAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackage_ProvideAccess().getParamVar_Decl_ListParserRuleCall_3_0()); }
		ruleVar_Decl_List
		{ after(grammarAccess.getPackage_ProvideAccess().getParamVar_Decl_ListParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provide__RetAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackage_ProvideAccess().getRetVar_Decl_ListParserRuleCall_7_0()); }
		ruleVar_Decl_List
		{ after(grammarAccess.getPackage_ProvideAccess().getRetVar_Decl_ListParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Body_Content__EntitiesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackage_Body_ContentAccess().getEntitiesEntity_DeclParserRuleCall_1_0()); }
		ruleEntity_Decl
		{ after(grammarAccess.getPackage_Body_ContentAccess().getEntitiesEntity_DeclParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier__PkgAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdentifierAccess().getPkgIDENTTerminalRuleCall_0_0_0()); }
		RULE_IDENT
		{ after(grammarAccess.getIdentifierAccess().getPkgIDENTTerminalRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier__FromPgkAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdentifierAccess().getFromPgkColonColonKeyword_0_1_0()); }
		(
			{ before(grammarAccess.getIdentifierAccess().getFromPgkColonColonKeyword_0_1_0()); }
			'::'
			{ after(grammarAccess.getIdentifierAccess().getFromPgkColonColonKeyword_0_1_0()); }
		)
		{ after(grammarAccess.getIdentifierAccess().getFromPgkColonColonKeyword_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdentifierAccess().getNameIDENTTerminalRuleCall_1_0()); }
		RULE_IDENT
		{ after(grammarAccess.getIdentifierAccess().getNameIDENTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getNameIDENTTerminalRuleCall_0()); }
		RULE_IDENT
		{ after(grammarAccess.getTypeAccess().getNameIDENTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field_List__FieldsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getField_ListAccess().getFieldsFieldParserRuleCall_0_0()); }
		ruleField
		{ after(grammarAccess.getField_ListAccess().getFieldsFieldParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field_List__FieldsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getField_ListAccess().getFieldsFieldParserRuleCall_1_1_0()); }
		ruleField
		{ after(grammarAccess.getField_ListAccess().getFieldsFieldParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getNameIDENTTerminalRuleCall_0_0()); }
		RULE_IDENT
		{ after(grammarAccess.getFieldAccess().getNameIDENTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getTypeTypeParserRuleCall_2_0()); }
		ruleType
		{ after(grammarAccess.getFieldAccess().getTypeTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ident_List__NamesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdent_ListAccess().getNamesIDENTTerminalRuleCall_0_0()); }
		RULE_IDENT
		{ after(grammarAccess.getIdent_ListAccess().getNamesIDENTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ident_List__NamesAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdent_ListAccess().getNamesIDENTTerminalRuleCall_1_1_0()); }
		RULE_IDENT
		{ after(grammarAccess.getIdent_ListAccess().getNamesIDENTTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Decl__HeadAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNode_DeclAccess().getHeadNode_HeaderParserRuleCall_0_0()); }
		ruleNode_Header
		{ after(grammarAccess.getNode_DeclAccess().getHeadNode_HeaderParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Decl__BdyAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNode_DeclAccess().getBdyFN_BodyParserRuleCall_1_0()); }
		ruleFN_Body
		{ after(grammarAccess.getNode_DeclAccess().getBdyFN_BodyParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Header__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNode_HeaderAccess().getNameIDENTTerminalRuleCall_1_0()); }
		RULE_IDENT
		{ after(grammarAccess.getNode_HeaderAccess().getNameIDENTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Header__ParamAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNode_HeaderAccess().getParamVar_Decl_ListParserRuleCall_3_0()); }
		ruleVar_Decl_List
		{ after(grammarAccess.getNode_HeaderAccess().getParamVar_Decl_ListParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Header__RetAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNode_HeaderAccess().getRetVar_Decl_ListParserRuleCall_7_0()); }
		ruleVar_Decl_List
		{ after(grammarAccess.getNode_HeaderAccess().getRetVar_Decl_ListParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl_List__VarListAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVar_Decl_ListAccess().getVarListVar_DeclParserRuleCall_0_0()); }
		ruleVar_Decl
		{ after(grammarAccess.getVar_Decl_ListAccess().getVarListVar_DeclParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl_List__VarListAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVar_Decl_ListAccess().getVarListVar_DeclParserRuleCall_1_1_0()); }
		ruleVar_Decl
		{ after(grammarAccess.getVar_Decl_ListAccess().getVarListVar_DeclParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVar_DeclAccess().getNameIDENTTerminalRuleCall_0_0()); }
		RULE_IDENT
		{ after(grammarAccess.getVar_DeclAccess().getNameIDENTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVar_DeclAccess().getTypeTypeParserRuleCall_2_0()); }
		ruleType
		{ after(grammarAccess.getVar_DeclAccess().getTypeTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl__ClkAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVar_DeclAccess().getClkDeclared_ClockParserRuleCall_3_0()); }
		ruleDeclared_Clock
		{ after(grammarAccess.getVar_DeclAccess().getClkDeclared_ClockParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declared_Clock__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclared_ClockAccess().getNameIdentifierParserRuleCall_1_0()); }
		ruleIdentifier
		{ after(grammarAccess.getDeclared_ClockAccess().getNameIdentifierParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FN_Body__DeclAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFN_BodyAccess().getDeclLocal_Var_DeclParserRuleCall_1_0()); }
		ruleLocal_Var_Decl
		{ after(grammarAccess.getFN_BodyAccess().getDeclLocal_Var_DeclParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FN_Body__EqAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFN_BodyAccess().getEqEquationParserRuleCall_3_0()); }
		ruleEquation
		{ after(grammarAccess.getFN_BodyAccess().getEqEquationParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__LeftAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEquationAccess().getLeftIDENTTerminalRuleCall_0_0()); }
		RULE_IDENT
		{ after(grammarAccess.getEquationAccess().getLeftIDENTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__RightAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEquationAccess().getRightRight_PartParserRuleCall_2_0()); }
		ruleRight_Part
		{ after(grammarAccess.getEquationAccess().getRightRight_PartParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Left_List__IdAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeft_ListAccess().getIdLeftParserRuleCall_0_0()); }
		ruleLeft
		{ after(grammarAccess.getLeft_ListAccess().getIdLeftParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Left_List__IdAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeft_ListAccess().getIdLeftParserRuleCall_1_1_0()); }
		ruleLeft
		{ after(grammarAccess.getLeft_ListAccess().getIdLeftParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Left__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeftAccess().getNameIdentifierParserRuleCall_0_0()); }
		ruleIdentifier
		{ after(grammarAccess.getLeftAccess().getNameIdentifierParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Left__SelAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeftAccess().getSelSelectorParserRuleCall_1_0()); }
		ruleSelector
		{ after(grammarAccess.getLeftAccess().getSelSelectorParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__NameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectorAccess().getNameIDENTTerminalRuleCall_0_1_0()); }
		RULE_IDENT
		{ after(grammarAccess.getSelectorAccess().getNameIDENTTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__BeginAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectorAccess().getBeginExpressionParserRuleCall_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getSelectorAccess().getBeginExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__EndAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectorAccess().getEndSelTrancheEndParserRuleCall_1_2_0()); }
		ruleSelTrancheEnd
		{ after(grammarAccess.getSelectorAccess().getEndSelTrancheEndParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__IfexprAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getIfexprExpressionParserRuleCall_0_2_0()); }
		ruleExpression
		{ after(grammarAccess.getExpressionAccess().getIfexprExpressionParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ThenexprAssignment_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getThenexprExpressionParserRuleCall_0_4_0()); }
		ruleExpression
		{ after(grammarAccess.getExpressionAccess().getThenexprExpressionParserRuleCall_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ElseexprAssignment_0_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getElseexprExpressionParserRuleCall_0_6_0()); }
		ruleExpression
		{ after(grammarAccess.getExpressionAccess().getElseexprExpressionParserRuleCall_0_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fby__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFbyAccess().getRightArrowParserRuleCall_1_2_0()); }
		ruleArrow
		{ after(grammarAccess.getFbyAccess().getRightArrowParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrowAccess().getRightOrParserRuleCall_1_2_0()); }
		ruleOr
		{ after(grammarAccess.getArrowAccess().getRightOrParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrAccess().getRightAndParserRuleCall_1_2_0()); }
		ruleAnd
		{ after(grammarAccess.getOrAccess().getRightAndParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndAccess().getRightEqualityParserRuleCall_1_2_0()); }
		ruleEquality
		{ after(grammarAccess.getAndAccess().getRightEqualityParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityAccess().getOpAlternatives_1_1_0()); }
		(rule__Equality__OpAlternatives_1_1_0)
		{ after(grammarAccess.getEqualityAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityAccess().getRightComparisonParserRuleCall_1_2_0()); }
		ruleComparison
		{ after(grammarAccess.getEqualityAccess().getRightComparisonParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getOpAlternatives_1_1_0()); }
		(rule__Comparison__OpAlternatives_1_1_0)
		{ after(grammarAccess.getComparisonAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getRightPlusOrMinusParserRuleCall_1_2_0()); }
		rulePlusOrMinus
		{ after(grammarAccess.getComparisonAccess().getRightPlusOrMinusParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlusOrMinusAccess().getRightMulOrDivParserRuleCall_1_1_0()); }
		ruleMulOrDiv
		{ after(grammarAccess.getPlusOrMinusAccess().getRightMulOrDivParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMulOrDivAccess().getRightPrimaryParserRuleCall_1_1_0()); }
		rulePrimary
		{ after(grammarAccess.getMulOrDivAccess().getRightPrimaryParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ExpressionAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_1_2_0()); }
		rulePrimary
		{ after(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ExpressionAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_2_2_0()); }
		rulePrimary
		{ after(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ExpressionAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_3_2_0()); }
		rulePrimary
		{ after(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ExpressionAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_4_2_0()); }
		rulePrimary
		{ after(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__ValueAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicExpressionAccess().getValueIDENTTerminalRuleCall_1_1_0()); }
		RULE_IDENT
		{ after(grammarAccess.getAtomicExpressionAccess().getValueIDENTTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__ValueAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantExpressionAccess().getValueBOOLTerminalRuleCall_0_1_0()); }
		RULE_BOOL
		{ after(grammarAccess.getConstantExpressionAccess().getValueBOOLTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__ValueAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantExpressionAccess().getValueFLOATTerminalRuleCall_1_1_0()); }
		RULE_FLOAT
		{ after(grammarAccess.getConstantExpressionAccess().getValueFLOATTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__ValueAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantExpressionAccess().getValueINTTerminalRuleCall_2_1_0()); }
		RULE_INT
		{ after(grammarAccess.getConstantExpressionAccess().getValueINTTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_BOOL : ('true'|'false');

RULE_IDENT : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_FLOAT : (('0'..'9')+ '.' ('0'..'9')*|'.' ('0'..'9')+);

RULE_STRING_CONST : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_LUSTRE_COMMENT : (RULE_LUSTRE_ML_COMMENT|RULE_LUSTRE_SL_COMMENT);

fragment RULE_LUSTRE_ML_COMMENT : '(*' ( options {greedy=false;} : . )*'*)';

fragment RULE_LUSTRE_SL_COMMENT : '--' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;
