/*
 * generated by Xtext 2.10.0
 */
grammar InternalLustre;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package de.cau.cs.kieler.lustre.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.cau.cs.kieler.lustre.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import de.cau.cs.kieler.lustre.services.LustreGrammarAccess;

}
@parser::members {
	private LustreGrammarAccess grammarAccess;

	public void setGrammarAccess(LustreGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleProgram
entryRuleProgram
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_LUSTRE_COMMENT");
}
:
{ before(grammarAccess.getProgramRule()); }
	 ruleProgram
{ after(grammarAccess.getProgramRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Program
ruleProgram 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_LUSTRE_COMMENT");
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getProgramAccess().getPackagesAssignment()); }
			(rule__Program__PackagesAssignment)
			{ after(grammarAccess.getProgramAccess().getPackagesAssignment()); }
		)
		(
			{ before(grammarAccess.getProgramAccess().getPackagesAssignment()); }
			(rule__Program__PackagesAssignment)*
			{ after(grammarAccess.getProgramAccess().getPackagesAssignment()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRulePackage_Declaration
entryRulePackage_Declaration
:
{ before(grammarAccess.getPackage_DeclarationRule()); }
	 rulePackage_Declaration
{ after(grammarAccess.getPackage_DeclarationRule()); } 
	 EOF 
;

// Rule Package_Declaration
rulePackage_Declaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPackage_DeclarationAccess().getGroup()); }
		(rule__Package_Declaration__Group__0)
		{ after(grammarAccess.getPackage_DeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePackage_Provided
entryRulePackage_Provided
:
{ before(grammarAccess.getPackage_ProvidedRule()); }
	 rulePackage_Provided
{ after(grammarAccess.getPackage_ProvidedRule()); } 
	 EOF 
;

// Rule Package_Provided
rulePackage_Provided 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPackage_ProvidedAccess().getGroup()); }
		(rule__Package_Provided__Group__0)
		{ after(grammarAccess.getPackage_ProvidedAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePackage_Provided_IO
entryRulePackage_Provided_IO
:
{ before(grammarAccess.getPackage_Provided_IORule()); }
	 rulePackage_Provided_IO
{ after(grammarAccess.getPackage_Provided_IORule()); } 
	 EOF 
;

// Rule Package_Provided_IO
rulePackage_Provided_IO 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPackage_Provided_IOAccess().getGroup()); }
		(rule__Package_Provided_IO__Group__0)
		{ after(grammarAccess.getPackage_Provided_IOAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType_Declaration
entryRuleType_Declaration
:
{ before(grammarAccess.getType_DeclarationRule()); }
	 ruleType_Declaration
{ after(grammarAccess.getType_DeclarationRule()); } 
	 EOF 
;

// Rule Type_Declaration
ruleType_Declaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getType_DeclarationAccess().getAlternatives()); }
		(rule__Type_Declaration__Alternatives)
		{ after(grammarAccess.getType_DeclarationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getNameAssignment()); }
		(rule__Type__NameAssignment)
		{ after(grammarAccess.getTypeAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleField
entryRuleField
:
{ before(grammarAccess.getFieldRule()); }
	 ruleField
{ after(grammarAccess.getFieldRule()); } 
	 EOF 
;

// Rule Field
ruleField 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFieldAccess().getGroup()); }
		(rule__Field__Group__0)
		{ after(grammarAccess.getFieldAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstant_Declaration
entryRuleConstant_Declaration
:
{ before(grammarAccess.getConstant_DeclarationRule()); }
	 ruleConstant_Declaration
{ after(grammarAccess.getConstant_DeclarationRule()); } 
	 EOF 
;

// Rule Constant_Declaration
ruleConstant_Declaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstant_DeclarationAccess().getAlternatives()); }
		(rule__Constant_Declaration__Alternatives)
		{ after(grammarAccess.getConstant_DeclarationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariable_Declaration
entryRuleVariable_Declaration
:
{ before(grammarAccess.getVariable_DeclarationRule()); }
	 ruleVariable_Declaration
{ after(grammarAccess.getVariable_DeclarationRule()); } 
	 EOF 
;

// Rule Variable_Declaration
ruleVariable_Declaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariable_DeclarationAccess().getGroup()); }
		(rule__Variable_Declaration__Group__0)
		{ after(grammarAccess.getVariable_DeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLocal_Variable_Declaration
entryRuleLocal_Variable_Declaration
:
{ before(grammarAccess.getLocal_Variable_DeclarationRule()); }
	 ruleLocal_Variable_Declaration
{ after(grammarAccess.getLocal_Variable_DeclarationRule()); } 
	 EOF 
;

// Rule Local_Variable_Declaration
ruleLocal_Variable_Declaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLocal_Variable_DeclarationAccess().getGroup()); }
		(rule__Local_Variable_Declaration__Group__0)
		{ after(grammarAccess.getLocal_Variable_DeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLocal_Constant_Declaration
entryRuleLocal_Constant_Declaration
:
{ before(grammarAccess.getLocal_Constant_DeclarationRule()); }
	 ruleLocal_Constant_Declaration
{ after(grammarAccess.getLocal_Constant_DeclarationRule()); } 
	 EOF 
;

// Rule Local_Constant_Declaration
ruleLocal_Constant_Declaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLocal_Constant_DeclarationAccess().getAlternatives()); }
		(rule__Local_Constant_Declaration__Alternatives)
		{ after(grammarAccess.getLocal_Constant_DeclarationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNode_Declaration
entryRuleNode_Declaration
:
{ before(grammarAccess.getNode_DeclarationRule()); }
	 ruleNode_Declaration
{ after(grammarAccess.getNode_DeclarationRule()); } 
	 EOF 
;

// Rule Node_Declaration
ruleNode_Declaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNode_DeclarationAccess().getGroup()); }
		(rule__Node_Declaration__Group__0)
		{ after(grammarAccess.getNode_DeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEquation
entryRuleEquation
:
{ before(grammarAccess.getEquationRule()); }
	 ruleEquation
{ after(grammarAccess.getEquationRule()); } 
	 EOF 
;

// Rule Equation
ruleEquation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEquationAccess().getGroup()); }
		(rule__Equation__Group__0)
		{ after(grammarAccess.getEquationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssertion
entryRuleAssertion
:
{ before(grammarAccess.getAssertionRule()); }
	 ruleAssertion
{ after(grammarAccess.getAssertionRule()); } 
	 EOF 
;

// Rule Assertion
ruleAssertion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssertionAccess().getGroup()); }
		(rule__Assertion__Group__0)
		{ after(grammarAccess.getAssertionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLeft_List
entryRuleLeft_List
:
{ before(grammarAccess.getLeft_ListRule()); }
	 ruleLeft_List
{ after(grammarAccess.getLeft_ListRule()); } 
	 EOF 
;

// Rule Left_List
ruleLeft_List 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLeft_ListAccess().getGroup()); }
		(rule__Left_List__Group__0)
		{ after(grammarAccess.getLeft_ListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLeft
entryRuleLeft
:
{ before(grammarAccess.getLeftRule()); }
	 ruleLeft
{ after(grammarAccess.getLeftRule()); } 
	 EOF 
;

// Rule Left
ruleLeft 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLeftAccess().getGroup()); }
		(rule__Left__Group__0)
		{ after(grammarAccess.getLeftAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelector
entryRuleSelector
:
{ before(grammarAccess.getSelectorRule()); }
	 ruleSelector
{ after(grammarAccess.getSelectorRule()); } 
	 EOF 
;

// Rule Selector
ruleSelector 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectorAccess().getAlternatives()); }
		(rule__Selector__Alternatives)
		{ after(grammarAccess.getSelectorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelTrancheEnd
entryRuleSelTrancheEnd
:
{ before(grammarAccess.getSelTrancheEndRule()); }
	 ruleSelTrancheEnd
{ after(grammarAccess.getSelTrancheEndRule()); } 
	 EOF 
;

// Rule SelTrancheEnd
ruleSelTrancheEnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelTrancheEndAccess().getGroup()); }
		(rule__SelTrancheEnd__Group__0)
		{ after(grammarAccess.getSelTrancheEndAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRight_Part
entryRuleRight_Part
:
{ before(grammarAccess.getRight_PartRule()); }
	 ruleRight_Part
{ after(grammarAccess.getRight_PartRule()); } 
	 EOF 
;

// Rule Right_Part
ruleRight_Part 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRight_PartAccess().getExpressionParserRuleCall()); }
		ruleExpression
		{ after(grammarAccess.getRight_PartAccess().getExpressionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
		(rule__Expression__Alternatives)
		{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFby
entryRuleFby
:
{ before(grammarAccess.getFbyRule()); }
	 ruleFby
{ after(grammarAccess.getFbyRule()); } 
	 EOF 
;

// Rule Fby
ruleFby 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFbyAccess().getGroup()); }
		(rule__Fby__Group__0)
		{ after(grammarAccess.getFbyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArrow
entryRuleArrow
:
{ before(grammarAccess.getArrowRule()); }
	 ruleArrow
{ after(grammarAccess.getArrowRule()); } 
	 EOF 
;

// Rule Arrow
ruleArrow 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArrowAccess().getGroup()); }
		(rule__Arrow__Group__0)
		{ after(grammarAccess.getArrowAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOr
entryRuleOr
:
{ before(grammarAccess.getOrRule()); }
	 ruleOr
{ after(grammarAccess.getOrRule()); } 
	 EOF 
;

// Rule Or
ruleOr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrAccess().getGroup()); }
		(rule__Or__Group__0)
		{ after(grammarAccess.getOrAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnd
entryRuleAnd
:
{ before(grammarAccess.getAndRule()); }
	 ruleAnd
{ after(grammarAccess.getAndRule()); } 
	 EOF 
;

// Rule And
ruleAnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndAccess().getGroup()); }
		(rule__And__Group__0)
		{ after(grammarAccess.getAndAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEquality
entryRuleEquality
:
{ before(grammarAccess.getEqualityRule()); }
	 ruleEquality
{ after(grammarAccess.getEqualityRule()); } 
	 EOF 
;

// Rule Equality
ruleEquality 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEqualityAccess().getGroup()); }
		(rule__Equality__Group__0)
		{ after(grammarAccess.getEqualityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComparison
entryRuleComparison
:
{ before(grammarAccess.getComparisonRule()); }
	 ruleComparison
{ after(grammarAccess.getComparisonRule()); } 
	 EOF 
;

// Rule Comparison
ruleComparison 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComparisonAccess().getGroup()); }
		(rule__Comparison__Group__0)
		{ after(grammarAccess.getComparisonAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePlusOrMinus
entryRulePlusOrMinus
:
{ before(grammarAccess.getPlusOrMinusRule()); }
	 rulePlusOrMinus
{ after(grammarAccess.getPlusOrMinusRule()); } 
	 EOF 
;

// Rule PlusOrMinus
rulePlusOrMinus 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPlusOrMinusAccess().getGroup()); }
		(rule__PlusOrMinus__Group__0)
		{ after(grammarAccess.getPlusOrMinusAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMulOrDiv
entryRuleMulOrDiv
:
{ before(grammarAccess.getMulOrDivRule()); }
	 ruleMulOrDiv
{ after(grammarAccess.getMulOrDivRule()); } 
	 EOF 
;

// Rule MulOrDiv
ruleMulOrDiv 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMulOrDivAccess().getGroup()); }
		(rule__MulOrDiv__Group__0)
		{ after(grammarAccess.getMulOrDivAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimary
entryRulePrimary
:
{ before(grammarAccess.getPrimaryRule()); }
	 rulePrimary
{ after(grammarAccess.getPrimaryRule()); } 
	 EOF 
;

// Rule Primary
rulePrimary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryAccess().getAlternatives()); }
		(rule__Primary__Alternatives)
		{ after(grammarAccess.getPrimaryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAtomicExpression
entryRuleAtomicExpression
:
{ before(grammarAccess.getAtomicExpressionRule()); }
	 ruleAtomicExpression
{ after(grammarAccess.getAtomicExpressionRule()); } 
	 EOF 
;

// Rule AtomicExpression
ruleAtomicExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAtomicExpressionAccess().getAlternatives()); }
		(rule__AtomicExpression__Alternatives)
		{ after(grammarAccess.getAtomicExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableReference
entryRuleVariableReference
:
{ before(grammarAccess.getVariableReferenceRule()); }
	 ruleVariableReference
{ after(grammarAccess.getVariableReferenceRule()); } 
	 EOF 
;

// Rule VariableReference
ruleVariableReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableReferenceAccess().getGroup()); }
		(rule__VariableReference__Group__0)
		{ after(grammarAccess.getVariableReferenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstantExpression
entryRuleConstantExpression
:
{ before(grammarAccess.getConstantExpressionRule()); }
	 ruleConstantExpression
{ after(grammarAccess.getConstantExpressionRule()); } 
	 EOF 
;

// Rule ConstantExpression
ruleConstantExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstantExpressionAccess().getAlternatives()); }
		(rule__ConstantExpression__Alternatives)
		{ after(grammarAccess.getConstantExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Declaration__Alternatives_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackage_DeclarationAccess().getNodesAssignment_6_0()); }
		(rule__Package_Declaration__NodesAssignment_6_0)
		{ after(grammarAccess.getPackage_DeclarationAccess().getNodesAssignment_6_0()); }
	)
	|
	(
		{ before(grammarAccess.getPackage_DeclarationAccess().getTypesAssignment_6_1()); }
		(rule__Package_Declaration__TypesAssignment_6_1)
		{ after(grammarAccess.getPackage_DeclarationAccess().getTypesAssignment_6_1()); }
	)
	|
	(
		{ before(grammarAccess.getPackage_DeclarationAccess().getConstantsAssignment_6_2()); }
		(rule__Package_Declaration__ConstantsAssignment_6_2)
		{ after(grammarAccess.getPackage_DeclarationAccess().getConstantsAssignment_6_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_Declaration__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getType_DeclarationAccess().getGroup_0()); }
		(rule__Type_Declaration__Group_0__0)
		{ after(grammarAccess.getType_DeclarationAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getType_DeclarationAccess().getGroup_1()); }
		(rule__Type_Declaration__Group_1__0)
		{ after(grammarAccess.getType_DeclarationAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_Declaration__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstant_DeclarationAccess().getGroup_0()); }
		(rule__Constant_Declaration__Group_0__0)
		{ after(grammarAccess.getConstant_DeclarationAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getConstant_DeclarationAccess().getGroup_1()); }
		(rule__Constant_Declaration__Group_1__0)
		{ after(grammarAccess.getConstant_DeclarationAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getConstant_DeclarationAccess().getGroup_2()); }
		(rule__Constant_Declaration__Group_2__0)
		{ after(grammarAccess.getConstant_DeclarationAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Local_Constant_Declaration__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocal_Constant_DeclarationAccess().getGroup_0()); }
		(rule__Local_Constant_Declaration__Group_0__0)
		{ after(grammarAccess.getLocal_Constant_DeclarationAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getLocal_Constant_DeclarationAccess().getGroup_1()); }
		(rule__Local_Constant_Declaration__Group_1__0)
		{ after(grammarAccess.getLocal_Constant_DeclarationAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Declaration__Alternatives_11
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNode_DeclarationAccess().getConstantsAssignment_11_0()); }
		(rule__Node_Declaration__ConstantsAssignment_11_0)
		{ after(grammarAccess.getNode_DeclarationAccess().getConstantsAssignment_11_0()); }
	)
	|
	(
		{ before(grammarAccess.getNode_DeclarationAccess().getVariablesAssignment_11_1()); }
		(rule__Node_Declaration__VariablesAssignment_11_1)
		{ after(grammarAccess.getNode_DeclarationAccess().getVariablesAssignment_11_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Declaration__Alternatives_13
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNode_DeclarationAccess().getEquationsAssignment_13_0()); }
		(rule__Node_Declaration__EquationsAssignment_13_0)
		{ after(grammarAccess.getNode_DeclarationAccess().getEquationsAssignment_13_0()); }
	)
	|
	(
		{ before(grammarAccess.getNode_DeclarationAccess().getAssertionsAssignment_13_1()); }
		(rule__Node_Declaration__AssertionsAssignment_13_1)
		{ after(grammarAccess.getNode_DeclarationAccess().getAssertionsAssignment_13_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectorAccess().getGroup_0()); }
		(rule__Selector__Group_0__0)
		{ after(grammarAccess.getSelectorAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getSelectorAccess().getGroup_1()); }
		(rule__Selector__Group_1__0)
		{ after(grammarAccess.getSelectorAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getGroup_0()); }
		(rule__Expression__Group_0__0)
		{ after(grammarAccess.getExpressionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getFbyParserRuleCall_1()); }
		ruleFby
		{ after(grammarAccess.getExpressionAccess().getFbyParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityAccess().getOpEqualsSignKeyword_1_1_0_0()); }
		'='
		{ after(grammarAccess.getEqualityAccess().getOpEqualsSignKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getEqualityAccess().getOpLessThanSignGreaterThanSignKeyword_1_1_0_1()); }
		'<>'
		{ after(grammarAccess.getEqualityAccess().getOpLessThanSignGreaterThanSignKeyword_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_0()); }
		'>='
		{ after(grammarAccess.getComparisonAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_1()); }
		'<='
		{ after(grammarAccess.getComparisonAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonAccess().getOpGreaterThanSignKeyword_1_1_0_2()); }
		'>'
		{ after(grammarAccess.getComparisonAccess().getOpGreaterThanSignKeyword_1_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonAccess().getOpLessThanSignKeyword_1_1_0_3()); }
		'<'
		{ after(grammarAccess.getComparisonAccess().getOpLessThanSignKeyword_1_1_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlusOrMinusAccess().getGroup_1_0_0()); }
		(rule__PlusOrMinus__Group_1_0_0__0)
		{ after(grammarAccess.getPlusOrMinusAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPlusOrMinusAccess().getGroup_1_0_1()); }
		(rule__PlusOrMinus__Group_1_0_1__0)
		{ after(grammarAccess.getPlusOrMinusAccess().getGroup_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMulOrDivAccess().getGroup_1_0_0()); }
		(rule__MulOrDiv__Group_1_0_0__0)
		{ after(grammarAccess.getMulOrDivAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMulOrDivAccess().getGroup_1_0_1()); }
		(rule__MulOrDiv__Group_1_0_1__0)
		{ after(grammarAccess.getMulOrDivAccess().getGroup_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_0()); }
		(rule__Primary__Group_0__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_1()); }
		(rule__Primary__Group_1__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_2()); }
		(rule__Primary__Group_2__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_3()); }
		(rule__Primary__Group_3__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_4()); }
		(rule__Primary__Group_4__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getAtomicExpressionParserRuleCall_5()); }
		ruleAtomicExpression
		{ after(grammarAccess.getPrimaryAccess().getAtomicExpressionParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicExpressionAccess().getConstantExpressionParserRuleCall_0()); }
		ruleConstantExpression
		{ after(grammarAccess.getAtomicExpressionAccess().getConstantExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicExpressionAccess().getVariableReferenceParserRuleCall_1()); }
		ruleVariableReference
		{ after(grammarAccess.getAtomicExpressionAccess().getVariableReferenceParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantExpressionAccess().getGroup_0()); }
		(rule__ConstantExpression__Group_0__0)
		{ after(grammarAccess.getConstantExpressionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getConstantExpressionAccess().getGroup_1()); }
		(rule__ConstantExpression__Group_1__0)
		{ after(grammarAccess.getConstantExpressionAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getConstantExpressionAccess().getGroup_2()); }
		(rule__ConstantExpression__Group_2__0)
		{ after(grammarAccess.getConstantExpressionAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Declaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package_Declaration__Group__0__Impl
	rule__Package_Declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Declaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackage_DeclarationAccess().getPackageKeyword_0()); }
	'package'
	{ after(grammarAccess.getPackage_DeclarationAccess().getPackageKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Declaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package_Declaration__Group__1__Impl
	rule__Package_Declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Declaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackage_DeclarationAccess().getNameAssignment_1()); }
	(rule__Package_Declaration__NameAssignment_1)
	{ after(grammarAccess.getPackage_DeclarationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Declaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package_Declaration__Group__2__Impl
	rule__Package_Declaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Declaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackage_DeclarationAccess().getGroup_2()); }
	(rule__Package_Declaration__Group_2__0)?
	{ after(grammarAccess.getPackage_DeclarationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Declaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package_Declaration__Group__3__Impl
	rule__Package_Declaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Declaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackage_DeclarationAccess().getProvidesKeyword_3()); }
	'provides'
	{ after(grammarAccess.getPackage_DeclarationAccess().getProvidesKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Declaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package_Declaration__Group__4__Impl
	rule__Package_Declaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Declaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getPackage_DeclarationAccess().getProvidesAssignment_4()); }
		(rule__Package_Declaration__ProvidesAssignment_4)
		{ after(grammarAccess.getPackage_DeclarationAccess().getProvidesAssignment_4()); }
	)
	(
		{ before(grammarAccess.getPackage_DeclarationAccess().getProvidesAssignment_4()); }
		(rule__Package_Declaration__ProvidesAssignment_4)*
		{ after(grammarAccess.getPackage_DeclarationAccess().getProvidesAssignment_4()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Declaration__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package_Declaration__Group__5__Impl
	rule__Package_Declaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Declaration__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackage_DeclarationAccess().getBodyKeyword_5()); }
	'body'
	{ after(grammarAccess.getPackage_DeclarationAccess().getBodyKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Declaration__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package_Declaration__Group__6__Impl
	rule__Package_Declaration__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Declaration__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackage_DeclarationAccess().getAlternatives_6()); }
	(rule__Package_Declaration__Alternatives_6)*
	{ after(grammarAccess.getPackage_DeclarationAccess().getAlternatives_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Declaration__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package_Declaration__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Declaration__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackage_DeclarationAccess().getEndKeyword_7()); }
	'end'
	{ after(grammarAccess.getPackage_DeclarationAccess().getEndKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Package_Declaration__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package_Declaration__Group_2__0__Impl
	rule__Package_Declaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Declaration__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackage_DeclarationAccess().getUsesKeyword_2_0()); }
	'uses'
	{ after(grammarAccess.getPackage_DeclarationAccess().getUsesKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Declaration__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package_Declaration__Group_2__1__Impl
	rule__Package_Declaration__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Declaration__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackage_DeclarationAccess().getUsesAssignment_2_1()); }
	(rule__Package_Declaration__UsesAssignment_2_1)
	{ after(grammarAccess.getPackage_DeclarationAccess().getUsesAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Declaration__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package_Declaration__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Declaration__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackage_DeclarationAccess().getGroup_2_2()); }
	(rule__Package_Declaration__Group_2_2__0)*
	{ after(grammarAccess.getPackage_DeclarationAccess().getGroup_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Package_Declaration__Group_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package_Declaration__Group_2_2__0__Impl
	rule__Package_Declaration__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Declaration__Group_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackage_DeclarationAccess().getCommaKeyword_2_2_0()); }
	','
	{ after(grammarAccess.getPackage_DeclarationAccess().getCommaKeyword_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Declaration__Group_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package_Declaration__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Declaration__Group_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackage_DeclarationAccess().getUsesAssignment_2_2_1()); }
	(rule__Package_Declaration__UsesAssignment_2_2_1)
	{ after(grammarAccess.getPackage_DeclarationAccess().getUsesAssignment_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Package_Provided__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package_Provided__Group__0__Impl
	rule__Package_Provided__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provided__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackage_ProvidedAccess().getNodeKeyword_0()); }
	'node'
	{ after(grammarAccess.getPackage_ProvidedAccess().getNodeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provided__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package_Provided__Group__1__Impl
	rule__Package_Provided__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provided__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackage_ProvidedAccess().getNameAssignment_1()); }
	(rule__Package_Provided__NameAssignment_1)
	{ after(grammarAccess.getPackage_ProvidedAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provided__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package_Provided__Group__2__Impl
	rule__Package_Provided__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provided__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackage_ProvidedAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getPackage_ProvidedAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provided__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package_Provided__Group__3__Impl
	rule__Package_Provided__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provided__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackage_ProvidedAccess().getGroup_3()); }
	(rule__Package_Provided__Group_3__0)?
	{ after(grammarAccess.getPackage_ProvidedAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provided__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package_Provided__Group__4__Impl
	rule__Package_Provided__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provided__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackage_ProvidedAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getPackage_ProvidedAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provided__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package_Provided__Group__5__Impl
	rule__Package_Provided__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provided__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackage_ProvidedAccess().getReturnsKeyword_5()); }
	'returns'
	{ after(grammarAccess.getPackage_ProvidedAccess().getReturnsKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provided__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package_Provided__Group__6__Impl
	rule__Package_Provided__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provided__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackage_ProvidedAccess().getLeftParenthesisKeyword_6()); }
	'('
	{ after(grammarAccess.getPackage_ProvidedAccess().getLeftParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provided__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package_Provided__Group__7__Impl
	rule__Package_Provided__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provided__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackage_ProvidedAccess().getReturnedAssignment_7()); }
	(rule__Package_Provided__ReturnedAssignment_7)
	{ after(grammarAccess.getPackage_ProvidedAccess().getReturnedAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provided__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package_Provided__Group__8__Impl
	rule__Package_Provided__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provided__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackage_ProvidedAccess().getGroup_8()); }
	(rule__Package_Provided__Group_8__0)*
	{ after(grammarAccess.getPackage_ProvidedAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provided__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package_Provided__Group__9__Impl
	rule__Package_Provided__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provided__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackage_ProvidedAccess().getRightParenthesisKeyword_9()); }
	')'
	{ after(grammarAccess.getPackage_ProvidedAccess().getRightParenthesisKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provided__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package_Provided__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provided__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackage_ProvidedAccess().getSemicolonKeyword_10()); }
	';'
	{ after(grammarAccess.getPackage_ProvidedAccess().getSemicolonKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Package_Provided__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package_Provided__Group_3__0__Impl
	rule__Package_Provided__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provided__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackage_ProvidedAccess().getParametersAssignment_3_0()); }
	(rule__Package_Provided__ParametersAssignment_3_0)
	{ after(grammarAccess.getPackage_ProvidedAccess().getParametersAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provided__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package_Provided__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provided__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackage_ProvidedAccess().getGroup_3_1()); }
	(rule__Package_Provided__Group_3_1__0)*
	{ after(grammarAccess.getPackage_ProvidedAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Package_Provided__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package_Provided__Group_3_1__0__Impl
	rule__Package_Provided__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provided__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackage_ProvidedAccess().getCommaKeyword_3_1_0()); }
	','
	{ after(grammarAccess.getPackage_ProvidedAccess().getCommaKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provided__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package_Provided__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provided__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackage_ProvidedAccess().getParametersAssignment_3_1_1()); }
	(rule__Package_Provided__ParametersAssignment_3_1_1)
	{ after(grammarAccess.getPackage_ProvidedAccess().getParametersAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Package_Provided__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package_Provided__Group_8__0__Impl
	rule__Package_Provided__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provided__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackage_ProvidedAccess().getCommaKeyword_8_0()); }
	','
	{ after(grammarAccess.getPackage_ProvidedAccess().getCommaKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provided__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package_Provided__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provided__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackage_ProvidedAccess().getReturnedAssignment_8_1()); }
	(rule__Package_Provided__ReturnedAssignment_8_1)
	{ after(grammarAccess.getPackage_ProvidedAccess().getReturnedAssignment_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Package_Provided_IO__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package_Provided_IO__Group__0__Impl
	rule__Package_Provided_IO__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provided_IO__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackage_Provided_IOAccess().getNameAssignment_0()); }
	(rule__Package_Provided_IO__NameAssignment_0)
	{ after(grammarAccess.getPackage_Provided_IOAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provided_IO__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package_Provided_IO__Group__1__Impl
	rule__Package_Provided_IO__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provided_IO__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackage_Provided_IOAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getPackage_Provided_IOAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provided_IO__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package_Provided_IO__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provided_IO__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackage_Provided_IOAccess().getTypeAssignment_2()); }
	(rule__Package_Provided_IO__TypeAssignment_2)
	{ after(grammarAccess.getPackage_Provided_IOAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type_Declaration__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type_Declaration__Group_0__0__Impl
	rule__Type_Declaration__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_Declaration__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getType_DeclarationAccess().getTypeKeyword_0_0()); }
	'type'
	{ after(grammarAccess.getType_DeclarationAccess().getTypeKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_Declaration__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type_Declaration__Group_0__1__Impl
	rule__Type_Declaration__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_Declaration__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getType_DeclarationAccess().getNameAssignment_0_1()); }
	(rule__Type_Declaration__NameAssignment_0_1)
	{ after(grammarAccess.getType_DeclarationAccess().getNameAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_Declaration__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type_Declaration__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_Declaration__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getType_DeclarationAccess().getSemicolonKeyword_0_2()); }
	';'
	{ after(grammarAccess.getType_DeclarationAccess().getSemicolonKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type_Declaration__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type_Declaration__Group_1__0__Impl
	rule__Type_Declaration__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_Declaration__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getType_DeclarationAccess().getTypeKeyword_1_0()); }
	'type'
	{ after(grammarAccess.getType_DeclarationAccess().getTypeKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_Declaration__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type_Declaration__Group_1__1__Impl
	rule__Type_Declaration__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_Declaration__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getType_DeclarationAccess().getNameAssignment_1_1()); }
	(rule__Type_Declaration__NameAssignment_1_1)
	{ after(grammarAccess.getType_DeclarationAccess().getNameAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_Declaration__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type_Declaration__Group_1__2__Impl
	rule__Type_Declaration__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_Declaration__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getType_DeclarationAccess().getEqualsSignKeyword_1_2()); }
	'='
	{ after(grammarAccess.getType_DeclarationAccess().getEqualsSignKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_Declaration__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type_Declaration__Group_1__3__Impl
	rule__Type_Declaration__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_Declaration__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getType_DeclarationAccess().getTypeAssignment_1_3()); }
	(rule__Type_Declaration__TypeAssignment_1_3)
	{ after(grammarAccess.getType_DeclarationAccess().getTypeAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_Declaration__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type_Declaration__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_Declaration__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getType_DeclarationAccess().getSemicolonKeyword_1_4()); }
	';'
	{ after(grammarAccess.getType_DeclarationAccess().getSemicolonKeyword_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__0__Impl
	rule__Field__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getNameAssignment_0()); }
	(rule__Field__NameAssignment_0)
	{ after(grammarAccess.getFieldAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__1__Impl
	rule__Field__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getFieldAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getTypeAssignment_2()); }
	(rule__Field__TypeAssignment_2)
	{ after(grammarAccess.getFieldAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constant_Declaration__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant_Declaration__Group_0__0__Impl
	rule__Constant_Declaration__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_Declaration__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstant_DeclarationAccess().getConstKeyword_0_0()); }
	'const'
	{ after(grammarAccess.getConstant_DeclarationAccess().getConstKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_Declaration__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant_Declaration__Group_0__1__Impl
	rule__Constant_Declaration__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_Declaration__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstant_DeclarationAccess().getNameAssignment_0_1()); }
	(rule__Constant_Declaration__NameAssignment_0_1)
	{ after(grammarAccess.getConstant_DeclarationAccess().getNameAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_Declaration__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant_Declaration__Group_0__2__Impl
	rule__Constant_Declaration__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_Declaration__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstant_DeclarationAccess().getColonKeyword_0_2()); }
	':'
	{ after(grammarAccess.getConstant_DeclarationAccess().getColonKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_Declaration__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant_Declaration__Group_0__3__Impl
	rule__Constant_Declaration__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_Declaration__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstant_DeclarationAccess().getTypeAssignment_0_3()); }
	(rule__Constant_Declaration__TypeAssignment_0_3)
	{ after(grammarAccess.getConstant_DeclarationAccess().getTypeAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_Declaration__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant_Declaration__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_Declaration__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstant_DeclarationAccess().getSemicolonKeyword_0_4()); }
	';'
	{ after(grammarAccess.getConstant_DeclarationAccess().getSemicolonKeyword_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constant_Declaration__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant_Declaration__Group_1__0__Impl
	rule__Constant_Declaration__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_Declaration__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstant_DeclarationAccess().getConstKeyword_1_0()); }
	'const'
	{ after(grammarAccess.getConstant_DeclarationAccess().getConstKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_Declaration__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant_Declaration__Group_1__1__Impl
	rule__Constant_Declaration__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_Declaration__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstant_DeclarationAccess().getNameAssignment_1_1()); }
	(rule__Constant_Declaration__NameAssignment_1_1)
	{ after(grammarAccess.getConstant_DeclarationAccess().getNameAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_Declaration__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant_Declaration__Group_1__2__Impl
	rule__Constant_Declaration__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_Declaration__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstant_DeclarationAccess().getEqualsSignKeyword_1_2()); }
	'='
	{ after(grammarAccess.getConstant_DeclarationAccess().getEqualsSignKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_Declaration__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant_Declaration__Group_1__3__Impl
	rule__Constant_Declaration__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_Declaration__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstant_DeclarationAccess().getExprAssignment_1_3()); }
	(rule__Constant_Declaration__ExprAssignment_1_3)
	{ after(grammarAccess.getConstant_DeclarationAccess().getExprAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_Declaration__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant_Declaration__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_Declaration__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstant_DeclarationAccess().getSemicolonKeyword_1_4()); }
	';'
	{ after(grammarAccess.getConstant_DeclarationAccess().getSemicolonKeyword_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constant_Declaration__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant_Declaration__Group_2__0__Impl
	rule__Constant_Declaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_Declaration__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstant_DeclarationAccess().getConstKeyword_2_0()); }
	'const'
	{ after(grammarAccess.getConstant_DeclarationAccess().getConstKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_Declaration__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant_Declaration__Group_2__1__Impl
	rule__Constant_Declaration__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_Declaration__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstant_DeclarationAccess().getNameAssignment_2_1()); }
	(rule__Constant_Declaration__NameAssignment_2_1)
	{ after(grammarAccess.getConstant_DeclarationAccess().getNameAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_Declaration__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant_Declaration__Group_2__2__Impl
	rule__Constant_Declaration__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_Declaration__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstant_DeclarationAccess().getColonKeyword_2_2()); }
	':'
	{ after(grammarAccess.getConstant_DeclarationAccess().getColonKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_Declaration__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant_Declaration__Group_2__3__Impl
	rule__Constant_Declaration__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_Declaration__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstant_DeclarationAccess().getTypeAssignment_2_3()); }
	(rule__Constant_Declaration__TypeAssignment_2_3)
	{ after(grammarAccess.getConstant_DeclarationAccess().getTypeAssignment_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_Declaration__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant_Declaration__Group_2__4__Impl
	rule__Constant_Declaration__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_Declaration__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstant_DeclarationAccess().getEqualsSignKeyword_2_4()); }
	'='
	{ after(grammarAccess.getConstant_DeclarationAccess().getEqualsSignKeyword_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_Declaration__Group_2__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant_Declaration__Group_2__5__Impl
	rule__Constant_Declaration__Group_2__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_Declaration__Group_2__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstant_DeclarationAccess().getExprAssignment_2_5()); }
	(rule__Constant_Declaration__ExprAssignment_2_5)
	{ after(grammarAccess.getConstant_DeclarationAccess().getExprAssignment_2_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_Declaration__Group_2__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant_Declaration__Group_2__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_Declaration__Group_2__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstant_DeclarationAccess().getSemicolonKeyword_2_6()); }
	';'
	{ after(grammarAccess.getConstant_DeclarationAccess().getSemicolonKeyword_2_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_Declaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable_Declaration__Group__0__Impl
	rule__Variable_Declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_Declaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariable_DeclarationAccess().getNameAssignment_0()); }
	(rule__Variable_Declaration__NameAssignment_0)
	{ after(grammarAccess.getVariable_DeclarationAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_Declaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable_Declaration__Group__1__Impl
	rule__Variable_Declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_Declaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariable_DeclarationAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getVariable_DeclarationAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_Declaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable_Declaration__Group__2__Impl
	rule__Variable_Declaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_Declaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariable_DeclarationAccess().getTypeAssignment_2()); }
	(rule__Variable_Declaration__TypeAssignment_2)
	{ after(grammarAccess.getVariable_DeclarationAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_Declaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable_Declaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_Declaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariable_DeclarationAccess().getGroup_3()); }
	(rule__Variable_Declaration__Group_3__0)?
	{ after(grammarAccess.getVariable_DeclarationAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_Declaration__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable_Declaration__Group_3__0__Impl
	rule__Variable_Declaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_Declaration__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariable_DeclarationAccess().getWhenKeyword_3_0()); }
	'when'
	{ after(grammarAccess.getVariable_DeclarationAccess().getWhenKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_Declaration__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable_Declaration__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_Declaration__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariable_DeclarationAccess().getClockAssignment_3_1()); }
	(rule__Variable_Declaration__ClockAssignment_3_1)
	{ after(grammarAccess.getVariable_DeclarationAccess().getClockAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Local_Variable_Declaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Local_Variable_Declaration__Group__0__Impl
	rule__Local_Variable_Declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Local_Variable_Declaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocal_Variable_DeclarationAccess().getVarKeyword_0()); }
	'var'
	{ after(grammarAccess.getLocal_Variable_DeclarationAccess().getVarKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Local_Variable_Declaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Local_Variable_Declaration__Group__1__Impl
	rule__Local_Variable_Declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Local_Variable_Declaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocal_Variable_DeclarationAccess().getVariable_DeclarationParserRuleCall_1()); }
	ruleVariable_Declaration
	{ after(grammarAccess.getLocal_Variable_DeclarationAccess().getVariable_DeclarationParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Local_Variable_Declaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Local_Variable_Declaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Local_Variable_Declaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocal_Variable_DeclarationAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getLocal_Variable_DeclarationAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Local_Constant_Declaration__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Local_Constant_Declaration__Group_0__0__Impl
	rule__Local_Constant_Declaration__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Local_Constant_Declaration__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocal_Constant_DeclarationAccess().getConstant_DeclarationAction_0_0()); }
	()
	{ after(grammarAccess.getLocal_Constant_DeclarationAccess().getConstant_DeclarationAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Local_Constant_Declaration__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Local_Constant_Declaration__Group_0__1__Impl
	rule__Local_Constant_Declaration__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Local_Constant_Declaration__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocal_Constant_DeclarationAccess().getConstKeyword_0_1()); }
	'const'
	{ after(grammarAccess.getLocal_Constant_DeclarationAccess().getConstKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Local_Constant_Declaration__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Local_Constant_Declaration__Group_0__2__Impl
	rule__Local_Constant_Declaration__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Local_Constant_Declaration__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocal_Constant_DeclarationAccess().getNameAssignment_0_2()); }
	(rule__Local_Constant_Declaration__NameAssignment_0_2)
	{ after(grammarAccess.getLocal_Constant_DeclarationAccess().getNameAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Local_Constant_Declaration__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Local_Constant_Declaration__Group_0__3__Impl
	rule__Local_Constant_Declaration__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Local_Constant_Declaration__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocal_Constant_DeclarationAccess().getEqualsSignKeyword_0_3()); }
	'='
	{ after(grammarAccess.getLocal_Constant_DeclarationAccess().getEqualsSignKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Local_Constant_Declaration__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Local_Constant_Declaration__Group_0__4__Impl
	rule__Local_Constant_Declaration__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Local_Constant_Declaration__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocal_Constant_DeclarationAccess().getExprAssignment_0_4()); }
	(rule__Local_Constant_Declaration__ExprAssignment_0_4)
	{ after(grammarAccess.getLocal_Constant_DeclarationAccess().getExprAssignment_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Local_Constant_Declaration__Group_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Local_Constant_Declaration__Group_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Local_Constant_Declaration__Group_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocal_Constant_DeclarationAccess().getSemicolonKeyword_0_5()); }
	';'
	{ after(grammarAccess.getLocal_Constant_DeclarationAccess().getSemicolonKeyword_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Local_Constant_Declaration__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Local_Constant_Declaration__Group_1__0__Impl
	rule__Local_Constant_Declaration__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Local_Constant_Declaration__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocal_Constant_DeclarationAccess().getConstant_DeclarationAction_1_0()); }
	()
	{ after(grammarAccess.getLocal_Constant_DeclarationAccess().getConstant_DeclarationAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Local_Constant_Declaration__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Local_Constant_Declaration__Group_1__1__Impl
	rule__Local_Constant_Declaration__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Local_Constant_Declaration__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocal_Constant_DeclarationAccess().getConstKeyword_1_1()); }
	'const'
	{ after(grammarAccess.getLocal_Constant_DeclarationAccess().getConstKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Local_Constant_Declaration__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Local_Constant_Declaration__Group_1__2__Impl
	rule__Local_Constant_Declaration__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Local_Constant_Declaration__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocal_Constant_DeclarationAccess().getNameAssignment_1_2()); }
	(rule__Local_Constant_Declaration__NameAssignment_1_2)
	{ after(grammarAccess.getLocal_Constant_DeclarationAccess().getNameAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Local_Constant_Declaration__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Local_Constant_Declaration__Group_1__3__Impl
	rule__Local_Constant_Declaration__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Local_Constant_Declaration__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocal_Constant_DeclarationAccess().getColonKeyword_1_3()); }
	':'
	{ after(grammarAccess.getLocal_Constant_DeclarationAccess().getColonKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Local_Constant_Declaration__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Local_Constant_Declaration__Group_1__4__Impl
	rule__Local_Constant_Declaration__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Local_Constant_Declaration__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocal_Constant_DeclarationAccess().getTypeAssignment_1_4()); }
	(rule__Local_Constant_Declaration__TypeAssignment_1_4)
	{ after(grammarAccess.getLocal_Constant_DeclarationAccess().getTypeAssignment_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Local_Constant_Declaration__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Local_Constant_Declaration__Group_1__5__Impl
	rule__Local_Constant_Declaration__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Local_Constant_Declaration__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocal_Constant_DeclarationAccess().getEqualsSignKeyword_1_5()); }
	'='
	{ after(grammarAccess.getLocal_Constant_DeclarationAccess().getEqualsSignKeyword_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Local_Constant_Declaration__Group_1__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Local_Constant_Declaration__Group_1__6__Impl
	rule__Local_Constant_Declaration__Group_1__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Local_Constant_Declaration__Group_1__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocal_Constant_DeclarationAccess().getExprAssignment_1_6()); }
	(rule__Local_Constant_Declaration__ExprAssignment_1_6)
	{ after(grammarAccess.getLocal_Constant_DeclarationAccess().getExprAssignment_1_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Local_Constant_Declaration__Group_1__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Local_Constant_Declaration__Group_1__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Local_Constant_Declaration__Group_1__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocal_Constant_DeclarationAccess().getSemicolonKeyword_1_7()); }
	';'
	{ after(grammarAccess.getLocal_Constant_DeclarationAccess().getSemicolonKeyword_1_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Node_Declaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node_Declaration__Group__0__Impl
	rule__Node_Declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Declaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNode_DeclarationAccess().getNodeKeyword_0()); }
	'node'
	{ after(grammarAccess.getNode_DeclarationAccess().getNodeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Declaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node_Declaration__Group__1__Impl
	rule__Node_Declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Declaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNode_DeclarationAccess().getNameAssignment_1()); }
	(rule__Node_Declaration__NameAssignment_1)
	{ after(grammarAccess.getNode_DeclarationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Declaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node_Declaration__Group__2__Impl
	rule__Node_Declaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Declaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNode_DeclarationAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getNode_DeclarationAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Declaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node_Declaration__Group__3__Impl
	rule__Node_Declaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Declaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNode_DeclarationAccess().getGroup_3()); }
	(rule__Node_Declaration__Group_3__0)?
	{ after(grammarAccess.getNode_DeclarationAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Declaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node_Declaration__Group__4__Impl
	rule__Node_Declaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Declaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNode_DeclarationAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getNode_DeclarationAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Declaration__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node_Declaration__Group__5__Impl
	rule__Node_Declaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Declaration__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNode_DeclarationAccess().getReturnsKeyword_5()); }
	'returns'
	{ after(grammarAccess.getNode_DeclarationAccess().getReturnsKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Declaration__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node_Declaration__Group__6__Impl
	rule__Node_Declaration__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Declaration__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNode_DeclarationAccess().getLeftParenthesisKeyword_6()); }
	'('
	{ after(grammarAccess.getNode_DeclarationAccess().getLeftParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Declaration__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node_Declaration__Group__7__Impl
	rule__Node_Declaration__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Declaration__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNode_DeclarationAccess().getReturnedAssignment_7()); }
	(rule__Node_Declaration__ReturnedAssignment_7)
	{ after(grammarAccess.getNode_DeclarationAccess().getReturnedAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Declaration__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node_Declaration__Group__8__Impl
	rule__Node_Declaration__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Declaration__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNode_DeclarationAccess().getGroup_8()); }
	(rule__Node_Declaration__Group_8__0)*
	{ after(grammarAccess.getNode_DeclarationAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Declaration__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node_Declaration__Group__9__Impl
	rule__Node_Declaration__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Declaration__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNode_DeclarationAccess().getRightParenthesisKeyword_9()); }
	')'
	{ after(grammarAccess.getNode_DeclarationAccess().getRightParenthesisKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Declaration__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node_Declaration__Group__10__Impl
	rule__Node_Declaration__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Declaration__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNode_DeclarationAccess().getSemicolonKeyword_10()); }
	';'
	{ after(grammarAccess.getNode_DeclarationAccess().getSemicolonKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Declaration__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node_Declaration__Group__11__Impl
	rule__Node_Declaration__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Declaration__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNode_DeclarationAccess().getAlternatives_11()); }
	(rule__Node_Declaration__Alternatives_11)*
	{ after(grammarAccess.getNode_DeclarationAccess().getAlternatives_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Declaration__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node_Declaration__Group__12__Impl
	rule__Node_Declaration__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Declaration__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNode_DeclarationAccess().getLetKeyword_12()); }
	'let'
	{ after(grammarAccess.getNode_DeclarationAccess().getLetKeyword_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Declaration__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node_Declaration__Group__13__Impl
	rule__Node_Declaration__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Declaration__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNode_DeclarationAccess().getAlternatives_13()); }
	(rule__Node_Declaration__Alternatives_13)*
	{ after(grammarAccess.getNode_DeclarationAccess().getAlternatives_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Declaration__Group__14
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node_Declaration__Group__14__Impl
	rule__Node_Declaration__Group__15
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Declaration__Group__14__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNode_DeclarationAccess().getTelKeyword_14()); }
	'tel'
	{ after(grammarAccess.getNode_DeclarationAccess().getTelKeyword_14()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Declaration__Group__15
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node_Declaration__Group__15__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Declaration__Group__15__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNode_DeclarationAccess().getSemicolonKeyword_15()); }
	(';')?
	{ after(grammarAccess.getNode_DeclarationAccess().getSemicolonKeyword_15()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Node_Declaration__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node_Declaration__Group_3__0__Impl
	rule__Node_Declaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Declaration__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNode_DeclarationAccess().getParametersAssignment_3_0()); }
	(rule__Node_Declaration__ParametersAssignment_3_0)
	{ after(grammarAccess.getNode_DeclarationAccess().getParametersAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Declaration__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node_Declaration__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Declaration__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNode_DeclarationAccess().getGroup_3_1()); }
	(rule__Node_Declaration__Group_3_1__0)*
	{ after(grammarAccess.getNode_DeclarationAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Node_Declaration__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node_Declaration__Group_3_1__0__Impl
	rule__Node_Declaration__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Declaration__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNode_DeclarationAccess().getCommaKeyword_3_1_0()); }
	','
	{ after(grammarAccess.getNode_DeclarationAccess().getCommaKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Declaration__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node_Declaration__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Declaration__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNode_DeclarationAccess().getParametersAssignment_3_1_1()); }
	(rule__Node_Declaration__ParametersAssignment_3_1_1)
	{ after(grammarAccess.getNode_DeclarationAccess().getParametersAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Node_Declaration__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node_Declaration__Group_8__0__Impl
	rule__Node_Declaration__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Declaration__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNode_DeclarationAccess().getCommaKeyword_8_0()); }
	','
	{ after(grammarAccess.getNode_DeclarationAccess().getCommaKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Declaration__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node_Declaration__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Declaration__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNode_DeclarationAccess().getReturnedAssignment_8_1()); }
	(rule__Node_Declaration__ReturnedAssignment_8_1)
	{ after(grammarAccess.getNode_DeclarationAccess().getReturnedAssignment_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equation__Group__0__Impl
	rule__Equation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationAccess().getLeftAssignment_0()); }
	(rule__Equation__LeftAssignment_0)
	{ after(grammarAccess.getEquationAccess().getLeftAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equation__Group__1__Impl
	rule__Equation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getEquationAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equation__Group__2__Impl
	rule__Equation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationAccess().getRightAssignment_2()); }
	(rule__Equation__RightAssignment_2)
	{ after(grammarAccess.getEquationAccess().getRightAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getEquationAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assertion__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assertion__Group__0__Impl
	rule__Assertion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assertion__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssertionAccess().getAssertKeyword_0()); }
	'assert'
	{ after(grammarAccess.getAssertionAccess().getAssertKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assertion__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assertion__Group__1__Impl
	rule__Assertion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assertion__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssertionAccess().getExpressionParserRuleCall_1()); }
	ruleExpression
	{ after(grammarAccess.getAssertionAccess().getExpressionParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assertion__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assertion__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assertion__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssertionAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getAssertionAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Left_List__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Left_List__Group__0__Impl
	rule__Left_List__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Left_List__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeft_ListAccess().getIdAssignment_0()); }
	(rule__Left_List__IdAssignment_0)
	{ after(grammarAccess.getLeft_ListAccess().getIdAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Left_List__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Left_List__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Left_List__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeft_ListAccess().getGroup_1()); }
	(rule__Left_List__Group_1__0)*
	{ after(grammarAccess.getLeft_ListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Left_List__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Left_List__Group_1__0__Impl
	rule__Left_List__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Left_List__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeft_ListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getLeft_ListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Left_List__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Left_List__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Left_List__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeft_ListAccess().getIdAssignment_1_1()); }
	(rule__Left_List__IdAssignment_1_1)
	{ after(grammarAccess.getLeft_ListAccess().getIdAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Left__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Left__Group__0__Impl
	rule__Left__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Left__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAccess().getNameAssignment_0()); }
	(rule__Left__NameAssignment_0)
	{ after(grammarAccess.getLeftAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Left__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Left__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Left__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAccess().getSelectorAssignment_1()); }
	(rule__Left__SelectorAssignment_1)?
	{ after(grammarAccess.getLeftAccess().getSelectorAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Selector__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group_0__0__Impl
	rule__Selector__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getFullStopKeyword_0_0()); }
	'.'
	{ after(grammarAccess.getSelectorAccess().getFullStopKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getNameAssignment_0_1()); }
	(rule__Selector__NameAssignment_0_1)
	{ after(grammarAccess.getSelectorAccess().getNameAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Selector__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group_1__0__Impl
	rule__Selector__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getLeftSquareBracketKeyword_1_0()); }
	'['
	{ after(grammarAccess.getSelectorAccess().getLeftSquareBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group_1__1__Impl
	rule__Selector__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getBeginAssignment_1_1()); }
	(rule__Selector__BeginAssignment_1_1)
	{ after(grammarAccess.getSelectorAccess().getBeginAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group_1__2__Impl
	rule__Selector__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getEndAssignment_1_2()); }
	(rule__Selector__EndAssignment_1_2)?
	{ after(grammarAccess.getSelectorAccess().getEndAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getRightSquareBracketKeyword_1_3()); }
	']'
	{ after(grammarAccess.getSelectorAccess().getRightSquareBracketKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelTrancheEnd__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelTrancheEnd__Group__0__Impl
	rule__SelTrancheEnd__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelTrancheEnd__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelTrancheEndAccess().getFullStopFullStopKeyword_0()); }
	'..'
	{ after(grammarAccess.getSelTrancheEndAccess().getFullStopFullStopKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelTrancheEnd__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelTrancheEnd__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelTrancheEnd__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelTrancheEndAccess().getExpressionParserRuleCall_1()); }
	ruleExpression
	{ after(grammarAccess.getSelTrancheEndAccess().getExpressionParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_0__0__Impl
	rule__Expression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getIfThenElseAction_0_0()); }
	()
	{ after(grammarAccess.getExpressionAccess().getIfThenElseAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_0__1__Impl
	rule__Expression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getIfKeyword_0_1()); }
	'if'
	{ after(grammarAccess.getExpressionAccess().getIfKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_0__2__Impl
	rule__Expression__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getIfexprAssignment_0_2()); }
	(rule__Expression__IfexprAssignment_0_2)
	{ after(grammarAccess.getExpressionAccess().getIfexprAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_0__3__Impl
	rule__Expression__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getThenKeyword_0_3()); }
	'then'
	{ after(grammarAccess.getExpressionAccess().getThenKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_0__4__Impl
	rule__Expression__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getThenexprAssignment_0_4()); }
	(rule__Expression__ThenexprAssignment_0_4)
	{ after(grammarAccess.getExpressionAccess().getThenexprAssignment_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_0__5__Impl
	rule__Expression__Group_0__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getElseKeyword_0_5()); }
	'else'
	{ after(grammarAccess.getExpressionAccess().getElseKeyword_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_0__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getElseexprAssignment_0_6()); }
	(rule__Expression__ElseexprAssignment_0_6)
	{ after(grammarAccess.getExpressionAccess().getElseexprAssignment_0_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Fby__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fby__Group__0__Impl
	rule__Fby__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Fby__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFbyAccess().getArrowParserRuleCall_0()); }
	ruleArrow
	{ after(grammarAccess.getFbyAccess().getArrowParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fby__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fby__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Fby__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFbyAccess().getGroup_1()); }
	(rule__Fby__Group_1__0)?
	{ after(grammarAccess.getFbyAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Fby__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fby__Group_1__0__Impl
	rule__Fby__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Fby__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFbyAccess().getFbySubExpressionsAction_1_0()); }
	()
	{ after(grammarAccess.getFbyAccess().getFbySubExpressionsAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fby__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fby__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Fby__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getFbyAccess().getGroup_1_1()); }
		(rule__Fby__Group_1_1__0)
		{ after(grammarAccess.getFbyAccess().getGroup_1_1()); }
	)
	(
		{ before(grammarAccess.getFbyAccess().getGroup_1_1()); }
		(rule__Fby__Group_1_1__0)*
		{ after(grammarAccess.getFbyAccess().getGroup_1_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Fby__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fby__Group_1_1__0__Impl
	rule__Fby__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Fby__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFbyAccess().getFbyKeyword_1_1_0()); }
	'fby'
	{ after(grammarAccess.getFbyAccess().getFbyKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fby__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fby__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Fby__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFbyAccess().getSubExpressionsAssignment_1_1_1()); }
	(rule__Fby__SubExpressionsAssignment_1_1_1)
	{ after(grammarAccess.getFbyAccess().getSubExpressionsAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Arrow__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arrow__Group__0__Impl
	rule__Arrow__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrowAccess().getOrParserRuleCall_0()); }
	ruleOr
	{ after(grammarAccess.getArrowAccess().getOrParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arrow__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrowAccess().getGroup_1()); }
	(rule__Arrow__Group_1__0)?
	{ after(grammarAccess.getArrowAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Arrow__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arrow__Group_1__0__Impl
	rule__Arrow__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrowAccess().getArrowSubExpressionsAction_1_0()); }
	()
	{ after(grammarAccess.getArrowAccess().getArrowSubExpressionsAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arrow__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getArrowAccess().getGroup_1_1()); }
		(rule__Arrow__Group_1_1__0)
		{ after(grammarAccess.getArrowAccess().getGroup_1_1()); }
	)
	(
		{ before(grammarAccess.getArrowAccess().getGroup_1_1()); }
		(rule__Arrow__Group_1_1__0)*
		{ after(grammarAccess.getArrowAccess().getGroup_1_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Arrow__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arrow__Group_1_1__0__Impl
	rule__Arrow__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrowAccess().getHyphenMinusGreaterThanSignKeyword_1_1_0()); }
	'->'
	{ after(grammarAccess.getArrowAccess().getHyphenMinusGreaterThanSignKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arrow__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrowAccess().getSubExpressionsAssignment_1_1_1()); }
	(rule__Arrow__SubExpressionsAssignment_1_1_1)
	{ after(grammarAccess.getArrowAccess().getSubExpressionsAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group__0__Impl
	rule__Or__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getAndParserRuleCall_0()); }
	ruleAnd
	{ after(grammarAccess.getOrAccess().getAndParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getGroup_1()); }
	(rule__Or__Group_1__0)?
	{ after(grammarAccess.getOrAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1__0__Impl
	rule__Or__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getOrSubExpressionsAction_1_0()); }
	()
	{ after(grammarAccess.getOrAccess().getOrSubExpressionsAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getOrAccess().getGroup_1_1()); }
		(rule__Or__Group_1_1__0)
		{ after(grammarAccess.getOrAccess().getGroup_1_1()); }
	)
	(
		{ before(grammarAccess.getOrAccess().getGroup_1_1()); }
		(rule__Or__Group_1_1__0)*
		{ after(grammarAccess.getOrAccess().getGroup_1_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1_1__0__Impl
	rule__Or__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getOrKeyword_1_1_0()); }
	'or'
	{ after(grammarAccess.getOrAccess().getOrKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getSubExpressionsAssignment_1_1_1()); }
	(rule__Or__SubExpressionsAssignment_1_1_1)
	{ after(grammarAccess.getOrAccess().getSubExpressionsAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__0__Impl
	rule__And__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getEqualityParserRuleCall_0()); }
	ruleEquality
	{ after(grammarAccess.getAndAccess().getEqualityParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getGroup_1()); }
	(rule__And__Group_1__0)?
	{ after(grammarAccess.getAndAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__0__Impl
	rule__And__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getAndSubExpressionsAction_1_0()); }
	()
	{ after(grammarAccess.getAndAccess().getAndSubExpressionsAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getAndAccess().getGroup_1_1()); }
		(rule__And__Group_1_1__0)
		{ after(grammarAccess.getAndAccess().getGroup_1_1()); }
	)
	(
		{ before(grammarAccess.getAndAccess().getGroup_1_1()); }
		(rule__And__Group_1_1__0)*
		{ after(grammarAccess.getAndAccess().getGroup_1_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1_1__0__Impl
	rule__And__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getAndKeyword_1_1_0()); }
	'and'
	{ after(grammarAccess.getAndAccess().getAndKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getSubExpressionsAssignment_1_1_1()); }
	(rule__And__SubExpressionsAssignment_1_1_1)
	{ after(grammarAccess.getAndAccess().getSubExpressionsAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equality__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group__0__Impl
	rule__Equality__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getComparisonParserRuleCall_0()); }
	ruleComparison
	{ after(grammarAccess.getEqualityAccess().getComparisonParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getGroup_1()); }
	(rule__Equality__Group_1__0)*
	{ after(grammarAccess.getEqualityAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equality__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group_1__0__Impl
	rule__Equality__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getEqualityLeftAction_1_0()); }
	()
	{ after(grammarAccess.getEqualityAccess().getEqualityLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group_1__1__Impl
	rule__Equality__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getOpAssignment_1_1()); }
	(rule__Equality__OpAssignment_1_1)
	{ after(grammarAccess.getEqualityAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getRightAssignment_1_2()); }
	(rule__Equality__RightAssignment_1_2)
	{ after(grammarAccess.getEqualityAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group__0__Impl
	rule__Comparison__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getPlusOrMinusParserRuleCall_0()); }
	rulePlusOrMinus
	{ after(grammarAccess.getComparisonAccess().getPlusOrMinusParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getGroup_1()); }
	(rule__Comparison__Group_1__0)*
	{ after(grammarAccess.getComparisonAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1__0__Impl
	rule__Comparison__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getComparisonLeftAction_1_0()); }
	()
	{ after(grammarAccess.getComparisonAccess().getComparisonLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1__1__Impl
	rule__Comparison__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getOpAssignment_1_1()); }
	(rule__Comparison__OpAssignment_1_1)
	{ after(grammarAccess.getComparisonAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getRightAssignment_1_2()); }
	(rule__Comparison__RightAssignment_1_2)
	{ after(grammarAccess.getComparisonAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusOrMinus__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group__0__Impl
	rule__PlusOrMinus__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getMulOrDivParserRuleCall_0()); }
	ruleMulOrDiv
	{ after(grammarAccess.getPlusOrMinusAccess().getMulOrDivParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getGroup_1()); }
	(rule__PlusOrMinus__Group_1__0)*
	{ after(grammarAccess.getPlusOrMinusAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusOrMinus__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1__0__Impl
	rule__PlusOrMinus__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getAlternatives_1_0()); }
	(rule__PlusOrMinus__Alternatives_1_0)
	{ after(grammarAccess.getPlusOrMinusAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getSubExpressionsAssignment_1_1()); }
	(rule__PlusOrMinus__SubExpressionsAssignment_1_1)
	{ after(grammarAccess.getPlusOrMinusAccess().getSubExpressionsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusOrMinus__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1_0_0__0__Impl
	rule__PlusOrMinus__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getPlusSubExpressionsAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getPlusOrMinusAccess().getPlusSubExpressionsAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getPlusSignKeyword_1_0_0_1()); }
	'+'
	{ after(grammarAccess.getPlusOrMinusAccess().getPlusSignKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusOrMinus__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1_0_1__0__Impl
	rule__PlusOrMinus__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getMinusSubExpressionsAction_1_0_1_0()); }
	()
	{ after(grammarAccess.getPlusOrMinusAccess().getMinusSubExpressionsAction_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getHyphenMinusKeyword_1_0_1_1()); }
	'-'
	{ after(grammarAccess.getPlusOrMinusAccess().getHyphenMinusKeyword_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MulOrDiv__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDiv__Group__0__Impl
	rule__MulOrDiv__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivAccess().getPrimaryParserRuleCall_0()); }
	rulePrimary
	{ after(grammarAccess.getMulOrDivAccess().getPrimaryParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDiv__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivAccess().getGroup_1()); }
	(rule__MulOrDiv__Group_1__0)*
	{ after(grammarAccess.getMulOrDivAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MulOrDiv__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDiv__Group_1__0__Impl
	rule__MulOrDiv__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivAccess().getAlternatives_1_0()); }
	(rule__MulOrDiv__Alternatives_1_0)
	{ after(grammarAccess.getMulOrDivAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDiv__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivAccess().getSubExpressionsAssignment_1_1()); }
	(rule__MulOrDiv__SubExpressionsAssignment_1_1)
	{ after(grammarAccess.getMulOrDivAccess().getSubExpressionsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MulOrDiv__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDiv__Group_1_0_0__0__Impl
	rule__MulOrDiv__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivAccess().getMulSubExpressionsAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getMulOrDivAccess().getMulSubExpressionsAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDiv__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivAccess().getAsteriskKeyword_1_0_0_1()); }
	'*'
	{ after(grammarAccess.getMulOrDivAccess().getAsteriskKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MulOrDiv__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDiv__Group_1_0_1__0__Impl
	rule__MulOrDiv__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivAccess().getDivSubExpressionsAction_1_0_1_0()); }
	()
	{ after(grammarAccess.getMulOrDivAccess().getDivSubExpressionsAction_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDiv__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivAccess().getSolidusKeyword_1_0_1_1()); }
	'/'
	{ after(grammarAccess.getMulOrDivAccess().getSolidusKeyword_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__0__Impl
	rule__Primary__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_0()); }
	'('
	{ after(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__1__Impl
	rule__Primary__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getExpressionParserRuleCall_0_1()); }
	ruleExpression
	{ after(grammarAccess.getPrimaryAccess().getExpressionParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_2()); }
	')'
	{ after(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__0__Impl
	rule__Primary__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getNotAction_1_0()); }
	()
	{ after(grammarAccess.getPrimaryAccess().getNotAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__1__Impl
	rule__Primary__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getNotKeyword_1_1()); }
	'not'
	{ after(grammarAccess.getPrimaryAccess().getNotKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getExpressionAssignment_1_2()); }
	(rule__Primary__ExpressionAssignment_1_2)
	{ after(grammarAccess.getPrimaryAccess().getExpressionAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_2__0__Impl
	rule__Primary__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getUMinusAction_2_0()); }
	()
	{ after(grammarAccess.getPrimaryAccess().getUMinusAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_2__1__Impl
	rule__Primary__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getHyphenMinusKeyword_2_1()); }
	'-'
	{ after(grammarAccess.getPrimaryAccess().getHyphenMinusKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getExpressionAssignment_2_2()); }
	(rule__Primary__ExpressionAssignment_2_2)
	{ after(grammarAccess.getPrimaryAccess().getExpressionAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_3__0__Impl
	rule__Primary__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getPreAction_3_0()); }
	()
	{ after(grammarAccess.getPrimaryAccess().getPreAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_3__1__Impl
	rule__Primary__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getPreKeyword_3_1()); }
	'pre'
	{ after(grammarAccess.getPrimaryAccess().getPreKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getExpressionAssignment_3_2()); }
	(rule__Primary__ExpressionAssignment_3_2)
	{ after(grammarAccess.getPrimaryAccess().getExpressionAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_4__0__Impl
	rule__Primary__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getCurrentAction_4_0()); }
	()
	{ after(grammarAccess.getPrimaryAccess().getCurrentAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_4__1__Impl
	rule__Primary__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getCurrentKeyword_4_1()); }
	'current'
	{ after(grammarAccess.getPrimaryAccess().getCurrentKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getExpressionAssignment_4_2()); }
	(rule__Primary__ExpressionAssignment_4_2)
	{ after(grammarAccess.getPrimaryAccess().getExpressionAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableReference__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableReference__Group__0__Impl
	rule__VariableReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableReference__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableReferenceAccess().getVariableReferenceAction_0()); }
	()
	{ after(grammarAccess.getVariableReferenceAccess().getVariableReferenceAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableReference__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableReference__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableReference__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableReferenceAccess().getValueAssignment_1()); }
	(rule__VariableReference__ValueAssignment_1)
	{ after(grammarAccess.getVariableReferenceAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantExpression__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantExpression__Group_0__0__Impl
	rule__ConstantExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantExpressionAccess().getBoolConstantAction_0_0()); }
	()
	{ after(grammarAccess.getConstantExpressionAccess().getBoolConstantAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantExpression__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantExpressionAccess().getValueAssignment_0_1()); }
	(rule__ConstantExpression__ValueAssignment_0_1)
	{ after(grammarAccess.getConstantExpressionAccess().getValueAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantExpression__Group_1__0__Impl
	rule__ConstantExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantExpressionAccess().getFloatConstantAction_1_0()); }
	()
	{ after(grammarAccess.getConstantExpressionAccess().getFloatConstantAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantExpressionAccess().getValueAssignment_1_1()); }
	(rule__ConstantExpression__ValueAssignment_1_1)
	{ after(grammarAccess.getConstantExpressionAccess().getValueAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantExpression__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantExpression__Group_2__0__Impl
	rule__ConstantExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantExpressionAccess().getIntConstantAction_2_0()); }
	()
	{ after(grammarAccess.getConstantExpressionAccess().getIntConstantAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantExpressionAccess().getValueAssignment_2_1()); }
	(rule__ConstantExpression__ValueAssignment_2_1)
	{ after(grammarAccess.getConstantExpressionAccess().getValueAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Program__PackagesAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getPackagesPackage_DeclarationParserRuleCall_0()); }
		rulePackage_Declaration
		{ after(grammarAccess.getProgramAccess().getPackagesPackage_DeclarationParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Declaration__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackage_DeclarationAccess().getNameIDENTTerminalRuleCall_1_0()); }
		RULE_IDENT
		{ after(grammarAccess.getPackage_DeclarationAccess().getNameIDENTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Declaration__UsesAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackage_DeclarationAccess().getUsesIDENTTerminalRuleCall_2_1_0()); }
		RULE_IDENT
		{ after(grammarAccess.getPackage_DeclarationAccess().getUsesIDENTTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Declaration__UsesAssignment_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackage_DeclarationAccess().getUsesIDENTTerminalRuleCall_2_2_1_0()); }
		RULE_IDENT
		{ after(grammarAccess.getPackage_DeclarationAccess().getUsesIDENTTerminalRuleCall_2_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Declaration__ProvidesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackage_DeclarationAccess().getProvidesPackage_ProvidedParserRuleCall_4_0()); }
		rulePackage_Provided
		{ after(grammarAccess.getPackage_DeclarationAccess().getProvidesPackage_ProvidedParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Declaration__NodesAssignment_6_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackage_DeclarationAccess().getNodesNode_DeclarationParserRuleCall_6_0_0()); }
		ruleNode_Declaration
		{ after(grammarAccess.getPackage_DeclarationAccess().getNodesNode_DeclarationParserRuleCall_6_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Declaration__TypesAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackage_DeclarationAccess().getTypesType_DeclarationParserRuleCall_6_1_0()); }
		ruleType_Declaration
		{ after(grammarAccess.getPackage_DeclarationAccess().getTypesType_DeclarationParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Declaration__ConstantsAssignment_6_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackage_DeclarationAccess().getConstantsConstant_DeclarationParserRuleCall_6_2_0()); }
		ruleConstant_Declaration
		{ after(grammarAccess.getPackage_DeclarationAccess().getConstantsConstant_DeclarationParserRuleCall_6_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provided__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackage_ProvidedAccess().getNameNode_DeclarationCrossReference_1_0()); }
		(
			{ before(grammarAccess.getPackage_ProvidedAccess().getNameNode_DeclarationIDENTTerminalRuleCall_1_0_1()); }
			RULE_IDENT
			{ after(grammarAccess.getPackage_ProvidedAccess().getNameNode_DeclarationIDENTTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getPackage_ProvidedAccess().getNameNode_DeclarationCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provided__ParametersAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackage_ProvidedAccess().getParametersPackage_Provided_IOParserRuleCall_3_0_0()); }
		rulePackage_Provided_IO
		{ after(grammarAccess.getPackage_ProvidedAccess().getParametersPackage_Provided_IOParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provided__ParametersAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackage_ProvidedAccess().getParametersPackage_Provided_IOParserRuleCall_3_1_1_0()); }
		rulePackage_Provided_IO
		{ after(grammarAccess.getPackage_ProvidedAccess().getParametersPackage_Provided_IOParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provided__ReturnedAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackage_ProvidedAccess().getReturnedPackage_Provided_IOParserRuleCall_7_0()); }
		rulePackage_Provided_IO
		{ after(grammarAccess.getPackage_ProvidedAccess().getReturnedPackage_Provided_IOParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provided__ReturnedAssignment_8_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackage_ProvidedAccess().getReturnedPackage_Provided_IOParserRuleCall_8_1_0()); }
		rulePackage_Provided_IO
		{ after(grammarAccess.getPackage_ProvidedAccess().getReturnedPackage_Provided_IOParserRuleCall_8_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provided_IO__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackage_Provided_IOAccess().getNameVariable_DeclarationCrossReference_0_0()); }
		(
			{ before(grammarAccess.getPackage_Provided_IOAccess().getNameVariable_DeclarationIDENTTerminalRuleCall_0_0_1()); }
			RULE_IDENT
			{ after(grammarAccess.getPackage_Provided_IOAccess().getNameVariable_DeclarationIDENTTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getPackage_Provided_IOAccess().getNameVariable_DeclarationCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_Provided_IO__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackage_Provided_IOAccess().getTypeIDENTTerminalRuleCall_2_0()); }
		RULE_IDENT
		{ after(grammarAccess.getPackage_Provided_IOAccess().getTypeIDENTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_Declaration__NameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getType_DeclarationAccess().getNameIDENTTerminalRuleCall_0_1_0()); }
		RULE_IDENT
		{ after(grammarAccess.getType_DeclarationAccess().getNameIDENTTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_Declaration__NameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getType_DeclarationAccess().getNameIDENTTerminalRuleCall_1_1_0()); }
		RULE_IDENT
		{ after(grammarAccess.getType_DeclarationAccess().getNameIDENTTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_Declaration__TypeAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getType_DeclarationAccess().getTypeTypeParserRuleCall_1_3_0()); }
		ruleType
		{ after(grammarAccess.getType_DeclarationAccess().getTypeTypeParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getNameType_DeclarationCrossReference_0()); }
		(
			{ before(grammarAccess.getTypeAccess().getNameType_DeclarationIDENTTerminalRuleCall_0_1()); }
			RULE_IDENT
			{ after(grammarAccess.getTypeAccess().getNameType_DeclarationIDENTTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getTypeAccess().getNameType_DeclarationCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getNameIDENTTerminalRuleCall_0_0()); }
		RULE_IDENT
		{ after(grammarAccess.getFieldAccess().getNameIDENTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getTypeTypeCrossReference_2_0()); }
		(
			{ before(grammarAccess.getFieldAccess().getTypeTypeIDENTTerminalRuleCall_2_0_1()); }
			RULE_IDENT
			{ after(grammarAccess.getFieldAccess().getTypeTypeIDENTTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getFieldAccess().getTypeTypeCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_Declaration__NameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstant_DeclarationAccess().getNameIDENTTerminalRuleCall_0_1_0()); }
		RULE_IDENT
		{ after(grammarAccess.getConstant_DeclarationAccess().getNameIDENTTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_Declaration__TypeAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstant_DeclarationAccess().getTypeTypeParserRuleCall_0_3_0()); }
		ruleType
		{ after(grammarAccess.getConstant_DeclarationAccess().getTypeTypeParserRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_Declaration__NameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstant_DeclarationAccess().getNameIDENTTerminalRuleCall_1_1_0()); }
		RULE_IDENT
		{ after(grammarAccess.getConstant_DeclarationAccess().getNameIDENTTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_Declaration__ExprAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstant_DeclarationAccess().getExprConstantExpressionParserRuleCall_1_3_0()); }
		ruleConstantExpression
		{ after(grammarAccess.getConstant_DeclarationAccess().getExprConstantExpressionParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_Declaration__NameAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstant_DeclarationAccess().getNameIDENTTerminalRuleCall_2_1_0()); }
		RULE_IDENT
		{ after(grammarAccess.getConstant_DeclarationAccess().getNameIDENTTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_Declaration__TypeAssignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstant_DeclarationAccess().getTypeTypeParserRuleCall_2_3_0()); }
		ruleType
		{ after(grammarAccess.getConstant_DeclarationAccess().getTypeTypeParserRuleCall_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_Declaration__ExprAssignment_2_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstant_DeclarationAccess().getExprConstantExpressionParserRuleCall_2_5_0()); }
		ruleConstantExpression
		{ after(grammarAccess.getConstant_DeclarationAccess().getExprConstantExpressionParserRuleCall_2_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_Declaration__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariable_DeclarationAccess().getNameIDENTTerminalRuleCall_0_0()); }
		RULE_IDENT
		{ after(grammarAccess.getVariable_DeclarationAccess().getNameIDENTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_Declaration__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariable_DeclarationAccess().getTypeTypeParserRuleCall_2_0()); }
		ruleType
		{ after(grammarAccess.getVariable_DeclarationAccess().getTypeTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_Declaration__ClockAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariable_DeclarationAccess().getClockIDENTTerminalRuleCall_3_1_0()); }
		RULE_IDENT
		{ after(grammarAccess.getVariable_DeclarationAccess().getClockIDENTTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Local_Constant_Declaration__NameAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocal_Constant_DeclarationAccess().getNameIDENTTerminalRuleCall_0_2_0()); }
		RULE_IDENT
		{ after(grammarAccess.getLocal_Constant_DeclarationAccess().getNameIDENTTerminalRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Local_Constant_Declaration__ExprAssignment_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocal_Constant_DeclarationAccess().getExprConstantExpressionParserRuleCall_0_4_0()); }
		ruleConstantExpression
		{ after(grammarAccess.getLocal_Constant_DeclarationAccess().getExprConstantExpressionParserRuleCall_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Local_Constant_Declaration__NameAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocal_Constant_DeclarationAccess().getNameIDENTTerminalRuleCall_1_2_0()); }
		RULE_IDENT
		{ after(grammarAccess.getLocal_Constant_DeclarationAccess().getNameIDENTTerminalRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Local_Constant_Declaration__TypeAssignment_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocal_Constant_DeclarationAccess().getTypeTypeParserRuleCall_1_4_0()); }
		ruleType
		{ after(grammarAccess.getLocal_Constant_DeclarationAccess().getTypeTypeParserRuleCall_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Local_Constant_Declaration__ExprAssignment_1_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocal_Constant_DeclarationAccess().getExprConstantExpressionParserRuleCall_1_6_0()); }
		ruleConstantExpression
		{ after(grammarAccess.getLocal_Constant_DeclarationAccess().getExprConstantExpressionParserRuleCall_1_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Declaration__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNode_DeclarationAccess().getNameIDENTTerminalRuleCall_1_0()); }
		RULE_IDENT
		{ after(grammarAccess.getNode_DeclarationAccess().getNameIDENTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Declaration__ParametersAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNode_DeclarationAccess().getParametersVariable_DeclarationParserRuleCall_3_0_0()); }
		ruleVariable_Declaration
		{ after(grammarAccess.getNode_DeclarationAccess().getParametersVariable_DeclarationParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Declaration__ParametersAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNode_DeclarationAccess().getParametersVariable_DeclarationParserRuleCall_3_1_1_0()); }
		ruleVariable_Declaration
		{ after(grammarAccess.getNode_DeclarationAccess().getParametersVariable_DeclarationParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Declaration__ReturnedAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNode_DeclarationAccess().getReturnedVariable_DeclarationParserRuleCall_7_0()); }
		ruleVariable_Declaration
		{ after(grammarAccess.getNode_DeclarationAccess().getReturnedVariable_DeclarationParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Declaration__ReturnedAssignment_8_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNode_DeclarationAccess().getReturnedVariable_DeclarationParserRuleCall_8_1_0()); }
		ruleVariable_Declaration
		{ after(grammarAccess.getNode_DeclarationAccess().getReturnedVariable_DeclarationParserRuleCall_8_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Declaration__ConstantsAssignment_11_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNode_DeclarationAccess().getConstantsLocal_Constant_DeclarationParserRuleCall_11_0_0()); }
		ruleLocal_Constant_Declaration
		{ after(grammarAccess.getNode_DeclarationAccess().getConstantsLocal_Constant_DeclarationParserRuleCall_11_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Declaration__VariablesAssignment_11_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNode_DeclarationAccess().getVariablesLocal_Variable_DeclarationParserRuleCall_11_1_0()); }
		ruleLocal_Variable_Declaration
		{ after(grammarAccess.getNode_DeclarationAccess().getVariablesLocal_Variable_DeclarationParserRuleCall_11_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Declaration__EquationsAssignment_13_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNode_DeclarationAccess().getEquationsEquationParserRuleCall_13_0_0()); }
		ruleEquation
		{ after(grammarAccess.getNode_DeclarationAccess().getEquationsEquationParserRuleCall_13_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node_Declaration__AssertionsAssignment_13_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNode_DeclarationAccess().getAssertionsAssertionParserRuleCall_13_1_0()); }
		ruleAssertion
		{ after(grammarAccess.getNode_DeclarationAccess().getAssertionsAssertionParserRuleCall_13_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__LeftAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEquationAccess().getLeftVariable_DeclarationCrossReference_0_0()); }
		(
			{ before(grammarAccess.getEquationAccess().getLeftVariable_DeclarationIDENTTerminalRuleCall_0_0_1()); }
			RULE_IDENT
			{ after(grammarAccess.getEquationAccess().getLeftVariable_DeclarationIDENTTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getEquationAccess().getLeftVariable_DeclarationCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__RightAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEquationAccess().getRightRight_PartParserRuleCall_2_0()); }
		ruleRight_Part
		{ after(grammarAccess.getEquationAccess().getRightRight_PartParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Left_List__IdAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeft_ListAccess().getIdLeftParserRuleCall_0_0()); }
		ruleLeft
		{ after(grammarAccess.getLeft_ListAccess().getIdLeftParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Left_List__IdAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeft_ListAccess().getIdLeftParserRuleCall_1_1_0()); }
		ruleLeft
		{ after(grammarAccess.getLeft_ListAccess().getIdLeftParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Left__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeftAccess().getNameIDENTTerminalRuleCall_0_0()); }
		RULE_IDENT
		{ after(grammarAccess.getLeftAccess().getNameIDENTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Left__SelectorAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeftAccess().getSelectorSelectorParserRuleCall_1_0()); }
		ruleSelector
		{ after(grammarAccess.getLeftAccess().getSelectorSelectorParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__NameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectorAccess().getNameIDENTTerminalRuleCall_0_1_0()); }
		RULE_IDENT
		{ after(grammarAccess.getSelectorAccess().getNameIDENTTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__BeginAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectorAccess().getBeginExpressionParserRuleCall_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getSelectorAccess().getBeginExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__EndAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectorAccess().getEndSelTrancheEndParserRuleCall_1_2_0()); }
		ruleSelTrancheEnd
		{ after(grammarAccess.getSelectorAccess().getEndSelTrancheEndParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__IfexprAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getIfexprExpressionParserRuleCall_0_2_0()); }
		ruleExpression
		{ after(grammarAccess.getExpressionAccess().getIfexprExpressionParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ThenexprAssignment_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getThenexprExpressionParserRuleCall_0_4_0()); }
		ruleExpression
		{ after(grammarAccess.getExpressionAccess().getThenexprExpressionParserRuleCall_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ElseexprAssignment_0_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getElseexprExpressionParserRuleCall_0_6_0()); }
		ruleExpression
		{ after(grammarAccess.getExpressionAccess().getElseexprExpressionParserRuleCall_0_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fby__SubExpressionsAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFbyAccess().getSubExpressionsArrowParserRuleCall_1_1_1_0()); }
		ruleArrow
		{ after(grammarAccess.getFbyAccess().getSubExpressionsArrowParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__SubExpressionsAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrowAccess().getSubExpressionsOrParserRuleCall_1_1_1_0()); }
		ruleOr
		{ after(grammarAccess.getArrowAccess().getSubExpressionsOrParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__SubExpressionsAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrAccess().getSubExpressionsAndParserRuleCall_1_1_1_0()); }
		ruleAnd
		{ after(grammarAccess.getOrAccess().getSubExpressionsAndParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__SubExpressionsAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndAccess().getSubExpressionsEqualityParserRuleCall_1_1_1_0()); }
		ruleEquality
		{ after(grammarAccess.getAndAccess().getSubExpressionsEqualityParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityAccess().getOpAlternatives_1_1_0()); }
		(rule__Equality__OpAlternatives_1_1_0)
		{ after(grammarAccess.getEqualityAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityAccess().getRightComparisonParserRuleCall_1_2_0()); }
		ruleComparison
		{ after(grammarAccess.getEqualityAccess().getRightComparisonParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getOpAlternatives_1_1_0()); }
		(rule__Comparison__OpAlternatives_1_1_0)
		{ after(grammarAccess.getComparisonAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getRightPlusOrMinusParserRuleCall_1_2_0()); }
		rulePlusOrMinus
		{ after(grammarAccess.getComparisonAccess().getRightPlusOrMinusParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__SubExpressionsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlusOrMinusAccess().getSubExpressionsMulOrDivParserRuleCall_1_1_0()); }
		ruleMulOrDiv
		{ after(grammarAccess.getPlusOrMinusAccess().getSubExpressionsMulOrDivParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__SubExpressionsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMulOrDivAccess().getSubExpressionsPrimaryParserRuleCall_1_1_0()); }
		rulePrimary
		{ after(grammarAccess.getMulOrDivAccess().getSubExpressionsPrimaryParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ExpressionAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_1_2_0()); }
		rulePrimary
		{ after(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ExpressionAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_2_2_0()); }
		rulePrimary
		{ after(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ExpressionAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_3_2_0()); }
		rulePrimary
		{ after(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ExpressionAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_4_2_0()); }
		rulePrimary
		{ after(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableReference__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableReferenceAccess().getValueVariable_DeclarationCrossReference_1_0()); }
		(
			{ before(grammarAccess.getVariableReferenceAccess().getValueVariable_DeclarationIDENTTerminalRuleCall_1_0_1()); }
			RULE_IDENT
			{ after(grammarAccess.getVariableReferenceAccess().getValueVariable_DeclarationIDENTTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getVariableReferenceAccess().getValueVariable_DeclarationCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__ValueAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantExpressionAccess().getValueBOOLTerminalRuleCall_0_1_0()); }
		RULE_BOOL
		{ after(grammarAccess.getConstantExpressionAccess().getValueBOOLTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__ValueAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantExpressionAccess().getValueFLOATTerminalRuleCall_1_1_0()); }
		RULE_FLOAT
		{ after(grammarAccess.getConstantExpressionAccess().getValueFLOATTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__ValueAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantExpressionAccess().getValueINTTerminalRuleCall_2_1_0()); }
		RULE_INT
		{ after(grammarAccess.getConstantExpressionAccess().getValueINTTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_BOOL : ('true'|'false');

RULE_IDENT : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_FLOAT : (('0'..'9')+ '.' ('0'..'9')*|'.' ('0'..'9')+);

RULE_STRING_CONSTANT : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_LUSTRE_COMMENT : (RULE_ML_COMMENT|RULE_SL_COMMENT);

fragment RULE_ML_COMMENT : '(*' ( options {greedy=false;} : . )*'*)';

fragment RULE_SL_COMMENT : '--' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;
