package de.cau.cs.kieler.sccharts.text.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.cau.cs.kieler.sccharts.text.services.SCTXGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalSCTXParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_ID", "RULE_STRING", "RULE_INT", "RULE_HOSTCODE", "RULE_FLOAT", "RULE_BOOLEAN", "RULE_COMMENT_ANNOTATION", "RULE_ML_COMMENT", "RULE_NUMBER", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'scchart'", "'{'", "'}'", "'initial'", "'final'", "'violation'", "'connector'", "'state'", "'is'", "'('", "','", "')'", "'!'", "'&'", "'to'", "'['", "']'", "'deferred'", "'if'", "'do'", "';'", "'entry'", "'during'", "'exit'", "'weak'", "'suspend'", "'preceding'", "'succeeding'", "'region'", "':'", "'dataflow'", "'scope'", "'expression'", "'const'", "'input'", "'output'", "'static'", "'signal'", "'ref'", "'extern'", "'='", "'combine'", "'.'", "'()'", "'<'", "'>'", "'||'", "'&&'", "'|'", "'+'", "'-'", "'*'", "'/'", "'%'", "'\\''", "'@'", "'#'", "'go to'", "'abort to'", "'join to'", "'-->'", "'o->'", "'>->'", "'undefined'", "'delayed'", "'immediate'", "'auto'", "'reset'", "'shallow history'", "'history'", "'+='", "'-='", "'*='", "'/='", "'%='", "'&='", "'|='", "'^='", "'min='", "'max='", "'++'", "'--'", "'=='", "'<='", "'>='", "'!='", "'pre'", "'val'", "'pure'", "'bool'", "'unsigned'", "'int'", "'float'", "'string'", "'host'", "'none'", "'max'", "'min'"
    };
    public static final int T__50=50;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__60=60;
    public static final int T__61=61;
    public static final int RULE_ID=4;
    public static final int RULE_INT=6;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=11;
    public static final int T__67=67;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int T__64=64;
    public static final int T__65=65;
    public static final int RULE_COMMENT_ANNOTATION=10;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int RULE_FLOAT=8;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__91=91;
    public static final int T__100=100;
    public static final int T__92=92;
    public static final int T__93=93;
    public static final int T__102=102;
    public static final int T__94=94;
    public static final int T__101=101;
    public static final int T__90=90;
    public static final int RULE_BOOLEAN=9;
    public static final int T__19=19;
    public static final int T__16=16;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__99=99;
    public static final int T__95=95;
    public static final int T__96=96;
    public static final int T__97=97;
    public static final int T__98=98;
    public static final int T__26=26;
    public static final int RULE_HOSTCODE=7;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__23=23;
    public static final int T__24=24;
    public static final int T__25=25;
    public static final int T__20=20;
    public static final int T__21=21;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int RULE_STRING=5;
    public static final int RULE_SL_COMMENT=13;
    public static final int T__77=77;
    public static final int T__78=78;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int EOF=-1;
    public static final int T__74=74;
    public static final int T__75=75;
    public static final int T__76=76;
    public static final int T__80=80;
    public static final int T__111=111;
    public static final int T__81=81;
    public static final int T__110=110;
    public static final int T__82=82;
    public static final int T__113=113;
    public static final int T__83=83;
    public static final int T__112=112;
    public static final int RULE_WS=14;
    public static final int RULE_ANY_OTHER=15;
    public static final int RULE_NUMBER=12;
    public static final int T__88=88;
    public static final int T__108=108;
    public static final int T__89=89;
    public static final int T__107=107;
    public static final int T__109=109;
    public static final int T__84=84;
    public static final int T__104=104;
    public static final int T__85=85;
    public static final int T__103=103;
    public static final int T__86=86;
    public static final int T__106=106;
    public static final int T__87=87;
    public static final int T__105=105;

    // delegates
    // delegators


        public InternalSCTXParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalSCTXParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalSCTXParser.tokenNames; }
    public String getGrammarFileName() { return "InternalSCTX.g"; }



    /*
      This grammar contains a lot of empty actions to work around a bug in ANTLR.
      Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
    */
     
     	private SCTXGrammarAccess grammarAccess;
     	
        public InternalSCTXParser(TokenStream input, SCTXGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }
        
        @Override
        protected String getFirstRuleName() {
        	return "SCCharts";	
       	}
       	
       	@Override
       	protected SCTXGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}



    // $ANTLR start "entryRuleSCCharts"
    // InternalSCTX.g:74:1: entryRuleSCCharts returns [EObject current=null] : iv_ruleSCCharts= ruleSCCharts EOF ;
    public final EObject entryRuleSCCharts() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSCCharts = null;


        try {
            // InternalSCTX.g:75:2: (iv_ruleSCCharts= ruleSCCharts EOF )
            // InternalSCTX.g:76:2: iv_ruleSCCharts= ruleSCCharts EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSCChartsRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSCCharts=ruleSCCharts();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSCCharts; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSCCharts"


    // $ANTLR start "ruleSCCharts"
    // InternalSCTX.g:83:1: ruleSCCharts returns [EObject current=null] : ( ( (lv_pragmas_0_0= rulePragma ) )* ( (lv_rootStates_1_0= ruleRootState ) )* ) ;
    public final EObject ruleSCCharts() throws RecognitionException {
        EObject current = null;

        EObject lv_pragmas_0_0 = null;

        EObject lv_rootStates_1_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:86:28: ( ( ( (lv_pragmas_0_0= rulePragma ) )* ( (lv_rootStates_1_0= ruleRootState ) )* ) )
            // InternalSCTX.g:87:1: ( ( (lv_pragmas_0_0= rulePragma ) )* ( (lv_rootStates_1_0= ruleRootState ) )* )
            {
            // InternalSCTX.g:87:1: ( ( (lv_pragmas_0_0= rulePragma ) )* ( (lv_rootStates_1_0= ruleRootState ) )* )
            // InternalSCTX.g:87:2: ( (lv_pragmas_0_0= rulePragma ) )* ( (lv_rootStates_1_0= ruleRootState ) )*
            {
            // InternalSCTX.g:87:2: ( (lv_pragmas_0_0= rulePragma ) )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==72) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // InternalSCTX.g:88:1: (lv_pragmas_0_0= rulePragma )
            	    {
            	    // InternalSCTX.g:88:1: (lv_pragmas_0_0= rulePragma )
            	    // InternalSCTX.g:89:3: lv_pragmas_0_0= rulePragma
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getSCChartsAccess().getPragmasPragmaParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_3);
            	    lv_pragmas_0_0=rulePragma();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getSCChartsRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"pragmas",
            	              		lv_pragmas_0_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.Pragma");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

            // InternalSCTX.g:105:3: ( (lv_rootStates_1_0= ruleRootState ) )*
            loop2:
            do {
                int alt2=2;
                int LA2_0 = input.LA(1);

                if ( (LA2_0==RULE_COMMENT_ANNOTATION||LA2_0==16||LA2_0==71) ) {
                    alt2=1;
                }


                switch (alt2) {
            	case 1 :
            	    // InternalSCTX.g:106:1: (lv_rootStates_1_0= ruleRootState )
            	    {
            	    // InternalSCTX.g:106:1: (lv_rootStates_1_0= ruleRootState )
            	    // InternalSCTX.g:107:3: lv_rootStates_1_0= ruleRootState
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getSCChartsAccess().getRootStatesRootStateParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_4);
            	    lv_rootStates_1_0=ruleRootState();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getSCChartsRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"rootStates",
            	              		lv_rootStates_1_0, 
            	              		"de.cau.cs.kieler.sccharts.text.SCTX.RootState");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSCCharts"


    // $ANTLR start "entryRuleRootState"
    // InternalSCTX.g:131:1: entryRuleRootState returns [EObject current=null] : iv_ruleRootState= ruleRootState EOF ;
    public final EObject entryRuleRootState() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRootState = null;


        try {
            // InternalSCTX.g:132:2: (iv_ruleRootState= ruleRootState EOF )
            // InternalSCTX.g:133:2: iv_ruleRootState= ruleRootState EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRootStateRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRootState=ruleRootState();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRootState; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRootState"


    // $ANTLR start "ruleRootState"
    // InternalSCTX.g:140:1: ruleRootState returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'scchart' ( (lv_id_2_0= RULE_ID ) ) ( (lv_label_3_0= RULE_STRING ) )? otherlv_4= '{' ( (lv_declarations_5_0= ruleDeclarationWOSemicolon ) )* ( (lv_actions_6_0= ruleLocalAction ) )* ( ( (lv_regions_7_0= ruleSingleControlflowRegion ) ) | ( (lv_regions_8_0= ruleSingleDataflowRegion ) ) | ( (lv_regions_9_0= ruleRegion ) )* ) otherlv_10= '}' ) ;
    public final EObject ruleRootState() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_id_2_0=null;
        Token lv_label_3_0=null;
        Token otherlv_4=null;
        Token otherlv_10=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_declarations_5_0 = null;

        EObject lv_actions_6_0 = null;

        EObject lv_regions_7_0 = null;

        EObject lv_regions_8_0 = null;

        EObject lv_regions_9_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:143:28: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'scchart' ( (lv_id_2_0= RULE_ID ) ) ( (lv_label_3_0= RULE_STRING ) )? otherlv_4= '{' ( (lv_declarations_5_0= ruleDeclarationWOSemicolon ) )* ( (lv_actions_6_0= ruleLocalAction ) )* ( ( (lv_regions_7_0= ruleSingleControlflowRegion ) ) | ( (lv_regions_8_0= ruleSingleDataflowRegion ) ) | ( (lv_regions_9_0= ruleRegion ) )* ) otherlv_10= '}' ) )
            // InternalSCTX.g:144:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'scchart' ( (lv_id_2_0= RULE_ID ) ) ( (lv_label_3_0= RULE_STRING ) )? otherlv_4= '{' ( (lv_declarations_5_0= ruleDeclarationWOSemicolon ) )* ( (lv_actions_6_0= ruleLocalAction ) )* ( ( (lv_regions_7_0= ruleSingleControlflowRegion ) ) | ( (lv_regions_8_0= ruleSingleDataflowRegion ) ) | ( (lv_regions_9_0= ruleRegion ) )* ) otherlv_10= '}' )
            {
            // InternalSCTX.g:144:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'scchart' ( (lv_id_2_0= RULE_ID ) ) ( (lv_label_3_0= RULE_STRING ) )? otherlv_4= '{' ( (lv_declarations_5_0= ruleDeclarationWOSemicolon ) )* ( (lv_actions_6_0= ruleLocalAction ) )* ( ( (lv_regions_7_0= ruleSingleControlflowRegion ) ) | ( (lv_regions_8_0= ruleSingleDataflowRegion ) ) | ( (lv_regions_9_0= ruleRegion ) )* ) otherlv_10= '}' )
            // InternalSCTX.g:144:2: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'scchart' ( (lv_id_2_0= RULE_ID ) ) ( (lv_label_3_0= RULE_STRING ) )? otherlv_4= '{' ( (lv_declarations_5_0= ruleDeclarationWOSemicolon ) )* ( (lv_actions_6_0= ruleLocalAction ) )* ( ( (lv_regions_7_0= ruleSingleControlflowRegion ) ) | ( (lv_regions_8_0= ruleSingleDataflowRegion ) ) | ( (lv_regions_9_0= ruleRegion ) )* ) otherlv_10= '}'
            {
            // InternalSCTX.g:144:2: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop3:
            do {
                int alt3=2;
                int LA3_0 = input.LA(1);

                if ( (LA3_0==RULE_COMMENT_ANNOTATION||LA3_0==71) ) {
                    alt3=1;
                }


                switch (alt3) {
            	case 1 :
            	    // InternalSCTX.g:145:1: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:145:1: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:146:3: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getRootStateAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_5);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getRootStateRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop3;
                }
            } while (true);

            otherlv_1=(Token)match(input,16,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getRootStateAccess().getScchartKeyword_1());
                  
            }
            // InternalSCTX.g:166:1: ( (lv_id_2_0= RULE_ID ) )
            // InternalSCTX.g:167:1: (lv_id_2_0= RULE_ID )
            {
            // InternalSCTX.g:167:1: (lv_id_2_0= RULE_ID )
            // InternalSCTX.g:168:3: lv_id_2_0= RULE_ID
            {
            lv_id_2_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_id_2_0, grammarAccess.getRootStateAccess().getIdIDTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getRootStateRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"id",
                      		lv_id_2_0, 
                      		"org.eclipse.xtext.common.Terminals.ID");
              	    
            }

            }


            }

            // InternalSCTX.g:184:2: ( (lv_label_3_0= RULE_STRING ) )?
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==RULE_STRING) ) {
                alt4=1;
            }
            switch (alt4) {
                case 1 :
                    // InternalSCTX.g:185:1: (lv_label_3_0= RULE_STRING )
                    {
                    // InternalSCTX.g:185:1: (lv_label_3_0= RULE_STRING )
                    // InternalSCTX.g:186:3: lv_label_3_0= RULE_STRING
                    {
                    lv_label_3_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_label_3_0, grammarAccess.getRootStateAccess().getLabelSTRINGTerminalRuleCall_3_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getRootStateRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"label",
                              		lv_label_3_0, 
                              		"de.cau.cs.kieler.annotations.Annotations.STRING");
                      	    
                    }

                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,17,FollowSets000.FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getRootStateAccess().getLeftCurlyBracketKeyword_4());
                  
            }
            // InternalSCTX.g:206:1: ( (lv_declarations_5_0= ruleDeclarationWOSemicolon ) )*
            loop5:
            do {
                int alt5=2;
                alt5 = dfa5.predict(input);
                switch (alt5) {
            	case 1 :
            	    // InternalSCTX.g:207:1: (lv_declarations_5_0= ruleDeclarationWOSemicolon )
            	    {
            	    // InternalSCTX.g:207:1: (lv_declarations_5_0= ruleDeclarationWOSemicolon )
            	    // InternalSCTX.g:208:3: lv_declarations_5_0= ruleDeclarationWOSemicolon
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getRootStateAccess().getDeclarationsDeclarationWOSemicolonParserRuleCall_5_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_9);
            	    lv_declarations_5_0=ruleDeclarationWOSemicolon();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getRootStateRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declarations",
            	              		lv_declarations_5_0, 
            	              		"de.cau.cs.kieler.kexpressions.kext.KExt.DeclarationWOSemicolon");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop5;
                }
            } while (true);

            // InternalSCTX.g:224:3: ( (lv_actions_6_0= ruleLocalAction ) )*
            loop6:
            do {
                int alt6=2;
                int LA6_0 = input.LA(1);

                if ( ((LA6_0>=37 && LA6_0<=43)||(LA6_0>=79 && LA6_0<=82)) ) {
                    alt6=1;
                }


                switch (alt6) {
            	case 1 :
            	    // InternalSCTX.g:225:1: (lv_actions_6_0= ruleLocalAction )
            	    {
            	    // InternalSCTX.g:225:1: (lv_actions_6_0= ruleLocalAction )
            	    // InternalSCTX.g:226:3: lv_actions_6_0= ruleLocalAction
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getRootStateAccess().getActionsLocalActionParserRuleCall_6_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_10);
            	    lv_actions_6_0=ruleLocalAction();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getRootStateRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"actions",
            	              		lv_actions_6_0, 
            	              		"de.cau.cs.kieler.sccharts.text.SCTX.LocalAction");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop6;
                }
            } while (true);

            // InternalSCTX.g:242:3: ( ( (lv_regions_7_0= ruleSingleControlflowRegion ) ) | ( (lv_regions_8_0= ruleSingleDataflowRegion ) ) | ( (lv_regions_9_0= ruleRegion ) )* )
            int alt8=3;
            alt8 = dfa8.predict(input);
            switch (alt8) {
                case 1 :
                    // InternalSCTX.g:242:4: ( (lv_regions_7_0= ruleSingleControlflowRegion ) )
                    {
                    // InternalSCTX.g:242:4: ( (lv_regions_7_0= ruleSingleControlflowRegion ) )
                    // InternalSCTX.g:243:1: (lv_regions_7_0= ruleSingleControlflowRegion )
                    {
                    // InternalSCTX.g:243:1: (lv_regions_7_0= ruleSingleControlflowRegion )
                    // InternalSCTX.g:244:3: lv_regions_7_0= ruleSingleControlflowRegion
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getRootStateAccess().getRegionsSingleControlflowRegionParserRuleCall_7_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_11);
                    lv_regions_7_0=ruleSingleControlflowRegion();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getRootStateRule());
                      	        }
                             		add(
                             			current, 
                             			"regions",
                              		lv_regions_7_0, 
                              		"de.cau.cs.kieler.sccharts.text.SCTX.SingleControlflowRegion");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:261:6: ( (lv_regions_8_0= ruleSingleDataflowRegion ) )
                    {
                    // InternalSCTX.g:261:6: ( (lv_regions_8_0= ruleSingleDataflowRegion ) )
                    // InternalSCTX.g:262:1: (lv_regions_8_0= ruleSingleDataflowRegion )
                    {
                    // InternalSCTX.g:262:1: (lv_regions_8_0= ruleSingleDataflowRegion )
                    // InternalSCTX.g:263:3: lv_regions_8_0= ruleSingleDataflowRegion
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getRootStateAccess().getRegionsSingleDataflowRegionParserRuleCall_7_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_11);
                    lv_regions_8_0=ruleSingleDataflowRegion();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getRootStateRule());
                      	        }
                             		add(
                             			current, 
                             			"regions",
                              		lv_regions_8_0, 
                              		"de.cau.cs.kieler.sccharts.text.SCTX.SingleDataflowRegion");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSCTX.g:280:6: ( (lv_regions_9_0= ruleRegion ) )*
                    {
                    // InternalSCTX.g:280:6: ( (lv_regions_9_0= ruleRegion ) )*
                    loop7:
                    do {
                        int alt7=2;
                        int LA7_0 = input.LA(1);

                        if ( (LA7_0==RULE_COMMENT_ANNOTATION||LA7_0==44||LA7_0==46||LA7_0==71) ) {
                            alt7=1;
                        }


                        switch (alt7) {
                    	case 1 :
                    	    // InternalSCTX.g:281:1: (lv_regions_9_0= ruleRegion )
                    	    {
                    	    // InternalSCTX.g:281:1: (lv_regions_9_0= ruleRegion )
                    	    // InternalSCTX.g:282:3: lv_regions_9_0= ruleRegion
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getRootStateAccess().getRegionsRegionParserRuleCall_7_2_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_12);
                    	    lv_regions_9_0=ruleRegion();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getRootStateRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"regions",
                    	              		lv_regions_9_0, 
                    	              		"de.cau.cs.kieler.sccharts.text.SCTX.Region");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop7;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_10=(Token)match(input,18,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_10, grammarAccess.getRootStateAccess().getRightCurlyBracketKeyword_8());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRootState"


    // $ANTLR start "entryRuleState"
    // InternalSCTX.g:310:1: entryRuleState returns [EObject current=null] : iv_ruleState= ruleState EOF ;
    public final EObject entryRuleState() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleState = null;


        try {
            // InternalSCTX.g:311:2: (iv_ruleState= ruleState EOF )
            // InternalSCTX.g:312:2: iv_ruleState= ruleState EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStateRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleState=ruleState();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleState; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleState"


    // $ANTLR start "ruleState"
    // InternalSCTX.g:319:1: ruleState returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_initial_1_0= 'initial' ) )? ( (lv_final_2_0= 'final' ) )? ( (lv_violation_3_0= 'violation' ) )? ( (lv_connector_4_0= 'connector' ) )? otherlv_5= 'state' ( (lv_id_6_0= RULE_ID ) ) ( (lv_label_7_0= RULE_STRING ) )? ( (otherlv_8= 'is' ( (lv_reference_9_0= ruleScopeCall ) ) ) | (otherlv_10= '{' ( (lv_declarations_11_0= ruleDeclarationWOSemicolon ) )* ( (lv_actions_12_0= ruleLocalAction ) )* ( ( (lv_regions_13_0= ruleSingleControlflowRegion ) ) | ( (lv_regions_14_0= ruleSingleDataflowRegion ) ) | ( (lv_regions_15_0= ruleRegion ) )* ) otherlv_16= '}' ) )? ( (lv_outgoingTransitions_17_0= ruleTransition ) )* ) ;
    public final EObject ruleState() throws RecognitionException {
        EObject current = null;

        Token lv_initial_1_0=null;
        Token lv_final_2_0=null;
        Token lv_violation_3_0=null;
        Token lv_connector_4_0=null;
        Token otherlv_5=null;
        Token lv_id_6_0=null;
        Token lv_label_7_0=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_16=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_reference_9_0 = null;

        EObject lv_declarations_11_0 = null;

        EObject lv_actions_12_0 = null;

        EObject lv_regions_13_0 = null;

        EObject lv_regions_14_0 = null;

        EObject lv_regions_15_0 = null;

        EObject lv_outgoingTransitions_17_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:322:28: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_initial_1_0= 'initial' ) )? ( (lv_final_2_0= 'final' ) )? ( (lv_violation_3_0= 'violation' ) )? ( (lv_connector_4_0= 'connector' ) )? otherlv_5= 'state' ( (lv_id_6_0= RULE_ID ) ) ( (lv_label_7_0= RULE_STRING ) )? ( (otherlv_8= 'is' ( (lv_reference_9_0= ruleScopeCall ) ) ) | (otherlv_10= '{' ( (lv_declarations_11_0= ruleDeclarationWOSemicolon ) )* ( (lv_actions_12_0= ruleLocalAction ) )* ( ( (lv_regions_13_0= ruleSingleControlflowRegion ) ) | ( (lv_regions_14_0= ruleSingleDataflowRegion ) ) | ( (lv_regions_15_0= ruleRegion ) )* ) otherlv_16= '}' ) )? ( (lv_outgoingTransitions_17_0= ruleTransition ) )* ) )
            // InternalSCTX.g:323:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_initial_1_0= 'initial' ) )? ( (lv_final_2_0= 'final' ) )? ( (lv_violation_3_0= 'violation' ) )? ( (lv_connector_4_0= 'connector' ) )? otherlv_5= 'state' ( (lv_id_6_0= RULE_ID ) ) ( (lv_label_7_0= RULE_STRING ) )? ( (otherlv_8= 'is' ( (lv_reference_9_0= ruleScopeCall ) ) ) | (otherlv_10= '{' ( (lv_declarations_11_0= ruleDeclarationWOSemicolon ) )* ( (lv_actions_12_0= ruleLocalAction ) )* ( ( (lv_regions_13_0= ruleSingleControlflowRegion ) ) | ( (lv_regions_14_0= ruleSingleDataflowRegion ) ) | ( (lv_regions_15_0= ruleRegion ) )* ) otherlv_16= '}' ) )? ( (lv_outgoingTransitions_17_0= ruleTransition ) )* )
            {
            // InternalSCTX.g:323:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_initial_1_0= 'initial' ) )? ( (lv_final_2_0= 'final' ) )? ( (lv_violation_3_0= 'violation' ) )? ( (lv_connector_4_0= 'connector' ) )? otherlv_5= 'state' ( (lv_id_6_0= RULE_ID ) ) ( (lv_label_7_0= RULE_STRING ) )? ( (otherlv_8= 'is' ( (lv_reference_9_0= ruleScopeCall ) ) ) | (otherlv_10= '{' ( (lv_declarations_11_0= ruleDeclarationWOSemicolon ) )* ( (lv_actions_12_0= ruleLocalAction ) )* ( ( (lv_regions_13_0= ruleSingleControlflowRegion ) ) | ( (lv_regions_14_0= ruleSingleDataflowRegion ) ) | ( (lv_regions_15_0= ruleRegion ) )* ) otherlv_16= '}' ) )? ( (lv_outgoingTransitions_17_0= ruleTransition ) )* )
            // InternalSCTX.g:323:2: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_initial_1_0= 'initial' ) )? ( (lv_final_2_0= 'final' ) )? ( (lv_violation_3_0= 'violation' ) )? ( (lv_connector_4_0= 'connector' ) )? otherlv_5= 'state' ( (lv_id_6_0= RULE_ID ) ) ( (lv_label_7_0= RULE_STRING ) )? ( (otherlv_8= 'is' ( (lv_reference_9_0= ruleScopeCall ) ) ) | (otherlv_10= '{' ( (lv_declarations_11_0= ruleDeclarationWOSemicolon ) )* ( (lv_actions_12_0= ruleLocalAction ) )* ( ( (lv_regions_13_0= ruleSingleControlflowRegion ) ) | ( (lv_regions_14_0= ruleSingleDataflowRegion ) ) | ( (lv_regions_15_0= ruleRegion ) )* ) otherlv_16= '}' ) )? ( (lv_outgoingTransitions_17_0= ruleTransition ) )*
            {
            // InternalSCTX.g:323:2: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop9:
            do {
                int alt9=2;
                int LA9_0 = input.LA(1);

                if ( (LA9_0==RULE_COMMENT_ANNOTATION||LA9_0==71) ) {
                    alt9=1;
                }


                switch (alt9) {
            	case 1 :
            	    // InternalSCTX.g:324:1: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:324:1: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:325:3: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getStateAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_13);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getStateRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop9;
                }
            } while (true);

            // InternalSCTX.g:341:3: ( (lv_initial_1_0= 'initial' ) )?
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==19) ) {
                alt10=1;
            }
            switch (alt10) {
                case 1 :
                    // InternalSCTX.g:342:1: (lv_initial_1_0= 'initial' )
                    {
                    // InternalSCTX.g:342:1: (lv_initial_1_0= 'initial' )
                    // InternalSCTX.g:343:3: lv_initial_1_0= 'initial'
                    {
                    lv_initial_1_0=(Token)match(input,19,FollowSets000.FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_initial_1_0, grammarAccess.getStateAccess().getInitialInitialKeyword_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getStateRule());
                      	        }
                             		setWithLastConsumed(current, "initial", true, "initial");
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:356:3: ( (lv_final_2_0= 'final' ) )?
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==20) ) {
                alt11=1;
            }
            switch (alt11) {
                case 1 :
                    // InternalSCTX.g:357:1: (lv_final_2_0= 'final' )
                    {
                    // InternalSCTX.g:357:1: (lv_final_2_0= 'final' )
                    // InternalSCTX.g:358:3: lv_final_2_0= 'final'
                    {
                    lv_final_2_0=(Token)match(input,20,FollowSets000.FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_final_2_0, grammarAccess.getStateAccess().getFinalFinalKeyword_2_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getStateRule());
                      	        }
                             		setWithLastConsumed(current, "final", true, "final");
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:371:3: ( (lv_violation_3_0= 'violation' ) )?
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==21) ) {
                alt12=1;
            }
            switch (alt12) {
                case 1 :
                    // InternalSCTX.g:372:1: (lv_violation_3_0= 'violation' )
                    {
                    // InternalSCTX.g:372:1: (lv_violation_3_0= 'violation' )
                    // InternalSCTX.g:373:3: lv_violation_3_0= 'violation'
                    {
                    lv_violation_3_0=(Token)match(input,21,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_violation_3_0, grammarAccess.getStateAccess().getViolationViolationKeyword_3_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getStateRule());
                      	        }
                             		setWithLastConsumed(current, "violation", true, "violation");
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:386:3: ( (lv_connector_4_0= 'connector' ) )?
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==22) ) {
                alt13=1;
            }
            switch (alt13) {
                case 1 :
                    // InternalSCTX.g:387:1: (lv_connector_4_0= 'connector' )
                    {
                    // InternalSCTX.g:387:1: (lv_connector_4_0= 'connector' )
                    // InternalSCTX.g:388:3: lv_connector_4_0= 'connector'
                    {
                    lv_connector_4_0=(Token)match(input,22,FollowSets000.FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_connector_4_0, grammarAccess.getStateAccess().getConnectorConnectorKeyword_4_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getStateRule());
                      	        }
                             		setWithLastConsumed(current, "connector", true, "connector");
                      	    
                    }

                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,23,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getStateAccess().getStateKeyword_5());
                  
            }
            // InternalSCTX.g:405:1: ( (lv_id_6_0= RULE_ID ) )
            // InternalSCTX.g:406:1: (lv_id_6_0= RULE_ID )
            {
            // InternalSCTX.g:406:1: (lv_id_6_0= RULE_ID )
            // InternalSCTX.g:407:3: lv_id_6_0= RULE_ID
            {
            lv_id_6_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_id_6_0, grammarAccess.getStateAccess().getIdIDTerminalRuleCall_6_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getStateRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"id",
                      		lv_id_6_0, 
                      		"org.eclipse.xtext.common.Terminals.ID");
              	    
            }

            }


            }

            // InternalSCTX.g:423:2: ( (lv_label_7_0= RULE_STRING ) )?
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==RULE_STRING) ) {
                alt14=1;
            }
            switch (alt14) {
                case 1 :
                    // InternalSCTX.g:424:1: (lv_label_7_0= RULE_STRING )
                    {
                    // InternalSCTX.g:424:1: (lv_label_7_0= RULE_STRING )
                    // InternalSCTX.g:425:3: lv_label_7_0= RULE_STRING
                    {
                    lv_label_7_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_label_7_0, grammarAccess.getStateAccess().getLabelSTRINGTerminalRuleCall_7_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getStateRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"label",
                              		lv_label_7_0, 
                              		"de.cau.cs.kieler.annotations.Annotations.STRING");
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:441:3: ( (otherlv_8= 'is' ( (lv_reference_9_0= ruleScopeCall ) ) ) | (otherlv_10= '{' ( (lv_declarations_11_0= ruleDeclarationWOSemicolon ) )* ( (lv_actions_12_0= ruleLocalAction ) )* ( ( (lv_regions_13_0= ruleSingleControlflowRegion ) ) | ( (lv_regions_14_0= ruleSingleDataflowRegion ) ) | ( (lv_regions_15_0= ruleRegion ) )* ) otherlv_16= '}' ) )?
            int alt19=3;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==24) ) {
                alt19=1;
            }
            else if ( (LA19_0==17) ) {
                alt19=2;
            }
            switch (alt19) {
                case 1 :
                    // InternalSCTX.g:441:4: (otherlv_8= 'is' ( (lv_reference_9_0= ruleScopeCall ) ) )
                    {
                    // InternalSCTX.g:441:4: (otherlv_8= 'is' ( (lv_reference_9_0= ruleScopeCall ) ) )
                    // InternalSCTX.g:441:6: otherlv_8= 'is' ( (lv_reference_9_0= ruleScopeCall ) )
                    {
                    otherlv_8=(Token)match(input,24,FollowSets000.FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getStateAccess().getIsKeyword_8_0_0());
                          
                    }
                    // InternalSCTX.g:445:1: ( (lv_reference_9_0= ruleScopeCall ) )
                    // InternalSCTX.g:446:1: (lv_reference_9_0= ruleScopeCall )
                    {
                    // InternalSCTX.g:446:1: (lv_reference_9_0= ruleScopeCall )
                    // InternalSCTX.g:447:3: lv_reference_9_0= ruleScopeCall
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getStateAccess().getReferenceScopeCallParserRuleCall_8_0_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_20);
                    lv_reference_9_0=ruleScopeCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getStateRule());
                      	        }
                             		set(
                             			current, 
                             			"reference",
                              		lv_reference_9_0, 
                              		"de.cau.cs.kieler.sccharts.text.SCTX.ScopeCall");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:464:6: (otherlv_10= '{' ( (lv_declarations_11_0= ruleDeclarationWOSemicolon ) )* ( (lv_actions_12_0= ruleLocalAction ) )* ( ( (lv_regions_13_0= ruleSingleControlflowRegion ) ) | ( (lv_regions_14_0= ruleSingleDataflowRegion ) ) | ( (lv_regions_15_0= ruleRegion ) )* ) otherlv_16= '}' )
                    {
                    // InternalSCTX.g:464:6: (otherlv_10= '{' ( (lv_declarations_11_0= ruleDeclarationWOSemicolon ) )* ( (lv_actions_12_0= ruleLocalAction ) )* ( ( (lv_regions_13_0= ruleSingleControlflowRegion ) ) | ( (lv_regions_14_0= ruleSingleDataflowRegion ) ) | ( (lv_regions_15_0= ruleRegion ) )* ) otherlv_16= '}' )
                    // InternalSCTX.g:464:8: otherlv_10= '{' ( (lv_declarations_11_0= ruleDeclarationWOSemicolon ) )* ( (lv_actions_12_0= ruleLocalAction ) )* ( ( (lv_regions_13_0= ruleSingleControlflowRegion ) ) | ( (lv_regions_14_0= ruleSingleDataflowRegion ) ) | ( (lv_regions_15_0= ruleRegion ) )* ) otherlv_16= '}'
                    {
                    otherlv_10=(Token)match(input,17,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_10, grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_8_1_0());
                          
                    }
                    // InternalSCTX.g:468:1: ( (lv_declarations_11_0= ruleDeclarationWOSemicolon ) )*
                    loop15:
                    do {
                        int alt15=2;
                        alt15 = dfa15.predict(input);
                        switch (alt15) {
                    	case 1 :
                    	    // InternalSCTX.g:469:1: (lv_declarations_11_0= ruleDeclarationWOSemicolon )
                    	    {
                    	    // InternalSCTX.g:469:1: (lv_declarations_11_0= ruleDeclarationWOSemicolon )
                    	    // InternalSCTX.g:470:3: lv_declarations_11_0= ruleDeclarationWOSemicolon
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getStateAccess().getDeclarationsDeclarationWOSemicolonParserRuleCall_8_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_9);
                    	    lv_declarations_11_0=ruleDeclarationWOSemicolon();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getStateRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"declarations",
                    	              		lv_declarations_11_0, 
                    	              		"de.cau.cs.kieler.kexpressions.kext.KExt.DeclarationWOSemicolon");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop15;
                        }
                    } while (true);

                    // InternalSCTX.g:486:3: ( (lv_actions_12_0= ruleLocalAction ) )*
                    loop16:
                    do {
                        int alt16=2;
                        int LA16_0 = input.LA(1);

                        if ( ((LA16_0>=37 && LA16_0<=43)||(LA16_0>=79 && LA16_0<=82)) ) {
                            alt16=1;
                        }


                        switch (alt16) {
                    	case 1 :
                    	    // InternalSCTX.g:487:1: (lv_actions_12_0= ruleLocalAction )
                    	    {
                    	    // InternalSCTX.g:487:1: (lv_actions_12_0= ruleLocalAction )
                    	    // InternalSCTX.g:488:3: lv_actions_12_0= ruleLocalAction
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getStateAccess().getActionsLocalActionParserRuleCall_8_1_2_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_10);
                    	    lv_actions_12_0=ruleLocalAction();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getStateRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"actions",
                    	              		lv_actions_12_0, 
                    	              		"de.cau.cs.kieler.sccharts.text.SCTX.LocalAction");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop16;
                        }
                    } while (true);

                    // InternalSCTX.g:504:3: ( ( (lv_regions_13_0= ruleSingleControlflowRegion ) ) | ( (lv_regions_14_0= ruleSingleDataflowRegion ) ) | ( (lv_regions_15_0= ruleRegion ) )* )
                    int alt18=3;
                    alt18 = dfa18.predict(input);
                    switch (alt18) {
                        case 1 :
                            // InternalSCTX.g:504:4: ( (lv_regions_13_0= ruleSingleControlflowRegion ) )
                            {
                            // InternalSCTX.g:504:4: ( (lv_regions_13_0= ruleSingleControlflowRegion ) )
                            // InternalSCTX.g:505:1: (lv_regions_13_0= ruleSingleControlflowRegion )
                            {
                            // InternalSCTX.g:505:1: (lv_regions_13_0= ruleSingleControlflowRegion )
                            // InternalSCTX.g:506:3: lv_regions_13_0= ruleSingleControlflowRegion
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getStateAccess().getRegionsSingleControlflowRegionParserRuleCall_8_1_3_0_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_11);
                            lv_regions_13_0=ruleSingleControlflowRegion();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getStateRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"regions",
                                      		lv_regions_13_0, 
                                      		"de.cau.cs.kieler.sccharts.text.SCTX.SingleControlflowRegion");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalSCTX.g:523:6: ( (lv_regions_14_0= ruleSingleDataflowRegion ) )
                            {
                            // InternalSCTX.g:523:6: ( (lv_regions_14_0= ruleSingleDataflowRegion ) )
                            // InternalSCTX.g:524:1: (lv_regions_14_0= ruleSingleDataflowRegion )
                            {
                            // InternalSCTX.g:524:1: (lv_regions_14_0= ruleSingleDataflowRegion )
                            // InternalSCTX.g:525:3: lv_regions_14_0= ruleSingleDataflowRegion
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getStateAccess().getRegionsSingleDataflowRegionParserRuleCall_8_1_3_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_11);
                            lv_regions_14_0=ruleSingleDataflowRegion();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getStateRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"regions",
                                      		lv_regions_14_0, 
                                      		"de.cau.cs.kieler.sccharts.text.SCTX.SingleDataflowRegion");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalSCTX.g:542:6: ( (lv_regions_15_0= ruleRegion ) )*
                            {
                            // InternalSCTX.g:542:6: ( (lv_regions_15_0= ruleRegion ) )*
                            loop17:
                            do {
                                int alt17=2;
                                int LA17_0 = input.LA(1);

                                if ( (LA17_0==RULE_COMMENT_ANNOTATION||LA17_0==44||LA17_0==46||LA17_0==71) ) {
                                    alt17=1;
                                }


                                switch (alt17) {
                            	case 1 :
                            	    // InternalSCTX.g:543:1: (lv_regions_15_0= ruleRegion )
                            	    {
                            	    // InternalSCTX.g:543:1: (lv_regions_15_0= ruleRegion )
                            	    // InternalSCTX.g:544:3: lv_regions_15_0= ruleRegion
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getStateAccess().getRegionsRegionParserRuleCall_8_1_3_2_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_12);
                            	    lv_regions_15_0=ruleRegion();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getStateRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"regions",
                            	              		lv_regions_15_0, 
                            	              		"de.cau.cs.kieler.sccharts.text.SCTX.Region");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop17;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_16=(Token)match(input,18,FollowSets000.FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_16, grammarAccess.getStateAccess().getRightCurlyBracketKeyword_8_1_4());
                          
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:564:4: ( (lv_outgoingTransitions_17_0= ruleTransition ) )*
            loop20:
            do {
                int alt20=2;
                alt20 = dfa20.predict(input);
                switch (alt20) {
            	case 1 :
            	    // InternalSCTX.g:565:1: (lv_outgoingTransitions_17_0= ruleTransition )
            	    {
            	    // InternalSCTX.g:565:1: (lv_outgoingTransitions_17_0= ruleTransition )
            	    // InternalSCTX.g:566:3: lv_outgoingTransitions_17_0= ruleTransition
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getStateAccess().getOutgoingTransitionsTransitionParserRuleCall_9_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_20);
            	    lv_outgoingTransitions_17_0=ruleTransition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getStateRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"outgoingTransitions",
            	              		lv_outgoingTransitions_17_0, 
            	              		"de.cau.cs.kieler.sccharts.text.SCTX.Transition");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop20;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleState"


    // $ANTLR start "entryRuleScopeCall"
    // InternalSCTX.g:590:1: entryRuleScopeCall returns [EObject current=null] : iv_ruleScopeCall= ruleScopeCall EOF ;
    public final EObject entryRuleScopeCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScopeCall = null;


        try {
            // InternalSCTX.g:591:2: (iv_ruleScopeCall= ruleScopeCall EOF )
            // InternalSCTX.g:592:2: iv_ruleScopeCall= ruleScopeCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScopeCallRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScopeCall=ruleScopeCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScopeCall; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScopeCall"


    // $ANTLR start "ruleScopeCall"
    // InternalSCTX.g:599:1: ruleScopeCall returns [EObject current=null] : ( ( (otherlv_0= RULE_ID ) ) ( (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')' ) | (otherlv_6= '(' otherlv_7= ')' ) )? ) ;
    public final EObject ruleScopeCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        EObject lv_parameters_2_0 = null;

        EObject lv_parameters_4_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:602:28: ( ( ( (otherlv_0= RULE_ID ) ) ( (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')' ) | (otherlv_6= '(' otherlv_7= ')' ) )? ) )
            // InternalSCTX.g:603:1: ( ( (otherlv_0= RULE_ID ) ) ( (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')' ) | (otherlv_6= '(' otherlv_7= ')' ) )? )
            {
            // InternalSCTX.g:603:1: ( ( (otherlv_0= RULE_ID ) ) ( (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')' ) | (otherlv_6= '(' otherlv_7= ')' ) )? )
            // InternalSCTX.g:603:2: ( (otherlv_0= RULE_ID ) ) ( (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')' ) | (otherlv_6= '(' otherlv_7= ')' ) )?
            {
            // InternalSCTX.g:603:2: ( (otherlv_0= RULE_ID ) )
            // InternalSCTX.g:604:1: (otherlv_0= RULE_ID )
            {
            // InternalSCTX.g:604:1: (otherlv_0= RULE_ID )
            // InternalSCTX.g:605:3: otherlv_0= RULE_ID
            {
            if ( state.backtracking==0 ) {
               
              		  /* */ 
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getScopeCallRule());
              	        }
                      
            }
            otherlv_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_21); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		newLeafNode(otherlv_0, grammarAccess.getScopeCallAccess().getScopeStateCrossReference_0_0()); 
              	
            }

            }


            }

            // InternalSCTX.g:619:2: ( (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')' ) | (otherlv_6= '(' otherlv_7= ')' ) )?
            int alt22=3;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==25) ) {
                int LA22_1 = input.LA(2);

                if ( (LA22_1==27) ) {
                    alt22=2;
                }
                else if ( ((LA22_1>=RULE_ID && LA22_1<=RULE_BOOLEAN)||LA22_1==25||(LA22_1>=28 && LA22_1<=29)||LA22_1==55||LA22_1==60||LA22_1==66||(LA22_1>=102 && LA22_1<=103)) ) {
                    alt22=1;
                }
            }
            switch (alt22) {
                case 1 :
                    // InternalSCTX.g:619:3: (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')' )
                    {
                    // InternalSCTX.g:619:3: (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')' )
                    // InternalSCTX.g:619:5: otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')'
                    {
                    otherlv_1=(Token)match(input,25,FollowSets000.FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getScopeCallAccess().getLeftParenthesisKeyword_1_0_0());
                          
                    }
                    // InternalSCTX.g:623:1: ( (lv_parameters_2_0= ruleParameter ) )
                    // InternalSCTX.g:624:1: (lv_parameters_2_0= ruleParameter )
                    {
                    // InternalSCTX.g:624:1: (lv_parameters_2_0= ruleParameter )
                    // InternalSCTX.g:625:3: lv_parameters_2_0= ruleParameter
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getScopeCallAccess().getParametersParameterParserRuleCall_1_0_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_23);
                    lv_parameters_2_0=ruleParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getScopeCallRule());
                      	        }
                             		add(
                             			current, 
                             			"parameters",
                              		lv_parameters_2_0, 
                              		"de.cau.cs.kieler.sccharts.text.SCTX.Parameter");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:641:2: (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )*
                    loop21:
                    do {
                        int alt21=2;
                        int LA21_0 = input.LA(1);

                        if ( (LA21_0==26) ) {
                            alt21=1;
                        }


                        switch (alt21) {
                    	case 1 :
                    	    // InternalSCTX.g:641:4: otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) )
                    	    {
                    	    otherlv_3=(Token)match(input,26,FollowSets000.FOLLOW_22); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_3, grammarAccess.getScopeCallAccess().getCommaKeyword_1_0_2_0());
                    	          
                    	    }
                    	    // InternalSCTX.g:645:1: ( (lv_parameters_4_0= ruleParameter ) )
                    	    // InternalSCTX.g:646:1: (lv_parameters_4_0= ruleParameter )
                    	    {
                    	    // InternalSCTX.g:646:1: (lv_parameters_4_0= ruleParameter )
                    	    // InternalSCTX.g:647:3: lv_parameters_4_0= ruleParameter
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getScopeCallAccess().getParametersParameterParserRuleCall_1_0_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_23);
                    	    lv_parameters_4_0=ruleParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getScopeCallRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"parameters",
                    	              		lv_parameters_4_0, 
                    	              		"de.cau.cs.kieler.sccharts.text.SCTX.Parameter");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop21;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,27,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getScopeCallAccess().getRightParenthesisKeyword_1_0_3());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:668:6: (otherlv_6= '(' otherlv_7= ')' )
                    {
                    // InternalSCTX.g:668:6: (otherlv_6= '(' otherlv_7= ')' )
                    // InternalSCTX.g:668:8: otherlv_6= '(' otherlv_7= ')'
                    {
                    otherlv_6=(Token)match(input,25,FollowSets000.FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getScopeCallAccess().getLeftParenthesisKeyword_1_1_0());
                          
                    }
                    otherlv_7=(Token)match(input,27,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getScopeCallAccess().getRightParenthesisKeyword_1_1_1());
                          
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScopeCall"


    // $ANTLR start "entryRuleParameter"
    // InternalSCTX.g:684:1: entryRuleParameter returns [EObject current=null] : iv_ruleParameter= ruleParameter EOF ;
    public final EObject entryRuleParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameter = null;


        try {
            // InternalSCTX.g:685:2: (iv_ruleParameter= ruleParameter EOF )
            // InternalSCTX.g:686:2: iv_ruleParameter= ruleParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleParameter=ruleParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameter; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParameter"


    // $ANTLR start "ruleParameter"
    // InternalSCTX.g:693:1: ruleParameter returns [EObject current=null] : ( ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )? ) ;
    public final EObject ruleParameter() throws RecognitionException {
        EObject current = null;

        Token lv_pureOutput_0_0=null;
        Token lv_callByReference_1_0=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_expression_2_0 = null;

        EObject lv_explicitBindingIndices_6_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:696:28: ( ( ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )? ) )
            // InternalSCTX.g:697:1: ( ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )? )
            {
            // InternalSCTX.g:697:1: ( ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )? )
            // InternalSCTX.g:697:2: ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )?
            {
            // InternalSCTX.g:697:2: ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )?
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( (LA24_0==28) ) {
                int LA24_1 = input.LA(2);

                if ( (LA24_1==29) ) {
                    alt24=1;
                }
            }
            else if ( (LA24_0==29) ) {
                alt24=1;
            }
            switch (alt24) {
                case 1 :
                    // InternalSCTX.g:697:3: ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) )
                    {
                    // InternalSCTX.g:697:3: ( (lv_pureOutput_0_0= '!' ) )?
                    int alt23=2;
                    int LA23_0 = input.LA(1);

                    if ( (LA23_0==28) ) {
                        alt23=1;
                    }
                    switch (alt23) {
                        case 1 :
                            // InternalSCTX.g:698:1: (lv_pureOutput_0_0= '!' )
                            {
                            // InternalSCTX.g:698:1: (lv_pureOutput_0_0= '!' )
                            // InternalSCTX.g:699:3: lv_pureOutput_0_0= '!'
                            {
                            lv_pureOutput_0_0=(Token)match(input,28,FollowSets000.FOLLOW_25); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_pureOutput_0_0, grammarAccess.getParameterAccess().getPureOutputExclamationMarkKeyword_0_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getParameterRule());
                              	        }
                                     		setWithLastConsumed(current, "pureOutput", true, "!");
                              	    
                            }

                            }


                            }
                            break;

                    }

                    // InternalSCTX.g:712:3: ( (lv_callByReference_1_0= '&' ) )
                    // InternalSCTX.g:713:1: (lv_callByReference_1_0= '&' )
                    {
                    // InternalSCTX.g:713:1: (lv_callByReference_1_0= '&' )
                    // InternalSCTX.g:714:3: lv_callByReference_1_0= '&'
                    {
                    lv_callByReference_1_0=(Token)match(input,29,FollowSets000.FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_callByReference_1_0, grammarAccess.getParameterAccess().getCallByReferenceAmpersandKeyword_0_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getParameterRule());
                      	        }
                             		setWithLastConsumed(current, "callByReference", true, "&");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:727:4: ( (lv_expression_2_0= ruleExpression ) )
            // InternalSCTX.g:728:1: (lv_expression_2_0= ruleExpression )
            {
            // InternalSCTX.g:728:1: (lv_expression_2_0= ruleExpression )
            // InternalSCTX.g:729:3: lv_expression_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getParameterAccess().getExpressionExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_26);
            lv_expression_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getParameterRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:745:2: (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )?
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==30) ) {
                alt26=1;
            }
            switch (alt26) {
                case 1 :
                    // InternalSCTX.g:745:4: otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )*
                    {
                    otherlv_3=(Token)match(input,30,FollowSets000.FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getParameterAccess().getToKeyword_2_0());
                          
                    }
                    // InternalSCTX.g:749:1: ( (otherlv_4= RULE_ID ) )
                    // InternalSCTX.g:750:1: (otherlv_4= RULE_ID )
                    {
                    // InternalSCTX.g:750:1: (otherlv_4= RULE_ID )
                    // InternalSCTX.g:751:3: otherlv_4= RULE_ID
                    {
                    if ( state.backtracking==0 ) {
                       
                      		  /* */ 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getParameterRule());
                      	        }
                              
                    }
                    otherlv_4=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		newLeafNode(otherlv_4, grammarAccess.getParameterAccess().getExplicitBindingValuedObjectCrossReference_2_1_0()); 
                      	
                    }

                    }


                    }

                    // InternalSCTX.g:765:2: (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )*
                    loop25:
                    do {
                        int alt25=2;
                        int LA25_0 = input.LA(1);

                        if ( (LA25_0==31) ) {
                            alt25=1;
                        }


                        switch (alt25) {
                    	case 1 :
                    	    // InternalSCTX.g:765:4: otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']'
                    	    {
                    	    otherlv_5=(Token)match(input,31,FollowSets000.FOLLOW_22); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_5, grammarAccess.getParameterAccess().getLeftSquareBracketKeyword_2_2_0());
                    	          
                    	    }
                    	    // InternalSCTX.g:769:1: ( (lv_explicitBindingIndices_6_0= ruleExpression ) )
                    	    // InternalSCTX.g:770:1: (lv_explicitBindingIndices_6_0= ruleExpression )
                    	    {
                    	    // InternalSCTX.g:770:1: (lv_explicitBindingIndices_6_0= ruleExpression )
                    	    // InternalSCTX.g:771:3: lv_explicitBindingIndices_6_0= ruleExpression
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getParameterAccess().getExplicitBindingIndicesExpressionParserRuleCall_2_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_28);
                    	    lv_explicitBindingIndices_6_0=ruleExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getParameterRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"explicitBindingIndices",
                    	              		lv_explicitBindingIndices_6_0, 
                    	              		"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }

                    	    otherlv_7=(Token)match(input,32,FollowSets000.FOLLOW_27); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_7, grammarAccess.getParameterAccess().getRightSquareBracketKeyword_2_2_2());
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop25;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameter"


    // $ANTLR start "entryRuleTransition"
    // InternalSCTX.g:799:1: entryRuleTransition returns [EObject current=null] : iv_ruleTransition= ruleTransition EOF ;
    public final EObject entryRuleTransition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTransition = null;


        try {
            // InternalSCTX.g:800:2: (iv_ruleTransition= ruleTransition EOF )
            // InternalSCTX.g:801:2: iv_ruleTransition= ruleTransition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTransitionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTransition=ruleTransition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTransition; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTransition"


    // $ANTLR start "ruleTransition"
    // InternalSCTX.g:808:1: ruleTransition returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleRestrictedTypeAnnotation ) )* ( ( (lv_preemption_1_1= rulePreemptionType | lv_preemption_1_2= rulePreemptionTypeLegacy ) ) ) ( (otherlv_2= RULE_ID ) ) ( (lv_delay_3_0= ruleDelayType ) )? ( (lv_deferred_4_0= 'deferred' ) )? ( (lv_history_5_0= ruleHistoryType ) )? ( ( (otherlv_6= 'if' ( (lv_triggerDelay_7_0= RULE_INT ) )? ( (lv_trigger_8_0= ruleBoolExpression ) ) )? (otherlv_9= 'do' ( (lv_effects_10_0= ruleEffect ) ) (otherlv_11= ';' ( (lv_effects_12_0= ruleEffect ) ) )* )? ) | (otherlv_13= 'if' ( (lv_label_14_0= RULE_STRING ) ) ) )? ) ;
    public final EObject ruleTransition() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_deferred_4_0=null;
        Token otherlv_6=null;
        Token lv_triggerDelay_7_0=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token lv_label_14_0=null;
        EObject lv_annotations_0_0 = null;

        Enumerator lv_preemption_1_1 = null;

        Enumerator lv_preemption_1_2 = null;

        Enumerator lv_delay_3_0 = null;

        Enumerator lv_history_5_0 = null;

        EObject lv_trigger_8_0 = null;

        EObject lv_effects_10_0 = null;

        EObject lv_effects_12_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:811:28: ( ( ( (lv_annotations_0_0= ruleRestrictedTypeAnnotation ) )* ( ( (lv_preemption_1_1= rulePreemptionType | lv_preemption_1_2= rulePreemptionTypeLegacy ) ) ) ( (otherlv_2= RULE_ID ) ) ( (lv_delay_3_0= ruleDelayType ) )? ( (lv_deferred_4_0= 'deferred' ) )? ( (lv_history_5_0= ruleHistoryType ) )? ( ( (otherlv_6= 'if' ( (lv_triggerDelay_7_0= RULE_INT ) )? ( (lv_trigger_8_0= ruleBoolExpression ) ) )? (otherlv_9= 'do' ( (lv_effects_10_0= ruleEffect ) ) (otherlv_11= ';' ( (lv_effects_12_0= ruleEffect ) ) )* )? ) | (otherlv_13= 'if' ( (lv_label_14_0= RULE_STRING ) ) ) )? ) )
            // InternalSCTX.g:812:1: ( ( (lv_annotations_0_0= ruleRestrictedTypeAnnotation ) )* ( ( (lv_preemption_1_1= rulePreemptionType | lv_preemption_1_2= rulePreemptionTypeLegacy ) ) ) ( (otherlv_2= RULE_ID ) ) ( (lv_delay_3_0= ruleDelayType ) )? ( (lv_deferred_4_0= 'deferred' ) )? ( (lv_history_5_0= ruleHistoryType ) )? ( ( (otherlv_6= 'if' ( (lv_triggerDelay_7_0= RULE_INT ) )? ( (lv_trigger_8_0= ruleBoolExpression ) ) )? (otherlv_9= 'do' ( (lv_effects_10_0= ruleEffect ) ) (otherlv_11= ';' ( (lv_effects_12_0= ruleEffect ) ) )* )? ) | (otherlv_13= 'if' ( (lv_label_14_0= RULE_STRING ) ) ) )? )
            {
            // InternalSCTX.g:812:1: ( ( (lv_annotations_0_0= ruleRestrictedTypeAnnotation ) )* ( ( (lv_preemption_1_1= rulePreemptionType | lv_preemption_1_2= rulePreemptionTypeLegacy ) ) ) ( (otherlv_2= RULE_ID ) ) ( (lv_delay_3_0= ruleDelayType ) )? ( (lv_deferred_4_0= 'deferred' ) )? ( (lv_history_5_0= ruleHistoryType ) )? ( ( (otherlv_6= 'if' ( (lv_triggerDelay_7_0= RULE_INT ) )? ( (lv_trigger_8_0= ruleBoolExpression ) ) )? (otherlv_9= 'do' ( (lv_effects_10_0= ruleEffect ) ) (otherlv_11= ';' ( (lv_effects_12_0= ruleEffect ) ) )* )? ) | (otherlv_13= 'if' ( (lv_label_14_0= RULE_STRING ) ) ) )? )
            // InternalSCTX.g:812:2: ( (lv_annotations_0_0= ruleRestrictedTypeAnnotation ) )* ( ( (lv_preemption_1_1= rulePreemptionType | lv_preemption_1_2= rulePreemptionTypeLegacy ) ) ) ( (otherlv_2= RULE_ID ) ) ( (lv_delay_3_0= ruleDelayType ) )? ( (lv_deferred_4_0= 'deferred' ) )? ( (lv_history_5_0= ruleHistoryType ) )? ( ( (otherlv_6= 'if' ( (lv_triggerDelay_7_0= RULE_INT ) )? ( (lv_trigger_8_0= ruleBoolExpression ) ) )? (otherlv_9= 'do' ( (lv_effects_10_0= ruleEffect ) ) (otherlv_11= ';' ( (lv_effects_12_0= ruleEffect ) ) )* )? ) | (otherlv_13= 'if' ( (lv_label_14_0= RULE_STRING ) ) ) )?
            {
            // InternalSCTX.g:812:2: ( (lv_annotations_0_0= ruleRestrictedTypeAnnotation ) )*
            loop27:
            do {
                int alt27=2;
                int LA27_0 = input.LA(1);

                if ( (LA27_0==RULE_COMMENT_ANNOTATION||LA27_0==71) ) {
                    alt27=1;
                }


                switch (alt27) {
            	case 1 :
            	    // InternalSCTX.g:813:1: (lv_annotations_0_0= ruleRestrictedTypeAnnotation )
            	    {
            	    // InternalSCTX.g:813:1: (lv_annotations_0_0= ruleRestrictedTypeAnnotation )
            	    // InternalSCTX.g:814:3: lv_annotations_0_0= ruleRestrictedTypeAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getTransitionAccess().getAnnotationsRestrictedTypeAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_29);
            	    lv_annotations_0_0=ruleRestrictedTypeAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getTransitionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.RestrictedTypeAnnotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop27;
                }
            } while (true);

            // InternalSCTX.g:830:3: ( ( (lv_preemption_1_1= rulePreemptionType | lv_preemption_1_2= rulePreemptionTypeLegacy ) ) )
            // InternalSCTX.g:831:1: ( (lv_preemption_1_1= rulePreemptionType | lv_preemption_1_2= rulePreemptionTypeLegacy ) )
            {
            // InternalSCTX.g:831:1: ( (lv_preemption_1_1= rulePreemptionType | lv_preemption_1_2= rulePreemptionTypeLegacy ) )
            // InternalSCTX.g:832:1: (lv_preemption_1_1= rulePreemptionType | lv_preemption_1_2= rulePreemptionTypeLegacy )
            {
            // InternalSCTX.g:832:1: (lv_preemption_1_1= rulePreemptionType | lv_preemption_1_2= rulePreemptionTypeLegacy )
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( ((LA28_0>=73 && LA28_0<=75)) ) {
                alt28=1;
            }
            else if ( ((LA28_0>=76 && LA28_0<=78)) ) {
                alt28=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 28, 0, input);

                throw nvae;
            }
            switch (alt28) {
                case 1 :
                    // InternalSCTX.g:833:3: lv_preemption_1_1= rulePreemptionType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTransitionAccess().getPreemptionPreemptionTypeEnumRuleCall_1_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_6);
                    lv_preemption_1_1=rulePreemptionType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTransitionRule());
                      	        }
                             		set(
                             			current, 
                             			"preemption",
                              		lv_preemption_1_1, 
                              		"de.cau.cs.kieler.sccharts.text.SCTX.PreemptionType");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:848:8: lv_preemption_1_2= rulePreemptionTypeLegacy
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTransitionAccess().getPreemptionPreemptionTypeLegacyEnumRuleCall_1_0_1()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_6);
                    lv_preemption_1_2=rulePreemptionTypeLegacy();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTransitionRule());
                      	        }
                             		set(
                             			current, 
                             			"preemption",
                              		lv_preemption_1_2, 
                              		"de.cau.cs.kieler.sccharts.text.SCTX.PreemptionTypeLegacy");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }
                    break;

            }


            }


            }

            // InternalSCTX.g:866:2: ( (otherlv_2= RULE_ID ) )
            // InternalSCTX.g:867:1: (otherlv_2= RULE_ID )
            {
            // InternalSCTX.g:867:1: (otherlv_2= RULE_ID )
            // InternalSCTX.g:868:3: otherlv_2= RULE_ID
            {
            if ( state.backtracking==0 ) {
               
              		  /* */ 
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getTransitionRule());
              	        }
                      
            }
            otherlv_2=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		newLeafNode(otherlv_2, grammarAccess.getTransitionAccess().getTargetStateStateCrossReference_2_0()); 
              	
            }

            }


            }

            // InternalSCTX.g:882:2: ( (lv_delay_3_0= ruleDelayType ) )?
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( ((LA29_0>=79 && LA29_0<=82)) ) {
                alt29=1;
            }
            switch (alt29) {
                case 1 :
                    // InternalSCTX.g:883:1: (lv_delay_3_0= ruleDelayType )
                    {
                    // InternalSCTX.g:883:1: (lv_delay_3_0= ruleDelayType )
                    // InternalSCTX.g:884:3: lv_delay_3_0= ruleDelayType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTransitionAccess().getDelayDelayTypeEnumRuleCall_3_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_31);
                    lv_delay_3_0=ruleDelayType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTransitionRule());
                      	        }
                             		set(
                             			current, 
                             			"delay",
                              		lv_delay_3_0, 
                              		"de.cau.cs.kieler.sccharts.text.SCTX.DelayType");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:900:3: ( (lv_deferred_4_0= 'deferred' ) )?
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==33) ) {
                alt30=1;
            }
            switch (alt30) {
                case 1 :
                    // InternalSCTX.g:901:1: (lv_deferred_4_0= 'deferred' )
                    {
                    // InternalSCTX.g:901:1: (lv_deferred_4_0= 'deferred' )
                    // InternalSCTX.g:902:3: lv_deferred_4_0= 'deferred'
                    {
                    lv_deferred_4_0=(Token)match(input,33,FollowSets000.FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_deferred_4_0, grammarAccess.getTransitionAccess().getDeferredDeferredKeyword_4_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getTransitionRule());
                      	        }
                             		setWithLastConsumed(current, "deferred", true, "deferred");
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:915:3: ( (lv_history_5_0= ruleHistoryType ) )?
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( ((LA31_0>=83 && LA31_0<=85)) ) {
                alt31=1;
            }
            switch (alt31) {
                case 1 :
                    // InternalSCTX.g:916:1: (lv_history_5_0= ruleHistoryType )
                    {
                    // InternalSCTX.g:916:1: (lv_history_5_0= ruleHistoryType )
                    // InternalSCTX.g:917:3: lv_history_5_0= ruleHistoryType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTransitionAccess().getHistoryHistoryTypeEnumRuleCall_5_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_33);
                    lv_history_5_0=ruleHistoryType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTransitionRule());
                      	        }
                             		set(
                             			current, 
                             			"history",
                              		lv_history_5_0, 
                              		"de.cau.cs.kieler.sccharts.text.SCTX.HistoryType");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:933:3: ( ( (otherlv_6= 'if' ( (lv_triggerDelay_7_0= RULE_INT ) )? ( (lv_trigger_8_0= ruleBoolExpression ) ) )? (otherlv_9= 'do' ( (lv_effects_10_0= ruleEffect ) ) (otherlv_11= ';' ( (lv_effects_12_0= ruleEffect ) ) )* )? ) | (otherlv_13= 'if' ( (lv_label_14_0= RULE_STRING ) ) ) )?
            int alt36=3;
            alt36 = dfa36.predict(input);
            switch (alt36) {
                case 1 :
                    // InternalSCTX.g:933:4: ( (otherlv_6= 'if' ( (lv_triggerDelay_7_0= RULE_INT ) )? ( (lv_trigger_8_0= ruleBoolExpression ) ) )? (otherlv_9= 'do' ( (lv_effects_10_0= ruleEffect ) ) (otherlv_11= ';' ( (lv_effects_12_0= ruleEffect ) ) )* )? )
                    {
                    // InternalSCTX.g:933:4: ( (otherlv_6= 'if' ( (lv_triggerDelay_7_0= RULE_INT ) )? ( (lv_trigger_8_0= ruleBoolExpression ) ) )? (otherlv_9= 'do' ( (lv_effects_10_0= ruleEffect ) ) (otherlv_11= ';' ( (lv_effects_12_0= ruleEffect ) ) )* )? )
                    // InternalSCTX.g:933:5: (otherlv_6= 'if' ( (lv_triggerDelay_7_0= RULE_INT ) )? ( (lv_trigger_8_0= ruleBoolExpression ) ) )? (otherlv_9= 'do' ( (lv_effects_10_0= ruleEffect ) ) (otherlv_11= ';' ( (lv_effects_12_0= ruleEffect ) ) )* )?
                    {
                    // InternalSCTX.g:933:5: (otherlv_6= 'if' ( (lv_triggerDelay_7_0= RULE_INT ) )? ( (lv_trigger_8_0= ruleBoolExpression ) ) )?
                    int alt33=2;
                    int LA33_0 = input.LA(1);

                    if ( (LA33_0==34) ) {
                        alt33=1;
                    }
                    switch (alt33) {
                        case 1 :
                            // InternalSCTX.g:933:7: otherlv_6= 'if' ( (lv_triggerDelay_7_0= RULE_INT ) )? ( (lv_trigger_8_0= ruleBoolExpression ) )
                            {
                            otherlv_6=(Token)match(input,34,FollowSets000.FOLLOW_34); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_6, grammarAccess.getTransitionAccess().getIfKeyword_6_0_0_0());
                                  
                            }
                            // InternalSCTX.g:937:1: ( (lv_triggerDelay_7_0= RULE_INT ) )?
                            int alt32=2;
                            alt32 = dfa32.predict(input);
                            switch (alt32) {
                                case 1 :
                                    // InternalSCTX.g:938:1: (lv_triggerDelay_7_0= RULE_INT )
                                    {
                                    // InternalSCTX.g:938:1: (lv_triggerDelay_7_0= RULE_INT )
                                    // InternalSCTX.g:939:3: lv_triggerDelay_7_0= RULE_INT
                                    {
                                    lv_triggerDelay_7_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_34); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      			newLeafNode(lv_triggerDelay_7_0, grammarAccess.getTransitionAccess().getTriggerDelayINTTerminalRuleCall_6_0_0_1_0()); 
                                      		
                                    }
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElement(grammarAccess.getTransitionRule());
                                      	        }
                                             		setWithLastConsumed(
                                             			current, 
                                             			"triggerDelay",
                                              		lv_triggerDelay_7_0, 
                                              		"de.cau.cs.kieler.annotations.Annotations.INT");
                                      	    
                                    }

                                    }


                                    }
                                    break;

                            }

                            // InternalSCTX.g:955:3: ( (lv_trigger_8_0= ruleBoolExpression ) )
                            // InternalSCTX.g:956:1: (lv_trigger_8_0= ruleBoolExpression )
                            {
                            // InternalSCTX.g:956:1: (lv_trigger_8_0= ruleBoolExpression )
                            // InternalSCTX.g:957:3: lv_trigger_8_0= ruleBoolExpression
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getTransitionAccess().getTriggerBoolExpressionParserRuleCall_6_0_0_2_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_35);
                            lv_trigger_8_0=ruleBoolExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getTransitionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"trigger",
                                      		lv_trigger_8_0, 
                                      		"de.cau.cs.kieler.kexpressions.KExpressions.BoolExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalSCTX.g:973:4: (otherlv_9= 'do' ( (lv_effects_10_0= ruleEffect ) ) (otherlv_11= ';' ( (lv_effects_12_0= ruleEffect ) ) )* )?
                    int alt35=2;
                    int LA35_0 = input.LA(1);

                    if ( (LA35_0==35) ) {
                        alt35=1;
                    }
                    switch (alt35) {
                        case 1 :
                            // InternalSCTX.g:973:6: otherlv_9= 'do' ( (lv_effects_10_0= ruleEffect ) ) (otherlv_11= ';' ( (lv_effects_12_0= ruleEffect ) ) )*
                            {
                            otherlv_9=(Token)match(input,35,FollowSets000.FOLLOW_36); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_9, grammarAccess.getTransitionAccess().getDoKeyword_6_0_1_0());
                                  
                            }
                            // InternalSCTX.g:977:1: ( (lv_effects_10_0= ruleEffect ) )
                            // InternalSCTX.g:978:1: (lv_effects_10_0= ruleEffect )
                            {
                            // InternalSCTX.g:978:1: (lv_effects_10_0= ruleEffect )
                            // InternalSCTX.g:979:3: lv_effects_10_0= ruleEffect
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getTransitionAccess().getEffectsEffectParserRuleCall_6_0_1_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_37);
                            lv_effects_10_0=ruleEffect();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getTransitionRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"effects",
                                      		lv_effects_10_0, 
                                      		"de.cau.cs.kieler.kexpressions.keffects.KEffects.Effect");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalSCTX.g:995:2: (otherlv_11= ';' ( (lv_effects_12_0= ruleEffect ) ) )*
                            loop34:
                            do {
                                int alt34=2;
                                int LA34_0 = input.LA(1);

                                if ( (LA34_0==36) ) {
                                    alt34=1;
                                }


                                switch (alt34) {
                            	case 1 :
                            	    // InternalSCTX.g:995:4: otherlv_11= ';' ( (lv_effects_12_0= ruleEffect ) )
                            	    {
                            	    otherlv_11=(Token)match(input,36,FollowSets000.FOLLOW_36); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_11, grammarAccess.getTransitionAccess().getSemicolonKeyword_6_0_1_2_0());
                            	          
                            	    }
                            	    // InternalSCTX.g:999:1: ( (lv_effects_12_0= ruleEffect ) )
                            	    // InternalSCTX.g:1000:1: (lv_effects_12_0= ruleEffect )
                            	    {
                            	    // InternalSCTX.g:1000:1: (lv_effects_12_0= ruleEffect )
                            	    // InternalSCTX.g:1001:3: lv_effects_12_0= ruleEffect
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getTransitionAccess().getEffectsEffectParserRuleCall_6_0_1_2_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_37);
                            	    lv_effects_12_0=ruleEffect();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getTransitionRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"effects",
                            	              		lv_effects_12_0, 
                            	              		"de.cau.cs.kieler.kexpressions.keffects.KEffects.Effect");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop34;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:1018:6: (otherlv_13= 'if' ( (lv_label_14_0= RULE_STRING ) ) )
                    {
                    // InternalSCTX.g:1018:6: (otherlv_13= 'if' ( (lv_label_14_0= RULE_STRING ) ) )
                    // InternalSCTX.g:1018:8: otherlv_13= 'if' ( (lv_label_14_0= RULE_STRING ) )
                    {
                    otherlv_13=(Token)match(input,34,FollowSets000.FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_13, grammarAccess.getTransitionAccess().getIfKeyword_6_1_0());
                          
                    }
                    // InternalSCTX.g:1022:1: ( (lv_label_14_0= RULE_STRING ) )
                    // InternalSCTX.g:1023:1: (lv_label_14_0= RULE_STRING )
                    {
                    // InternalSCTX.g:1023:1: (lv_label_14_0= RULE_STRING )
                    // InternalSCTX.g:1024:3: lv_label_14_0= RULE_STRING
                    {
                    lv_label_14_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_label_14_0, grammarAccess.getTransitionAccess().getLabelSTRINGTerminalRuleCall_6_1_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getTransitionRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"label",
                              		lv_label_14_0, 
                              		"de.cau.cs.kieler.annotations.Annotations.STRING");
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTransition"


    // $ANTLR start "entryRuleLocalAction"
    // InternalSCTX.g:1048:1: entryRuleLocalAction returns [EObject current=null] : iv_ruleLocalAction= ruleLocalAction EOF ;
    public final EObject entryRuleLocalAction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLocalAction = null;


        try {
            // InternalSCTX.g:1049:2: (iv_ruleLocalAction= ruleLocalAction EOF )
            // InternalSCTX.g:1050:2: iv_ruleLocalAction= ruleLocalAction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLocalActionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLocalAction=ruleLocalAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLocalAction; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLocalAction"


    // $ANTLR start "ruleLocalAction"
    // InternalSCTX.g:1057:1: ruleLocalAction returns [EObject current=null] : (this_EntryAction_0= ruleEntryAction | this_DuringAction_1= ruleDuringAction | this_ExitAction_2= ruleExitAction | this_SuspendAction_3= ruleSuspendAction | this_PrecedingAction_4= rulePrecedingAction | this_SucceedingAction_5= ruleSucceedingAction ) ;
    public final EObject ruleLocalAction() throws RecognitionException {
        EObject current = null;

        EObject this_EntryAction_0 = null;

        EObject this_DuringAction_1 = null;

        EObject this_ExitAction_2 = null;

        EObject this_SuspendAction_3 = null;

        EObject this_PrecedingAction_4 = null;

        EObject this_SucceedingAction_5 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:1060:28: ( (this_EntryAction_0= ruleEntryAction | this_DuringAction_1= ruleDuringAction | this_ExitAction_2= ruleExitAction | this_SuspendAction_3= ruleSuspendAction | this_PrecedingAction_4= rulePrecedingAction | this_SucceedingAction_5= ruleSucceedingAction ) )
            // InternalSCTX.g:1061:1: (this_EntryAction_0= ruleEntryAction | this_DuringAction_1= ruleDuringAction | this_ExitAction_2= ruleExitAction | this_SuspendAction_3= ruleSuspendAction | this_PrecedingAction_4= rulePrecedingAction | this_SucceedingAction_5= ruleSucceedingAction )
            {
            // InternalSCTX.g:1061:1: (this_EntryAction_0= ruleEntryAction | this_DuringAction_1= ruleDuringAction | this_ExitAction_2= ruleExitAction | this_SuspendAction_3= ruleSuspendAction | this_PrecedingAction_4= rulePrecedingAction | this_SucceedingAction_5= ruleSucceedingAction )
            int alt37=6;
            alt37 = dfa37.predict(input);
            switch (alt37) {
                case 1 :
                    // InternalSCTX.g:1062:2: this_EntryAction_0= ruleEntryAction
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getLocalActionAccess().getEntryActionParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_EntryAction_0=ruleEntryAction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_EntryAction_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:1075:2: this_DuringAction_1= ruleDuringAction
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getLocalActionAccess().getDuringActionParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_DuringAction_1=ruleDuringAction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_DuringAction_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:1088:2: this_ExitAction_2= ruleExitAction
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getLocalActionAccess().getExitActionParserRuleCall_2()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ExitAction_2=ruleExitAction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ExitAction_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalSCTX.g:1101:2: this_SuspendAction_3= ruleSuspendAction
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getLocalActionAccess().getSuspendActionParserRuleCall_3()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_SuspendAction_3=ruleSuspendAction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_SuspendAction_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    // InternalSCTX.g:1114:2: this_PrecedingAction_4= rulePrecedingAction
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getLocalActionAccess().getPrecedingActionParserRuleCall_4()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PrecedingAction_4=rulePrecedingAction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_PrecedingAction_4; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    // InternalSCTX.g:1127:2: this_SucceedingAction_5= ruleSucceedingAction
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getLocalActionAccess().getSucceedingActionParserRuleCall_5()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_SucceedingAction_5=ruleSucceedingAction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_SucceedingAction_5; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLocalAction"


    // $ANTLR start "entryRuleEntryAction"
    // InternalSCTX.g:1146:1: entryRuleEntryAction returns [EObject current=null] : iv_ruleEntryAction= ruleEntryAction EOF ;
    public final EObject entryRuleEntryAction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEntryAction = null;


        try {
            // InternalSCTX.g:1147:2: (iv_ruleEntryAction= ruleEntryAction EOF )
            // InternalSCTX.g:1148:2: iv_ruleEntryAction= ruleEntryAction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEntryActionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEntryAction=ruleEntryAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEntryAction; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEntryAction"


    // $ANTLR start "ruleEntryAction"
    // InternalSCTX.g:1155:1: ruleEntryAction returns [EObject current=null] : ( () otherlv_1= 'entry' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )? (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )? ) ;
    public final EObject ruleEntryAction() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_trigger_3_0 = null;

        EObject lv_effects_5_0 = null;

        EObject lv_effects_7_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:1158:28: ( ( () otherlv_1= 'entry' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )? (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )? ) )
            // InternalSCTX.g:1159:1: ( () otherlv_1= 'entry' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )? (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )? )
            {
            // InternalSCTX.g:1159:1: ( () otherlv_1= 'entry' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )? (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )? )
            // InternalSCTX.g:1159:2: () otherlv_1= 'entry' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )? (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )?
            {
            // InternalSCTX.g:1159:2: ()
            // InternalSCTX.g:1160:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getEntryActionAccess().getEntryActionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,37,FollowSets000.FOLLOW_33); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getEntryActionAccess().getEntryKeyword_1());
                  
            }
            // InternalSCTX.g:1172:1: (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )?
            int alt38=2;
            int LA38_0 = input.LA(1);

            if ( (LA38_0==34) ) {
                alt38=1;
            }
            switch (alt38) {
                case 1 :
                    // InternalSCTX.g:1172:3: otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) )
                    {
                    otherlv_2=(Token)match(input,34,FollowSets000.FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getEntryActionAccess().getIfKeyword_2_0());
                          
                    }
                    // InternalSCTX.g:1176:1: ( (lv_trigger_3_0= ruleBoolExpression ) )
                    // InternalSCTX.g:1177:1: (lv_trigger_3_0= ruleBoolExpression )
                    {
                    // InternalSCTX.g:1177:1: (lv_trigger_3_0= ruleBoolExpression )
                    // InternalSCTX.g:1178:3: lv_trigger_3_0= ruleBoolExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getEntryActionAccess().getTriggerBoolExpressionParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_35);
                    lv_trigger_3_0=ruleBoolExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getEntryActionRule());
                      	        }
                             		set(
                             			current, 
                             			"trigger",
                              		lv_trigger_3_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.BoolExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:1194:4: (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )?
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==35) ) {
                alt40=1;
            }
            switch (alt40) {
                case 1 :
                    // InternalSCTX.g:1194:6: otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )*
                    {
                    otherlv_4=(Token)match(input,35,FollowSets000.FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getEntryActionAccess().getDoKeyword_3_0());
                          
                    }
                    // InternalSCTX.g:1198:1: ( (lv_effects_5_0= ruleEffect ) )
                    // InternalSCTX.g:1199:1: (lv_effects_5_0= ruleEffect )
                    {
                    // InternalSCTX.g:1199:1: (lv_effects_5_0= ruleEffect )
                    // InternalSCTX.g:1200:3: lv_effects_5_0= ruleEffect
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getEntryActionAccess().getEffectsEffectParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_37);
                    lv_effects_5_0=ruleEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getEntryActionRule());
                      	        }
                             		add(
                             			current, 
                             			"effects",
                              		lv_effects_5_0, 
                              		"de.cau.cs.kieler.kexpressions.keffects.KEffects.Effect");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:1216:2: (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )*
                    loop39:
                    do {
                        int alt39=2;
                        int LA39_0 = input.LA(1);

                        if ( (LA39_0==36) ) {
                            alt39=1;
                        }


                        switch (alt39) {
                    	case 1 :
                    	    // InternalSCTX.g:1216:4: otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) )
                    	    {
                    	    otherlv_6=(Token)match(input,36,FollowSets000.FOLLOW_36); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_6, grammarAccess.getEntryActionAccess().getSemicolonKeyword_3_2_0());
                    	          
                    	    }
                    	    // InternalSCTX.g:1220:1: ( (lv_effects_7_0= ruleEffect ) )
                    	    // InternalSCTX.g:1221:1: (lv_effects_7_0= ruleEffect )
                    	    {
                    	    // InternalSCTX.g:1221:1: (lv_effects_7_0= ruleEffect )
                    	    // InternalSCTX.g:1222:3: lv_effects_7_0= ruleEffect
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getEntryActionAccess().getEffectsEffectParserRuleCall_3_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_37);
                    	    lv_effects_7_0=ruleEffect();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getEntryActionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"effects",
                    	              		lv_effects_7_0, 
                    	              		"de.cau.cs.kieler.kexpressions.keffects.KEffects.Effect");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop39;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEntryAction"


    // $ANTLR start "entryRuleDuringAction"
    // InternalSCTX.g:1246:1: entryRuleDuringAction returns [EObject current=null] : iv_ruleDuringAction= ruleDuringAction EOF ;
    public final EObject entryRuleDuringAction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDuringAction = null;


        try {
            // InternalSCTX.g:1247:2: (iv_ruleDuringAction= ruleDuringAction EOF )
            // InternalSCTX.g:1248:2: iv_ruleDuringAction= ruleDuringAction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDuringActionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDuringAction=ruleDuringAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDuringAction; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDuringAction"


    // $ANTLR start "ruleDuringAction"
    // InternalSCTX.g:1255:1: ruleDuringAction returns [EObject current=null] : ( () ( (lv_delay_1_0= ruleDelayType ) )? otherlv_2= 'during' (otherlv_3= 'if' ( (lv_trigger_4_0= ruleBoolExpression ) ) )? (otherlv_5= 'do' ( (lv_effects_6_0= ruleEffect ) ) (otherlv_7= ';' ( (lv_effects_8_0= ruleEffect ) ) )* )? ) ;
    public final EObject ruleDuringAction() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Enumerator lv_delay_1_0 = null;

        EObject lv_trigger_4_0 = null;

        EObject lv_effects_6_0 = null;

        EObject lv_effects_8_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:1258:28: ( ( () ( (lv_delay_1_0= ruleDelayType ) )? otherlv_2= 'during' (otherlv_3= 'if' ( (lv_trigger_4_0= ruleBoolExpression ) ) )? (otherlv_5= 'do' ( (lv_effects_6_0= ruleEffect ) ) (otherlv_7= ';' ( (lv_effects_8_0= ruleEffect ) ) )* )? ) )
            // InternalSCTX.g:1259:1: ( () ( (lv_delay_1_0= ruleDelayType ) )? otherlv_2= 'during' (otherlv_3= 'if' ( (lv_trigger_4_0= ruleBoolExpression ) ) )? (otherlv_5= 'do' ( (lv_effects_6_0= ruleEffect ) ) (otherlv_7= ';' ( (lv_effects_8_0= ruleEffect ) ) )* )? )
            {
            // InternalSCTX.g:1259:1: ( () ( (lv_delay_1_0= ruleDelayType ) )? otherlv_2= 'during' (otherlv_3= 'if' ( (lv_trigger_4_0= ruleBoolExpression ) ) )? (otherlv_5= 'do' ( (lv_effects_6_0= ruleEffect ) ) (otherlv_7= ';' ( (lv_effects_8_0= ruleEffect ) ) )* )? )
            // InternalSCTX.g:1259:2: () ( (lv_delay_1_0= ruleDelayType ) )? otherlv_2= 'during' (otherlv_3= 'if' ( (lv_trigger_4_0= ruleBoolExpression ) ) )? (otherlv_5= 'do' ( (lv_effects_6_0= ruleEffect ) ) (otherlv_7= ';' ( (lv_effects_8_0= ruleEffect ) ) )* )?
            {
            // InternalSCTX.g:1259:2: ()
            // InternalSCTX.g:1260:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getDuringActionAccess().getDuringActionAction_0(),
                          current);
                  
            }

            }

            // InternalSCTX.g:1268:2: ( (lv_delay_1_0= ruleDelayType ) )?
            int alt41=2;
            int LA41_0 = input.LA(1);

            if ( ((LA41_0>=79 && LA41_0<=82)) ) {
                alt41=1;
            }
            switch (alt41) {
                case 1 :
                    // InternalSCTX.g:1269:1: (lv_delay_1_0= ruleDelayType )
                    {
                    // InternalSCTX.g:1269:1: (lv_delay_1_0= ruleDelayType )
                    // InternalSCTX.g:1270:3: lv_delay_1_0= ruleDelayType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDuringActionAccess().getDelayDelayTypeEnumRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_39);
                    lv_delay_1_0=ruleDelayType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDuringActionRule());
                      	        }
                             		set(
                             			current, 
                             			"delay",
                              		lv_delay_1_0, 
                              		"de.cau.cs.kieler.sccharts.text.SCTX.DelayType");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,38,FollowSets000.FOLLOW_33); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getDuringActionAccess().getDuringKeyword_2());
                  
            }
            // InternalSCTX.g:1290:1: (otherlv_3= 'if' ( (lv_trigger_4_0= ruleBoolExpression ) ) )?
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( (LA42_0==34) ) {
                alt42=1;
            }
            switch (alt42) {
                case 1 :
                    // InternalSCTX.g:1290:3: otherlv_3= 'if' ( (lv_trigger_4_0= ruleBoolExpression ) )
                    {
                    otherlv_3=(Token)match(input,34,FollowSets000.FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getDuringActionAccess().getIfKeyword_3_0());
                          
                    }
                    // InternalSCTX.g:1294:1: ( (lv_trigger_4_0= ruleBoolExpression ) )
                    // InternalSCTX.g:1295:1: (lv_trigger_4_0= ruleBoolExpression )
                    {
                    // InternalSCTX.g:1295:1: (lv_trigger_4_0= ruleBoolExpression )
                    // InternalSCTX.g:1296:3: lv_trigger_4_0= ruleBoolExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDuringActionAccess().getTriggerBoolExpressionParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_35);
                    lv_trigger_4_0=ruleBoolExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDuringActionRule());
                      	        }
                             		set(
                             			current, 
                             			"trigger",
                              		lv_trigger_4_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.BoolExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:1312:4: (otherlv_5= 'do' ( (lv_effects_6_0= ruleEffect ) ) (otherlv_7= ';' ( (lv_effects_8_0= ruleEffect ) ) )* )?
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==35) ) {
                alt44=1;
            }
            switch (alt44) {
                case 1 :
                    // InternalSCTX.g:1312:6: otherlv_5= 'do' ( (lv_effects_6_0= ruleEffect ) ) (otherlv_7= ';' ( (lv_effects_8_0= ruleEffect ) ) )*
                    {
                    otherlv_5=(Token)match(input,35,FollowSets000.FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getDuringActionAccess().getDoKeyword_4_0());
                          
                    }
                    // InternalSCTX.g:1316:1: ( (lv_effects_6_0= ruleEffect ) )
                    // InternalSCTX.g:1317:1: (lv_effects_6_0= ruleEffect )
                    {
                    // InternalSCTX.g:1317:1: (lv_effects_6_0= ruleEffect )
                    // InternalSCTX.g:1318:3: lv_effects_6_0= ruleEffect
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDuringActionAccess().getEffectsEffectParserRuleCall_4_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_37);
                    lv_effects_6_0=ruleEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDuringActionRule());
                      	        }
                             		add(
                             			current, 
                             			"effects",
                              		lv_effects_6_0, 
                              		"de.cau.cs.kieler.kexpressions.keffects.KEffects.Effect");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:1334:2: (otherlv_7= ';' ( (lv_effects_8_0= ruleEffect ) ) )*
                    loop43:
                    do {
                        int alt43=2;
                        int LA43_0 = input.LA(1);

                        if ( (LA43_0==36) ) {
                            alt43=1;
                        }


                        switch (alt43) {
                    	case 1 :
                    	    // InternalSCTX.g:1334:4: otherlv_7= ';' ( (lv_effects_8_0= ruleEffect ) )
                    	    {
                    	    otherlv_7=(Token)match(input,36,FollowSets000.FOLLOW_36); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_7, grammarAccess.getDuringActionAccess().getSemicolonKeyword_4_2_0());
                    	          
                    	    }
                    	    // InternalSCTX.g:1338:1: ( (lv_effects_8_0= ruleEffect ) )
                    	    // InternalSCTX.g:1339:1: (lv_effects_8_0= ruleEffect )
                    	    {
                    	    // InternalSCTX.g:1339:1: (lv_effects_8_0= ruleEffect )
                    	    // InternalSCTX.g:1340:3: lv_effects_8_0= ruleEffect
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getDuringActionAccess().getEffectsEffectParserRuleCall_4_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_37);
                    	    lv_effects_8_0=ruleEffect();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getDuringActionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"effects",
                    	              		lv_effects_8_0, 
                    	              		"de.cau.cs.kieler.kexpressions.keffects.KEffects.Effect");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop43;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDuringAction"


    // $ANTLR start "entryRuleExitAction"
    // InternalSCTX.g:1364:1: entryRuleExitAction returns [EObject current=null] : iv_ruleExitAction= ruleExitAction EOF ;
    public final EObject entryRuleExitAction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExitAction = null;


        try {
            // InternalSCTX.g:1365:2: (iv_ruleExitAction= ruleExitAction EOF )
            // InternalSCTX.g:1366:2: iv_ruleExitAction= ruleExitAction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExitActionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleExitAction=ruleExitAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExitAction; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExitAction"


    // $ANTLR start "ruleExitAction"
    // InternalSCTX.g:1373:1: ruleExitAction returns [EObject current=null] : ( () otherlv_1= 'exit' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )? (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )? ) ;
    public final EObject ruleExitAction() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_trigger_3_0 = null;

        EObject lv_effects_5_0 = null;

        EObject lv_effects_7_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:1376:28: ( ( () otherlv_1= 'exit' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )? (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )? ) )
            // InternalSCTX.g:1377:1: ( () otherlv_1= 'exit' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )? (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )? )
            {
            // InternalSCTX.g:1377:1: ( () otherlv_1= 'exit' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )? (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )? )
            // InternalSCTX.g:1377:2: () otherlv_1= 'exit' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )? (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )?
            {
            // InternalSCTX.g:1377:2: ()
            // InternalSCTX.g:1378:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getExitActionAccess().getExitActionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,39,FollowSets000.FOLLOW_33); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getExitActionAccess().getExitKeyword_1());
                  
            }
            // InternalSCTX.g:1390:1: (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )?
            int alt45=2;
            int LA45_0 = input.LA(1);

            if ( (LA45_0==34) ) {
                alt45=1;
            }
            switch (alt45) {
                case 1 :
                    // InternalSCTX.g:1390:3: otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) )
                    {
                    otherlv_2=(Token)match(input,34,FollowSets000.FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getExitActionAccess().getIfKeyword_2_0());
                          
                    }
                    // InternalSCTX.g:1394:1: ( (lv_trigger_3_0= ruleBoolExpression ) )
                    // InternalSCTX.g:1395:1: (lv_trigger_3_0= ruleBoolExpression )
                    {
                    // InternalSCTX.g:1395:1: (lv_trigger_3_0= ruleBoolExpression )
                    // InternalSCTX.g:1396:3: lv_trigger_3_0= ruleBoolExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getExitActionAccess().getTriggerBoolExpressionParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_35);
                    lv_trigger_3_0=ruleBoolExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getExitActionRule());
                      	        }
                             		set(
                             			current, 
                             			"trigger",
                              		lv_trigger_3_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.BoolExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:1412:4: (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )?
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==35) ) {
                alt47=1;
            }
            switch (alt47) {
                case 1 :
                    // InternalSCTX.g:1412:6: otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )*
                    {
                    otherlv_4=(Token)match(input,35,FollowSets000.FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getExitActionAccess().getDoKeyword_3_0());
                          
                    }
                    // InternalSCTX.g:1416:1: ( (lv_effects_5_0= ruleEffect ) )
                    // InternalSCTX.g:1417:1: (lv_effects_5_0= ruleEffect )
                    {
                    // InternalSCTX.g:1417:1: (lv_effects_5_0= ruleEffect )
                    // InternalSCTX.g:1418:3: lv_effects_5_0= ruleEffect
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getExitActionAccess().getEffectsEffectParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_37);
                    lv_effects_5_0=ruleEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getExitActionRule());
                      	        }
                             		add(
                             			current, 
                             			"effects",
                              		lv_effects_5_0, 
                              		"de.cau.cs.kieler.kexpressions.keffects.KEffects.Effect");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:1434:2: (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )*
                    loop46:
                    do {
                        int alt46=2;
                        int LA46_0 = input.LA(1);

                        if ( (LA46_0==36) ) {
                            alt46=1;
                        }


                        switch (alt46) {
                    	case 1 :
                    	    // InternalSCTX.g:1434:4: otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) )
                    	    {
                    	    otherlv_6=(Token)match(input,36,FollowSets000.FOLLOW_36); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_6, grammarAccess.getExitActionAccess().getSemicolonKeyword_3_2_0());
                    	          
                    	    }
                    	    // InternalSCTX.g:1438:1: ( (lv_effects_7_0= ruleEffect ) )
                    	    // InternalSCTX.g:1439:1: (lv_effects_7_0= ruleEffect )
                    	    {
                    	    // InternalSCTX.g:1439:1: (lv_effects_7_0= ruleEffect )
                    	    // InternalSCTX.g:1440:3: lv_effects_7_0= ruleEffect
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getExitActionAccess().getEffectsEffectParserRuleCall_3_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_37);
                    	    lv_effects_7_0=ruleEffect();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getExitActionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"effects",
                    	              		lv_effects_7_0, 
                    	              		"de.cau.cs.kieler.kexpressions.keffects.KEffects.Effect");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop46;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExitAction"


    // $ANTLR start "entryRuleSuspendAction"
    // InternalSCTX.g:1464:1: entryRuleSuspendAction returns [EObject current=null] : iv_ruleSuspendAction= ruleSuspendAction EOF ;
    public final EObject entryRuleSuspendAction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSuspendAction = null;


        try {
            // InternalSCTX.g:1465:2: (iv_ruleSuspendAction= ruleSuspendAction EOF )
            // InternalSCTX.g:1466:2: iv_ruleSuspendAction= ruleSuspendAction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSuspendActionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSuspendAction=ruleSuspendAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSuspendAction; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSuspendAction"


    // $ANTLR start "ruleSuspendAction"
    // InternalSCTX.g:1473:1: ruleSuspendAction returns [EObject current=null] : ( () ( (lv_delay_1_0= ruleDelayType ) )? ( (lv_weak_2_0= 'weak' ) )? otherlv_3= 'suspend' (otherlv_4= 'if' ( (lv_trigger_5_0= ruleBoolExpression ) ) )? ) ;
    public final EObject ruleSuspendAction() throws RecognitionException {
        EObject current = null;

        Token lv_weak_2_0=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Enumerator lv_delay_1_0 = null;

        EObject lv_trigger_5_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:1476:28: ( ( () ( (lv_delay_1_0= ruleDelayType ) )? ( (lv_weak_2_0= 'weak' ) )? otherlv_3= 'suspend' (otherlv_4= 'if' ( (lv_trigger_5_0= ruleBoolExpression ) ) )? ) )
            // InternalSCTX.g:1477:1: ( () ( (lv_delay_1_0= ruleDelayType ) )? ( (lv_weak_2_0= 'weak' ) )? otherlv_3= 'suspend' (otherlv_4= 'if' ( (lv_trigger_5_0= ruleBoolExpression ) ) )? )
            {
            // InternalSCTX.g:1477:1: ( () ( (lv_delay_1_0= ruleDelayType ) )? ( (lv_weak_2_0= 'weak' ) )? otherlv_3= 'suspend' (otherlv_4= 'if' ( (lv_trigger_5_0= ruleBoolExpression ) ) )? )
            // InternalSCTX.g:1477:2: () ( (lv_delay_1_0= ruleDelayType ) )? ( (lv_weak_2_0= 'weak' ) )? otherlv_3= 'suspend' (otherlv_4= 'if' ( (lv_trigger_5_0= ruleBoolExpression ) ) )?
            {
            // InternalSCTX.g:1477:2: ()
            // InternalSCTX.g:1478:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getSuspendActionAccess().getSuspendActionAction_0(),
                          current);
                  
            }

            }

            // InternalSCTX.g:1486:2: ( (lv_delay_1_0= ruleDelayType ) )?
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( ((LA48_0>=79 && LA48_0<=82)) ) {
                alt48=1;
            }
            switch (alt48) {
                case 1 :
                    // InternalSCTX.g:1487:1: (lv_delay_1_0= ruleDelayType )
                    {
                    // InternalSCTX.g:1487:1: (lv_delay_1_0= ruleDelayType )
                    // InternalSCTX.g:1488:3: lv_delay_1_0= ruleDelayType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getSuspendActionAccess().getDelayDelayTypeEnumRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_40);
                    lv_delay_1_0=ruleDelayType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSuspendActionRule());
                      	        }
                             		set(
                             			current, 
                             			"delay",
                              		lv_delay_1_0, 
                              		"de.cau.cs.kieler.sccharts.text.SCTX.DelayType");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:1504:3: ( (lv_weak_2_0= 'weak' ) )?
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( (LA49_0==40) ) {
                alt49=1;
            }
            switch (alt49) {
                case 1 :
                    // InternalSCTX.g:1505:1: (lv_weak_2_0= 'weak' )
                    {
                    // InternalSCTX.g:1505:1: (lv_weak_2_0= 'weak' )
                    // InternalSCTX.g:1506:3: lv_weak_2_0= 'weak'
                    {
                    lv_weak_2_0=(Token)match(input,40,FollowSets000.FOLLOW_41); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_weak_2_0, grammarAccess.getSuspendActionAccess().getWeakWeakKeyword_2_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getSuspendActionRule());
                      	        }
                             		setWithLastConsumed(current, "weak", true, "weak");
                      	    
                    }

                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,41,FollowSets000.FOLLOW_42); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getSuspendActionAccess().getSuspendKeyword_3());
                  
            }
            // InternalSCTX.g:1523:1: (otherlv_4= 'if' ( (lv_trigger_5_0= ruleBoolExpression ) ) )?
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( (LA50_0==34) ) {
                alt50=1;
            }
            switch (alt50) {
                case 1 :
                    // InternalSCTX.g:1523:3: otherlv_4= 'if' ( (lv_trigger_5_0= ruleBoolExpression ) )
                    {
                    otherlv_4=(Token)match(input,34,FollowSets000.FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getSuspendActionAccess().getIfKeyword_4_0());
                          
                    }
                    // InternalSCTX.g:1527:1: ( (lv_trigger_5_0= ruleBoolExpression ) )
                    // InternalSCTX.g:1528:1: (lv_trigger_5_0= ruleBoolExpression )
                    {
                    // InternalSCTX.g:1528:1: (lv_trigger_5_0= ruleBoolExpression )
                    // InternalSCTX.g:1529:3: lv_trigger_5_0= ruleBoolExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getSuspendActionAccess().getTriggerBoolExpressionParserRuleCall_4_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_trigger_5_0=ruleBoolExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSuspendActionRule());
                      	        }
                             		set(
                             			current, 
                             			"trigger",
                              		lv_trigger_5_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.BoolExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSuspendAction"


    // $ANTLR start "entryRulePrecedingAction"
    // InternalSCTX.g:1553:1: entryRulePrecedingAction returns [EObject current=null] : iv_rulePrecedingAction= rulePrecedingAction EOF ;
    public final EObject entryRulePrecedingAction() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrecedingAction = null;


        try {
            // InternalSCTX.g:1554:2: (iv_rulePrecedingAction= rulePrecedingAction EOF )
            // InternalSCTX.g:1555:2: iv_rulePrecedingAction= rulePrecedingAction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrecedingActionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePrecedingAction=rulePrecedingAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrecedingAction; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrecedingAction"


    // $ANTLR start "rulePrecedingAction"
    // InternalSCTX.g:1562:1: rulePrecedingAction returns [EObject current=null] : ( () otherlv_1= 'preceding' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )? (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )? ) ;
    public final EObject rulePrecedingAction() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_trigger_3_0 = null;

        EObject lv_effects_5_0 = null;

        EObject lv_effects_7_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:1565:28: ( ( () otherlv_1= 'preceding' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )? (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )? ) )
            // InternalSCTX.g:1566:1: ( () otherlv_1= 'preceding' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )? (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )? )
            {
            // InternalSCTX.g:1566:1: ( () otherlv_1= 'preceding' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )? (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )? )
            // InternalSCTX.g:1566:2: () otherlv_1= 'preceding' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )? (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )?
            {
            // InternalSCTX.g:1566:2: ()
            // InternalSCTX.g:1567:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getPrecedingActionAccess().getPrecedingActionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,42,FollowSets000.FOLLOW_33); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getPrecedingActionAccess().getPrecedingKeyword_1());
                  
            }
            // InternalSCTX.g:1579:1: (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )?
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( (LA51_0==34) ) {
                alt51=1;
            }
            switch (alt51) {
                case 1 :
                    // InternalSCTX.g:1579:3: otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) )
                    {
                    otherlv_2=(Token)match(input,34,FollowSets000.FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getPrecedingActionAccess().getIfKeyword_2_0());
                          
                    }
                    // InternalSCTX.g:1583:1: ( (lv_trigger_3_0= ruleBoolExpression ) )
                    // InternalSCTX.g:1584:1: (lv_trigger_3_0= ruleBoolExpression )
                    {
                    // InternalSCTX.g:1584:1: (lv_trigger_3_0= ruleBoolExpression )
                    // InternalSCTX.g:1585:3: lv_trigger_3_0= ruleBoolExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPrecedingActionAccess().getTriggerBoolExpressionParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_35);
                    lv_trigger_3_0=ruleBoolExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPrecedingActionRule());
                      	        }
                             		set(
                             			current, 
                             			"trigger",
                              		lv_trigger_3_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.BoolExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:1601:4: (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )?
            int alt53=2;
            int LA53_0 = input.LA(1);

            if ( (LA53_0==35) ) {
                alt53=1;
            }
            switch (alt53) {
                case 1 :
                    // InternalSCTX.g:1601:6: otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )*
                    {
                    otherlv_4=(Token)match(input,35,FollowSets000.FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getPrecedingActionAccess().getDoKeyword_3_0());
                          
                    }
                    // InternalSCTX.g:1605:1: ( (lv_effects_5_0= ruleEffect ) )
                    // InternalSCTX.g:1606:1: (lv_effects_5_0= ruleEffect )
                    {
                    // InternalSCTX.g:1606:1: (lv_effects_5_0= ruleEffect )
                    // InternalSCTX.g:1607:3: lv_effects_5_0= ruleEffect
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPrecedingActionAccess().getEffectsEffectParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_37);
                    lv_effects_5_0=ruleEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPrecedingActionRule());
                      	        }
                             		add(
                             			current, 
                             			"effects",
                              		lv_effects_5_0, 
                              		"de.cau.cs.kieler.kexpressions.keffects.KEffects.Effect");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:1623:2: (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )*
                    loop52:
                    do {
                        int alt52=2;
                        int LA52_0 = input.LA(1);

                        if ( (LA52_0==36) ) {
                            alt52=1;
                        }


                        switch (alt52) {
                    	case 1 :
                    	    // InternalSCTX.g:1623:4: otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) )
                    	    {
                    	    otherlv_6=(Token)match(input,36,FollowSets000.FOLLOW_36); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_6, grammarAccess.getPrecedingActionAccess().getSemicolonKeyword_3_2_0());
                    	          
                    	    }
                    	    // InternalSCTX.g:1627:1: ( (lv_effects_7_0= ruleEffect ) )
                    	    // InternalSCTX.g:1628:1: (lv_effects_7_0= ruleEffect )
                    	    {
                    	    // InternalSCTX.g:1628:1: (lv_effects_7_0= ruleEffect )
                    	    // InternalSCTX.g:1629:3: lv_effects_7_0= ruleEffect
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getPrecedingActionAccess().getEffectsEffectParserRuleCall_3_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_37);
                    	    lv_effects_7_0=ruleEffect();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getPrecedingActionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"effects",
                    	              		lv_effects_7_0, 
                    	              		"de.cau.cs.kieler.kexpressions.keffects.KEffects.Effect");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop52;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrecedingAction"


    // $ANTLR start "entryRuleSucceedingAction"
    // InternalSCTX.g:1653:1: entryRuleSucceedingAction returns [EObject current=null] : iv_ruleSucceedingAction= ruleSucceedingAction EOF ;
    public final EObject entryRuleSucceedingAction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSucceedingAction = null;


        try {
            // InternalSCTX.g:1654:2: (iv_ruleSucceedingAction= ruleSucceedingAction EOF )
            // InternalSCTX.g:1655:2: iv_ruleSucceedingAction= ruleSucceedingAction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSucceedingActionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSucceedingAction=ruleSucceedingAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSucceedingAction; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSucceedingAction"


    // $ANTLR start "ruleSucceedingAction"
    // InternalSCTX.g:1662:1: ruleSucceedingAction returns [EObject current=null] : ( () otherlv_1= 'succeeding' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )? (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )? ) ;
    public final EObject ruleSucceedingAction() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_trigger_3_0 = null;

        EObject lv_effects_5_0 = null;

        EObject lv_effects_7_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:1665:28: ( ( () otherlv_1= 'succeeding' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )? (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )? ) )
            // InternalSCTX.g:1666:1: ( () otherlv_1= 'succeeding' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )? (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )? )
            {
            // InternalSCTX.g:1666:1: ( () otherlv_1= 'succeeding' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )? (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )? )
            // InternalSCTX.g:1666:2: () otherlv_1= 'succeeding' (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )? (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )?
            {
            // InternalSCTX.g:1666:2: ()
            // InternalSCTX.g:1667:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getSucceedingActionAccess().getSucceedingActionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,43,FollowSets000.FOLLOW_33); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getSucceedingActionAccess().getSucceedingKeyword_1());
                  
            }
            // InternalSCTX.g:1679:1: (otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) ) )?
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==34) ) {
                alt54=1;
            }
            switch (alt54) {
                case 1 :
                    // InternalSCTX.g:1679:3: otherlv_2= 'if' ( (lv_trigger_3_0= ruleBoolExpression ) )
                    {
                    otherlv_2=(Token)match(input,34,FollowSets000.FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getSucceedingActionAccess().getIfKeyword_2_0());
                          
                    }
                    // InternalSCTX.g:1683:1: ( (lv_trigger_3_0= ruleBoolExpression ) )
                    // InternalSCTX.g:1684:1: (lv_trigger_3_0= ruleBoolExpression )
                    {
                    // InternalSCTX.g:1684:1: (lv_trigger_3_0= ruleBoolExpression )
                    // InternalSCTX.g:1685:3: lv_trigger_3_0= ruleBoolExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getSucceedingActionAccess().getTriggerBoolExpressionParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_35);
                    lv_trigger_3_0=ruleBoolExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSucceedingActionRule());
                      	        }
                             		set(
                             			current, 
                             			"trigger",
                              		lv_trigger_3_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.BoolExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:1701:4: (otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )* )?
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==35) ) {
                alt56=1;
            }
            switch (alt56) {
                case 1 :
                    // InternalSCTX.g:1701:6: otherlv_4= 'do' ( (lv_effects_5_0= ruleEffect ) ) (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )*
                    {
                    otherlv_4=(Token)match(input,35,FollowSets000.FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getSucceedingActionAccess().getDoKeyword_3_0());
                          
                    }
                    // InternalSCTX.g:1705:1: ( (lv_effects_5_0= ruleEffect ) )
                    // InternalSCTX.g:1706:1: (lv_effects_5_0= ruleEffect )
                    {
                    // InternalSCTX.g:1706:1: (lv_effects_5_0= ruleEffect )
                    // InternalSCTX.g:1707:3: lv_effects_5_0= ruleEffect
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getSucceedingActionAccess().getEffectsEffectParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_37);
                    lv_effects_5_0=ruleEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSucceedingActionRule());
                      	        }
                             		add(
                             			current, 
                             			"effects",
                              		lv_effects_5_0, 
                              		"de.cau.cs.kieler.kexpressions.keffects.KEffects.Effect");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:1723:2: (otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) ) )*
                    loop55:
                    do {
                        int alt55=2;
                        int LA55_0 = input.LA(1);

                        if ( (LA55_0==36) ) {
                            alt55=1;
                        }


                        switch (alt55) {
                    	case 1 :
                    	    // InternalSCTX.g:1723:4: otherlv_6= ';' ( (lv_effects_7_0= ruleEffect ) )
                    	    {
                    	    otherlv_6=(Token)match(input,36,FollowSets000.FOLLOW_36); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_6, grammarAccess.getSucceedingActionAccess().getSemicolonKeyword_3_2_0());
                    	          
                    	    }
                    	    // InternalSCTX.g:1727:1: ( (lv_effects_7_0= ruleEffect ) )
                    	    // InternalSCTX.g:1728:1: (lv_effects_7_0= ruleEffect )
                    	    {
                    	    // InternalSCTX.g:1728:1: (lv_effects_7_0= ruleEffect )
                    	    // InternalSCTX.g:1729:3: lv_effects_7_0= ruleEffect
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getSucceedingActionAccess().getEffectsEffectParserRuleCall_3_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_37);
                    	    lv_effects_7_0=ruleEffect();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getSucceedingActionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"effects",
                    	              		lv_effects_7_0, 
                    	              		"de.cau.cs.kieler.kexpressions.keffects.KEffects.Effect");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop55;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSucceedingAction"


    // $ANTLR start "entryRuleRegion"
    // InternalSCTX.g:1753:1: entryRuleRegion returns [EObject current=null] : iv_ruleRegion= ruleRegion EOF ;
    public final EObject entryRuleRegion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRegion = null;


        try {
            // InternalSCTX.g:1754:2: (iv_ruleRegion= ruleRegion EOF )
            // InternalSCTX.g:1755:2: iv_ruleRegion= ruleRegion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRegionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRegion=ruleRegion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRegion; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRegion"


    // $ANTLR start "ruleRegion"
    // InternalSCTX.g:1762:1: ruleRegion returns [EObject current=null] : (this_ControlflowRegion_0= ruleControlflowRegion | this_DataflowRegion_1= ruleDataflowRegion ) ;
    public final EObject ruleRegion() throws RecognitionException {
        EObject current = null;

        EObject this_ControlflowRegion_0 = null;

        EObject this_DataflowRegion_1 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:1765:28: ( (this_ControlflowRegion_0= ruleControlflowRegion | this_DataflowRegion_1= ruleDataflowRegion ) )
            // InternalSCTX.g:1766:1: (this_ControlflowRegion_0= ruleControlflowRegion | this_DataflowRegion_1= ruleDataflowRegion )
            {
            // InternalSCTX.g:1766:1: (this_ControlflowRegion_0= ruleControlflowRegion | this_DataflowRegion_1= ruleDataflowRegion )
            int alt57=2;
            alt57 = dfa57.predict(input);
            switch (alt57) {
                case 1 :
                    // InternalSCTX.g:1767:2: this_ControlflowRegion_0= ruleControlflowRegion
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRegionAccess().getControlflowRegionParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ControlflowRegion_0=ruleControlflowRegion();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ControlflowRegion_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:1780:2: this_DataflowRegion_1= ruleDataflowRegion
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRegionAccess().getDataflowRegionParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_DataflowRegion_1=ruleDataflowRegion();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_DataflowRegion_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRegion"


    // $ANTLR start "entryRuleSingleControlflowRegion"
    // InternalSCTX.g:1799:1: entryRuleSingleControlflowRegion returns [EObject current=null] : iv_ruleSingleControlflowRegion= ruleSingleControlflowRegion EOF ;
    public final EObject entryRuleSingleControlflowRegion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSingleControlflowRegion = null;


        try {
            // InternalSCTX.g:1800:2: (iv_ruleSingleControlflowRegion= ruleSingleControlflowRegion EOF )
            // InternalSCTX.g:1801:2: iv_ruleSingleControlflowRegion= ruleSingleControlflowRegion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSingleControlflowRegionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSingleControlflowRegion=ruleSingleControlflowRegion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSingleControlflowRegion; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSingleControlflowRegion"


    // $ANTLR start "ruleSingleControlflowRegion"
    // InternalSCTX.g:1808:1: ruleSingleControlflowRegion returns [EObject current=null] : ( () ( (lv_states_1_0= ruleState ) )+ ) ;
    public final EObject ruleSingleControlflowRegion() throws RecognitionException {
        EObject current = null;

        EObject lv_states_1_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:1811:28: ( ( () ( (lv_states_1_0= ruleState ) )+ ) )
            // InternalSCTX.g:1812:1: ( () ( (lv_states_1_0= ruleState ) )+ )
            {
            // InternalSCTX.g:1812:1: ( () ( (lv_states_1_0= ruleState ) )+ )
            // InternalSCTX.g:1812:2: () ( (lv_states_1_0= ruleState ) )+
            {
            // InternalSCTX.g:1812:2: ()
            // InternalSCTX.g:1813:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getSingleControlflowRegionAccess().getControlflowRegionAction_0(),
                          current);
                  
            }

            }

            // InternalSCTX.g:1821:2: ( (lv_states_1_0= ruleState ) )+
            int cnt58=0;
            loop58:
            do {
                int alt58=2;
                int LA58_0 = input.LA(1);

                if ( (LA58_0==RULE_COMMENT_ANNOTATION||(LA58_0>=19 && LA58_0<=23)||LA58_0==71) ) {
                    alt58=1;
                }


                switch (alt58) {
            	case 1 :
            	    // InternalSCTX.g:1822:1: (lv_states_1_0= ruleState )
            	    {
            	    // InternalSCTX.g:1822:1: (lv_states_1_0= ruleState )
            	    // InternalSCTX.g:1823:3: lv_states_1_0= ruleState
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getSingleControlflowRegionAccess().getStatesStateParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_43);
            	    lv_states_1_0=ruleState();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getSingleControlflowRegionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"states",
            	              		lv_states_1_0, 
            	              		"de.cau.cs.kieler.sccharts.text.SCTX.State");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt58 >= 1 ) break loop58;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(58, input);
                        throw eee;
                }
                cnt58++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSingleControlflowRegion"


    // $ANTLR start "entryRuleSingleDataflowRegion"
    // InternalSCTX.g:1847:1: entryRuleSingleDataflowRegion returns [EObject current=null] : iv_ruleSingleDataflowRegion= ruleSingleDataflowRegion EOF ;
    public final EObject entryRuleSingleDataflowRegion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSingleDataflowRegion = null;


        try {
            // InternalSCTX.g:1848:2: (iv_ruleSingleDataflowRegion= ruleSingleDataflowRegion EOF )
            // InternalSCTX.g:1849:2: iv_ruleSingleDataflowRegion= ruleSingleDataflowRegion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSingleDataflowRegionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSingleDataflowRegion=ruleSingleDataflowRegion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSingleDataflowRegion; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSingleDataflowRegion"


    // $ANTLR start "ruleSingleDataflowRegion"
    // InternalSCTX.g:1856:1: ruleSingleDataflowRegion returns [EObject current=null] : ( () ( (lv_equations_1_0= ruleEquation ) )+ ) ;
    public final EObject ruleSingleDataflowRegion() throws RecognitionException {
        EObject current = null;

        EObject lv_equations_1_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:1859:28: ( ( () ( (lv_equations_1_0= ruleEquation ) )+ ) )
            // InternalSCTX.g:1860:1: ( () ( (lv_equations_1_0= ruleEquation ) )+ )
            {
            // InternalSCTX.g:1860:1: ( () ( (lv_equations_1_0= ruleEquation ) )+ )
            // InternalSCTX.g:1860:2: () ( (lv_equations_1_0= ruleEquation ) )+
            {
            // InternalSCTX.g:1860:2: ()
            // InternalSCTX.g:1861:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getSingleDataflowRegionAccess().getDataflowRegionAction_0(),
                          current);
                  
            }

            }

            // InternalSCTX.g:1869:2: ( (lv_equations_1_0= ruleEquation ) )+
            int cnt59=0;
            loop59:
            do {
                int alt59=2;
                int LA59_0 = input.LA(1);

                if ( (LA59_0==RULE_ID||LA59_0==RULE_COMMENT_ANNOTATION||LA59_0==71) ) {
                    alt59=1;
                }


                switch (alt59) {
            	case 1 :
            	    // InternalSCTX.g:1870:1: (lv_equations_1_0= ruleEquation )
            	    {
            	    // InternalSCTX.g:1870:1: (lv_equations_1_0= ruleEquation )
            	    // InternalSCTX.g:1871:3: lv_equations_1_0= ruleEquation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getSingleDataflowRegionAccess().getEquationsEquationParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_44);
            	    lv_equations_1_0=ruleEquation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getSingleDataflowRegionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"equations",
            	              		lv_equations_1_0, 
            	              		"de.cau.cs.kieler.sccharts.text.SCTX.Equation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt59 >= 1 ) break loop59;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(59, input);
                        throw eee;
                }
                cnt59++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSingleDataflowRegion"


    // $ANTLR start "entryRuleControlflowRegion"
    // InternalSCTX.g:1895:1: entryRuleControlflowRegion returns [EObject current=null] : iv_ruleControlflowRegion= ruleControlflowRegion EOF ;
    public final EObject entryRuleControlflowRegion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleControlflowRegion = null;


        try {
            // InternalSCTX.g:1896:2: (iv_ruleControlflowRegion= ruleControlflowRegion EOF )
            // InternalSCTX.g:1897:2: iv_ruleControlflowRegion= ruleControlflowRegion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getControlflowRegionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleControlflowRegion=ruleControlflowRegion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleControlflowRegion; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleControlflowRegion"


    // $ANTLR start "ruleControlflowRegion"
    // InternalSCTX.g:1904:1: ruleControlflowRegion returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'region' ( (lv_id_3_0= RULE_ID ) )? ( (lv_label_4_0= RULE_STRING ) )? otherlv_5= ':' ( (lv_declarations_6_0= ruleDeclarationWOSemicolon ) )* ( (lv_states_7_0= ruleState ) )+ ) ;
    public final EObject ruleControlflowRegion() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_id_3_0=null;
        Token lv_label_4_0=null;
        Token otherlv_5=null;
        EObject lv_annotations_1_0 = null;

        EObject lv_declarations_6_0 = null;

        EObject lv_states_7_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:1907:28: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'region' ( (lv_id_3_0= RULE_ID ) )? ( (lv_label_4_0= RULE_STRING ) )? otherlv_5= ':' ( (lv_declarations_6_0= ruleDeclarationWOSemicolon ) )* ( (lv_states_7_0= ruleState ) )+ ) )
            // InternalSCTX.g:1908:1: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'region' ( (lv_id_3_0= RULE_ID ) )? ( (lv_label_4_0= RULE_STRING ) )? otherlv_5= ':' ( (lv_declarations_6_0= ruleDeclarationWOSemicolon ) )* ( (lv_states_7_0= ruleState ) )+ )
            {
            // InternalSCTX.g:1908:1: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'region' ( (lv_id_3_0= RULE_ID ) )? ( (lv_label_4_0= RULE_STRING ) )? otherlv_5= ':' ( (lv_declarations_6_0= ruleDeclarationWOSemicolon ) )* ( (lv_states_7_0= ruleState ) )+ )
            // InternalSCTX.g:1908:2: () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'region' ( (lv_id_3_0= RULE_ID ) )? ( (lv_label_4_0= RULE_STRING ) )? otherlv_5= ':' ( (lv_declarations_6_0= ruleDeclarationWOSemicolon ) )* ( (lv_states_7_0= ruleState ) )+
            {
            // InternalSCTX.g:1908:2: ()
            // InternalSCTX.g:1909:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getControlflowRegionAccess().getControlflowRegionAction_0(),
                          current);
                  
            }

            }

            // InternalSCTX.g:1917:2: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop60:
            do {
                int alt60=2;
                int LA60_0 = input.LA(1);

                if ( (LA60_0==RULE_COMMENT_ANNOTATION||LA60_0==71) ) {
                    alt60=1;
                }


                switch (alt60) {
            	case 1 :
            	    // InternalSCTX.g:1918:1: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:1918:1: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCTX.g:1919:3: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getControlflowRegionAccess().getAnnotationsAnnotationParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_45);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_1_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop60;
                }
            } while (true);

            otherlv_2=(Token)match(input,44,FollowSets000.FOLLOW_46); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getControlflowRegionAccess().getRegionKeyword_2());
                  
            }
            // InternalSCTX.g:1939:1: ( (lv_id_3_0= RULE_ID ) )?
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( (LA61_0==RULE_ID) ) {
                alt61=1;
            }
            switch (alt61) {
                case 1 :
                    // InternalSCTX.g:1940:1: (lv_id_3_0= RULE_ID )
                    {
                    // InternalSCTX.g:1940:1: (lv_id_3_0= RULE_ID )
                    // InternalSCTX.g:1941:3: lv_id_3_0= RULE_ID
                    {
                    lv_id_3_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_47); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_id_3_0, grammarAccess.getControlflowRegionAccess().getIdIDTerminalRuleCall_3_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getControlflowRegionRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"id",
                              		lv_id_3_0, 
                              		"org.eclipse.xtext.common.Terminals.ID");
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:1957:3: ( (lv_label_4_0= RULE_STRING ) )?
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==RULE_STRING) ) {
                alt62=1;
            }
            switch (alt62) {
                case 1 :
                    // InternalSCTX.g:1958:1: (lv_label_4_0= RULE_STRING )
                    {
                    // InternalSCTX.g:1958:1: (lv_label_4_0= RULE_STRING )
                    // InternalSCTX.g:1959:3: lv_label_4_0= RULE_STRING
                    {
                    lv_label_4_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_48); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_label_4_0, grammarAccess.getControlflowRegionAccess().getLabelSTRINGTerminalRuleCall_4_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getControlflowRegionRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"label",
                              		lv_label_4_0, 
                              		"de.cau.cs.kieler.annotations.Annotations.STRING");
                      	    
                    }

                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,45,FollowSets000.FOLLOW_49); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getControlflowRegionAccess().getColonKeyword_5());
                  
            }
            // InternalSCTX.g:1979:1: ( (lv_declarations_6_0= ruleDeclarationWOSemicolon ) )*
            loop63:
            do {
                int alt63=2;
                alt63 = dfa63.predict(input);
                switch (alt63) {
            	case 1 :
            	    // InternalSCTX.g:1980:1: (lv_declarations_6_0= ruleDeclarationWOSemicolon )
            	    {
            	    // InternalSCTX.g:1980:1: (lv_declarations_6_0= ruleDeclarationWOSemicolon )
            	    // InternalSCTX.g:1981:3: lv_declarations_6_0= ruleDeclarationWOSemicolon
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getControlflowRegionAccess().getDeclarationsDeclarationWOSemicolonParserRuleCall_6_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_49);
            	    lv_declarations_6_0=ruleDeclarationWOSemicolon();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declarations",
            	              		lv_declarations_6_0, 
            	              		"de.cau.cs.kieler.kexpressions.kext.KExt.DeclarationWOSemicolon");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop63;
                }
            } while (true);

            // InternalSCTX.g:1997:3: ( (lv_states_7_0= ruleState ) )+
            int cnt64=0;
            loop64:
            do {
                int alt64=2;
                alt64 = dfa64.predict(input);
                switch (alt64) {
            	case 1 :
            	    // InternalSCTX.g:1998:1: (lv_states_7_0= ruleState )
            	    {
            	    // InternalSCTX.g:1998:1: (lv_states_7_0= ruleState )
            	    // InternalSCTX.g:1999:3: lv_states_7_0= ruleState
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getControlflowRegionAccess().getStatesStateParserRuleCall_7_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_43);
            	    lv_states_7_0=ruleState();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"states",
            	              		lv_states_7_0, 
            	              		"de.cau.cs.kieler.sccharts.text.SCTX.State");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt64 >= 1 ) break loop64;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(64, input);
                        throw eee;
                }
                cnt64++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleControlflowRegion"


    // $ANTLR start "entryRuleDataflowRegion"
    // InternalSCTX.g:2023:1: entryRuleDataflowRegion returns [EObject current=null] : iv_ruleDataflowRegion= ruleDataflowRegion EOF ;
    public final EObject entryRuleDataflowRegion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDataflowRegion = null;


        try {
            // InternalSCTX.g:2024:2: (iv_ruleDataflowRegion= ruleDataflowRegion EOF )
            // InternalSCTX.g:2025:2: iv_ruleDataflowRegion= ruleDataflowRegion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDataflowRegionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDataflowRegion=ruleDataflowRegion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDataflowRegion; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDataflowRegion"


    // $ANTLR start "ruleDataflowRegion"
    // InternalSCTX.g:2032:1: ruleDataflowRegion returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'dataflow' ( (lv_id_3_0= RULE_ID ) )? ( (lv_label_4_0= RULE_STRING ) )? otherlv_5= ':' ( (lv_declarations_6_0= ruleDeclarationWOSemicolon ) )* ( (lv_equations_7_0= ruleEquation ) )+ ) ;
    public final EObject ruleDataflowRegion() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_id_3_0=null;
        Token lv_label_4_0=null;
        Token otherlv_5=null;
        EObject lv_annotations_1_0 = null;

        EObject lv_declarations_6_0 = null;

        EObject lv_equations_7_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:2035:28: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'dataflow' ( (lv_id_3_0= RULE_ID ) )? ( (lv_label_4_0= RULE_STRING ) )? otherlv_5= ':' ( (lv_declarations_6_0= ruleDeclarationWOSemicolon ) )* ( (lv_equations_7_0= ruleEquation ) )+ ) )
            // InternalSCTX.g:2036:1: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'dataflow' ( (lv_id_3_0= RULE_ID ) )? ( (lv_label_4_0= RULE_STRING ) )? otherlv_5= ':' ( (lv_declarations_6_0= ruleDeclarationWOSemicolon ) )* ( (lv_equations_7_0= ruleEquation ) )+ )
            {
            // InternalSCTX.g:2036:1: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'dataflow' ( (lv_id_3_0= RULE_ID ) )? ( (lv_label_4_0= RULE_STRING ) )? otherlv_5= ':' ( (lv_declarations_6_0= ruleDeclarationWOSemicolon ) )* ( (lv_equations_7_0= ruleEquation ) )+ )
            // InternalSCTX.g:2036:2: () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'dataflow' ( (lv_id_3_0= RULE_ID ) )? ( (lv_label_4_0= RULE_STRING ) )? otherlv_5= ':' ( (lv_declarations_6_0= ruleDeclarationWOSemicolon ) )* ( (lv_equations_7_0= ruleEquation ) )+
            {
            // InternalSCTX.g:2036:2: ()
            // InternalSCTX.g:2037:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getDataflowRegionAccess().getDataflowRegionAction_0(),
                          current);
                  
            }

            }

            // InternalSCTX.g:2045:2: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop65:
            do {
                int alt65=2;
                int LA65_0 = input.LA(1);

                if ( (LA65_0==RULE_COMMENT_ANNOTATION||LA65_0==71) ) {
                    alt65=1;
                }


                switch (alt65) {
            	case 1 :
            	    // InternalSCTX.g:2046:1: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:2046:1: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCTX.g:2047:3: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getDataflowRegionAccess().getAnnotationsAnnotationParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_50);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getDataflowRegionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_1_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop65;
                }
            } while (true);

            otherlv_2=(Token)match(input,46,FollowSets000.FOLLOW_46); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getDataflowRegionAccess().getDataflowKeyword_2());
                  
            }
            // InternalSCTX.g:2067:1: ( (lv_id_3_0= RULE_ID ) )?
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( (LA66_0==RULE_ID) ) {
                alt66=1;
            }
            switch (alt66) {
                case 1 :
                    // InternalSCTX.g:2068:1: (lv_id_3_0= RULE_ID )
                    {
                    // InternalSCTX.g:2068:1: (lv_id_3_0= RULE_ID )
                    // InternalSCTX.g:2069:3: lv_id_3_0= RULE_ID
                    {
                    lv_id_3_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_47); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_id_3_0, grammarAccess.getDataflowRegionAccess().getIdIDTerminalRuleCall_3_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDataflowRegionRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"id",
                              		lv_id_3_0, 
                              		"org.eclipse.xtext.common.Terminals.ID");
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:2085:3: ( (lv_label_4_0= RULE_STRING ) )?
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==RULE_STRING) ) {
                alt67=1;
            }
            switch (alt67) {
                case 1 :
                    // InternalSCTX.g:2086:1: (lv_label_4_0= RULE_STRING )
                    {
                    // InternalSCTX.g:2086:1: (lv_label_4_0= RULE_STRING )
                    // InternalSCTX.g:2087:3: lv_label_4_0= RULE_STRING
                    {
                    lv_label_4_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_48); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_label_4_0, grammarAccess.getDataflowRegionAccess().getLabelSTRINGTerminalRuleCall_4_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDataflowRegionRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"label",
                              		lv_label_4_0, 
                              		"de.cau.cs.kieler.annotations.Annotations.STRING");
                      	    
                    }

                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,45,FollowSets000.FOLLOW_51); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getDataflowRegionAccess().getColonKeyword_5());
                  
            }
            // InternalSCTX.g:2107:1: ( (lv_declarations_6_0= ruleDeclarationWOSemicolon ) )*
            loop68:
            do {
                int alt68=2;
                alt68 = dfa68.predict(input);
                switch (alt68) {
            	case 1 :
            	    // InternalSCTX.g:2108:1: (lv_declarations_6_0= ruleDeclarationWOSemicolon )
            	    {
            	    // InternalSCTX.g:2108:1: (lv_declarations_6_0= ruleDeclarationWOSemicolon )
            	    // InternalSCTX.g:2109:3: lv_declarations_6_0= ruleDeclarationWOSemicolon
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getDataflowRegionAccess().getDeclarationsDeclarationWOSemicolonParserRuleCall_6_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_51);
            	    lv_declarations_6_0=ruleDeclarationWOSemicolon();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getDataflowRegionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declarations",
            	              		lv_declarations_6_0, 
            	              		"de.cau.cs.kieler.kexpressions.kext.KExt.DeclarationWOSemicolon");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop68;
                }
            } while (true);

            // InternalSCTX.g:2125:3: ( (lv_equations_7_0= ruleEquation ) )+
            int cnt69=0;
            loop69:
            do {
                int alt69=2;
                alt69 = dfa69.predict(input);
                switch (alt69) {
            	case 1 :
            	    // InternalSCTX.g:2126:1: (lv_equations_7_0= ruleEquation )
            	    {
            	    // InternalSCTX.g:2126:1: (lv_equations_7_0= ruleEquation )
            	    // InternalSCTX.g:2127:3: lv_equations_7_0= ruleEquation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getDataflowRegionAccess().getEquationsEquationParserRuleCall_7_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_44);
            	    lv_equations_7_0=ruleEquation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getDataflowRegionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"equations",
            	              		lv_equations_7_0, 
            	              		"de.cau.cs.kieler.sccharts.text.SCTX.Equation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt69 >= 1 ) break loop69;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(69, input);
                        throw eee;
                }
                cnt69++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDataflowRegion"


    // $ANTLR start "entryRuleEquation"
    // InternalSCTX.g:2153:1: entryRuleEquation returns [EObject current=null] : iv_ruleEquation= ruleEquation EOF ;
    public final EObject entryRuleEquation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEquation = null;


        try {
            // InternalSCTX.g:2154:2: (iv_ruleEquation= ruleEquation EOF )
            // InternalSCTX.g:2155:2: iv_ruleEquation= ruleEquation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEquationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEquation=ruleEquation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEquation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEquation"


    // $ANTLR start "ruleEquation"
    // InternalSCTX.g:2162:1: ruleEquation returns [EObject current=null] : this_SubReferenceAssignment_0= ruleSubReferenceAssignment ;
    public final EObject ruleEquation() throws RecognitionException {
        EObject current = null;

        EObject this_SubReferenceAssignment_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:2165:28: (this_SubReferenceAssignment_0= ruleSubReferenceAssignment )
            // InternalSCTX.g:2167:2: this_SubReferenceAssignment_0= ruleSubReferenceAssignment
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getEquationAccess().getSubReferenceAssignmentParserRuleCall()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_SubReferenceAssignment_0=ruleSubReferenceAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_SubReferenceAssignment_0; 
                      afterParserOrEnumRuleCall();
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEquation"


    // $ANTLR start "entryRuleRootScope"
    // InternalSCTX.g:2188:1: entryRuleRootScope returns [EObject current=null] : iv_ruleRootScope= ruleRootScope EOF ;
    public final EObject entryRuleRootScope() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRootScope = null;


        try {
            // InternalSCTX.g:2189:2: (iv_ruleRootScope= ruleRootScope EOF )
            // InternalSCTX.g:2190:2: iv_ruleRootScope= ruleRootScope EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRootScopeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRootScope=ruleRootScope();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRootScope; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRootScope"


    // $ANTLR start "ruleRootScope"
    // InternalSCTX.g:2197:1: ruleRootScope returns [EObject current=null] : ( () ( (lv_declarations_1_0= ruleDeclaration ) )* ( (lv_entities_2_0= ruleTestEntity ) )* (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )* ) ;
    public final EObject ruleRootScope() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        EObject lv_declarations_1_0 = null;

        EObject lv_entities_2_0 = null;

        EObject lv_scopes_4_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:2200:28: ( ( () ( (lv_declarations_1_0= ruleDeclaration ) )* ( (lv_entities_2_0= ruleTestEntity ) )* (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )* ) )
            // InternalSCTX.g:2201:1: ( () ( (lv_declarations_1_0= ruleDeclaration ) )* ( (lv_entities_2_0= ruleTestEntity ) )* (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )* )
            {
            // InternalSCTX.g:2201:1: ( () ( (lv_declarations_1_0= ruleDeclaration ) )* ( (lv_entities_2_0= ruleTestEntity ) )* (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )* )
            // InternalSCTX.g:2201:2: () ( (lv_declarations_1_0= ruleDeclaration ) )* ( (lv_entities_2_0= ruleTestEntity ) )* (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )*
            {
            // InternalSCTX.g:2201:2: ()
            // InternalSCTX.g:2202:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getRootScopeAccess().getKExtScopeAction_0(),
                          current);
                  
            }

            }

            // InternalSCTX.g:2210:2: ( (lv_declarations_1_0= ruleDeclaration ) )*
            loop70:
            do {
                int alt70=2;
                alt70 = dfa70.predict(input);
                switch (alt70) {
            	case 1 :
            	    // InternalSCTX.g:2211:1: (lv_declarations_1_0= ruleDeclaration )
            	    {
            	    // InternalSCTX.g:2211:1: (lv_declarations_1_0= ruleDeclaration )
            	    // InternalSCTX.g:2212:3: lv_declarations_1_0= ruleDeclaration
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getRootScopeAccess().getDeclarationsDeclarationParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_52);
            	    lv_declarations_1_0=ruleDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getRootScopeRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declarations",
            	              		lv_declarations_1_0, 
            	              		"de.cau.cs.kieler.kexpressions.kext.KExt.Declaration");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop70;
                }
            } while (true);

            // InternalSCTX.g:2228:3: ( (lv_entities_2_0= ruleTestEntity ) )*
            loop71:
            do {
                int alt71=2;
                int LA71_0 = input.LA(1);

                if ( (LA71_0==RULE_ID||LA71_0==RULE_HOSTCODE||LA71_0==RULE_COMMENT_ANNOTATION||LA71_0==48||LA71_0==55||LA71_0==60||LA71_0==71) ) {
                    alt71=1;
                }


                switch (alt71) {
            	case 1 :
            	    // InternalSCTX.g:2229:1: (lv_entities_2_0= ruleTestEntity )
            	    {
            	    // InternalSCTX.g:2229:1: (lv_entities_2_0= ruleTestEntity )
            	    // InternalSCTX.g:2230:3: lv_entities_2_0= ruleTestEntity
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getRootScopeAccess().getEntitiesTestEntityParserRuleCall_2_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_53);
            	    lv_entities_2_0=ruleTestEntity();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getRootScopeRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"entities",
            	              		lv_entities_2_0, 
            	              		"de.cau.cs.kieler.kexpressions.kext.KExt.TestEntity");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop71;
                }
            } while (true);

            // InternalSCTX.g:2246:3: (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )*
            loop72:
            do {
                int alt72=2;
                int LA72_0 = input.LA(1);

                if ( (LA72_0==47) ) {
                    alt72=1;
                }


                switch (alt72) {
            	case 1 :
            	    // InternalSCTX.g:2246:5: otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) )
            	    {
            	    otherlv_3=(Token)match(input,47,FollowSets000.FOLLOW_54); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_3, grammarAccess.getRootScopeAccess().getScopeKeyword_3_0());
            	          
            	    }
            	    // InternalSCTX.g:2250:1: ( (lv_scopes_4_0= ruleScope ) )
            	    // InternalSCTX.g:2251:1: (lv_scopes_4_0= ruleScope )
            	    {
            	    // InternalSCTX.g:2251:1: (lv_scopes_4_0= ruleScope )
            	    // InternalSCTX.g:2252:3: lv_scopes_4_0= ruleScope
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getRootScopeAccess().getScopesScopeParserRuleCall_3_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_55);
            	    lv_scopes_4_0=ruleScope();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getRootScopeRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"scopes",
            	              		lv_scopes_4_0, 
            	              		"de.cau.cs.kieler.kexpressions.kext.KExt.Scope");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop72;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRootScope"


    // $ANTLR start "entryRuleScope"
    // InternalSCTX.g:2276:1: entryRuleScope returns [EObject current=null] : iv_ruleScope= ruleScope EOF ;
    public final EObject entryRuleScope() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScope = null;


        try {
            // InternalSCTX.g:2277:2: (iv_ruleScope= ruleScope EOF )
            // InternalSCTX.g:2278:2: iv_ruleScope= ruleScope EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScopeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScope=ruleScope();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScope; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScope"


    // $ANTLR start "ruleScope"
    // InternalSCTX.g:2285:1: ruleScope returns [EObject current=null] : ( () ( (lv_id_1_0= RULE_ID ) )? otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_entities_4_0= ruleTestEntity ) )* (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )* otherlv_7= '}' ) ;
    public final EObject ruleScope() throws RecognitionException {
        EObject current = null;

        Token lv_id_1_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_declarations_3_0 = null;

        EObject lv_entities_4_0 = null;

        EObject lv_scopes_6_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:2288:28: ( ( () ( (lv_id_1_0= RULE_ID ) )? otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_entities_4_0= ruleTestEntity ) )* (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )* otherlv_7= '}' ) )
            // InternalSCTX.g:2289:1: ( () ( (lv_id_1_0= RULE_ID ) )? otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_entities_4_0= ruleTestEntity ) )* (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )* otherlv_7= '}' )
            {
            // InternalSCTX.g:2289:1: ( () ( (lv_id_1_0= RULE_ID ) )? otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_entities_4_0= ruleTestEntity ) )* (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )* otherlv_7= '}' )
            // InternalSCTX.g:2289:2: () ( (lv_id_1_0= RULE_ID ) )? otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_entities_4_0= ruleTestEntity ) )* (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )* otherlv_7= '}'
            {
            // InternalSCTX.g:2289:2: ()
            // InternalSCTX.g:2290:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getScopeAccess().getKExtScopeAction_0(),
                          current);
                  
            }

            }

            // InternalSCTX.g:2298:2: ( (lv_id_1_0= RULE_ID ) )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==RULE_ID) ) {
                alt73=1;
            }
            switch (alt73) {
                case 1 :
                    // InternalSCTX.g:2299:1: (lv_id_1_0= RULE_ID )
                    {
                    // InternalSCTX.g:2299:1: (lv_id_1_0= RULE_ID )
                    // InternalSCTX.g:2300:3: lv_id_1_0= RULE_ID
                    {
                    lv_id_1_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_id_1_0, grammarAccess.getScopeAccess().getIdIDTerminalRuleCall_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getScopeRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"id",
                              		lv_id_1_0, 
                              		"org.eclipse.xtext.common.Terminals.ID");
                      	    
                    }

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,17,FollowSets000.FOLLOW_56); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getScopeAccess().getLeftCurlyBracketKeyword_2());
                  
            }
            // InternalSCTX.g:2320:1: ( (lv_declarations_3_0= ruleDeclaration ) )*
            loop74:
            do {
                int alt74=2;
                alt74 = dfa74.predict(input);
                switch (alt74) {
            	case 1 :
            	    // InternalSCTX.g:2321:1: (lv_declarations_3_0= ruleDeclaration )
            	    {
            	    // InternalSCTX.g:2321:1: (lv_declarations_3_0= ruleDeclaration )
            	    // InternalSCTX.g:2322:3: lv_declarations_3_0= ruleDeclaration
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getScopeAccess().getDeclarationsDeclarationParserRuleCall_3_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_56);
            	    lv_declarations_3_0=ruleDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getScopeRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declarations",
            	              		lv_declarations_3_0, 
            	              		"de.cau.cs.kieler.kexpressions.kext.KExt.Declaration");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop74;
                }
            } while (true);

            // InternalSCTX.g:2338:3: ( (lv_entities_4_0= ruleTestEntity ) )*
            loop75:
            do {
                int alt75=2;
                int LA75_0 = input.LA(1);

                if ( (LA75_0==RULE_ID||LA75_0==RULE_HOSTCODE||LA75_0==RULE_COMMENT_ANNOTATION||LA75_0==48||LA75_0==55||LA75_0==60||LA75_0==71) ) {
                    alt75=1;
                }


                switch (alt75) {
            	case 1 :
            	    // InternalSCTX.g:2339:1: (lv_entities_4_0= ruleTestEntity )
            	    {
            	    // InternalSCTX.g:2339:1: (lv_entities_4_0= ruleTestEntity )
            	    // InternalSCTX.g:2340:3: lv_entities_4_0= ruleTestEntity
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getScopeAccess().getEntitiesTestEntityParserRuleCall_4_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_57);
            	    lv_entities_4_0=ruleTestEntity();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getScopeRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"entities",
            	              		lv_entities_4_0, 
            	              		"de.cau.cs.kieler.kexpressions.kext.KExt.TestEntity");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop75;
                }
            } while (true);

            // InternalSCTX.g:2356:3: (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )*
            loop76:
            do {
                int alt76=2;
                int LA76_0 = input.LA(1);

                if ( (LA76_0==47) ) {
                    alt76=1;
                }


                switch (alt76) {
            	case 1 :
            	    // InternalSCTX.g:2356:5: otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) )
            	    {
            	    otherlv_5=(Token)match(input,47,FollowSets000.FOLLOW_54); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_5, grammarAccess.getScopeAccess().getScopeKeyword_5_0());
            	          
            	    }
            	    // InternalSCTX.g:2360:1: ( (lv_scopes_6_0= ruleScope ) )
            	    // InternalSCTX.g:2361:1: (lv_scopes_6_0= ruleScope )
            	    {
            	    // InternalSCTX.g:2361:1: (lv_scopes_6_0= ruleScope )
            	    // InternalSCTX.g:2362:3: lv_scopes_6_0= ruleScope
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getScopeAccess().getScopesScopeParserRuleCall_5_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_58);
            	    lv_scopes_6_0=ruleScope();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getScopeRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"scopes",
            	              		lv_scopes_6_0, 
            	              		"de.cau.cs.kieler.kexpressions.kext.KExt.Scope");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop76;
                }
            } while (true);

            otherlv_7=(Token)match(input,18,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_7, grammarAccess.getScopeAccess().getRightCurlyBracketKeyword_6());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScope"


    // $ANTLR start "entryRuleTestEntity"
    // InternalSCTX.g:2390:1: entryRuleTestEntity returns [EObject current=null] : iv_ruleTestEntity= ruleTestEntity EOF ;
    public final EObject entryRuleTestEntity() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTestEntity = null;


        try {
            // InternalSCTX.g:2391:2: (iv_ruleTestEntity= ruleTestEntity EOF )
            // InternalSCTX.g:2392:2: iv_ruleTestEntity= ruleTestEntity EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTestEntityRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTestEntity=ruleTestEntity();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTestEntity; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTestEntity"


    // $ANTLR start "ruleTestEntity"
    // InternalSCTX.g:2399:1: ruleTestEntity returns [EObject current=null] : ( ( (lv_expression_0_0= ruleAnnotatedExpression ) ) | ( (lv_effect_1_0= ruleEffect ) ) ) ;
    public final EObject ruleTestEntity() throws RecognitionException {
        EObject current = null;

        EObject lv_expression_0_0 = null;

        EObject lv_effect_1_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:2402:28: ( ( ( (lv_expression_0_0= ruleAnnotatedExpression ) ) | ( (lv_effect_1_0= ruleEffect ) ) ) )
            // InternalSCTX.g:2403:1: ( ( (lv_expression_0_0= ruleAnnotatedExpression ) ) | ( (lv_effect_1_0= ruleEffect ) ) )
            {
            // InternalSCTX.g:2403:1: ( ( (lv_expression_0_0= ruleAnnotatedExpression ) ) | ( (lv_effect_1_0= ruleEffect ) ) )
            int alt77=2;
            alt77 = dfa77.predict(input);
            switch (alt77) {
                case 1 :
                    // InternalSCTX.g:2403:2: ( (lv_expression_0_0= ruleAnnotatedExpression ) )
                    {
                    // InternalSCTX.g:2403:2: ( (lv_expression_0_0= ruleAnnotatedExpression ) )
                    // InternalSCTX.g:2404:1: (lv_expression_0_0= ruleAnnotatedExpression )
                    {
                    // InternalSCTX.g:2404:1: (lv_expression_0_0= ruleAnnotatedExpression )
                    // InternalSCTX.g:2405:3: lv_expression_0_0= ruleAnnotatedExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTestEntityAccess().getExpressionAnnotatedExpressionParserRuleCall_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_expression_0_0=ruleAnnotatedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTestEntityRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_0_0, 
                              		"de.cau.cs.kieler.kexpressions.kext.KExt.AnnotatedExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:2422:6: ( (lv_effect_1_0= ruleEffect ) )
                    {
                    // InternalSCTX.g:2422:6: ( (lv_effect_1_0= ruleEffect ) )
                    // InternalSCTX.g:2423:1: (lv_effect_1_0= ruleEffect )
                    {
                    // InternalSCTX.g:2423:1: (lv_effect_1_0= ruleEffect )
                    // InternalSCTX.g:2424:3: lv_effect_1_0= ruleEffect
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTestEntityAccess().getEffectEffectParserRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_effect_1_0=ruleEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTestEntityRule());
                      	        }
                             		set(
                             			current, 
                             			"effect",
                              		lv_effect_1_0, 
                              		"de.cau.cs.kieler.kexpressions.keffects.KEffects.Effect");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTestEntity"


    // $ANTLR start "entryRuleAnnotatedExpression"
    // InternalSCTX.g:2448:1: entryRuleAnnotatedExpression returns [EObject current=null] : iv_ruleAnnotatedExpression= ruleAnnotatedExpression EOF ;
    public final EObject entryRuleAnnotatedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotatedExpression = null;


        try {
            // InternalSCTX.g:2449:2: (iv_ruleAnnotatedExpression= ruleAnnotatedExpression EOF )
            // InternalSCTX.g:2450:2: iv_ruleAnnotatedExpression= ruleAnnotatedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotatedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAnnotatedExpression=ruleAnnotatedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotatedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotatedExpression"


    // $ANTLR start "ruleAnnotatedExpression"
    // InternalSCTX.g:2457:1: ruleAnnotatedExpression returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'expression' ( (lv_expression_2_0= ruleExpression ) ) ) ;
    public final EObject ruleAnnotatedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:2460:28: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'expression' ( (lv_expression_2_0= ruleExpression ) ) ) )
            // InternalSCTX.g:2461:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'expression' ( (lv_expression_2_0= ruleExpression ) ) )
            {
            // InternalSCTX.g:2461:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'expression' ( (lv_expression_2_0= ruleExpression ) ) )
            // InternalSCTX.g:2461:2: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'expression' ( (lv_expression_2_0= ruleExpression ) )
            {
            // InternalSCTX.g:2461:2: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop78:
            do {
                int alt78=2;
                int LA78_0 = input.LA(1);

                if ( (LA78_0==RULE_COMMENT_ANNOTATION||LA78_0==71) ) {
                    alt78=1;
                }


                switch (alt78) {
            	case 1 :
            	    // InternalSCTX.g:2462:1: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:2462:1: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:2463:3: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getAnnotatedExpressionAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_59);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getAnnotatedExpressionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop78;
                }
            } while (true);

            otherlv_1=(Token)match(input,48,FollowSets000.FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getAnnotatedExpressionAccess().getExpressionKeyword_1());
                  
            }
            // InternalSCTX.g:2483:1: ( (lv_expression_2_0= ruleExpression ) )
            // InternalSCTX.g:2484:1: (lv_expression_2_0= ruleExpression )
            {
            // InternalSCTX.g:2484:1: (lv_expression_2_0= ruleExpression )
            // InternalSCTX.g:2485:3: lv_expression_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAnnotatedExpressionAccess().getExpressionExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_expression_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAnnotatedExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnnotatedExpression"


    // $ANTLR start "entryRuleDeclaration"
    // InternalSCTX.g:2509:1: entryRuleDeclaration returns [EObject current=null] : iv_ruleDeclaration= ruleDeclaration EOF ;
    public final EObject entryRuleDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDeclaration = null;


        try {
            // InternalSCTX.g:2510:2: (iv_ruleDeclaration= ruleDeclaration EOF )
            // InternalSCTX.g:2511:2: iv_ruleDeclaration= ruleDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDeclaration=ruleDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDeclaration"


    // $ANTLR start "ruleDeclaration"
    // InternalSCTX.g:2518:1: ruleDeclaration returns [EObject current=null] : (this_VariableDeclaration_0= ruleVariableDeclaration | this_ReferenceDeclaration_1= ruleReferenceDeclaration ) ;
    public final EObject ruleDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_VariableDeclaration_0 = null;

        EObject this_ReferenceDeclaration_1 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:2521:28: ( (this_VariableDeclaration_0= ruleVariableDeclaration | this_ReferenceDeclaration_1= ruleReferenceDeclaration ) )
            // InternalSCTX.g:2522:1: (this_VariableDeclaration_0= ruleVariableDeclaration | this_ReferenceDeclaration_1= ruleReferenceDeclaration )
            {
            // InternalSCTX.g:2522:1: (this_VariableDeclaration_0= ruleVariableDeclaration | this_ReferenceDeclaration_1= ruleReferenceDeclaration )
            int alt79=2;
            alt79 = dfa79.predict(input);
            switch (alt79) {
                case 1 :
                    // InternalSCTX.g:2523:2: this_VariableDeclaration_0= ruleVariableDeclaration
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getDeclarationAccess().getVariableDeclarationParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_VariableDeclaration_0=ruleVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_VariableDeclaration_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:2536:2: this_ReferenceDeclaration_1= ruleReferenceDeclaration
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getDeclarationAccess().getReferenceDeclarationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ReferenceDeclaration_1=ruleReferenceDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ReferenceDeclaration_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDeclaration"


    // $ANTLR start "entryRuleDeclarationWOSemicolon"
    // InternalSCTX.g:2555:1: entryRuleDeclarationWOSemicolon returns [EObject current=null] : iv_ruleDeclarationWOSemicolon= ruleDeclarationWOSemicolon EOF ;
    public final EObject entryRuleDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDeclarationWOSemicolon = null;


        try {
            // InternalSCTX.g:2556:2: (iv_ruleDeclarationWOSemicolon= ruleDeclarationWOSemicolon EOF )
            // InternalSCTX.g:2557:2: iv_ruleDeclarationWOSemicolon= ruleDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDeclarationWOSemicolon=ruleDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDeclarationWOSemicolon"


    // $ANTLR start "ruleDeclarationWOSemicolon"
    // InternalSCTX.g:2564:1: ruleDeclarationWOSemicolon returns [EObject current=null] : (this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon | this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon ) ;
    public final EObject ruleDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject this_VariableDeclarationWOSemicolon_0 = null;

        EObject this_ReferenceDeclarationWOSemicolon_1 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:2567:28: ( (this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon | this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon ) )
            // InternalSCTX.g:2568:1: (this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon | this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon )
            {
            // InternalSCTX.g:2568:1: (this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon | this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon )
            int alt80=2;
            alt80 = dfa80.predict(input);
            switch (alt80) {
                case 1 :
                    // InternalSCTX.g:2569:2: this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getDeclarationWOSemicolonAccess().getVariableDeclarationWOSemicolonParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_VariableDeclarationWOSemicolon_0=ruleVariableDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_VariableDeclarationWOSemicolon_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:2582:2: this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getDeclarationWOSemicolonAccess().getReferenceDeclarationWOSemicolonParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ReferenceDeclarationWOSemicolon_1=ruleReferenceDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ReferenceDeclarationWOSemicolon_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDeclarationWOSemicolon"


    // $ANTLR start "entryRuleVariableDeclaration"
    // InternalSCTX.g:2601:1: entryRuleVariableDeclaration returns [EObject current=null] : iv_ruleVariableDeclaration= ruleVariableDeclaration EOF ;
    public final EObject entryRuleVariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVariableDeclaration = null;


        try {
            // InternalSCTX.g:2602:2: (iv_ruleVariableDeclaration= ruleVariableDeclaration EOF )
            // InternalSCTX.g:2603:2: iv_ruleVariableDeclaration= ruleVariableDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVariableDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleVariableDeclaration=ruleVariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVariableDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVariableDeclaration"


    // $ANTLR start "ruleVariableDeclaration"
    // InternalSCTX.g:2610:1: ruleVariableDeclaration returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_const_1_0= 'const' ) )? ( (lv_input_2_0= 'input' ) )? ( (lv_output_3_0= 'output' ) )? ( (lv_static_4_0= 'static' ) )? ( ( ( (lv_signal_5_0= 'signal' ) )? ( (lv_type_6_0= ruleValueType ) ) ) | ( (lv_signal_7_0= 'signal' ) ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* otherlv_11= ';' ) ;
    public final EObject ruleVariableDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_const_1_0=null;
        Token lv_input_2_0=null;
        Token lv_output_3_0=null;
        Token lv_static_4_0=null;
        Token lv_signal_5_0=null;
        Token lv_signal_7_0=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        EObject lv_annotations_0_0 = null;

        Enumerator lv_type_6_0 = null;

        EObject lv_valuedObjects_8_0 = null;

        EObject lv_valuedObjects_10_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:2613:28: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_const_1_0= 'const' ) )? ( (lv_input_2_0= 'input' ) )? ( (lv_output_3_0= 'output' ) )? ( (lv_static_4_0= 'static' ) )? ( ( ( (lv_signal_5_0= 'signal' ) )? ( (lv_type_6_0= ruleValueType ) ) ) | ( (lv_signal_7_0= 'signal' ) ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* otherlv_11= ';' ) )
            // InternalSCTX.g:2614:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_const_1_0= 'const' ) )? ( (lv_input_2_0= 'input' ) )? ( (lv_output_3_0= 'output' ) )? ( (lv_static_4_0= 'static' ) )? ( ( ( (lv_signal_5_0= 'signal' ) )? ( (lv_type_6_0= ruleValueType ) ) ) | ( (lv_signal_7_0= 'signal' ) ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* otherlv_11= ';' )
            {
            // InternalSCTX.g:2614:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_const_1_0= 'const' ) )? ( (lv_input_2_0= 'input' ) )? ( (lv_output_3_0= 'output' ) )? ( (lv_static_4_0= 'static' ) )? ( ( ( (lv_signal_5_0= 'signal' ) )? ( (lv_type_6_0= ruleValueType ) ) ) | ( (lv_signal_7_0= 'signal' ) ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* otherlv_11= ';' )
            // InternalSCTX.g:2614:2: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_const_1_0= 'const' ) )? ( (lv_input_2_0= 'input' ) )? ( (lv_output_3_0= 'output' ) )? ( (lv_static_4_0= 'static' ) )? ( ( ( (lv_signal_5_0= 'signal' ) )? ( (lv_type_6_0= ruleValueType ) ) ) | ( (lv_signal_7_0= 'signal' ) ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* otherlv_11= ';'
            {
            // InternalSCTX.g:2614:2: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop81:
            do {
                int alt81=2;
                int LA81_0 = input.LA(1);

                if ( (LA81_0==RULE_COMMENT_ANNOTATION||LA81_0==71) ) {
                    alt81=1;
                }


                switch (alt81) {
            	case 1 :
            	    // InternalSCTX.g:2615:1: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:2615:1: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:2616:3: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getVariableDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_60);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop81;
                }
            } while (true);

            // InternalSCTX.g:2632:3: ( (lv_const_1_0= 'const' ) )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==49) ) {
                alt82=1;
            }
            switch (alt82) {
                case 1 :
                    // InternalSCTX.g:2633:1: (lv_const_1_0= 'const' )
                    {
                    // InternalSCTX.g:2633:1: (lv_const_1_0= 'const' )
                    // InternalSCTX.g:2634:3: lv_const_1_0= 'const'
                    {
                    lv_const_1_0=(Token)match(input,49,FollowSets000.FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_const_1_0, grammarAccess.getVariableDeclarationAccess().getConstConstKeyword_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      	        }
                             		setWithLastConsumed(current, "const", true, "const");
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:2647:3: ( (lv_input_2_0= 'input' ) )?
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==50) ) {
                alt83=1;
            }
            switch (alt83) {
                case 1 :
                    // InternalSCTX.g:2648:1: (lv_input_2_0= 'input' )
                    {
                    // InternalSCTX.g:2648:1: (lv_input_2_0= 'input' )
                    // InternalSCTX.g:2649:3: lv_input_2_0= 'input'
                    {
                    lv_input_2_0=(Token)match(input,50,FollowSets000.FOLLOW_62); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_input_2_0, grammarAccess.getVariableDeclarationAccess().getInputInputKeyword_2_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      	        }
                             		setWithLastConsumed(current, "input", true, "input");
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:2662:3: ( (lv_output_3_0= 'output' ) )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==51) ) {
                alt84=1;
            }
            switch (alt84) {
                case 1 :
                    // InternalSCTX.g:2663:1: (lv_output_3_0= 'output' )
                    {
                    // InternalSCTX.g:2663:1: (lv_output_3_0= 'output' )
                    // InternalSCTX.g:2664:3: lv_output_3_0= 'output'
                    {
                    lv_output_3_0=(Token)match(input,51,FollowSets000.FOLLOW_63); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_output_3_0, grammarAccess.getVariableDeclarationAccess().getOutputOutputKeyword_3_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      	        }
                             		setWithLastConsumed(current, "output", true, "output");
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:2677:3: ( (lv_static_4_0= 'static' ) )?
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( (LA85_0==52) ) {
                alt85=1;
            }
            switch (alt85) {
                case 1 :
                    // InternalSCTX.g:2678:1: (lv_static_4_0= 'static' )
                    {
                    // InternalSCTX.g:2678:1: (lv_static_4_0= 'static' )
                    // InternalSCTX.g:2679:3: lv_static_4_0= 'static'
                    {
                    lv_static_4_0=(Token)match(input,52,FollowSets000.FOLLOW_64); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_static_4_0, grammarAccess.getVariableDeclarationAccess().getStaticStaticKeyword_4_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      	        }
                             		setWithLastConsumed(current, "static", true, "static");
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:2692:3: ( ( ( (lv_signal_5_0= 'signal' ) )? ( (lv_type_6_0= ruleValueType ) ) ) | ( (lv_signal_7_0= 'signal' ) ) )
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==53) ) {
                int LA87_1 = input.LA(2);

                if ( ((LA87_1>=104 && LA87_1<=110)) ) {
                    alt87=1;
                }
                else if ( (LA87_1==RULE_ID||LA87_1==RULE_COMMENT_ANNOTATION||LA87_1==71) ) {
                    alt87=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 87, 1, input);

                    throw nvae;
                }
            }
            else if ( ((LA87_0>=104 && LA87_0<=110)) ) {
                alt87=1;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 87, 0, input);

                throw nvae;
            }
            switch (alt87) {
                case 1 :
                    // InternalSCTX.g:2692:4: ( ( (lv_signal_5_0= 'signal' ) )? ( (lv_type_6_0= ruleValueType ) ) )
                    {
                    // InternalSCTX.g:2692:4: ( ( (lv_signal_5_0= 'signal' ) )? ( (lv_type_6_0= ruleValueType ) ) )
                    // InternalSCTX.g:2692:5: ( (lv_signal_5_0= 'signal' ) )? ( (lv_type_6_0= ruleValueType ) )
                    {
                    // InternalSCTX.g:2692:5: ( (lv_signal_5_0= 'signal' ) )?
                    int alt86=2;
                    int LA86_0 = input.LA(1);

                    if ( (LA86_0==53) ) {
                        alt86=1;
                    }
                    switch (alt86) {
                        case 1 :
                            // InternalSCTX.g:2693:1: (lv_signal_5_0= 'signal' )
                            {
                            // InternalSCTX.g:2693:1: (lv_signal_5_0= 'signal' )
                            // InternalSCTX.g:2694:3: lv_signal_5_0= 'signal'
                            {
                            lv_signal_5_0=(Token)match(input,53,FollowSets000.FOLLOW_64); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_signal_5_0, grammarAccess.getVariableDeclarationAccess().getSignalSignalKeyword_5_0_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getVariableDeclarationRule());
                              	        }
                                     		setWithLastConsumed(current, "signal", true, "signal");
                              	    
                            }

                            }


                            }
                            break;

                    }

                    // InternalSCTX.g:2707:3: ( (lv_type_6_0= ruleValueType ) )
                    // InternalSCTX.g:2708:1: (lv_type_6_0= ruleValueType )
                    {
                    // InternalSCTX.g:2708:1: (lv_type_6_0= ruleValueType )
                    // InternalSCTX.g:2709:3: lv_type_6_0= ruleValueType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getVariableDeclarationAccess().getTypeValueTypeEnumRuleCall_5_0_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_65);
                    lv_type_6_0=ruleValueType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"type",
                              		lv_type_6_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.ValueType");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:2726:6: ( (lv_signal_7_0= 'signal' ) )
                    {
                    // InternalSCTX.g:2726:6: ( (lv_signal_7_0= 'signal' ) )
                    // InternalSCTX.g:2727:1: (lv_signal_7_0= 'signal' )
                    {
                    // InternalSCTX.g:2727:1: (lv_signal_7_0= 'signal' )
                    // InternalSCTX.g:2728:3: lv_signal_7_0= 'signal'
                    {
                    lv_signal_7_0=(Token)match(input,53,FollowSets000.FOLLOW_65); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_signal_7_0, grammarAccess.getVariableDeclarationAccess().getSignalSignalKeyword_5_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      	        }
                             		setWithLastConsumed(current, "signal", true, "signal");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:2741:3: ( (lv_valuedObjects_8_0= ruleValuedObject ) )
            // InternalSCTX.g:2742:1: (lv_valuedObjects_8_0= ruleValuedObject )
            {
            // InternalSCTX.g:2742:1: (lv_valuedObjects_8_0= ruleValuedObject )
            // InternalSCTX.g:2743:3: lv_valuedObjects_8_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_6_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_66);
            lv_valuedObjects_8_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
              	        }
                     		add(
                     			current, 
                     			"valuedObjects",
                      		lv_valuedObjects_8_0, 
                      		"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:2759:2: (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )*
            loop88:
            do {
                int alt88=2;
                int LA88_0 = input.LA(1);

                if ( (LA88_0==26) ) {
                    alt88=1;
                }


                switch (alt88) {
            	case 1 :
            	    // InternalSCTX.g:2759:4: otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) )
            	    {
            	    otherlv_9=(Token)match(input,26,FollowSets000.FOLLOW_65); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_9, grammarAccess.getVariableDeclarationAccess().getCommaKeyword_7_0());
            	          
            	    }
            	    // InternalSCTX.g:2763:1: ( (lv_valuedObjects_10_0= ruleValuedObject ) )
            	    // InternalSCTX.g:2764:1: (lv_valuedObjects_10_0= ruleValuedObject )
            	    {
            	    // InternalSCTX.g:2764:1: (lv_valuedObjects_10_0= ruleValuedObject )
            	    // InternalSCTX.g:2765:3: lv_valuedObjects_10_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getVariableDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_7_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_66);
            	    lv_valuedObjects_10_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"valuedObjects",
            	              		lv_valuedObjects_10_0, 
            	              		"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop88;
                }
            } while (true);

            otherlv_11=(Token)match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_11, grammarAccess.getVariableDeclarationAccess().getSemicolonKeyword_8());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVariableDeclaration"


    // $ANTLR start "entryRuleVariableDeclarationWOSemicolon"
    // InternalSCTX.g:2793:1: entryRuleVariableDeclarationWOSemicolon returns [EObject current=null] : iv_ruleVariableDeclarationWOSemicolon= ruleVariableDeclarationWOSemicolon EOF ;
    public final EObject entryRuleVariableDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVariableDeclarationWOSemicolon = null;


        try {
            // InternalSCTX.g:2794:2: (iv_ruleVariableDeclarationWOSemicolon= ruleVariableDeclarationWOSemicolon EOF )
            // InternalSCTX.g:2795:2: iv_ruleVariableDeclarationWOSemicolon= ruleVariableDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleVariableDeclarationWOSemicolon=ruleVariableDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVariableDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVariableDeclarationWOSemicolon"


    // $ANTLR start "ruleVariableDeclarationWOSemicolon"
    // InternalSCTX.g:2802:1: ruleVariableDeclarationWOSemicolon returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_const_1_0= 'const' ) )? ( (lv_input_2_0= 'input' ) )? ( (lv_output_3_0= 'output' ) )? ( (lv_static_4_0= 'static' ) )? ( ( ( (lv_signal_5_0= 'signal' ) )? ( (lv_type_6_0= ruleValueType ) ) ) | ( (lv_signal_7_0= 'signal' ) ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* ) ;
    public final EObject ruleVariableDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        Token lv_const_1_0=null;
        Token lv_input_2_0=null;
        Token lv_output_3_0=null;
        Token lv_static_4_0=null;
        Token lv_signal_5_0=null;
        Token lv_signal_7_0=null;
        Token otherlv_9=null;
        EObject lv_annotations_0_0 = null;

        Enumerator lv_type_6_0 = null;

        EObject lv_valuedObjects_8_0 = null;

        EObject lv_valuedObjects_10_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:2805:28: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_const_1_0= 'const' ) )? ( (lv_input_2_0= 'input' ) )? ( (lv_output_3_0= 'output' ) )? ( (lv_static_4_0= 'static' ) )? ( ( ( (lv_signal_5_0= 'signal' ) )? ( (lv_type_6_0= ruleValueType ) ) ) | ( (lv_signal_7_0= 'signal' ) ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* ) )
            // InternalSCTX.g:2806:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_const_1_0= 'const' ) )? ( (lv_input_2_0= 'input' ) )? ( (lv_output_3_0= 'output' ) )? ( (lv_static_4_0= 'static' ) )? ( ( ( (lv_signal_5_0= 'signal' ) )? ( (lv_type_6_0= ruleValueType ) ) ) | ( (lv_signal_7_0= 'signal' ) ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* )
            {
            // InternalSCTX.g:2806:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_const_1_0= 'const' ) )? ( (lv_input_2_0= 'input' ) )? ( (lv_output_3_0= 'output' ) )? ( (lv_static_4_0= 'static' ) )? ( ( ( (lv_signal_5_0= 'signal' ) )? ( (lv_type_6_0= ruleValueType ) ) ) | ( (lv_signal_7_0= 'signal' ) ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* )
            // InternalSCTX.g:2806:2: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_const_1_0= 'const' ) )? ( (lv_input_2_0= 'input' ) )? ( (lv_output_3_0= 'output' ) )? ( (lv_static_4_0= 'static' ) )? ( ( ( (lv_signal_5_0= 'signal' ) )? ( (lv_type_6_0= ruleValueType ) ) ) | ( (lv_signal_7_0= 'signal' ) ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )*
            {
            // InternalSCTX.g:2806:2: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop89:
            do {
                int alt89=2;
                int LA89_0 = input.LA(1);

                if ( (LA89_0==RULE_COMMENT_ANNOTATION||LA89_0==71) ) {
                    alt89=1;
                }


                switch (alt89) {
            	case 1 :
            	    // InternalSCTX.g:2807:1: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:2807:1: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:2808:3: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_60);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop89;
                }
            } while (true);

            // InternalSCTX.g:2824:3: ( (lv_const_1_0= 'const' ) )?
            int alt90=2;
            int LA90_0 = input.LA(1);

            if ( (LA90_0==49) ) {
                alt90=1;
            }
            switch (alt90) {
                case 1 :
                    // InternalSCTX.g:2825:1: (lv_const_1_0= 'const' )
                    {
                    // InternalSCTX.g:2825:1: (lv_const_1_0= 'const' )
                    // InternalSCTX.g:2826:3: lv_const_1_0= 'const'
                    {
                    lv_const_1_0=(Token)match(input,49,FollowSets000.FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_const_1_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getConstConstKeyword_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      	        }
                             		setWithLastConsumed(current, "const", true, "const");
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:2839:3: ( (lv_input_2_0= 'input' ) )?
            int alt91=2;
            int LA91_0 = input.LA(1);

            if ( (LA91_0==50) ) {
                alt91=1;
            }
            switch (alt91) {
                case 1 :
                    // InternalSCTX.g:2840:1: (lv_input_2_0= 'input' )
                    {
                    // InternalSCTX.g:2840:1: (lv_input_2_0= 'input' )
                    // InternalSCTX.g:2841:3: lv_input_2_0= 'input'
                    {
                    lv_input_2_0=(Token)match(input,50,FollowSets000.FOLLOW_62); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_input_2_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getInputInputKeyword_2_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      	        }
                             		setWithLastConsumed(current, "input", true, "input");
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:2854:3: ( (lv_output_3_0= 'output' ) )?
            int alt92=2;
            int LA92_0 = input.LA(1);

            if ( (LA92_0==51) ) {
                alt92=1;
            }
            switch (alt92) {
                case 1 :
                    // InternalSCTX.g:2855:1: (lv_output_3_0= 'output' )
                    {
                    // InternalSCTX.g:2855:1: (lv_output_3_0= 'output' )
                    // InternalSCTX.g:2856:3: lv_output_3_0= 'output'
                    {
                    lv_output_3_0=(Token)match(input,51,FollowSets000.FOLLOW_63); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_output_3_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getOutputOutputKeyword_3_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      	        }
                             		setWithLastConsumed(current, "output", true, "output");
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:2869:3: ( (lv_static_4_0= 'static' ) )?
            int alt93=2;
            int LA93_0 = input.LA(1);

            if ( (LA93_0==52) ) {
                alt93=1;
            }
            switch (alt93) {
                case 1 :
                    // InternalSCTX.g:2870:1: (lv_static_4_0= 'static' )
                    {
                    // InternalSCTX.g:2870:1: (lv_static_4_0= 'static' )
                    // InternalSCTX.g:2871:3: lv_static_4_0= 'static'
                    {
                    lv_static_4_0=(Token)match(input,52,FollowSets000.FOLLOW_64); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_static_4_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getStaticStaticKeyword_4_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      	        }
                             		setWithLastConsumed(current, "static", true, "static");
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:2884:3: ( ( ( (lv_signal_5_0= 'signal' ) )? ( (lv_type_6_0= ruleValueType ) ) ) | ( (lv_signal_7_0= 'signal' ) ) )
            int alt95=2;
            int LA95_0 = input.LA(1);

            if ( (LA95_0==53) ) {
                int LA95_1 = input.LA(2);

                if ( (LA95_1==RULE_ID||LA95_1==RULE_COMMENT_ANNOTATION||LA95_1==71) ) {
                    alt95=2;
                }
                else if ( ((LA95_1>=104 && LA95_1<=110)) ) {
                    alt95=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 95, 1, input);

                    throw nvae;
                }
            }
            else if ( ((LA95_0>=104 && LA95_0<=110)) ) {
                alt95=1;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 95, 0, input);

                throw nvae;
            }
            switch (alt95) {
                case 1 :
                    // InternalSCTX.g:2884:4: ( ( (lv_signal_5_0= 'signal' ) )? ( (lv_type_6_0= ruleValueType ) ) )
                    {
                    // InternalSCTX.g:2884:4: ( ( (lv_signal_5_0= 'signal' ) )? ( (lv_type_6_0= ruleValueType ) ) )
                    // InternalSCTX.g:2884:5: ( (lv_signal_5_0= 'signal' ) )? ( (lv_type_6_0= ruleValueType ) )
                    {
                    // InternalSCTX.g:2884:5: ( (lv_signal_5_0= 'signal' ) )?
                    int alt94=2;
                    int LA94_0 = input.LA(1);

                    if ( (LA94_0==53) ) {
                        alt94=1;
                    }
                    switch (alt94) {
                        case 1 :
                            // InternalSCTX.g:2885:1: (lv_signal_5_0= 'signal' )
                            {
                            // InternalSCTX.g:2885:1: (lv_signal_5_0= 'signal' )
                            // InternalSCTX.g:2886:3: lv_signal_5_0= 'signal'
                            {
                            lv_signal_5_0=(Token)match(input,53,FollowSets000.FOLLOW_64); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_signal_5_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getSignalSignalKeyword_5_0_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                              	        }
                                     		setWithLastConsumed(current, "signal", true, "signal");
                              	    
                            }

                            }


                            }
                            break;

                    }

                    // InternalSCTX.g:2899:3: ( (lv_type_6_0= ruleValueType ) )
                    // InternalSCTX.g:2900:1: (lv_type_6_0= ruleValueType )
                    {
                    // InternalSCTX.g:2900:1: (lv_type_6_0= ruleValueType )
                    // InternalSCTX.g:2901:3: lv_type_6_0= ruleValueType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getTypeValueTypeEnumRuleCall_5_0_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_65);
                    lv_type_6_0=ruleValueType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      	        }
                             		set(
                             			current, 
                             			"type",
                              		lv_type_6_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.ValueType");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:2918:6: ( (lv_signal_7_0= 'signal' ) )
                    {
                    // InternalSCTX.g:2918:6: ( (lv_signal_7_0= 'signal' ) )
                    // InternalSCTX.g:2919:1: (lv_signal_7_0= 'signal' )
                    {
                    // InternalSCTX.g:2919:1: (lv_signal_7_0= 'signal' )
                    // InternalSCTX.g:2920:3: lv_signal_7_0= 'signal'
                    {
                    lv_signal_7_0=(Token)match(input,53,FollowSets000.FOLLOW_65); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_signal_7_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getSignalSignalKeyword_5_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      	        }
                             		setWithLastConsumed(current, "signal", true, "signal");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:2933:3: ( (lv_valuedObjects_8_0= ruleValuedObject ) )
            // InternalSCTX.g:2934:1: (lv_valuedObjects_8_0= ruleValuedObject )
            {
            // InternalSCTX.g:2934:1: (lv_valuedObjects_8_0= ruleValuedObject )
            // InternalSCTX.g:2935:3: lv_valuedObjects_8_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_6_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_67);
            lv_valuedObjects_8_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
              	        }
                     		add(
                     			current, 
                     			"valuedObjects",
                      		lv_valuedObjects_8_0, 
                      		"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:2951:2: (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )*
            loop96:
            do {
                int alt96=2;
                int LA96_0 = input.LA(1);

                if ( (LA96_0==26) ) {
                    alt96=1;
                }


                switch (alt96) {
            	case 1 :
            	    // InternalSCTX.g:2951:4: otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) )
            	    {
            	    otherlv_9=(Token)match(input,26,FollowSets000.FOLLOW_65); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_9, grammarAccess.getVariableDeclarationWOSemicolonAccess().getCommaKeyword_7_0());
            	          
            	    }
            	    // InternalSCTX.g:2955:1: ( (lv_valuedObjects_10_0= ruleValuedObject ) )
            	    // InternalSCTX.g:2956:1: (lv_valuedObjects_10_0= ruleValuedObject )
            	    {
            	    // InternalSCTX.g:2956:1: (lv_valuedObjects_10_0= ruleValuedObject )
            	    // InternalSCTX.g:2957:3: lv_valuedObjects_10_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_7_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_67);
            	    lv_valuedObjects_10_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"valuedObjects",
            	              		lv_valuedObjects_10_0, 
            	              		"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop96;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVariableDeclarationWOSemicolon"


    // $ANTLR start "entryRuleNamespaceID"
    // InternalSCTX.g:2981:1: entryRuleNamespaceID returns [String current=null] : iv_ruleNamespaceID= ruleNamespaceID EOF ;
    public final String entryRuleNamespaceID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNamespaceID = null;


        try {
            // InternalSCTX.g:2982:2: (iv_ruleNamespaceID= ruleNamespaceID EOF )
            // InternalSCTX.g:2983:2: iv_ruleNamespaceID= ruleNamespaceID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamespaceIDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNamespaceID=ruleNamespaceID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamespaceID.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNamespaceID"


    // $ANTLR start "ruleNamespaceID"
    // InternalSCTX.g:2990:1: ruleNamespaceID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ID_0= RULE_ID (kw= ':' this_PrimeID_2= rulePrimeID )* ) ;
    public final AntlrDatatypeRuleToken ruleNamespaceID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;
        Token kw=null;
        AntlrDatatypeRuleToken this_PrimeID_2 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:2993:28: ( (this_ID_0= RULE_ID (kw= ':' this_PrimeID_2= rulePrimeID )* ) )
            // InternalSCTX.g:2994:1: (this_ID_0= RULE_ID (kw= ':' this_PrimeID_2= rulePrimeID )* )
            {
            // InternalSCTX.g:2994:1: (this_ID_0= RULE_ID (kw= ':' this_PrimeID_2= rulePrimeID )* )
            // InternalSCTX.g:2994:6: this_ID_0= RULE_ID (kw= ':' this_PrimeID_2= rulePrimeID )*
            {
            this_ID_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_68); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_ID_0);
                  
            }
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_ID_0, grammarAccess.getNamespaceIDAccess().getIDTerminalRuleCall_0()); 
                  
            }
            // InternalSCTX.g:3001:1: (kw= ':' this_PrimeID_2= rulePrimeID )*
            loop97:
            do {
                int alt97=2;
                int LA97_0 = input.LA(1);

                if ( (LA97_0==45) ) {
                    alt97=1;
                }


                switch (alt97) {
            	case 1 :
            	    // InternalSCTX.g:3002:2: kw= ':' this_PrimeID_2= rulePrimeID
            	    {
            	    kw=(Token)match(input,45,FollowSets000.FOLLOW_65); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	              current.merge(kw);
            	              newLeafNode(kw, grammarAccess.getNamespaceIDAccess().getColonKeyword_1_0()); 
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	              newCompositeNode(grammarAccess.getNamespaceIDAccess().getPrimeIDParserRuleCall_1_1()); 
            	          
            	    }
            	    pushFollow(FollowSets000.FOLLOW_68);
            	    this_PrimeID_2=rulePrimeID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_PrimeID_2);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	              afterParserOrEnumRuleCall();
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop97;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamespaceID"


    // $ANTLR start "entryRuleReferenceDeclaration"
    // InternalSCTX.g:3026:1: entryRuleReferenceDeclaration returns [EObject current=null] : iv_ruleReferenceDeclaration= ruleReferenceDeclaration EOF ;
    public final EObject entryRuleReferenceDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReferenceDeclaration = null;


        try {
            // InternalSCTX.g:3027:2: (iv_ruleReferenceDeclaration= ruleReferenceDeclaration EOF )
            // InternalSCTX.g:3028:2: iv_ruleReferenceDeclaration= ruleReferenceDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReferenceDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleReferenceDeclaration=ruleReferenceDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReferenceDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReferenceDeclaration"


    // $ANTLR start "ruleReferenceDeclaration"
    // InternalSCTX.g:3035:1: ruleReferenceDeclaration returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (otherlv_1= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_3= 'extern' ( (lv_extern_4_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_5_0= ruleValuedObject ) ) (otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) ) )* otherlv_8= ';' ) ;
    public final EObject ruleReferenceDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token lv_extern_4_0=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_valuedObjects_5_0 = null;

        EObject lv_valuedObjects_7_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:3038:28: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (otherlv_1= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_3= 'extern' ( (lv_extern_4_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_5_0= ruleValuedObject ) ) (otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) ) )* otherlv_8= ';' ) )
            // InternalSCTX.g:3039:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (otherlv_1= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_3= 'extern' ( (lv_extern_4_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_5_0= ruleValuedObject ) ) (otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) ) )* otherlv_8= ';' )
            {
            // InternalSCTX.g:3039:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (otherlv_1= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_3= 'extern' ( (lv_extern_4_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_5_0= ruleValuedObject ) ) (otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) ) )* otherlv_8= ';' )
            // InternalSCTX.g:3039:2: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (otherlv_1= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_3= 'extern' ( (lv_extern_4_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_5_0= ruleValuedObject ) ) (otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) ) )* otherlv_8= ';'
            {
            // InternalSCTX.g:3039:2: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop98:
            do {
                int alt98=2;
                int LA98_0 = input.LA(1);

                if ( (LA98_0==RULE_COMMENT_ANNOTATION||LA98_0==71) ) {
                    alt98=1;
                }


                switch (alt98) {
            	case 1 :
            	    // InternalSCTX.g:3040:1: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:3040:1: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:3041:3: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_69);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop98;
                }
            } while (true);

            // InternalSCTX.g:3057:3: ( (otherlv_1= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_3= 'extern' ( (lv_extern_4_0= RULE_STRING ) ) ) )
            int alt99=2;
            int LA99_0 = input.LA(1);

            if ( (LA99_0==54) ) {
                alt99=1;
            }
            else if ( (LA99_0==55) ) {
                alt99=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 99, 0, input);

                throw nvae;
            }
            switch (alt99) {
                case 1 :
                    // InternalSCTX.g:3057:4: (otherlv_1= 'ref' ( ( ruleNamespaceID ) ) )
                    {
                    // InternalSCTX.g:3057:4: (otherlv_1= 'ref' ( ( ruleNamespaceID ) ) )
                    // InternalSCTX.g:3057:6: otherlv_1= 'ref' ( ( ruleNamespaceID ) )
                    {
                    otherlv_1=(Token)match(input,54,FollowSets000.FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getReferenceDeclarationAccess().getRefKeyword_1_0_0());
                          
                    }
                    // InternalSCTX.g:3061:1: ( ( ruleNamespaceID ) )
                    // InternalSCTX.g:3062:1: ( ruleNamespaceID )
                    {
                    // InternalSCTX.g:3062:1: ( ruleNamespaceID )
                    // InternalSCTX.g:3063:3: ruleNamespaceID
                    {
                    if ( state.backtracking==0 ) {
                       
                      		  /* */ 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getReferenceDeclarationRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getReferenceIdentifiableCrossReference_1_0_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_65);
                    ruleNamespaceID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:3080:6: (otherlv_3= 'extern' ( (lv_extern_4_0= RULE_STRING ) ) )
                    {
                    // InternalSCTX.g:3080:6: (otherlv_3= 'extern' ( (lv_extern_4_0= RULE_STRING ) ) )
                    // InternalSCTX.g:3080:8: otherlv_3= 'extern' ( (lv_extern_4_0= RULE_STRING ) )
                    {
                    otherlv_3=(Token)match(input,55,FollowSets000.FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getReferenceDeclarationAccess().getExternKeyword_1_1_0());
                          
                    }
                    // InternalSCTX.g:3084:1: ( (lv_extern_4_0= RULE_STRING ) )
                    // InternalSCTX.g:3085:1: (lv_extern_4_0= RULE_STRING )
                    {
                    // InternalSCTX.g:3085:1: (lv_extern_4_0= RULE_STRING )
                    // InternalSCTX.g:3086:3: lv_extern_4_0= RULE_STRING
                    {
                    lv_extern_4_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_65); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_extern_4_0, grammarAccess.getReferenceDeclarationAccess().getExternSTRINGTerminalRuleCall_1_1_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getReferenceDeclarationRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"extern",
                              		lv_extern_4_0, 
                              		"de.cau.cs.kieler.annotations.Annotations.STRING");
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:3102:4: ( (lv_valuedObjects_5_0= ruleValuedObject ) )
            // InternalSCTX.g:3103:1: (lv_valuedObjects_5_0= ruleValuedObject )
            {
            // InternalSCTX.g:3103:1: (lv_valuedObjects_5_0= ruleValuedObject )
            // InternalSCTX.g:3104:3: lv_valuedObjects_5_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_66);
            lv_valuedObjects_5_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
              	        }
                     		add(
                     			current, 
                     			"valuedObjects",
                      		lv_valuedObjects_5_0, 
                      		"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:3120:2: (otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) ) )*
            loop100:
            do {
                int alt100=2;
                int LA100_0 = input.LA(1);

                if ( (LA100_0==26) ) {
                    alt100=1;
                }


                switch (alt100) {
            	case 1 :
            	    // InternalSCTX.g:3120:4: otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) )
            	    {
            	    otherlv_6=(Token)match(input,26,FollowSets000.FOLLOW_65); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_6, grammarAccess.getReferenceDeclarationAccess().getCommaKeyword_3_0());
            	          
            	    }
            	    // InternalSCTX.g:3124:1: ( (lv_valuedObjects_7_0= ruleValuedObject ) )
            	    // InternalSCTX.g:3125:1: (lv_valuedObjects_7_0= ruleValuedObject )
            	    {
            	    // InternalSCTX.g:3125:1: (lv_valuedObjects_7_0= ruleValuedObject )
            	    // InternalSCTX.g:3126:3: lv_valuedObjects_7_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_3_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_66);
            	    lv_valuedObjects_7_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"valuedObjects",
            	              		lv_valuedObjects_7_0, 
            	              		"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop100;
                }
            } while (true);

            otherlv_8=(Token)match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_8, grammarAccess.getReferenceDeclarationAccess().getSemicolonKeyword_4());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReferenceDeclaration"


    // $ANTLR start "entryRuleReferenceDeclarationWOSemicolon"
    // InternalSCTX.g:3154:1: entryRuleReferenceDeclarationWOSemicolon returns [EObject current=null] : iv_ruleReferenceDeclarationWOSemicolon= ruleReferenceDeclarationWOSemicolon EOF ;
    public final EObject entryRuleReferenceDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReferenceDeclarationWOSemicolon = null;


        try {
            // InternalSCTX.g:3155:2: (iv_ruleReferenceDeclarationWOSemicolon= ruleReferenceDeclarationWOSemicolon EOF )
            // InternalSCTX.g:3156:2: iv_ruleReferenceDeclarationWOSemicolon= ruleReferenceDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleReferenceDeclarationWOSemicolon=ruleReferenceDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReferenceDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReferenceDeclarationWOSemicolon"


    // $ANTLR start "ruleReferenceDeclarationWOSemicolon"
    // InternalSCTX.g:3163:1: ruleReferenceDeclarationWOSemicolon returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (otherlv_1= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_3= 'extern' ( (lv_extern_4_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_5_0= ruleValuedObject ) ) (otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) ) )* ) ;
    public final EObject ruleReferenceDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token lv_extern_4_0=null;
        Token otherlv_6=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_valuedObjects_5_0 = null;

        EObject lv_valuedObjects_7_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:3166:28: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (otherlv_1= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_3= 'extern' ( (lv_extern_4_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_5_0= ruleValuedObject ) ) (otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) ) )* ) )
            // InternalSCTX.g:3167:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (otherlv_1= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_3= 'extern' ( (lv_extern_4_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_5_0= ruleValuedObject ) ) (otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) ) )* )
            {
            // InternalSCTX.g:3167:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (otherlv_1= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_3= 'extern' ( (lv_extern_4_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_5_0= ruleValuedObject ) ) (otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) ) )* )
            // InternalSCTX.g:3167:2: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (otherlv_1= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_3= 'extern' ( (lv_extern_4_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_5_0= ruleValuedObject ) ) (otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) ) )*
            {
            // InternalSCTX.g:3167:2: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop101:
            do {
                int alt101=2;
                int LA101_0 = input.LA(1);

                if ( (LA101_0==RULE_COMMENT_ANNOTATION||LA101_0==71) ) {
                    alt101=1;
                }


                switch (alt101) {
            	case 1 :
            	    // InternalSCTX.g:3168:1: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:3168:1: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:3169:3: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_69);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop101;
                }
            } while (true);

            // InternalSCTX.g:3185:3: ( (otherlv_1= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_3= 'extern' ( (lv_extern_4_0= RULE_STRING ) ) ) )
            int alt102=2;
            int LA102_0 = input.LA(1);

            if ( (LA102_0==54) ) {
                alt102=1;
            }
            else if ( (LA102_0==55) ) {
                alt102=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 102, 0, input);

                throw nvae;
            }
            switch (alt102) {
                case 1 :
                    // InternalSCTX.g:3185:4: (otherlv_1= 'ref' ( ( ruleNamespaceID ) ) )
                    {
                    // InternalSCTX.g:3185:4: (otherlv_1= 'ref' ( ( ruleNamespaceID ) ) )
                    // InternalSCTX.g:3185:6: otherlv_1= 'ref' ( ( ruleNamespaceID ) )
                    {
                    otherlv_1=(Token)match(input,54,FollowSets000.FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getRefKeyword_1_0_0());
                          
                    }
                    // InternalSCTX.g:3189:1: ( ( ruleNamespaceID ) )
                    // InternalSCTX.g:3190:1: ( ruleNamespaceID )
                    {
                    // InternalSCTX.g:3190:1: ( ruleNamespaceID )
                    // InternalSCTX.g:3191:3: ruleNamespaceID
                    {
                    if ( state.backtracking==0 ) {
                       
                      		  /* */ 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getReferenceDeclarationWOSemicolonRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getReferenceIdentifiableCrossReference_1_0_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_65);
                    ruleNamespaceID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:3208:6: (otherlv_3= 'extern' ( (lv_extern_4_0= RULE_STRING ) ) )
                    {
                    // InternalSCTX.g:3208:6: (otherlv_3= 'extern' ( (lv_extern_4_0= RULE_STRING ) ) )
                    // InternalSCTX.g:3208:8: otherlv_3= 'extern' ( (lv_extern_4_0= RULE_STRING ) )
                    {
                    otherlv_3=(Token)match(input,55,FollowSets000.FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getExternKeyword_1_1_0());
                          
                    }
                    // InternalSCTX.g:3212:1: ( (lv_extern_4_0= RULE_STRING ) )
                    // InternalSCTX.g:3213:1: (lv_extern_4_0= RULE_STRING )
                    {
                    // InternalSCTX.g:3213:1: (lv_extern_4_0= RULE_STRING )
                    // InternalSCTX.g:3214:3: lv_extern_4_0= RULE_STRING
                    {
                    lv_extern_4_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_65); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_extern_4_0, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getExternSTRINGTerminalRuleCall_1_1_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getReferenceDeclarationWOSemicolonRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"extern",
                              		lv_extern_4_0, 
                              		"de.cau.cs.kieler.annotations.Annotations.STRING");
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:3230:4: ( (lv_valuedObjects_5_0= ruleValuedObject ) )
            // InternalSCTX.g:3231:1: (lv_valuedObjects_5_0= ruleValuedObject )
            {
            // InternalSCTX.g:3231:1: (lv_valuedObjects_5_0= ruleValuedObject )
            // InternalSCTX.g:3232:3: lv_valuedObjects_5_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_67);
            lv_valuedObjects_5_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
              	        }
                     		add(
                     			current, 
                     			"valuedObjects",
                      		lv_valuedObjects_5_0, 
                      		"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:3248:2: (otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) ) )*
            loop103:
            do {
                int alt103=2;
                int LA103_0 = input.LA(1);

                if ( (LA103_0==26) ) {
                    alt103=1;
                }


                switch (alt103) {
            	case 1 :
            	    // InternalSCTX.g:3248:4: otherlv_6= ',' ( (lv_valuedObjects_7_0= ruleValuedObject ) )
            	    {
            	    otherlv_6=(Token)match(input,26,FollowSets000.FOLLOW_65); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_6, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getCommaKeyword_3_0());
            	          
            	    }
            	    // InternalSCTX.g:3252:1: ( (lv_valuedObjects_7_0= ruleValuedObject ) )
            	    // InternalSCTX.g:3253:1: (lv_valuedObjects_7_0= ruleValuedObject )
            	    {
            	    // InternalSCTX.g:3253:1: (lv_valuedObjects_7_0= ruleValuedObject )
            	    // InternalSCTX.g:3254:3: lv_valuedObjects_7_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_3_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_67);
            	    lv_valuedObjects_7_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"valuedObjects",
            	              		lv_valuedObjects_7_0, 
            	              		"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop103;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReferenceDeclarationWOSemicolon"


    // $ANTLR start "entryRuleValuedObject"
    // InternalSCTX.g:3278:1: entryRuleValuedObject returns [EObject current=null] : iv_ruleValuedObject= ruleValuedObject EOF ;
    public final EObject entryRuleValuedObject() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValuedObject = null;


        try {
            // InternalSCTX.g:3279:2: (iv_ruleValuedObject= ruleValuedObject EOF )
            // InternalSCTX.g:3280:2: iv_ruleValuedObject= ruleValuedObject EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValuedObjectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleValuedObject=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValuedObject; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValuedObject"


    // $ANTLR start "ruleValuedObject"
    // InternalSCTX.g:3287:1: ruleValuedObject returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )? (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )? ) ;
    public final EObject ruleValuedObject() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_cardinalities_3_0 = null;

        EObject lv_initialValue_6_0 = null;

        Enumerator lv_combineOperator_8_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:3290:28: ( ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )? (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )? ) )
            // InternalSCTX.g:3291:1: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )? (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )? )
            {
            // InternalSCTX.g:3291:1: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )? (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )? )
            // InternalSCTX.g:3291:2: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )? (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )?
            {
            // InternalSCTX.g:3291:2: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )*
            loop104:
            do {
                int alt104=2;
                int LA104_0 = input.LA(1);

                if ( (LA104_0==RULE_COMMENT_ANNOTATION||LA104_0==71) ) {
                    alt104=1;
                }


                switch (alt104) {
            	case 1 :
            	    // InternalSCTX.g:3292:1: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    {
            	    // InternalSCTX.g:3292:1: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    // InternalSCTX.g:3293:3: lv_annotations_0_0= ruleQuotedStringAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getValuedObjectAccess().getAnnotationsQuotedStringAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_65);
            	    lv_annotations_0_0=ruleQuotedStringAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getValuedObjectRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.QuotedStringAnnotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop104;
                }
            } while (true);

            // InternalSCTX.g:3309:3: ( (lv_name_1_0= rulePrimeID ) )
            // InternalSCTX.g:3310:1: (lv_name_1_0= rulePrimeID )
            {
            // InternalSCTX.g:3310:1: (lv_name_1_0= rulePrimeID )
            // InternalSCTX.g:3311:3: lv_name_1_0= rulePrimeID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getValuedObjectAccess().getNamePrimeIDParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_70);
            lv_name_1_0=rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getValuedObjectRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"de.cau.cs.kieler.kexpressions.KExpressions.PrimeID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:3327:2: (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )*
            loop105:
            do {
                int alt105=2;
                int LA105_0 = input.LA(1);

                if ( (LA105_0==31) ) {
                    alt105=1;
                }


                switch (alt105) {
            	case 1 :
            	    // InternalSCTX.g:3327:4: otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']'
            	    {
            	    otherlv_2=(Token)match(input,31,FollowSets000.FOLLOW_22); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_2, grammarAccess.getValuedObjectAccess().getLeftSquareBracketKeyword_2_0());
            	          
            	    }
            	    // InternalSCTX.g:3331:1: ( (lv_cardinalities_3_0= ruleExpression ) )
            	    // InternalSCTX.g:3332:1: (lv_cardinalities_3_0= ruleExpression )
            	    {
            	    // InternalSCTX.g:3332:1: (lv_cardinalities_3_0= ruleExpression )
            	    // InternalSCTX.g:3333:3: lv_cardinalities_3_0= ruleExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getValuedObjectAccess().getCardinalitiesExpressionParserRuleCall_2_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_28);
            	    lv_cardinalities_3_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getValuedObjectRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"cardinalities",
            	              		lv_cardinalities_3_0, 
            	              		"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    otherlv_4=(Token)match(input,32,FollowSets000.FOLLOW_70); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_4, grammarAccess.getValuedObjectAccess().getRightSquareBracketKeyword_2_2());
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop105;
                }
            } while (true);

            // InternalSCTX.g:3353:3: (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )?
            int alt106=2;
            int LA106_0 = input.LA(1);

            if ( (LA106_0==56) ) {
                alt106=1;
            }
            switch (alt106) {
                case 1 :
                    // InternalSCTX.g:3353:5: otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) )
                    {
                    otherlv_5=(Token)match(input,56,FollowSets000.FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getValuedObjectAccess().getEqualsSignKeyword_3_0());
                          
                    }
                    // InternalSCTX.g:3357:1: ( (lv_initialValue_6_0= ruleExpression ) )
                    // InternalSCTX.g:3358:1: (lv_initialValue_6_0= ruleExpression )
                    {
                    // InternalSCTX.g:3358:1: (lv_initialValue_6_0= ruleExpression )
                    // InternalSCTX.g:3359:3: lv_initialValue_6_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getValuedObjectAccess().getInitialValueExpressionParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_71);
                    lv_initialValue_6_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getValuedObjectRule());
                      	        }
                             		set(
                             			current, 
                             			"initialValue",
                              		lv_initialValue_6_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:3375:4: (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )?
            int alt107=2;
            int LA107_0 = input.LA(1);

            if ( (LA107_0==57) ) {
                alt107=1;
            }
            switch (alt107) {
                case 1 :
                    // InternalSCTX.g:3375:6: otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) )
                    {
                    otherlv_7=(Token)match(input,57,FollowSets000.FOLLOW_72); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getValuedObjectAccess().getCombineKeyword_4_0());
                          
                    }
                    // InternalSCTX.g:3379:1: ( (lv_combineOperator_8_0= ruleCombineOperator ) )
                    // InternalSCTX.g:3380:1: (lv_combineOperator_8_0= ruleCombineOperator )
                    {
                    // InternalSCTX.g:3380:1: (lv_combineOperator_8_0= ruleCombineOperator )
                    // InternalSCTX.g:3381:3: lv_combineOperator_8_0= ruleCombineOperator
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getValuedObjectAccess().getCombineOperatorCombineOperatorEnumRuleCall_4_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_combineOperator_8_0=ruleCombineOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getValuedObjectRule());
                      	        }
                             		set(
                             			current, 
                             			"combineOperator",
                              		lv_combineOperator_8_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.CombineOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValuedObject"


    // $ANTLR start "entryRuleEffect"
    // InternalSCTX.g:3405:1: entryRuleEffect returns [EObject current=null] : iv_ruleEffect= ruleEffect EOF ;
    public final EObject entryRuleEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEffect = null;


        try {
            // InternalSCTX.g:3406:2: (iv_ruleEffect= ruleEffect EOF )
            // InternalSCTX.g:3407:2: iv_ruleEffect= ruleEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEffect=ruleEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEffect"


    // $ANTLR start "ruleEffect"
    // InternalSCTX.g:3414:1: ruleEffect returns [EObject current=null] : (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | this_Emission_2= ruleEmission | this_HostcodeEffect_3= ruleHostcodeEffect | this_ReferenceCallEffect_4= ruleReferenceCallEffect | this_FunctionCallEffect_5= ruleFunctionCallEffect ) ;
    public final EObject ruleEffect() throws RecognitionException {
        EObject current = null;

        EObject this_Assignment_0 = null;

        EObject this_PostfixEffect_1 = null;

        EObject this_Emission_2 = null;

        EObject this_HostcodeEffect_3 = null;

        EObject this_ReferenceCallEffect_4 = null;

        EObject this_FunctionCallEffect_5 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:3417:28: ( (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | this_Emission_2= ruleEmission | this_HostcodeEffect_3= ruleHostcodeEffect | this_ReferenceCallEffect_4= ruleReferenceCallEffect | this_FunctionCallEffect_5= ruleFunctionCallEffect ) )
            // InternalSCTX.g:3418:1: (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | this_Emission_2= ruleEmission | this_HostcodeEffect_3= ruleHostcodeEffect | this_ReferenceCallEffect_4= ruleReferenceCallEffect | this_FunctionCallEffect_5= ruleFunctionCallEffect )
            {
            // InternalSCTX.g:3418:1: (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | this_Emission_2= ruleEmission | this_HostcodeEffect_3= ruleHostcodeEffect | this_ReferenceCallEffect_4= ruleReferenceCallEffect | this_FunctionCallEffect_5= ruleFunctionCallEffect )
            int alt108=6;
            alt108 = dfa108.predict(input);
            switch (alt108) {
                case 1 :
                    // InternalSCTX.g:3419:2: this_Assignment_0= ruleAssignment
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getEffectAccess().getAssignmentParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Assignment_0=ruleAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Assignment_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:3432:2: this_PostfixEffect_1= rulePostfixEffect
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getEffectAccess().getPostfixEffectParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PostfixEffect_1=rulePostfixEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_PostfixEffect_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:3445:2: this_Emission_2= ruleEmission
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getEffectAccess().getEmissionParserRuleCall_2()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Emission_2=ruleEmission();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Emission_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalSCTX.g:3458:2: this_HostcodeEffect_3= ruleHostcodeEffect
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getEffectAccess().getHostcodeEffectParserRuleCall_3()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_HostcodeEffect_3=ruleHostcodeEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_HostcodeEffect_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    // InternalSCTX.g:3471:2: this_ReferenceCallEffect_4= ruleReferenceCallEffect
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getEffectAccess().getReferenceCallEffectParserRuleCall_4()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ReferenceCallEffect_4=ruleReferenceCallEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ReferenceCallEffect_4; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    // InternalSCTX.g:3484:2: this_FunctionCallEffect_5= ruleFunctionCallEffect
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getEffectAccess().getFunctionCallEffectParserRuleCall_5()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_FunctionCallEffect_5=ruleFunctionCallEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_FunctionCallEffect_5; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEffect"


    // $ANTLR start "entryRuleEmission"
    // InternalSCTX.g:3503:1: entryRuleEmission returns [EObject current=null] : iv_ruleEmission= ruleEmission EOF ;
    public final EObject entryRuleEmission() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEmission = null;


        try {
            // InternalSCTX.g:3504:2: (iv_ruleEmission= ruleEmission EOF )
            // InternalSCTX.g:3505:2: iv_ruleEmission= ruleEmission EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEmissionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEmission=ruleEmission();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEmission; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEmission"


    // $ANTLR start "ruleEmission"
    // InternalSCTX.g:3512:1: ruleEmission returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' )? ) ;
    public final EObject ruleEmission() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_newValue_3_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:3515:28: ( ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' )? ) )
            // InternalSCTX.g:3516:1: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' )? )
            {
            // InternalSCTX.g:3516:1: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' )? )
            // InternalSCTX.g:3516:2: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' )?
            {
            // InternalSCTX.g:3516:2: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )*
            loop109:
            do {
                int alt109=2;
                int LA109_0 = input.LA(1);

                if ( (LA109_0==RULE_COMMENT_ANNOTATION||LA109_0==71) ) {
                    alt109=1;
                }


                switch (alt109) {
            	case 1 :
            	    // InternalSCTX.g:3517:1: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    {
            	    // InternalSCTX.g:3517:1: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    // InternalSCTX.g:3518:3: lv_annotations_0_0= ruleQuotedStringAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getEmissionAccess().getAnnotationsQuotedStringAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_65);
            	    lv_annotations_0_0=ruleQuotedStringAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getEmissionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.QuotedStringAnnotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop109;
                }
            } while (true);

            // InternalSCTX.g:3534:3: ( ( rulePrimeID ) )
            // InternalSCTX.g:3535:1: ( rulePrimeID )
            {
            // InternalSCTX.g:3535:1: ( rulePrimeID )
            // InternalSCTX.g:3536:3: rulePrimeID
            {
            if ( state.backtracking==0 ) {
               
              		  /* */ 
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getEmissionRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getEmissionAccess().getValuedObjectValuedObjectCrossReference_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_21);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:3552:2: (otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' )?
            int alt110=2;
            int LA110_0 = input.LA(1);

            if ( (LA110_0==25) ) {
                alt110=1;
            }
            switch (alt110) {
                case 1 :
                    // InternalSCTX.g:3552:4: otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')'
                    {
                    otherlv_2=(Token)match(input,25,FollowSets000.FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getEmissionAccess().getLeftParenthesisKeyword_2_0());
                          
                    }
                    // InternalSCTX.g:3556:1: ( (lv_newValue_3_0= ruleExpression ) )
                    // InternalSCTX.g:3557:1: (lv_newValue_3_0= ruleExpression )
                    {
                    // InternalSCTX.g:3557:1: (lv_newValue_3_0= ruleExpression )
                    // InternalSCTX.g:3558:3: lv_newValue_3_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getEmissionAccess().getNewValueExpressionParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_24);
                    lv_newValue_3_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getEmissionRule());
                      	        }
                             		set(
                             			current, 
                             			"newValue",
                              		lv_newValue_3_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,27,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getEmissionAccess().getRightParenthesisKeyword_2_2());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEmission"


    // $ANTLR start "entryRuleAssignment"
    // InternalSCTX.g:3586:1: entryRuleAssignment returns [EObject current=null] : iv_ruleAssignment= ruleAssignment EOF ;
    public final EObject entryRuleAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAssignment = null;


        try {
            // InternalSCTX.g:3587:2: (iv_ruleAssignment= ruleAssignment EOF )
            // InternalSCTX.g:3588:2: iv_ruleAssignment= ruleAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAssignmentRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAssignment=ruleAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAssignment; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAssignment"


    // $ANTLR start "ruleAssignment"
    // InternalSCTX.g:3595:1: ruleAssignment returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* ( (lv_operator_5_0= ruleAssignOperator ) ) ( (lv_expression_6_0= ruleExpression ) ) ) ;
    public final EObject ruleAssignment() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_indices_3_0 = null;

        Enumerator lv_operator_5_0 = null;

        EObject lv_expression_6_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:3598:28: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* ( (lv_operator_5_0= ruleAssignOperator ) ) ( (lv_expression_6_0= ruleExpression ) ) ) )
            // InternalSCTX.g:3599:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* ( (lv_operator_5_0= ruleAssignOperator ) ) ( (lv_expression_6_0= ruleExpression ) ) )
            {
            // InternalSCTX.g:3599:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* ( (lv_operator_5_0= ruleAssignOperator ) ) ( (lv_expression_6_0= ruleExpression ) ) )
            // InternalSCTX.g:3599:2: ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* ( (lv_operator_5_0= ruleAssignOperator ) ) ( (lv_expression_6_0= ruleExpression ) )
            {
            // InternalSCTX.g:3599:2: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop111:
            do {
                int alt111=2;
                int LA111_0 = input.LA(1);

                if ( (LA111_0==RULE_COMMENT_ANNOTATION||LA111_0==71) ) {
                    alt111=1;
                }


                switch (alt111) {
            	case 1 :
            	    // InternalSCTX.g:3600:1: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:3600:1: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:3601:3: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getAssignmentAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_65);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getAssignmentRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop111;
                }
            } while (true);

            // InternalSCTX.g:3617:3: ( ( rulePrimeID ) )
            // InternalSCTX.g:3618:1: ( rulePrimeID )
            {
            // InternalSCTX.g:3618:1: ( rulePrimeID )
            // InternalSCTX.g:3619:3: rulePrimeID
            {
            if ( state.backtracking==0 ) {
               
              		  /* */ 
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getAssignmentRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAssignmentAccess().getValuedObjectValuedObjectCrossReference_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_73);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:3635:2: (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )*
            loop112:
            do {
                int alt112=2;
                int LA112_0 = input.LA(1);

                if ( (LA112_0==31) ) {
                    alt112=1;
                }


                switch (alt112) {
            	case 1 :
            	    // InternalSCTX.g:3635:4: otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']'
            	    {
            	    otherlv_2=(Token)match(input,31,FollowSets000.FOLLOW_22); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_2, grammarAccess.getAssignmentAccess().getLeftSquareBracketKeyword_2_0());
            	          
            	    }
            	    // InternalSCTX.g:3639:1: ( (lv_indices_3_0= ruleExpression ) )
            	    // InternalSCTX.g:3640:1: (lv_indices_3_0= ruleExpression )
            	    {
            	    // InternalSCTX.g:3640:1: (lv_indices_3_0= ruleExpression )
            	    // InternalSCTX.g:3641:3: lv_indices_3_0= ruleExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getAssignmentAccess().getIndicesExpressionParserRuleCall_2_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_28);
            	    lv_indices_3_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getAssignmentRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"indices",
            	              		lv_indices_3_0, 
            	              		"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    otherlv_4=(Token)match(input,32,FollowSets000.FOLLOW_73); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_4, grammarAccess.getAssignmentAccess().getRightSquareBracketKeyword_2_2());
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop112;
                }
            } while (true);

            // InternalSCTX.g:3661:3: ( (lv_operator_5_0= ruleAssignOperator ) )
            // InternalSCTX.g:3662:1: (lv_operator_5_0= ruleAssignOperator )
            {
            // InternalSCTX.g:3662:1: (lv_operator_5_0= ruleAssignOperator )
            // InternalSCTX.g:3663:3: lv_operator_5_0= ruleAssignOperator
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAssignmentAccess().getOperatorAssignOperatorEnumRuleCall_3_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_22);
            lv_operator_5_0=ruleAssignOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAssignmentRule());
              	        }
                     		set(
                     			current, 
                     			"operator",
                      		lv_operator_5_0, 
                      		"de.cau.cs.kieler.kexpressions.keffects.KEffects.AssignOperator");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:3679:2: ( (lv_expression_6_0= ruleExpression ) )
            // InternalSCTX.g:3680:1: (lv_expression_6_0= ruleExpression )
            {
            // InternalSCTX.g:3680:1: (lv_expression_6_0= ruleExpression )
            // InternalSCTX.g:3681:3: lv_expression_6_0= ruleExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAssignmentAccess().getExpressionExpressionParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_expression_6_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAssignmentRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_6_0, 
                      		"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAssignment"


    // $ANTLR start "entryRuleSubReferenceAssignment"
    // InternalSCTX.g:3705:1: entryRuleSubReferenceAssignment returns [EObject current=null] : iv_ruleSubReferenceAssignment= ruleSubReferenceAssignment EOF ;
    public final EObject entryRuleSubReferenceAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSubReferenceAssignment = null;


        try {
            // InternalSCTX.g:3706:2: (iv_ruleSubReferenceAssignment= ruleSubReferenceAssignment EOF )
            // InternalSCTX.g:3707:2: iv_ruleSubReferenceAssignment= ruleSubReferenceAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSubReferenceAssignmentRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSubReferenceAssignment=ruleSubReferenceAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSubReferenceAssignment; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSubReferenceAssignment"


    // $ANTLR start "ruleSubReferenceAssignment"
    // InternalSCTX.g:3714:1: ruleSubReferenceAssignment returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) ) )? ( (lv_operator_7_0= ruleAssignOperator ) ) ( (lv_expression_8_0= ruleExpression ) ) ) ;
    public final EObject ruleSubReferenceAssignment() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_indices_3_0 = null;

        EObject lv_subReference_6_0 = null;

        Enumerator lv_operator_7_0 = null;

        EObject lv_expression_8_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:3717:28: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) ) )? ( (lv_operator_7_0= ruleAssignOperator ) ) ( (lv_expression_8_0= ruleExpression ) ) ) )
            // InternalSCTX.g:3718:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) ) )? ( (lv_operator_7_0= ruleAssignOperator ) ) ( (lv_expression_8_0= ruleExpression ) ) )
            {
            // InternalSCTX.g:3718:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) ) )? ( (lv_operator_7_0= ruleAssignOperator ) ) ( (lv_expression_8_0= ruleExpression ) ) )
            // InternalSCTX.g:3718:2: ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) ) )? ( (lv_operator_7_0= ruleAssignOperator ) ) ( (lv_expression_8_0= ruleExpression ) )
            {
            // InternalSCTX.g:3718:2: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop113:
            do {
                int alt113=2;
                int LA113_0 = input.LA(1);

                if ( (LA113_0==RULE_COMMENT_ANNOTATION||LA113_0==71) ) {
                    alt113=1;
                }


                switch (alt113) {
            	case 1 :
            	    // InternalSCTX.g:3719:1: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:3719:1: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:3720:3: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getSubReferenceAssignmentAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_65);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getSubReferenceAssignmentRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop113;
                }
            } while (true);

            // InternalSCTX.g:3736:3: ( ( rulePrimeID ) )
            // InternalSCTX.g:3737:1: ( rulePrimeID )
            {
            // InternalSCTX.g:3737:1: ( rulePrimeID )
            // InternalSCTX.g:3738:3: rulePrimeID
            {
            if ( state.backtracking==0 ) {
               
              		  /* */ 
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getSubReferenceAssignmentRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getSubReferenceAssignmentAccess().getValuedObjectValuedObjectCrossReference_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_74);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:3754:2: (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )*
            loop114:
            do {
                int alt114=2;
                int LA114_0 = input.LA(1);

                if ( (LA114_0==31) ) {
                    alt114=1;
                }


                switch (alt114) {
            	case 1 :
            	    // InternalSCTX.g:3754:4: otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']'
            	    {
            	    otherlv_2=(Token)match(input,31,FollowSets000.FOLLOW_22); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_2, grammarAccess.getSubReferenceAssignmentAccess().getLeftSquareBracketKeyword_2_0());
            	          
            	    }
            	    // InternalSCTX.g:3758:1: ( (lv_indices_3_0= ruleExpression ) )
            	    // InternalSCTX.g:3759:1: (lv_indices_3_0= ruleExpression )
            	    {
            	    // InternalSCTX.g:3759:1: (lv_indices_3_0= ruleExpression )
            	    // InternalSCTX.g:3760:3: lv_indices_3_0= ruleExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getSubReferenceAssignmentAccess().getIndicesExpressionParserRuleCall_2_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_28);
            	    lv_indices_3_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getSubReferenceAssignmentRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"indices",
            	              		lv_indices_3_0, 
            	              		"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    otherlv_4=(Token)match(input,32,FollowSets000.FOLLOW_74); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_4, grammarAccess.getSubReferenceAssignmentAccess().getRightSquareBracketKeyword_2_2());
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop114;
                }
            } while (true);

            // InternalSCTX.g:3780:3: (otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) ) )?
            int alt115=2;
            int LA115_0 = input.LA(1);

            if ( (LA115_0==58) ) {
                alt115=1;
            }
            switch (alt115) {
                case 1 :
                    // InternalSCTX.g:3780:5: otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) )
                    {
                    otherlv_5=(Token)match(input,58,FollowSets000.FOLLOW_75); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getSubReferenceAssignmentAccess().getFullStopKeyword_3_0());
                          
                    }
                    // InternalSCTX.g:3784:1: ( (lv_subReference_6_0= ruleValuedObjectReference ) )
                    // InternalSCTX.g:3785:1: (lv_subReference_6_0= ruleValuedObjectReference )
                    {
                    // InternalSCTX.g:3785:1: (lv_subReference_6_0= ruleValuedObjectReference )
                    // InternalSCTX.g:3786:3: lv_subReference_6_0= ruleValuedObjectReference
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getSubReferenceAssignmentAccess().getSubReferenceValuedObjectReferenceParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_73);
                    lv_subReference_6_0=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSubReferenceAssignmentRule());
                      	        }
                             		set(
                             			current, 
                             			"subReference",
                              		lv_subReference_6_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:3802:4: ( (lv_operator_7_0= ruleAssignOperator ) )
            // InternalSCTX.g:3803:1: (lv_operator_7_0= ruleAssignOperator )
            {
            // InternalSCTX.g:3803:1: (lv_operator_7_0= ruleAssignOperator )
            // InternalSCTX.g:3804:3: lv_operator_7_0= ruleAssignOperator
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getSubReferenceAssignmentAccess().getOperatorAssignOperatorEnumRuleCall_4_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_22);
            lv_operator_7_0=ruleAssignOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSubReferenceAssignmentRule());
              	        }
                     		set(
                     			current, 
                     			"operator",
                      		lv_operator_7_0, 
                      		"de.cau.cs.kieler.kexpressions.keffects.KEffects.AssignOperator");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:3820:2: ( (lv_expression_8_0= ruleExpression ) )
            // InternalSCTX.g:3821:1: (lv_expression_8_0= ruleExpression )
            {
            // InternalSCTX.g:3821:1: (lv_expression_8_0= ruleExpression )
            // InternalSCTX.g:3822:3: lv_expression_8_0= ruleExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getSubReferenceAssignmentAccess().getExpressionExpressionParserRuleCall_5_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_expression_8_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSubReferenceAssignmentRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_8_0, 
                      		"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSubReferenceAssignment"


    // $ANTLR start "entryRulePostfixEffect"
    // InternalSCTX.g:3846:1: entryRulePostfixEffect returns [EObject current=null] : iv_rulePostfixEffect= rulePostfixEffect EOF ;
    public final EObject entryRulePostfixEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePostfixEffect = null;


        try {
            // InternalSCTX.g:3847:2: (iv_rulePostfixEffect= rulePostfixEffect EOF )
            // InternalSCTX.g:3848:2: iv_rulePostfixEffect= rulePostfixEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPostfixEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePostfixEffect=rulePostfixEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePostfixEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePostfixEffect"


    // $ANTLR start "rulePostfixEffect"
    // InternalSCTX.g:3855:1: rulePostfixEffect returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* ( (lv_operator_5_0= rulePostfixOperator ) ) ) ;
    public final EObject rulePostfixEffect() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_indices_3_0 = null;

        Enumerator lv_operator_5_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:3858:28: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* ( (lv_operator_5_0= rulePostfixOperator ) ) ) )
            // InternalSCTX.g:3859:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* ( (lv_operator_5_0= rulePostfixOperator ) ) )
            {
            // InternalSCTX.g:3859:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* ( (lv_operator_5_0= rulePostfixOperator ) ) )
            // InternalSCTX.g:3859:2: ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* ( (lv_operator_5_0= rulePostfixOperator ) )
            {
            // InternalSCTX.g:3859:2: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop116:
            do {
                int alt116=2;
                int LA116_0 = input.LA(1);

                if ( (LA116_0==RULE_COMMENT_ANNOTATION||LA116_0==71) ) {
                    alt116=1;
                }


                switch (alt116) {
            	case 1 :
            	    // InternalSCTX.g:3860:1: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:3860:1: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:3861:3: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getPostfixEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_65);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getPostfixEffectRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop116;
                }
            } while (true);

            // InternalSCTX.g:3877:3: ( ( rulePrimeID ) )
            // InternalSCTX.g:3878:1: ( rulePrimeID )
            {
            // InternalSCTX.g:3878:1: ( rulePrimeID )
            // InternalSCTX.g:3879:3: rulePrimeID
            {
            if ( state.backtracking==0 ) {
               
              		  /* */ 
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getPostfixEffectRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPostfixEffectAccess().getValuedObjectValuedObjectCrossReference_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_76);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:3895:2: (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )*
            loop117:
            do {
                int alt117=2;
                int LA117_0 = input.LA(1);

                if ( (LA117_0==31) ) {
                    alt117=1;
                }


                switch (alt117) {
            	case 1 :
            	    // InternalSCTX.g:3895:4: otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']'
            	    {
            	    otherlv_2=(Token)match(input,31,FollowSets000.FOLLOW_22); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_2, grammarAccess.getPostfixEffectAccess().getLeftSquareBracketKeyword_2_0());
            	          
            	    }
            	    // InternalSCTX.g:3899:1: ( (lv_indices_3_0= ruleExpression ) )
            	    // InternalSCTX.g:3900:1: (lv_indices_3_0= ruleExpression )
            	    {
            	    // InternalSCTX.g:3900:1: (lv_indices_3_0= ruleExpression )
            	    // InternalSCTX.g:3901:3: lv_indices_3_0= ruleExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getPostfixEffectAccess().getIndicesExpressionParserRuleCall_2_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_28);
            	    lv_indices_3_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getPostfixEffectRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"indices",
            	              		lv_indices_3_0, 
            	              		"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    otherlv_4=(Token)match(input,32,FollowSets000.FOLLOW_76); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_4, grammarAccess.getPostfixEffectAccess().getRightSquareBracketKeyword_2_2());
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop117;
                }
            } while (true);

            // InternalSCTX.g:3921:3: ( (lv_operator_5_0= rulePostfixOperator ) )
            // InternalSCTX.g:3922:1: (lv_operator_5_0= rulePostfixOperator )
            {
            // InternalSCTX.g:3922:1: (lv_operator_5_0= rulePostfixOperator )
            // InternalSCTX.g:3923:3: lv_operator_5_0= rulePostfixOperator
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPostfixEffectAccess().getOperatorPostfixOperatorEnumRuleCall_3_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_operator_5_0=rulePostfixOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPostfixEffectRule());
              	        }
                     		set(
                     			current, 
                     			"operator",
                      		lv_operator_5_0, 
                      		"de.cau.cs.kieler.kexpressions.keffects.KEffects.PostfixOperator");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePostfixEffect"


    // $ANTLR start "entryRuleHostcodeEffect"
    // InternalSCTX.g:3947:1: entryRuleHostcodeEffect returns [EObject current=null] : iv_ruleHostcodeEffect= ruleHostcodeEffect EOF ;
    public final EObject entryRuleHostcodeEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleHostcodeEffect = null;


        try {
            // InternalSCTX.g:3948:2: (iv_ruleHostcodeEffect= ruleHostcodeEffect EOF )
            // InternalSCTX.g:3949:2: iv_ruleHostcodeEffect= ruleHostcodeEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getHostcodeEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleHostcodeEffect=ruleHostcodeEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleHostcodeEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleHostcodeEffect"


    // $ANTLR start "ruleHostcodeEffect"
    // InternalSCTX.g:3956:1: ruleHostcodeEffect returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) ) ;
    public final EObject ruleHostcodeEffect() throws RecognitionException {
        EObject current = null;

        Token lv_text_1_0=null;
        EObject lv_annotations_0_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:3959:28: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) ) )
            // InternalSCTX.g:3960:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) )
            {
            // InternalSCTX.g:3960:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) )
            // InternalSCTX.g:3960:2: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) )
            {
            // InternalSCTX.g:3960:2: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop118:
            do {
                int alt118=2;
                int LA118_0 = input.LA(1);

                if ( (LA118_0==RULE_COMMENT_ANNOTATION||LA118_0==71) ) {
                    alt118=1;
                }


                switch (alt118) {
            	case 1 :
            	    // InternalSCTX.g:3961:1: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:3961:1: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:3962:3: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getHostcodeEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_77);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getHostcodeEffectRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop118;
                }
            } while (true);

            // InternalSCTX.g:3978:3: ( (lv_text_1_0= RULE_HOSTCODE ) )
            // InternalSCTX.g:3979:1: (lv_text_1_0= RULE_HOSTCODE )
            {
            // InternalSCTX.g:3979:1: (lv_text_1_0= RULE_HOSTCODE )
            // InternalSCTX.g:3980:3: lv_text_1_0= RULE_HOSTCODE
            {
            lv_text_1_0=(Token)match(input,RULE_HOSTCODE,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_text_1_0, grammarAccess.getHostcodeEffectAccess().getTextHOSTCODETerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getHostcodeEffectRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"text",
                      		lv_text_1_0, 
                      		"de.cau.cs.kieler.kexpressions.KExpressions.HOSTCODE");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleHostcodeEffect"


    // $ANTLR start "entryRuleReferenceCallEffect"
    // InternalSCTX.g:4004:1: entryRuleReferenceCallEffect returns [EObject current=null] : iv_ruleReferenceCallEffect= ruleReferenceCallEffect EOF ;
    public final EObject entryRuleReferenceCallEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReferenceCallEffect = null;


        try {
            // InternalSCTX.g:4005:2: (iv_ruleReferenceCallEffect= ruleReferenceCallEffect EOF )
            // InternalSCTX.g:4006:2: iv_ruleReferenceCallEffect= ruleReferenceCallEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReferenceCallEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleReferenceCallEffect=ruleReferenceCallEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReferenceCallEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReferenceCallEffect"


    // $ANTLR start "ruleReferenceCallEffect"
    // InternalSCTX.g:4013:1: ruleReferenceCallEffect returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) ) ;
    public final EObject ruleReferenceCallEffect() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_parameters_3_0 = null;

        EObject lv_parameters_5_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:4016:28: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) ) )
            // InternalSCTX.g:4017:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) )
            {
            // InternalSCTX.g:4017:1: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) )
            // InternalSCTX.g:4017:2: ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' )
            {
            // InternalSCTX.g:4017:2: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop119:
            do {
                int alt119=2;
                int LA119_0 = input.LA(1);

                if ( (LA119_0==RULE_COMMENT_ANNOTATION||LA119_0==71) ) {
                    alt119=1;
                }


                switch (alt119) {
            	case 1 :
            	    // InternalSCTX.g:4018:1: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:4018:1: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:4019:3: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_65);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getReferenceCallEffectRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop119;
                }
            } while (true);

            // InternalSCTX.g:4035:3: ( ( rulePrimeID ) )
            // InternalSCTX.g:4036:1: ( rulePrimeID )
            {
            // InternalSCTX.g:4036:1: ( rulePrimeID )
            // InternalSCTX.g:4037:3: rulePrimeID
            {
            if ( state.backtracking==0 ) {
               
              		  /* */ 
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getReferenceCallEffectRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getValuedObjectValuedObjectCrossReference_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_78);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:4053:2: ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' )
            int alt121=2;
            int LA121_0 = input.LA(1);

            if ( (LA121_0==25) ) {
                alt121=1;
            }
            else if ( (LA121_0==59) ) {
                alt121=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 121, 0, input);

                throw nvae;
            }
            switch (alt121) {
                case 1 :
                    // InternalSCTX.g:4053:3: (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' )
                    {
                    // InternalSCTX.g:4053:3: (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' )
                    // InternalSCTX.g:4053:5: otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')'
                    {
                    otherlv_2=(Token)match(input,25,FollowSets000.FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getReferenceCallEffectAccess().getLeftParenthesisKeyword_2_0_0());
                          
                    }
                    // InternalSCTX.g:4057:1: ( (lv_parameters_3_0= ruleParameter ) )
                    // InternalSCTX.g:4058:1: (lv_parameters_3_0= ruleParameter )
                    {
                    // InternalSCTX.g:4058:1: (lv_parameters_3_0= ruleParameter )
                    // InternalSCTX.g:4059:3: lv_parameters_3_0= ruleParameter
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getParametersParameterParserRuleCall_2_0_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_23);
                    lv_parameters_3_0=ruleParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getReferenceCallEffectRule());
                      	        }
                             		add(
                             			current, 
                             			"parameters",
                              		lv_parameters_3_0, 
                              		"de.cau.cs.kieler.sccharts.text.SCTX.Parameter");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:4075:2: (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )*
                    loop120:
                    do {
                        int alt120=2;
                        int LA120_0 = input.LA(1);

                        if ( (LA120_0==26) ) {
                            alt120=1;
                        }


                        switch (alt120) {
                    	case 1 :
                    	    // InternalSCTX.g:4075:4: otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) )
                    	    {
                    	    otherlv_4=(Token)match(input,26,FollowSets000.FOLLOW_22); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getReferenceCallEffectAccess().getCommaKeyword_2_0_2_0());
                    	          
                    	    }
                    	    // InternalSCTX.g:4079:1: ( (lv_parameters_5_0= ruleParameter ) )
                    	    // InternalSCTX.g:4080:1: (lv_parameters_5_0= ruleParameter )
                    	    {
                    	    // InternalSCTX.g:4080:1: (lv_parameters_5_0= ruleParameter )
                    	    // InternalSCTX.g:4081:3: lv_parameters_5_0= ruleParameter
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getParametersParameterParserRuleCall_2_0_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_23);
                    	    lv_parameters_5_0=ruleParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getReferenceCallEffectRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"parameters",
                    	              		lv_parameters_5_0, 
                    	              		"de.cau.cs.kieler.sccharts.text.SCTX.Parameter");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop120;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,27,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getReferenceCallEffectAccess().getRightParenthesisKeyword_2_0_3());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:4102:7: otherlv_7= '()'
                    {
                    otherlv_7=(Token)match(input,59,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getReferenceCallEffectAccess().getLeftParenthesisRightParenthesisKeyword_2_1());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReferenceCallEffect"


    // $ANTLR start "entryRuleFunctionCallEffect"
    // InternalSCTX.g:4114:1: entryRuleFunctionCallEffect returns [EObject current=null] : iv_ruleFunctionCallEffect= ruleFunctionCallEffect EOF ;
    public final EObject entryRuleFunctionCallEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionCallEffect = null;


        try {
            // InternalSCTX.g:4115:2: (iv_ruleFunctionCallEffect= ruleFunctionCallEffect EOF )
            // InternalSCTX.g:4116:2: iv_ruleFunctionCallEffect= ruleFunctionCallEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionCallEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFunctionCallEffect=ruleFunctionCallEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionCallEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionCallEffect"


    // $ANTLR start "ruleFunctionCallEffect"
    // InternalSCTX.g:4123:1: ruleFunctionCallEffect returns [EObject current=null] : ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) ) | (otherlv_9= '<' ( (lv_functionName_10_0= RULE_ID ) ) ( (otherlv_11= '(' ( (lv_parameters_12_0= ruleParameter ) ) (otherlv_13= ',' ( (lv_parameters_14_0= ruleParameter ) ) )* otherlv_15= ')' ) | otherlv_16= '()' ) otherlv_17= '>' ) ) ;
    public final EObject ruleFunctionCallEffect() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_functionName_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token lv_functionName_10_0=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_parameters_4_0 = null;

        EObject lv_parameters_6_0 = null;

        EObject lv_parameters_12_0 = null;

        EObject lv_parameters_14_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:4126:28: ( ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) ) | (otherlv_9= '<' ( (lv_functionName_10_0= RULE_ID ) ) ( (otherlv_11= '(' ( (lv_parameters_12_0= ruleParameter ) ) (otherlv_13= ',' ( (lv_parameters_14_0= ruleParameter ) ) )* otherlv_15= ')' ) | otherlv_16= '()' ) otherlv_17= '>' ) ) )
            // InternalSCTX.g:4127:1: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) ) | (otherlv_9= '<' ( (lv_functionName_10_0= RULE_ID ) ) ( (otherlv_11= '(' ( (lv_parameters_12_0= ruleParameter ) ) (otherlv_13= ',' ( (lv_parameters_14_0= ruleParameter ) ) )* otherlv_15= ')' ) | otherlv_16= '()' ) otherlv_17= '>' ) )
            {
            // InternalSCTX.g:4127:1: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) ) | (otherlv_9= '<' ( (lv_functionName_10_0= RULE_ID ) ) ( (otherlv_11= '(' ( (lv_parameters_12_0= ruleParameter ) ) (otherlv_13= ',' ( (lv_parameters_14_0= ruleParameter ) ) )* otherlv_15= ')' ) | otherlv_16= '()' ) otherlv_17= '>' ) )
            int alt127=2;
            int LA127_0 = input.LA(1);

            if ( (LA127_0==RULE_COMMENT_ANNOTATION||LA127_0==55||LA127_0==71) ) {
                alt127=1;
            }
            else if ( (LA127_0==60) ) {
                alt127=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 127, 0, input);

                throw nvae;
            }
            switch (alt127) {
                case 1 :
                    // InternalSCTX.g:4127:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) )
                    {
                    // InternalSCTX.g:4127:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) )
                    // InternalSCTX.g:4127:3: ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) )
                    {
                    // InternalSCTX.g:4127:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
                    loop122:
                    do {
                        int alt122=2;
                        int LA122_0 = input.LA(1);

                        if ( (LA122_0==RULE_COMMENT_ANNOTATION||LA122_0==71) ) {
                            alt122=1;
                        }


                        switch (alt122) {
                    	case 1 :
                    	    // InternalSCTX.g:4128:1: (lv_annotations_0_0= ruleAnnotation )
                    	    {
                    	    // InternalSCTX.g:4128:1: (lv_annotations_0_0= ruleAnnotation )
                    	    // InternalSCTX.g:4129:3: lv_annotations_0_0= ruleAnnotation
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getFunctionCallEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_79);
                    	    lv_annotations_0_0=ruleAnnotation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getFunctionCallEffectRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"annotations",
                    	              		lv_annotations_0_0, 
                    	              		"de.cau.cs.kieler.annotations.Annotations.Annotation");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop122;
                        }
                    } while (true);

                    // InternalSCTX.g:4145:3: (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) )
                    // InternalSCTX.g:4145:5: otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' )
                    {
                    otherlv_1=(Token)match(input,55,FollowSets000.FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getFunctionCallEffectAccess().getExternKeyword_0_1_0());
                          
                    }
                    // InternalSCTX.g:4149:1: ( (lv_functionName_2_0= RULE_ID ) )
                    // InternalSCTX.g:4150:1: (lv_functionName_2_0= RULE_ID )
                    {
                    // InternalSCTX.g:4150:1: (lv_functionName_2_0= RULE_ID )
                    // InternalSCTX.g:4151:3: lv_functionName_2_0= RULE_ID
                    {
                    lv_functionName_2_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_78); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_functionName_2_0, grammarAccess.getFunctionCallEffectAccess().getFunctionNameIDTerminalRuleCall_0_1_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getFunctionCallEffectRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"functionName",
                              		lv_functionName_2_0, 
                              		"org.eclipse.xtext.common.Terminals.ID");
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:4167:2: ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' )
                    int alt124=2;
                    int LA124_0 = input.LA(1);

                    if ( (LA124_0==25) ) {
                        alt124=1;
                    }
                    else if ( (LA124_0==59) ) {
                        alt124=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 124, 0, input);

                        throw nvae;
                    }
                    switch (alt124) {
                        case 1 :
                            // InternalSCTX.g:4167:3: (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' )
                            {
                            // InternalSCTX.g:4167:3: (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' )
                            // InternalSCTX.g:4167:5: otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')'
                            {
                            otherlv_3=(Token)match(input,25,FollowSets000.FOLLOW_22); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_3, grammarAccess.getFunctionCallEffectAccess().getLeftParenthesisKeyword_0_1_2_0_0());
                                  
                            }
                            // InternalSCTX.g:4171:1: ( (lv_parameters_4_0= ruleParameter ) )
                            // InternalSCTX.g:4172:1: (lv_parameters_4_0= ruleParameter )
                            {
                            // InternalSCTX.g:4172:1: (lv_parameters_4_0= ruleParameter )
                            // InternalSCTX.g:4173:3: lv_parameters_4_0= ruleParameter
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getFunctionCallEffectAccess().getParametersParameterParserRuleCall_0_1_2_0_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_23);
                            lv_parameters_4_0=ruleParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getFunctionCallEffectRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"parameters",
                                      		lv_parameters_4_0, 
                                      		"de.cau.cs.kieler.sccharts.text.SCTX.Parameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalSCTX.g:4189:2: (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )*
                            loop123:
                            do {
                                int alt123=2;
                                int LA123_0 = input.LA(1);

                                if ( (LA123_0==26) ) {
                                    alt123=1;
                                }


                                switch (alt123) {
                            	case 1 :
                            	    // InternalSCTX.g:4189:4: otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) )
                            	    {
                            	    otherlv_5=(Token)match(input,26,FollowSets000.FOLLOW_22); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_5, grammarAccess.getFunctionCallEffectAccess().getCommaKeyword_0_1_2_0_2_0());
                            	          
                            	    }
                            	    // InternalSCTX.g:4193:1: ( (lv_parameters_6_0= ruleParameter ) )
                            	    // InternalSCTX.g:4194:1: (lv_parameters_6_0= ruleParameter )
                            	    {
                            	    // InternalSCTX.g:4194:1: (lv_parameters_6_0= ruleParameter )
                            	    // InternalSCTX.g:4195:3: lv_parameters_6_0= ruleParameter
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getFunctionCallEffectAccess().getParametersParameterParserRuleCall_0_1_2_0_2_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_23);
                            	    lv_parameters_6_0=ruleParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getFunctionCallEffectRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"parameters",
                            	              		lv_parameters_6_0, 
                            	              		"de.cau.cs.kieler.sccharts.text.SCTX.Parameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop123;
                                }
                            } while (true);

                            otherlv_7=(Token)match(input,27,FollowSets000.FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_7, grammarAccess.getFunctionCallEffectAccess().getRightParenthesisKeyword_0_1_2_0_3());
                                  
                            }

                            }


                            }
                            break;
                        case 2 :
                            // InternalSCTX.g:4216:7: otherlv_8= '()'
                            {
                            otherlv_8=(Token)match(input,59,FollowSets000.FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_8, grammarAccess.getFunctionCallEffectAccess().getLeftParenthesisRightParenthesisKeyword_0_1_2_1());
                                  
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:4221:6: (otherlv_9= '<' ( (lv_functionName_10_0= RULE_ID ) ) ( (otherlv_11= '(' ( (lv_parameters_12_0= ruleParameter ) ) (otherlv_13= ',' ( (lv_parameters_14_0= ruleParameter ) ) )* otherlv_15= ')' ) | otherlv_16= '()' ) otherlv_17= '>' )
                    {
                    // InternalSCTX.g:4221:6: (otherlv_9= '<' ( (lv_functionName_10_0= RULE_ID ) ) ( (otherlv_11= '(' ( (lv_parameters_12_0= ruleParameter ) ) (otherlv_13= ',' ( (lv_parameters_14_0= ruleParameter ) ) )* otherlv_15= ')' ) | otherlv_16= '()' ) otherlv_17= '>' )
                    // InternalSCTX.g:4221:8: otherlv_9= '<' ( (lv_functionName_10_0= RULE_ID ) ) ( (otherlv_11= '(' ( (lv_parameters_12_0= ruleParameter ) ) (otherlv_13= ',' ( (lv_parameters_14_0= ruleParameter ) ) )* otherlv_15= ')' ) | otherlv_16= '()' ) otherlv_17= '>'
                    {
                    otherlv_9=(Token)match(input,60,FollowSets000.FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getFunctionCallEffectAccess().getLessThanSignKeyword_1_0());
                          
                    }
                    // InternalSCTX.g:4225:1: ( (lv_functionName_10_0= RULE_ID ) )
                    // InternalSCTX.g:4226:1: (lv_functionName_10_0= RULE_ID )
                    {
                    // InternalSCTX.g:4226:1: (lv_functionName_10_0= RULE_ID )
                    // InternalSCTX.g:4227:3: lv_functionName_10_0= RULE_ID
                    {
                    lv_functionName_10_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_78); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_functionName_10_0, grammarAccess.getFunctionCallEffectAccess().getFunctionNameIDTerminalRuleCall_1_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getFunctionCallEffectRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"functionName",
                              		lv_functionName_10_0, 
                              		"org.eclipse.xtext.common.Terminals.ID");
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:4243:2: ( (otherlv_11= '(' ( (lv_parameters_12_0= ruleParameter ) ) (otherlv_13= ',' ( (lv_parameters_14_0= ruleParameter ) ) )* otherlv_15= ')' ) | otherlv_16= '()' )
                    int alt126=2;
                    int LA126_0 = input.LA(1);

                    if ( (LA126_0==25) ) {
                        alt126=1;
                    }
                    else if ( (LA126_0==59) ) {
                        alt126=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 126, 0, input);

                        throw nvae;
                    }
                    switch (alt126) {
                        case 1 :
                            // InternalSCTX.g:4243:3: (otherlv_11= '(' ( (lv_parameters_12_0= ruleParameter ) ) (otherlv_13= ',' ( (lv_parameters_14_0= ruleParameter ) ) )* otherlv_15= ')' )
                            {
                            // InternalSCTX.g:4243:3: (otherlv_11= '(' ( (lv_parameters_12_0= ruleParameter ) ) (otherlv_13= ',' ( (lv_parameters_14_0= ruleParameter ) ) )* otherlv_15= ')' )
                            // InternalSCTX.g:4243:5: otherlv_11= '(' ( (lv_parameters_12_0= ruleParameter ) ) (otherlv_13= ',' ( (lv_parameters_14_0= ruleParameter ) ) )* otherlv_15= ')'
                            {
                            otherlv_11=(Token)match(input,25,FollowSets000.FOLLOW_22); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_11, grammarAccess.getFunctionCallEffectAccess().getLeftParenthesisKeyword_1_2_0_0());
                                  
                            }
                            // InternalSCTX.g:4247:1: ( (lv_parameters_12_0= ruleParameter ) )
                            // InternalSCTX.g:4248:1: (lv_parameters_12_0= ruleParameter )
                            {
                            // InternalSCTX.g:4248:1: (lv_parameters_12_0= ruleParameter )
                            // InternalSCTX.g:4249:3: lv_parameters_12_0= ruleParameter
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getFunctionCallEffectAccess().getParametersParameterParserRuleCall_1_2_0_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_23);
                            lv_parameters_12_0=ruleParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getFunctionCallEffectRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"parameters",
                                      		lv_parameters_12_0, 
                                      		"de.cau.cs.kieler.sccharts.text.SCTX.Parameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalSCTX.g:4265:2: (otherlv_13= ',' ( (lv_parameters_14_0= ruleParameter ) ) )*
                            loop125:
                            do {
                                int alt125=2;
                                int LA125_0 = input.LA(1);

                                if ( (LA125_0==26) ) {
                                    alt125=1;
                                }


                                switch (alt125) {
                            	case 1 :
                            	    // InternalSCTX.g:4265:4: otherlv_13= ',' ( (lv_parameters_14_0= ruleParameter ) )
                            	    {
                            	    otherlv_13=(Token)match(input,26,FollowSets000.FOLLOW_22); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_13, grammarAccess.getFunctionCallEffectAccess().getCommaKeyword_1_2_0_2_0());
                            	          
                            	    }
                            	    // InternalSCTX.g:4269:1: ( (lv_parameters_14_0= ruleParameter ) )
                            	    // InternalSCTX.g:4270:1: (lv_parameters_14_0= ruleParameter )
                            	    {
                            	    // InternalSCTX.g:4270:1: (lv_parameters_14_0= ruleParameter )
                            	    // InternalSCTX.g:4271:3: lv_parameters_14_0= ruleParameter
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getFunctionCallEffectAccess().getParametersParameterParserRuleCall_1_2_0_2_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_23);
                            	    lv_parameters_14_0=ruleParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getFunctionCallEffectRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"parameters",
                            	              		lv_parameters_14_0, 
                            	              		"de.cau.cs.kieler.sccharts.text.SCTX.Parameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop125;
                                }
                            } while (true);

                            otherlv_15=(Token)match(input,27,FollowSets000.FOLLOW_80); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_15, grammarAccess.getFunctionCallEffectAccess().getRightParenthesisKeyword_1_2_0_3());
                                  
                            }

                            }


                            }
                            break;
                        case 2 :
                            // InternalSCTX.g:4292:7: otherlv_16= '()'
                            {
                            otherlv_16=(Token)match(input,59,FollowSets000.FOLLOW_80); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_16, grammarAccess.getFunctionCallEffectAccess().getLeftParenthesisRightParenthesisKeyword_1_2_1());
                                  
                            }

                            }
                            break;

                    }

                    otherlv_17=(Token)match(input,61,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_17, grammarAccess.getFunctionCallEffectAccess().getGreaterThanSignKeyword_1_3());
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionCallEffect"


    // $ANTLR start "entryRuleExpression"
    // InternalSCTX.g:4310:1: entryRuleExpression returns [EObject current=null] : iv_ruleExpression= ruleExpression EOF ;
    public final EObject entryRuleExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpression = null;


        try {
            // InternalSCTX.g:4311:2: (iv_ruleExpression= ruleExpression EOF )
            // InternalSCTX.g:4312:2: iv_ruleExpression= ruleExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleExpression=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpression"


    // $ANTLR start "ruleExpression"
    // InternalSCTX.g:4319:1: ruleExpression returns [EObject current=null] : (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression ) ;
    public final EObject ruleExpression() throws RecognitionException {
        EObject current = null;

        EObject this_BoolExpression_0 = null;

        EObject this_ValuedExpression_1 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:4322:28: ( (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression ) )
            // InternalSCTX.g:4323:1: (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression )
            {
            // InternalSCTX.g:4323:1: (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression )
            int alt128=2;
            alt128 = dfa128.predict(input);
            switch (alt128) {
                case 1 :
                    // InternalSCTX.g:4324:2: this_BoolExpression_0= ruleBoolExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getExpressionAccess().getBoolExpressionParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_BoolExpression_0=ruleBoolExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_BoolExpression_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:4337:2: this_ValuedExpression_1= ruleValuedExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getExpressionAccess().getValuedExpressionParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedExpression_1=ruleValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ValuedExpression_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpression"


    // $ANTLR start "entryRuleBoolExpression"
    // InternalSCTX.g:4356:1: entryRuleBoolExpression returns [EObject current=null] : iv_ruleBoolExpression= ruleBoolExpression EOF ;
    public final EObject entryRuleBoolExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBoolExpression = null;


        try {
            // InternalSCTX.g:4357:2: (iv_ruleBoolExpression= ruleBoolExpression EOF )
            // InternalSCTX.g:4358:2: iv_ruleBoolExpression= ruleBoolExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBoolExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBoolExpression=ruleBoolExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBoolExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBoolExpression"


    // $ANTLR start "ruleBoolExpression"
    // InternalSCTX.g:4365:1: ruleBoolExpression returns [EObject current=null] : this_LogicalOrExpression_0= ruleLogicalOrExpression ;
    public final EObject ruleBoolExpression() throws RecognitionException {
        EObject current = null;

        EObject this_LogicalOrExpression_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:4368:28: (this_LogicalOrExpression_0= ruleLogicalOrExpression )
            // InternalSCTX.g:4370:2: this_LogicalOrExpression_0= ruleLogicalOrExpression
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getBoolExpressionAccess().getLogicalOrExpressionParserRuleCall()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_LogicalOrExpression_0=ruleLogicalOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_LogicalOrExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBoolExpression"


    // $ANTLR start "entryRuleLogicalOrExpression"
    // InternalSCTX.g:4389:1: entryRuleLogicalOrExpression returns [EObject current=null] : iv_ruleLogicalOrExpression= ruleLogicalOrExpression EOF ;
    public final EObject entryRuleLogicalOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLogicalOrExpression = null;


        try {
            // InternalSCTX.g:4390:2: (iv_ruleLogicalOrExpression= ruleLogicalOrExpression EOF )
            // InternalSCTX.g:4391:2: iv_ruleLogicalOrExpression= ruleLogicalOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLogicalOrExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLogicalOrExpression=ruleLogicalOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLogicalOrExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLogicalOrExpression"


    // $ANTLR start "ruleLogicalOrExpression"
    // InternalSCTX.g:4398:1: ruleLogicalOrExpression returns [EObject current=null] : (this_LogicalAndExpression_0= ruleLogicalAndExpression ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )? ) ;
    public final EObject ruleLogicalOrExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_LogicalAndExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:4401:28: ( (this_LogicalAndExpression_0= ruleLogicalAndExpression ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )? ) )
            // InternalSCTX.g:4402:1: (this_LogicalAndExpression_0= ruleLogicalAndExpression ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )? )
            {
            // InternalSCTX.g:4402:1: (this_LogicalAndExpression_0= ruleLogicalAndExpression ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )? )
            // InternalSCTX.g:4403:2: this_LogicalAndExpression_0= ruleLogicalAndExpression ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getLogicalOrExpressionAccess().getLogicalAndExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_81);
            this_LogicalAndExpression_0=ruleLogicalAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_LogicalAndExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalSCTX.g:4414:1: ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )?
            int alt130=2;
            int LA130_0 = input.LA(1);

            if ( (LA130_0==62) ) {
                alt130=1;
            }
            switch (alt130) {
                case 1 :
                    // InternalSCTX.g:4414:2: () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )*
                    {
                    // InternalSCTX.g:4414:2: ()
                    // InternalSCTX.g:4415:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndAdd(
                                  grammarAccess.getLogicalOrExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                                  current);
                          
                    }

                    }

                    // InternalSCTX.g:4423:2: ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) )
                    // InternalSCTX.g:4423:3: ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) )
                    {
                    // InternalSCTX.g:4423:3: ( (lv_operator_2_0= ruleLogicalOrOperator ) )
                    // InternalSCTX.g:4424:1: (lv_operator_2_0= ruleLogicalOrOperator )
                    {
                    // InternalSCTX.g:4424:1: (lv_operator_2_0= ruleLogicalOrOperator )
                    // InternalSCTX.g:4425:3: lv_operator_2_0= ruleLogicalOrOperator
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getLogicalOrExpressionAccess().getOperatorLogicalOrOperatorEnumRuleCall_1_1_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_34);
                    lv_operator_2_0=ruleLogicalOrOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getLogicalOrExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"operator",
                              		lv_operator_2_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.LogicalOrOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:4441:2: ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) )
                    // InternalSCTX.g:4442:1: (lv_subExpressions_3_0= ruleLogicalAndExpression )
                    {
                    // InternalSCTX.g:4442:1: (lv_subExpressions_3_0= ruleLogicalAndExpression )
                    // InternalSCTX.g:4443:3: lv_subExpressions_3_0= ruleLogicalAndExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getLogicalOrExpressionAccess().getSubExpressionsLogicalAndExpressionParserRuleCall_1_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_81);
                    lv_subExpressions_3_0=ruleLogicalAndExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getLogicalOrExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"subExpressions",
                              		lv_subExpressions_3_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.LogicalAndExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }

                    // InternalSCTX.g:4459:3: (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )*
                    loop129:
                    do {
                        int alt129=2;
                        int LA129_0 = input.LA(1);

                        if ( (LA129_0==62) ) {
                            alt129=1;
                        }


                        switch (alt129) {
                    	case 1 :
                    	    // InternalSCTX.g:4459:5: otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,62,FollowSets000.FOLLOW_34); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getLogicalOrExpressionAccess().getVerticalLineVerticalLineKeyword_1_2_0());
                    	          
                    	    }
                    	    // InternalSCTX.g:4463:1: ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) )
                    	    // InternalSCTX.g:4464:1: (lv_subExpressions_5_0= ruleLogicalAndExpression )
                    	    {
                    	    // InternalSCTX.g:4464:1: (lv_subExpressions_5_0= ruleLogicalAndExpression )
                    	    // InternalSCTX.g:4465:3: lv_subExpressions_5_0= ruleLogicalAndExpression
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getLogicalOrExpressionAccess().getSubExpressionsLogicalAndExpressionParserRuleCall_1_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_81);
                    	    lv_subExpressions_5_0=ruleLogicalAndExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getLogicalOrExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"subExpressions",
                    	              		lv_subExpressions_5_0, 
                    	              		"de.cau.cs.kieler.kexpressions.KExpressions.LogicalAndExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop129;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalOrExpression"


    // $ANTLR start "entryRuleLogicalAndExpression"
    // InternalSCTX.g:4489:1: entryRuleLogicalAndExpression returns [EObject current=null] : iv_ruleLogicalAndExpression= ruleLogicalAndExpression EOF ;
    public final EObject entryRuleLogicalAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLogicalAndExpression = null;


        try {
            // InternalSCTX.g:4490:2: (iv_ruleLogicalAndExpression= ruleLogicalAndExpression EOF )
            // InternalSCTX.g:4491:2: iv_ruleLogicalAndExpression= ruleLogicalAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLogicalAndExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLogicalAndExpression=ruleLogicalAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLogicalAndExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLogicalAndExpression"


    // $ANTLR start "ruleLogicalAndExpression"
    // InternalSCTX.g:4498:1: ruleLogicalAndExpression returns [EObject current=null] : (this_BitwiseOrExpression_0= ruleBitwiseOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )* )? ) ;
    public final EObject ruleLogicalAndExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_BitwiseOrExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:4501:28: ( (this_BitwiseOrExpression_0= ruleBitwiseOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )* )? ) )
            // InternalSCTX.g:4502:1: (this_BitwiseOrExpression_0= ruleBitwiseOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )* )? )
            {
            // InternalSCTX.g:4502:1: (this_BitwiseOrExpression_0= ruleBitwiseOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )* )? )
            // InternalSCTX.g:4503:2: this_BitwiseOrExpression_0= ruleBitwiseOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getLogicalAndExpressionAccess().getBitwiseOrExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_82);
            this_BitwiseOrExpression_0=ruleBitwiseOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_BitwiseOrExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalSCTX.g:4514:1: ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )* )?
            int alt132=2;
            int LA132_0 = input.LA(1);

            if ( (LA132_0==63) ) {
                alt132=1;
            }
            switch (alt132) {
                case 1 :
                    // InternalSCTX.g:4514:2: () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )*
                    {
                    // InternalSCTX.g:4514:2: ()
                    // InternalSCTX.g:4515:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndAdd(
                                  grammarAccess.getLogicalAndExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                                  current);
                          
                    }

                    }

                    // InternalSCTX.g:4523:2: ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) )
                    // InternalSCTX.g:4523:3: ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) )
                    {
                    // InternalSCTX.g:4523:3: ( (lv_operator_2_0= ruleLogicalAndOperator ) )
                    // InternalSCTX.g:4524:1: (lv_operator_2_0= ruleLogicalAndOperator )
                    {
                    // InternalSCTX.g:4524:1: (lv_operator_2_0= ruleLogicalAndOperator )
                    // InternalSCTX.g:4525:3: lv_operator_2_0= ruleLogicalAndOperator
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getLogicalAndExpressionAccess().getOperatorLogicalAndOperatorEnumRuleCall_1_1_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_34);
                    lv_operator_2_0=ruleLogicalAndOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getLogicalAndExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"operator",
                              		lv_operator_2_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.LogicalAndOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:4541:2: ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) )
                    // InternalSCTX.g:4542:1: (lv_subExpressions_3_0= ruleBitwiseOrExpression )
                    {
                    // InternalSCTX.g:4542:1: (lv_subExpressions_3_0= ruleBitwiseOrExpression )
                    // InternalSCTX.g:4543:3: lv_subExpressions_3_0= ruleBitwiseOrExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getLogicalAndExpressionAccess().getSubExpressionsBitwiseOrExpressionParserRuleCall_1_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_82);
                    lv_subExpressions_3_0=ruleBitwiseOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getLogicalAndExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"subExpressions",
                              		lv_subExpressions_3_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseOrExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }

                    // InternalSCTX.g:4559:3: (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )*
                    loop131:
                    do {
                        int alt131=2;
                        int LA131_0 = input.LA(1);

                        if ( (LA131_0==63) ) {
                            alt131=1;
                        }


                        switch (alt131) {
                    	case 1 :
                    	    // InternalSCTX.g:4559:5: otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,63,FollowSets000.FOLLOW_34); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getLogicalAndExpressionAccess().getAmpersandAmpersandKeyword_1_2_0());
                    	          
                    	    }
                    	    // InternalSCTX.g:4563:1: ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) )
                    	    // InternalSCTX.g:4564:1: (lv_subExpressions_5_0= ruleBitwiseOrExpression )
                    	    {
                    	    // InternalSCTX.g:4564:1: (lv_subExpressions_5_0= ruleBitwiseOrExpression )
                    	    // InternalSCTX.g:4565:3: lv_subExpressions_5_0= ruleBitwiseOrExpression
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getLogicalAndExpressionAccess().getSubExpressionsBitwiseOrExpressionParserRuleCall_1_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_82);
                    	    lv_subExpressions_5_0=ruleBitwiseOrExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getLogicalAndExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"subExpressions",
                    	              		lv_subExpressions_5_0, 
                    	              		"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseOrExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop131;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalAndExpression"


    // $ANTLR start "entryRuleBitwiseOrExpression"
    // InternalSCTX.g:4589:1: entryRuleBitwiseOrExpression returns [EObject current=null] : iv_ruleBitwiseOrExpression= ruleBitwiseOrExpression EOF ;
    public final EObject entryRuleBitwiseOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBitwiseOrExpression = null;


        try {
            // InternalSCTX.g:4590:2: (iv_ruleBitwiseOrExpression= ruleBitwiseOrExpression EOF )
            // InternalSCTX.g:4591:2: iv_ruleBitwiseOrExpression= ruleBitwiseOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBitwiseOrExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBitwiseOrExpression=ruleBitwiseOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBitwiseOrExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBitwiseOrExpression"


    // $ANTLR start "ruleBitwiseOrExpression"
    // InternalSCTX.g:4598:1: ruleBitwiseOrExpression returns [EObject current=null] : (this_BitwiseAndExpression_0= ruleBitwiseAndExpression ( () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )? ) ;
    public final EObject ruleBitwiseOrExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_BitwiseAndExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:4601:28: ( (this_BitwiseAndExpression_0= ruleBitwiseAndExpression ( () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )? ) )
            // InternalSCTX.g:4602:1: (this_BitwiseAndExpression_0= ruleBitwiseAndExpression ( () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )? )
            {
            // InternalSCTX.g:4602:1: (this_BitwiseAndExpression_0= ruleBitwiseAndExpression ( () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )? )
            // InternalSCTX.g:4603:2: this_BitwiseAndExpression_0= ruleBitwiseAndExpression ( () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getBitwiseOrExpressionAccess().getBitwiseAndExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_83);
            this_BitwiseAndExpression_0=ruleBitwiseAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_BitwiseAndExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalSCTX.g:4614:1: ( () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )?
            int alt134=2;
            int LA134_0 = input.LA(1);

            if ( (LA134_0==64) ) {
                alt134=1;
            }
            switch (alt134) {
                case 1 :
                    // InternalSCTX.g:4614:2: () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )*
                    {
                    // InternalSCTX.g:4614:2: ()
                    // InternalSCTX.g:4615:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndAdd(
                                  grammarAccess.getBitwiseOrExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                                  current);
                          
                    }

                    }

                    // InternalSCTX.g:4623:2: ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) )
                    // InternalSCTX.g:4623:3: ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) )
                    {
                    // InternalSCTX.g:4623:3: ( (lv_operator_2_0= ruleBitwiseOrOperator ) )
                    // InternalSCTX.g:4624:1: (lv_operator_2_0= ruleBitwiseOrOperator )
                    {
                    // InternalSCTX.g:4624:1: (lv_operator_2_0= ruleBitwiseOrOperator )
                    // InternalSCTX.g:4625:3: lv_operator_2_0= ruleBitwiseOrOperator
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBitwiseOrExpressionAccess().getOperatorBitwiseOrOperatorEnumRuleCall_1_1_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_34);
                    lv_operator_2_0=ruleBitwiseOrOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBitwiseOrExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"operator",
                              		lv_operator_2_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseOrOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:4641:2: ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) )
                    // InternalSCTX.g:4642:1: (lv_subExpressions_3_0= ruleBitwiseAndExpression )
                    {
                    // InternalSCTX.g:4642:1: (lv_subExpressions_3_0= ruleBitwiseAndExpression )
                    // InternalSCTX.g:4643:3: lv_subExpressions_3_0= ruleBitwiseAndExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBitwiseOrExpressionAccess().getSubExpressionsBitwiseAndExpressionParserRuleCall_1_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_83);
                    lv_subExpressions_3_0=ruleBitwiseAndExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBitwiseOrExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"subExpressions",
                              		lv_subExpressions_3_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseAndExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }

                    // InternalSCTX.g:4659:3: (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )*
                    loop133:
                    do {
                        int alt133=2;
                        int LA133_0 = input.LA(1);

                        if ( (LA133_0==64) ) {
                            alt133=1;
                        }


                        switch (alt133) {
                    	case 1 :
                    	    // InternalSCTX.g:4659:5: otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,64,FollowSets000.FOLLOW_34); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getBitwiseOrExpressionAccess().getVerticalLineKeyword_1_2_0());
                    	          
                    	    }
                    	    // InternalSCTX.g:4663:1: ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) )
                    	    // InternalSCTX.g:4664:1: (lv_subExpressions_5_0= ruleBitwiseAndExpression )
                    	    {
                    	    // InternalSCTX.g:4664:1: (lv_subExpressions_5_0= ruleBitwiseAndExpression )
                    	    // InternalSCTX.g:4665:3: lv_subExpressions_5_0= ruleBitwiseAndExpression
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getBitwiseOrExpressionAccess().getSubExpressionsBitwiseAndExpressionParserRuleCall_1_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_83);
                    	    lv_subExpressions_5_0=ruleBitwiseAndExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getBitwiseOrExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"subExpressions",
                    	              		lv_subExpressions_5_0, 
                    	              		"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseAndExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop133;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseOrExpression"


    // $ANTLR start "entryRuleBitwiseAndExpression"
    // InternalSCTX.g:4689:1: entryRuleBitwiseAndExpression returns [EObject current=null] : iv_ruleBitwiseAndExpression= ruleBitwiseAndExpression EOF ;
    public final EObject entryRuleBitwiseAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBitwiseAndExpression = null;


        try {
            // InternalSCTX.g:4690:2: (iv_ruleBitwiseAndExpression= ruleBitwiseAndExpression EOF )
            // InternalSCTX.g:4691:2: iv_ruleBitwiseAndExpression= ruleBitwiseAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBitwiseAndExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBitwiseAndExpression=ruleBitwiseAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBitwiseAndExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBitwiseAndExpression"


    // $ANTLR start "ruleBitwiseAndExpression"
    // InternalSCTX.g:4698:1: ruleBitwiseAndExpression returns [EObject current=null] : (this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )? ) ;
    public final EObject ruleBitwiseAndExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_CompareOperation_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:4701:28: ( (this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )? ) )
            // InternalSCTX.g:4702:1: (this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )? )
            {
            // InternalSCTX.g:4702:1: (this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )? )
            // InternalSCTX.g:4703:2: this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )?
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getBitwiseAndExpressionAccess().getCompareOperationParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_84);
            this_CompareOperation_0=ruleCompareOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_CompareOperation_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalSCTX.g:4714:1: ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )?
            int alt136=2;
            int LA136_0 = input.LA(1);

            if ( (LA136_0==29) ) {
                alt136=1;
            }
            switch (alt136) {
                case 1 :
                    // InternalSCTX.g:4714:2: () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )*
                    {
                    // InternalSCTX.g:4714:2: ()
                    // InternalSCTX.g:4715:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndAdd(
                                  grammarAccess.getBitwiseAndExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                                  current);
                          
                    }

                    }

                    // InternalSCTX.g:4723:2: ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) )
                    // InternalSCTX.g:4723:3: ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) )
                    {
                    // InternalSCTX.g:4723:3: ( (lv_operator_2_0= ruleBitwiseAndOperator ) )
                    // InternalSCTX.g:4724:1: (lv_operator_2_0= ruleBitwiseAndOperator )
                    {
                    // InternalSCTX.g:4724:1: (lv_operator_2_0= ruleBitwiseAndOperator )
                    // InternalSCTX.g:4725:3: lv_operator_2_0= ruleBitwiseAndOperator
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBitwiseAndExpressionAccess().getOperatorBitwiseAndOperatorEnumRuleCall_1_1_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_34);
                    lv_operator_2_0=ruleBitwiseAndOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBitwiseAndExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"operator",
                              		lv_operator_2_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseAndOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:4741:2: ( (lv_subExpressions_3_0= ruleCompareOperation ) )
                    // InternalSCTX.g:4742:1: (lv_subExpressions_3_0= ruleCompareOperation )
                    {
                    // InternalSCTX.g:4742:1: (lv_subExpressions_3_0= ruleCompareOperation )
                    // InternalSCTX.g:4743:3: lv_subExpressions_3_0= ruleCompareOperation
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBitwiseAndExpressionAccess().getSubExpressionsCompareOperationParserRuleCall_1_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_84);
                    lv_subExpressions_3_0=ruleCompareOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBitwiseAndExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"subExpressions",
                              		lv_subExpressions_3_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.CompareOperation");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }

                    // InternalSCTX.g:4759:3: (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )*
                    loop135:
                    do {
                        int alt135=2;
                        int LA135_0 = input.LA(1);

                        if ( (LA135_0==29) ) {
                            alt135=1;
                        }


                        switch (alt135) {
                    	case 1 :
                    	    // InternalSCTX.g:4759:5: otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) )
                    	    {
                    	    otherlv_4=(Token)match(input,29,FollowSets000.FOLLOW_34); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getBitwiseAndExpressionAccess().getAmpersandKeyword_1_2_0());
                    	          
                    	    }
                    	    // InternalSCTX.g:4763:1: ( (lv_subExpressions_5_0= ruleCompareOperation ) )
                    	    // InternalSCTX.g:4764:1: (lv_subExpressions_5_0= ruleCompareOperation )
                    	    {
                    	    // InternalSCTX.g:4764:1: (lv_subExpressions_5_0= ruleCompareOperation )
                    	    // InternalSCTX.g:4765:3: lv_subExpressions_5_0= ruleCompareOperation
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getBitwiseAndExpressionAccess().getSubExpressionsCompareOperationParserRuleCall_1_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_84);
                    	    lv_subExpressions_5_0=ruleCompareOperation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getBitwiseAndExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"subExpressions",
                    	              		lv_subExpressions_5_0, 
                    	              		"de.cau.cs.kieler.kexpressions.KExpressions.CompareOperation");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop135;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseAndExpression"


    // $ANTLR start "entryRuleCompareOperation"
    // InternalSCTX.g:4789:1: entryRuleCompareOperation returns [EObject current=null] : iv_ruleCompareOperation= ruleCompareOperation EOF ;
    public final EObject entryRuleCompareOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCompareOperation = null;


        try {
            // InternalSCTX.g:4790:2: (iv_ruleCompareOperation= ruleCompareOperation EOF )
            // InternalSCTX.g:4791:2: iv_ruleCompareOperation= ruleCompareOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCompareOperationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCompareOperation=ruleCompareOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCompareOperation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCompareOperation"


    // $ANTLR start "ruleCompareOperation"
    // InternalSCTX.g:4798:1: ruleCompareOperation returns [EObject current=null] : (this_NotOrValuedExpression_0= ruleNotOrValuedExpression ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )? ) ;
    public final EObject ruleCompareOperation() throws RecognitionException {
        EObject current = null;

        EObject this_NotOrValuedExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:4801:28: ( (this_NotOrValuedExpression_0= ruleNotOrValuedExpression ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )? ) )
            // InternalSCTX.g:4802:1: (this_NotOrValuedExpression_0= ruleNotOrValuedExpression ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )? )
            {
            // InternalSCTX.g:4802:1: (this_NotOrValuedExpression_0= ruleNotOrValuedExpression ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )? )
            // InternalSCTX.g:4803:2: this_NotOrValuedExpression_0= ruleNotOrValuedExpression ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )?
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getCompareOperationAccess().getNotOrValuedExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_85);
            this_NotOrValuedExpression_0=ruleNotOrValuedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_NotOrValuedExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalSCTX.g:4814:1: ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )?
            int alt137=2;
            alt137 = dfa137.predict(input);
            switch (alt137) {
                case 1 :
                    // InternalSCTX.g:4814:2: () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) )
                    {
                    // InternalSCTX.g:4814:2: ()
                    // InternalSCTX.g:4815:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndAdd(
                                  grammarAccess.getCompareOperationAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                                  current);
                          
                    }

                    }

                    // InternalSCTX.g:4823:2: ( (lv_operator_2_0= ruleCompareOperator ) )
                    // InternalSCTX.g:4824:1: (lv_operator_2_0= ruleCompareOperator )
                    {
                    // InternalSCTX.g:4824:1: (lv_operator_2_0= ruleCompareOperator )
                    // InternalSCTX.g:4825:3: lv_operator_2_0= ruleCompareOperator
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getCompareOperationAccess().getOperatorCompareOperatorEnumRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_34);
                    lv_operator_2_0=ruleCompareOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCompareOperationRule());
                      	        }
                             		set(
                             			current, 
                             			"operator",
                              		lv_operator_2_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.CompareOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:4841:2: ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) )
                    // InternalSCTX.g:4842:1: (lv_subExpressions_3_0= ruleNotOrValuedExpression )
                    {
                    // InternalSCTX.g:4842:1: (lv_subExpressions_3_0= ruleNotOrValuedExpression )
                    // InternalSCTX.g:4843:3: lv_subExpressions_3_0= ruleNotOrValuedExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getCompareOperationAccess().getSubExpressionsNotOrValuedExpressionParserRuleCall_1_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_3_0=ruleNotOrValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCompareOperationRule());
                      	        }
                             		add(
                             			current, 
                             			"subExpressions",
                              		lv_subExpressions_3_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.NotOrValuedExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCompareOperation"


    // $ANTLR start "entryRuleNotOrValuedExpression"
    // InternalSCTX.g:4867:1: entryRuleNotOrValuedExpression returns [EObject current=null] : iv_ruleNotOrValuedExpression= ruleNotOrValuedExpression EOF ;
    public final EObject entryRuleNotOrValuedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNotOrValuedExpression = null;


        try {
            // InternalSCTX.g:4868:2: (iv_ruleNotOrValuedExpression= ruleNotOrValuedExpression EOF )
            // InternalSCTX.g:4869:2: iv_ruleNotOrValuedExpression= ruleNotOrValuedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNotOrValuedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNotOrValuedExpression=ruleNotOrValuedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNotOrValuedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNotOrValuedExpression"


    // $ANTLR start "ruleNotOrValuedExpression"
    // InternalSCTX.g:4876:1: ruleNotOrValuedExpression returns [EObject current=null] : (this_ValuedExpression_0= ruleValuedExpression | this_NotExpression_1= ruleNotExpression ) ;
    public final EObject ruleNotOrValuedExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ValuedExpression_0 = null;

        EObject this_NotExpression_1 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:4879:28: ( (this_ValuedExpression_0= ruleValuedExpression | this_NotExpression_1= ruleNotExpression ) )
            // InternalSCTX.g:4880:1: (this_ValuedExpression_0= ruleValuedExpression | this_NotExpression_1= ruleNotExpression )
            {
            // InternalSCTX.g:4880:1: (this_ValuedExpression_0= ruleValuedExpression | this_NotExpression_1= ruleNotExpression )
            int alt138=2;
            alt138 = dfa138.predict(input);
            switch (alt138) {
                case 1 :
                    // InternalSCTX.g:4881:2: this_ValuedExpression_0= ruleValuedExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getNotOrValuedExpressionAccess().getValuedExpressionParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedExpression_0=ruleValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ValuedExpression_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:4894:2: this_NotExpression_1= ruleNotExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getNotOrValuedExpressionAccess().getNotExpressionParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_NotExpression_1=ruleNotExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_NotExpression_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNotOrValuedExpression"


    // $ANTLR start "entryRuleNotExpression"
    // InternalSCTX.g:4913:1: entryRuleNotExpression returns [EObject current=null] : iv_ruleNotExpression= ruleNotExpression EOF ;
    public final EObject entryRuleNotExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNotExpression = null;


        try {
            // InternalSCTX.g:4914:2: (iv_ruleNotExpression= ruleNotExpression EOF )
            // InternalSCTX.g:4915:2: iv_ruleNotExpression= ruleNotExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNotExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNotExpression=ruleNotExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNotExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNotExpression"


    // $ANTLR start "ruleNotExpression"
    // InternalSCTX.g:4922:1: ruleNotExpression returns [EObject current=null] : ( ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) ) | this_AtomicExpression_3= ruleAtomicExpression ) ;
    public final EObject ruleNotExpression() throws RecognitionException {
        EObject current = null;

        Enumerator lv_operator_1_0 = null;

        EObject lv_subExpressions_2_0 = null;

        EObject this_AtomicExpression_3 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:4925:28: ( ( ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) ) | this_AtomicExpression_3= ruleAtomicExpression ) )
            // InternalSCTX.g:4926:1: ( ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) ) | this_AtomicExpression_3= ruleAtomicExpression )
            {
            // InternalSCTX.g:4926:1: ( ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) ) | this_AtomicExpression_3= ruleAtomicExpression )
            int alt139=2;
            int LA139_0 = input.LA(1);

            if ( (LA139_0==28) ) {
                alt139=1;
            }
            else if ( (LA139_0==RULE_ID||LA139_0==RULE_HOSTCODE||LA139_0==RULE_BOOLEAN||LA139_0==25||LA139_0==55||LA139_0==60||(LA139_0>=102 && LA139_0<=103)) ) {
                alt139=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 139, 0, input);

                throw nvae;
            }
            switch (alt139) {
                case 1 :
                    // InternalSCTX.g:4926:2: ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) )
                    {
                    // InternalSCTX.g:4926:2: ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) )
                    // InternalSCTX.g:4926:3: () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) )
                    {
                    // InternalSCTX.g:4926:3: ()
                    // InternalSCTX.g:4927:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getNotExpressionAccess().getOperatorExpressionAction_0_0(),
                                  current);
                          
                    }

                    }

                    // InternalSCTX.g:4935:2: ( (lv_operator_1_0= ruleNotOperator ) )
                    // InternalSCTX.g:4936:1: (lv_operator_1_0= ruleNotOperator )
                    {
                    // InternalSCTX.g:4936:1: (lv_operator_1_0= ruleNotOperator )
                    // InternalSCTX.g:4937:3: lv_operator_1_0= ruleNotOperator
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getNotExpressionAccess().getOperatorNotOperatorEnumRuleCall_0_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_34);
                    lv_operator_1_0=ruleNotOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getNotExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"operator",
                              		lv_operator_1_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.NotOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:4953:2: ( (lv_subExpressions_2_0= ruleNotExpression ) )
                    // InternalSCTX.g:4954:1: (lv_subExpressions_2_0= ruleNotExpression )
                    {
                    // InternalSCTX.g:4954:1: (lv_subExpressions_2_0= ruleNotExpression )
                    // InternalSCTX.g:4955:3: lv_subExpressions_2_0= ruleNotExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getNotExpressionAccess().getSubExpressionsNotExpressionParserRuleCall_0_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_2_0=ruleNotExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getNotExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"subExpressions",
                              		lv_subExpressions_2_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.NotExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:4973:2: this_AtomicExpression_3= ruleAtomicExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getNotExpressionAccess().getAtomicExpressionParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AtomicExpression_3=ruleAtomicExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_AtomicExpression_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNotExpression"


    // $ANTLR start "entryRuleValuedExpression"
    // InternalSCTX.g:4992:1: entryRuleValuedExpression returns [EObject current=null] : iv_ruleValuedExpression= ruleValuedExpression EOF ;
    public final EObject entryRuleValuedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValuedExpression = null;


        try {
            // InternalSCTX.g:4993:2: (iv_ruleValuedExpression= ruleValuedExpression EOF )
            // InternalSCTX.g:4994:2: iv_ruleValuedExpression= ruleValuedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValuedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleValuedExpression=ruleValuedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValuedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValuedExpression"


    // $ANTLR start "ruleValuedExpression"
    // InternalSCTX.g:5001:1: ruleValuedExpression returns [EObject current=null] : this_AddExpression_0= ruleAddExpression ;
    public final EObject ruleValuedExpression() throws RecognitionException {
        EObject current = null;

        EObject this_AddExpression_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:5004:28: (this_AddExpression_0= ruleAddExpression )
            // InternalSCTX.g:5006:2: this_AddExpression_0= ruleAddExpression
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getValuedExpressionAccess().getAddExpressionParserRuleCall()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_AddExpression_0=ruleAddExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_AddExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValuedExpression"


    // $ANTLR start "entryRuleAddExpression"
    // InternalSCTX.g:5025:1: entryRuleAddExpression returns [EObject current=null] : iv_ruleAddExpression= ruleAddExpression EOF ;
    public final EObject entryRuleAddExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAddExpression = null;


        try {
            // InternalSCTX.g:5026:2: (iv_ruleAddExpression= ruleAddExpression EOF )
            // InternalSCTX.g:5027:2: iv_ruleAddExpression= ruleAddExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAddExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAddExpression=ruleAddExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAddExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAddExpression"


    // $ANTLR start "ruleAddExpression"
    // InternalSCTX.g:5034:1: ruleAddExpression returns [EObject current=null] : (this_SubExpression_0= ruleSubExpression ( () ( ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleSubExpression ) ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleSubExpression ) ) )* )? ) ;
    public final EObject ruleAddExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_SubExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:5037:28: ( (this_SubExpression_0= ruleSubExpression ( () ( ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleSubExpression ) ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleSubExpression ) ) )* )? ) )
            // InternalSCTX.g:5038:1: (this_SubExpression_0= ruleSubExpression ( () ( ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleSubExpression ) ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleSubExpression ) ) )* )? )
            {
            // InternalSCTX.g:5038:1: (this_SubExpression_0= ruleSubExpression ( () ( ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleSubExpression ) ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleSubExpression ) ) )* )? )
            // InternalSCTX.g:5039:2: this_SubExpression_0= ruleSubExpression ( () ( ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleSubExpression ) ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleSubExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getAddExpressionAccess().getSubExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_86);
            this_SubExpression_0=ruleSubExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_SubExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalSCTX.g:5050:1: ( () ( ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleSubExpression ) ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleSubExpression ) ) )* )?
            int alt141=2;
            int LA141_0 = input.LA(1);

            if ( (LA141_0==65) ) {
                alt141=1;
            }
            switch (alt141) {
                case 1 :
                    // InternalSCTX.g:5050:2: () ( ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleSubExpression ) ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleSubExpression ) ) )*
                    {
                    // InternalSCTX.g:5050:2: ()
                    // InternalSCTX.g:5051:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndAdd(
                                  grammarAccess.getAddExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                                  current);
                          
                    }

                    }

                    // InternalSCTX.g:5059:2: ( ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleSubExpression ) ) )
                    // InternalSCTX.g:5059:3: ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleSubExpression ) )
                    {
                    // InternalSCTX.g:5059:3: ( (lv_operator_2_0= ruleAddOperator ) )
                    // InternalSCTX.g:5060:1: (lv_operator_2_0= ruleAddOperator )
                    {
                    // InternalSCTX.g:5060:1: (lv_operator_2_0= ruleAddOperator )
                    // InternalSCTX.g:5061:3: lv_operator_2_0= ruleAddOperator
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAddExpressionAccess().getOperatorAddOperatorEnumRuleCall_1_1_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_87);
                    lv_operator_2_0=ruleAddOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAddExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"operator",
                              		lv_operator_2_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.AddOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:5077:2: ( (lv_subExpressions_3_0= ruleSubExpression ) )
                    // InternalSCTX.g:5078:1: (lv_subExpressions_3_0= ruleSubExpression )
                    {
                    // InternalSCTX.g:5078:1: (lv_subExpressions_3_0= ruleSubExpression )
                    // InternalSCTX.g:5079:3: lv_subExpressions_3_0= ruleSubExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAddExpressionAccess().getSubExpressionsSubExpressionParserRuleCall_1_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_86);
                    lv_subExpressions_3_0=ruleSubExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAddExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"subExpressions",
                              		lv_subExpressions_3_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.SubExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }

                    // InternalSCTX.g:5095:3: (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleSubExpression ) ) )*
                    loop140:
                    do {
                        int alt140=2;
                        int LA140_0 = input.LA(1);

                        if ( (LA140_0==65) ) {
                            alt140=1;
                        }


                        switch (alt140) {
                    	case 1 :
                    	    // InternalSCTX.g:5095:5: otherlv_4= '+' ( (lv_subExpressions_5_0= ruleSubExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,65,FollowSets000.FOLLOW_87); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getAddExpressionAccess().getPlusSignKeyword_1_2_0());
                    	          
                    	    }
                    	    // InternalSCTX.g:5099:1: ( (lv_subExpressions_5_0= ruleSubExpression ) )
                    	    // InternalSCTX.g:5100:1: (lv_subExpressions_5_0= ruleSubExpression )
                    	    {
                    	    // InternalSCTX.g:5100:1: (lv_subExpressions_5_0= ruleSubExpression )
                    	    // InternalSCTX.g:5101:3: lv_subExpressions_5_0= ruleSubExpression
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getAddExpressionAccess().getSubExpressionsSubExpressionParserRuleCall_1_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_86);
                    	    lv_subExpressions_5_0=ruleSubExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAddExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"subExpressions",
                    	              		lv_subExpressions_5_0, 
                    	              		"de.cau.cs.kieler.kexpressions.KExpressions.SubExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop140;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAddExpression"


    // $ANTLR start "entryRuleSubExpression"
    // InternalSCTX.g:5125:1: entryRuleSubExpression returns [EObject current=null] : iv_ruleSubExpression= ruleSubExpression EOF ;
    public final EObject entryRuleSubExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSubExpression = null;


        try {
            // InternalSCTX.g:5126:2: (iv_ruleSubExpression= ruleSubExpression EOF )
            // InternalSCTX.g:5127:2: iv_ruleSubExpression= ruleSubExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSubExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSubExpression=ruleSubExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSubExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSubExpression"


    // $ANTLR start "ruleSubExpression"
    // InternalSCTX.g:5134:1: ruleSubExpression returns [EObject current=null] : (this_MultExpression_0= ruleMultExpression ( () ( ( (lv_operator_2_0= ruleSubOperator ) ) ( (lv_subExpressions_3_0= ruleMultExpression ) ) ) (otherlv_4= '-' ( (lv_subExpressions_5_0= ruleMultExpression ) ) )* )? ) ;
    public final EObject ruleSubExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_MultExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:5137:28: ( (this_MultExpression_0= ruleMultExpression ( () ( ( (lv_operator_2_0= ruleSubOperator ) ) ( (lv_subExpressions_3_0= ruleMultExpression ) ) ) (otherlv_4= '-' ( (lv_subExpressions_5_0= ruleMultExpression ) ) )* )? ) )
            // InternalSCTX.g:5138:1: (this_MultExpression_0= ruleMultExpression ( () ( ( (lv_operator_2_0= ruleSubOperator ) ) ( (lv_subExpressions_3_0= ruleMultExpression ) ) ) (otherlv_4= '-' ( (lv_subExpressions_5_0= ruleMultExpression ) ) )* )? )
            {
            // InternalSCTX.g:5138:1: (this_MultExpression_0= ruleMultExpression ( () ( ( (lv_operator_2_0= ruleSubOperator ) ) ( (lv_subExpressions_3_0= ruleMultExpression ) ) ) (otherlv_4= '-' ( (lv_subExpressions_5_0= ruleMultExpression ) ) )* )? )
            // InternalSCTX.g:5139:2: this_MultExpression_0= ruleMultExpression ( () ( ( (lv_operator_2_0= ruleSubOperator ) ) ( (lv_subExpressions_3_0= ruleMultExpression ) ) ) (otherlv_4= '-' ( (lv_subExpressions_5_0= ruleMultExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getSubExpressionAccess().getMultExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_88);
            this_MultExpression_0=ruleMultExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_MultExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalSCTX.g:5150:1: ( () ( ( (lv_operator_2_0= ruleSubOperator ) ) ( (lv_subExpressions_3_0= ruleMultExpression ) ) ) (otherlv_4= '-' ( (lv_subExpressions_5_0= ruleMultExpression ) ) )* )?
            int alt143=2;
            int LA143_0 = input.LA(1);

            if ( (LA143_0==66) ) {
                alt143=1;
            }
            switch (alt143) {
                case 1 :
                    // InternalSCTX.g:5150:2: () ( ( (lv_operator_2_0= ruleSubOperator ) ) ( (lv_subExpressions_3_0= ruleMultExpression ) ) ) (otherlv_4= '-' ( (lv_subExpressions_5_0= ruleMultExpression ) ) )*
                    {
                    // InternalSCTX.g:5150:2: ()
                    // InternalSCTX.g:5151:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndAdd(
                                  grammarAccess.getSubExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                                  current);
                          
                    }

                    }

                    // InternalSCTX.g:5159:2: ( ( (lv_operator_2_0= ruleSubOperator ) ) ( (lv_subExpressions_3_0= ruleMultExpression ) ) )
                    // InternalSCTX.g:5159:3: ( (lv_operator_2_0= ruleSubOperator ) ) ( (lv_subExpressions_3_0= ruleMultExpression ) )
                    {
                    // InternalSCTX.g:5159:3: ( (lv_operator_2_0= ruleSubOperator ) )
                    // InternalSCTX.g:5160:1: (lv_operator_2_0= ruleSubOperator )
                    {
                    // InternalSCTX.g:5160:1: (lv_operator_2_0= ruleSubOperator )
                    // InternalSCTX.g:5161:3: lv_operator_2_0= ruleSubOperator
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getSubExpressionAccess().getOperatorSubOperatorEnumRuleCall_1_1_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_87);
                    lv_operator_2_0=ruleSubOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSubExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"operator",
                              		lv_operator_2_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.SubOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:5177:2: ( (lv_subExpressions_3_0= ruleMultExpression ) )
                    // InternalSCTX.g:5178:1: (lv_subExpressions_3_0= ruleMultExpression )
                    {
                    // InternalSCTX.g:5178:1: (lv_subExpressions_3_0= ruleMultExpression )
                    // InternalSCTX.g:5179:3: lv_subExpressions_3_0= ruleMultExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getSubExpressionAccess().getSubExpressionsMultExpressionParserRuleCall_1_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_88);
                    lv_subExpressions_3_0=ruleMultExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSubExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"subExpressions",
                              		lv_subExpressions_3_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.MultExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }

                    // InternalSCTX.g:5195:3: (otherlv_4= '-' ( (lv_subExpressions_5_0= ruleMultExpression ) ) )*
                    loop142:
                    do {
                        int alt142=2;
                        int LA142_0 = input.LA(1);

                        if ( (LA142_0==66) ) {
                            alt142=1;
                        }


                        switch (alt142) {
                    	case 1 :
                    	    // InternalSCTX.g:5195:5: otherlv_4= '-' ( (lv_subExpressions_5_0= ruleMultExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,66,FollowSets000.FOLLOW_87); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getSubExpressionAccess().getHyphenMinusKeyword_1_2_0());
                    	          
                    	    }
                    	    // InternalSCTX.g:5199:1: ( (lv_subExpressions_5_0= ruleMultExpression ) )
                    	    // InternalSCTX.g:5200:1: (lv_subExpressions_5_0= ruleMultExpression )
                    	    {
                    	    // InternalSCTX.g:5200:1: (lv_subExpressions_5_0= ruleMultExpression )
                    	    // InternalSCTX.g:5201:3: lv_subExpressions_5_0= ruleMultExpression
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getSubExpressionAccess().getSubExpressionsMultExpressionParserRuleCall_1_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_88);
                    	    lv_subExpressions_5_0=ruleMultExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getSubExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"subExpressions",
                    	              		lv_subExpressions_5_0, 
                    	              		"de.cau.cs.kieler.kexpressions.KExpressions.MultExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop142;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSubExpression"


    // $ANTLR start "entryRuleMultExpression"
    // InternalSCTX.g:5225:1: entryRuleMultExpression returns [EObject current=null] : iv_ruleMultExpression= ruleMultExpression EOF ;
    public final EObject entryRuleMultExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMultExpression = null;


        try {
            // InternalSCTX.g:5226:2: (iv_ruleMultExpression= ruleMultExpression EOF )
            // InternalSCTX.g:5227:2: iv_ruleMultExpression= ruleMultExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMultExpression=ruleMultExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMultExpression"


    // $ANTLR start "ruleMultExpression"
    // InternalSCTX.g:5234:1: ruleMultExpression returns [EObject current=null] : (this_DivExpression_0= ruleDivExpression ( () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivExpression ) ) )* )? ) ;
    public final EObject ruleMultExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_DivExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:5237:28: ( (this_DivExpression_0= ruleDivExpression ( () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivExpression ) ) )* )? ) )
            // InternalSCTX.g:5238:1: (this_DivExpression_0= ruleDivExpression ( () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivExpression ) ) )* )? )
            {
            // InternalSCTX.g:5238:1: (this_DivExpression_0= ruleDivExpression ( () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivExpression ) ) )* )? )
            // InternalSCTX.g:5239:2: this_DivExpression_0= ruleDivExpression ( () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getMultExpressionAccess().getDivExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_89);
            this_DivExpression_0=ruleDivExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_DivExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalSCTX.g:5250:1: ( () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivExpression ) ) )* )?
            int alt145=2;
            int LA145_0 = input.LA(1);

            if ( (LA145_0==67) ) {
                alt145=1;
            }
            switch (alt145) {
                case 1 :
                    // InternalSCTX.g:5250:2: () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivExpression ) ) )*
                    {
                    // InternalSCTX.g:5250:2: ()
                    // InternalSCTX.g:5251:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndAdd(
                                  grammarAccess.getMultExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                                  current);
                          
                    }

                    }

                    // InternalSCTX.g:5259:2: ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivExpression ) ) )
                    // InternalSCTX.g:5259:3: ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivExpression ) )
                    {
                    // InternalSCTX.g:5259:3: ( (lv_operator_2_0= ruleMultOperator ) )
                    // InternalSCTX.g:5260:1: (lv_operator_2_0= ruleMultOperator )
                    {
                    // InternalSCTX.g:5260:1: (lv_operator_2_0= ruleMultOperator )
                    // InternalSCTX.g:5261:3: lv_operator_2_0= ruleMultOperator
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMultExpressionAccess().getOperatorMultOperatorEnumRuleCall_1_1_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_87);
                    lv_operator_2_0=ruleMultOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMultExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"operator",
                              		lv_operator_2_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.MultOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:5277:2: ( (lv_subExpressions_3_0= ruleDivExpression ) )
                    // InternalSCTX.g:5278:1: (lv_subExpressions_3_0= ruleDivExpression )
                    {
                    // InternalSCTX.g:5278:1: (lv_subExpressions_3_0= ruleDivExpression )
                    // InternalSCTX.g:5279:3: lv_subExpressions_3_0= ruleDivExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMultExpressionAccess().getSubExpressionsDivExpressionParserRuleCall_1_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_89);
                    lv_subExpressions_3_0=ruleDivExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMultExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"subExpressions",
                              		lv_subExpressions_3_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.DivExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }

                    // InternalSCTX.g:5295:3: (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivExpression ) ) )*
                    loop144:
                    do {
                        int alt144=2;
                        int LA144_0 = input.LA(1);

                        if ( (LA144_0==67) ) {
                            alt144=1;
                        }


                        switch (alt144) {
                    	case 1 :
                    	    // InternalSCTX.g:5295:5: otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,67,FollowSets000.FOLLOW_87); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getMultExpressionAccess().getAsteriskKeyword_1_2_0());
                    	          
                    	    }
                    	    // InternalSCTX.g:5299:1: ( (lv_subExpressions_5_0= ruleDivExpression ) )
                    	    // InternalSCTX.g:5300:1: (lv_subExpressions_5_0= ruleDivExpression )
                    	    {
                    	    // InternalSCTX.g:5300:1: (lv_subExpressions_5_0= ruleDivExpression )
                    	    // InternalSCTX.g:5301:3: lv_subExpressions_5_0= ruleDivExpression
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getMultExpressionAccess().getSubExpressionsDivExpressionParserRuleCall_1_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_89);
                    	    lv_subExpressions_5_0=ruleDivExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getMultExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"subExpressions",
                    	              		lv_subExpressions_5_0, 
                    	              		"de.cau.cs.kieler.kexpressions.KExpressions.DivExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop144;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultExpression"


    // $ANTLR start "entryRuleDivExpression"
    // InternalSCTX.g:5325:1: entryRuleDivExpression returns [EObject current=null] : iv_ruleDivExpression= ruleDivExpression EOF ;
    public final EObject entryRuleDivExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDivExpression = null;


        try {
            // InternalSCTX.g:5326:2: (iv_ruleDivExpression= ruleDivExpression EOF )
            // InternalSCTX.g:5327:2: iv_ruleDivExpression= ruleDivExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDivExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDivExpression=ruleDivExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDivExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDivExpression"


    // $ANTLR start "ruleDivExpression"
    // InternalSCTX.g:5334:1: ruleDivExpression returns [EObject current=null] : (this_ModExpression_0= ruleModExpression ( () ( ( (lv_operator_2_0= ruleDivOperator ) ) ( (lv_subExpressions_3_0= ruleModExpression ) ) ) (otherlv_4= '/' ( (lv_subExpressions_5_0= ruleModExpression ) ) )* )? ) ;
    public final EObject ruleDivExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_ModExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:5337:28: ( (this_ModExpression_0= ruleModExpression ( () ( ( (lv_operator_2_0= ruleDivOperator ) ) ( (lv_subExpressions_3_0= ruleModExpression ) ) ) (otherlv_4= '/' ( (lv_subExpressions_5_0= ruleModExpression ) ) )* )? ) )
            // InternalSCTX.g:5338:1: (this_ModExpression_0= ruleModExpression ( () ( ( (lv_operator_2_0= ruleDivOperator ) ) ( (lv_subExpressions_3_0= ruleModExpression ) ) ) (otherlv_4= '/' ( (lv_subExpressions_5_0= ruleModExpression ) ) )* )? )
            {
            // InternalSCTX.g:5338:1: (this_ModExpression_0= ruleModExpression ( () ( ( (lv_operator_2_0= ruleDivOperator ) ) ( (lv_subExpressions_3_0= ruleModExpression ) ) ) (otherlv_4= '/' ( (lv_subExpressions_5_0= ruleModExpression ) ) )* )? )
            // InternalSCTX.g:5339:2: this_ModExpression_0= ruleModExpression ( () ( ( (lv_operator_2_0= ruleDivOperator ) ) ( (lv_subExpressions_3_0= ruleModExpression ) ) ) (otherlv_4= '/' ( (lv_subExpressions_5_0= ruleModExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getDivExpressionAccess().getModExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_90);
            this_ModExpression_0=ruleModExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_ModExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalSCTX.g:5350:1: ( () ( ( (lv_operator_2_0= ruleDivOperator ) ) ( (lv_subExpressions_3_0= ruleModExpression ) ) ) (otherlv_4= '/' ( (lv_subExpressions_5_0= ruleModExpression ) ) )* )?
            int alt147=2;
            int LA147_0 = input.LA(1);

            if ( (LA147_0==68) ) {
                alt147=1;
            }
            switch (alt147) {
                case 1 :
                    // InternalSCTX.g:5350:2: () ( ( (lv_operator_2_0= ruleDivOperator ) ) ( (lv_subExpressions_3_0= ruleModExpression ) ) ) (otherlv_4= '/' ( (lv_subExpressions_5_0= ruleModExpression ) ) )*
                    {
                    // InternalSCTX.g:5350:2: ()
                    // InternalSCTX.g:5351:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndAdd(
                                  grammarAccess.getDivExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                                  current);
                          
                    }

                    }

                    // InternalSCTX.g:5359:2: ( ( (lv_operator_2_0= ruleDivOperator ) ) ( (lv_subExpressions_3_0= ruleModExpression ) ) )
                    // InternalSCTX.g:5359:3: ( (lv_operator_2_0= ruleDivOperator ) ) ( (lv_subExpressions_3_0= ruleModExpression ) )
                    {
                    // InternalSCTX.g:5359:3: ( (lv_operator_2_0= ruleDivOperator ) )
                    // InternalSCTX.g:5360:1: (lv_operator_2_0= ruleDivOperator )
                    {
                    // InternalSCTX.g:5360:1: (lv_operator_2_0= ruleDivOperator )
                    // InternalSCTX.g:5361:3: lv_operator_2_0= ruleDivOperator
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDivExpressionAccess().getOperatorDivOperatorEnumRuleCall_1_1_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_87);
                    lv_operator_2_0=ruleDivOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDivExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"operator",
                              		lv_operator_2_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.DivOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:5377:2: ( (lv_subExpressions_3_0= ruleModExpression ) )
                    // InternalSCTX.g:5378:1: (lv_subExpressions_3_0= ruleModExpression )
                    {
                    // InternalSCTX.g:5378:1: (lv_subExpressions_3_0= ruleModExpression )
                    // InternalSCTX.g:5379:3: lv_subExpressions_3_0= ruleModExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDivExpressionAccess().getSubExpressionsModExpressionParserRuleCall_1_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_90);
                    lv_subExpressions_3_0=ruleModExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDivExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"subExpressions",
                              		lv_subExpressions_3_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.ModExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }

                    // InternalSCTX.g:5395:3: (otherlv_4= '/' ( (lv_subExpressions_5_0= ruleModExpression ) ) )*
                    loop146:
                    do {
                        int alt146=2;
                        int LA146_0 = input.LA(1);

                        if ( (LA146_0==68) ) {
                            alt146=1;
                        }


                        switch (alt146) {
                    	case 1 :
                    	    // InternalSCTX.g:5395:5: otherlv_4= '/' ( (lv_subExpressions_5_0= ruleModExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,68,FollowSets000.FOLLOW_87); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getDivExpressionAccess().getSolidusKeyword_1_2_0());
                    	          
                    	    }
                    	    // InternalSCTX.g:5399:1: ( (lv_subExpressions_5_0= ruleModExpression ) )
                    	    // InternalSCTX.g:5400:1: (lv_subExpressions_5_0= ruleModExpression )
                    	    {
                    	    // InternalSCTX.g:5400:1: (lv_subExpressions_5_0= ruleModExpression )
                    	    // InternalSCTX.g:5401:3: lv_subExpressions_5_0= ruleModExpression
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getDivExpressionAccess().getSubExpressionsModExpressionParserRuleCall_1_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_90);
                    	    lv_subExpressions_5_0=ruleModExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getDivExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"subExpressions",
                    	              		lv_subExpressions_5_0, 
                    	              		"de.cau.cs.kieler.kexpressions.KExpressions.ModExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop146;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDivExpression"


    // $ANTLR start "entryRuleModExpression"
    // InternalSCTX.g:5425:1: entryRuleModExpression returns [EObject current=null] : iv_ruleModExpression= ruleModExpression EOF ;
    public final EObject entryRuleModExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModExpression = null;


        try {
            // InternalSCTX.g:5426:2: (iv_ruleModExpression= ruleModExpression EOF )
            // InternalSCTX.g:5427:2: iv_ruleModExpression= ruleModExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleModExpression=ruleModExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModExpression"


    // $ANTLR start "ruleModExpression"
    // InternalSCTX.g:5434:1: ruleModExpression returns [EObject current=null] : (this_NegExpression_0= ruleNegExpression ( () ( ( (lv_operator_2_0= ruleModOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) (otherlv_4= '%' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )* )? ) ;
    public final EObject ruleModExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_NegExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:5437:28: ( (this_NegExpression_0= ruleNegExpression ( () ( ( (lv_operator_2_0= ruleModOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) (otherlv_4= '%' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )* )? ) )
            // InternalSCTX.g:5438:1: (this_NegExpression_0= ruleNegExpression ( () ( ( (lv_operator_2_0= ruleModOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) (otherlv_4= '%' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )* )? )
            {
            // InternalSCTX.g:5438:1: (this_NegExpression_0= ruleNegExpression ( () ( ( (lv_operator_2_0= ruleModOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) (otherlv_4= '%' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )* )? )
            // InternalSCTX.g:5439:2: this_NegExpression_0= ruleNegExpression ( () ( ( (lv_operator_2_0= ruleModOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) (otherlv_4= '%' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getModExpressionAccess().getNegExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_91);
            this_NegExpression_0=ruleNegExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_NegExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalSCTX.g:5450:1: ( () ( ( (lv_operator_2_0= ruleModOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) (otherlv_4= '%' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )* )?
            int alt149=2;
            int LA149_0 = input.LA(1);

            if ( (LA149_0==69) ) {
                alt149=1;
            }
            switch (alt149) {
                case 1 :
                    // InternalSCTX.g:5450:2: () ( ( (lv_operator_2_0= ruleModOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) (otherlv_4= '%' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )*
                    {
                    // InternalSCTX.g:5450:2: ()
                    // InternalSCTX.g:5451:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndAdd(
                                  grammarAccess.getModExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                                  current);
                          
                    }

                    }

                    // InternalSCTX.g:5459:2: ( ( (lv_operator_2_0= ruleModOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) )
                    // InternalSCTX.g:5459:3: ( (lv_operator_2_0= ruleModOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) )
                    {
                    // InternalSCTX.g:5459:3: ( (lv_operator_2_0= ruleModOperator ) )
                    // InternalSCTX.g:5460:1: (lv_operator_2_0= ruleModOperator )
                    {
                    // InternalSCTX.g:5460:1: (lv_operator_2_0= ruleModOperator )
                    // InternalSCTX.g:5461:3: lv_operator_2_0= ruleModOperator
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getModExpressionAccess().getOperatorModOperatorEnumRuleCall_1_1_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_87);
                    lv_operator_2_0=ruleModOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getModExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"operator",
                              		lv_operator_2_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.ModOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:5477:2: ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) )
                    // InternalSCTX.g:5478:1: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
                    {
                    // InternalSCTX.g:5478:1: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
                    // InternalSCTX.g:5479:3: lv_subExpressions_3_0= ruleAtomicValuedExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getModExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_1_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_91);
                    lv_subExpressions_3_0=ruleAtomicValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getModExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"subExpressions",
                              		lv_subExpressions_3_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.AtomicValuedExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }

                    // InternalSCTX.g:5495:3: (otherlv_4= '%' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )*
                    loop148:
                    do {
                        int alt148=2;
                        int LA148_0 = input.LA(1);

                        if ( (LA148_0==69) ) {
                            alt148=1;
                        }


                        switch (alt148) {
                    	case 1 :
                    	    // InternalSCTX.g:5495:5: otherlv_4= '%' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,69,FollowSets000.FOLLOW_87); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getModExpressionAccess().getPercentSignKeyword_1_2_0());
                    	          
                    	    }
                    	    // InternalSCTX.g:5499:1: ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) )
                    	    // InternalSCTX.g:5500:1: (lv_subExpressions_5_0= ruleAtomicValuedExpression )
                    	    {
                    	    // InternalSCTX.g:5500:1: (lv_subExpressions_5_0= ruleAtomicValuedExpression )
                    	    // InternalSCTX.g:5501:3: lv_subExpressions_5_0= ruleAtomicValuedExpression
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getModExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_1_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_91);
                    	    lv_subExpressions_5_0=ruleAtomicValuedExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getModExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"subExpressions",
                    	              		lv_subExpressions_5_0, 
                    	              		"de.cau.cs.kieler.kexpressions.KExpressions.AtomicValuedExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop148;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModExpression"


    // $ANTLR start "entryRuleNegExpression"
    // InternalSCTX.g:5525:1: entryRuleNegExpression returns [EObject current=null] : iv_ruleNegExpression= ruleNegExpression EOF ;
    public final EObject entryRuleNegExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNegExpression = null;


        try {
            // InternalSCTX.g:5526:2: (iv_ruleNegExpression= ruleNegExpression EOF )
            // InternalSCTX.g:5527:2: iv_ruleNegExpression= ruleNegExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNegExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNegExpression=ruleNegExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNegExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNegExpression"


    // $ANTLR start "ruleNegExpression"
    // InternalSCTX.g:5534:1: ruleNegExpression returns [EObject current=null] : ( ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) ) | this_AtomicValuedExpression_3= ruleAtomicValuedExpression ) ;
    public final EObject ruleNegExpression() throws RecognitionException {
        EObject current = null;

        Enumerator lv_operator_1_0 = null;

        EObject lv_subExpressions_2_0 = null;

        EObject this_AtomicValuedExpression_3 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:5537:28: ( ( ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) ) | this_AtomicValuedExpression_3= ruleAtomicValuedExpression ) )
            // InternalSCTX.g:5538:1: ( ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) ) | this_AtomicValuedExpression_3= ruleAtomicValuedExpression )
            {
            // InternalSCTX.g:5538:1: ( ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) ) | this_AtomicValuedExpression_3= ruleAtomicValuedExpression )
            int alt150=2;
            int LA150_0 = input.LA(1);

            if ( (LA150_0==66) ) {
                alt150=1;
            }
            else if ( ((LA150_0>=RULE_ID && LA150_0<=RULE_BOOLEAN)||LA150_0==25||LA150_0==55||LA150_0==60||(LA150_0>=102 && LA150_0<=103)) ) {
                alt150=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 150, 0, input);

                throw nvae;
            }
            switch (alt150) {
                case 1 :
                    // InternalSCTX.g:5538:2: ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) )
                    {
                    // InternalSCTX.g:5538:2: ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) )
                    // InternalSCTX.g:5538:3: () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) )
                    {
                    // InternalSCTX.g:5538:3: ()
                    // InternalSCTX.g:5539:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getNegExpressionAccess().getOperatorExpressionAction_0_0(),
                                  current);
                          
                    }

                    }

                    // InternalSCTX.g:5547:2: ( (lv_operator_1_0= ruleSubOperator ) )
                    // InternalSCTX.g:5548:1: (lv_operator_1_0= ruleSubOperator )
                    {
                    // InternalSCTX.g:5548:1: (lv_operator_1_0= ruleSubOperator )
                    // InternalSCTX.g:5549:3: lv_operator_1_0= ruleSubOperator
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getNegExpressionAccess().getOperatorSubOperatorEnumRuleCall_0_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_87);
                    lv_operator_1_0=ruleSubOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getNegExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"operator",
                              		lv_operator_1_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.SubOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:5565:2: ( (lv_subExpressions_2_0= ruleNegExpression ) )
                    // InternalSCTX.g:5566:1: (lv_subExpressions_2_0= ruleNegExpression )
                    {
                    // InternalSCTX.g:5566:1: (lv_subExpressions_2_0= ruleNegExpression )
                    // InternalSCTX.g:5567:3: lv_subExpressions_2_0= ruleNegExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getNegExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_0_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_2_0=ruleNegExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getNegExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"subExpressions",
                              		lv_subExpressions_2_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.NegExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:5585:2: this_AtomicValuedExpression_3= ruleAtomicValuedExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getNegExpressionAccess().getAtomicValuedExpressionParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AtomicValuedExpression_3=ruleAtomicValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_AtomicValuedExpression_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNegExpression"


    // $ANTLR start "entryRuleAtomicExpression"
    // InternalSCTX.g:5604:1: entryRuleAtomicExpression returns [EObject current=null] : iv_ruleAtomicExpression= ruleAtomicExpression EOF ;
    public final EObject entryRuleAtomicExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAtomicExpression = null;


        try {
            // InternalSCTX.g:5605:2: (iv_ruleAtomicExpression= ruleAtomicExpression EOF )
            // InternalSCTX.g:5606:2: iv_ruleAtomicExpression= ruleAtomicExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAtomicExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAtomicExpression=ruleAtomicExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAtomicExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAtomicExpression"


    // $ANTLR start "ruleAtomicExpression"
    // InternalSCTX.g:5613:1: ruleAtomicExpression returns [EObject current=null] : (this_BoolValue_0= ruleBoolValue | this_ValuedObjectTestExpression_1= ruleValuedObjectTestExpression | (otherlv_2= '(' this_BoolExpression_3= ruleBoolExpression otherlv_4= ')' ) | this_ReferenceCall_5= ruleReferenceCall | this_FunctionCall_6= ruleFunctionCall | this_TextExpression_7= ruleTextExpression ) ;
    public final EObject ruleAtomicExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject this_BoolValue_0 = null;

        EObject this_ValuedObjectTestExpression_1 = null;

        EObject this_BoolExpression_3 = null;

        EObject this_ReferenceCall_5 = null;

        EObject this_FunctionCall_6 = null;

        EObject this_TextExpression_7 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:5616:28: ( (this_BoolValue_0= ruleBoolValue | this_ValuedObjectTestExpression_1= ruleValuedObjectTestExpression | (otherlv_2= '(' this_BoolExpression_3= ruleBoolExpression otherlv_4= ')' ) | this_ReferenceCall_5= ruleReferenceCall | this_FunctionCall_6= ruleFunctionCall | this_TextExpression_7= ruleTextExpression ) )
            // InternalSCTX.g:5617:1: (this_BoolValue_0= ruleBoolValue | this_ValuedObjectTestExpression_1= ruleValuedObjectTestExpression | (otherlv_2= '(' this_BoolExpression_3= ruleBoolExpression otherlv_4= ')' ) | this_ReferenceCall_5= ruleReferenceCall | this_FunctionCall_6= ruleFunctionCall | this_TextExpression_7= ruleTextExpression )
            {
            // InternalSCTX.g:5617:1: (this_BoolValue_0= ruleBoolValue | this_ValuedObjectTestExpression_1= ruleValuedObjectTestExpression | (otherlv_2= '(' this_BoolExpression_3= ruleBoolExpression otherlv_4= ')' ) | this_ReferenceCall_5= ruleReferenceCall | this_FunctionCall_6= ruleFunctionCall | this_TextExpression_7= ruleTextExpression )
            int alt151=6;
            alt151 = dfa151.predict(input);
            switch (alt151) {
                case 1 :
                    // InternalSCTX.g:5618:2: this_BoolValue_0= ruleBoolValue
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAtomicExpressionAccess().getBoolValueParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_BoolValue_0=ruleBoolValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_BoolValue_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:5631:2: this_ValuedObjectTestExpression_1= ruleValuedObjectTestExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAtomicExpressionAccess().getValuedObjectTestExpressionParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedObjectTestExpression_1=ruleValuedObjectTestExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ValuedObjectTestExpression_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:5643:6: (otherlv_2= '(' this_BoolExpression_3= ruleBoolExpression otherlv_4= ')' )
                    {
                    // InternalSCTX.g:5643:6: (otherlv_2= '(' this_BoolExpression_3= ruleBoolExpression otherlv_4= ')' )
                    // InternalSCTX.g:5643:8: otherlv_2= '(' this_BoolExpression_3= ruleBoolExpression otherlv_4= ')'
                    {
                    otherlv_2=(Token)match(input,25,FollowSets000.FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getAtomicExpressionAccess().getLeftParenthesisKeyword_2_0());
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAtomicExpressionAccess().getBoolExpressionParserRuleCall_2_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_24);
                    this_BoolExpression_3=ruleBoolExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_BoolExpression_3; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_4=(Token)match(input,27,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getAtomicExpressionAccess().getRightParenthesisKeyword_2_2());
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSCTX.g:5665:2: this_ReferenceCall_5= ruleReferenceCall
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAtomicExpressionAccess().getReferenceCallParserRuleCall_3()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ReferenceCall_5=ruleReferenceCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ReferenceCall_5; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    // InternalSCTX.g:5678:2: this_FunctionCall_6= ruleFunctionCall
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAtomicExpressionAccess().getFunctionCallParserRuleCall_4()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_FunctionCall_6=ruleFunctionCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_FunctionCall_6; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    // InternalSCTX.g:5691:2: this_TextExpression_7= ruleTextExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAtomicExpressionAccess().getTextExpressionParserRuleCall_5()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TextExpression_7=ruleTextExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_TextExpression_7; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAtomicExpression"


    // $ANTLR start "entryRuleAtomicValuedExpression"
    // InternalSCTX.g:5710:1: entryRuleAtomicValuedExpression returns [EObject current=null] : iv_ruleAtomicValuedExpression= ruleAtomicValuedExpression EOF ;
    public final EObject entryRuleAtomicValuedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAtomicValuedExpression = null;


        try {
            // InternalSCTX.g:5711:2: (iv_ruleAtomicValuedExpression= ruleAtomicValuedExpression EOF )
            // InternalSCTX.g:5712:2: iv_ruleAtomicValuedExpression= ruleAtomicValuedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAtomicValuedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAtomicValuedExpression=ruleAtomicValuedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAtomicValuedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAtomicValuedExpression"


    // $ANTLR start "ruleAtomicValuedExpression"
    // InternalSCTX.g:5719:1: ruleAtomicValuedExpression returns [EObject current=null] : (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_StringValue_2= ruleStringValue | (otherlv_3= '(' this_ValuedExpression_4= ruleValuedExpression otherlv_5= ')' ) | this_AtomicExpression_6= ruleAtomicExpression ) ;
    public final EObject ruleAtomicValuedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject this_IntValue_0 = null;

        EObject this_FloatValue_1 = null;

        EObject this_StringValue_2 = null;

        EObject this_ValuedExpression_4 = null;

        EObject this_AtomicExpression_6 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:5722:28: ( (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_StringValue_2= ruleStringValue | (otherlv_3= '(' this_ValuedExpression_4= ruleValuedExpression otherlv_5= ')' ) | this_AtomicExpression_6= ruleAtomicExpression ) )
            // InternalSCTX.g:5723:1: (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_StringValue_2= ruleStringValue | (otherlv_3= '(' this_ValuedExpression_4= ruleValuedExpression otherlv_5= ')' ) | this_AtomicExpression_6= ruleAtomicExpression )
            {
            // InternalSCTX.g:5723:1: (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_StringValue_2= ruleStringValue | (otherlv_3= '(' this_ValuedExpression_4= ruleValuedExpression otherlv_5= ')' ) | this_AtomicExpression_6= ruleAtomicExpression )
            int alt152=5;
            alt152 = dfa152.predict(input);
            switch (alt152) {
                case 1 :
                    // InternalSCTX.g:5724:2: this_IntValue_0= ruleIntValue
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getIntValueParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_IntValue_0=ruleIntValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_IntValue_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:5737:2: this_FloatValue_1= ruleFloatValue
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getFloatValueParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_FloatValue_1=ruleFloatValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_FloatValue_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:5750:2: this_StringValue_2= ruleStringValue
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getStringValueParserRuleCall_2()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_StringValue_2=ruleStringValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_StringValue_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalSCTX.g:5762:6: (otherlv_3= '(' this_ValuedExpression_4= ruleValuedExpression otherlv_5= ')' )
                    {
                    // InternalSCTX.g:5762:6: (otherlv_3= '(' this_ValuedExpression_4= ruleValuedExpression otherlv_5= ')' )
                    // InternalSCTX.g:5762:8: otherlv_3= '(' this_ValuedExpression_4= ruleValuedExpression otherlv_5= ')'
                    {
                    otherlv_3=(Token)match(input,25,FollowSets000.FOLLOW_87); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getAtomicValuedExpressionAccess().getLeftParenthesisKeyword_3_0());
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getValuedExpressionParserRuleCall_3_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_24);
                    this_ValuedExpression_4=ruleValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ValuedExpression_4; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_5=(Token)match(input,27,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getAtomicValuedExpressionAccess().getRightParenthesisKeyword_3_2());
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSCTX.g:5784:2: this_AtomicExpression_6= ruleAtomicExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getAtomicExpressionParserRuleCall_4()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AtomicExpression_6=ruleAtomicExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_AtomicExpression_6; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAtomicValuedExpression"


    // $ANTLR start "entryRuleValuedObjectTestExpression"
    // InternalSCTX.g:5803:1: entryRuleValuedObjectTestExpression returns [EObject current=null] : iv_ruleValuedObjectTestExpression= ruleValuedObjectTestExpression EOF ;
    public final EObject entryRuleValuedObjectTestExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValuedObjectTestExpression = null;


        try {
            // InternalSCTX.g:5804:2: (iv_ruleValuedObjectTestExpression= ruleValuedObjectTestExpression EOF )
            // InternalSCTX.g:5805:2: iv_ruleValuedObjectTestExpression= ruleValuedObjectTestExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValuedObjectTestExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleValuedObjectTestExpression=ruleValuedObjectTestExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValuedObjectTestExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValuedObjectTestExpression"


    // $ANTLR start "ruleValuedObjectTestExpression"
    // InternalSCTX.g:5812:1: ruleValuedObjectTestExpression returns [EObject current=null] : ( ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) otherlv_4= ')' ) | this_ValuedObjectReference_5= ruleValuedObjectReference ) ;
    public final EObject ruleValuedObjectTestExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Enumerator lv_operator_1_1 = null;

        Enumerator lv_operator_1_2 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject this_ValuedObjectReference_5 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:5815:28: ( ( ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) otherlv_4= ')' ) | this_ValuedObjectReference_5= ruleValuedObjectReference ) )
            // InternalSCTX.g:5816:1: ( ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) otherlv_4= ')' ) | this_ValuedObjectReference_5= ruleValuedObjectReference )
            {
            // InternalSCTX.g:5816:1: ( ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) otherlv_4= ')' ) | this_ValuedObjectReference_5= ruleValuedObjectReference )
            int alt154=2;
            int LA154_0 = input.LA(1);

            if ( ((LA154_0>=102 && LA154_0<=103)) ) {
                alt154=1;
            }
            else if ( (LA154_0==RULE_ID) ) {
                alt154=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 154, 0, input);

                throw nvae;
            }
            switch (alt154) {
                case 1 :
                    // InternalSCTX.g:5816:2: ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) otherlv_4= ')' )
                    {
                    // InternalSCTX.g:5816:2: ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) otherlv_4= ')' )
                    // InternalSCTX.g:5816:3: () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) otherlv_4= ')'
                    {
                    // InternalSCTX.g:5816:3: ()
                    // InternalSCTX.g:5817:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getValuedObjectTestExpressionAccess().getOperatorExpressionAction_0_0(),
                                  current);
                          
                    }

                    }

                    // InternalSCTX.g:5825:2: ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) )
                    // InternalSCTX.g:5826:1: ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) )
                    {
                    // InternalSCTX.g:5826:1: ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) )
                    // InternalSCTX.g:5827:1: (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator )
                    {
                    // InternalSCTX.g:5827:1: (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator )
                    int alt153=2;
                    int LA153_0 = input.LA(1);

                    if ( (LA153_0==102) ) {
                        alt153=1;
                    }
                    else if ( (LA153_0==103) ) {
                        alt153=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 153, 0, input);

                        throw nvae;
                    }
                    switch (alt153) {
                        case 1 :
                            // InternalSCTX.g:5828:3: lv_operator_1_1= rulePreOperator
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorPreOperatorEnumRuleCall_0_1_0_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_92);
                            lv_operator_1_1=rulePreOperator();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getValuedObjectTestExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"operator",
                                      		lv_operator_1_1, 
                                      		"de.cau.cs.kieler.kexpressions.KExpressions.PreOperator");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }
                            break;
                        case 2 :
                            // InternalSCTX.g:5843:8: lv_operator_1_2= ruleValOperator
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorValOperatorEnumRuleCall_0_1_0_1()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_92);
                            lv_operator_1_2=ruleValOperator();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getValuedObjectTestExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"operator",
                                      		lv_operator_1_2, 
                                      		"de.cau.cs.kieler.kexpressions.KExpressions.ValOperator");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }
                            break;

                    }


                    }


                    }

                    otherlv_2=(Token)match(input,25,FollowSets000.FOLLOW_75); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getValuedObjectTestExpressionAccess().getLeftParenthesisKeyword_0_2());
                          
                    }
                    // InternalSCTX.g:5865:1: ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) )
                    // InternalSCTX.g:5866:1: (lv_subExpressions_3_0= ruleValuedObjectTestExpression )
                    {
                    // InternalSCTX.g:5866:1: (lv_subExpressions_3_0= ruleValuedObjectTestExpression )
                    // InternalSCTX.g:5867:3: lv_subExpressions_3_0= ruleValuedObjectTestExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsValuedObjectTestExpressionParserRuleCall_0_3_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_24);
                    lv_subExpressions_3_0=ruleValuedObjectTestExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getValuedObjectTestExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"subExpressions",
                              		lv_subExpressions_3_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectTestExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,27,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getValuedObjectTestExpressionAccess().getRightParenthesisKeyword_0_4());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:5889:2: this_ValuedObjectReference_5= ruleValuedObjectReference
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getValuedObjectTestExpressionAccess().getValuedObjectReferenceParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedObjectReference_5=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ValuedObjectReference_5; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValuedObjectTestExpression"


    // $ANTLR start "entryRulePrimeID"
    // InternalSCTX.g:5908:1: entryRulePrimeID returns [String current=null] : iv_rulePrimeID= rulePrimeID EOF ;
    public final String entryRulePrimeID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePrimeID = null;


        try {
            // InternalSCTX.g:5909:2: (iv_rulePrimeID= rulePrimeID EOF )
            // InternalSCTX.g:5910:2: iv_rulePrimeID= rulePrimeID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimeIDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePrimeID=rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimeID.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrimeID"


    // $ANTLR start "rulePrimeID"
    // InternalSCTX.g:5917:1: rulePrimeID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ID_0= RULE_ID (kw= '\\'' )* ) ;
    public final AntlrDatatypeRuleToken rulePrimeID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;
        Token kw=null;

         enterRule(); 
            
        try {
            // InternalSCTX.g:5920:28: ( (this_ID_0= RULE_ID (kw= '\\'' )* ) )
            // InternalSCTX.g:5921:1: (this_ID_0= RULE_ID (kw= '\\'' )* )
            {
            // InternalSCTX.g:5921:1: (this_ID_0= RULE_ID (kw= '\\'' )* )
            // InternalSCTX.g:5921:6: this_ID_0= RULE_ID (kw= '\\'' )*
            {
            this_ID_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_93); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_ID_0);
                  
            }
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_ID_0, grammarAccess.getPrimeIDAccess().getIDTerminalRuleCall_0()); 
                  
            }
            // InternalSCTX.g:5928:1: (kw= '\\'' )*
            loop155:
            do {
                int alt155=2;
                int LA155_0 = input.LA(1);

                if ( (LA155_0==70) ) {
                    alt155=1;
                }


                switch (alt155) {
            	case 1 :
            	    // InternalSCTX.g:5929:2: kw= '\\''
            	    {
            	    kw=(Token)match(input,70,FollowSets000.FOLLOW_93); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	              current.merge(kw);
            	              newLeafNode(kw, grammarAccess.getPrimeIDAccess().getApostropheKeyword_1()); 
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop155;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrimeID"


    // $ANTLR start "entryRuleValuedObjectReference"
    // InternalSCTX.g:5942:1: entryRuleValuedObjectReference returns [EObject current=null] : iv_ruleValuedObjectReference= ruleValuedObjectReference EOF ;
    public final EObject entryRuleValuedObjectReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValuedObjectReference = null;


        try {
            // InternalSCTX.g:5943:2: (iv_ruleValuedObjectReference= ruleValuedObjectReference EOF )
            // InternalSCTX.g:5944:2: iv_ruleValuedObjectReference= ruleValuedObjectReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValuedObjectReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleValuedObjectReference=ruleValuedObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValuedObjectReference; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValuedObjectReference"


    // $ANTLR start "ruleValuedObjectReference"
    // InternalSCTX.g:5951:1: ruleValuedObjectReference returns [EObject current=null] : ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? ) ;
    public final EObject ruleValuedObjectReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_indices_2_0 = null;

        EObject lv_subReference_5_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:5954:28: ( ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? ) )
            // InternalSCTX.g:5955:1: ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? )
            {
            // InternalSCTX.g:5955:1: ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? )
            // InternalSCTX.g:5955:2: ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )?
            {
            // InternalSCTX.g:5955:2: ( ( rulePrimeID ) )
            // InternalSCTX.g:5956:1: ( rulePrimeID )
            {
            // InternalSCTX.g:5956:1: ( rulePrimeID )
            // InternalSCTX.g:5957:3: rulePrimeID
            {
            if ( state.backtracking==0 ) {
               
              		  /* */ 
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getValuedObjectReferenceRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getValuedObjectReferenceAccess().getValuedObjectValuedObjectCrossReference_0_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_94);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:5973:2: (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )*
            loop156:
            do {
                int alt156=2;
                int LA156_0 = input.LA(1);

                if ( (LA156_0==31) ) {
                    alt156=1;
                }


                switch (alt156) {
            	case 1 :
            	    // InternalSCTX.g:5973:4: otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']'
            	    {
            	    otherlv_1=(Token)match(input,31,FollowSets000.FOLLOW_22); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_1, grammarAccess.getValuedObjectReferenceAccess().getLeftSquareBracketKeyword_1_0());
            	          
            	    }
            	    // InternalSCTX.g:5977:1: ( (lv_indices_2_0= ruleExpression ) )
            	    // InternalSCTX.g:5978:1: (lv_indices_2_0= ruleExpression )
            	    {
            	    // InternalSCTX.g:5978:1: (lv_indices_2_0= ruleExpression )
            	    // InternalSCTX.g:5979:3: lv_indices_2_0= ruleExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getValuedObjectReferenceAccess().getIndicesExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_28);
            	    lv_indices_2_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getValuedObjectReferenceRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"indices",
            	              		lv_indices_2_0, 
            	              		"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    otherlv_3=(Token)match(input,32,FollowSets000.FOLLOW_94); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_3, grammarAccess.getValuedObjectReferenceAccess().getRightSquareBracketKeyword_1_2());
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop156;
                }
            } while (true);

            // InternalSCTX.g:5999:3: (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )?
            int alt157=2;
            int LA157_0 = input.LA(1);

            if ( (LA157_0==58) ) {
                alt157=1;
            }
            switch (alt157) {
                case 1 :
                    // InternalSCTX.g:5999:5: otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) )
                    {
                    otherlv_4=(Token)match(input,58,FollowSets000.FOLLOW_75); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getValuedObjectReferenceAccess().getFullStopKeyword_2_0());
                          
                    }
                    // InternalSCTX.g:6003:1: ( (lv_subReference_5_0= ruleValuedObjectReference ) )
                    // InternalSCTX.g:6004:1: (lv_subReference_5_0= ruleValuedObjectReference )
                    {
                    // InternalSCTX.g:6004:1: (lv_subReference_5_0= ruleValuedObjectReference )
                    // InternalSCTX.g:6005:3: lv_subReference_5_0= ruleValuedObjectReference
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getValuedObjectReferenceAccess().getSubReferenceValuedObjectReferenceParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subReference_5_0=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getValuedObjectReferenceRule());
                      	        }
                             		set(
                             			current, 
                             			"subReference",
                              		lv_subReference_5_0, 
                              		"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValuedObjectReference"


    // $ANTLR start "entryRuleReferenceCall"
    // InternalSCTX.g:6029:1: entryRuleReferenceCall returns [EObject current=null] : iv_ruleReferenceCall= ruleReferenceCall EOF ;
    public final EObject entryRuleReferenceCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReferenceCall = null;


        try {
            // InternalSCTX.g:6030:2: (iv_ruleReferenceCall= ruleReferenceCall EOF )
            // InternalSCTX.g:6031:2: iv_ruleReferenceCall= ruleReferenceCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReferenceCallRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleReferenceCall=ruleReferenceCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReferenceCall; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReferenceCall"


    // $ANTLR start "ruleReferenceCall"
    // InternalSCTX.g:6038:1: ruleReferenceCall returns [EObject current=null] : ( ( ( rulePrimeID ) ) ( (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')' ) | otherlv_6= '()' ) ) ;
    public final EObject ruleReferenceCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject lv_parameters_2_0 = null;

        EObject lv_parameters_4_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:6041:28: ( ( ( ( rulePrimeID ) ) ( (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')' ) | otherlv_6= '()' ) ) )
            // InternalSCTX.g:6042:1: ( ( ( rulePrimeID ) ) ( (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')' ) | otherlv_6= '()' ) )
            {
            // InternalSCTX.g:6042:1: ( ( ( rulePrimeID ) ) ( (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')' ) | otherlv_6= '()' ) )
            // InternalSCTX.g:6042:2: ( ( rulePrimeID ) ) ( (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')' ) | otherlv_6= '()' )
            {
            // InternalSCTX.g:6042:2: ( ( rulePrimeID ) )
            // InternalSCTX.g:6043:1: ( rulePrimeID )
            {
            // InternalSCTX.g:6043:1: ( rulePrimeID )
            // InternalSCTX.g:6044:3: rulePrimeID
            {
            if ( state.backtracking==0 ) {
               
              		  /* */ 
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getReferenceCallRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getReferenceCallAccess().getValuedObjectValuedObjectCrossReference_0_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_78);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:6060:2: ( (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')' ) | otherlv_6= '()' )
            int alt159=2;
            int LA159_0 = input.LA(1);

            if ( (LA159_0==25) ) {
                alt159=1;
            }
            else if ( (LA159_0==59) ) {
                alt159=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 159, 0, input);

                throw nvae;
            }
            switch (alt159) {
                case 1 :
                    // InternalSCTX.g:6060:3: (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')' )
                    {
                    // InternalSCTX.g:6060:3: (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')' )
                    // InternalSCTX.g:6060:5: otherlv_1= '(' ( (lv_parameters_2_0= ruleParameter ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )* otherlv_5= ')'
                    {
                    otherlv_1=(Token)match(input,25,FollowSets000.FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getReferenceCallAccess().getLeftParenthesisKeyword_1_0_0());
                          
                    }
                    // InternalSCTX.g:6064:1: ( (lv_parameters_2_0= ruleParameter ) )
                    // InternalSCTX.g:6065:1: (lv_parameters_2_0= ruleParameter )
                    {
                    // InternalSCTX.g:6065:1: (lv_parameters_2_0= ruleParameter )
                    // InternalSCTX.g:6066:3: lv_parameters_2_0= ruleParameter
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getReferenceCallAccess().getParametersParameterParserRuleCall_1_0_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_23);
                    lv_parameters_2_0=ruleParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getReferenceCallRule());
                      	        }
                             		add(
                             			current, 
                             			"parameters",
                              		lv_parameters_2_0, 
                              		"de.cau.cs.kieler.sccharts.text.SCTX.Parameter");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:6082:2: (otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) ) )*
                    loop158:
                    do {
                        int alt158=2;
                        int LA158_0 = input.LA(1);

                        if ( (LA158_0==26) ) {
                            alt158=1;
                        }


                        switch (alt158) {
                    	case 1 :
                    	    // InternalSCTX.g:6082:4: otherlv_3= ',' ( (lv_parameters_4_0= ruleParameter ) )
                    	    {
                    	    otherlv_3=(Token)match(input,26,FollowSets000.FOLLOW_22); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_3, grammarAccess.getReferenceCallAccess().getCommaKeyword_1_0_2_0());
                    	          
                    	    }
                    	    // InternalSCTX.g:6086:1: ( (lv_parameters_4_0= ruleParameter ) )
                    	    // InternalSCTX.g:6087:1: (lv_parameters_4_0= ruleParameter )
                    	    {
                    	    // InternalSCTX.g:6087:1: (lv_parameters_4_0= ruleParameter )
                    	    // InternalSCTX.g:6088:3: lv_parameters_4_0= ruleParameter
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getReferenceCallAccess().getParametersParameterParserRuleCall_1_0_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_23);
                    	    lv_parameters_4_0=ruleParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getReferenceCallRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"parameters",
                    	              		lv_parameters_4_0, 
                    	              		"de.cau.cs.kieler.sccharts.text.SCTX.Parameter");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop158;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,27,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getReferenceCallAccess().getRightParenthesisKeyword_1_0_3());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:6109:7: otherlv_6= '()'
                    {
                    otherlv_6=(Token)match(input,59,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getReferenceCallAccess().getLeftParenthesisRightParenthesisKeyword_1_1());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReferenceCall"


    // $ANTLR start "entryRuleFunctionCall"
    // InternalSCTX.g:6121:1: entryRuleFunctionCall returns [EObject current=null] : iv_ruleFunctionCall= ruleFunctionCall EOF ;
    public final EObject entryRuleFunctionCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionCall = null;


        try {
            // InternalSCTX.g:6122:2: (iv_ruleFunctionCall= ruleFunctionCall EOF )
            // InternalSCTX.g:6123:2: iv_ruleFunctionCall= ruleFunctionCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionCallRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFunctionCall=ruleFunctionCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionCall; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionCall"


    // $ANTLR start "ruleFunctionCall"
    // InternalSCTX.g:6130:1: ruleFunctionCall returns [EObject current=null] : ( (otherlv_0= 'extern' ( (lv_functionName_1_0= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) ) | (otherlv_8= '<' ( (lv_functionName_9_0= RULE_ID ) ) ( (otherlv_10= '(' ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= ',' ( (lv_parameters_13_0= ruleParameter ) ) )* otherlv_14= ')' ) | otherlv_15= '()' ) otherlv_16= '>' ) ) ;
    public final EObject ruleFunctionCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_functionName_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token lv_functionName_9_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        EObject lv_parameters_3_0 = null;

        EObject lv_parameters_5_0 = null;

        EObject lv_parameters_11_0 = null;

        EObject lv_parameters_13_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:6133:28: ( ( (otherlv_0= 'extern' ( (lv_functionName_1_0= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) ) | (otherlv_8= '<' ( (lv_functionName_9_0= RULE_ID ) ) ( (otherlv_10= '(' ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= ',' ( (lv_parameters_13_0= ruleParameter ) ) )* otherlv_14= ')' ) | otherlv_15= '()' ) otherlv_16= '>' ) ) )
            // InternalSCTX.g:6134:1: ( (otherlv_0= 'extern' ( (lv_functionName_1_0= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) ) | (otherlv_8= '<' ( (lv_functionName_9_0= RULE_ID ) ) ( (otherlv_10= '(' ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= ',' ( (lv_parameters_13_0= ruleParameter ) ) )* otherlv_14= ')' ) | otherlv_15= '()' ) otherlv_16= '>' ) )
            {
            // InternalSCTX.g:6134:1: ( (otherlv_0= 'extern' ( (lv_functionName_1_0= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) ) | (otherlv_8= '<' ( (lv_functionName_9_0= RULE_ID ) ) ( (otherlv_10= '(' ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= ',' ( (lv_parameters_13_0= ruleParameter ) ) )* otherlv_14= ')' ) | otherlv_15= '()' ) otherlv_16= '>' ) )
            int alt164=2;
            int LA164_0 = input.LA(1);

            if ( (LA164_0==55) ) {
                alt164=1;
            }
            else if ( (LA164_0==60) ) {
                alt164=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 164, 0, input);

                throw nvae;
            }
            switch (alt164) {
                case 1 :
                    // InternalSCTX.g:6134:2: (otherlv_0= 'extern' ( (lv_functionName_1_0= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) )
                    {
                    // InternalSCTX.g:6134:2: (otherlv_0= 'extern' ( (lv_functionName_1_0= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) )
                    // InternalSCTX.g:6134:4: otherlv_0= 'extern' ( (lv_functionName_1_0= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' )
                    {
                    otherlv_0=(Token)match(input,55,FollowSets000.FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getFunctionCallAccess().getExternKeyword_0_0());
                          
                    }
                    // InternalSCTX.g:6138:1: ( (lv_functionName_1_0= RULE_ID ) )
                    // InternalSCTX.g:6139:1: (lv_functionName_1_0= RULE_ID )
                    {
                    // InternalSCTX.g:6139:1: (lv_functionName_1_0= RULE_ID )
                    // InternalSCTX.g:6140:3: lv_functionName_1_0= RULE_ID
                    {
                    lv_functionName_1_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_78); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_functionName_1_0, grammarAccess.getFunctionCallAccess().getFunctionNameIDTerminalRuleCall_0_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getFunctionCallRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"functionName",
                              		lv_functionName_1_0, 
                              		"org.eclipse.xtext.common.Terminals.ID");
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:6156:2: ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' )
                    int alt161=2;
                    int LA161_0 = input.LA(1);

                    if ( (LA161_0==25) ) {
                        alt161=1;
                    }
                    else if ( (LA161_0==59) ) {
                        alt161=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 161, 0, input);

                        throw nvae;
                    }
                    switch (alt161) {
                        case 1 :
                            // InternalSCTX.g:6156:3: (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' )
                            {
                            // InternalSCTX.g:6156:3: (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' )
                            // InternalSCTX.g:6156:5: otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')'
                            {
                            otherlv_2=(Token)match(input,25,FollowSets000.FOLLOW_22); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_2, grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_0_2_0_0());
                                  
                            }
                            // InternalSCTX.g:6160:1: ( (lv_parameters_3_0= ruleParameter ) )
                            // InternalSCTX.g:6161:1: (lv_parameters_3_0= ruleParameter )
                            {
                            // InternalSCTX.g:6161:1: (lv_parameters_3_0= ruleParameter )
                            // InternalSCTX.g:6162:3: lv_parameters_3_0= ruleParameter
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getFunctionCallAccess().getParametersParameterParserRuleCall_0_2_0_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_23);
                            lv_parameters_3_0=ruleParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getFunctionCallRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"parameters",
                                      		lv_parameters_3_0, 
                                      		"de.cau.cs.kieler.sccharts.text.SCTX.Parameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalSCTX.g:6178:2: (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )*
                            loop160:
                            do {
                                int alt160=2;
                                int LA160_0 = input.LA(1);

                                if ( (LA160_0==26) ) {
                                    alt160=1;
                                }


                                switch (alt160) {
                            	case 1 :
                            	    // InternalSCTX.g:6178:4: otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) )
                            	    {
                            	    otherlv_4=(Token)match(input,26,FollowSets000.FOLLOW_22); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_4, grammarAccess.getFunctionCallAccess().getCommaKeyword_0_2_0_2_0());
                            	          
                            	    }
                            	    // InternalSCTX.g:6182:1: ( (lv_parameters_5_0= ruleParameter ) )
                            	    // InternalSCTX.g:6183:1: (lv_parameters_5_0= ruleParameter )
                            	    {
                            	    // InternalSCTX.g:6183:1: (lv_parameters_5_0= ruleParameter )
                            	    // InternalSCTX.g:6184:3: lv_parameters_5_0= ruleParameter
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getFunctionCallAccess().getParametersParameterParserRuleCall_0_2_0_2_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_23);
                            	    lv_parameters_5_0=ruleParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getFunctionCallRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"parameters",
                            	              		lv_parameters_5_0, 
                            	              		"de.cau.cs.kieler.sccharts.text.SCTX.Parameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop160;
                                }
                            } while (true);

                            otherlv_6=(Token)match(input,27,FollowSets000.FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_6, grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_0_2_0_3());
                                  
                            }

                            }


                            }
                            break;
                        case 2 :
                            // InternalSCTX.g:6205:7: otherlv_7= '()'
                            {
                            otherlv_7=(Token)match(input,59,FollowSets000.FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_7, grammarAccess.getFunctionCallAccess().getLeftParenthesisRightParenthesisKeyword_0_2_1());
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:6210:6: (otherlv_8= '<' ( (lv_functionName_9_0= RULE_ID ) ) ( (otherlv_10= '(' ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= ',' ( (lv_parameters_13_0= ruleParameter ) ) )* otherlv_14= ')' ) | otherlv_15= '()' ) otherlv_16= '>' )
                    {
                    // InternalSCTX.g:6210:6: (otherlv_8= '<' ( (lv_functionName_9_0= RULE_ID ) ) ( (otherlv_10= '(' ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= ',' ( (lv_parameters_13_0= ruleParameter ) ) )* otherlv_14= ')' ) | otherlv_15= '()' ) otherlv_16= '>' )
                    // InternalSCTX.g:6210:8: otherlv_8= '<' ( (lv_functionName_9_0= RULE_ID ) ) ( (otherlv_10= '(' ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= ',' ( (lv_parameters_13_0= ruleParameter ) ) )* otherlv_14= ')' ) | otherlv_15= '()' ) otherlv_16= '>'
                    {
                    otherlv_8=(Token)match(input,60,FollowSets000.FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getFunctionCallAccess().getLessThanSignKeyword_1_0());
                          
                    }
                    // InternalSCTX.g:6214:1: ( (lv_functionName_9_0= RULE_ID ) )
                    // InternalSCTX.g:6215:1: (lv_functionName_9_0= RULE_ID )
                    {
                    // InternalSCTX.g:6215:1: (lv_functionName_9_0= RULE_ID )
                    // InternalSCTX.g:6216:3: lv_functionName_9_0= RULE_ID
                    {
                    lv_functionName_9_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_78); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_functionName_9_0, grammarAccess.getFunctionCallAccess().getFunctionNameIDTerminalRuleCall_1_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getFunctionCallRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"functionName",
                              		lv_functionName_9_0, 
                              		"org.eclipse.xtext.common.Terminals.ID");
                      	    
                    }

                    }


                    }

                    // InternalSCTX.g:6232:2: ( (otherlv_10= '(' ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= ',' ( (lv_parameters_13_0= ruleParameter ) ) )* otherlv_14= ')' ) | otherlv_15= '()' )
                    int alt163=2;
                    int LA163_0 = input.LA(1);

                    if ( (LA163_0==25) ) {
                        alt163=1;
                    }
                    else if ( (LA163_0==59) ) {
                        alt163=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 163, 0, input);

                        throw nvae;
                    }
                    switch (alt163) {
                        case 1 :
                            // InternalSCTX.g:6232:3: (otherlv_10= '(' ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= ',' ( (lv_parameters_13_0= ruleParameter ) ) )* otherlv_14= ')' )
                            {
                            // InternalSCTX.g:6232:3: (otherlv_10= '(' ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= ',' ( (lv_parameters_13_0= ruleParameter ) ) )* otherlv_14= ')' )
                            // InternalSCTX.g:6232:5: otherlv_10= '(' ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= ',' ( (lv_parameters_13_0= ruleParameter ) ) )* otherlv_14= ')'
                            {
                            otherlv_10=(Token)match(input,25,FollowSets000.FOLLOW_22); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_10, grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_1_2_0_0());
                                  
                            }
                            // InternalSCTX.g:6236:1: ( (lv_parameters_11_0= ruleParameter ) )
                            // InternalSCTX.g:6237:1: (lv_parameters_11_0= ruleParameter )
                            {
                            // InternalSCTX.g:6237:1: (lv_parameters_11_0= ruleParameter )
                            // InternalSCTX.g:6238:3: lv_parameters_11_0= ruleParameter
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getFunctionCallAccess().getParametersParameterParserRuleCall_1_2_0_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_23);
                            lv_parameters_11_0=ruleParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getFunctionCallRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"parameters",
                                      		lv_parameters_11_0, 
                                      		"de.cau.cs.kieler.sccharts.text.SCTX.Parameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalSCTX.g:6254:2: (otherlv_12= ',' ( (lv_parameters_13_0= ruleParameter ) ) )*
                            loop162:
                            do {
                                int alt162=2;
                                int LA162_0 = input.LA(1);

                                if ( (LA162_0==26) ) {
                                    alt162=1;
                                }


                                switch (alt162) {
                            	case 1 :
                            	    // InternalSCTX.g:6254:4: otherlv_12= ',' ( (lv_parameters_13_0= ruleParameter ) )
                            	    {
                            	    otherlv_12=(Token)match(input,26,FollowSets000.FOLLOW_22); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_12, grammarAccess.getFunctionCallAccess().getCommaKeyword_1_2_0_2_0());
                            	          
                            	    }
                            	    // InternalSCTX.g:6258:1: ( (lv_parameters_13_0= ruleParameter ) )
                            	    // InternalSCTX.g:6259:1: (lv_parameters_13_0= ruleParameter )
                            	    {
                            	    // InternalSCTX.g:6259:1: (lv_parameters_13_0= ruleParameter )
                            	    // InternalSCTX.g:6260:3: lv_parameters_13_0= ruleParameter
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getFunctionCallAccess().getParametersParameterParserRuleCall_1_2_0_2_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_23);
                            	    lv_parameters_13_0=ruleParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getFunctionCallRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"parameters",
                            	              		lv_parameters_13_0, 
                            	              		"de.cau.cs.kieler.sccharts.text.SCTX.Parameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop162;
                                }
                            } while (true);

                            otherlv_14=(Token)match(input,27,FollowSets000.FOLLOW_80); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_14, grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_1_2_0_3());
                                  
                            }

                            }


                            }
                            break;
                        case 2 :
                            // InternalSCTX.g:6281:7: otherlv_15= '()'
                            {
                            otherlv_15=(Token)match(input,59,FollowSets000.FOLLOW_80); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_15, grammarAccess.getFunctionCallAccess().getLeftParenthesisRightParenthesisKeyword_1_2_1());
                                  
                            }

                            }
                            break;

                    }

                    otherlv_16=(Token)match(input,61,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_16, grammarAccess.getFunctionCallAccess().getGreaterThanSignKeyword_1_3());
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionCall"


    // $ANTLR start "entryRuleTextExpression"
    // InternalSCTX.g:6297:1: entryRuleTextExpression returns [EObject current=null] : iv_ruleTextExpression= ruleTextExpression EOF ;
    public final EObject entryRuleTextExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTextExpression = null;


        try {
            // InternalSCTX.g:6298:2: (iv_ruleTextExpression= ruleTextExpression EOF )
            // InternalSCTX.g:6299:2: iv_ruleTextExpression= ruleTextExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTextExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTextExpression=ruleTextExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTextExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTextExpression"


    // $ANTLR start "ruleTextExpression"
    // InternalSCTX.g:6306:1: ruleTextExpression returns [EObject current=null] : ( (lv_text_0_0= RULE_HOSTCODE ) ) ;
    public final EObject ruleTextExpression() throws RecognitionException {
        EObject current = null;

        Token lv_text_0_0=null;

         enterRule(); 
            
        try {
            // InternalSCTX.g:6309:28: ( ( (lv_text_0_0= RULE_HOSTCODE ) ) )
            // InternalSCTX.g:6310:1: ( (lv_text_0_0= RULE_HOSTCODE ) )
            {
            // InternalSCTX.g:6310:1: ( (lv_text_0_0= RULE_HOSTCODE ) )
            // InternalSCTX.g:6311:1: (lv_text_0_0= RULE_HOSTCODE )
            {
            // InternalSCTX.g:6311:1: (lv_text_0_0= RULE_HOSTCODE )
            // InternalSCTX.g:6312:3: lv_text_0_0= RULE_HOSTCODE
            {
            lv_text_0_0=(Token)match(input,RULE_HOSTCODE,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_text_0_0, grammarAccess.getTextExpressionAccess().getTextHOSTCODETerminalRuleCall_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getTextExpressionRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"text",
                      		lv_text_0_0, 
                      		"de.cau.cs.kieler.kexpressions.KExpressions.HOSTCODE");
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTextExpression"


    // $ANTLR start "entryRuleIntValue"
    // InternalSCTX.g:6336:1: entryRuleIntValue returns [EObject current=null] : iv_ruleIntValue= ruleIntValue EOF ;
    public final EObject entryRuleIntValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIntValue = null;


        try {
            // InternalSCTX.g:6337:2: (iv_ruleIntValue= ruleIntValue EOF )
            // InternalSCTX.g:6338:2: iv_ruleIntValue= ruleIntValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIntValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleIntValue=ruleIntValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIntValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIntValue"


    // $ANTLR start "ruleIntValue"
    // InternalSCTX.g:6345:1: ruleIntValue returns [EObject current=null] : ( (lv_value_0_0= RULE_INT ) ) ;
    public final EObject ruleIntValue() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;

         enterRule(); 
            
        try {
            // InternalSCTX.g:6348:28: ( ( (lv_value_0_0= RULE_INT ) ) )
            // InternalSCTX.g:6349:1: ( (lv_value_0_0= RULE_INT ) )
            {
            // InternalSCTX.g:6349:1: ( (lv_value_0_0= RULE_INT ) )
            // InternalSCTX.g:6350:1: (lv_value_0_0= RULE_INT )
            {
            // InternalSCTX.g:6350:1: (lv_value_0_0= RULE_INT )
            // InternalSCTX.g:6351:3: lv_value_0_0= RULE_INT
            {
            lv_value_0_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_0_0, grammarAccess.getIntValueAccess().getValueINTTerminalRuleCall_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getIntValueRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_0_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.INT");
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIntValue"


    // $ANTLR start "entryRuleFloatValue"
    // InternalSCTX.g:6375:1: entryRuleFloatValue returns [EObject current=null] : iv_ruleFloatValue= ruleFloatValue EOF ;
    public final EObject entryRuleFloatValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFloatValue = null;


        try {
            // InternalSCTX.g:6376:2: (iv_ruleFloatValue= ruleFloatValue EOF )
            // InternalSCTX.g:6377:2: iv_ruleFloatValue= ruleFloatValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFloatValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFloatValue=ruleFloatValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFloatValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFloatValue"


    // $ANTLR start "ruleFloatValue"
    // InternalSCTX.g:6384:1: ruleFloatValue returns [EObject current=null] : ( (lv_value_0_0= RULE_FLOAT ) ) ;
    public final EObject ruleFloatValue() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;

         enterRule(); 
            
        try {
            // InternalSCTX.g:6387:28: ( ( (lv_value_0_0= RULE_FLOAT ) ) )
            // InternalSCTX.g:6388:1: ( (lv_value_0_0= RULE_FLOAT ) )
            {
            // InternalSCTX.g:6388:1: ( (lv_value_0_0= RULE_FLOAT ) )
            // InternalSCTX.g:6389:1: (lv_value_0_0= RULE_FLOAT )
            {
            // InternalSCTX.g:6389:1: (lv_value_0_0= RULE_FLOAT )
            // InternalSCTX.g:6390:3: lv_value_0_0= RULE_FLOAT
            {
            lv_value_0_0=(Token)match(input,RULE_FLOAT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_0_0, grammarAccess.getFloatValueAccess().getValueFLOATTerminalRuleCall_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getFloatValueRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_0_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.FLOAT");
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFloatValue"


    // $ANTLR start "entryRuleBoolValue"
    // InternalSCTX.g:6414:1: entryRuleBoolValue returns [EObject current=null] : iv_ruleBoolValue= ruleBoolValue EOF ;
    public final EObject entryRuleBoolValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBoolValue = null;


        try {
            // InternalSCTX.g:6415:2: (iv_ruleBoolValue= ruleBoolValue EOF )
            // InternalSCTX.g:6416:2: iv_ruleBoolValue= ruleBoolValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBoolValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBoolValue=ruleBoolValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBoolValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBoolValue"


    // $ANTLR start "ruleBoolValue"
    // InternalSCTX.g:6423:1: ruleBoolValue returns [EObject current=null] : ( (lv_value_0_0= RULE_BOOLEAN ) ) ;
    public final EObject ruleBoolValue() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;

         enterRule(); 
            
        try {
            // InternalSCTX.g:6426:28: ( ( (lv_value_0_0= RULE_BOOLEAN ) ) )
            // InternalSCTX.g:6427:1: ( (lv_value_0_0= RULE_BOOLEAN ) )
            {
            // InternalSCTX.g:6427:1: ( (lv_value_0_0= RULE_BOOLEAN ) )
            // InternalSCTX.g:6428:1: (lv_value_0_0= RULE_BOOLEAN )
            {
            // InternalSCTX.g:6428:1: (lv_value_0_0= RULE_BOOLEAN )
            // InternalSCTX.g:6429:3: lv_value_0_0= RULE_BOOLEAN
            {
            lv_value_0_0=(Token)match(input,RULE_BOOLEAN,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_0_0, grammarAccess.getBoolValueAccess().getValueBOOLEANTerminalRuleCall_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getBoolValueRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_0_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.BOOLEAN");
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBoolValue"


    // $ANTLR start "entryRuleStringValue"
    // InternalSCTX.g:6453:1: entryRuleStringValue returns [EObject current=null] : iv_ruleStringValue= ruleStringValue EOF ;
    public final EObject entryRuleStringValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStringValue = null;


        try {
            // InternalSCTX.g:6454:2: (iv_ruleStringValue= ruleStringValue EOF )
            // InternalSCTX.g:6455:2: iv_ruleStringValue= ruleStringValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStringValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStringValue=ruleStringValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStringValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStringValue"


    // $ANTLR start "ruleStringValue"
    // InternalSCTX.g:6462:1: ruleStringValue returns [EObject current=null] : ( (lv_value_0_0= RULE_STRING ) ) ;
    public final EObject ruleStringValue() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;

         enterRule(); 
            
        try {
            // InternalSCTX.g:6465:28: ( ( (lv_value_0_0= RULE_STRING ) ) )
            // InternalSCTX.g:6466:1: ( (lv_value_0_0= RULE_STRING ) )
            {
            // InternalSCTX.g:6466:1: ( (lv_value_0_0= RULE_STRING ) )
            // InternalSCTX.g:6467:1: (lv_value_0_0= RULE_STRING )
            {
            // InternalSCTX.g:6467:1: (lv_value_0_0= RULE_STRING )
            // InternalSCTX.g:6468:3: lv_value_0_0= RULE_STRING
            {
            lv_value_0_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_0_0, grammarAccess.getStringValueAccess().getValueSTRINGTerminalRuleCall_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getStringValueRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_0_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.STRING");
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStringValue"


    // $ANTLR start "entryRuleAnnotation"
    // InternalSCTX.g:6496:1: entryRuleAnnotation returns [EObject current=null] : iv_ruleAnnotation= ruleAnnotation EOF ;
    public final EObject entryRuleAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotation = null;


        try {
            // InternalSCTX.g:6497:2: (iv_ruleAnnotation= ruleAnnotation EOF )
            // InternalSCTX.g:6498:2: iv_ruleAnnotation= ruleAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAnnotation=ruleAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotation"


    // $ANTLR start "ruleAnnotation"
    // InternalSCTX.g:6505:1: ruleAnnotation returns [EObject current=null] : (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) ;
    public final EObject ruleAnnotation() throws RecognitionException {
        EObject current = null;

        EObject this_CommentAnnotation_0 = null;

        EObject this_KeyStringValueAnnotation_1 = null;

        EObject this_TypedKeyStringValueAnnotation_2 = null;

        EObject this_TagAnnotation_3 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:6508:28: ( (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) )
            // InternalSCTX.g:6509:1: (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            {
            // InternalSCTX.g:6509:1: (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            int alt165=4;
            alt165 = dfa165.predict(input);
            switch (alt165) {
                case 1 :
                    // InternalSCTX.g:6510:2: this_CommentAnnotation_0= ruleCommentAnnotation
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAnnotationAccess().getCommentAnnotationParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CommentAnnotation_0=ruleCommentAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_CommentAnnotation_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:6523:2: this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAnnotationAccess().getKeyStringValueAnnotationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_KeyStringValueAnnotation_1=ruleKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_KeyStringValueAnnotation_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:6536:2: this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAnnotationAccess().getTypedKeyStringValueAnnotationParserRuleCall_2()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TypedKeyStringValueAnnotation_2=ruleTypedKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_TypedKeyStringValueAnnotation_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalSCTX.g:6549:2: this_TagAnnotation_3= ruleTagAnnotation
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAnnotationAccess().getTagAnnotationParserRuleCall_3()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TagAnnotation_3=ruleTagAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_TagAnnotation_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnnotation"


    // $ANTLR start "entryRulePragma"
    // InternalSCTX.g:6568:1: entryRulePragma returns [EObject current=null] : iv_rulePragma= rulePragma EOF ;
    public final EObject entryRulePragma() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePragma = null;


        try {
            // InternalSCTX.g:6569:2: (iv_rulePragma= rulePragma EOF )
            // InternalSCTX.g:6570:2: iv_rulePragma= rulePragma EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPragmaRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePragma=rulePragma();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePragma; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePragma"


    // $ANTLR start "rulePragma"
    // InternalSCTX.g:6577:1: rulePragma returns [EObject current=null] : (this_StringPragma_0= ruleStringPragma | this_PragmaTag_1= rulePragmaTag ) ;
    public final EObject rulePragma() throws RecognitionException {
        EObject current = null;

        EObject this_StringPragma_0 = null;

        EObject this_PragmaTag_1 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:6580:28: ( (this_StringPragma_0= ruleStringPragma | this_PragmaTag_1= rulePragmaTag ) )
            // InternalSCTX.g:6581:1: (this_StringPragma_0= ruleStringPragma | this_PragmaTag_1= rulePragmaTag )
            {
            // InternalSCTX.g:6581:1: (this_StringPragma_0= ruleStringPragma | this_PragmaTag_1= rulePragmaTag )
            int alt166=2;
            alt166 = dfa166.predict(input);
            switch (alt166) {
                case 1 :
                    // InternalSCTX.g:6582:2: this_StringPragma_0= ruleStringPragma
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPragmaAccess().getStringPragmaParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_StringPragma_0=ruleStringPragma();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_StringPragma_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:6595:2: this_PragmaTag_1= rulePragmaTag
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPragmaAccess().getPragmaTagParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PragmaTag_1=rulePragmaTag();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_PragmaTag_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePragma"


    // $ANTLR start "entryRuleRestrictedTypeAnnotation"
    // InternalSCTX.g:6616:1: entryRuleRestrictedTypeAnnotation returns [EObject current=null] : iv_ruleRestrictedTypeAnnotation= ruleRestrictedTypeAnnotation EOF ;
    public final EObject entryRuleRestrictedTypeAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRestrictedTypeAnnotation = null;


        try {
            // InternalSCTX.g:6617:2: (iv_ruleRestrictedTypeAnnotation= ruleRestrictedTypeAnnotation EOF )
            // InternalSCTX.g:6618:2: iv_ruleRestrictedTypeAnnotation= ruleRestrictedTypeAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRestrictedTypeAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRestrictedTypeAnnotation=ruleRestrictedTypeAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRestrictedTypeAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRestrictedTypeAnnotation"


    // $ANTLR start "ruleRestrictedTypeAnnotation"
    // InternalSCTX.g:6625:1: ruleRestrictedTypeAnnotation returns [EObject current=null] : (this_CommentAnnotation_0= ruleCommentAnnotation | this_RestrictedKeyStringValueAnnotation_1= ruleRestrictedKeyStringValueAnnotation | this_RestrictedTypedKeyStringValueAnnotation_2= ruleRestrictedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) ;
    public final EObject ruleRestrictedTypeAnnotation() throws RecognitionException {
        EObject current = null;

        EObject this_CommentAnnotation_0 = null;

        EObject this_RestrictedKeyStringValueAnnotation_1 = null;

        EObject this_RestrictedTypedKeyStringValueAnnotation_2 = null;

        EObject this_TagAnnotation_3 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:6628:28: ( (this_CommentAnnotation_0= ruleCommentAnnotation | this_RestrictedKeyStringValueAnnotation_1= ruleRestrictedKeyStringValueAnnotation | this_RestrictedTypedKeyStringValueAnnotation_2= ruleRestrictedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) )
            // InternalSCTX.g:6629:1: (this_CommentAnnotation_0= ruleCommentAnnotation | this_RestrictedKeyStringValueAnnotation_1= ruleRestrictedKeyStringValueAnnotation | this_RestrictedTypedKeyStringValueAnnotation_2= ruleRestrictedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            {
            // InternalSCTX.g:6629:1: (this_CommentAnnotation_0= ruleCommentAnnotation | this_RestrictedKeyStringValueAnnotation_1= ruleRestrictedKeyStringValueAnnotation | this_RestrictedTypedKeyStringValueAnnotation_2= ruleRestrictedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            int alt167=4;
            alt167 = dfa167.predict(input);
            switch (alt167) {
                case 1 :
                    // InternalSCTX.g:6630:2: this_CommentAnnotation_0= ruleCommentAnnotation
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRestrictedTypeAnnotationAccess().getCommentAnnotationParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CommentAnnotation_0=ruleCommentAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_CommentAnnotation_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:6643:2: this_RestrictedKeyStringValueAnnotation_1= ruleRestrictedKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRestrictedTypeAnnotationAccess().getRestrictedKeyStringValueAnnotationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_RestrictedKeyStringValueAnnotation_1=ruleRestrictedKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_RestrictedKeyStringValueAnnotation_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:6656:2: this_RestrictedTypedKeyStringValueAnnotation_2= ruleRestrictedTypedKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRestrictedTypeAnnotationAccess().getRestrictedTypedKeyStringValueAnnotationParserRuleCall_2()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_RestrictedTypedKeyStringValueAnnotation_2=ruleRestrictedTypedKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_RestrictedTypedKeyStringValueAnnotation_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalSCTX.g:6669:2: this_TagAnnotation_3= ruleTagAnnotation
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRestrictedTypeAnnotationAccess().getTagAnnotationParserRuleCall_3()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TagAnnotation_3=ruleTagAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_TagAnnotation_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRestrictedTypeAnnotation"


    // $ANTLR start "entryRuleQuotedStringAnnotation"
    // InternalSCTX.g:6688:1: entryRuleQuotedStringAnnotation returns [EObject current=null] : iv_ruleQuotedStringAnnotation= ruleQuotedStringAnnotation EOF ;
    public final EObject entryRuleQuotedStringAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQuotedStringAnnotation = null;


        try {
            // InternalSCTX.g:6689:2: (iv_ruleQuotedStringAnnotation= ruleQuotedStringAnnotation EOF )
            // InternalSCTX.g:6690:2: iv_ruleQuotedStringAnnotation= ruleQuotedStringAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQuotedStringAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleQuotedStringAnnotation=ruleQuotedStringAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQuotedStringAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQuotedStringAnnotation"


    // $ANTLR start "ruleQuotedStringAnnotation"
    // InternalSCTX.g:6697:1: ruleQuotedStringAnnotation returns [EObject current=null] : (this_CommentAnnotation_0= ruleCommentAnnotation | this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation | this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) ;
    public final EObject ruleQuotedStringAnnotation() throws RecognitionException {
        EObject current = null;

        EObject this_CommentAnnotation_0 = null;

        EObject this_QuotedKeyStringValueAnnotation_1 = null;

        EObject this_QuotedTypedKeyStringValueAnnotation_2 = null;

        EObject this_TagAnnotation_3 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:6700:28: ( (this_CommentAnnotation_0= ruleCommentAnnotation | this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation | this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) )
            // InternalSCTX.g:6701:1: (this_CommentAnnotation_0= ruleCommentAnnotation | this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation | this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            {
            // InternalSCTX.g:6701:1: (this_CommentAnnotation_0= ruleCommentAnnotation | this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation | this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            int alt168=4;
            alt168 = dfa168.predict(input);
            switch (alt168) {
                case 1 :
                    // InternalSCTX.g:6702:2: this_CommentAnnotation_0= ruleCommentAnnotation
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getQuotedStringAnnotationAccess().getCommentAnnotationParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CommentAnnotation_0=ruleCommentAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_CommentAnnotation_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:6715:2: this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getQuotedStringAnnotationAccess().getQuotedKeyStringValueAnnotationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_QuotedKeyStringValueAnnotation_1=ruleQuotedKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_QuotedKeyStringValueAnnotation_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:6728:2: this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getQuotedStringAnnotationAccess().getQuotedTypedKeyStringValueAnnotationParserRuleCall_2()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_QuotedTypedKeyStringValueAnnotation_2=ruleQuotedTypedKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_QuotedTypedKeyStringValueAnnotation_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalSCTX.g:6741:2: this_TagAnnotation_3= ruleTagAnnotation
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getQuotedStringAnnotationAccess().getTagAnnotationParserRuleCall_3()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TagAnnotation_3=ruleTagAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_TagAnnotation_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQuotedStringAnnotation"


    // $ANTLR start "entryRuleCommentAnnotation"
    // InternalSCTX.g:6760:1: entryRuleCommentAnnotation returns [EObject current=null] : iv_ruleCommentAnnotation= ruleCommentAnnotation EOF ;
    public final EObject entryRuleCommentAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCommentAnnotation = null;


        try {
            // InternalSCTX.g:6761:2: (iv_ruleCommentAnnotation= ruleCommentAnnotation EOF )
            // InternalSCTX.g:6762:2: iv_ruleCommentAnnotation= ruleCommentAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCommentAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCommentAnnotation=ruleCommentAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCommentAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCommentAnnotation"


    // $ANTLR start "ruleCommentAnnotation"
    // InternalSCTX.g:6769:1: ruleCommentAnnotation returns [EObject current=null] : ( (lv_values_0_0= RULE_COMMENT_ANNOTATION ) ) ;
    public final EObject ruleCommentAnnotation() throws RecognitionException {
        EObject current = null;

        Token lv_values_0_0=null;

         enterRule(); 
            
        try {
            // InternalSCTX.g:6772:28: ( ( (lv_values_0_0= RULE_COMMENT_ANNOTATION ) ) )
            // InternalSCTX.g:6773:1: ( (lv_values_0_0= RULE_COMMENT_ANNOTATION ) )
            {
            // InternalSCTX.g:6773:1: ( (lv_values_0_0= RULE_COMMENT_ANNOTATION ) )
            // InternalSCTX.g:6774:1: (lv_values_0_0= RULE_COMMENT_ANNOTATION )
            {
            // InternalSCTX.g:6774:1: (lv_values_0_0= RULE_COMMENT_ANNOTATION )
            // InternalSCTX.g:6775:3: lv_values_0_0= RULE_COMMENT_ANNOTATION
            {
            lv_values_0_0=(Token)match(input,RULE_COMMENT_ANNOTATION,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_values_0_0, grammarAccess.getCommentAnnotationAccess().getValuesCOMMENT_ANNOTATIONTerminalRuleCall_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getCommentAnnotationRule());
              	        }
                     		addWithLastConsumed(
                     			current, 
                     			"values",
                      		lv_values_0_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.COMMENT_ANNOTATION");
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCommentAnnotation"


    // $ANTLR start "entryRuleTagAnnotation"
    // InternalSCTX.g:6799:1: entryRuleTagAnnotation returns [EObject current=null] : iv_ruleTagAnnotation= ruleTagAnnotation EOF ;
    public final EObject entryRuleTagAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTagAnnotation = null;


        try {
            // InternalSCTX.g:6800:2: (iv_ruleTagAnnotation= ruleTagAnnotation EOF )
            // InternalSCTX.g:6801:2: iv_ruleTagAnnotation= ruleTagAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTagAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTagAnnotation=ruleTagAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTagAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTagAnnotation"


    // $ANTLR start "ruleTagAnnotation"
    // InternalSCTX.g:6808:1: ruleTagAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ) ;
    public final EObject ruleTagAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:6811:28: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ) )
            // InternalSCTX.g:6812:1: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) )
            {
            // InternalSCTX.g:6812:1: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) )
            // InternalSCTX.g:6812:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) )
            {
            otherlv_0=(Token)match(input,71,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getTagAnnotationAccess().getCommercialAtKeyword_0());
                  
            }
            // InternalSCTX.g:6816:1: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:6817:1: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:6817:1: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:6818:3: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTagAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTagAnnotationRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTagAnnotation"


    // $ANTLR start "entryRulePragmaTag"
    // InternalSCTX.g:6842:1: entryRulePragmaTag returns [EObject current=null] : iv_rulePragmaTag= rulePragmaTag EOF ;
    public final EObject entryRulePragmaTag() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePragmaTag = null;


        try {
            // InternalSCTX.g:6843:2: (iv_rulePragmaTag= rulePragmaTag EOF )
            // InternalSCTX.g:6844:2: iv_rulePragmaTag= rulePragmaTag EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPragmaTagRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePragmaTag=rulePragmaTag();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePragmaTag; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePragmaTag"


    // $ANTLR start "rulePragmaTag"
    // InternalSCTX.g:6851:1: rulePragmaTag returns [EObject current=null] : (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ) ;
    public final EObject rulePragmaTag() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:6854:28: ( (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ) )
            // InternalSCTX.g:6855:1: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) )
            {
            // InternalSCTX.g:6855:1: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) )
            // InternalSCTX.g:6855:3: otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) )
            {
            otherlv_0=(Token)match(input,72,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getPragmaTagAccess().getNumberSignKeyword_0());
                  
            }
            // InternalSCTX.g:6859:1: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:6860:1: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:6860:1: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:6861:3: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPragmaTagAccess().getNameExtendedIDParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPragmaTagRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePragmaTag"


    // $ANTLR start "entryRuleKeyStringValueAnnotation"
    // InternalSCTX.g:6885:1: entryRuleKeyStringValueAnnotation returns [EObject current=null] : iv_ruleKeyStringValueAnnotation= ruleKeyStringValueAnnotation EOF ;
    public final EObject entryRuleKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleKeyStringValueAnnotation = null;


        try {
            // InternalSCTX.g:6886:2: (iv_ruleKeyStringValueAnnotation= ruleKeyStringValueAnnotation EOF )
            // InternalSCTX.g:6887:2: iv_ruleKeyStringValueAnnotation= ruleKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleKeyStringValueAnnotation=ruleKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleKeyStringValueAnnotation"


    // $ANTLR start "ruleKeyStringValueAnnotation"
    // InternalSCTX.g:6894:1: ruleKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* ) ;
    public final EObject ruleKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_values_2_0 = null;

        AntlrDatatypeRuleToken lv_values_4_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:6897:28: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* ) )
            // InternalSCTX.g:6898:1: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* )
            {
            // InternalSCTX.g:6898:1: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* )
            // InternalSCTX.g:6898:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )*
            {
            otherlv_0=(Token)match(input,71,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
                  
            }
            // InternalSCTX.g:6902:1: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:6903:1: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:6903:1: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:6904:3: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_95);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getKeyStringValueAnnotationRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:6920:2: ( (lv_values_2_0= ruleEStringAllTypes ) )
            // InternalSCTX.g:6921:1: (lv_values_2_0= ruleEStringAllTypes )
            {
            // InternalSCTX.g:6921:1: (lv_values_2_0= ruleEStringAllTypes )
            // InternalSCTX.g:6922:3: lv_values_2_0= ruleEStringAllTypes
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_67);
            lv_values_2_0=ruleEStringAllTypes();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getKeyStringValueAnnotationRule());
              	        }
                     		add(
                     			current, 
                     			"values",
                      		lv_values_2_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:6938:2: (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )*
            loop169:
            do {
                int alt169=2;
                int LA169_0 = input.LA(1);

                if ( (LA169_0==26) ) {
                    alt169=1;
                }


                switch (alt169) {
            	case 1 :
            	    // InternalSCTX.g:6938:4: otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) )
            	    {
            	    otherlv_3=(Token)match(input,26,FollowSets000.FOLLOW_95); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_3, grammarAccess.getKeyStringValueAnnotationAccess().getCommaKeyword_3_0());
            	          
            	    }
            	    // InternalSCTX.g:6942:1: ( (lv_values_4_0= ruleEStringAllTypes ) )
            	    // InternalSCTX.g:6943:1: (lv_values_4_0= ruleEStringAllTypes )
            	    {
            	    // InternalSCTX.g:6943:1: (lv_values_4_0= ruleEStringAllTypes )
            	    // InternalSCTX.g:6944:3: lv_values_4_0= ruleEStringAllTypes
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_3_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_67);
            	    lv_values_4_0=ruleEStringAllTypes();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getKeyStringValueAnnotationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"values",
            	              		lv_values_4_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop169;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleKeyStringValueAnnotation"


    // $ANTLR start "entryRuleRestrictedKeyStringValueAnnotation"
    // InternalSCTX.g:6968:1: entryRuleRestrictedKeyStringValueAnnotation returns [EObject current=null] : iv_ruleRestrictedKeyStringValueAnnotation= ruleRestrictedKeyStringValueAnnotation EOF ;
    public final EObject entryRuleRestrictedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRestrictedKeyStringValueAnnotation = null;


        try {
            // InternalSCTX.g:6969:2: (iv_ruleRestrictedKeyStringValueAnnotation= ruleRestrictedKeyStringValueAnnotation EOF )
            // InternalSCTX.g:6970:2: iv_ruleRestrictedKeyStringValueAnnotation= ruleRestrictedKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRestrictedKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRestrictedKeyStringValueAnnotation=ruleRestrictedKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRestrictedKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRestrictedKeyStringValueAnnotation"


    // $ANTLR start "ruleRestrictedKeyStringValueAnnotation"
    // InternalSCTX.g:6977:1: ruleRestrictedKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringBoolean ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )* ) ;
    public final EObject ruleRestrictedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_values_2_0 = null;

        AntlrDatatypeRuleToken lv_values_4_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:6980:28: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringBoolean ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )* ) )
            // InternalSCTX.g:6981:1: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringBoolean ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )* )
            {
            // InternalSCTX.g:6981:1: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringBoolean ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )* )
            // InternalSCTX.g:6981:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringBoolean ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )*
            {
            otherlv_0=(Token)match(input,71,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
                  
            }
            // InternalSCTX.g:6985:1: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:6986:1: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:6986:1: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:6987:3: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_96);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getRestrictedKeyStringValueAnnotationRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:7003:2: ( (lv_values_2_0= ruleEStringBoolean ) )
            // InternalSCTX.g:7004:1: (lv_values_2_0= ruleEStringBoolean )
            {
            // InternalSCTX.g:7004:1: (lv_values_2_0= ruleEStringBoolean )
            // InternalSCTX.g:7005:3: lv_values_2_0= ruleEStringBoolean
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_67);
            lv_values_2_0=ruleEStringBoolean();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getRestrictedKeyStringValueAnnotationRule());
              	        }
                     		add(
                     			current, 
                     			"values",
                      		lv_values_2_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.EStringBoolean");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:7021:2: (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )*
            loop170:
            do {
                int alt170=2;
                int LA170_0 = input.LA(1);

                if ( (LA170_0==26) ) {
                    alt170=1;
                }


                switch (alt170) {
            	case 1 :
            	    // InternalSCTX.g:7021:4: otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) )
            	    {
            	    otherlv_3=(Token)match(input,26,FollowSets000.FOLLOW_96); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_3, grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getCommaKeyword_3_0());
            	          
            	    }
            	    // InternalSCTX.g:7025:1: ( (lv_values_4_0= ruleEStringBoolean ) )
            	    // InternalSCTX.g:7026:1: (lv_values_4_0= ruleEStringBoolean )
            	    {
            	    // InternalSCTX.g:7026:1: (lv_values_4_0= ruleEStringBoolean )
            	    // InternalSCTX.g:7027:3: lv_values_4_0= ruleEStringBoolean
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_3_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_67);
            	    lv_values_4_0=ruleEStringBoolean();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getRestrictedKeyStringValueAnnotationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"values",
            	              		lv_values_4_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.EStringBoolean");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop170;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRestrictedKeyStringValueAnnotation"


    // $ANTLR start "entryRuleStringPragma"
    // InternalSCTX.g:7051:1: entryRuleStringPragma returns [EObject current=null] : iv_ruleStringPragma= ruleStringPragma EOF ;
    public final EObject entryRuleStringPragma() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStringPragma = null;


        try {
            // InternalSCTX.g:7052:2: (iv_ruleStringPragma= ruleStringPragma EOF )
            // InternalSCTX.g:7053:2: iv_ruleStringPragma= ruleStringPragma EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStringPragmaRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStringPragma=ruleStringPragma();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStringPragma; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStringPragma"


    // $ANTLR start "ruleStringPragma"
    // InternalSCTX.g:7060:1: ruleStringPragma returns [EObject current=null] : (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* ) ;
    public final EObject ruleStringPragma() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_values_2_0 = null;

        AntlrDatatypeRuleToken lv_values_4_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:7063:28: ( (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* ) )
            // InternalSCTX.g:7064:1: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* )
            {
            // InternalSCTX.g:7064:1: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* )
            // InternalSCTX.g:7064:3: otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )*
            {
            otherlv_0=(Token)match(input,72,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getStringPragmaAccess().getNumberSignKeyword_0());
                  
            }
            // InternalSCTX.g:7068:1: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:7069:1: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:7069:1: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:7070:3: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getStringPragmaAccess().getNameExtendedIDParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_95);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getStringPragmaRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:7086:2: ( (lv_values_2_0= ruleEStringAllTypes ) )
            // InternalSCTX.g:7087:1: (lv_values_2_0= ruleEStringAllTypes )
            {
            // InternalSCTX.g:7087:1: (lv_values_2_0= ruleEStringAllTypes )
            // InternalSCTX.g:7088:3: lv_values_2_0= ruleEStringAllTypes
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getStringPragmaAccess().getValuesEStringAllTypesParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_67);
            lv_values_2_0=ruleEStringAllTypes();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getStringPragmaRule());
              	        }
                     		add(
                     			current, 
                     			"values",
                      		lv_values_2_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:7104:2: (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )*
            loop171:
            do {
                int alt171=2;
                int LA171_0 = input.LA(1);

                if ( (LA171_0==26) ) {
                    alt171=1;
                }


                switch (alt171) {
            	case 1 :
            	    // InternalSCTX.g:7104:4: otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) )
            	    {
            	    otherlv_3=(Token)match(input,26,FollowSets000.FOLLOW_95); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_3, grammarAccess.getStringPragmaAccess().getCommaKeyword_3_0());
            	          
            	    }
            	    // InternalSCTX.g:7108:1: ( (lv_values_4_0= ruleEStringAllTypes ) )
            	    // InternalSCTX.g:7109:1: (lv_values_4_0= ruleEStringAllTypes )
            	    {
            	    // InternalSCTX.g:7109:1: (lv_values_4_0= ruleEStringAllTypes )
            	    // InternalSCTX.g:7110:3: lv_values_4_0= ruleEStringAllTypes
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getStringPragmaAccess().getValuesEStringAllTypesParserRuleCall_3_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_67);
            	    lv_values_4_0=ruleEStringAllTypes();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getStringPragmaRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"values",
            	              		lv_values_4_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop171;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStringPragma"


    // $ANTLR start "entryRuleTypedKeyStringValueAnnotation"
    // InternalSCTX.g:7134:1: entryRuleTypedKeyStringValueAnnotation returns [EObject current=null] : iv_ruleTypedKeyStringValueAnnotation= ruleTypedKeyStringValueAnnotation EOF ;
    public final EObject entryRuleTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypedKeyStringValueAnnotation = null;


        try {
            // InternalSCTX.g:7135:2: (iv_ruleTypedKeyStringValueAnnotation= ruleTypedKeyStringValueAnnotation EOF )
            // InternalSCTX.g:7136:2: iv_ruleTypedKeyStringValueAnnotation= ruleTypedKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypedKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypedKeyStringValueAnnotation=ruleTypedKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypedKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypedKeyStringValueAnnotation"


    // $ANTLR start "ruleTypedKeyStringValueAnnotation"
    // InternalSCTX.g:7143:1: ruleTypedKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringAllTypes ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )* ) ;
    public final EObject ruleTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_type_3_0 = null;

        AntlrDatatypeRuleToken lv_values_5_0 = null;

        AntlrDatatypeRuleToken lv_values_7_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:7146:28: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringAllTypes ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )* ) )
            // InternalSCTX.g:7147:1: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringAllTypes ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )* )
            {
            // InternalSCTX.g:7147:1: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringAllTypes ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )* )
            // InternalSCTX.g:7147:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringAllTypes ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )*
            {
            otherlv_0=(Token)match(input,71,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getTypedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
                  
            }
            // InternalSCTX.g:7151:1: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:7152:1: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:7152:1: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:7153:3: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTypedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_97);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTypedKeyStringValueAnnotationRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,31,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getTypedKeyStringValueAnnotationAccess().getLeftSquareBracketKeyword_2());
                  
            }
            // InternalSCTX.g:7173:1: ( (lv_type_3_0= ruleExtendedID ) )
            // InternalSCTX.g:7174:1: (lv_type_3_0= ruleExtendedID )
            {
            // InternalSCTX.g:7174:1: (lv_type_3_0= ruleExtendedID )
            // InternalSCTX.g:7175:3: lv_type_3_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTypedKeyStringValueAnnotationAccess().getTypeExtendedIDParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_28);
            lv_type_3_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTypedKeyStringValueAnnotationRule());
              	        }
                     		set(
                     			current, 
                     			"type",
                      		lv_type_3_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_4=(Token)match(input,32,FollowSets000.FOLLOW_95); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getTypedKeyStringValueAnnotationAccess().getRightSquareBracketKeyword_4());
                  
            }
            // InternalSCTX.g:7195:1: ( (lv_values_5_0= ruleEStringAllTypes ) )
            // InternalSCTX.g:7196:1: (lv_values_5_0= ruleEStringAllTypes )
            {
            // InternalSCTX.g:7196:1: (lv_values_5_0= ruleEStringAllTypes )
            // InternalSCTX.g:7197:3: lv_values_5_0= ruleEStringAllTypes
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_5_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_67);
            lv_values_5_0=ruleEStringAllTypes();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTypedKeyStringValueAnnotationRule());
              	        }
                     		add(
                     			current, 
                     			"values",
                      		lv_values_5_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:7213:2: (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )*
            loop172:
            do {
                int alt172=2;
                int LA172_0 = input.LA(1);

                if ( (LA172_0==26) ) {
                    alt172=1;
                }


                switch (alt172) {
            	case 1 :
            	    // InternalSCTX.g:7213:4: otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) )
            	    {
            	    otherlv_6=(Token)match(input,26,FollowSets000.FOLLOW_95); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_6, grammarAccess.getTypedKeyStringValueAnnotationAccess().getCommaKeyword_6_0());
            	          
            	    }
            	    // InternalSCTX.g:7217:1: ( (lv_values_7_0= ruleEStringAllTypes ) )
            	    // InternalSCTX.g:7218:1: (lv_values_7_0= ruleEStringAllTypes )
            	    {
            	    // InternalSCTX.g:7218:1: (lv_values_7_0= ruleEStringAllTypes )
            	    // InternalSCTX.g:7219:3: lv_values_7_0= ruleEStringAllTypes
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_6_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_67);
            	    lv_values_7_0=ruleEStringAllTypes();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getTypedKeyStringValueAnnotationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"values",
            	              		lv_values_7_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop172;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypedKeyStringValueAnnotation"


    // $ANTLR start "entryRuleRestrictedTypedKeyStringValueAnnotation"
    // InternalSCTX.g:7243:1: entryRuleRestrictedTypedKeyStringValueAnnotation returns [EObject current=null] : iv_ruleRestrictedTypedKeyStringValueAnnotation= ruleRestrictedTypedKeyStringValueAnnotation EOF ;
    public final EObject entryRuleRestrictedTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRestrictedTypedKeyStringValueAnnotation = null;


        try {
            // InternalSCTX.g:7244:2: (iv_ruleRestrictedTypedKeyStringValueAnnotation= ruleRestrictedTypedKeyStringValueAnnotation EOF )
            // InternalSCTX.g:7245:2: iv_ruleRestrictedTypedKeyStringValueAnnotation= ruleRestrictedTypedKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRestrictedTypedKeyStringValueAnnotation=ruleRestrictedTypedKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRestrictedTypedKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRestrictedTypedKeyStringValueAnnotation"


    // $ANTLR start "ruleRestrictedTypedKeyStringValueAnnotation"
    // InternalSCTX.g:7252:1: ruleRestrictedTypedKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringBoolean ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )* ) ;
    public final EObject ruleRestrictedTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_type_3_0 = null;

        AntlrDatatypeRuleToken lv_values_5_0 = null;

        AntlrDatatypeRuleToken lv_values_7_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:7255:28: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringBoolean ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )* ) )
            // InternalSCTX.g:7256:1: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringBoolean ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )* )
            {
            // InternalSCTX.g:7256:1: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringBoolean ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )* )
            // InternalSCTX.g:7256:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringBoolean ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )*
            {
            otherlv_0=(Token)match(input,71,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
                  
            }
            // InternalSCTX.g:7260:1: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:7261:1: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:7261:1: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:7262:3: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_97);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,31,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getLeftSquareBracketKeyword_2());
                  
            }
            // InternalSCTX.g:7282:1: ( (lv_type_3_0= ruleExtendedID ) )
            // InternalSCTX.g:7283:1: (lv_type_3_0= ruleExtendedID )
            {
            // InternalSCTX.g:7283:1: (lv_type_3_0= ruleExtendedID )
            // InternalSCTX.g:7284:3: lv_type_3_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getTypeExtendedIDParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_28);
            lv_type_3_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule());
              	        }
                     		set(
                     			current, 
                     			"type",
                      		lv_type_3_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_4=(Token)match(input,32,FollowSets000.FOLLOW_96); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getRightSquareBracketKeyword_4());
                  
            }
            // InternalSCTX.g:7304:1: ( (lv_values_5_0= ruleEStringBoolean ) )
            // InternalSCTX.g:7305:1: (lv_values_5_0= ruleEStringBoolean )
            {
            // InternalSCTX.g:7305:1: (lv_values_5_0= ruleEStringBoolean )
            // InternalSCTX.g:7306:3: lv_values_5_0= ruleEStringBoolean
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_5_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_67);
            lv_values_5_0=ruleEStringBoolean();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule());
              	        }
                     		add(
                     			current, 
                     			"values",
                      		lv_values_5_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.EStringBoolean");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:7322:2: (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )*
            loop173:
            do {
                int alt173=2;
                int LA173_0 = input.LA(1);

                if ( (LA173_0==26) ) {
                    alt173=1;
                }


                switch (alt173) {
            	case 1 :
            	    // InternalSCTX.g:7322:4: otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) )
            	    {
            	    otherlv_6=(Token)match(input,26,FollowSets000.FOLLOW_96); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_6, grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getCommaKeyword_6_0());
            	          
            	    }
            	    // InternalSCTX.g:7326:1: ( (lv_values_7_0= ruleEStringBoolean ) )
            	    // InternalSCTX.g:7327:1: (lv_values_7_0= ruleEStringBoolean )
            	    {
            	    // InternalSCTX.g:7327:1: (lv_values_7_0= ruleEStringBoolean )
            	    // InternalSCTX.g:7328:3: lv_values_7_0= ruleEStringBoolean
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_6_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_67);
            	    lv_values_7_0=ruleEStringBoolean();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"values",
            	              		lv_values_7_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.EStringBoolean");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop173;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRestrictedTypedKeyStringValueAnnotation"


    // $ANTLR start "entryRuleQuotedKeyStringValueAnnotation"
    // InternalSCTX.g:7352:1: entryRuleQuotedKeyStringValueAnnotation returns [EObject current=null] : iv_ruleQuotedKeyStringValueAnnotation= ruleQuotedKeyStringValueAnnotation EOF ;
    public final EObject entryRuleQuotedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQuotedKeyStringValueAnnotation = null;


        try {
            // InternalSCTX.g:7353:2: (iv_ruleQuotedKeyStringValueAnnotation= ruleQuotedKeyStringValueAnnotation EOF )
            // InternalSCTX.g:7354:2: iv_ruleQuotedKeyStringValueAnnotation= ruleQuotedKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQuotedKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleQuotedKeyStringValueAnnotation=ruleQuotedKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQuotedKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQuotedKeyStringValueAnnotation"


    // $ANTLR start "ruleQuotedKeyStringValueAnnotation"
    // InternalSCTX.g:7361:1: ruleQuotedKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )* ) ;
    public final EObject ruleQuotedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_values_2_0=null;
        Token otherlv_3=null;
        Token lv_values_4_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:7364:28: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )* ) )
            // InternalSCTX.g:7365:1: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )* )
            {
            // InternalSCTX.g:7365:1: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )* )
            // InternalSCTX.g:7365:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )*
            {
            otherlv_0=(Token)match(input,71,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getQuotedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
                  
            }
            // InternalSCTX.g:7369:1: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:7370:1: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:7370:1: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:7371:3: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_38);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getQuotedKeyStringValueAnnotationRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSCTX.g:7387:2: ( (lv_values_2_0= RULE_STRING ) )
            // InternalSCTX.g:7388:1: (lv_values_2_0= RULE_STRING )
            {
            // InternalSCTX.g:7388:1: (lv_values_2_0= RULE_STRING )
            // InternalSCTX.g:7389:3: lv_values_2_0= RULE_STRING
            {
            lv_values_2_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_67); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_values_2_0, grammarAccess.getQuotedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getQuotedKeyStringValueAnnotationRule());
              	        }
                     		addWithLastConsumed(
                     			current, 
                     			"values",
                      		lv_values_2_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.STRING");
              	    
            }

            }


            }

            // InternalSCTX.g:7405:2: (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )*
            loop174:
            do {
                int alt174=2;
                int LA174_0 = input.LA(1);

                if ( (LA174_0==26) ) {
                    alt174=1;
                }


                switch (alt174) {
            	case 1 :
            	    // InternalSCTX.g:7405:4: otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) )
            	    {
            	    otherlv_3=(Token)match(input,26,FollowSets000.FOLLOW_38); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_3, grammarAccess.getQuotedKeyStringValueAnnotationAccess().getCommaKeyword_3_0());
            	          
            	    }
            	    // InternalSCTX.g:7409:1: ( (lv_values_4_0= RULE_STRING ) )
            	    // InternalSCTX.g:7410:1: (lv_values_4_0= RULE_STRING )
            	    {
            	    // InternalSCTX.g:7410:1: (lv_values_4_0= RULE_STRING )
            	    // InternalSCTX.g:7411:3: lv_values_4_0= RULE_STRING
            	    {
            	    lv_values_4_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_67); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      			newLeafNode(lv_values_4_0, grammarAccess.getQuotedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_3_1_0()); 
            	      		
            	    }
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElement(grammarAccess.getQuotedKeyStringValueAnnotationRule());
            	      	        }
            	             		addWithLastConsumed(
            	             			current, 
            	             			"values",
            	              		lv_values_4_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.STRING");
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop174;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQuotedKeyStringValueAnnotation"


    // $ANTLR start "entryRuleQuotedTypedKeyStringValueAnnotation"
    // InternalSCTX.g:7435:1: entryRuleQuotedTypedKeyStringValueAnnotation returns [EObject current=null] : iv_ruleQuotedTypedKeyStringValueAnnotation= ruleQuotedTypedKeyStringValueAnnotation EOF ;
    public final EObject entryRuleQuotedTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQuotedTypedKeyStringValueAnnotation = null;


        try {
            // InternalSCTX.g:7436:2: (iv_ruleQuotedTypedKeyStringValueAnnotation= ruleQuotedTypedKeyStringValueAnnotation EOF )
            // InternalSCTX.g:7437:2: iv_ruleQuotedTypedKeyStringValueAnnotation= ruleQuotedTypedKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleQuotedTypedKeyStringValueAnnotation=ruleQuotedTypedKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQuotedTypedKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQuotedTypedKeyStringValueAnnotation"


    // $ANTLR start "ruleQuotedTypedKeyStringValueAnnotation"
    // InternalSCTX.g:7444:1: ruleQuotedTypedKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= RULE_STRING ) ) (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )* ) ;
    public final EObject ruleQuotedTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_values_5_0=null;
        Token otherlv_6=null;
        Token lv_values_7_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_type_3_0 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:7447:28: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= RULE_STRING ) ) (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )* ) )
            // InternalSCTX.g:7448:1: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= RULE_STRING ) ) (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )* )
            {
            // InternalSCTX.g:7448:1: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= RULE_STRING ) ) (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )* )
            // InternalSCTX.g:7448:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= RULE_STRING ) ) (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )*
            {
            otherlv_0=(Token)match(input,71,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
                  
            }
            // InternalSCTX.g:7452:1: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:7453:1: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:7453:1: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:7454:3: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_97);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,31,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getLeftSquareBracketKeyword_2());
                  
            }
            // InternalSCTX.g:7474:1: ( (lv_type_3_0= ruleExtendedID ) )
            // InternalSCTX.g:7475:1: (lv_type_3_0= ruleExtendedID )
            {
            // InternalSCTX.g:7475:1: (lv_type_3_0= ruleExtendedID )
            // InternalSCTX.g:7476:3: lv_type_3_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getTypeExtendedIDParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_28);
            lv_type_3_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule());
              	        }
                     		set(
                     			current, 
                     			"type",
                      		lv_type_3_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_4=(Token)match(input,32,FollowSets000.FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getRightSquareBracketKeyword_4());
                  
            }
            // InternalSCTX.g:7496:1: ( (lv_values_5_0= RULE_STRING ) )
            // InternalSCTX.g:7497:1: (lv_values_5_0= RULE_STRING )
            {
            // InternalSCTX.g:7497:1: (lv_values_5_0= RULE_STRING )
            // InternalSCTX.g:7498:3: lv_values_5_0= RULE_STRING
            {
            lv_values_5_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_67); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_values_5_0, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_5_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule());
              	        }
                     		addWithLastConsumed(
                     			current, 
                     			"values",
                      		lv_values_5_0, 
                      		"de.cau.cs.kieler.annotations.Annotations.STRING");
              	    
            }

            }


            }

            // InternalSCTX.g:7514:2: (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )*
            loop175:
            do {
                int alt175=2;
                int LA175_0 = input.LA(1);

                if ( (LA175_0==26) ) {
                    alt175=1;
                }


                switch (alt175) {
            	case 1 :
            	    // InternalSCTX.g:7514:4: otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) )
            	    {
            	    otherlv_6=(Token)match(input,26,FollowSets000.FOLLOW_38); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_6, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getCommaKeyword_6_0());
            	          
            	    }
            	    // InternalSCTX.g:7518:1: ( (lv_values_7_0= RULE_STRING ) )
            	    // InternalSCTX.g:7519:1: (lv_values_7_0= RULE_STRING )
            	    {
            	    // InternalSCTX.g:7519:1: (lv_values_7_0= RULE_STRING )
            	    // InternalSCTX.g:7520:3: lv_values_7_0= RULE_STRING
            	    {
            	    lv_values_7_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_67); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      			newLeafNode(lv_values_7_0, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_6_1_0()); 
            	      		
            	    }
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElement(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule());
            	      	        }
            	             		addWithLastConsumed(
            	             			current, 
            	             			"values",
            	              		lv_values_7_0, 
            	              		"de.cau.cs.kieler.annotations.Annotations.STRING");
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop175;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQuotedTypedKeyStringValueAnnotation"


    // $ANTLR start "entryRuleEStringBoolean"
    // InternalSCTX.g:7546:1: entryRuleEStringBoolean returns [String current=null] : iv_ruleEStringBoolean= ruleEStringBoolean EOF ;
    public final String entryRuleEStringBoolean() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEStringBoolean = null;


        try {
            // InternalSCTX.g:7547:2: (iv_ruleEStringBoolean= ruleEStringBoolean EOF )
            // InternalSCTX.g:7548:2: iv_ruleEStringBoolean= ruleEStringBoolean EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEStringBooleanRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEStringBoolean=ruleEStringBoolean();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEStringBoolean.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEStringBoolean"


    // $ANTLR start "ruleEStringBoolean"
    // InternalSCTX.g:7555:1: ruleEStringBoolean returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN ) ;
    public final AntlrDatatypeRuleToken ruleEStringBoolean() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_0=null;
        Token this_BOOLEAN_2=null;
        AntlrDatatypeRuleToken this_ExtendedID_1 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:7558:28: ( (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN ) )
            // InternalSCTX.g:7559:1: (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN )
            {
            // InternalSCTX.g:7559:1: (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN )
            int alt176=3;
            switch ( input.LA(1) ) {
            case RULE_STRING:
                {
                alt176=1;
                }
                break;
            case RULE_ID:
                {
                alt176=2;
                }
                break;
            case RULE_BOOLEAN:
                {
                alt176=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 176, 0, input);

                throw nvae;
            }

            switch (alt176) {
                case 1 :
                    // InternalSCTX.g:7559:6: this_STRING_0= RULE_STRING
                    {
                    this_STRING_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_STRING_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_STRING_0, grammarAccess.getEStringBooleanAccess().getSTRINGTerminalRuleCall_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:7568:5: this_ExtendedID_1= ruleExtendedID
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getEStringBooleanAccess().getExtendedIDParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ExtendedID_1=ruleExtendedID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_ExtendedID_1);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:7579:10: this_BOOLEAN_2= RULE_BOOLEAN
                    {
                    this_BOOLEAN_2=(Token)match(input,RULE_BOOLEAN,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_BOOLEAN_2);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_BOOLEAN_2, grammarAccess.getEStringBooleanAccess().getBOOLEANTerminalRuleCall_2()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEStringBoolean"


    // $ANTLR start "entryRuleEStringAllTypes"
    // InternalSCTX.g:7594:1: entryRuleEStringAllTypes returns [String current=null] : iv_ruleEStringAllTypes= ruleEStringAllTypes EOF ;
    public final String entryRuleEStringAllTypes() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEStringAllTypes = null;


        try {
            // InternalSCTX.g:7595:2: (iv_ruleEStringAllTypes= ruleEStringAllTypes EOF )
            // InternalSCTX.g:7596:2: iv_ruleEStringAllTypes= ruleEStringAllTypes EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEStringAllTypesRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEStringAllTypes=ruleEStringAllTypes();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEStringAllTypes.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEStringAllTypes"


    // $ANTLR start "ruleEStringAllTypes"
    // InternalSCTX.g:7603:1: ruleEStringAllTypes returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN | this_Integer_3= ruleInteger | this_Floateger_4= ruleFloateger ) ;
    public final AntlrDatatypeRuleToken ruleEStringAllTypes() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_0=null;
        Token this_BOOLEAN_2=null;
        AntlrDatatypeRuleToken this_ExtendedID_1 = null;

        AntlrDatatypeRuleToken this_Integer_3 = null;

        AntlrDatatypeRuleToken this_Floateger_4 = null;


         enterRule(); 
            
        try {
            // InternalSCTX.g:7606:28: ( (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN | this_Integer_3= ruleInteger | this_Floateger_4= ruleFloateger ) )
            // InternalSCTX.g:7607:1: (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN | this_Integer_3= ruleInteger | this_Floateger_4= ruleFloateger )
            {
            // InternalSCTX.g:7607:1: (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN | this_Integer_3= ruleInteger | this_Floateger_4= ruleFloateger )
            int alt177=5;
            switch ( input.LA(1) ) {
            case RULE_STRING:
                {
                alt177=1;
                }
                break;
            case RULE_ID:
                {
                alt177=2;
                }
                break;
            case RULE_BOOLEAN:
                {
                alt177=3;
                }
                break;
            case 66:
                {
                int LA177_4 = input.LA(2);

                if ( (LA177_4==RULE_FLOAT) ) {
                    alt177=5;
                }
                else if ( (LA177_4==RULE_INT) ) {
                    alt177=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 177, 4, input);

                    throw nvae;
                }
                }
                break;
            case RULE_INT:
                {
                alt177=4;
                }
                break;
            case RULE_FLOAT:
                {
                alt177=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 177, 0, input);

                throw nvae;
            }

            switch (alt177) {
                case 1 :
                    // InternalSCTX.g:7607:6: this_STRING_0= RULE_STRING
                    {
                    this_STRING_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_STRING_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_STRING_0, grammarAccess.getEStringAllTypesAccess().getSTRINGTerminalRuleCall_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:7616:5: this_ExtendedID_1= ruleExtendedID
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getEStringAllTypesAccess().getExtendedIDParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ExtendedID_1=ruleExtendedID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_ExtendedID_1);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:7627:10: this_BOOLEAN_2= RULE_BOOLEAN
                    {
                    this_BOOLEAN_2=(Token)match(input,RULE_BOOLEAN,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_BOOLEAN_2);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_BOOLEAN_2, grammarAccess.getEStringAllTypesAccess().getBOOLEANTerminalRuleCall_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalSCTX.g:7636:5: this_Integer_3= ruleInteger
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getEStringAllTypesAccess().getIntegerParserRuleCall_3()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Integer_3=ruleInteger();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_Integer_3);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    // InternalSCTX.g:7648:5: this_Floateger_4= ruleFloateger
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getEStringAllTypesAccess().getFloategerParserRuleCall_4()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Floateger_4=ruleFloateger();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_Floateger_4);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEStringAllTypes"


    // $ANTLR start "entryRuleExtendedID"
    // InternalSCTX.g:7666:1: entryRuleExtendedID returns [String current=null] : iv_ruleExtendedID= ruleExtendedID EOF ;
    public final String entryRuleExtendedID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleExtendedID = null;


        try {
            // InternalSCTX.g:7667:2: (iv_ruleExtendedID= ruleExtendedID EOF )
            // InternalSCTX.g:7668:2: iv_ruleExtendedID= ruleExtendedID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExtendedIDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleExtendedID=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExtendedID.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExtendedID"


    // $ANTLR start "ruleExtendedID"
    // InternalSCTX.g:7675:1: ruleExtendedID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ID_0= RULE_ID (kw= '.' this_ID_2= RULE_ID )* (kw= '#' this_INT_4= RULE_INT )? ) ;
    public final AntlrDatatypeRuleToken ruleExtendedID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;
        Token kw=null;
        Token this_ID_2=null;
        Token this_INT_4=null;

         enterRule(); 
            
        try {
            // InternalSCTX.g:7678:28: ( (this_ID_0= RULE_ID (kw= '.' this_ID_2= RULE_ID )* (kw= '#' this_INT_4= RULE_INT )? ) )
            // InternalSCTX.g:7679:1: (this_ID_0= RULE_ID (kw= '.' this_ID_2= RULE_ID )* (kw= '#' this_INT_4= RULE_INT )? )
            {
            // InternalSCTX.g:7679:1: (this_ID_0= RULE_ID (kw= '.' this_ID_2= RULE_ID )* (kw= '#' this_INT_4= RULE_INT )? )
            // InternalSCTX.g:7679:6: this_ID_0= RULE_ID (kw= '.' this_ID_2= RULE_ID )* (kw= '#' this_INT_4= RULE_INT )?
            {
            this_ID_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_98); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_ID_0);
                  
            }
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_ID_0, grammarAccess.getExtendedIDAccess().getIDTerminalRuleCall_0()); 
                  
            }
            // InternalSCTX.g:7686:1: (kw= '.' this_ID_2= RULE_ID )*
            loop178:
            do {
                int alt178=2;
                int LA178_0 = input.LA(1);

                if ( (LA178_0==58) ) {
                    alt178=1;
                }


                switch (alt178) {
            	case 1 :
            	    // InternalSCTX.g:7687:2: kw= '.' this_ID_2= RULE_ID
            	    {
            	    kw=(Token)match(input,58,FollowSets000.FOLLOW_6); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	              current.merge(kw);
            	              newLeafNode(kw, grammarAccess.getExtendedIDAccess().getFullStopKeyword_1_0()); 
            	          
            	    }
            	    this_ID_2=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_98); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_ID_2);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_ID_2, grammarAccess.getExtendedIDAccess().getIDTerminalRuleCall_1_1()); 
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop178;
                }
            } while (true);

            // InternalSCTX.g:7699:3: (kw= '#' this_INT_4= RULE_INT )?
            int alt179=2;
            int LA179_0 = input.LA(1);

            if ( (LA179_0==72) ) {
                int LA179_1 = input.LA(2);

                if ( (LA179_1==RULE_INT) ) {
                    alt179=1;
                }
            }
            switch (alt179) {
                case 1 :
                    // InternalSCTX.g:7700:2: kw= '#' this_INT_4= RULE_INT
                    {
                    kw=(Token)match(input,72,FollowSets000.FOLLOW_99); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getExtendedIDAccess().getNumberSignKeyword_2_0()); 
                          
                    }
                    this_INT_4=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_INT_4);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_INT_4, grammarAccess.getExtendedIDAccess().getINTTerminalRuleCall_2_1()); 
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExtendedID"


    // $ANTLR start "entryRuleInteger"
    // InternalSCTX.g:7722:1: entryRuleInteger returns [String current=null] : iv_ruleInteger= ruleInteger EOF ;
    public final String entryRuleInteger() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleInteger = null;


        try {
            // InternalSCTX.g:7723:2: (iv_ruleInteger= ruleInteger EOF )
            // InternalSCTX.g:7724:2: iv_ruleInteger= ruleInteger EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIntegerRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleInteger=ruleInteger();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInteger.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInteger"


    // $ANTLR start "ruleInteger"
    // InternalSCTX.g:7731:1: ruleInteger returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= '-' )? this_INT_1= RULE_INT ) ;
    public final AntlrDatatypeRuleToken ruleInteger() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_INT_1=null;

         enterRule(); 
            
        try {
            // InternalSCTX.g:7734:28: ( ( (kw= '-' )? this_INT_1= RULE_INT ) )
            // InternalSCTX.g:7735:1: ( (kw= '-' )? this_INT_1= RULE_INT )
            {
            // InternalSCTX.g:7735:1: ( (kw= '-' )? this_INT_1= RULE_INT )
            // InternalSCTX.g:7735:2: (kw= '-' )? this_INT_1= RULE_INT
            {
            // InternalSCTX.g:7735:2: (kw= '-' )?
            int alt180=2;
            int LA180_0 = input.LA(1);

            if ( (LA180_0==66) ) {
                alt180=1;
            }
            switch (alt180) {
                case 1 :
                    // InternalSCTX.g:7736:2: kw= '-'
                    {
                    kw=(Token)match(input,66,FollowSets000.FOLLOW_99); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getIntegerAccess().getHyphenMinusKeyword_0()); 
                          
                    }

                    }
                    break;

            }

            this_INT_1=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_INT_1);
                  
            }
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_INT_1, grammarAccess.getIntegerAccess().getINTTerminalRuleCall_1()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInteger"


    // $ANTLR start "entryRuleFloateger"
    // InternalSCTX.g:7756:1: entryRuleFloateger returns [String current=null] : iv_ruleFloateger= ruleFloateger EOF ;
    public final String entryRuleFloateger() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleFloateger = null;


        try {
            // InternalSCTX.g:7757:2: (iv_ruleFloateger= ruleFloateger EOF )
            // InternalSCTX.g:7758:2: iv_ruleFloateger= ruleFloateger EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFloategerRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFloateger=ruleFloateger();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFloateger.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFloateger"


    // $ANTLR start "ruleFloateger"
    // InternalSCTX.g:7765:1: ruleFloateger returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= '-' )? this_FLOAT_1= RULE_FLOAT ) ;
    public final AntlrDatatypeRuleToken ruleFloateger() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_FLOAT_1=null;

         enterRule(); 
            
        try {
            // InternalSCTX.g:7768:28: ( ( (kw= '-' )? this_FLOAT_1= RULE_FLOAT ) )
            // InternalSCTX.g:7769:1: ( (kw= '-' )? this_FLOAT_1= RULE_FLOAT )
            {
            // InternalSCTX.g:7769:1: ( (kw= '-' )? this_FLOAT_1= RULE_FLOAT )
            // InternalSCTX.g:7769:2: (kw= '-' )? this_FLOAT_1= RULE_FLOAT
            {
            // InternalSCTX.g:7769:2: (kw= '-' )?
            int alt181=2;
            int LA181_0 = input.LA(1);

            if ( (LA181_0==66) ) {
                alt181=1;
            }
            switch (alt181) {
                case 1 :
                    // InternalSCTX.g:7770:2: kw= '-'
                    {
                    kw=(Token)match(input,66,FollowSets000.FOLLOW_100); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getFloategerAccess().getHyphenMinusKeyword_0()); 
                          
                    }

                    }
                    break;

            }

            this_FLOAT_1=(Token)match(input,RULE_FLOAT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_FLOAT_1);
                  
            }
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_FLOAT_1, grammarAccess.getFloategerAccess().getFLOATTerminalRuleCall_1()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFloateger"


    // $ANTLR start "rulePreemptionType"
    // InternalSCTX.g:7790:1: rulePreemptionType returns [Enumerator current=null] : ( (enumLiteral_0= 'go to' ) | (enumLiteral_1= 'abort to' ) | (enumLiteral_2= 'join to' ) ) ;
    public final Enumerator rulePreemptionType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;

         enterRule(); 
        try {
            // InternalSCTX.g:7792:28: ( ( (enumLiteral_0= 'go to' ) | (enumLiteral_1= 'abort to' ) | (enumLiteral_2= 'join to' ) ) )
            // InternalSCTX.g:7793:1: ( (enumLiteral_0= 'go to' ) | (enumLiteral_1= 'abort to' ) | (enumLiteral_2= 'join to' ) )
            {
            // InternalSCTX.g:7793:1: ( (enumLiteral_0= 'go to' ) | (enumLiteral_1= 'abort to' ) | (enumLiteral_2= 'join to' ) )
            int alt182=3;
            switch ( input.LA(1) ) {
            case 73:
                {
                alt182=1;
                }
                break;
            case 74:
                {
                alt182=2;
                }
                break;
            case 75:
                {
                alt182=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 182, 0, input);

                throw nvae;
            }

            switch (alt182) {
                case 1 :
                    // InternalSCTX.g:7793:2: (enumLiteral_0= 'go to' )
                    {
                    // InternalSCTX.g:7793:2: (enumLiteral_0= 'go to' )
                    // InternalSCTX.g:7793:4: enumLiteral_0= 'go to'
                    {
                    enumLiteral_0=(Token)match(input,73,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getPreemptionTypeAccess().getWEAKABORTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_0, grammarAccess.getPreemptionTypeAccess().getWEAKABORTEnumLiteralDeclaration_0()); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:7799:6: (enumLiteral_1= 'abort to' )
                    {
                    // InternalSCTX.g:7799:6: (enumLiteral_1= 'abort to' )
                    // InternalSCTX.g:7799:8: enumLiteral_1= 'abort to'
                    {
                    enumLiteral_1=(Token)match(input,74,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getPreemptionTypeAccess().getSTRONGABORTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_1, grammarAccess.getPreemptionTypeAccess().getSTRONGABORTEnumLiteralDeclaration_1()); 
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSCTX.g:7805:6: (enumLiteral_2= 'join to' )
                    {
                    // InternalSCTX.g:7805:6: (enumLiteral_2= 'join to' )
                    // InternalSCTX.g:7805:8: enumLiteral_2= 'join to'
                    {
                    enumLiteral_2=(Token)match(input,75,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getPreemptionTypeAccess().getTERMINATIONEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_2, grammarAccess.getPreemptionTypeAccess().getTERMINATIONEnumLiteralDeclaration_2()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePreemptionType"


    // $ANTLR start "rulePreemptionTypeLegacy"
    // InternalSCTX.g:7815:1: rulePreemptionTypeLegacy returns [Enumerator current=null] : ( (enumLiteral_0= '-->' ) | (enumLiteral_1= 'o->' ) | (enumLiteral_2= '>->' ) ) ;
    public final Enumerator rulePreemptionTypeLegacy() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;

         enterRule(); 
        try {
            // InternalSCTX.g:7817:28: ( ( (enumLiteral_0= '-->' ) | (enumLiteral_1= 'o->' ) | (enumLiteral_2= '>->' ) ) )
            // InternalSCTX.g:7818:1: ( (enumLiteral_0= '-->' ) | (enumLiteral_1= 'o->' ) | (enumLiteral_2= '>->' ) )
            {
            // InternalSCTX.g:7818:1: ( (enumLiteral_0= '-->' ) | (enumLiteral_1= 'o->' ) | (enumLiteral_2= '>->' ) )
            int alt183=3;
            switch ( input.LA(1) ) {
            case 76:
                {
                alt183=1;
                }
                break;
            case 77:
                {
                alt183=2;
                }
                break;
            case 78:
                {
                alt183=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 183, 0, input);

                throw nvae;
            }

            switch (alt183) {
                case 1 :
                    // InternalSCTX.g:7818:2: (enumLiteral_0= '-->' )
                    {
                    // InternalSCTX.g:7818:2: (enumLiteral_0= '-->' )
                    // InternalSCTX.g:7818:4: enumLiteral_0= '-->'
                    {
                    enumLiteral_0=(Token)match(input,76,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getPreemptionTypeLegacyAccess().getWEAKABORTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_0, grammarAccess.getPreemptionTypeLegacyAccess().getWEAKABORTEnumLiteralDeclaration_0()); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:7824:6: (enumLiteral_1= 'o->' )
                    {
                    // InternalSCTX.g:7824:6: (enumLiteral_1= 'o->' )
                    // InternalSCTX.g:7824:8: enumLiteral_1= 'o->'
                    {
                    enumLiteral_1=(Token)match(input,77,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getPreemptionTypeLegacyAccess().getSTRONGABORTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_1, grammarAccess.getPreemptionTypeLegacyAccess().getSTRONGABORTEnumLiteralDeclaration_1()); 
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSCTX.g:7830:6: (enumLiteral_2= '>->' )
                    {
                    // InternalSCTX.g:7830:6: (enumLiteral_2= '>->' )
                    // InternalSCTX.g:7830:8: enumLiteral_2= '>->'
                    {
                    enumLiteral_2=(Token)match(input,78,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getPreemptionTypeLegacyAccess().getTERMINATIONEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_2, grammarAccess.getPreemptionTypeLegacyAccess().getTERMINATIONEnumLiteralDeclaration_2()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePreemptionTypeLegacy"


    // $ANTLR start "ruleDelayType"
    // InternalSCTX.g:7840:1: ruleDelayType returns [Enumerator current=null] : ( (enumLiteral_0= 'undefined' ) | (enumLiteral_1= 'delayed' ) | (enumLiteral_2= 'immediate' ) | (enumLiteral_3= 'auto' ) ) ;
    public final Enumerator ruleDelayType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;

         enterRule(); 
        try {
            // InternalSCTX.g:7842:28: ( ( (enumLiteral_0= 'undefined' ) | (enumLiteral_1= 'delayed' ) | (enumLiteral_2= 'immediate' ) | (enumLiteral_3= 'auto' ) ) )
            // InternalSCTX.g:7843:1: ( (enumLiteral_0= 'undefined' ) | (enumLiteral_1= 'delayed' ) | (enumLiteral_2= 'immediate' ) | (enumLiteral_3= 'auto' ) )
            {
            // InternalSCTX.g:7843:1: ( (enumLiteral_0= 'undefined' ) | (enumLiteral_1= 'delayed' ) | (enumLiteral_2= 'immediate' ) | (enumLiteral_3= 'auto' ) )
            int alt184=4;
            switch ( input.LA(1) ) {
            case 79:
                {
                alt184=1;
                }
                break;
            case 80:
                {
                alt184=2;
                }
                break;
            case 81:
                {
                alt184=3;
                }
                break;
            case 82:
                {
                alt184=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 184, 0, input);

                throw nvae;
            }

            switch (alt184) {
                case 1 :
                    // InternalSCTX.g:7843:2: (enumLiteral_0= 'undefined' )
                    {
                    // InternalSCTX.g:7843:2: (enumLiteral_0= 'undefined' )
                    // InternalSCTX.g:7843:4: enumLiteral_0= 'undefined'
                    {
                    enumLiteral_0=(Token)match(input,79,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getDelayTypeAccess().getUNDEFINEDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_0, grammarAccess.getDelayTypeAccess().getUNDEFINEDEnumLiteralDeclaration_0()); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:7849:6: (enumLiteral_1= 'delayed' )
                    {
                    // InternalSCTX.g:7849:6: (enumLiteral_1= 'delayed' )
                    // InternalSCTX.g:7849:8: enumLiteral_1= 'delayed'
                    {
                    enumLiteral_1=(Token)match(input,80,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getDelayTypeAccess().getDELAYEDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_1, grammarAccess.getDelayTypeAccess().getDELAYEDEnumLiteralDeclaration_1()); 
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSCTX.g:7855:6: (enumLiteral_2= 'immediate' )
                    {
                    // InternalSCTX.g:7855:6: (enumLiteral_2= 'immediate' )
                    // InternalSCTX.g:7855:8: enumLiteral_2= 'immediate'
                    {
                    enumLiteral_2=(Token)match(input,81,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getDelayTypeAccess().getIMMEDIATEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_2, grammarAccess.getDelayTypeAccess().getIMMEDIATEEnumLiteralDeclaration_2()); 
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSCTX.g:7861:6: (enumLiteral_3= 'auto' )
                    {
                    // InternalSCTX.g:7861:6: (enumLiteral_3= 'auto' )
                    // InternalSCTX.g:7861:8: enumLiteral_3= 'auto'
                    {
                    enumLiteral_3=(Token)match(input,82,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getDelayTypeAccess().getAUTOMATICEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_3, grammarAccess.getDelayTypeAccess().getAUTOMATICEnumLiteralDeclaration_3()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDelayType"


    // $ANTLR start "ruleHistoryType"
    // InternalSCTX.g:7871:1: ruleHistoryType returns [Enumerator current=null] : ( (enumLiteral_0= 'reset' ) | (enumLiteral_1= 'shallow history' ) | (enumLiteral_2= 'history' ) ) ;
    public final Enumerator ruleHistoryType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;

         enterRule(); 
        try {
            // InternalSCTX.g:7873:28: ( ( (enumLiteral_0= 'reset' ) | (enumLiteral_1= 'shallow history' ) | (enumLiteral_2= 'history' ) ) )
            // InternalSCTX.g:7874:1: ( (enumLiteral_0= 'reset' ) | (enumLiteral_1= 'shallow history' ) | (enumLiteral_2= 'history' ) )
            {
            // InternalSCTX.g:7874:1: ( (enumLiteral_0= 'reset' ) | (enumLiteral_1= 'shallow history' ) | (enumLiteral_2= 'history' ) )
            int alt185=3;
            switch ( input.LA(1) ) {
            case 83:
                {
                alt185=1;
                }
                break;
            case 84:
                {
                alt185=2;
                }
                break;
            case 85:
                {
                alt185=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 185, 0, input);

                throw nvae;
            }

            switch (alt185) {
                case 1 :
                    // InternalSCTX.g:7874:2: (enumLiteral_0= 'reset' )
                    {
                    // InternalSCTX.g:7874:2: (enumLiteral_0= 'reset' )
                    // InternalSCTX.g:7874:4: enumLiteral_0= 'reset'
                    {
                    enumLiteral_0=(Token)match(input,83,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getHistoryTypeAccess().getRESETEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_0, grammarAccess.getHistoryTypeAccess().getRESETEnumLiteralDeclaration_0()); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:7880:6: (enumLiteral_1= 'shallow history' )
                    {
                    // InternalSCTX.g:7880:6: (enumLiteral_1= 'shallow history' )
                    // InternalSCTX.g:7880:8: enumLiteral_1= 'shallow history'
                    {
                    enumLiteral_1=(Token)match(input,84,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getHistoryTypeAccess().getSHALLOWEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_1, grammarAccess.getHistoryTypeAccess().getSHALLOWEnumLiteralDeclaration_1()); 
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSCTX.g:7886:6: (enumLiteral_2= 'history' )
                    {
                    // InternalSCTX.g:7886:6: (enumLiteral_2= 'history' )
                    // InternalSCTX.g:7886:8: enumLiteral_2= 'history'
                    {
                    enumLiteral_2=(Token)match(input,85,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getHistoryTypeAccess().getDEEPEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_2, grammarAccess.getHistoryTypeAccess().getDEEPEnumLiteralDeclaration_2()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleHistoryType"


    // $ANTLR start "ruleAssignOperator"
    // InternalSCTX.g:7896:1: ruleAssignOperator returns [Enumerator current=null] : ( (enumLiteral_0= '=' ) | (enumLiteral_1= '+=' ) | (enumLiteral_2= '-=' ) | (enumLiteral_3= '*=' ) | (enumLiteral_4= '/=' ) | (enumLiteral_5= '%=' ) | (enumLiteral_6= '&=' ) | (enumLiteral_7= '|=' ) | (enumLiteral_8= '^=' ) | (enumLiteral_9= 'min=' ) | (enumLiteral_10= 'max=' ) ) ;
    public final Enumerator ruleAssignOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;
        Token enumLiteral_6=null;
        Token enumLiteral_7=null;
        Token enumLiteral_8=null;
        Token enumLiteral_9=null;
        Token enumLiteral_10=null;

         enterRule(); 
        try {
            // InternalSCTX.g:7898:28: ( ( (enumLiteral_0= '=' ) | (enumLiteral_1= '+=' ) | (enumLiteral_2= '-=' ) | (enumLiteral_3= '*=' ) | (enumLiteral_4= '/=' ) | (enumLiteral_5= '%=' ) | (enumLiteral_6= '&=' ) | (enumLiteral_7= '|=' ) | (enumLiteral_8= '^=' ) | (enumLiteral_9= 'min=' ) | (enumLiteral_10= 'max=' ) ) )
            // InternalSCTX.g:7899:1: ( (enumLiteral_0= '=' ) | (enumLiteral_1= '+=' ) | (enumLiteral_2= '-=' ) | (enumLiteral_3= '*=' ) | (enumLiteral_4= '/=' ) | (enumLiteral_5= '%=' ) | (enumLiteral_6= '&=' ) | (enumLiteral_7= '|=' ) | (enumLiteral_8= '^=' ) | (enumLiteral_9= 'min=' ) | (enumLiteral_10= 'max=' ) )
            {
            // InternalSCTX.g:7899:1: ( (enumLiteral_0= '=' ) | (enumLiteral_1= '+=' ) | (enumLiteral_2= '-=' ) | (enumLiteral_3= '*=' ) | (enumLiteral_4= '/=' ) | (enumLiteral_5= '%=' ) | (enumLiteral_6= '&=' ) | (enumLiteral_7= '|=' ) | (enumLiteral_8= '^=' ) | (enumLiteral_9= 'min=' ) | (enumLiteral_10= 'max=' ) )
            int alt186=11;
            switch ( input.LA(1) ) {
            case 56:
                {
                alt186=1;
                }
                break;
            case 86:
                {
                alt186=2;
                }
                break;
            case 87:
                {
                alt186=3;
                }
                break;
            case 88:
                {
                alt186=4;
                }
                break;
            case 89:
                {
                alt186=5;
                }
                break;
            case 90:
                {
                alt186=6;
                }
                break;
            case 91:
                {
                alt186=7;
                }
                break;
            case 92:
                {
                alt186=8;
                }
                break;
            case 93:
                {
                alt186=9;
                }
                break;
            case 94:
                {
                alt186=10;
                }
                break;
            case 95:
                {
                alt186=11;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 186, 0, input);

                throw nvae;
            }

            switch (alt186) {
                case 1 :
                    // InternalSCTX.g:7899:2: (enumLiteral_0= '=' )
                    {
                    // InternalSCTX.g:7899:2: (enumLiteral_0= '=' )
                    // InternalSCTX.g:7899:4: enumLiteral_0= '='
                    {
                    enumLiteral_0=(Token)match(input,56,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getAssignOperatorAccess().getASSIGNEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_0, grammarAccess.getAssignOperatorAccess().getASSIGNEnumLiteralDeclaration_0()); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:7905:6: (enumLiteral_1= '+=' )
                    {
                    // InternalSCTX.g:7905:6: (enumLiteral_1= '+=' )
                    // InternalSCTX.g:7905:8: enumLiteral_1= '+='
                    {
                    enumLiteral_1=(Token)match(input,86,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getAssignOperatorAccess().getASSIGNADDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_1, grammarAccess.getAssignOperatorAccess().getASSIGNADDEnumLiteralDeclaration_1()); 
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSCTX.g:7911:6: (enumLiteral_2= '-=' )
                    {
                    // InternalSCTX.g:7911:6: (enumLiteral_2= '-=' )
                    // InternalSCTX.g:7911:8: enumLiteral_2= '-='
                    {
                    enumLiteral_2=(Token)match(input,87,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getAssignOperatorAccess().getASSIGNSUBEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_2, grammarAccess.getAssignOperatorAccess().getASSIGNSUBEnumLiteralDeclaration_2()); 
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSCTX.g:7917:6: (enumLiteral_3= '*=' )
                    {
                    // InternalSCTX.g:7917:6: (enumLiteral_3= '*=' )
                    // InternalSCTX.g:7917:8: enumLiteral_3= '*='
                    {
                    enumLiteral_3=(Token)match(input,88,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getAssignOperatorAccess().getASSIGNMULEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_3, grammarAccess.getAssignOperatorAccess().getASSIGNMULEnumLiteralDeclaration_3()); 
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSCTX.g:7923:6: (enumLiteral_4= '/=' )
                    {
                    // InternalSCTX.g:7923:6: (enumLiteral_4= '/=' )
                    // InternalSCTX.g:7923:8: enumLiteral_4= '/='
                    {
                    enumLiteral_4=(Token)match(input,89,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getAssignOperatorAccess().getASSIGNDIVEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_4, grammarAccess.getAssignOperatorAccess().getASSIGNDIVEnumLiteralDeclaration_4()); 
                          
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSCTX.g:7929:6: (enumLiteral_5= '%=' )
                    {
                    // InternalSCTX.g:7929:6: (enumLiteral_5= '%=' )
                    // InternalSCTX.g:7929:8: enumLiteral_5= '%='
                    {
                    enumLiteral_5=(Token)match(input,90,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getAssignOperatorAccess().getASSIGNMODEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_5, grammarAccess.getAssignOperatorAccess().getASSIGNMODEnumLiteralDeclaration_5()); 
                          
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSCTX.g:7935:6: (enumLiteral_6= '&=' )
                    {
                    // InternalSCTX.g:7935:6: (enumLiteral_6= '&=' )
                    // InternalSCTX.g:7935:8: enumLiteral_6= '&='
                    {
                    enumLiteral_6=(Token)match(input,91,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getAssignOperatorAccess().getASSIGNANDEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_6, grammarAccess.getAssignOperatorAccess().getASSIGNANDEnumLiteralDeclaration_6()); 
                          
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSCTX.g:7941:6: (enumLiteral_7= '|=' )
                    {
                    // InternalSCTX.g:7941:6: (enumLiteral_7= '|=' )
                    // InternalSCTX.g:7941:8: enumLiteral_7= '|='
                    {
                    enumLiteral_7=(Token)match(input,92,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getAssignOperatorAccess().getASSIGNOREnumLiteralDeclaration_7().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_7, grammarAccess.getAssignOperatorAccess().getASSIGNOREnumLiteralDeclaration_7()); 
                          
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalSCTX.g:7947:6: (enumLiteral_8= '^=' )
                    {
                    // InternalSCTX.g:7947:6: (enumLiteral_8= '^=' )
                    // InternalSCTX.g:7947:8: enumLiteral_8= '^='
                    {
                    enumLiteral_8=(Token)match(input,93,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getAssignOperatorAccess().getASSIGNXOREnumLiteralDeclaration_8().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_8, grammarAccess.getAssignOperatorAccess().getASSIGNXOREnumLiteralDeclaration_8()); 
                          
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalSCTX.g:7953:6: (enumLiteral_9= 'min=' )
                    {
                    // InternalSCTX.g:7953:6: (enumLiteral_9= 'min=' )
                    // InternalSCTX.g:7953:8: enumLiteral_9= 'min='
                    {
                    enumLiteral_9=(Token)match(input,94,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getAssignOperatorAccess().getASSIGNMINEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_9, grammarAccess.getAssignOperatorAccess().getASSIGNMINEnumLiteralDeclaration_9()); 
                          
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalSCTX.g:7959:6: (enumLiteral_10= 'max=' )
                    {
                    // InternalSCTX.g:7959:6: (enumLiteral_10= 'max=' )
                    // InternalSCTX.g:7959:8: enumLiteral_10= 'max='
                    {
                    enumLiteral_10=(Token)match(input,95,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getAssignOperatorAccess().getASSIGNMAXEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_10, grammarAccess.getAssignOperatorAccess().getASSIGNMAXEnumLiteralDeclaration_10()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAssignOperator"


    // $ANTLR start "rulePostfixOperator"
    // InternalSCTX.g:7969:1: rulePostfixOperator returns [Enumerator current=null] : ( (enumLiteral_0= '++' ) | (enumLiteral_1= '--' ) ) ;
    public final Enumerator rulePostfixOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;

         enterRule(); 
        try {
            // InternalSCTX.g:7971:28: ( ( (enumLiteral_0= '++' ) | (enumLiteral_1= '--' ) ) )
            // InternalSCTX.g:7972:1: ( (enumLiteral_0= '++' ) | (enumLiteral_1= '--' ) )
            {
            // InternalSCTX.g:7972:1: ( (enumLiteral_0= '++' ) | (enumLiteral_1= '--' ) )
            int alt187=2;
            int LA187_0 = input.LA(1);

            if ( (LA187_0==96) ) {
                alt187=1;
            }
            else if ( (LA187_0==97) ) {
                alt187=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 187, 0, input);

                throw nvae;
            }
            switch (alt187) {
                case 1 :
                    // InternalSCTX.g:7972:2: (enumLiteral_0= '++' )
                    {
                    // InternalSCTX.g:7972:2: (enumLiteral_0= '++' )
                    // InternalSCTX.g:7972:4: enumLiteral_0= '++'
                    {
                    enumLiteral_0=(Token)match(input,96,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getPostfixOperatorAccess().getPOSTFIXADDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_0, grammarAccess.getPostfixOperatorAccess().getPOSTFIXADDEnumLiteralDeclaration_0()); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:7978:6: (enumLiteral_1= '--' )
                    {
                    // InternalSCTX.g:7978:6: (enumLiteral_1= '--' )
                    // InternalSCTX.g:7978:8: enumLiteral_1= '--'
                    {
                    enumLiteral_1=(Token)match(input,97,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getPostfixOperatorAccess().getPOSTFIXSUBEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_1, grammarAccess.getPostfixOperatorAccess().getPOSTFIXSUBEnumLiteralDeclaration_1()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePostfixOperator"


    // $ANTLR start "ruleCompareOperator"
    // InternalSCTX.g:7988:1: ruleCompareOperator returns [Enumerator current=null] : ( (enumLiteral_0= '==' ) | (enumLiteral_1= '<' ) | (enumLiteral_2= '<=' ) | (enumLiteral_3= '>' ) | (enumLiteral_4= '>=' ) | (enumLiteral_5= '!=' ) ) ;
    public final Enumerator ruleCompareOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;

         enterRule(); 
        try {
            // InternalSCTX.g:7990:28: ( ( (enumLiteral_0= '==' ) | (enumLiteral_1= '<' ) | (enumLiteral_2= '<=' ) | (enumLiteral_3= '>' ) | (enumLiteral_4= '>=' ) | (enumLiteral_5= '!=' ) ) )
            // InternalSCTX.g:7991:1: ( (enumLiteral_0= '==' ) | (enumLiteral_1= '<' ) | (enumLiteral_2= '<=' ) | (enumLiteral_3= '>' ) | (enumLiteral_4= '>=' ) | (enumLiteral_5= '!=' ) )
            {
            // InternalSCTX.g:7991:1: ( (enumLiteral_0= '==' ) | (enumLiteral_1= '<' ) | (enumLiteral_2= '<=' ) | (enumLiteral_3= '>' ) | (enumLiteral_4= '>=' ) | (enumLiteral_5= '!=' ) )
            int alt188=6;
            switch ( input.LA(1) ) {
            case 98:
                {
                alt188=1;
                }
                break;
            case 60:
                {
                alt188=2;
                }
                break;
            case 99:
                {
                alt188=3;
                }
                break;
            case 61:
                {
                alt188=4;
                }
                break;
            case 100:
                {
                alt188=5;
                }
                break;
            case 101:
                {
                alt188=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 188, 0, input);

                throw nvae;
            }

            switch (alt188) {
                case 1 :
                    // InternalSCTX.g:7991:2: (enumLiteral_0= '==' )
                    {
                    // InternalSCTX.g:7991:2: (enumLiteral_0= '==' )
                    // InternalSCTX.g:7991:4: enumLiteral_0= '=='
                    {
                    enumLiteral_0=(Token)match(input,98,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getCompareOperatorAccess().getEQEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_0, grammarAccess.getCompareOperatorAccess().getEQEnumLiteralDeclaration_0()); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:7997:6: (enumLiteral_1= '<' )
                    {
                    // InternalSCTX.g:7997:6: (enumLiteral_1= '<' )
                    // InternalSCTX.g:7997:8: enumLiteral_1= '<'
                    {
                    enumLiteral_1=(Token)match(input,60,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getCompareOperatorAccess().getLTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_1, grammarAccess.getCompareOperatorAccess().getLTEnumLiteralDeclaration_1()); 
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSCTX.g:8003:6: (enumLiteral_2= '<=' )
                    {
                    // InternalSCTX.g:8003:6: (enumLiteral_2= '<=' )
                    // InternalSCTX.g:8003:8: enumLiteral_2= '<='
                    {
                    enumLiteral_2=(Token)match(input,99,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getCompareOperatorAccess().getLEQEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_2, grammarAccess.getCompareOperatorAccess().getLEQEnumLiteralDeclaration_2()); 
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSCTX.g:8009:6: (enumLiteral_3= '>' )
                    {
                    // InternalSCTX.g:8009:6: (enumLiteral_3= '>' )
                    // InternalSCTX.g:8009:8: enumLiteral_3= '>'
                    {
                    enumLiteral_3=(Token)match(input,61,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getCompareOperatorAccess().getGTEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_3, grammarAccess.getCompareOperatorAccess().getGTEnumLiteralDeclaration_3()); 
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSCTX.g:8015:6: (enumLiteral_4= '>=' )
                    {
                    // InternalSCTX.g:8015:6: (enumLiteral_4= '>=' )
                    // InternalSCTX.g:8015:8: enumLiteral_4= '>='
                    {
                    enumLiteral_4=(Token)match(input,100,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getCompareOperatorAccess().getGEQEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_4, grammarAccess.getCompareOperatorAccess().getGEQEnumLiteralDeclaration_4()); 
                          
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSCTX.g:8021:6: (enumLiteral_5= '!=' )
                    {
                    // InternalSCTX.g:8021:6: (enumLiteral_5= '!=' )
                    // InternalSCTX.g:8021:8: enumLiteral_5= '!='
                    {
                    enumLiteral_5=(Token)match(input,101,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getCompareOperatorAccess().getNEEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_5, grammarAccess.getCompareOperatorAccess().getNEEnumLiteralDeclaration_5()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCompareOperator"


    // $ANTLR start "rulePreOperator"
    // InternalSCTX.g:8031:1: rulePreOperator returns [Enumerator current=null] : (enumLiteral_0= 'pre' ) ;
    public final Enumerator rulePreOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;

         enterRule(); 
        try {
            // InternalSCTX.g:8033:28: ( (enumLiteral_0= 'pre' ) )
            // InternalSCTX.g:8034:1: (enumLiteral_0= 'pre' )
            {
            // InternalSCTX.g:8034:1: (enumLiteral_0= 'pre' )
            // InternalSCTX.g:8034:3: enumLiteral_0= 'pre'
            {
            enumLiteral_0=(Token)match(input,102,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = grammarAccess.getPreOperatorAccess().getPREEnumLiteralDeclaration().getEnumLiteral().getInstance();
                      newLeafNode(enumLiteral_0, grammarAccess.getPreOperatorAccess().getPREEnumLiteralDeclaration()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePreOperator"


    // $ANTLR start "ruleBitwiseOrOperator"
    // InternalSCTX.g:8044:1: ruleBitwiseOrOperator returns [Enumerator current=null] : (enumLiteral_0= '|' ) ;
    public final Enumerator ruleBitwiseOrOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;

         enterRule(); 
        try {
            // InternalSCTX.g:8046:28: ( (enumLiteral_0= '|' ) )
            // InternalSCTX.g:8047:1: (enumLiteral_0= '|' )
            {
            // InternalSCTX.g:8047:1: (enumLiteral_0= '|' )
            // InternalSCTX.g:8047:3: enumLiteral_0= '|'
            {
            enumLiteral_0=(Token)match(input,64,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = grammarAccess.getBitwiseOrOperatorAccess().getBITWISE_OREnumLiteralDeclaration().getEnumLiteral().getInstance();
                      newLeafNode(enumLiteral_0, grammarAccess.getBitwiseOrOperatorAccess().getBITWISE_OREnumLiteralDeclaration()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseOrOperator"


    // $ANTLR start "ruleBitwiseAndOperator"
    // InternalSCTX.g:8057:1: ruleBitwiseAndOperator returns [Enumerator current=null] : (enumLiteral_0= '&' ) ;
    public final Enumerator ruleBitwiseAndOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;

         enterRule(); 
        try {
            // InternalSCTX.g:8059:28: ( (enumLiteral_0= '&' ) )
            // InternalSCTX.g:8060:1: (enumLiteral_0= '&' )
            {
            // InternalSCTX.g:8060:1: (enumLiteral_0= '&' )
            // InternalSCTX.g:8060:3: enumLiteral_0= '&'
            {
            enumLiteral_0=(Token)match(input,29,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = grammarAccess.getBitwiseAndOperatorAccess().getBITWISE_ANDEnumLiteralDeclaration().getEnumLiteral().getInstance();
                      newLeafNode(enumLiteral_0, grammarAccess.getBitwiseAndOperatorAccess().getBITWISE_ANDEnumLiteralDeclaration()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseAndOperator"


    // $ANTLR start "ruleNotOperator"
    // InternalSCTX.g:8070:1: ruleNotOperator returns [Enumerator current=null] : (enumLiteral_0= '!' ) ;
    public final Enumerator ruleNotOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;

         enterRule(); 
        try {
            // InternalSCTX.g:8072:28: ( (enumLiteral_0= '!' ) )
            // InternalSCTX.g:8073:1: (enumLiteral_0= '!' )
            {
            // InternalSCTX.g:8073:1: (enumLiteral_0= '!' )
            // InternalSCTX.g:8073:3: enumLiteral_0= '!'
            {
            enumLiteral_0=(Token)match(input,28,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = grammarAccess.getNotOperatorAccess().getNOTEnumLiteralDeclaration().getEnumLiteral().getInstance();
                      newLeafNode(enumLiteral_0, grammarAccess.getNotOperatorAccess().getNOTEnumLiteralDeclaration()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNotOperator"


    // $ANTLR start "ruleAddOperator"
    // InternalSCTX.g:8083:1: ruleAddOperator returns [Enumerator current=null] : (enumLiteral_0= '+' ) ;
    public final Enumerator ruleAddOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;

         enterRule(); 
        try {
            // InternalSCTX.g:8085:28: ( (enumLiteral_0= '+' ) )
            // InternalSCTX.g:8086:1: (enumLiteral_0= '+' )
            {
            // InternalSCTX.g:8086:1: (enumLiteral_0= '+' )
            // InternalSCTX.g:8086:3: enumLiteral_0= '+'
            {
            enumLiteral_0=(Token)match(input,65,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = grammarAccess.getAddOperatorAccess().getADDEnumLiteralDeclaration().getEnumLiteral().getInstance();
                      newLeafNode(enumLiteral_0, grammarAccess.getAddOperatorAccess().getADDEnumLiteralDeclaration()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAddOperator"


    // $ANTLR start "ruleSubOperator"
    // InternalSCTX.g:8096:1: ruleSubOperator returns [Enumerator current=null] : (enumLiteral_0= '-' ) ;
    public final Enumerator ruleSubOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;

         enterRule(); 
        try {
            // InternalSCTX.g:8098:28: ( (enumLiteral_0= '-' ) )
            // InternalSCTX.g:8099:1: (enumLiteral_0= '-' )
            {
            // InternalSCTX.g:8099:1: (enumLiteral_0= '-' )
            // InternalSCTX.g:8099:3: enumLiteral_0= '-'
            {
            enumLiteral_0=(Token)match(input,66,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = grammarAccess.getSubOperatorAccess().getSUBEnumLiteralDeclaration().getEnumLiteral().getInstance();
                      newLeafNode(enumLiteral_0, grammarAccess.getSubOperatorAccess().getSUBEnumLiteralDeclaration()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSubOperator"


    // $ANTLR start "ruleMultOperator"
    // InternalSCTX.g:8109:1: ruleMultOperator returns [Enumerator current=null] : (enumLiteral_0= '*' ) ;
    public final Enumerator ruleMultOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;

         enterRule(); 
        try {
            // InternalSCTX.g:8111:28: ( (enumLiteral_0= '*' ) )
            // InternalSCTX.g:8112:1: (enumLiteral_0= '*' )
            {
            // InternalSCTX.g:8112:1: (enumLiteral_0= '*' )
            // InternalSCTX.g:8112:3: enumLiteral_0= '*'
            {
            enumLiteral_0=(Token)match(input,67,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = grammarAccess.getMultOperatorAccess().getMULTEnumLiteralDeclaration().getEnumLiteral().getInstance();
                      newLeafNode(enumLiteral_0, grammarAccess.getMultOperatorAccess().getMULTEnumLiteralDeclaration()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultOperator"


    // $ANTLR start "ruleModOperator"
    // InternalSCTX.g:8122:1: ruleModOperator returns [Enumerator current=null] : (enumLiteral_0= '%' ) ;
    public final Enumerator ruleModOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;

         enterRule(); 
        try {
            // InternalSCTX.g:8124:28: ( (enumLiteral_0= '%' ) )
            // InternalSCTX.g:8125:1: (enumLiteral_0= '%' )
            {
            // InternalSCTX.g:8125:1: (enumLiteral_0= '%' )
            // InternalSCTX.g:8125:3: enumLiteral_0= '%'
            {
            enumLiteral_0=(Token)match(input,69,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = grammarAccess.getModOperatorAccess().getMODEnumLiteralDeclaration().getEnumLiteral().getInstance();
                      newLeafNode(enumLiteral_0, grammarAccess.getModOperatorAccess().getMODEnumLiteralDeclaration()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModOperator"


    // $ANTLR start "ruleDivOperator"
    // InternalSCTX.g:8135:1: ruleDivOperator returns [Enumerator current=null] : (enumLiteral_0= '/' ) ;
    public final Enumerator ruleDivOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;

         enterRule(); 
        try {
            // InternalSCTX.g:8137:28: ( (enumLiteral_0= '/' ) )
            // InternalSCTX.g:8138:1: (enumLiteral_0= '/' )
            {
            // InternalSCTX.g:8138:1: (enumLiteral_0= '/' )
            // InternalSCTX.g:8138:3: enumLiteral_0= '/'
            {
            enumLiteral_0=(Token)match(input,68,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = grammarAccess.getDivOperatorAccess().getDIVEnumLiteralDeclaration().getEnumLiteral().getInstance();
                      newLeafNode(enumLiteral_0, grammarAccess.getDivOperatorAccess().getDIVEnumLiteralDeclaration()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDivOperator"


    // $ANTLR start "ruleValOperator"
    // InternalSCTX.g:8148:1: ruleValOperator returns [Enumerator current=null] : (enumLiteral_0= 'val' ) ;
    public final Enumerator ruleValOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;

         enterRule(); 
        try {
            // InternalSCTX.g:8150:28: ( (enumLiteral_0= 'val' ) )
            // InternalSCTX.g:8151:1: (enumLiteral_0= 'val' )
            {
            // InternalSCTX.g:8151:1: (enumLiteral_0= 'val' )
            // InternalSCTX.g:8151:3: enumLiteral_0= 'val'
            {
            enumLiteral_0=(Token)match(input,103,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = grammarAccess.getValOperatorAccess().getVALEnumLiteralDeclaration().getEnumLiteral().getInstance();
                      newLeafNode(enumLiteral_0, grammarAccess.getValOperatorAccess().getVALEnumLiteralDeclaration()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValOperator"


    // $ANTLR start "ruleLogicalOrOperator"
    // InternalSCTX.g:8161:1: ruleLogicalOrOperator returns [Enumerator current=null] : (enumLiteral_0= '||' ) ;
    public final Enumerator ruleLogicalOrOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;

         enterRule(); 
        try {
            // InternalSCTX.g:8163:28: ( (enumLiteral_0= '||' ) )
            // InternalSCTX.g:8164:1: (enumLiteral_0= '||' )
            {
            // InternalSCTX.g:8164:1: (enumLiteral_0= '||' )
            // InternalSCTX.g:8164:3: enumLiteral_0= '||'
            {
            enumLiteral_0=(Token)match(input,62,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = grammarAccess.getLogicalOrOperatorAccess().getLOGICAL_OREnumLiteralDeclaration().getEnumLiteral().getInstance();
                      newLeafNode(enumLiteral_0, grammarAccess.getLogicalOrOperatorAccess().getLOGICAL_OREnumLiteralDeclaration()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalOrOperator"


    // $ANTLR start "ruleLogicalAndOperator"
    // InternalSCTX.g:8174:1: ruleLogicalAndOperator returns [Enumerator current=null] : (enumLiteral_0= '&&' ) ;
    public final Enumerator ruleLogicalAndOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;

         enterRule(); 
        try {
            // InternalSCTX.g:8176:28: ( (enumLiteral_0= '&&' ) )
            // InternalSCTX.g:8177:1: (enumLiteral_0= '&&' )
            {
            // InternalSCTX.g:8177:1: (enumLiteral_0= '&&' )
            // InternalSCTX.g:8177:3: enumLiteral_0= '&&'
            {
            enumLiteral_0=(Token)match(input,63,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = grammarAccess.getLogicalAndOperatorAccess().getLOGICAL_ANDEnumLiteralDeclaration().getEnumLiteral().getInstance();
                      newLeafNode(enumLiteral_0, grammarAccess.getLogicalAndOperatorAccess().getLOGICAL_ANDEnumLiteralDeclaration()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalAndOperator"


    // $ANTLR start "ruleValueType"
    // InternalSCTX.g:8191:1: ruleValueType returns [Enumerator current=null] : ( (enumLiteral_0= 'pure' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'unsigned' ) | (enumLiteral_3= 'int' ) | (enumLiteral_4= 'float' ) | (enumLiteral_5= 'string' ) | (enumLiteral_6= 'host' ) ) ;
    public final Enumerator ruleValueType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;
        Token enumLiteral_6=null;

         enterRule(); 
        try {
            // InternalSCTX.g:8193:28: ( ( (enumLiteral_0= 'pure' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'unsigned' ) | (enumLiteral_3= 'int' ) | (enumLiteral_4= 'float' ) | (enumLiteral_5= 'string' ) | (enumLiteral_6= 'host' ) ) )
            // InternalSCTX.g:8194:1: ( (enumLiteral_0= 'pure' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'unsigned' ) | (enumLiteral_3= 'int' ) | (enumLiteral_4= 'float' ) | (enumLiteral_5= 'string' ) | (enumLiteral_6= 'host' ) )
            {
            // InternalSCTX.g:8194:1: ( (enumLiteral_0= 'pure' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'unsigned' ) | (enumLiteral_3= 'int' ) | (enumLiteral_4= 'float' ) | (enumLiteral_5= 'string' ) | (enumLiteral_6= 'host' ) )
            int alt189=7;
            switch ( input.LA(1) ) {
            case 104:
                {
                alt189=1;
                }
                break;
            case 105:
                {
                alt189=2;
                }
                break;
            case 106:
                {
                alt189=3;
                }
                break;
            case 107:
                {
                alt189=4;
                }
                break;
            case 108:
                {
                alt189=5;
                }
                break;
            case 109:
                {
                alt189=6;
                }
                break;
            case 110:
                {
                alt189=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 189, 0, input);

                throw nvae;
            }

            switch (alt189) {
                case 1 :
                    // InternalSCTX.g:8194:2: (enumLiteral_0= 'pure' )
                    {
                    // InternalSCTX.g:8194:2: (enumLiteral_0= 'pure' )
                    // InternalSCTX.g:8194:4: enumLiteral_0= 'pure'
                    {
                    enumLiteral_0=(Token)match(input,104,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getValueTypeAccess().getPUREEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_0, grammarAccess.getValueTypeAccess().getPUREEnumLiteralDeclaration_0()); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:8200:6: (enumLiteral_1= 'bool' )
                    {
                    // InternalSCTX.g:8200:6: (enumLiteral_1= 'bool' )
                    // InternalSCTX.g:8200:8: enumLiteral_1= 'bool'
                    {
                    enumLiteral_1=(Token)match(input,105,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getValueTypeAccess().getBOOLEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_1, grammarAccess.getValueTypeAccess().getBOOLEnumLiteralDeclaration_1()); 
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSCTX.g:8206:6: (enumLiteral_2= 'unsigned' )
                    {
                    // InternalSCTX.g:8206:6: (enumLiteral_2= 'unsigned' )
                    // InternalSCTX.g:8206:8: enumLiteral_2= 'unsigned'
                    {
                    enumLiteral_2=(Token)match(input,106,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getValueTypeAccess().getUNSIGNEDEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_2, grammarAccess.getValueTypeAccess().getUNSIGNEDEnumLiteralDeclaration_2()); 
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSCTX.g:8212:6: (enumLiteral_3= 'int' )
                    {
                    // InternalSCTX.g:8212:6: (enumLiteral_3= 'int' )
                    // InternalSCTX.g:8212:8: enumLiteral_3= 'int'
                    {
                    enumLiteral_3=(Token)match(input,107,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getValueTypeAccess().getINTEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_3, grammarAccess.getValueTypeAccess().getINTEnumLiteralDeclaration_3()); 
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSCTX.g:8218:6: (enumLiteral_4= 'float' )
                    {
                    // InternalSCTX.g:8218:6: (enumLiteral_4= 'float' )
                    // InternalSCTX.g:8218:8: enumLiteral_4= 'float'
                    {
                    enumLiteral_4=(Token)match(input,108,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getValueTypeAccess().getFLOATEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_4, grammarAccess.getValueTypeAccess().getFLOATEnumLiteralDeclaration_4()); 
                          
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSCTX.g:8224:6: (enumLiteral_5= 'string' )
                    {
                    // InternalSCTX.g:8224:6: (enumLiteral_5= 'string' )
                    // InternalSCTX.g:8224:8: enumLiteral_5= 'string'
                    {
                    enumLiteral_5=(Token)match(input,109,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getValueTypeAccess().getSTRINGEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_5, grammarAccess.getValueTypeAccess().getSTRINGEnumLiteralDeclaration_5()); 
                          
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSCTX.g:8230:6: (enumLiteral_6= 'host' )
                    {
                    // InternalSCTX.g:8230:6: (enumLiteral_6= 'host' )
                    // InternalSCTX.g:8230:8: enumLiteral_6= 'host'
                    {
                    enumLiteral_6=(Token)match(input,110,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getValueTypeAccess().getHOSTEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_6, grammarAccess.getValueTypeAccess().getHOSTEnumLiteralDeclaration_6()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValueType"


    // $ANTLR start "ruleCombineOperator"
    // InternalSCTX.g:8242:1: ruleCombineOperator returns [Enumerator current=null] : ( (enumLiteral_0= 'none' ) | (enumLiteral_1= '+' ) | (enumLiteral_2= '*' ) | (enumLiteral_3= 'max' ) | (enumLiteral_4= 'min' ) | (enumLiteral_5= '|' ) | (enumLiteral_6= '&' ) | (enumLiteral_7= 'host' ) ) ;
    public final Enumerator ruleCombineOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;
        Token enumLiteral_6=null;
        Token enumLiteral_7=null;

         enterRule(); 
        try {
            // InternalSCTX.g:8244:28: ( ( (enumLiteral_0= 'none' ) | (enumLiteral_1= '+' ) | (enumLiteral_2= '*' ) | (enumLiteral_3= 'max' ) | (enumLiteral_4= 'min' ) | (enumLiteral_5= '|' ) | (enumLiteral_6= '&' ) | (enumLiteral_7= 'host' ) ) )
            // InternalSCTX.g:8245:1: ( (enumLiteral_0= 'none' ) | (enumLiteral_1= '+' ) | (enumLiteral_2= '*' ) | (enumLiteral_3= 'max' ) | (enumLiteral_4= 'min' ) | (enumLiteral_5= '|' ) | (enumLiteral_6= '&' ) | (enumLiteral_7= 'host' ) )
            {
            // InternalSCTX.g:8245:1: ( (enumLiteral_0= 'none' ) | (enumLiteral_1= '+' ) | (enumLiteral_2= '*' ) | (enumLiteral_3= 'max' ) | (enumLiteral_4= 'min' ) | (enumLiteral_5= '|' ) | (enumLiteral_6= '&' ) | (enumLiteral_7= 'host' ) )
            int alt190=8;
            switch ( input.LA(1) ) {
            case 111:
                {
                alt190=1;
                }
                break;
            case 65:
                {
                alt190=2;
                }
                break;
            case 67:
                {
                alt190=3;
                }
                break;
            case 112:
                {
                alt190=4;
                }
                break;
            case 113:
                {
                alt190=5;
                }
                break;
            case 64:
                {
                alt190=6;
                }
                break;
            case 29:
                {
                alt190=7;
                }
                break;
            case 110:
                {
                alt190=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 190, 0, input);

                throw nvae;
            }

            switch (alt190) {
                case 1 :
                    // InternalSCTX.g:8245:2: (enumLiteral_0= 'none' )
                    {
                    // InternalSCTX.g:8245:2: (enumLiteral_0= 'none' )
                    // InternalSCTX.g:8245:4: enumLiteral_0= 'none'
                    {
                    enumLiteral_0=(Token)match(input,111,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getCombineOperatorAccess().getNONEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_0, grammarAccess.getCombineOperatorAccess().getNONEEnumLiteralDeclaration_0()); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:8251:6: (enumLiteral_1= '+' )
                    {
                    // InternalSCTX.g:8251:6: (enumLiteral_1= '+' )
                    // InternalSCTX.g:8251:8: enumLiteral_1= '+'
                    {
                    enumLiteral_1=(Token)match(input,65,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getCombineOperatorAccess().getADDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_1, grammarAccess.getCombineOperatorAccess().getADDEnumLiteralDeclaration_1()); 
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSCTX.g:8257:6: (enumLiteral_2= '*' )
                    {
                    // InternalSCTX.g:8257:6: (enumLiteral_2= '*' )
                    // InternalSCTX.g:8257:8: enumLiteral_2= '*'
                    {
                    enumLiteral_2=(Token)match(input,67,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getCombineOperatorAccess().getMULTEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_2, grammarAccess.getCombineOperatorAccess().getMULTEnumLiteralDeclaration_2()); 
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSCTX.g:8263:6: (enumLiteral_3= 'max' )
                    {
                    // InternalSCTX.g:8263:6: (enumLiteral_3= 'max' )
                    // InternalSCTX.g:8263:8: enumLiteral_3= 'max'
                    {
                    enumLiteral_3=(Token)match(input,112,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getCombineOperatorAccess().getMAXEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_3, grammarAccess.getCombineOperatorAccess().getMAXEnumLiteralDeclaration_3()); 
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSCTX.g:8269:6: (enumLiteral_4= 'min' )
                    {
                    // InternalSCTX.g:8269:6: (enumLiteral_4= 'min' )
                    // InternalSCTX.g:8269:8: enumLiteral_4= 'min'
                    {
                    enumLiteral_4=(Token)match(input,113,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getCombineOperatorAccess().getMINEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_4, grammarAccess.getCombineOperatorAccess().getMINEnumLiteralDeclaration_4()); 
                          
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSCTX.g:8275:6: (enumLiteral_5= '|' )
                    {
                    // InternalSCTX.g:8275:6: (enumLiteral_5= '|' )
                    // InternalSCTX.g:8275:8: enumLiteral_5= '|'
                    {
                    enumLiteral_5=(Token)match(input,64,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getCombineOperatorAccess().getOREnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_5, grammarAccess.getCombineOperatorAccess().getOREnumLiteralDeclaration_5()); 
                          
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSCTX.g:8281:6: (enumLiteral_6= '&' )
                    {
                    // InternalSCTX.g:8281:6: (enumLiteral_6= '&' )
                    // InternalSCTX.g:8281:8: enumLiteral_6= '&'
                    {
                    enumLiteral_6=(Token)match(input,29,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getCombineOperatorAccess().getANDEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_6, grammarAccess.getCombineOperatorAccess().getANDEnumLiteralDeclaration_6()); 
                          
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSCTX.g:8287:6: (enumLiteral_7= 'host' )
                    {
                    // InternalSCTX.g:8287:6: (enumLiteral_7= 'host' )
                    // InternalSCTX.g:8287:8: enumLiteral_7= 'host'
                    {
                    enumLiteral_7=(Token)match(input,110,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getCombineOperatorAccess().getHOSTEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_7, grammarAccess.getCombineOperatorAccess().getHOSTEnumLiteralDeclaration_7()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCombineOperator"

    // $ANTLR start synpred5_InternalSCTX
    public final void synpred5_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_5_0 = null;


        // InternalSCTX.g:207:1: ( (lv_declarations_5_0= ruleDeclarationWOSemicolon ) )
        // InternalSCTX.g:207:1: (lv_declarations_5_0= ruleDeclarationWOSemicolon )
        {
        // InternalSCTX.g:207:1: (lv_declarations_5_0= ruleDeclarationWOSemicolon )
        // InternalSCTX.g:208:3: lv_declarations_5_0= ruleDeclarationWOSemicolon
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getRootStateAccess().getDeclarationsDeclarationWOSemicolonParserRuleCall_5_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_5_0=ruleDeclarationWOSemicolon();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred5_InternalSCTX

    // $ANTLR start synpred7_InternalSCTX
    public final void synpred7_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_regions_7_0 = null;


        // InternalSCTX.g:242:4: ( ( (lv_regions_7_0= ruleSingleControlflowRegion ) ) )
        // InternalSCTX.g:242:4: ( (lv_regions_7_0= ruleSingleControlflowRegion ) )
        {
        // InternalSCTX.g:242:4: ( (lv_regions_7_0= ruleSingleControlflowRegion ) )
        // InternalSCTX.g:243:1: (lv_regions_7_0= ruleSingleControlflowRegion )
        {
        // InternalSCTX.g:243:1: (lv_regions_7_0= ruleSingleControlflowRegion )
        // InternalSCTX.g:244:3: lv_regions_7_0= ruleSingleControlflowRegion
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getRootStateAccess().getRegionsSingleControlflowRegionParserRuleCall_7_0_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_regions_7_0=ruleSingleControlflowRegion();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred7_InternalSCTX

    // $ANTLR start synpred8_InternalSCTX
    public final void synpred8_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_regions_8_0 = null;


        // InternalSCTX.g:261:6: ( ( (lv_regions_8_0= ruleSingleDataflowRegion ) ) )
        // InternalSCTX.g:261:6: ( (lv_regions_8_0= ruleSingleDataflowRegion ) )
        {
        // InternalSCTX.g:261:6: ( (lv_regions_8_0= ruleSingleDataflowRegion ) )
        // InternalSCTX.g:262:1: (lv_regions_8_0= ruleSingleDataflowRegion )
        {
        // InternalSCTX.g:262:1: (lv_regions_8_0= ruleSingleDataflowRegion )
        // InternalSCTX.g:263:3: lv_regions_8_0= ruleSingleDataflowRegion
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getRootStateAccess().getRegionsSingleDataflowRegionParserRuleCall_7_1_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_regions_8_0=ruleSingleDataflowRegion();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred8_InternalSCTX

    // $ANTLR start synpred17_InternalSCTX
    public final void synpred17_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_11_0 = null;


        // InternalSCTX.g:469:1: ( (lv_declarations_11_0= ruleDeclarationWOSemicolon ) )
        // InternalSCTX.g:469:1: (lv_declarations_11_0= ruleDeclarationWOSemicolon )
        {
        // InternalSCTX.g:469:1: (lv_declarations_11_0= ruleDeclarationWOSemicolon )
        // InternalSCTX.g:470:3: lv_declarations_11_0= ruleDeclarationWOSemicolon
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getStateAccess().getDeclarationsDeclarationWOSemicolonParserRuleCall_8_1_1_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_11_0=ruleDeclarationWOSemicolon();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred17_InternalSCTX

    // $ANTLR start synpred19_InternalSCTX
    public final void synpred19_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_regions_13_0 = null;


        // InternalSCTX.g:504:4: ( ( (lv_regions_13_0= ruleSingleControlflowRegion ) ) )
        // InternalSCTX.g:504:4: ( (lv_regions_13_0= ruleSingleControlflowRegion ) )
        {
        // InternalSCTX.g:504:4: ( (lv_regions_13_0= ruleSingleControlflowRegion ) )
        // InternalSCTX.g:505:1: (lv_regions_13_0= ruleSingleControlflowRegion )
        {
        // InternalSCTX.g:505:1: (lv_regions_13_0= ruleSingleControlflowRegion )
        // InternalSCTX.g:506:3: lv_regions_13_0= ruleSingleControlflowRegion
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getStateAccess().getRegionsSingleControlflowRegionParserRuleCall_8_1_3_0_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_regions_13_0=ruleSingleControlflowRegion();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred19_InternalSCTX

    // $ANTLR start synpred20_InternalSCTX
    public final void synpred20_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_regions_14_0 = null;


        // InternalSCTX.g:523:6: ( ( (lv_regions_14_0= ruleSingleDataflowRegion ) ) )
        // InternalSCTX.g:523:6: ( (lv_regions_14_0= ruleSingleDataflowRegion ) )
        {
        // InternalSCTX.g:523:6: ( (lv_regions_14_0= ruleSingleDataflowRegion ) )
        // InternalSCTX.g:524:1: (lv_regions_14_0= ruleSingleDataflowRegion )
        {
        // InternalSCTX.g:524:1: (lv_regions_14_0= ruleSingleDataflowRegion )
        // InternalSCTX.g:525:3: lv_regions_14_0= ruleSingleDataflowRegion
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getStateAccess().getRegionsSingleDataflowRegionParserRuleCall_8_1_3_1_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_regions_14_0=ruleSingleDataflowRegion();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred20_InternalSCTX

    // $ANTLR start synpred36_InternalSCTX
    public final void synpred36_InternalSCTX_fragment() throws RecognitionException {   
        Token lv_triggerDelay_7_0=null;

        // InternalSCTX.g:938:1: ( (lv_triggerDelay_7_0= RULE_INT ) )
        // InternalSCTX.g:938:1: (lv_triggerDelay_7_0= RULE_INT )
        {
        // InternalSCTX.g:938:1: (lv_triggerDelay_7_0= RULE_INT )
        // InternalSCTX.g:939:3: lv_triggerDelay_7_0= RULE_INT
        {
        lv_triggerDelay_7_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred36_InternalSCTX

    // $ANTLR start synpred40_InternalSCTX
    public final void synpred40_InternalSCTX_fragment() throws RecognitionException {   
        Token otherlv_6=null;
        Token lv_triggerDelay_7_0=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        EObject lv_trigger_8_0 = null;

        EObject lv_effects_10_0 = null;

        EObject lv_effects_12_0 = null;


        // InternalSCTX.g:933:4: ( ( (otherlv_6= 'if' ( (lv_triggerDelay_7_0= RULE_INT ) )? ( (lv_trigger_8_0= ruleBoolExpression ) ) )? (otherlv_9= 'do' ( (lv_effects_10_0= ruleEffect ) ) (otherlv_11= ';' ( (lv_effects_12_0= ruleEffect ) ) )* )? ) )
        // InternalSCTX.g:933:4: ( (otherlv_6= 'if' ( (lv_triggerDelay_7_0= RULE_INT ) )? ( (lv_trigger_8_0= ruleBoolExpression ) ) )? (otherlv_9= 'do' ( (lv_effects_10_0= ruleEffect ) ) (otherlv_11= ';' ( (lv_effects_12_0= ruleEffect ) ) )* )? )
        {
        // InternalSCTX.g:933:4: ( (otherlv_6= 'if' ( (lv_triggerDelay_7_0= RULE_INT ) )? ( (lv_trigger_8_0= ruleBoolExpression ) ) )? (otherlv_9= 'do' ( (lv_effects_10_0= ruleEffect ) ) (otherlv_11= ';' ( (lv_effects_12_0= ruleEffect ) ) )* )? )
        // InternalSCTX.g:933:5: (otherlv_6= 'if' ( (lv_triggerDelay_7_0= RULE_INT ) )? ( (lv_trigger_8_0= ruleBoolExpression ) ) )? (otherlv_9= 'do' ( (lv_effects_10_0= ruleEffect ) ) (otherlv_11= ';' ( (lv_effects_12_0= ruleEffect ) ) )* )?
        {
        // InternalSCTX.g:933:5: (otherlv_6= 'if' ( (lv_triggerDelay_7_0= RULE_INT ) )? ( (lv_trigger_8_0= ruleBoolExpression ) ) )?
        int alt201=2;
        int LA201_0 = input.LA(1);

        if ( (LA201_0==34) ) {
            alt201=1;
        }
        switch (alt201) {
            case 1 :
                // InternalSCTX.g:933:7: otherlv_6= 'if' ( (lv_triggerDelay_7_0= RULE_INT ) )? ( (lv_trigger_8_0= ruleBoolExpression ) )
                {
                otherlv_6=(Token)match(input,34,FollowSets000.FOLLOW_34); if (state.failed) return ;
                // InternalSCTX.g:937:1: ( (lv_triggerDelay_7_0= RULE_INT ) )?
                int alt200=2;
                alt200 = dfa200.predict(input);
                switch (alt200) {
                    case 1 :
                        // InternalSCTX.g:938:1: (lv_triggerDelay_7_0= RULE_INT )
                        {
                        // InternalSCTX.g:938:1: (lv_triggerDelay_7_0= RULE_INT )
                        // InternalSCTX.g:939:3: lv_triggerDelay_7_0= RULE_INT
                        {
                        lv_triggerDelay_7_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_34); if (state.failed) return ;

                        }


                        }
                        break;

                }

                // InternalSCTX.g:955:3: ( (lv_trigger_8_0= ruleBoolExpression ) )
                // InternalSCTX.g:956:1: (lv_trigger_8_0= ruleBoolExpression )
                {
                // InternalSCTX.g:956:1: (lv_trigger_8_0= ruleBoolExpression )
                // InternalSCTX.g:957:3: lv_trigger_8_0= ruleBoolExpression
                {
                if ( state.backtracking==0 ) {
                   
                  	        newCompositeNode(grammarAccess.getTransitionAccess().getTriggerBoolExpressionParserRuleCall_6_0_0_2_0()); 
                  	    
                }
                pushFollow(FollowSets000.FOLLOW_35);
                lv_trigger_8_0=ruleBoolExpression();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalSCTX.g:973:4: (otherlv_9= 'do' ( (lv_effects_10_0= ruleEffect ) ) (otherlv_11= ';' ( (lv_effects_12_0= ruleEffect ) ) )* )?
        int alt203=2;
        int LA203_0 = input.LA(1);

        if ( (LA203_0==35) ) {
            alt203=1;
        }
        switch (alt203) {
            case 1 :
                // InternalSCTX.g:973:6: otherlv_9= 'do' ( (lv_effects_10_0= ruleEffect ) ) (otherlv_11= ';' ( (lv_effects_12_0= ruleEffect ) ) )*
                {
                otherlv_9=(Token)match(input,35,FollowSets000.FOLLOW_36); if (state.failed) return ;
                // InternalSCTX.g:977:1: ( (lv_effects_10_0= ruleEffect ) )
                // InternalSCTX.g:978:1: (lv_effects_10_0= ruleEffect )
                {
                // InternalSCTX.g:978:1: (lv_effects_10_0= ruleEffect )
                // InternalSCTX.g:979:3: lv_effects_10_0= ruleEffect
                {
                if ( state.backtracking==0 ) {
                   
                  	        newCompositeNode(grammarAccess.getTransitionAccess().getEffectsEffectParserRuleCall_6_0_1_1_0()); 
                  	    
                }
                pushFollow(FollowSets000.FOLLOW_37);
                lv_effects_10_0=ruleEffect();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalSCTX.g:995:2: (otherlv_11= ';' ( (lv_effects_12_0= ruleEffect ) ) )*
                loop202:
                do {
                    int alt202=2;
                    int LA202_0 = input.LA(1);

                    if ( (LA202_0==36) ) {
                        alt202=1;
                    }


                    switch (alt202) {
                	case 1 :
                	    // InternalSCTX.g:995:4: otherlv_11= ';' ( (lv_effects_12_0= ruleEffect ) )
                	    {
                	    otherlv_11=(Token)match(input,36,FollowSets000.FOLLOW_36); if (state.failed) return ;
                	    // InternalSCTX.g:999:1: ( (lv_effects_12_0= ruleEffect ) )
                	    // InternalSCTX.g:1000:1: (lv_effects_12_0= ruleEffect )
                	    {
                	    // InternalSCTX.g:1000:1: (lv_effects_12_0= ruleEffect )
                	    // InternalSCTX.g:1001:3: lv_effects_12_0= ruleEffect
                	    {
                	    if ( state.backtracking==0 ) {
                	       
                	      	        newCompositeNode(grammarAccess.getTransitionAccess().getEffectsEffectParserRuleCall_6_0_1_2_1_0()); 
                	      	    
                	    }
                	    pushFollow(FollowSets000.FOLLOW_37);
                	    lv_effects_12_0=ruleEffect();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop202;
                    }
                } while (true);


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred40_InternalSCTX

    // $ANTLR start synpred41_InternalSCTX
    public final void synpred41_InternalSCTX_fragment() throws RecognitionException {   
        Token otherlv_13=null;
        Token lv_label_14_0=null;

        // InternalSCTX.g:1018:6: ( (otherlv_13= 'if' ( (lv_label_14_0= RULE_STRING ) ) ) )
        // InternalSCTX.g:1018:6: (otherlv_13= 'if' ( (lv_label_14_0= RULE_STRING ) ) )
        {
        // InternalSCTX.g:1018:6: (otherlv_13= 'if' ( (lv_label_14_0= RULE_STRING ) ) )
        // InternalSCTX.g:1018:8: otherlv_13= 'if' ( (lv_label_14_0= RULE_STRING ) )
        {
        otherlv_13=(Token)match(input,34,FollowSets000.FOLLOW_38); if (state.failed) return ;
        // InternalSCTX.g:1022:1: ( (lv_label_14_0= RULE_STRING ) )
        // InternalSCTX.g:1023:1: (lv_label_14_0= RULE_STRING )
        {
        // InternalSCTX.g:1023:1: (lv_label_14_0= RULE_STRING )
        // InternalSCTX.g:1024:3: lv_label_14_0= RULE_STRING
        {
        lv_label_14_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred41_InternalSCTX

    // $ANTLR start synpred77_InternalSCTX
    public final void synpred77_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_6_0 = null;


        // InternalSCTX.g:2108:1: ( (lv_declarations_6_0= ruleDeclarationWOSemicolon ) )
        // InternalSCTX.g:2108:1: (lv_declarations_6_0= ruleDeclarationWOSemicolon )
        {
        // InternalSCTX.g:2108:1: (lv_declarations_6_0= ruleDeclarationWOSemicolon )
        // InternalSCTX.g:2109:3: lv_declarations_6_0= ruleDeclarationWOSemicolon
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getDataflowRegionAccess().getDeclarationsDeclarationWOSemicolonParserRuleCall_6_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_6_0=ruleDeclarationWOSemicolon();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred77_InternalSCTX

    // $ANTLR start synpred78_InternalSCTX
    public final void synpred78_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_equations_7_0 = null;


        // InternalSCTX.g:2126:1: ( (lv_equations_7_0= ruleEquation ) )
        // InternalSCTX.g:2126:1: (lv_equations_7_0= ruleEquation )
        {
        // InternalSCTX.g:2126:1: (lv_equations_7_0= ruleEquation )
        // InternalSCTX.g:2127:3: lv_equations_7_0= ruleEquation
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getDataflowRegionAccess().getEquationsEquationParserRuleCall_7_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_equations_7_0=ruleEquation();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred78_InternalSCTX

    // $ANTLR start synpred86_InternalSCTX
    public final void synpred86_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_expression_0_0 = null;


        // InternalSCTX.g:2403:2: ( ( (lv_expression_0_0= ruleAnnotatedExpression ) ) )
        // InternalSCTX.g:2403:2: ( (lv_expression_0_0= ruleAnnotatedExpression ) )
        {
        // InternalSCTX.g:2403:2: ( (lv_expression_0_0= ruleAnnotatedExpression ) )
        // InternalSCTX.g:2404:1: (lv_expression_0_0= ruleAnnotatedExpression )
        {
        // InternalSCTX.g:2404:1: (lv_expression_0_0= ruleAnnotatedExpression )
        // InternalSCTX.g:2405:3: lv_expression_0_0= ruleAnnotatedExpression
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getTestEntityAccess().getExpressionAnnotatedExpressionParserRuleCall_0_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_expression_0_0=ruleAnnotatedExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred86_InternalSCTX

    // $ANTLR start synpred117_InternalSCTX
    public final void synpred117_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_Assignment_0 = null;


        // InternalSCTX.g:3419:2: (this_Assignment_0= ruleAssignment )
        // InternalSCTX.g:3419:2: this_Assignment_0= ruleAssignment
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Assignment_0=ruleAssignment();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred117_InternalSCTX

    // $ANTLR start synpred118_InternalSCTX
    public final void synpred118_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_PostfixEffect_1 = null;


        // InternalSCTX.g:3432:2: (this_PostfixEffect_1= rulePostfixEffect )
        // InternalSCTX.g:3432:2: this_PostfixEffect_1= rulePostfixEffect
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_PostfixEffect_1=rulePostfixEffect();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred118_InternalSCTX

    // $ANTLR start synpred119_InternalSCTX
    public final void synpred119_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_Emission_2 = null;


        // InternalSCTX.g:3445:2: (this_Emission_2= ruleEmission )
        // InternalSCTX.g:3445:2: this_Emission_2= ruleEmission
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Emission_2=ruleEmission();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred119_InternalSCTX

    // $ANTLR start synpred120_InternalSCTX
    public final void synpred120_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_HostcodeEffect_3 = null;


        // InternalSCTX.g:3458:2: (this_HostcodeEffect_3= ruleHostcodeEffect )
        // InternalSCTX.g:3458:2: this_HostcodeEffect_3= ruleHostcodeEffect
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_HostcodeEffect_3=ruleHostcodeEffect();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred120_InternalSCTX

    // $ANTLR start synpred121_InternalSCTX
    public final void synpred121_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_ReferenceCallEffect_4 = null;


        // InternalSCTX.g:3471:2: (this_ReferenceCallEffect_4= ruleReferenceCallEffect )
        // InternalSCTX.g:3471:2: this_ReferenceCallEffect_4= ruleReferenceCallEffect
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ReferenceCallEffect_4=ruleReferenceCallEffect();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred121_InternalSCTX

    // $ANTLR start synpred141_InternalSCTX
    public final void synpred141_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_BoolExpression_0 = null;


        // InternalSCTX.g:4324:2: (this_BoolExpression_0= ruleBoolExpression )
        // InternalSCTX.g:4324:2: this_BoolExpression_0= ruleBoolExpression
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_BoolExpression_0=ruleBoolExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred141_InternalSCTX

    // $ANTLR start synpred150_InternalSCTX
    public final void synpred150_InternalSCTX_fragment() throws RecognitionException {   
        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;


        // InternalSCTX.g:4814:2: ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )
        // InternalSCTX.g:4814:2: () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) )
        {
        // InternalSCTX.g:4814:2: ()
        // InternalSCTX.g:4815:2: 
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        // InternalSCTX.g:4823:2: ( (lv_operator_2_0= ruleCompareOperator ) )
        // InternalSCTX.g:4824:1: (lv_operator_2_0= ruleCompareOperator )
        {
        // InternalSCTX.g:4824:1: (lv_operator_2_0= ruleCompareOperator )
        // InternalSCTX.g:4825:3: lv_operator_2_0= ruleCompareOperator
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getCompareOperationAccess().getOperatorCompareOperatorEnumRuleCall_1_1_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_34);
        lv_operator_2_0=ruleCompareOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSCTX.g:4841:2: ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) )
        // InternalSCTX.g:4842:1: (lv_subExpressions_3_0= ruleNotOrValuedExpression )
        {
        // InternalSCTX.g:4842:1: (lv_subExpressions_3_0= ruleNotOrValuedExpression )
        // InternalSCTX.g:4843:3: lv_subExpressions_3_0= ruleNotOrValuedExpression
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getCompareOperationAccess().getSubExpressionsNotOrValuedExpressionParserRuleCall_1_2_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_3_0=ruleNotOrValuedExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred150_InternalSCTX

    // $ANTLR start synpred151_InternalSCTX
    public final void synpred151_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_ValuedExpression_0 = null;


        // InternalSCTX.g:4881:2: (this_ValuedExpression_0= ruleValuedExpression )
        // InternalSCTX.g:4881:2: this_ValuedExpression_0= ruleValuedExpression
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ValuedExpression_0=ruleValuedExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred151_InternalSCTX

    // $ANTLR start synpred172_InternalSCTX
    public final void synpred172_InternalSCTX_fragment() throws RecognitionException {   
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject this_ValuedExpression_4 = null;


        // InternalSCTX.g:5762:6: ( (otherlv_3= '(' this_ValuedExpression_4= ruleValuedExpression otherlv_5= ')' ) )
        // InternalSCTX.g:5762:6: (otherlv_3= '(' this_ValuedExpression_4= ruleValuedExpression otherlv_5= ')' )
        {
        // InternalSCTX.g:5762:6: (otherlv_3= '(' this_ValuedExpression_4= ruleValuedExpression otherlv_5= ')' )
        // InternalSCTX.g:5762:8: otherlv_3= '(' this_ValuedExpression_4= ruleValuedExpression otherlv_5= ')'
        {
        otherlv_3=(Token)match(input,25,FollowSets000.FOLLOW_87); if (state.failed) return ;
        pushFollow(FollowSets000.FOLLOW_24);
        this_ValuedExpression_4=ruleValuedExpression();

        state._fsp--;
        if (state.failed) return ;
        otherlv_5=(Token)match(input,27,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred172_InternalSCTX

    // $ANTLR start synpred186_InternalSCTX
    public final void synpred186_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_KeyStringValueAnnotation_1 = null;


        // InternalSCTX.g:6523:2: (this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation )
        // InternalSCTX.g:6523:2: this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_KeyStringValueAnnotation_1=ruleKeyStringValueAnnotation();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred186_InternalSCTX

    // Delegated rules

    public final boolean synpred118_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred118_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred117_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred117_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred120_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred120_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred121_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred121_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred141_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred141_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred36_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred36_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred150_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred150_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred8_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred19_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred19_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred186_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred186_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred5_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred78_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred78_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred7_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred7_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred151_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred151_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred17_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred17_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred20_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred20_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred40_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred40_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred41_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred41_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred77_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred77_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred86_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred86_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred172_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred172_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred119_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred119_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA5 dfa5 = new DFA5(this);
    protected DFA8 dfa8 = new DFA8(this);
    protected DFA15 dfa15 = new DFA15(this);
    protected DFA18 dfa18 = new DFA18(this);
    protected DFA20 dfa20 = new DFA20(this);
    protected DFA36 dfa36 = new DFA36(this);
    protected DFA32 dfa32 = new DFA32(this);
    protected DFA37 dfa37 = new DFA37(this);
    protected DFA57 dfa57 = new DFA57(this);
    protected DFA63 dfa63 = new DFA63(this);
    protected DFA64 dfa64 = new DFA64(this);
    protected DFA68 dfa68 = new DFA68(this);
    protected DFA69 dfa69 = new DFA69(this);
    protected DFA70 dfa70 = new DFA70(this);
    protected DFA74 dfa74 = new DFA74(this);
    protected DFA77 dfa77 = new DFA77(this);
    protected DFA79 dfa79 = new DFA79(this);
    protected DFA80 dfa80 = new DFA80(this);
    protected DFA108 dfa108 = new DFA108(this);
    protected DFA128 dfa128 = new DFA128(this);
    protected DFA137 dfa137 = new DFA137(this);
    protected DFA138 dfa138 = new DFA138(this);
    protected DFA151 dfa151 = new DFA151(this);
    protected DFA152 dfa152 = new DFA152(this);
    protected DFA165 dfa165 = new DFA165(this);
    protected DFA166 dfa166 = new DFA166(this);
    protected DFA167 dfa167 = new DFA167(this);
    protected DFA168 dfa168 = new DFA168(this);
    protected DFA200 dfa200 = new DFA200(this);
    static final String dfa_1s = "\104\uffff";
    static final String dfa_2s = "\1\4\1\uffff\2\4\1\uffff\2\4\1\6\4\4\1\6\4\4\1\40\2\4\1\6\1\4\1\6\4\4\1\6\4\4\2\40\3\4\1\6\3\4\1\6\3\4\1\6\6\4\1\6\6\4\1\6\7\4\1\0";
    static final String dfa_3s = "\1\156\1\uffff\1\156\1\4\1\uffff\1\156\1\4\1\6\1\4\3\156\1\10\4\156\1\110\1\102\1\4\1\6\1\4\1\6\1\102\3\156\1\10\4\156\1\110\1\40\3\156\1\10\2\156\1\4\1\6\1\4\1\102\1\4\1\6\6\156\1\10\4\156\2\4\1\6\3\156\1\4\1\156\1\4\1\156\1\0";
    static final String dfa_4s = "\1\uffff\1\2\2\uffff\1\1\77\uffff";
    static final String dfa_5s = "\103\uffff\1\0}>";
    static final String[] dfa_6s = {
            "\1\1\5\uffff\1\2\7\uffff\6\1\15\uffff\10\1\1\uffff\1\1\2\uffff\7\4\17\uffff\1\3\7\uffff\4\1\25\uffff\7\4",
            "",
            "\1\1\5\uffff\1\2\10\uffff\5\1\24\uffff\1\1\1\uffff\1\1\2\uffff\7\4\17\uffff\1\3\40\uffff\7\4",
            "\1\5",
            "",
            "\1\12\1\11\1\15\1\uffff\1\16\1\13\1\2\10\uffff\5\1\7\uffff\1\10\14\uffff\1\1\1\uffff\1\1\2\uffff\7\4\2\uffff\1\6\7\uffff\1\14\4\uffff\1\3\1\7\37\uffff\7\4",
            "\1\17",
            "\1\20",
            "\1\21",
            "\1\1\5\uffff\1\2\10\uffff\5\1\2\uffff\1\22\21\uffff\1\1\1\uffff\1\1\2\uffff\7\4\17\uffff\1\3\40\uffff\7\4",
            "\1\1\5\uffff\1\2\10\uffff\5\1\2\uffff\1\22\4\uffff\1\1\14\uffff\1\1\1\uffff\1\1\2\uffff\7\4\1\1\1\uffff\1\23\13\uffff\1\1\1\3\1\24\15\uffff\12\1\10\uffff\7\4",
            "\1\1\5\uffff\1\2\10\uffff\5\1\2\uffff\1\22\21\uffff\1\1\1\uffff\1\1\2\uffff\7\4\17\uffff\1\3\40\uffff\7\4",
            "\1\15\1\uffff\1\16",
            "\1\1\5\uffff\1\2\10\uffff\5\1\2\uffff\1\22\21\uffff\1\1\1\uffff\1\1\2\uffff\7\4\17\uffff\1\3\40\uffff\7\4",
            "\1\1\5\uffff\1\2\10\uffff\5\1\2\uffff\1\22\21\uffff\1\1\1\uffff\1\1\2\uffff\7\4\17\uffff\1\3\40\uffff\7\4",
            "\1\12\1\11\1\15\1\uffff\1\16\1\13\1\2\10\uffff\5\1\7\uffff\1\10\14\uffff\1\1\1\uffff\1\1\2\uffff\7\4\2\uffff\1\6\7\uffff\1\14\4\uffff\1\3\1\7\37\uffff\7\4",
            "\1\12\1\11\1\15\1\uffff\1\16\1\13\1\2\10\uffff\5\1\7\uffff\1\10\14\uffff\1\1\1\uffff\1\1\2\uffff\7\4\12\uffff\1\14\4\uffff\1\3\40\uffff\7\4",
            "\1\27\31\uffff\1\25\15\uffff\1\26",
            "\1\31\1\30\1\34\1\uffff\1\35\1\32\70\uffff\1\33",
            "\1\36",
            "\1\37",
            "\1\40",
            "\1\41",
            "\1\43\1\42\1\46\1\uffff\1\47\1\44\70\uffff\1\45",
            "\1\1\5\uffff\1\2\10\uffff\5\1\2\uffff\1\22\21\uffff\1\1\1\uffff\1\1\2\uffff\7\4\17\uffff\1\3\40\uffff\7\4",
            "\1\1\5\uffff\1\2\10\uffff\5\1\2\uffff\1\22\21\uffff\1\1\1\uffff\1\1\2\uffff\7\4\2\uffff\1\50\14\uffff\1\3\1\51\37\uffff\7\4",
            "\1\1\5\uffff\1\2\10\uffff\5\1\2\uffff\1\22\21\uffff\1\1\1\uffff\1\1\2\uffff\7\4\17\uffff\1\3\40\uffff\7\4",
            "\1\34\1\uffff\1\35",
            "\1\1\5\uffff\1\2\10\uffff\5\1\2\uffff\1\22\21\uffff\1\1\1\uffff\1\1\2\uffff\7\4\17\uffff\1\3\40\uffff\7\4",
            "\1\1\5\uffff\1\2\10\uffff\5\1\2\uffff\1\22\21\uffff\1\1\1\uffff\1\1\2\uffff\7\4\17\uffff\1\3\40\uffff\7\4",
            "\1\1\5\uffff\1\2\10\uffff\5\1\2\uffff\1\22\4\uffff\1\1\14\uffff\1\1\1\uffff\1\1\2\uffff\7\4\1\1\1\uffff\1\52\13\uffff\1\1\1\3\1\24\15\uffff\12\1\10\uffff\7\4",
            "\1\1\5\uffff\1\2\10\uffff\5\1\2\uffff\1\22\21\uffff\1\1\1\uffff\1\1\2\uffff\7\4\17\uffff\1\3\40\uffff\7\4",
            "\1\27\31\uffff\1\25\15\uffff\1\26",
            "\1\27",
            "\1\1\5\uffff\1\2\10\uffff\5\1\2\uffff\1\53\21\uffff\1\1\1\uffff\1\1\2\uffff\7\4\17\uffff\1\3\40\uffff\7\4",
            "\1\1\5\uffff\1\2\10\uffff\5\1\2\uffff\1\53\21\uffff\1\1\1\uffff\1\1\2\uffff\7\4\2\uffff\1\54\14\uffff\1\3\1\55\37\uffff\7\4",
            "\1\1\5\uffff\1\2\10\uffff\5\1\2\uffff\1\53\21\uffff\1\1\1\uffff\1\1\2\uffff\7\4\17\uffff\1\3\40\uffff\7\4",
            "\1\46\1\uffff\1\47",
            "\1\1\5\uffff\1\2\10\uffff\5\1\2\uffff\1\53\21\uffff\1\1\1\uffff\1\1\2\uffff\7\4\17\uffff\1\3\40\uffff\7\4",
            "\1\1\5\uffff\1\2\10\uffff\5\1\2\uffff\1\53\21\uffff\1\1\1\uffff\1\1\2\uffff\7\4\17\uffff\1\3\40\uffff\7\4",
            "\1\56",
            "\1\57",
            "\1\60",
            "\1\62\1\61\1\65\1\uffff\1\66\1\63\70\uffff\1\64",
            "\1\67",
            "\1\70",
            "\1\1\5\uffff\1\2\10\uffff\5\1\2\uffff\1\22\21\uffff\1\1\1\uffff\1\1\2\uffff\7\4\2\uffff\1\50\14\uffff\1\3\1\51\37\uffff\7\4",
            "\1\1\5\uffff\1\2\10\uffff\5\1\2\uffff\1\22\21\uffff\1\1\1\uffff\1\1\2\uffff\7\4\17\uffff\1\3\40\uffff\7\4",
            "\1\1\5\uffff\1\2\10\uffff\5\1\2\uffff\1\22\4\uffff\1\1\14\uffff\1\1\1\uffff\1\1\2\uffff\7\4\1\1\1\uffff\1\71\13\uffff\1\1\1\3\1\24\15\uffff\12\1\10\uffff\7\4",
            "\1\1\5\uffff\1\2\10\uffff\5\1\2\uffff\1\53\21\uffff\1\1\1\uffff\1\1\2\uffff\7\4\17\uffff\1\3\40\uffff\7\4",
            "\1\1\5\uffff\1\2\10\uffff\5\1\2\uffff\1\53\21\uffff\1\1\1\uffff\1\1\2\uffff\7\4\2\uffff\1\72\14\uffff\1\3\1\73\37\uffff\7\4",
            "\1\1\5\uffff\1\2\10\uffff\5\1\2\uffff\1\53\21\uffff\1\1\1\uffff\1\1\2\uffff\7\4\17\uffff\1\3\40\uffff\7\4",
            "\1\65\1\uffff\1\66",
            "\1\1\5\uffff\1\2\10\uffff\5\1\2\uffff\1\53\21\uffff\1\1\1\uffff\1\1\2\uffff\7\4\17\uffff\1\3\40\uffff\7\4",
            "\1\1\5\uffff\1\2\10\uffff\5\1\2\uffff\1\53\21\uffff\1\1\1\uffff\1\1\2\uffff\7\4\17\uffff\1\3\40\uffff\7\4",
            "\1\1\5\uffff\1\2\10\uffff\5\1\2\uffff\1\53\21\uffff\1\1\1\uffff\1\1\2\uffff\7\4\2\uffff\1\54\14\uffff\1\3\1\55\37\uffff\7\4",
            "\1\1\5\uffff\1\2\10\uffff\5\1\2\uffff\1\53\21\uffff\1\1\1\uffff\1\1\2\uffff\7\4\17\uffff\1\3\40\uffff\7\4",
            "\1\74",
            "\1\75",
            "\1\76",
            "\1\1\5\uffff\1\2\10\uffff\5\1\2\uffff\1\22\4\uffff\1\1\14\uffff\1\1\1\uffff\1\1\2\uffff\7\4\1\1\1\uffff\1\77\13\uffff\1\1\1\3\1\24\15\uffff\12\1\10\uffff\7\4",
            "\1\1\5\uffff\1\2\10\uffff\5\1\2\uffff\1\53\21\uffff\1\1\1\uffff\1\1\2\uffff\7\4\2\uffff\1\72\14\uffff\1\3\1\73\37\uffff\7\4",
            "\1\1\5\uffff\1\2\10\uffff\5\1\2\uffff\1\53\21\uffff\1\1\1\uffff\1\1\2\uffff\7\4\17\uffff\1\3\40\uffff\7\4",
            "\1\100",
            "\1\1\5\uffff\1\2\10\uffff\5\1\2\uffff\1\22\4\uffff\1\1\14\uffff\1\1\1\uffff\1\1\2\uffff\7\4\1\1\1\uffff\1\101\13\uffff\1\1\1\3\1\24\15\uffff\12\1\10\uffff\7\4",
            "\1\102",
            "\1\1\5\uffff\1\2\10\uffff\5\1\2\uffff\1\22\4\uffff\1\1\14\uffff\1\1\1\uffff\1\1\2\uffff\7\4\1\1\1\uffff\1\103\13\uffff\1\1\1\3\1\24\15\uffff\12\1\10\uffff\7\4",
            "\1\uffff"
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA5 extends DFA {

        public DFA5(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 5;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "()* loopback of 206:1: ( (lv_declarations_5_0= ruleDeclarationWOSemicolon ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA5_67 = input.LA(1);

                         
                        int index5_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalSCTX()) ) {s = 4;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index5_67);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 5, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_7s = "\105\uffff";
    static final String dfa_8s = "\3\4\3\uffff\2\4\1\6\3\4\1\6\7\4\1\6\1\40\3\4\1\6\5\4\1\6\2\4\1\6\1\4\2\40\3\4\1\6\7\4\1\6\4\4\1\6\6\4\1\6\6\4\1\0";
    static final String dfa_9s = "\2\107\1\4\3\uffff\1\110\1\4\1\6\1\107\1\137\1\107\1\10\2\107\1\4\1\110\1\107\1\102\1\4\1\6\1\110\1\107\1\110\1\107\1\10\2\107\1\137\1\107\1\4\1\6\1\102\1\4\1\6\1\4\1\110\1\40\1\107\1\110\1\107\1\10\2\107\1\110\1\107\1\137\1\102\1\4\1\6\1\4\1\107\1\110\1\107\1\10\2\107\1\110\1\107\1\137\1\4\1\6\1\4\1\110\1\107\1\137\1\4\1\137\1\0";
    static final String dfa_10s = "\3\uffff\1\1\1\2\1\3\77\uffff";
    static final String dfa_11s = "\104\uffff\1\0}>";
    static final String[] dfa_12s = {
            "\1\4\5\uffff\1\1\7\uffff\1\5\5\3\24\uffff\1\5\1\uffff\1\5\30\uffff\1\2",
            "\1\4\5\uffff\1\1\10\uffff\5\3\24\uffff\1\5\1\uffff\1\5\30\uffff\1\2",
            "\1\6",
            "",
            "",
            "",
            "\1\12\1\11\1\15\1\uffff\1\16\1\13\1\1\10\uffff\5\3\7\uffff\1\17\14\uffff\1\5\1\uffff\1\5\13\uffff\1\7\7\uffff\1\14\4\uffff\1\2\1\10",
            "\1\20",
            "\1\21",
            "\1\4\5\uffff\1\1\10\uffff\5\3\2\uffff\1\22\21\uffff\1\5\1\uffff\1\5\30\uffff\1\2",
            "\1\4\5\uffff\1\1\10\uffff\5\3\2\uffff\1\22\4\uffff\1\4\14\uffff\1\5\1\uffff\1\5\11\uffff\1\4\1\uffff\1\23\13\uffff\1\4\1\2\1\24\15\uffff\12\4",
            "\1\4\5\uffff\1\1\10\uffff\5\3\2\uffff\1\22\21\uffff\1\5\1\uffff\1\5\30\uffff\1\2",
            "\1\15\1\uffff\1\16",
            "\1\4\5\uffff\1\1\10\uffff\5\3\2\uffff\1\22\21\uffff\1\5\1\uffff\1\5\30\uffff\1\2",
            "\1\4\5\uffff\1\1\10\uffff\5\3\2\uffff\1\22\21\uffff\1\5\1\uffff\1\5\30\uffff\1\2",
            "\1\25",
            "\1\12\1\11\1\15\1\uffff\1\16\1\13\1\1\10\uffff\5\3\7\uffff\1\17\14\uffff\1\5\1\uffff\1\5\13\uffff\1\7\7\uffff\1\14\4\uffff\1\2\1\10",
            "\1\12\1\11\1\15\1\uffff\1\16\1\13\1\1\10\uffff\5\3\7\uffff\1\17\14\uffff\1\5\1\uffff\1\5\23\uffff\1\14\4\uffff\1\2",
            "\1\27\1\26\1\32\1\uffff\1\33\1\30\70\uffff\1\31",
            "\1\34",
            "\1\35",
            "\1\40\31\uffff\1\36\15\uffff\1\37",
            "\1\4\5\uffff\1\1\10\uffff\5\3\2\uffff\1\22\21\uffff\1\5\1\uffff\1\5\30\uffff\1\2",
            "\1\4\5\uffff\1\1\10\uffff\5\3\2\uffff\1\22\21\uffff\1\5\1\uffff\1\5\13\uffff\1\41\14\uffff\1\2\1\42",
            "\1\4\5\uffff\1\1\10\uffff\5\3\2\uffff\1\22\21\uffff\1\5\1\uffff\1\5\30\uffff\1\2",
            "\1\32\1\uffff\1\33",
            "\1\4\5\uffff\1\1\10\uffff\5\3\2\uffff\1\22\21\uffff\1\5\1\uffff\1\5\30\uffff\1\2",
            "\1\4\5\uffff\1\1\10\uffff\5\3\2\uffff\1\22\21\uffff\1\5\1\uffff\1\5\30\uffff\1\2",
            "\1\4\5\uffff\1\1\10\uffff\5\3\2\uffff\1\22\4\uffff\1\4\14\uffff\1\5\1\uffff\1\5\11\uffff\1\4\1\uffff\1\43\13\uffff\1\4\1\2\1\24\15\uffff\12\4",
            "\1\4\5\uffff\1\1\10\uffff\5\3\2\uffff\1\22\21\uffff\1\5\1\uffff\1\5\30\uffff\1\2",
            "\1\44",
            "\1\45",
            "\1\47\1\46\1\52\1\uffff\1\53\1\50\70\uffff\1\51",
            "\1\54",
            "\1\55",
            "\1\56",
            "\1\40\31\uffff\1\36\15\uffff\1\37",
            "\1\40",
            "\1\4\5\uffff\1\1\10\uffff\5\3\2\uffff\1\57\21\uffff\1\5\1\uffff\1\5\30\uffff\1\2",
            "\1\4\5\uffff\1\1\10\uffff\5\3\2\uffff\1\57\21\uffff\1\5\1\uffff\1\5\13\uffff\1\60\14\uffff\1\2\1\61",
            "\1\4\5\uffff\1\1\10\uffff\5\3\2\uffff\1\57\21\uffff\1\5\1\uffff\1\5\30\uffff\1\2",
            "\1\52\1\uffff\1\53",
            "\1\4\5\uffff\1\1\10\uffff\5\3\2\uffff\1\57\21\uffff\1\5\1\uffff\1\5\30\uffff\1\2",
            "\1\4\5\uffff\1\1\10\uffff\5\3\2\uffff\1\57\21\uffff\1\5\1\uffff\1\5\30\uffff\1\2",
            "\1\4\5\uffff\1\1\10\uffff\5\3\2\uffff\1\22\21\uffff\1\5\1\uffff\1\5\13\uffff\1\41\14\uffff\1\2\1\42",
            "\1\4\5\uffff\1\1\10\uffff\5\3\2\uffff\1\22\21\uffff\1\5\1\uffff\1\5\30\uffff\1\2",
            "\1\4\5\uffff\1\1\10\uffff\5\3\2\uffff\1\22\4\uffff\1\4\14\uffff\1\5\1\uffff\1\5\11\uffff\1\4\1\uffff\1\62\13\uffff\1\4\1\2\1\24\15\uffff\12\4",
            "\1\64\1\63\1\67\1\uffff\1\70\1\65\70\uffff\1\66",
            "\1\71",
            "\1\72",
            "\1\73",
            "\1\4\5\uffff\1\1\10\uffff\5\3\2\uffff\1\57\21\uffff\1\5\1\uffff\1\5\30\uffff\1\2",
            "\1\4\5\uffff\1\1\10\uffff\5\3\2\uffff\1\57\21\uffff\1\5\1\uffff\1\5\13\uffff\1\74\14\uffff\1\2\1\75",
            "\1\4\5\uffff\1\1\10\uffff\5\3\2\uffff\1\57\21\uffff\1\5\1\uffff\1\5\30\uffff\1\2",
            "\1\67\1\uffff\1\70",
            "\1\4\5\uffff\1\1\10\uffff\5\3\2\uffff\1\57\21\uffff\1\5\1\uffff\1\5\30\uffff\1\2",
            "\1\4\5\uffff\1\1\10\uffff\5\3\2\uffff\1\57\21\uffff\1\5\1\uffff\1\5\30\uffff\1\2",
            "\1\4\5\uffff\1\1\10\uffff\5\3\2\uffff\1\57\21\uffff\1\5\1\uffff\1\5\13\uffff\1\60\14\uffff\1\2\1\61",
            "\1\4\5\uffff\1\1\10\uffff\5\3\2\uffff\1\57\21\uffff\1\5\1\uffff\1\5\30\uffff\1\2",
            "\1\4\5\uffff\1\1\10\uffff\5\3\2\uffff\1\22\4\uffff\1\4\14\uffff\1\5\1\uffff\1\5\11\uffff\1\4\1\uffff\1\76\13\uffff\1\4\1\2\1\24\15\uffff\12\4",
            "\1\77",
            "\1\100",
            "\1\101",
            "\1\4\5\uffff\1\1\10\uffff\5\3\2\uffff\1\57\21\uffff\1\5\1\uffff\1\5\13\uffff\1\74\14\uffff\1\2\1\75",
            "\1\4\5\uffff\1\1\10\uffff\5\3\2\uffff\1\57\21\uffff\1\5\1\uffff\1\5\30\uffff\1\2",
            "\1\4\5\uffff\1\1\10\uffff\5\3\2\uffff\1\22\4\uffff\1\4\14\uffff\1\5\1\uffff\1\5\11\uffff\1\4\1\uffff\1\102\13\uffff\1\4\1\2\1\24\15\uffff\12\4",
            "\1\103",
            "\1\4\5\uffff\1\1\10\uffff\5\3\2\uffff\1\22\4\uffff\1\4\14\uffff\1\5\1\uffff\1\5\11\uffff\1\4\1\uffff\1\104\13\uffff\1\4\1\2\1\24\15\uffff\12\4",
            "\1\uffff"
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final char[] dfa_8 = DFA.unpackEncodedStringToUnsignedChars(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final short[] dfa_10 = DFA.unpackEncodedString(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[][] dfa_12 = unpackEncodedStringArray(dfa_12s);

    class DFA8 extends DFA {

        public DFA8(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 8;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_8;
            this.max = dfa_9;
            this.accept = dfa_10;
            this.special = dfa_11;
            this.transition = dfa_12;
        }
        public String getDescription() {
            return "242:3: ( ( (lv_regions_7_0= ruleSingleControlflowRegion ) ) | ( (lv_regions_8_0= ruleSingleDataflowRegion ) ) | ( (lv_regions_9_0= ruleRegion ) )* )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA8_68 = input.LA(1);

                         
                        int index8_68 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalSCTX()) ) {s = 3;}

                        else if ( (synpred8_InternalSCTX()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index8_68);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 8, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA15 extends DFA {

        public DFA15(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 15;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "()* loopback of 468:1: ( (lv_declarations_11_0= ruleDeclarationWOSemicolon ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA15_67 = input.LA(1);

                         
                        int index15_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalSCTX()) ) {s = 4;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index15_67);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 15, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA18 extends DFA {

        public DFA18(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 18;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_8;
            this.max = dfa_9;
            this.accept = dfa_10;
            this.special = dfa_11;
            this.transition = dfa_12;
        }
        public String getDescription() {
            return "504:3: ( ( (lv_regions_13_0= ruleSingleControlflowRegion ) ) | ( (lv_regions_14_0= ruleSingleDataflowRegion ) ) | ( (lv_regions_15_0= ruleRegion ) )* )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA18_68 = input.LA(1);

                         
                        int index18_68 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_InternalSCTX()) ) {s = 3;}

                        else if ( (synpred20_InternalSCTX()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index18_68);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 18, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_13s = "\57\uffff";
    static final String dfa_14s = "\1\1\56\uffff";
    static final String dfa_15s = "\1\12\1\uffff\1\12\1\4\1\uffff\2\4\1\6\3\12\5\4\1\6\1\40\5\12\1\4\1\6\2\4\1\6\2\40\5\12\2\4\1\6\5\12\1\4\1\6\2\12";
    static final String dfa_16s = "\1\116\1\uffff\1\116\1\4\1\uffff\1\116\1\4\1\6\3\116\1\4\2\116\1\102\1\4\1\6\1\110\5\116\1\4\1\6\1\102\1\4\1\6\1\110\1\40\5\116\1\102\1\4\1\6\5\116\1\4\1\6\2\116";
    static final String dfa_17s = "\1\uffff\1\2\2\uffff\1\1\52\uffff";
    static final String dfa_18s = "\57\uffff}>";
    static final String[] dfa_19s = {
            "\1\2\7\uffff\6\1\24\uffff\1\1\1\uffff\1\1\30\uffff\1\3\1\uffff\6\4",
            "",
            "\1\2\10\uffff\5\1\24\uffff\1\1\1\uffff\1\1\30\uffff\1\3\1\uffff\6\4",
            "\1\5",
            "",
            "\1\11\1\10\1\1\1\uffff\1\1\1\12\1\2\10\uffff\5\1\7\uffff\1\13\14\uffff\1\1\1\uffff\1\1\13\uffff\1\6\7\uffff\1\1\4\uffff\1\3\1\7\6\4",
            "\1\14",
            "\1\15",
            "\1\2\10\uffff\5\1\2\uffff\1\16\21\uffff\1\1\1\uffff\1\1\30\uffff\1\3\1\uffff\6\4",
            "\1\2\10\uffff\5\1\2\uffff\1\16\21\uffff\1\1\1\uffff\1\1\13\uffff\1\17\14\uffff\1\3\1\20\6\4",
            "\1\2\10\uffff\5\1\2\uffff\1\16\21\uffff\1\1\1\uffff\1\1\30\uffff\1\3\1\uffff\6\4",
            "\1\21",
            "\1\11\1\10\1\1\1\uffff\1\1\1\12\1\2\10\uffff\5\1\7\uffff\1\13\14\uffff\1\1\1\uffff\1\1\13\uffff\1\6\7\uffff\1\1\4\uffff\1\3\1\7\6\4",
            "\1\11\1\10\1\1\1\uffff\1\1\1\12\1\2\10\uffff\5\1\7\uffff\1\13\14\uffff\1\1\1\uffff\1\1\23\uffff\1\1\4\uffff\1\3\1\uffff\6\4",
            "\1\23\1\22\1\1\1\uffff\1\1\1\24\70\uffff\1\1",
            "\1\25",
            "\1\26",
            "\1\31\31\uffff\1\27\15\uffff\1\30",
            "\1\2\10\uffff\5\1\2\uffff\1\16\21\uffff\1\1\1\uffff\1\1\30\uffff\1\3\1\uffff\6\4",
            "\1\2\10\uffff\5\1\2\uffff\1\16\21\uffff\1\1\1\uffff\1\1\13\uffff\1\32\14\uffff\1\3\1\33\6\4",
            "\1\2\10\uffff\5\1\2\uffff\1\16\21\uffff\1\1\1\uffff\1\1\30\uffff\1\3\1\uffff\6\4",
            "\1\2\10\uffff\5\1\2\uffff\1\16\21\uffff\1\1\1\uffff\1\1\13\uffff\1\17\14\uffff\1\3\1\20\6\4",
            "\1\2\10\uffff\5\1\2\uffff\1\16\21\uffff\1\1\1\uffff\1\1\30\uffff\1\3\1\uffff\6\4",
            "\1\34",
            "\1\35",
            "\1\37\1\36\1\1\1\uffff\1\1\1\40\70\uffff\1\1",
            "\1\41",
            "\1\42",
            "\1\31\31\uffff\1\27\15\uffff\1\30",
            "\1\31",
            "\1\2\10\uffff\5\1\2\uffff\1\43\21\uffff\1\1\1\uffff\1\1\30\uffff\1\3\1\uffff\6\4",
            "\1\2\10\uffff\5\1\2\uffff\1\43\21\uffff\1\1\1\uffff\1\1\13\uffff\1\44\14\uffff\1\3\1\45\6\4",
            "\1\2\10\uffff\5\1\2\uffff\1\43\21\uffff\1\1\1\uffff\1\1\30\uffff\1\3\1\uffff\6\4",
            "\1\2\10\uffff\5\1\2\uffff\1\16\21\uffff\1\1\1\uffff\1\1\13\uffff\1\32\14\uffff\1\3\1\33\6\4",
            "\1\2\10\uffff\5\1\2\uffff\1\16\21\uffff\1\1\1\uffff\1\1\30\uffff\1\3\1\uffff\6\4",
            "\1\47\1\46\1\1\1\uffff\1\1\1\50\70\uffff\1\1",
            "\1\51",
            "\1\52",
            "\1\2\10\uffff\5\1\2\uffff\1\43\21\uffff\1\1\1\uffff\1\1\30\uffff\1\3\1\uffff\6\4",
            "\1\2\10\uffff\5\1\2\uffff\1\43\21\uffff\1\1\1\uffff\1\1\13\uffff\1\53\14\uffff\1\3\1\54\6\4",
            "\1\2\10\uffff\5\1\2\uffff\1\43\21\uffff\1\1\1\uffff\1\1\30\uffff\1\3\1\uffff\6\4",
            "\1\2\10\uffff\5\1\2\uffff\1\43\21\uffff\1\1\1\uffff\1\1\13\uffff\1\44\14\uffff\1\3\1\45\6\4",
            "\1\2\10\uffff\5\1\2\uffff\1\43\21\uffff\1\1\1\uffff\1\1\30\uffff\1\3\1\uffff\6\4",
            "\1\55",
            "\1\56",
            "\1\2\10\uffff\5\1\2\uffff\1\43\21\uffff\1\1\1\uffff\1\1\13\uffff\1\53\14\uffff\1\3\1\54\6\4",
            "\1\2\10\uffff\5\1\2\uffff\1\43\21\uffff\1\1\1\uffff\1\1\30\uffff\1\3\1\uffff\6\4"
    };

    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final short[] dfa_14 = DFA.unpackEncodedString(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[][] dfa_19 = unpackEncodedStringArray(dfa_19s);

    class DFA20 extends DFA {

        public DFA20(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 20;
            this.eot = dfa_13;
            this.eof = dfa_14;
            this.min = dfa_15;
            this.max = dfa_16;
            this.accept = dfa_17;
            this.special = dfa_18;
            this.transition = dfa_19;
        }
        public String getDescription() {
            return "()* loopback of 564:4: ( (lv_outgoingTransitions_17_0= ruleTransition ) )*";
        }
    }
    static final String dfa_20s = "\27\uffff";
    static final String dfa_21s = "\1\3\26\uffff";
    static final String dfa_22s = "\1\12\1\4\1\uffff\22\0\2\uffff";
    static final String dfa_23s = "\1\116\1\147\1\uffff\22\0\2\uffff";
    static final String dfa_24s = "\2\uffff\1\1\22\uffff\1\3\1\2";
    static final String dfa_25s = "\3\uffff\1\7\1\6\1\12\1\21\1\3\1\11\1\20\1\4\1\0\1\13\1\17\1\5\1\1\1\16\1\14\1\10\1\2\1\15\2\uffff}>";
    static final String[] dfa_26s = {
            "\1\5\7\uffff\1\4\1\7\1\10\1\11\1\12\1\13\12\uffff\1\1\1\2\10\uffff\1\14\1\uffff\1\15\30\uffff\1\6\1\uffff\1\16\1\17\1\20\1\21\1\22\1\23",
            "\1\2\1\24\4\2\17\uffff\1\2\2\uffff\1\2\32\uffff\1\2\4\uffff\1\2\5\uffff\1\2\43\uffff\2\2",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_20 = DFA.unpackEncodedString(dfa_20s);
    static final short[] dfa_21 = DFA.unpackEncodedString(dfa_21s);
    static final char[] dfa_22 = DFA.unpackEncodedStringToUnsignedChars(dfa_22s);
    static final char[] dfa_23 = DFA.unpackEncodedStringToUnsignedChars(dfa_23s);
    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final short[][] dfa_26 = unpackEncodedStringArray(dfa_26s);

    class DFA36 extends DFA {

        public DFA36(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 36;
            this.eot = dfa_20;
            this.eof = dfa_21;
            this.min = dfa_22;
            this.max = dfa_23;
            this.accept = dfa_24;
            this.special = dfa_25;
            this.transition = dfa_26;
        }
        public String getDescription() {
            return "933:3: ( ( (otherlv_6= 'if' ( (lv_triggerDelay_7_0= RULE_INT ) )? ( (lv_trigger_8_0= ruleBoolExpression ) ) )? (otherlv_9= 'do' ( (lv_effects_10_0= ruleEffect ) ) (otherlv_11= ';' ( (lv_effects_12_0= ruleEffect ) ) )* )? ) | (otherlv_13= 'if' ( (lv_label_14_0= RULE_STRING ) ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA36_11 = input.LA(1);

                         
                        int index36_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred40_InternalSCTX()) ) {s = 2;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index36_11);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA36_15 = input.LA(1);

                         
                        int index36_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred40_InternalSCTX()) ) {s = 2;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index36_15);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA36_19 = input.LA(1);

                         
                        int index36_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred40_InternalSCTX()) ) {s = 2;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index36_19);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA36_7 = input.LA(1);

                         
                        int index36_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred40_InternalSCTX()) ) {s = 2;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index36_7);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA36_10 = input.LA(1);

                         
                        int index36_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred40_InternalSCTX()) ) {s = 2;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index36_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA36_14 = input.LA(1);

                         
                        int index36_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred40_InternalSCTX()) ) {s = 2;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index36_14);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA36_4 = input.LA(1);

                         
                        int index36_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred40_InternalSCTX()) ) {s = 2;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index36_4);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA36_3 = input.LA(1);

                         
                        int index36_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred40_InternalSCTX()) ) {s = 2;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index36_3);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA36_18 = input.LA(1);

                         
                        int index36_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred40_InternalSCTX()) ) {s = 2;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index36_18);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA36_8 = input.LA(1);

                         
                        int index36_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred40_InternalSCTX()) ) {s = 2;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index36_8);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA36_5 = input.LA(1);

                         
                        int index36_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred40_InternalSCTX()) ) {s = 2;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index36_5);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA36_12 = input.LA(1);

                         
                        int index36_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred40_InternalSCTX()) ) {s = 2;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index36_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA36_17 = input.LA(1);

                         
                        int index36_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred40_InternalSCTX()) ) {s = 2;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index36_17);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA36_20 = input.LA(1);

                         
                        int index36_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred40_InternalSCTX()) ) {s = 2;}

                        else if ( (synpred41_InternalSCTX()) ) {s = 22;}

                         
                        input.seek(index36_20);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA36_16 = input.LA(1);

                         
                        int index36_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred40_InternalSCTX()) ) {s = 2;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index36_16);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA36_13 = input.LA(1);

                         
                        int index36_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred40_InternalSCTX()) ) {s = 2;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index36_13);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA36_9 = input.LA(1);

                         
                        int index36_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred40_InternalSCTX()) ) {s = 2;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index36_9);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA36_6 = input.LA(1);

                         
                        int index36_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred40_InternalSCTX()) ) {s = 2;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index36_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 36, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_27s = "\17\uffff";
    static final String dfa_28s = "\1\4\1\0\15\uffff";
    static final String dfa_29s = "\1\147\1\0\15\uffff";
    static final String dfa_30s = "\2\uffff\1\2\13\uffff\1\1";
    static final String dfa_31s = "\1\uffff\1\0\15\uffff}>";
    static final String[] dfa_32s = {
            "\2\2\1\1\3\2\17\uffff\1\2\2\uffff\1\2\32\uffff\1\2\4\uffff\1\2\5\uffff\1\2\43\uffff\2\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_27 = DFA.unpackEncodedString(dfa_27s);
    static final char[] dfa_28 = DFA.unpackEncodedStringToUnsignedChars(dfa_28s);
    static final char[] dfa_29 = DFA.unpackEncodedStringToUnsignedChars(dfa_29s);
    static final short[] dfa_30 = DFA.unpackEncodedString(dfa_30s);
    static final short[] dfa_31 = DFA.unpackEncodedString(dfa_31s);
    static final short[][] dfa_32 = unpackEncodedStringArray(dfa_32s);

    class DFA32 extends DFA {

        public DFA32(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 32;
            this.eot = dfa_27;
            this.eof = dfa_27;
            this.min = dfa_28;
            this.max = dfa_29;
            this.accept = dfa_30;
            this.special = dfa_31;
            this.transition = dfa_32;
        }
        public String getDescription() {
            return "937:1: ( (lv_triggerDelay_7_0= RULE_INT ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA32_1 = input.LA(1);

                         
                        int index32_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred36_InternalSCTX()) ) {s = 14;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index32_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 32, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_33s = "\13\uffff";
    static final String dfa_34s = "\1\45\1\uffff\4\46\5\uffff";
    static final String dfa_35s = "\1\122\1\uffff\4\51\5\uffff";
    static final String dfa_36s = "\1\uffff\1\1\4\uffff\1\2\1\3\1\4\1\5\1\6";
    static final String dfa_37s = "\13\uffff}>";
    static final String[] dfa_38s = {
            "\1\1\1\6\1\7\2\10\1\11\1\12\43\uffff\1\2\1\3\1\4\1\5",
            "",
            "\1\6\1\uffff\2\10",
            "\1\6\1\uffff\2\10",
            "\1\6\1\uffff\2\10",
            "\1\6\1\uffff\2\10",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_33 = DFA.unpackEncodedString(dfa_33s);
    static final char[] dfa_34 = DFA.unpackEncodedStringToUnsignedChars(dfa_34s);
    static final char[] dfa_35 = DFA.unpackEncodedStringToUnsignedChars(dfa_35s);
    static final short[] dfa_36 = DFA.unpackEncodedString(dfa_36s);
    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final short[][] dfa_38 = unpackEncodedStringArray(dfa_38s);

    class DFA37 extends DFA {

        public DFA37(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 37;
            this.eot = dfa_33;
            this.eof = dfa_33;
            this.min = dfa_34;
            this.max = dfa_35;
            this.accept = dfa_36;
            this.special = dfa_37;
            this.transition = dfa_38;
        }
        public String getDescription() {
            return "1061:1: (this_EntryAction_0= ruleEntryAction | this_DuringAction_1= ruleDuringAction | this_ExitAction_2= ruleExitAction | this_SuspendAction_3= ruleSuspendAction | this_PrecedingAction_4= rulePrecedingAction | this_SucceedingAction_5= ruleSucceedingAction )";
        }
    }
    static final String dfa_39s = "\73\uffff";
    static final String dfa_40s = "\2\12\1\4\2\uffff\2\4\1\6\3\12\1\6\2\12\5\4\1\6\1\40\3\12\1\6\4\12\1\4\1\6\2\4\1\6\2\40\3\12\1\6\4\12\2\4\1\6\3\12\1\6\4\12\1\4\1\6\2\12";
    static final String dfa_41s = "\2\107\1\4\2\uffff\1\110\1\4\1\6\1\107\1\110\1\107\1\10\2\107\1\4\1\110\1\107\1\102\1\4\1\6\1\110\1\107\1\110\1\107\1\10\2\107\1\110\1\107\1\4\1\6\1\102\1\4\1\6\1\110\1\40\1\107\1\110\1\107\1\10\2\107\1\110\1\107\1\102\1\4\1\6\1\107\1\110\1\107\1\10\2\107\1\110\1\107\1\4\1\6\1\110\1\107";
    static final String dfa_42s = "\3\uffff\1\1\1\2\66\uffff";
    static final String dfa_43s = "\73\uffff}>";
    static final String[] dfa_44s = {
            "\1\1\41\uffff\1\3\1\uffff\1\4\30\uffff\1\2",
            "\1\1\41\uffff\1\3\1\uffff\1\4\30\uffff\1\2",
            "\1\5",
            "",
            "",
            "\1\11\1\10\1\14\1\uffff\1\15\1\12\1\1\24\uffff\1\16\14\uffff\1\3\1\uffff\1\4\13\uffff\1\6\7\uffff\1\13\4\uffff\1\2\1\7",
            "\1\17",
            "\1\20",
            "\1\1\17\uffff\1\21\21\uffff\1\3\1\uffff\1\4\30\uffff\1\2",
            "\1\1\17\uffff\1\21\21\uffff\1\3\1\uffff\1\4\13\uffff\1\22\14\uffff\1\2\1\23",
            "\1\1\17\uffff\1\21\21\uffff\1\3\1\uffff\1\4\30\uffff\1\2",
            "\1\14\1\uffff\1\15",
            "\1\1\17\uffff\1\21\21\uffff\1\3\1\uffff\1\4\30\uffff\1\2",
            "\1\1\17\uffff\1\21\21\uffff\1\3\1\uffff\1\4\30\uffff\1\2",
            "\1\24",
            "\1\11\1\10\1\14\1\uffff\1\15\1\12\1\1\24\uffff\1\16\14\uffff\1\3\1\uffff\1\4\13\uffff\1\6\7\uffff\1\13\4\uffff\1\2\1\7",
            "\1\11\1\10\1\14\1\uffff\1\15\1\12\1\1\24\uffff\1\16\14\uffff\1\3\1\uffff\1\4\23\uffff\1\13\4\uffff\1\2",
            "\1\26\1\25\1\31\1\uffff\1\32\1\27\70\uffff\1\30",
            "\1\33",
            "\1\34",
            "\1\37\31\uffff\1\35\15\uffff\1\36",
            "\1\1\17\uffff\1\21\21\uffff\1\3\1\uffff\1\4\30\uffff\1\2",
            "\1\1\17\uffff\1\21\21\uffff\1\3\1\uffff\1\4\13\uffff\1\40\14\uffff\1\2\1\41",
            "\1\1\17\uffff\1\21\21\uffff\1\3\1\uffff\1\4\30\uffff\1\2",
            "\1\31\1\uffff\1\32",
            "\1\1\17\uffff\1\21\21\uffff\1\3\1\uffff\1\4\30\uffff\1\2",
            "\1\1\17\uffff\1\21\21\uffff\1\3\1\uffff\1\4\30\uffff\1\2",
            "\1\1\17\uffff\1\21\21\uffff\1\3\1\uffff\1\4\13\uffff\1\22\14\uffff\1\2\1\23",
            "\1\1\17\uffff\1\21\21\uffff\1\3\1\uffff\1\4\30\uffff\1\2",
            "\1\42",
            "\1\43",
            "\1\45\1\44\1\50\1\uffff\1\51\1\46\70\uffff\1\47",
            "\1\52",
            "\1\53",
            "\1\37\31\uffff\1\35\15\uffff\1\36",
            "\1\37",
            "\1\1\17\uffff\1\54\21\uffff\1\3\1\uffff\1\4\30\uffff\1\2",
            "\1\1\17\uffff\1\54\21\uffff\1\3\1\uffff\1\4\13\uffff\1\55\14\uffff\1\2\1\56",
            "\1\1\17\uffff\1\54\21\uffff\1\3\1\uffff\1\4\30\uffff\1\2",
            "\1\50\1\uffff\1\51",
            "\1\1\17\uffff\1\54\21\uffff\1\3\1\uffff\1\4\30\uffff\1\2",
            "\1\1\17\uffff\1\54\21\uffff\1\3\1\uffff\1\4\30\uffff\1\2",
            "\1\1\17\uffff\1\21\21\uffff\1\3\1\uffff\1\4\13\uffff\1\40\14\uffff\1\2\1\41",
            "\1\1\17\uffff\1\21\21\uffff\1\3\1\uffff\1\4\30\uffff\1\2",
            "\1\60\1\57\1\63\1\uffff\1\64\1\61\70\uffff\1\62",
            "\1\65",
            "\1\66",
            "\1\1\17\uffff\1\54\21\uffff\1\3\1\uffff\1\4\30\uffff\1\2",
            "\1\1\17\uffff\1\54\21\uffff\1\3\1\uffff\1\4\13\uffff\1\67\14\uffff\1\2\1\70",
            "\1\1\17\uffff\1\54\21\uffff\1\3\1\uffff\1\4\30\uffff\1\2",
            "\1\63\1\uffff\1\64",
            "\1\1\17\uffff\1\54\21\uffff\1\3\1\uffff\1\4\30\uffff\1\2",
            "\1\1\17\uffff\1\54\21\uffff\1\3\1\uffff\1\4\30\uffff\1\2",
            "\1\1\17\uffff\1\54\21\uffff\1\3\1\uffff\1\4\13\uffff\1\55\14\uffff\1\2\1\56",
            "\1\1\17\uffff\1\54\21\uffff\1\3\1\uffff\1\4\30\uffff\1\2",
            "\1\71",
            "\1\72",
            "\1\1\17\uffff\1\54\21\uffff\1\3\1\uffff\1\4\13\uffff\1\67\14\uffff\1\2\1\70",
            "\1\1\17\uffff\1\54\21\uffff\1\3\1\uffff\1\4\30\uffff\1\2"
    };

    static final short[] dfa_39 = DFA.unpackEncodedString(dfa_39s);
    static final char[] dfa_40 = DFA.unpackEncodedStringToUnsignedChars(dfa_40s);
    static final char[] dfa_41 = DFA.unpackEncodedStringToUnsignedChars(dfa_41s);
    static final short[] dfa_42 = DFA.unpackEncodedString(dfa_42s);
    static final short[] dfa_43 = DFA.unpackEncodedString(dfa_43s);
    static final short[][] dfa_44 = unpackEncodedStringArray(dfa_44s);

    class DFA57 extends DFA {

        public DFA57(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 57;
            this.eot = dfa_39;
            this.eof = dfa_39;
            this.min = dfa_40;
            this.max = dfa_41;
            this.accept = dfa_42;
            this.special = dfa_43;
            this.transition = dfa_44;
        }
        public String getDescription() {
            return "1766:1: (this_ControlflowRegion_0= ruleControlflowRegion | this_DataflowRegion_1= ruleDataflowRegion )";
        }
    }
    static final String dfa_45s = "\2\156\1\4\2\uffff\1\156\1\4\1\6\3\156\1\10\2\156\1\4\2\156\1\102\1\4\1\6\1\110\3\156\1\10\4\156\1\4\1\6\1\102\1\4\1\6\1\110\1\40\3\156\1\10\4\156\1\102\1\4\1\6\3\156\1\10\4\156\1\4\1\6\2\156";
    static final String dfa_46s = "\3\uffff\1\2\1\1\66\uffff";
    static final String[] dfa_47s = {
            "\1\1\10\uffff\5\3\31\uffff\7\4\17\uffff\1\2\40\uffff\7\4",
            "\1\1\10\uffff\5\3\31\uffff\7\4\17\uffff\1\2\40\uffff\7\4",
            "\1\5",
            "",
            "",
            "\1\11\1\10\1\14\1\uffff\1\15\1\12\1\1\10\uffff\5\3\7\uffff\1\16\21\uffff\7\4\2\uffff\1\6\7\uffff\1\13\4\uffff\1\2\1\7\37\uffff\7\4",
            "\1\17",
            "\1\20",
            "\1\1\10\uffff\5\3\2\uffff\1\21\26\uffff\7\4\17\uffff\1\2\40\uffff\7\4",
            "\1\1\10\uffff\5\3\2\uffff\1\21\26\uffff\7\4\2\uffff\1\22\14\uffff\1\2\1\23\37\uffff\7\4",
            "\1\1\10\uffff\5\3\2\uffff\1\21\26\uffff\7\4\17\uffff\1\2\40\uffff\7\4",
            "\1\14\1\uffff\1\15",
            "\1\1\10\uffff\5\3\2\uffff\1\21\26\uffff\7\4\17\uffff\1\2\40\uffff\7\4",
            "\1\1\10\uffff\5\3\2\uffff\1\21\26\uffff\7\4\17\uffff\1\2\40\uffff\7\4",
            "\1\24",
            "\1\11\1\10\1\14\1\uffff\1\15\1\12\1\1\10\uffff\5\3\7\uffff\1\16\21\uffff\7\4\2\uffff\1\6\7\uffff\1\13\4\uffff\1\2\1\7\37\uffff\7\4",
            "\1\11\1\10\1\14\1\uffff\1\15\1\12\1\1\10\uffff\5\3\7\uffff\1\16\21\uffff\7\4\12\uffff\1\13\4\uffff\1\2\40\uffff\7\4",
            "\1\26\1\25\1\31\1\uffff\1\32\1\27\70\uffff\1\30",
            "\1\33",
            "\1\34",
            "\1\37\31\uffff\1\35\15\uffff\1\36",
            "\1\1\10\uffff\5\3\2\uffff\1\21\26\uffff\7\4\17\uffff\1\2\40\uffff\7\4",
            "\1\1\10\uffff\5\3\2\uffff\1\21\26\uffff\7\4\2\uffff\1\40\14\uffff\1\2\1\41\37\uffff\7\4",
            "\1\1\10\uffff\5\3\2\uffff\1\21\26\uffff\7\4\17\uffff\1\2\40\uffff\7\4",
            "\1\31\1\uffff\1\32",
            "\1\1\10\uffff\5\3\2\uffff\1\21\26\uffff\7\4\17\uffff\1\2\40\uffff\7\4",
            "\1\1\10\uffff\5\3\2\uffff\1\21\26\uffff\7\4\17\uffff\1\2\40\uffff\7\4",
            "\1\1\10\uffff\5\3\2\uffff\1\21\26\uffff\7\4\2\uffff\1\22\14\uffff\1\2\1\23\37\uffff\7\4",
            "\1\1\10\uffff\5\3\2\uffff\1\21\26\uffff\7\4\17\uffff\1\2\40\uffff\7\4",
            "\1\42",
            "\1\43",
            "\1\45\1\44\1\50\1\uffff\1\51\1\46\70\uffff\1\47",
            "\1\52",
            "\1\53",
            "\1\37\31\uffff\1\35\15\uffff\1\36",
            "\1\37",
            "\1\1\10\uffff\5\3\2\uffff\1\54\26\uffff\7\4\17\uffff\1\2\40\uffff\7\4",
            "\1\1\10\uffff\5\3\2\uffff\1\54\26\uffff\7\4\2\uffff\1\55\14\uffff\1\2\1\56\37\uffff\7\4",
            "\1\1\10\uffff\5\3\2\uffff\1\54\26\uffff\7\4\17\uffff\1\2\40\uffff\7\4",
            "\1\50\1\uffff\1\51",
            "\1\1\10\uffff\5\3\2\uffff\1\54\26\uffff\7\4\17\uffff\1\2\40\uffff\7\4",
            "\1\1\10\uffff\5\3\2\uffff\1\54\26\uffff\7\4\17\uffff\1\2\40\uffff\7\4",
            "\1\1\10\uffff\5\3\2\uffff\1\21\26\uffff\7\4\2\uffff\1\40\14\uffff\1\2\1\41\37\uffff\7\4",
            "\1\1\10\uffff\5\3\2\uffff\1\21\26\uffff\7\4\17\uffff\1\2\40\uffff\7\4",
            "\1\60\1\57\1\63\1\uffff\1\64\1\61\70\uffff\1\62",
            "\1\65",
            "\1\66",
            "\1\1\10\uffff\5\3\2\uffff\1\54\26\uffff\7\4\17\uffff\1\2\40\uffff\7\4",
            "\1\1\10\uffff\5\3\2\uffff\1\54\26\uffff\7\4\2\uffff\1\67\14\uffff\1\2\1\70\37\uffff\7\4",
            "\1\1\10\uffff\5\3\2\uffff\1\54\26\uffff\7\4\17\uffff\1\2\40\uffff\7\4",
            "\1\63\1\uffff\1\64",
            "\1\1\10\uffff\5\3\2\uffff\1\54\26\uffff\7\4\17\uffff\1\2\40\uffff\7\4",
            "\1\1\10\uffff\5\3\2\uffff\1\54\26\uffff\7\4\17\uffff\1\2\40\uffff\7\4",
            "\1\1\10\uffff\5\3\2\uffff\1\54\26\uffff\7\4\2\uffff\1\55\14\uffff\1\2\1\56\37\uffff\7\4",
            "\1\1\10\uffff\5\3\2\uffff\1\54\26\uffff\7\4\17\uffff\1\2\40\uffff\7\4",
            "\1\71",
            "\1\72",
            "\1\1\10\uffff\5\3\2\uffff\1\54\26\uffff\7\4\2\uffff\1\67\14\uffff\1\2\1\70\37\uffff\7\4",
            "\1\1\10\uffff\5\3\2\uffff\1\54\26\uffff\7\4\17\uffff\1\2\40\uffff\7\4"
    };
    static final char[] dfa_45 = DFA.unpackEncodedStringToUnsignedChars(dfa_45s);
    static final short[] dfa_46 = DFA.unpackEncodedString(dfa_46s);
    static final short[][] dfa_47 = unpackEncodedStringArray(dfa_47s);

    class DFA63 extends DFA {

        public DFA63(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 63;
            this.eot = dfa_39;
            this.eof = dfa_39;
            this.min = dfa_40;
            this.max = dfa_45;
            this.accept = dfa_46;
            this.special = dfa_43;
            this.transition = dfa_47;
        }
        public String getDescription() {
            return "()* loopback of 1979:1: ( (lv_declarations_6_0= ruleDeclarationWOSemicolon ) )*";
        }
    }
    static final String dfa_48s = "\1\1\72\uffff";
    static final String dfa_49s = "\1\12\1\uffff\1\12\1\4\1\uffff\2\4\1\6\3\12\1\6\2\12\5\4\1\6\1\40\3\12\1\6\4\12\1\4\1\6\2\4\1\6\2\40\3\12\1\6\4\12\2\4\1\6\3\12\1\6\4\12\1\4\1\6\2\12";
    static final String dfa_50s = "\1\107\1\uffff\1\107\1\4\1\uffff\1\110\1\4\1\6\1\107\1\110\1\107\1\10\2\107\1\4\1\110\1\107\1\102\1\4\1\6\1\110\1\107\1\110\1\107\1\10\2\107\1\110\1\107\1\4\1\6\1\102\1\4\1\6\1\110\1\40\1\107\1\110\1\107\1\10\2\107\1\110\1\107\1\102\1\4\1\6\1\107\1\110\1\107\1\10\2\107\1\110\1\107\1\4\1\6\1\110\1\107";
    static final String dfa_51s = "\1\uffff\1\2\2\uffff\1\1\66\uffff";
    static final String[] dfa_52s = {
            "\1\2\7\uffff\1\1\5\4\24\uffff\1\1\1\uffff\1\1\30\uffff\1\3",
            "",
            "\1\2\10\uffff\5\4\24\uffff\1\1\1\uffff\1\1\30\uffff\1\3",
            "\1\5",
            "",
            "\1\11\1\10\1\14\1\uffff\1\15\1\12\1\2\10\uffff\5\4\7\uffff\1\16\14\uffff\1\1\1\uffff\1\1\13\uffff\1\6\7\uffff\1\13\4\uffff\1\3\1\7",
            "\1\17",
            "\1\20",
            "\1\2\10\uffff\5\4\2\uffff\1\21\21\uffff\1\1\1\uffff\1\1\30\uffff\1\3",
            "\1\2\10\uffff\5\4\2\uffff\1\21\21\uffff\1\1\1\uffff\1\1\13\uffff\1\22\14\uffff\1\3\1\23",
            "\1\2\10\uffff\5\4\2\uffff\1\21\21\uffff\1\1\1\uffff\1\1\30\uffff\1\3",
            "\1\14\1\uffff\1\15",
            "\1\2\10\uffff\5\4\2\uffff\1\21\21\uffff\1\1\1\uffff\1\1\30\uffff\1\3",
            "\1\2\10\uffff\5\4\2\uffff\1\21\21\uffff\1\1\1\uffff\1\1\30\uffff\1\3",
            "\1\24",
            "\1\11\1\10\1\14\1\uffff\1\15\1\12\1\2\10\uffff\5\4\7\uffff\1\16\14\uffff\1\1\1\uffff\1\1\13\uffff\1\6\7\uffff\1\13\4\uffff\1\3\1\7",
            "\1\11\1\10\1\14\1\uffff\1\15\1\12\1\2\10\uffff\5\4\7\uffff\1\16\14\uffff\1\1\1\uffff\1\1\23\uffff\1\13\4\uffff\1\3",
            "\1\26\1\25\1\31\1\uffff\1\32\1\27\70\uffff\1\30",
            "\1\33",
            "\1\34",
            "\1\37\31\uffff\1\35\15\uffff\1\36",
            "\1\2\10\uffff\5\4\2\uffff\1\21\21\uffff\1\1\1\uffff\1\1\30\uffff\1\3",
            "\1\2\10\uffff\5\4\2\uffff\1\21\21\uffff\1\1\1\uffff\1\1\13\uffff\1\40\14\uffff\1\3\1\41",
            "\1\2\10\uffff\5\4\2\uffff\1\21\21\uffff\1\1\1\uffff\1\1\30\uffff\1\3",
            "\1\31\1\uffff\1\32",
            "\1\2\10\uffff\5\4\2\uffff\1\21\21\uffff\1\1\1\uffff\1\1\30\uffff\1\3",
            "\1\2\10\uffff\5\4\2\uffff\1\21\21\uffff\1\1\1\uffff\1\1\30\uffff\1\3",
            "\1\2\10\uffff\5\4\2\uffff\1\21\21\uffff\1\1\1\uffff\1\1\13\uffff\1\22\14\uffff\1\3\1\23",
            "\1\2\10\uffff\5\4\2\uffff\1\21\21\uffff\1\1\1\uffff\1\1\30\uffff\1\3",
            "\1\42",
            "\1\43",
            "\1\45\1\44\1\50\1\uffff\1\51\1\46\70\uffff\1\47",
            "\1\52",
            "\1\53",
            "\1\37\31\uffff\1\35\15\uffff\1\36",
            "\1\37",
            "\1\2\10\uffff\5\4\2\uffff\1\54\21\uffff\1\1\1\uffff\1\1\30\uffff\1\3",
            "\1\2\10\uffff\5\4\2\uffff\1\54\21\uffff\1\1\1\uffff\1\1\13\uffff\1\55\14\uffff\1\3\1\56",
            "\1\2\10\uffff\5\4\2\uffff\1\54\21\uffff\1\1\1\uffff\1\1\30\uffff\1\3",
            "\1\50\1\uffff\1\51",
            "\1\2\10\uffff\5\4\2\uffff\1\54\21\uffff\1\1\1\uffff\1\1\30\uffff\1\3",
            "\1\2\10\uffff\5\4\2\uffff\1\54\21\uffff\1\1\1\uffff\1\1\30\uffff\1\3",
            "\1\2\10\uffff\5\4\2\uffff\1\21\21\uffff\1\1\1\uffff\1\1\13\uffff\1\40\14\uffff\1\3\1\41",
            "\1\2\10\uffff\5\4\2\uffff\1\21\21\uffff\1\1\1\uffff\1\1\30\uffff\1\3",
            "\1\60\1\57\1\63\1\uffff\1\64\1\61\70\uffff\1\62",
            "\1\65",
            "\1\66",
            "\1\2\10\uffff\5\4\2\uffff\1\54\21\uffff\1\1\1\uffff\1\1\30\uffff\1\3",
            "\1\2\10\uffff\5\4\2\uffff\1\54\21\uffff\1\1\1\uffff\1\1\13\uffff\1\67\14\uffff\1\3\1\70",
            "\1\2\10\uffff\5\4\2\uffff\1\54\21\uffff\1\1\1\uffff\1\1\30\uffff\1\3",
            "\1\63\1\uffff\1\64",
            "\1\2\10\uffff\5\4\2\uffff\1\54\21\uffff\1\1\1\uffff\1\1\30\uffff\1\3",
            "\1\2\10\uffff\5\4\2\uffff\1\54\21\uffff\1\1\1\uffff\1\1\30\uffff\1\3",
            "\1\2\10\uffff\5\4\2\uffff\1\54\21\uffff\1\1\1\uffff\1\1\13\uffff\1\55\14\uffff\1\3\1\56",
            "\1\2\10\uffff\5\4\2\uffff\1\54\21\uffff\1\1\1\uffff\1\1\30\uffff\1\3",
            "\1\71",
            "\1\72",
            "\1\2\10\uffff\5\4\2\uffff\1\54\21\uffff\1\1\1\uffff\1\1\13\uffff\1\67\14\uffff\1\3\1\70",
            "\1\2\10\uffff\5\4\2\uffff\1\54\21\uffff\1\1\1\uffff\1\1\30\uffff\1\3"
    };
    static final short[] dfa_48 = DFA.unpackEncodedString(dfa_48s);
    static final char[] dfa_49 = DFA.unpackEncodedStringToUnsignedChars(dfa_49s);
    static final char[] dfa_50 = DFA.unpackEncodedStringToUnsignedChars(dfa_50s);
    static final short[] dfa_51 = DFA.unpackEncodedString(dfa_51s);
    static final short[][] dfa_52 = unpackEncodedStringArray(dfa_52s);

    class DFA64 extends DFA {

        public DFA64(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 64;
            this.eot = dfa_39;
            this.eof = dfa_48;
            this.min = dfa_49;
            this.max = dfa_50;
            this.accept = dfa_51;
            this.special = dfa_43;
            this.transition = dfa_52;
        }
        public String getDescription() {
            return "()+ loopback of 1997:3: ( (lv_states_7_0= ruleState ) )+";
        }
    }
    static final String dfa_53s = "\3\4\2\uffff\2\4\1\6\4\4\1\6\4\4\1\40\2\4\1\6\1\4\1\6\4\4\1\6\4\4\2\40\3\4\1\6\3\4\1\6\3\4\1\6\6\4\1\6\6\4\1\6\7\4\1\0";
    static final String dfa_54s = "\2\156\1\4\2\uffff\1\156\1\4\1\6\1\4\3\156\1\10\4\156\1\110\1\102\1\4\1\6\1\4\1\6\1\102\3\156\1\10\4\156\1\110\1\40\3\156\1\10\2\156\1\4\1\6\1\4\1\102\1\4\1\6\6\156\1\10\4\156\2\4\1\6\3\156\1\4\1\156\1\4\1\156\1\0";
    static final String dfa_55s = "\3\uffff\1\2\1\1\77\uffff";
    static final String[] dfa_56s = {
            "\1\3\5\uffff\1\1\46\uffff\7\4\17\uffff\1\2\40\uffff\7\4",
            "\1\3\5\uffff\1\1\46\uffff\7\4\17\uffff\1\2\40\uffff\7\4",
            "\1\5",
            "",
            "",
            "\1\12\1\11\1\15\1\uffff\1\16\1\13\1\1\24\uffff\1\10\21\uffff\7\4\2\uffff\1\6\7\uffff\1\14\4\uffff\1\2\1\7\37\uffff\7\4",
            "\1\17",
            "\1\20",
            "\1\21",
            "\1\3\5\uffff\1\1\17\uffff\1\22\26\uffff\7\4\17\uffff\1\2\40\uffff\7\4",
            "\1\3\5\uffff\1\1\17\uffff\1\22\4\uffff\1\3\21\uffff\7\4\1\3\1\uffff\1\23\13\uffff\1\3\1\2\1\24\15\uffff\12\3\10\uffff\7\4",
            "\1\3\5\uffff\1\1\17\uffff\1\22\26\uffff\7\4\17\uffff\1\2\40\uffff\7\4",
            "\1\15\1\uffff\1\16",
            "\1\3\5\uffff\1\1\17\uffff\1\22\26\uffff\7\4\17\uffff\1\2\40\uffff\7\4",
            "\1\3\5\uffff\1\1\17\uffff\1\22\26\uffff\7\4\17\uffff\1\2\40\uffff\7\4",
            "\1\12\1\11\1\15\1\uffff\1\16\1\13\1\1\24\uffff\1\10\21\uffff\7\4\2\uffff\1\6\7\uffff\1\14\4\uffff\1\2\1\7\37\uffff\7\4",
            "\1\12\1\11\1\15\1\uffff\1\16\1\13\1\1\24\uffff\1\10\21\uffff\7\4\12\uffff\1\14\4\uffff\1\2\40\uffff\7\4",
            "\1\27\31\uffff\1\25\15\uffff\1\26",
            "\1\31\1\30\1\34\1\uffff\1\35\1\32\70\uffff\1\33",
            "\1\36",
            "\1\37",
            "\1\40",
            "\1\41",
            "\1\43\1\42\1\46\1\uffff\1\47\1\44\70\uffff\1\45",
            "\1\3\5\uffff\1\1\17\uffff\1\22\26\uffff\7\4\17\uffff\1\2\40\uffff\7\4",
            "\1\3\5\uffff\1\1\17\uffff\1\22\26\uffff\7\4\2\uffff\1\50\14\uffff\1\2\1\51\37\uffff\7\4",
            "\1\3\5\uffff\1\1\17\uffff\1\22\26\uffff\7\4\17\uffff\1\2\40\uffff\7\4",
            "\1\34\1\uffff\1\35",
            "\1\3\5\uffff\1\1\17\uffff\1\22\26\uffff\7\4\17\uffff\1\2\40\uffff\7\4",
            "\1\3\5\uffff\1\1\17\uffff\1\22\26\uffff\7\4\17\uffff\1\2\40\uffff\7\4",
            "\1\3\5\uffff\1\1\17\uffff\1\22\4\uffff\1\3\21\uffff\7\4\1\3\1\uffff\1\52\13\uffff\1\3\1\2\1\24\15\uffff\12\3\10\uffff\7\4",
            "\1\3\5\uffff\1\1\17\uffff\1\22\26\uffff\7\4\17\uffff\1\2\40\uffff\7\4",
            "\1\27\31\uffff\1\25\15\uffff\1\26",
            "\1\27",
            "\1\3\5\uffff\1\1\17\uffff\1\53\26\uffff\7\4\17\uffff\1\2\40\uffff\7\4",
            "\1\3\5\uffff\1\1\17\uffff\1\53\26\uffff\7\4\2\uffff\1\54\14\uffff\1\2\1\55\37\uffff\7\4",
            "\1\3\5\uffff\1\1\17\uffff\1\53\26\uffff\7\4\17\uffff\1\2\40\uffff\7\4",
            "\1\46\1\uffff\1\47",
            "\1\3\5\uffff\1\1\17\uffff\1\53\26\uffff\7\4\17\uffff\1\2\40\uffff\7\4",
            "\1\3\5\uffff\1\1\17\uffff\1\53\26\uffff\7\4\17\uffff\1\2\40\uffff\7\4",
            "\1\56",
            "\1\57",
            "\1\60",
            "\1\62\1\61\1\65\1\uffff\1\66\1\63\70\uffff\1\64",
            "\1\67",
            "\1\70",
            "\1\3\5\uffff\1\1\17\uffff\1\22\26\uffff\7\4\2\uffff\1\50\14\uffff\1\2\1\51\37\uffff\7\4",
            "\1\3\5\uffff\1\1\17\uffff\1\22\26\uffff\7\4\17\uffff\1\2\40\uffff\7\4",
            "\1\3\5\uffff\1\1\17\uffff\1\22\4\uffff\1\3\21\uffff\7\4\1\3\1\uffff\1\71\13\uffff\1\3\1\2\1\24\15\uffff\12\3\10\uffff\7\4",
            "\1\3\5\uffff\1\1\17\uffff\1\53\26\uffff\7\4\17\uffff\1\2\40\uffff\7\4",
            "\1\3\5\uffff\1\1\17\uffff\1\53\26\uffff\7\4\2\uffff\1\72\14\uffff\1\2\1\73\37\uffff\7\4",
            "\1\3\5\uffff\1\1\17\uffff\1\53\26\uffff\7\4\17\uffff\1\2\40\uffff\7\4",
            "\1\65\1\uffff\1\66",
            "\1\3\5\uffff\1\1\17\uffff\1\53\26\uffff\7\4\17\uffff\1\2\40\uffff\7\4",
            "\1\3\5\uffff\1\1\17\uffff\1\53\26\uffff\7\4\17\uffff\1\2\40\uffff\7\4",
            "\1\3\5\uffff\1\1\17\uffff\1\53\26\uffff\7\4\2\uffff\1\54\14\uffff\1\2\1\55\37\uffff\7\4",
            "\1\3\5\uffff\1\1\17\uffff\1\53\26\uffff\7\4\17\uffff\1\2\40\uffff\7\4",
            "\1\74",
            "\1\75",
            "\1\76",
            "\1\3\5\uffff\1\1\17\uffff\1\22\4\uffff\1\3\21\uffff\7\4\1\3\1\uffff\1\77\13\uffff\1\3\1\2\1\24\15\uffff\12\3\10\uffff\7\4",
            "\1\3\5\uffff\1\1\17\uffff\1\53\26\uffff\7\4\2\uffff\1\72\14\uffff\1\2\1\73\37\uffff\7\4",
            "\1\3\5\uffff\1\1\17\uffff\1\53\26\uffff\7\4\17\uffff\1\2\40\uffff\7\4",
            "\1\100",
            "\1\3\5\uffff\1\1\17\uffff\1\22\4\uffff\1\3\21\uffff\7\4\1\3\1\uffff\1\101\13\uffff\1\3\1\2\1\24\15\uffff\12\3\10\uffff\7\4",
            "\1\102",
            "\1\3\5\uffff\1\1\17\uffff\1\22\4\uffff\1\3\21\uffff\7\4\1\3\1\uffff\1\103\13\uffff\1\3\1\2\1\24\15\uffff\12\3\10\uffff\7\4",
            "\1\uffff"
    };
    static final char[] dfa_53 = DFA.unpackEncodedStringToUnsignedChars(dfa_53s);
    static final char[] dfa_54 = DFA.unpackEncodedStringToUnsignedChars(dfa_54s);
    static final short[] dfa_55 = DFA.unpackEncodedString(dfa_55s);
    static final short[][] dfa_56 = unpackEncodedStringArray(dfa_56s);

    class DFA68 extends DFA {

        public DFA68(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 68;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_53;
            this.max = dfa_54;
            this.accept = dfa_55;
            this.special = dfa_5;
            this.transition = dfa_56;
        }
        public String getDescription() {
            return "()* loopback of 2107:1: ( (lv_declarations_6_0= ruleDeclarationWOSemicolon ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA68_67 = input.LA(1);

                         
                        int index68_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_InternalSCTX()) ) {s = 4;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index68_67);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 68, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_57s = "\1\1\103\uffff";
    static final String dfa_58s = "\1\107\1\uffff\1\107\1\4\1\uffff\1\110\1\4\1\6\1\4\1\107\1\137\1\107\1\10\2\107\1\110\1\107\1\110\1\102\1\4\1\6\1\4\1\6\1\102\1\107\1\110\1\107\1\10\2\107\1\137\1\107\1\110\1\40\1\107\1\110\1\107\1\10\2\107\1\4\1\6\1\4\1\102\1\4\1\6\1\110\1\107\1\137\1\107\1\110\1\107\1\10\2\107\1\110\1\107\2\4\1\6\1\137\1\110\1\107\1\4\1\137\1\4\1\137\1\0";
    static final String[] dfa_59s = {
            "\1\4\5\uffff\1\2\7\uffff\1\1\31\uffff\1\1\1\uffff\1\1\30\uffff\1\3",
            "",
            "\1\4\5\uffff\1\2\41\uffff\1\1\1\uffff\1\1\30\uffff\1\3",
            "\1\5",
            "",
            "\1\12\1\11\1\15\1\uffff\1\16\1\13\1\2\24\uffff\1\10\14\uffff\1\1\1\uffff\1\1\13\uffff\1\6\7\uffff\1\14\4\uffff\1\3\1\7",
            "\1\17",
            "\1\20",
            "\1\21",
            "\1\4\5\uffff\1\2\17\uffff\1\22\21\uffff\1\1\1\uffff\1\1\30\uffff\1\3",
            "\1\4\5\uffff\1\2\17\uffff\1\22\4\uffff\1\4\14\uffff\1\1\1\uffff\1\1\11\uffff\1\4\1\uffff\1\23\13\uffff\1\4\1\3\1\24\15\uffff\12\4",
            "\1\4\5\uffff\1\2\17\uffff\1\22\21\uffff\1\1\1\uffff\1\1\30\uffff\1\3",
            "\1\15\1\uffff\1\16",
            "\1\4\5\uffff\1\2\17\uffff\1\22\21\uffff\1\1\1\uffff\1\1\30\uffff\1\3",
            "\1\4\5\uffff\1\2\17\uffff\1\22\21\uffff\1\1\1\uffff\1\1\30\uffff\1\3",
            "\1\12\1\11\1\15\1\uffff\1\16\1\13\1\2\24\uffff\1\10\14\uffff\1\1\1\uffff\1\1\13\uffff\1\6\7\uffff\1\14\4\uffff\1\3\1\7",
            "\1\12\1\11\1\15\1\uffff\1\16\1\13\1\2\24\uffff\1\10\14\uffff\1\1\1\uffff\1\1\23\uffff\1\14\4\uffff\1\3",
            "\1\27\31\uffff\1\25\15\uffff\1\26",
            "\1\31\1\30\1\34\1\uffff\1\35\1\32\70\uffff\1\33",
            "\1\36",
            "\1\37",
            "\1\40",
            "\1\41",
            "\1\43\1\42\1\46\1\uffff\1\47\1\44\70\uffff\1\45",
            "\1\4\5\uffff\1\2\17\uffff\1\22\21\uffff\1\1\1\uffff\1\1\30\uffff\1\3",
            "\1\4\5\uffff\1\2\17\uffff\1\22\21\uffff\1\1\1\uffff\1\1\13\uffff\1\50\14\uffff\1\3\1\51",
            "\1\4\5\uffff\1\2\17\uffff\1\22\21\uffff\1\1\1\uffff\1\1\30\uffff\1\3",
            "\1\34\1\uffff\1\35",
            "\1\4\5\uffff\1\2\17\uffff\1\22\21\uffff\1\1\1\uffff\1\1\30\uffff\1\3",
            "\1\4\5\uffff\1\2\17\uffff\1\22\21\uffff\1\1\1\uffff\1\1\30\uffff\1\3",
            "\1\4\5\uffff\1\2\17\uffff\1\22\4\uffff\1\4\14\uffff\1\1\1\uffff\1\1\11\uffff\1\4\1\uffff\1\52\13\uffff\1\4\1\3\1\24\15\uffff\12\4",
            "\1\4\5\uffff\1\2\17\uffff\1\22\21\uffff\1\1\1\uffff\1\1\30\uffff\1\3",
            "\1\27\31\uffff\1\25\15\uffff\1\26",
            "\1\27",
            "\1\4\5\uffff\1\2\17\uffff\1\53\21\uffff\1\1\1\uffff\1\1\30\uffff\1\3",
            "\1\4\5\uffff\1\2\17\uffff\1\53\21\uffff\1\1\1\uffff\1\1\13\uffff\1\54\14\uffff\1\3\1\55",
            "\1\4\5\uffff\1\2\17\uffff\1\53\21\uffff\1\1\1\uffff\1\1\30\uffff\1\3",
            "\1\46\1\uffff\1\47",
            "\1\4\5\uffff\1\2\17\uffff\1\53\21\uffff\1\1\1\uffff\1\1\30\uffff\1\3",
            "\1\4\5\uffff\1\2\17\uffff\1\53\21\uffff\1\1\1\uffff\1\1\30\uffff\1\3",
            "\1\56",
            "\1\57",
            "\1\60",
            "\1\62\1\61\1\65\1\uffff\1\66\1\63\70\uffff\1\64",
            "\1\67",
            "\1\70",
            "\1\4\5\uffff\1\2\17\uffff\1\22\21\uffff\1\1\1\uffff\1\1\13\uffff\1\50\14\uffff\1\3\1\51",
            "\1\4\5\uffff\1\2\17\uffff\1\22\21\uffff\1\1\1\uffff\1\1\30\uffff\1\3",
            "\1\4\5\uffff\1\2\17\uffff\1\22\4\uffff\1\4\14\uffff\1\1\1\uffff\1\1\11\uffff\1\4\1\uffff\1\71\13\uffff\1\4\1\3\1\24\15\uffff\12\4",
            "\1\4\5\uffff\1\2\17\uffff\1\53\21\uffff\1\1\1\uffff\1\1\30\uffff\1\3",
            "\1\4\5\uffff\1\2\17\uffff\1\53\21\uffff\1\1\1\uffff\1\1\13\uffff\1\72\14\uffff\1\3\1\73",
            "\1\4\5\uffff\1\2\17\uffff\1\53\21\uffff\1\1\1\uffff\1\1\30\uffff\1\3",
            "\1\65\1\uffff\1\66",
            "\1\4\5\uffff\1\2\17\uffff\1\53\21\uffff\1\1\1\uffff\1\1\30\uffff\1\3",
            "\1\4\5\uffff\1\2\17\uffff\1\53\21\uffff\1\1\1\uffff\1\1\30\uffff\1\3",
            "\1\4\5\uffff\1\2\17\uffff\1\53\21\uffff\1\1\1\uffff\1\1\13\uffff\1\54\14\uffff\1\3\1\55",
            "\1\4\5\uffff\1\2\17\uffff\1\53\21\uffff\1\1\1\uffff\1\1\30\uffff\1\3",
            "\1\74",
            "\1\75",
            "\1\76",
            "\1\4\5\uffff\1\2\17\uffff\1\22\4\uffff\1\4\14\uffff\1\1\1\uffff\1\1\11\uffff\1\4\1\uffff\1\77\13\uffff\1\4\1\3\1\24\15\uffff\12\4",
            "\1\4\5\uffff\1\2\17\uffff\1\53\21\uffff\1\1\1\uffff\1\1\13\uffff\1\72\14\uffff\1\3\1\73",
            "\1\4\5\uffff\1\2\17\uffff\1\53\21\uffff\1\1\1\uffff\1\1\30\uffff\1\3",
            "\1\100",
            "\1\4\5\uffff\1\2\17\uffff\1\22\4\uffff\1\4\14\uffff\1\1\1\uffff\1\1\11\uffff\1\4\1\uffff\1\101\13\uffff\1\4\1\3\1\24\15\uffff\12\4",
            "\1\102",
            "\1\4\5\uffff\1\2\17\uffff\1\22\4\uffff\1\4\14\uffff\1\1\1\uffff\1\1\11\uffff\1\4\1\uffff\1\103\13\uffff\1\4\1\3\1\24\15\uffff\12\4",
            "\1\uffff"
    };
    static final short[] dfa_57 = DFA.unpackEncodedString(dfa_57s);
    static final char[] dfa_58 = DFA.unpackEncodedStringToUnsignedChars(dfa_58s);
    static final short[][] dfa_59 = unpackEncodedStringArray(dfa_59s);

    class DFA69 extends DFA {

        public DFA69(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 69;
            this.eot = dfa_1;
            this.eof = dfa_57;
            this.min = dfa_2;
            this.max = dfa_58;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_59;
        }
        public String getDescription() {
            return "()+ loopback of 2125:3: ( (lv_equations_7_0= ruleEquation ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA69_67 = input.LA(1);

                         
                        int index69_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalSCTX()) ) {s = 4;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index69_67);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 69, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_60s = "\121\uffff";
    static final String dfa_61s = "\1\3\11\uffff\1\3\106\uffff";
    static final String dfa_62s = "\3\4\1\uffff\1\4\1\uffff\2\4\1\6\3\4\1\6\7\4\1\6\3\4\1\40\3\4\1\6\7\4\1\6\2\4\1\6\1\4\1\6\3\4\2\40\3\4\1\6\6\4\1\40\2\4\1\6\2\4\1\6\4\4\1\6\5\4\2\40\2\4\1\6\2\4";
    static final String dfa_63s = "\2\156\1\4\1\uffff\1\5\1\uffff\1\156\1\4\1\6\3\156\1\10\2\156\1\4\2\156\1\102\1\4\1\6\1\102\1\156\1\4\1\110\3\156\1\10\6\156\1\4\1\6\1\102\1\4\1\6\1\4\1\6\2\156\1\4\1\110\1\40\3\156\1\10\6\156\1\110\1\102\1\4\1\6\1\102\1\4\1\6\1\102\3\156\1\10\5\156\1\110\1\40\1\156\1\4\1\6\2\156";
    static final String dfa_64s = "\3\uffff\1\2\1\uffff\1\1\113\uffff";
    static final String dfa_65s = "\121\uffff}>";
    static final String[] dfa_66s = {
            "\1\3\2\uffff\1\3\2\uffff\1\1\44\uffff\2\3\6\5\1\4\4\uffff\1\3\12\uffff\1\2\40\uffff\7\5",
            "\1\3\2\uffff\1\3\2\uffff\1\1\45\uffff\1\3\6\5\1\4\17\uffff\1\2\40\uffff\7\5",
            "\1\6",
            "",
            "\1\3\1\5",
            "",
            "\1\12\1\11\1\15\1\3\1\16\1\13\1\1\24\uffff\1\17\20\uffff\1\3\6\5\1\4\2\uffff\1\7\7\uffff\1\14\4\uffff\1\2\1\10\37\uffff\7\5",
            "\1\20",
            "\1\21",
            "\1\3\2\uffff\1\3\2\uffff\1\1\17\uffff\1\22\25\uffff\1\3\6\5\1\4\17\uffff\1\2\40\uffff\7\5",
            "\1\3\2\uffff\1\3\2\uffff\1\1\16\uffff\1\3\1\25\4\uffff\1\3\17\uffff\2\3\6\5\1\4\1\3\1\uffff\1\23\2\3\11\uffff\1\3\1\2\1\24\15\uffff\14\3\6\uffff\7\5",
            "\1\3\2\uffff\1\3\2\uffff\1\26\17\uffff\1\25\25\uffff\1\3\6\5\1\4\17\uffff\1\27\40\uffff\7\5",
            "\1\15\1\uffff\1\16",
            "\1\3\2\uffff\1\3\2\uffff\1\26\17\uffff\1\25\25\uffff\1\3\6\5\1\4\17\uffff\1\27\40\uffff\7\5",
            "\1\3\2\uffff\1\3\2\uffff\1\26\17\uffff\1\25\25\uffff\1\3\6\5\1\4\17\uffff\1\27\40\uffff\7\5",
            "\1\30",
            "\1\12\1\11\1\15\1\3\1\16\1\13\1\1\24\uffff\1\17\20\uffff\1\3\6\5\1\4\2\uffff\1\7\7\uffff\1\14\4\uffff\1\2\1\10\37\uffff\7\5",
            "\1\12\1\11\1\15\1\3\1\16\1\13\1\1\24\uffff\1\17\20\uffff\1\3\6\5\1\4\12\uffff\1\14\4\uffff\1\2\40\uffff\7\5",
            "\1\32\1\31\1\35\1\uffff\1\36\1\33\70\uffff\1\34",
            "\1\37",
            "\1\40",
            "\1\32\1\41\1\35\1\uffff\1\36\1\33\70\uffff\1\34",
            "\1\3\2\uffff\1\3\2\uffff\1\26\45\uffff\1\3\6\5\1\4\17\uffff\1\27\40\uffff\7\5",
            "\1\42",
            "\1\45\31\uffff\1\43\15\uffff\1\44",
            "\1\3\2\uffff\1\3\2\uffff\1\1\17\uffff\1\22\25\uffff\1\3\6\5\1\4\17\uffff\1\2\40\uffff\7\5",
            "\1\3\2\uffff\1\3\2\uffff\1\26\17\uffff\1\25\25\uffff\1\3\6\5\1\4\2\uffff\1\46\14\uffff\1\27\1\47\37\uffff\7\5",
            "\1\3\2\uffff\1\3\2\uffff\1\26\17\uffff\1\25\25\uffff\1\3\6\5\1\4\17\uffff\1\27\40\uffff\7\5",
            "\1\35\1\uffff\1\36",
            "\1\3\2\uffff\1\3\2\uffff\1\26\17\uffff\1\25\25\uffff\1\3\6\5\1\4\17\uffff\1\27\40\uffff\7\5",
            "\1\3\2\uffff\1\3\2\uffff\1\26\17\uffff\1\25\25\uffff\1\3\6\5\1\4\17\uffff\1\27\40\uffff\7\5",
            "\1\3\2\uffff\1\3\2\uffff\1\26\17\uffff\1\25\25\uffff\1\3\6\5\1\4\2\uffff\1\23\14\uffff\1\27\1\24\37\uffff\7\5",
            "\1\3\2\uffff\1\3\2\uffff\1\26\17\uffff\1\25\25\uffff\1\3\6\5\1\4\17\uffff\1\27\40\uffff\7\5",
            "\1\3\2\uffff\1\3\2\uffff\1\26\17\uffff\1\25\25\uffff\1\3\6\5\1\4\17\uffff\1\27\40\uffff\7\5",
            "\1\53\1\52\1\15\1\3\1\16\1\13\1\26\24\uffff\1\54\20\uffff\1\3\6\5\1\4\2\uffff\1\50\7\uffff\1\14\4\uffff\1\27\1\51\37\uffff\7\5",
            "\1\55",
            "\1\56",
            "\1\60\1\57\1\63\1\uffff\1\64\1\61\70\uffff\1\62",
            "\1\65",
            "\1\66",
            "\1\67",
            "\1\70",
            "\1\3\2\uffff\1\3\2\uffff\1\26\17\uffff\1\25\25\uffff\1\3\6\5\1\4\17\uffff\1\27\40\uffff\7\5",
            "\1\3\2\uffff\1\3\2\uffff\1\26\16\uffff\1\3\1\25\4\uffff\1\3\20\uffff\1\3\6\5\1\4\1\3\1\uffff\1\23\1\3\12\uffff\1\3\1\27\1\24\15\uffff\14\3\6\uffff\7\5",
            "\1\71",
            "\1\45\31\uffff\1\43\15\uffff\1\44",
            "\1\45",
            "\1\3\2\uffff\1\3\2\uffff\1\1\17\uffff\1\72\25\uffff\1\3\6\5\1\4\17\uffff\1\2\40\uffff\7\5",
            "\1\3\2\uffff\1\3\2\uffff\1\26\17\uffff\1\75\25\uffff\1\3\6\5\1\4\2\uffff\1\73\14\uffff\1\27\1\74\37\uffff\7\5",
            "\1\3\2\uffff\1\3\2\uffff\1\26\17\uffff\1\75\25\uffff\1\3\6\5\1\4\17\uffff\1\27\40\uffff\7\5",
            "\1\63\1\uffff\1\64",
            "\1\3\2\uffff\1\3\2\uffff\1\26\17\uffff\1\75\25\uffff\1\3\6\5\1\4\17\uffff\1\27\40\uffff\7\5",
            "\1\3\2\uffff\1\3\2\uffff\1\26\17\uffff\1\75\25\uffff\1\3\6\5\1\4\17\uffff\1\27\40\uffff\7\5",
            "\1\3\2\uffff\1\3\2\uffff\1\26\17\uffff\1\25\25\uffff\1\3\6\5\1\4\2\uffff\1\46\14\uffff\1\27\1\47\37\uffff\7\5",
            "\1\3\2\uffff\1\3\2\uffff\1\26\17\uffff\1\25\25\uffff\1\3\6\5\1\4\17\uffff\1\27\40\uffff\7\5",
            "\1\53\1\52\1\15\1\3\1\16\1\13\1\26\24\uffff\1\54\20\uffff\1\3\6\5\1\4\2\uffff\1\50\7\uffff\1\14\4\uffff\1\27\1\51\37\uffff\7\5",
            "\1\53\1\52\1\15\1\3\1\16\1\13\1\26\24\uffff\1\54\20\uffff\1\3\6\5\1\4\12\uffff\1\14\4\uffff\1\27\40\uffff\7\5",
            "\1\100\31\uffff\1\76\15\uffff\1\77",
            "\1\102\1\101\1\105\1\uffff\1\106\1\103\70\uffff\1\104",
            "\1\107",
            "\1\110",
            "\1\102\1\111\1\105\1\uffff\1\106\1\103\70\uffff\1\104",
            "\1\112",
            "\1\113",
            "\1\60\1\114\1\63\1\uffff\1\64\1\61\70\uffff\1\62",
            "\1\3\2\uffff\1\3\2\uffff\1\1\17\uffff\1\72\25\uffff\1\3\6\5\1\4\17\uffff\1\2\40\uffff\7\5",
            "\1\3\2\uffff\1\3\2\uffff\1\26\17\uffff\1\75\25\uffff\1\3\6\5\1\4\2\uffff\1\115\14\uffff\1\27\1\116\37\uffff\7\5",
            "\1\3\2\uffff\1\3\2\uffff\1\26\17\uffff\1\75\25\uffff\1\3\6\5\1\4\17\uffff\1\27\40\uffff\7\5",
            "\1\105\1\uffff\1\106",
            "\1\3\2\uffff\1\3\2\uffff\1\26\17\uffff\1\75\25\uffff\1\3\6\5\1\4\17\uffff\1\27\40\uffff\7\5",
            "\1\3\2\uffff\1\3\2\uffff\1\26\17\uffff\1\75\25\uffff\1\3\6\5\1\4\17\uffff\1\27\40\uffff\7\5",
            "\1\3\2\uffff\1\3\2\uffff\1\26\17\uffff\1\75\25\uffff\1\3\6\5\1\4\2\uffff\1\73\14\uffff\1\27\1\74\37\uffff\7\5",
            "\1\3\2\uffff\1\3\2\uffff\1\26\17\uffff\1\75\25\uffff\1\3\6\5\1\4\17\uffff\1\27\40\uffff\7\5",
            "\1\3\2\uffff\1\3\2\uffff\1\26\17\uffff\1\75\25\uffff\1\3\6\5\1\4\17\uffff\1\27\40\uffff\7\5",
            "\1\100\31\uffff\1\76\15\uffff\1\77",
            "\1\100",
            "\1\3\2\uffff\1\3\2\uffff\1\26\17\uffff\1\75\25\uffff\1\3\6\5\1\4\17\uffff\1\27\40\uffff\7\5",
            "\1\117",
            "\1\120",
            "\1\3\2\uffff\1\3\2\uffff\1\26\17\uffff\1\75\25\uffff\1\3\6\5\1\4\2\uffff\1\115\14\uffff\1\27\1\116\37\uffff\7\5",
            "\1\3\2\uffff\1\3\2\uffff\1\26\17\uffff\1\75\25\uffff\1\3\6\5\1\4\17\uffff\1\27\40\uffff\7\5"
    };

    static final short[] dfa_60 = DFA.unpackEncodedString(dfa_60s);
    static final short[] dfa_61 = DFA.unpackEncodedString(dfa_61s);
    static final char[] dfa_62 = DFA.unpackEncodedStringToUnsignedChars(dfa_62s);
    static final char[] dfa_63 = DFA.unpackEncodedStringToUnsignedChars(dfa_63s);
    static final short[] dfa_64 = DFA.unpackEncodedString(dfa_64s);
    static final short[] dfa_65 = DFA.unpackEncodedString(dfa_65s);
    static final short[][] dfa_66 = unpackEncodedStringArray(dfa_66s);

    class DFA70 extends DFA {

        public DFA70(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 70;
            this.eot = dfa_60;
            this.eof = dfa_61;
            this.min = dfa_62;
            this.max = dfa_63;
            this.accept = dfa_64;
            this.special = dfa_65;
            this.transition = dfa_66;
        }
        public String getDescription() {
            return "()* loopback of 2210:2: ( (lv_declarations_1_0= ruleDeclaration ) )*";
        }
    }
    static final String dfa_67s = "\3\4\1\uffff\1\4\1\uffff\2\4\1\6\4\4\1\6\4\4\1\40\2\4\1\6\4\4\1\6\4\4\1\6\6\4\2\40\3\4\1\6\3\4\1\6\1\4\1\6\5\4\1\6\5\4\1\40\3\4\1\6\6\4\1\6\2\4\1\6\2\40\3\4";
    static final String dfa_68s = "\2\156\1\4\1\uffff\1\5\1\uffff\1\156\1\4\1\6\1\4\3\156\1\10\4\156\1\110\1\102\1\4\1\6\1\102\1\156\2\4\1\6\1\102\3\156\1\10\6\156\1\110\1\40\3\156\1\10\2\156\1\4\1\6\1\4\1\6\1\4\2\156\1\102\1\4\1\6\1\102\4\156\1\110\3\156\1\10\5\156\1\4\1\6\1\102\1\4\1\6\1\110\1\40\3\156";
    static final String[] dfa_69s = {
            "\1\3\2\uffff\1\3\2\uffff\1\1\7\uffff\1\3\34\uffff\2\3\6\5\1\4\4\uffff\1\3\12\uffff\1\2\40\uffff\7\5",
            "\1\3\2\uffff\1\3\2\uffff\1\1\45\uffff\1\3\6\5\1\4\17\uffff\1\2\40\uffff\7\5",
            "\1\6",
            "",
            "\1\3\1\5",
            "",
            "\1\13\1\12\1\16\1\3\1\17\1\14\1\1\24\uffff\1\11\20\uffff\1\3\6\5\1\4\2\uffff\1\7\7\uffff\1\15\4\uffff\1\2\1\10\37\uffff\7\5",
            "\1\20",
            "\1\21",
            "\1\22",
            "\1\3\2\uffff\1\3\2\uffff\1\1\17\uffff\1\23\25\uffff\1\3\6\5\1\4\17\uffff\1\2\40\uffff\7\5",
            "\1\3\2\uffff\1\3\2\uffff\1\1\7\uffff\1\3\6\uffff\1\3\1\26\4\uffff\1\3\17\uffff\2\3\6\5\1\4\1\3\1\uffff\1\24\2\3\11\uffff\1\3\1\2\1\25\15\uffff\14\3\6\uffff\7\5",
            "\1\3\2\uffff\1\3\2\uffff\1\27\17\uffff\1\26\25\uffff\1\3\6\5\1\4\17\uffff\1\30\40\uffff\7\5",
            "\1\16\1\uffff\1\17",
            "\1\3\2\uffff\1\3\2\uffff\1\27\17\uffff\1\26\25\uffff\1\3\6\5\1\4\17\uffff\1\30\40\uffff\7\5",
            "\1\3\2\uffff\1\3\2\uffff\1\27\17\uffff\1\26\25\uffff\1\3\6\5\1\4\17\uffff\1\30\40\uffff\7\5",
            "\1\13\1\12\1\16\1\3\1\17\1\14\1\1\24\uffff\1\11\20\uffff\1\3\6\5\1\4\2\uffff\1\7\7\uffff\1\15\4\uffff\1\2\1\10\37\uffff\7\5",
            "\1\13\1\12\1\16\1\3\1\17\1\14\1\1\24\uffff\1\11\20\uffff\1\3\6\5\1\4\12\uffff\1\15\4\uffff\1\2\40\uffff\7\5",
            "\1\33\31\uffff\1\31\15\uffff\1\32",
            "\1\35\1\34\1\40\1\uffff\1\41\1\36\70\uffff\1\37",
            "\1\42",
            "\1\43",
            "\1\35\1\44\1\40\1\uffff\1\41\1\36\70\uffff\1\37",
            "\1\3\2\uffff\1\3\2\uffff\1\27\45\uffff\1\3\6\5\1\4\17\uffff\1\30\40\uffff\7\5",
            "\1\45",
            "\1\46",
            "\1\47",
            "\1\51\1\50\1\54\1\uffff\1\55\1\52\70\uffff\1\53",
            "\1\3\2\uffff\1\3\2\uffff\1\1\17\uffff\1\23\25\uffff\1\3\6\5\1\4\17\uffff\1\2\40\uffff\7\5",
            "\1\3\2\uffff\1\3\2\uffff\1\27\17\uffff\1\26\25\uffff\1\3\6\5\1\4\2\uffff\1\56\14\uffff\1\30\1\57\37\uffff\7\5",
            "\1\3\2\uffff\1\3\2\uffff\1\27\17\uffff\1\26\25\uffff\1\3\6\5\1\4\17\uffff\1\30\40\uffff\7\5",
            "\1\40\1\uffff\1\41",
            "\1\3\2\uffff\1\3\2\uffff\1\27\17\uffff\1\26\25\uffff\1\3\6\5\1\4\17\uffff\1\30\40\uffff\7\5",
            "\1\3\2\uffff\1\3\2\uffff\1\27\17\uffff\1\26\25\uffff\1\3\6\5\1\4\17\uffff\1\30\40\uffff\7\5",
            "\1\3\2\uffff\1\3\2\uffff\1\27\17\uffff\1\26\25\uffff\1\3\6\5\1\4\2\uffff\1\24\14\uffff\1\30\1\25\37\uffff\7\5",
            "\1\3\2\uffff\1\3\2\uffff\1\27\17\uffff\1\26\25\uffff\1\3\6\5\1\4\17\uffff\1\30\40\uffff\7\5",
            "\1\3\2\uffff\1\3\2\uffff\1\27\17\uffff\1\26\25\uffff\1\3\6\5\1\4\17\uffff\1\30\40\uffff\7\5",
            "\1\64\1\63\1\16\1\3\1\17\1\14\1\27\24\uffff\1\62\20\uffff\1\3\6\5\1\4\2\uffff\1\60\7\uffff\1\15\4\uffff\1\30\1\61\37\uffff\7\5",
            "\1\33\31\uffff\1\31\15\uffff\1\32",
            "\1\33",
            "\1\3\2\uffff\1\3\2\uffff\1\1\17\uffff\1\65\25\uffff\1\3\6\5\1\4\17\uffff\1\2\40\uffff\7\5",
            "\1\3\2\uffff\1\3\2\uffff\1\27\17\uffff\1\70\25\uffff\1\3\6\5\1\4\2\uffff\1\66\14\uffff\1\30\1\67\37\uffff\7\5",
            "\1\3\2\uffff\1\3\2\uffff\1\27\17\uffff\1\70\25\uffff\1\3\6\5\1\4\17\uffff\1\30\40\uffff\7\5",
            "\1\54\1\uffff\1\55",
            "\1\3\2\uffff\1\3\2\uffff\1\27\17\uffff\1\70\25\uffff\1\3\6\5\1\4\17\uffff\1\30\40\uffff\7\5",
            "\1\3\2\uffff\1\3\2\uffff\1\27\17\uffff\1\70\25\uffff\1\3\6\5\1\4\17\uffff\1\30\40\uffff\7\5",
            "\1\71",
            "\1\72",
            "\1\73",
            "\1\74",
            "\1\75",
            "\1\3\2\uffff\1\3\2\uffff\1\27\17\uffff\1\26\25\uffff\1\3\6\5\1\4\17\uffff\1\30\40\uffff\7\5",
            "\1\3\2\uffff\1\3\2\uffff\1\27\16\uffff\1\3\1\26\4\uffff\1\3\20\uffff\1\3\6\5\1\4\1\3\1\uffff\1\24\1\3\12\uffff\1\3\1\30\1\25\15\uffff\14\3\6\uffff\7\5",
            "\1\77\1\76\1\102\1\uffff\1\103\1\100\70\uffff\1\101",
            "\1\104",
            "\1\105",
            "\1\77\1\106\1\102\1\uffff\1\103\1\100\70\uffff\1\101",
            "\1\3\2\uffff\1\3\2\uffff\1\27\17\uffff\1\26\25\uffff\1\3\6\5\1\4\2\uffff\1\56\14\uffff\1\30\1\57\37\uffff\7\5",
            "\1\3\2\uffff\1\3\2\uffff\1\27\17\uffff\1\26\25\uffff\1\3\6\5\1\4\17\uffff\1\30\40\uffff\7\5",
            "\1\64\1\63\1\16\1\3\1\17\1\14\1\27\24\uffff\1\62\20\uffff\1\3\6\5\1\4\2\uffff\1\60\7\uffff\1\15\4\uffff\1\30\1\61\37\uffff\7\5",
            "\1\64\1\63\1\16\1\3\1\17\1\14\1\27\24\uffff\1\62\20\uffff\1\3\6\5\1\4\12\uffff\1\15\4\uffff\1\30\40\uffff\7\5",
            "\1\111\31\uffff\1\107\15\uffff\1\110",
            "\1\3\2\uffff\1\3\2\uffff\1\1\17\uffff\1\65\25\uffff\1\3\6\5\1\4\17\uffff\1\2\40\uffff\7\5",
            "\1\3\2\uffff\1\3\2\uffff\1\27\17\uffff\1\70\25\uffff\1\3\6\5\1\4\2\uffff\1\112\14\uffff\1\30\1\113\37\uffff\7\5",
            "\1\3\2\uffff\1\3\2\uffff\1\27\17\uffff\1\70\25\uffff\1\3\6\5\1\4\17\uffff\1\30\40\uffff\7\5",
            "\1\102\1\uffff\1\103",
            "\1\3\2\uffff\1\3\2\uffff\1\27\17\uffff\1\70\25\uffff\1\3\6\5\1\4\17\uffff\1\30\40\uffff\7\5",
            "\1\3\2\uffff\1\3\2\uffff\1\27\17\uffff\1\70\25\uffff\1\3\6\5\1\4\17\uffff\1\30\40\uffff\7\5",
            "\1\3\2\uffff\1\3\2\uffff\1\27\17\uffff\1\70\25\uffff\1\3\6\5\1\4\2\uffff\1\66\14\uffff\1\30\1\67\37\uffff\7\5",
            "\1\3\2\uffff\1\3\2\uffff\1\27\17\uffff\1\70\25\uffff\1\3\6\5\1\4\17\uffff\1\30\40\uffff\7\5",
            "\1\3\2\uffff\1\3\2\uffff\1\27\17\uffff\1\70\25\uffff\1\3\6\5\1\4\17\uffff\1\30\40\uffff\7\5",
            "\1\114",
            "\1\115",
            "\1\51\1\116\1\54\1\uffff\1\55\1\52\70\uffff\1\53",
            "\1\117",
            "\1\120",
            "\1\111\31\uffff\1\107\15\uffff\1\110",
            "\1\111",
            "\1\3\2\uffff\1\3\2\uffff\1\27\17\uffff\1\70\25\uffff\1\3\6\5\1\4\17\uffff\1\30\40\uffff\7\5",
            "\1\3\2\uffff\1\3\2\uffff\1\27\17\uffff\1\70\25\uffff\1\3\6\5\1\4\2\uffff\1\112\14\uffff\1\30\1\113\37\uffff\7\5",
            "\1\3\2\uffff\1\3\2\uffff\1\27\17\uffff\1\70\25\uffff\1\3\6\5\1\4\17\uffff\1\30\40\uffff\7\5"
    };
    static final char[] dfa_67 = DFA.unpackEncodedStringToUnsignedChars(dfa_67s);
    static final char[] dfa_68 = DFA.unpackEncodedStringToUnsignedChars(dfa_68s);
    static final short[][] dfa_69 = unpackEncodedStringArray(dfa_69s);

    class DFA74 extends DFA {

        public DFA74(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 74;
            this.eot = dfa_60;
            this.eof = dfa_60;
            this.min = dfa_67;
            this.max = dfa_68;
            this.accept = dfa_64;
            this.special = dfa_65;
            this.transition = dfa_69;
        }
        public String getDescription() {
            return "()* loopback of 2320:1: ( (lv_declarations_3_0= ruleDeclaration ) )*";
        }
    }
    static final String dfa_70s = "\120\uffff";
    static final String dfa_71s = "\3\4\2\uffff\2\4\1\6\1\4\1\0\1\4\1\6\11\4\1\40\3\4\1\6\5\4\1\6\2\4\1\6\1\4\1\6\3\4\2\40\3\4\1\6\7\4\1\6\1\40\2\4\1\6\4\4\1\6\4\4\1\6\5\4\2\40\2\4\1\6\2\4";
    static final String dfa_72s = "\2\107\1\4\2\uffff\1\110\1\4\1\6\1\107\1\0\1\107\1\10\2\107\1\4\1\110\1\107\2\102\1\107\1\4\1\110\1\107\1\110\1\107\1\10\3\107\1\110\1\4\1\6\1\102\1\4\1\6\1\4\1\6\1\107\1\141\1\4\1\110\1\40\1\107\1\110\1\107\1\10\2\107\1\110\1\107\1\110\1\107\1\4\1\6\1\110\1\102\1\4\1\6\1\102\1\110\1\107\1\4\1\6\1\102\1\107\1\110\1\107\1\10\2\107\1\110\2\107\1\110\1\40\1\107\1\4\1\6\1\110\1\107";
    static final String dfa_73s = "\3\uffff\1\1\1\2\113\uffff";
    static final String dfa_74s = "\11\uffff\1\0\106\uffff}>";
    static final String[] dfa_75s = {
            "\1\4\2\uffff\1\4\2\uffff\1\1\45\uffff\1\3\6\uffff\1\4\4\uffff\1\4\12\uffff\1\2",
            "\1\4\2\uffff\1\4\2\uffff\1\1\45\uffff\1\3\6\uffff\1\4\17\uffff\1\2",
            "\1\5",
            "",
            "",
            "\1\11\1\10\1\14\1\4\1\15\1\12\1\1\24\uffff\1\16\20\uffff\1\3\6\uffff\1\4\2\uffff\1\6\7\uffff\1\13\4\uffff\1\2\1\7",
            "\1\17",
            "\1\20",
            "\1\4\2\uffff\1\4\2\uffff\1\1\17\uffff\1\21\25\uffff\1\3\6\uffff\1\4\17\uffff\1\2",
            "\1\uffff",
            "\1\4\2\uffff\1\4\2\uffff\1\23\17\uffff\1\22\25\uffff\1\3\6\uffff\1\4\17\uffff\1\24",
            "\1\14\1\uffff\1\15",
            "\1\4\2\uffff\1\4\2\uffff\1\23\17\uffff\1\22\25\uffff\1\3\6\uffff\1\4\17\uffff\1\24",
            "\1\4\2\uffff\1\4\2\uffff\1\23\17\uffff\1\22\25\uffff\1\3\6\uffff\1\4\17\uffff\1\24",
            "\1\25",
            "\1\11\1\10\1\14\1\4\1\15\1\12\1\1\24\uffff\1\16\20\uffff\1\3\6\uffff\1\4\2\uffff\1\6\7\uffff\1\13\4\uffff\1\2\1\7",
            "\1\11\1\10\1\14\1\4\1\15\1\12\1\1\24\uffff\1\16\20\uffff\1\3\6\uffff\1\4\12\uffff\1\13\4\uffff\1\2",
            "\1\27\1\26\1\32\1\uffff\1\33\1\30\70\uffff\1\31",
            "\1\27\1\34\1\32\1\uffff\1\33\1\30\70\uffff\1\31",
            "\1\4\2\uffff\1\4\2\uffff\1\23\45\uffff\1\3\6\uffff\1\4\17\uffff\1\24",
            "\1\35",
            "\1\40\31\uffff\1\36\15\uffff\1\37",
            "\1\4\2\uffff\1\4\2\uffff\1\1\17\uffff\1\21\25\uffff\1\3\6\uffff\1\4\17\uffff\1\2",
            "\1\4\2\uffff\1\4\2\uffff\1\23\17\uffff\1\22\25\uffff\1\3\6\uffff\1\4\2\uffff\1\41\14\uffff\1\24\1\42",
            "\1\4\2\uffff\1\4\2\uffff\1\23\17\uffff\1\22\25\uffff\1\3\6\uffff\1\4\17\uffff\1\24",
            "\1\32\1\uffff\1\33",
            "\1\4\2\uffff\1\4\2\uffff\1\23\17\uffff\1\22\25\uffff\1\3\6\uffff\1\4\17\uffff\1\24",
            "\1\4\2\uffff\1\4\2\uffff\1\23\17\uffff\1\22\25\uffff\1\3\6\uffff\1\4\17\uffff\1\24",
            "\1\4\2\uffff\1\4\2\uffff\1\23\17\uffff\1\22\25\uffff\1\3\6\uffff\1\4\17\uffff\1\24",
            "\1\46\1\45\1\14\1\4\1\15\1\12\1\23\24\uffff\1\47\20\uffff\1\3\6\uffff\1\4\2\uffff\1\43\7\uffff\1\13\4\uffff\1\24\1\44",
            "\1\50",
            "\1\51",
            "\1\53\1\52\1\56\1\uffff\1\57\1\54\70\uffff\1\55",
            "\1\60",
            "\1\61",
            "\1\62",
            "\1\63",
            "\1\4\2\uffff\1\4\2\uffff\1\23\17\uffff\1\22\25\uffff\1\3\6\uffff\1\4\17\uffff\1\24",
            "\1\4\2\uffff\1\4\2\uffff\1\23\16\uffff\1\4\1\22\4\uffff\1\4\20\uffff\1\3\6\uffff\2\4\1\uffff\1\64\1\4\12\uffff\1\4\1\24\1\65\15\uffff\14\4",
            "\1\66",
            "\1\40\31\uffff\1\36\15\uffff\1\37",
            "\1\40",
            "\1\4\2\uffff\1\4\2\uffff\1\1\17\uffff\1\67\25\uffff\1\3\6\uffff\1\4\17\uffff\1\2",
            "\1\4\2\uffff\1\4\2\uffff\1\23\17\uffff\1\72\25\uffff\1\3\6\uffff\1\4\2\uffff\1\70\14\uffff\1\24\1\71",
            "\1\4\2\uffff\1\4\2\uffff\1\23\17\uffff\1\72\25\uffff\1\3\6\uffff\1\4\17\uffff\1\24",
            "\1\56\1\uffff\1\57",
            "\1\4\2\uffff\1\4\2\uffff\1\23\17\uffff\1\72\25\uffff\1\3\6\uffff\1\4\17\uffff\1\24",
            "\1\4\2\uffff\1\4\2\uffff\1\23\17\uffff\1\72\25\uffff\1\3\6\uffff\1\4\17\uffff\1\24",
            "\1\4\2\uffff\1\4\2\uffff\1\23\17\uffff\1\22\25\uffff\1\3\6\uffff\1\4\2\uffff\1\41\14\uffff\1\24\1\42",
            "\1\4\2\uffff\1\4\2\uffff\1\23\17\uffff\1\22\25\uffff\1\3\6\uffff\1\4\17\uffff\1\24",
            "\1\46\1\45\1\14\1\4\1\15\1\12\1\23\24\uffff\1\47\20\uffff\1\3\6\uffff\1\4\2\uffff\1\43\7\uffff\1\13\4\uffff\1\24\1\44",
            "\1\46\1\45\1\14\1\4\1\15\1\12\1\23\24\uffff\1\47\20\uffff\1\3\6\uffff\1\4\12\uffff\1\13\4\uffff\1\24",
            "\1\73",
            "\1\74",
            "\1\77\31\uffff\1\75\15\uffff\1\76",
            "\1\101\1\100\1\104\1\uffff\1\105\1\102\70\uffff\1\103",
            "\1\106",
            "\1\107",
            "\1\101\1\110\1\104\1\uffff\1\105\1\102\70\uffff\1\103",
            "\1\4\2\uffff\1\4\2\uffff\1\23\17\uffff\1\22\25\uffff\1\3\6\uffff\1\4\2\uffff\1\64\14\uffff\1\24\1\65",
            "\1\4\2\uffff\1\4\2\uffff\1\23\17\uffff\1\22\25\uffff\1\3\6\uffff\1\4\17\uffff\1\24",
            "\1\111",
            "\1\112",
            "\1\53\1\113\1\56\1\uffff\1\57\1\54\70\uffff\1\55",
            "\1\4\2\uffff\1\4\2\uffff\1\1\17\uffff\1\67\25\uffff\1\3\6\uffff\1\4\17\uffff\1\2",
            "\1\4\2\uffff\1\4\2\uffff\1\23\17\uffff\1\72\25\uffff\1\3\6\uffff\1\4\2\uffff\1\114\14\uffff\1\24\1\115",
            "\1\4\2\uffff\1\4\2\uffff\1\23\17\uffff\1\72\25\uffff\1\3\6\uffff\1\4\17\uffff\1\24",
            "\1\104\1\uffff\1\105",
            "\1\4\2\uffff\1\4\2\uffff\1\23\17\uffff\1\72\25\uffff\1\3\6\uffff\1\4\17\uffff\1\24",
            "\1\4\2\uffff\1\4\2\uffff\1\23\17\uffff\1\72\25\uffff\1\3\6\uffff\1\4\17\uffff\1\24",
            "\1\4\2\uffff\1\4\2\uffff\1\23\17\uffff\1\72\25\uffff\1\3\6\uffff\1\4\2\uffff\1\70\14\uffff\1\24\1\71",
            "\1\4\2\uffff\1\4\2\uffff\1\23\17\uffff\1\72\25\uffff\1\3\6\uffff\1\4\17\uffff\1\24",
            "\1\4\2\uffff\1\4\2\uffff\1\23\17\uffff\1\72\25\uffff\1\3\6\uffff\1\4\17\uffff\1\24",
            "\1\77\31\uffff\1\75\15\uffff\1\76",
            "\1\77",
            "\1\4\2\uffff\1\4\2\uffff\1\23\17\uffff\1\72\25\uffff\1\3\6\uffff\1\4\17\uffff\1\24",
            "\1\116",
            "\1\117",
            "\1\4\2\uffff\1\4\2\uffff\1\23\17\uffff\1\72\25\uffff\1\3\6\uffff\1\4\2\uffff\1\114\14\uffff\1\24\1\115",
            "\1\4\2\uffff\1\4\2\uffff\1\23\17\uffff\1\72\25\uffff\1\3\6\uffff\1\4\17\uffff\1\24"
    };

    static final short[] dfa_70 = DFA.unpackEncodedString(dfa_70s);
    static final char[] dfa_71 = DFA.unpackEncodedStringToUnsignedChars(dfa_71s);
    static final char[] dfa_72 = DFA.unpackEncodedStringToUnsignedChars(dfa_72s);
    static final short[] dfa_73 = DFA.unpackEncodedString(dfa_73s);
    static final short[] dfa_74 = DFA.unpackEncodedString(dfa_74s);
    static final short[][] dfa_75 = unpackEncodedStringArray(dfa_75s);

    class DFA77 extends DFA {

        public DFA77(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 77;
            this.eot = dfa_70;
            this.eof = dfa_70;
            this.min = dfa_71;
            this.max = dfa_72;
            this.accept = dfa_73;
            this.special = dfa_74;
            this.transition = dfa_75;
        }
        public String getDescription() {
            return "2403:1: ( ( (lv_expression_0_0= ruleAnnotatedExpression ) ) | ( (lv_effect_1_0= ruleEffect ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA77_9 = input.LA(1);

                         
                        int index77_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_InternalSCTX()) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index77_9);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 77, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_76s = {
            "\1\1\46\uffff\5\3\2\4\17\uffff\1\2\40\uffff\7\3",
            "\1\1\46\uffff\5\3\2\4\17\uffff\1\2\40\uffff\7\3",
            "\1\5",
            "",
            "",
            "\1\11\1\10\1\14\1\uffff\1\15\1\12\1\1\24\uffff\1\16\21\uffff\5\3\2\4\2\uffff\1\6\7\uffff\1\13\4\uffff\1\2\1\7\37\uffff\7\3",
            "\1\17",
            "\1\20",
            "\1\1\17\uffff\1\21\26\uffff\5\3\2\4\17\uffff\1\2\40\uffff\7\3",
            "\1\1\17\uffff\1\21\26\uffff\5\3\2\4\2\uffff\1\22\14\uffff\1\2\1\23\37\uffff\7\3",
            "\1\1\17\uffff\1\21\26\uffff\5\3\2\4\17\uffff\1\2\40\uffff\7\3",
            "\1\14\1\uffff\1\15",
            "\1\1\17\uffff\1\21\26\uffff\5\3\2\4\17\uffff\1\2\40\uffff\7\3",
            "\1\1\17\uffff\1\21\26\uffff\5\3\2\4\17\uffff\1\2\40\uffff\7\3",
            "\1\24",
            "\1\11\1\10\1\14\1\uffff\1\15\1\12\1\1\24\uffff\1\16\21\uffff\5\3\2\4\2\uffff\1\6\7\uffff\1\13\4\uffff\1\2\1\7\37\uffff\7\3",
            "\1\11\1\10\1\14\1\uffff\1\15\1\12\1\1\24\uffff\1\16\21\uffff\5\3\2\4\12\uffff\1\13\4\uffff\1\2\40\uffff\7\3",
            "\1\26\1\25\1\31\1\uffff\1\32\1\27\70\uffff\1\30",
            "\1\33",
            "\1\34",
            "\1\37\31\uffff\1\35\15\uffff\1\36",
            "\1\1\17\uffff\1\21\26\uffff\5\3\2\4\17\uffff\1\2\40\uffff\7\3",
            "\1\1\17\uffff\1\21\26\uffff\5\3\2\4\2\uffff\1\40\14\uffff\1\2\1\41\37\uffff\7\3",
            "\1\1\17\uffff\1\21\26\uffff\5\3\2\4\17\uffff\1\2\40\uffff\7\3",
            "\1\31\1\uffff\1\32",
            "\1\1\17\uffff\1\21\26\uffff\5\3\2\4\17\uffff\1\2\40\uffff\7\3",
            "\1\1\17\uffff\1\21\26\uffff\5\3\2\4\17\uffff\1\2\40\uffff\7\3",
            "\1\1\17\uffff\1\21\26\uffff\5\3\2\4\2\uffff\1\22\14\uffff\1\2\1\23\37\uffff\7\3",
            "\1\1\17\uffff\1\21\26\uffff\5\3\2\4\17\uffff\1\2\40\uffff\7\3",
            "\1\42",
            "\1\43",
            "\1\45\1\44\1\50\1\uffff\1\51\1\46\70\uffff\1\47",
            "\1\52",
            "\1\53",
            "\1\37\31\uffff\1\35\15\uffff\1\36",
            "\1\37",
            "\1\1\17\uffff\1\54\26\uffff\5\3\2\4\17\uffff\1\2\40\uffff\7\3",
            "\1\1\17\uffff\1\54\26\uffff\5\3\2\4\2\uffff\1\55\14\uffff\1\2\1\56\37\uffff\7\3",
            "\1\1\17\uffff\1\54\26\uffff\5\3\2\4\17\uffff\1\2\40\uffff\7\3",
            "\1\50\1\uffff\1\51",
            "\1\1\17\uffff\1\54\26\uffff\5\3\2\4\17\uffff\1\2\40\uffff\7\3",
            "\1\1\17\uffff\1\54\26\uffff\5\3\2\4\17\uffff\1\2\40\uffff\7\3",
            "\1\1\17\uffff\1\21\26\uffff\5\3\2\4\2\uffff\1\40\14\uffff\1\2\1\41\37\uffff\7\3",
            "\1\1\17\uffff\1\21\26\uffff\5\3\2\4\17\uffff\1\2\40\uffff\7\3",
            "\1\60\1\57\1\63\1\uffff\1\64\1\61\70\uffff\1\62",
            "\1\65",
            "\1\66",
            "\1\1\17\uffff\1\54\26\uffff\5\3\2\4\17\uffff\1\2\40\uffff\7\3",
            "\1\1\17\uffff\1\54\26\uffff\5\3\2\4\2\uffff\1\67\14\uffff\1\2\1\70\37\uffff\7\3",
            "\1\1\17\uffff\1\54\26\uffff\5\3\2\4\17\uffff\1\2\40\uffff\7\3",
            "\1\63\1\uffff\1\64",
            "\1\1\17\uffff\1\54\26\uffff\5\3\2\4\17\uffff\1\2\40\uffff\7\3",
            "\1\1\17\uffff\1\54\26\uffff\5\3\2\4\17\uffff\1\2\40\uffff\7\3",
            "\1\1\17\uffff\1\54\26\uffff\5\3\2\4\2\uffff\1\55\14\uffff\1\2\1\56\37\uffff\7\3",
            "\1\1\17\uffff\1\54\26\uffff\5\3\2\4\17\uffff\1\2\40\uffff\7\3",
            "\1\71",
            "\1\72",
            "\1\1\17\uffff\1\54\26\uffff\5\3\2\4\2\uffff\1\67\14\uffff\1\2\1\70\37\uffff\7\3",
            "\1\1\17\uffff\1\54\26\uffff\5\3\2\4\17\uffff\1\2\40\uffff\7\3"
    };
    static final short[][] dfa_76 = unpackEncodedStringArray(dfa_76s);

    class DFA79 extends DFA {

        public DFA79(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 79;
            this.eot = dfa_39;
            this.eof = dfa_39;
            this.min = dfa_40;
            this.max = dfa_45;
            this.accept = dfa_42;
            this.special = dfa_43;
            this.transition = dfa_76;
        }
        public String getDescription() {
            return "2522:1: (this_VariableDeclaration_0= ruleVariableDeclaration | this_ReferenceDeclaration_1= ruleReferenceDeclaration )";
        }
    }

    class DFA80 extends DFA {

        public DFA80(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 80;
            this.eot = dfa_39;
            this.eof = dfa_39;
            this.min = dfa_40;
            this.max = dfa_45;
            this.accept = dfa_42;
            this.special = dfa_43;
            this.transition = dfa_76;
        }
        public String getDescription() {
            return "2568:1: (this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon | this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon )";
        }
    }
    static final String dfa_77s = "\1\4\3\0\7\uffff";
    static final String dfa_78s = "\1\107\3\0\7\uffff";
    static final String dfa_79s = "\4\uffff\1\4\1\6\1\uffff\1\1\1\2\1\3\1\5";
    static final String dfa_80s = "\1\uffff\1\0\1\1\1\2\7\uffff}>";
    static final String[] dfa_81s = {
            "\1\3\2\uffff\1\4\2\uffff\1\1\54\uffff\1\5\4\uffff\1\5\12\uffff\1\2",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_77 = DFA.unpackEncodedStringToUnsignedChars(dfa_77s);
    static final char[] dfa_78 = DFA.unpackEncodedStringToUnsignedChars(dfa_78s);
    static final short[] dfa_79 = DFA.unpackEncodedString(dfa_79s);
    static final short[] dfa_80 = DFA.unpackEncodedString(dfa_80s);
    static final short[][] dfa_81 = unpackEncodedStringArray(dfa_81s);

    class DFA108 extends DFA {

        public DFA108(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 108;
            this.eot = dfa_33;
            this.eof = dfa_33;
            this.min = dfa_77;
            this.max = dfa_78;
            this.accept = dfa_79;
            this.special = dfa_80;
            this.transition = dfa_81;
        }
        public String getDescription() {
            return "3418:1: (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | this_Emission_2= ruleEmission | this_HostcodeEffect_3= ruleHostcodeEffect | this_ReferenceCallEffect_4= ruleReferenceCallEffect | this_FunctionCallEffect_5= ruleFunctionCallEffect )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA108_1 = input.LA(1);

                         
                        int index108_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred117_InternalSCTX()) ) {s = 7;}

                        else if ( (synpred118_InternalSCTX()) ) {s = 8;}

                        else if ( (synpred119_InternalSCTX()) ) {s = 9;}

                        else if ( (synpred120_InternalSCTX()) ) {s = 4;}

                        else if ( (synpred121_InternalSCTX()) ) {s = 10;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index108_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA108_2 = input.LA(1);

                         
                        int index108_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred117_InternalSCTX()) ) {s = 7;}

                        else if ( (synpred118_InternalSCTX()) ) {s = 8;}

                        else if ( (synpred119_InternalSCTX()) ) {s = 9;}

                        else if ( (synpred120_InternalSCTX()) ) {s = 4;}

                        else if ( (synpred121_InternalSCTX()) ) {s = 10;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index108_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA108_3 = input.LA(1);

                         
                        int index108_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred117_InternalSCTX()) ) {s = 7;}

                        else if ( (synpred118_InternalSCTX()) ) {s = 8;}

                        else if ( (synpred119_InternalSCTX()) ) {s = 9;}

                        else if ( (synpred121_InternalSCTX()) ) {s = 10;}

                         
                        input.seek(index108_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 108, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_82s = "\1\4\14\0\2\uffff";
    static final String dfa_83s = "\1\147\14\0\2\uffff";
    static final String dfa_84s = "\15\uffff\1\1\1\2";
    static final String dfa_85s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\2\uffff}>";
    static final String[] dfa_86s = {
            "\1\11\1\4\1\2\1\14\1\3\1\6\17\uffff\1\5\2\uffff\1\15\32\uffff\1\12\4\uffff\1\13\5\uffff\1\1\43\uffff\1\7\1\10",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };
    static final char[] dfa_82 = DFA.unpackEncodedStringToUnsignedChars(dfa_82s);
    static final char[] dfa_83 = DFA.unpackEncodedStringToUnsignedChars(dfa_83s);
    static final short[] dfa_84 = DFA.unpackEncodedString(dfa_84s);
    static final short[] dfa_85 = DFA.unpackEncodedString(dfa_85s);
    static final short[][] dfa_86 = unpackEncodedStringArray(dfa_86s);

    class DFA128 extends DFA {

        public DFA128(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 128;
            this.eot = dfa_27;
            this.eof = dfa_27;
            this.min = dfa_82;
            this.max = dfa_83;
            this.accept = dfa_84;
            this.special = dfa_85;
            this.transition = dfa_86;
        }
        public String getDescription() {
            return "4323:1: (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA128_1 = input.LA(1);

                         
                        int index128_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred141_InternalSCTX()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index128_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA128_2 = input.LA(1);

                         
                        int index128_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred141_InternalSCTX()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index128_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA128_3 = input.LA(1);

                         
                        int index128_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred141_InternalSCTX()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index128_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA128_4 = input.LA(1);

                         
                        int index128_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred141_InternalSCTX()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index128_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA128_5 = input.LA(1);

                         
                        int index128_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred141_InternalSCTX()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index128_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA128_6 = input.LA(1);

                         
                        int index128_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred141_InternalSCTX()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index128_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA128_7 = input.LA(1);

                         
                        int index128_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred141_InternalSCTX()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index128_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA128_8 = input.LA(1);

                         
                        int index128_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred141_InternalSCTX()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index128_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA128_9 = input.LA(1);

                         
                        int index128_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred141_InternalSCTX()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index128_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA128_10 = input.LA(1);

                         
                        int index128_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred141_InternalSCTX()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index128_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA128_11 = input.LA(1);

                         
                        int index128_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred141_InternalSCTX()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index128_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA128_12 = input.LA(1);

                         
                        int index128_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred141_InternalSCTX()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index128_12);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 128, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_87s = "\100\uffff";
    static final String dfa_88s = "\1\7\77\uffff";
    static final String dfa_89s = "\1\4\1\uffff\1\0\75\uffff";
    static final String dfa_90s = "\1\156\1\uffff\1\0\75\uffff";
    static final String dfa_91s = "\1\uffff\1\1\5\uffff\1\2\70\uffff";
    static final String dfa_92s = "\2\uffff\1\0\75\uffff}>";
    static final String[] dfa_93s = {
            "\1\7\2\uffff\1\7\2\uffff\1\7\7\uffff\6\7\2\uffff\2\7\1\uffff\2\7\1\uffff\1\7\2\uffff\12\7\1\uffff\12\7\1\uffff\1\7\2\uffff\1\2\1\1\3\7\6\uffff\1\7\1\uffff\12\7\17\uffff\4\1\2\uffff\7\7",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_87 = DFA.unpackEncodedString(dfa_87s);
    static final short[] dfa_88 = DFA.unpackEncodedString(dfa_88s);
    static final char[] dfa_89 = DFA.unpackEncodedStringToUnsignedChars(dfa_89s);
    static final char[] dfa_90 = DFA.unpackEncodedStringToUnsignedChars(dfa_90s);
    static final short[] dfa_91 = DFA.unpackEncodedString(dfa_91s);
    static final short[] dfa_92 = DFA.unpackEncodedString(dfa_92s);
    static final short[][] dfa_93 = unpackEncodedStringArray(dfa_93s);

    class DFA137 extends DFA {

        public DFA137(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 137;
            this.eot = dfa_87;
            this.eof = dfa_88;
            this.min = dfa_89;
            this.max = dfa_90;
            this.accept = dfa_91;
            this.special = dfa_92;
            this.transition = dfa_93;
        }
        public String getDescription() {
            return "4814:1: ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA137_2 = input.LA(1);

                         
                        int index137_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred150_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index137_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 137, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_94s = "\16\uffff";
    static final String dfa_95s = "\1\4\4\uffff\10\0\1\uffff";
    static final String dfa_96s = "\1\147\4\uffff\10\0\1\uffff";
    static final String dfa_97s = "\1\uffff\1\1\13\uffff\1\2";
    static final String dfa_98s = "\5\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\uffff}>";
    static final String[] dfa_99s = {
            "\1\11\2\1\1\14\1\1\1\6\17\uffff\1\5\2\uffff\1\15\32\uffff\1\12\4\uffff\1\13\5\uffff\1\1\43\uffff\1\7\1\10",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] dfa_94 = DFA.unpackEncodedString(dfa_94s);
    static final char[] dfa_95 = DFA.unpackEncodedStringToUnsignedChars(dfa_95s);
    static final char[] dfa_96 = DFA.unpackEncodedStringToUnsignedChars(dfa_96s);
    static final short[] dfa_97 = DFA.unpackEncodedString(dfa_97s);
    static final short[] dfa_98 = DFA.unpackEncodedString(dfa_98s);
    static final short[][] dfa_99 = unpackEncodedStringArray(dfa_99s);

    class DFA138 extends DFA {

        public DFA138(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 138;
            this.eot = dfa_94;
            this.eof = dfa_94;
            this.min = dfa_95;
            this.max = dfa_96;
            this.accept = dfa_97;
            this.special = dfa_98;
            this.transition = dfa_99;
        }
        public String getDescription() {
            return "4880:1: (this_ValuedExpression_0= ruleValuedExpression | this_NotExpression_1= ruleNotExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA138_5 = input.LA(1);

                         
                        int index138_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred151_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index138_5);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA138_6 = input.LA(1);

                         
                        int index138_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred151_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index138_6);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA138_7 = input.LA(1);

                         
                        int index138_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred151_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index138_7);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA138_8 = input.LA(1);

                         
                        int index138_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred151_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index138_8);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA138_9 = input.LA(1);

                         
                        int index138_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred151_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index138_9);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA138_10 = input.LA(1);

                         
                        int index138_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred151_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index138_10);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA138_11 = input.LA(1);

                         
                        int index138_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred151_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index138_11);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA138_12 = input.LA(1);

                         
                        int index138_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred151_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index138_12);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 138, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_100s = "\11\uffff";
    static final String dfa_101s = "\3\uffff\1\2\3\uffff\1\2\1\uffff";
    static final String dfa_102s = "\1\4\2\uffff\1\4\3\uffff\1\4\1\uffff";
    static final String dfa_103s = "\1\147\2\uffff\1\156\3\uffff\1\156\1\uffff";
    static final String dfa_104s = "\1\uffff\1\1\1\2\1\uffff\1\3\1\5\1\6\1\uffff\1\4";
    static final String dfa_105s = "\11\uffff}>";
    static final String[] dfa_106s = {
            "\1\3\2\uffff\1\6\1\uffff\1\1\17\uffff\1\4\35\uffff\1\5\4\uffff\1\5\51\uffff\2\2",
            "",
            "",
            "\1\2\2\uffff\1\2\2\uffff\1\2\7\uffff\6\2\1\uffff\1\10\2\2\1\uffff\4\2\2\uffff\12\2\1\uffff\12\2\1\uffff\2\2\1\10\12\2\1\7\1\2\1\uffff\12\2\17\uffff\4\2\2\uffff\7\2",
            "",
            "",
            "",
            "\1\2\2\uffff\1\2\2\uffff\1\2\7\uffff\6\2\1\uffff\1\10\2\2\1\uffff\4\2\2\uffff\12\2\1\uffff\12\2\1\uffff\2\2\1\10\12\2\1\7\1\2\1\uffff\12\2\17\uffff\4\2\2\uffff\7\2",
            ""
    };

    static final short[] dfa_100 = DFA.unpackEncodedString(dfa_100s);
    static final short[] dfa_101 = DFA.unpackEncodedString(dfa_101s);
    static final char[] dfa_102 = DFA.unpackEncodedStringToUnsignedChars(dfa_102s);
    static final char[] dfa_103 = DFA.unpackEncodedStringToUnsignedChars(dfa_103s);
    static final short[] dfa_104 = DFA.unpackEncodedString(dfa_104s);
    static final short[] dfa_105 = DFA.unpackEncodedString(dfa_105s);
    static final short[][] dfa_106 = unpackEncodedStringArray(dfa_106s);

    class DFA151 extends DFA {

        public DFA151(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 151;
            this.eot = dfa_100;
            this.eof = dfa_101;
            this.min = dfa_102;
            this.max = dfa_103;
            this.accept = dfa_104;
            this.special = dfa_105;
            this.transition = dfa_106;
        }
        public String getDescription() {
            return "5617:1: (this_BoolValue_0= ruleBoolValue | this_ValuedObjectTestExpression_1= ruleValuedObjectTestExpression | (otherlv_2= '(' this_BoolExpression_3= ruleBoolExpression otherlv_4= ')' ) | this_ReferenceCall_5= ruleReferenceCall | this_FunctionCall_6= ruleFunctionCall | this_TextExpression_7= ruleTextExpression )";
        }
    }
    static final String dfa_107s = "\15\uffff";
    static final String dfa_108s = "\1\4\3\uffff\1\0\10\uffff";
    static final String dfa_109s = "\1\147\3\uffff\1\0\10\uffff";
    static final String dfa_110s = "\1\uffff\1\1\1\2\1\3\1\uffff\1\5\6\uffff\1\4";
    static final String dfa_111s = "\4\uffff\1\0\10\uffff}>";
    static final String[] dfa_112s = {
            "\1\5\1\3\1\1\1\5\1\2\1\5\17\uffff\1\4\35\uffff\1\5\4\uffff\1\5\51\uffff\2\5",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_107 = DFA.unpackEncodedString(dfa_107s);
    static final char[] dfa_108 = DFA.unpackEncodedStringToUnsignedChars(dfa_108s);
    static final char[] dfa_109 = DFA.unpackEncodedStringToUnsignedChars(dfa_109s);
    static final short[] dfa_110 = DFA.unpackEncodedString(dfa_110s);
    static final short[] dfa_111 = DFA.unpackEncodedString(dfa_111s);
    static final short[][] dfa_112 = unpackEncodedStringArray(dfa_112s);

    class DFA152 extends DFA {

        public DFA152(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 152;
            this.eot = dfa_107;
            this.eof = dfa_107;
            this.min = dfa_108;
            this.max = dfa_109;
            this.accept = dfa_110;
            this.special = dfa_111;
            this.transition = dfa_112;
        }
        public String getDescription() {
            return "5723:1: (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_StringValue_2= ruleStringValue | (otherlv_3= '(' this_ValuedExpression_4= ruleValuedExpression otherlv_5= ')' ) | this_AtomicExpression_6= ruleAtomicExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA152_4 = input.LA(1);

                         
                        int index152_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred172_InternalSCTX()) ) {s = 12;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index152_4);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 152, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_113s = "\3\uffff\1\10\3\uffff\1\6\2\uffff\2\10\1\uffff\1\6\1\uffff\1\6\1\uffff\1\6\1\uffff\1\6\1\uffff\1\6\1\uffff";
    static final String dfa_114s = "\1\12\1\uffff\3\4\1\6\1\uffff\1\4\2\uffff\14\4\1\0";
    static final String dfa_115s = "\1\107\1\uffff\1\4\1\156\1\4\1\6\1\uffff\1\156\2\uffff\2\156\1\4\1\156\1\4\1\156\1\4\1\156\1\4\1\156\1\4\1\156\1\0";
    static final String dfa_116s = "\1\uffff\1\1\4\uffff\1\2\1\uffff\1\4\1\3\15\uffff";
    static final String dfa_117s = "\26\uffff\1\0}>";
    static final String[] dfa_118s = {
            "\1\1\74\uffff\1\2",
            "",
            "\1\3",
            "\1\7\2\6\1\10\2\6\1\10\5\uffff\1\10\2\uffff\5\10\7\uffff\1\11\14\uffff\1\10\1\uffff\1\10\1\uffff\10\10\2\uffff\1\4\7\uffff\1\6\4\uffff\1\10\1\5\37\uffff\7\10",
            "\1\12",
            "\1\13",
            "",
            "\1\6\2\uffff\1\6\2\uffff\1\6\5\uffff\1\6\2\uffff\5\6\1\uffff\1\10\1\6\4\uffff\1\10\14\uffff\1\6\1\uffff\1\6\1\uffff\10\6\1\10\1\uffff\1\14\1\10\12\uffff\1\10\2\6\15\uffff\14\10\6\uffff\7\6",
            "",
            "",
            "\1\7\2\6\1\10\2\6\1\10\5\uffff\1\10\2\uffff\5\10\7\uffff\1\11\14\uffff\1\10\1\uffff\1\10\1\uffff\10\10\2\uffff\1\4\7\uffff\1\6\4\uffff\1\10\1\5\37\uffff\7\10",
            "\1\7\2\6\1\10\2\6\1\10\5\uffff\1\10\2\uffff\5\10\7\uffff\1\11\14\uffff\1\10\1\uffff\1\10\1\uffff\10\10\12\uffff\1\6\4\uffff\1\10\40\uffff\7\10",
            "\1\15",
            "\1\6\2\uffff\1\6\2\uffff\1\6\5\uffff\1\6\2\uffff\5\6\2\uffff\1\6\4\uffff\1\10\14\uffff\1\6\1\uffff\1\6\1\uffff\10\6\1\10\1\uffff\1\16\13\uffff\1\10\2\6\15\uffff\12\10\10\uffff\7\6",
            "\1\17",
            "\1\6\2\uffff\1\6\2\uffff\1\6\5\uffff\1\6\2\uffff\5\6\2\uffff\1\6\4\uffff\1\10\14\uffff\1\6\1\uffff\1\6\1\uffff\10\6\1\10\1\uffff\1\20\13\uffff\1\10\2\6\15\uffff\12\10\10\uffff\7\6",
            "\1\21",
            "\1\6\2\uffff\1\6\2\uffff\1\6\5\uffff\1\6\2\uffff\5\6\2\uffff\1\6\4\uffff\1\10\14\uffff\1\6\1\uffff\1\6\1\uffff\10\6\1\10\1\uffff\1\22\13\uffff\1\10\2\6\15\uffff\12\10\10\uffff\7\6",
            "\1\23",
            "\1\6\2\uffff\1\6\2\uffff\1\6\5\uffff\1\6\2\uffff\5\6\2\uffff\1\6\4\uffff\1\10\14\uffff\1\6\1\uffff\1\6\1\uffff\10\6\1\10\1\uffff\1\24\13\uffff\1\10\2\6\15\uffff\12\10\10\uffff\7\6",
            "\1\25",
            "\1\6\2\uffff\1\6\2\uffff\1\6\5\uffff\1\6\2\uffff\5\6\2\uffff\1\6\4\uffff\1\10\14\uffff\1\6\1\uffff\1\6\1\uffff\10\6\1\10\1\uffff\1\26\13\uffff\1\10\2\6\15\uffff\12\10\10\uffff\7\6",
            "\1\uffff"
    };
    static final short[] dfa_113 = DFA.unpackEncodedString(dfa_113s);
    static final char[] dfa_114 = DFA.unpackEncodedStringToUnsignedChars(dfa_114s);
    static final char[] dfa_115 = DFA.unpackEncodedStringToUnsignedChars(dfa_115s);
    static final short[] dfa_116 = DFA.unpackEncodedString(dfa_116s);
    static final short[] dfa_117 = DFA.unpackEncodedString(dfa_117s);
    static final short[][] dfa_118 = unpackEncodedStringArray(dfa_118s);

    class DFA165 extends DFA {

        public DFA165(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 165;
            this.eot = dfa_20;
            this.eof = dfa_113;
            this.min = dfa_114;
            this.max = dfa_115;
            this.accept = dfa_116;
            this.special = dfa_117;
            this.transition = dfa_118;
        }
        public String getDescription() {
            return "6509:1: (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA165_22 = input.LA(1);

                         
                        int index165_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred186_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index165_22);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 165, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_119s = "\2\uffff\1\6\4\uffff\2\6";
    static final String dfa_120s = "\1\110\4\4\2\uffff\2\4";
    static final String dfa_121s = "\1\110\1\4\1\110\1\4\1\6\2\uffff\2\110";
    static final String dfa_122s = "\5\uffff\1\1\1\2\2\uffff";
    static final String[] dfa_123s = {
            "\1\1",
            "\1\2",
            "\3\5\1\uffff\2\5\1\6\5\uffff\1\6\51\uffff\1\3\7\uffff\1\5\4\uffff\1\6\1\4",
            "\1\7",
            "\1\6\1\uffff\1\10",
            "",
            "",
            "\3\5\1\uffff\2\5\1\6\5\uffff\1\6\51\uffff\1\3\7\uffff\1\5\4\uffff\1\6\1\4",
            "\3\5\1\uffff\2\5\1\6\5\uffff\1\6\61\uffff\1\5\4\uffff\2\6"
    };
    static final short[] dfa_119 = DFA.unpackEncodedString(dfa_119s);
    static final char[] dfa_120 = DFA.unpackEncodedStringToUnsignedChars(dfa_120s);
    static final char[] dfa_121 = DFA.unpackEncodedStringToUnsignedChars(dfa_121s);
    static final short[] dfa_122 = DFA.unpackEncodedString(dfa_122s);
    static final short[][] dfa_123 = unpackEncodedStringArray(dfa_123s);

    class DFA166 extends DFA {

        public DFA166(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 166;
            this.eot = dfa_100;
            this.eof = dfa_119;
            this.min = dfa_120;
            this.max = dfa_121;
            this.accept = dfa_122;
            this.special = dfa_105;
            this.transition = dfa_123;
        }
        public String getDescription() {
            return "6581:1: (this_StringPragma_0= ruleStringPragma | this_PragmaTag_1= rulePragmaTag )";
        }
    }
    static final String dfa_124s = "\3\uffff\1\7\5\uffff\2\7";
    static final String dfa_125s = "\1\12\1\uffff\3\4\1\6\3\uffff\2\4";
    static final String dfa_126s = "\1\107\1\uffff\1\4\1\116\1\4\1\6\3\uffff\2\116";
    static final String dfa_127s = "\1\uffff\1\1\4\uffff\1\3\1\4\1\2\2\uffff";
    static final String[] dfa_128s = {
            "\1\1\74\uffff\1\2",
            "",
            "\1\3",
            "\2\10\3\uffff\1\10\1\7\24\uffff\1\6\32\uffff\1\4\14\uffff\1\7\1\5\6\7",
            "\1\11",
            "\1\12",
            "",
            "",
            "",
            "\2\10\3\uffff\1\10\1\7\24\uffff\1\6\32\uffff\1\4\14\uffff\1\7\1\5\6\7",
            "\2\10\3\uffff\1\10\1\7\24\uffff\1\6\47\uffff\1\7\1\uffff\6\7"
    };
    static final short[] dfa_124 = DFA.unpackEncodedString(dfa_124s);
    static final char[] dfa_125 = DFA.unpackEncodedStringToUnsignedChars(dfa_125s);
    static final char[] dfa_126 = DFA.unpackEncodedStringToUnsignedChars(dfa_126s);
    static final short[] dfa_127 = DFA.unpackEncodedString(dfa_127s);
    static final short[][] dfa_128 = unpackEncodedStringArray(dfa_128s);

    class DFA167 extends DFA {

        public DFA167(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 167;
            this.eot = dfa_33;
            this.eof = dfa_124;
            this.min = dfa_125;
            this.max = dfa_126;
            this.accept = dfa_127;
            this.special = dfa_37;
            this.transition = dfa_128;
        }
        public String getDescription() {
            return "6629:1: (this_CommentAnnotation_0= ruleCommentAnnotation | this_RestrictedKeyStringValueAnnotation_1= ruleRestrictedKeyStringValueAnnotation | this_RestrictedTypedKeyStringValueAnnotation_2= ruleRestrictedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )";
        }
    }
    static final String dfa_129s = "\3\uffff\1\6\5\uffff\2\6";
    static final String dfa_130s = "\1\107\1\uffff\1\4\1\110\1\4\1\6\3\uffff\1\110\1\107";
    static final String dfa_131s = "\1\uffff\1\1\4\uffff\1\4\1\3\1\2\2\uffff";
    static final String[] dfa_132s = {
            "\1\1\74\uffff\1\2",
            "",
            "\1\3",
            "\1\6\1\10\4\uffff\1\6\24\uffff\1\7\32\uffff\1\4\14\uffff\1\6\1\5",
            "\1\11",
            "\1\12",
            "",
            "",
            "",
            "\1\6\1\10\4\uffff\1\6\24\uffff\1\7\32\uffff\1\4\14\uffff\1\6\1\5",
            "\1\6\1\10\4\uffff\1\6\24\uffff\1\7\47\uffff\1\6"
    };
    static final short[] dfa_129 = DFA.unpackEncodedString(dfa_129s);
    static final char[] dfa_130 = DFA.unpackEncodedStringToUnsignedChars(dfa_130s);
    static final short[] dfa_131 = DFA.unpackEncodedString(dfa_131s);
    static final short[][] dfa_132 = unpackEncodedStringArray(dfa_132s);

    class DFA168 extends DFA {

        public DFA168(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 168;
            this.eot = dfa_33;
            this.eof = dfa_129;
            this.min = dfa_125;
            this.max = dfa_130;
            this.accept = dfa_131;
            this.special = dfa_37;
            this.transition = dfa_132;
        }
        public String getDescription() {
            return "6701:1: (this_CommentAnnotation_0= ruleCommentAnnotation | this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation | this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )";
        }
    }

    class DFA200 extends DFA {

        public DFA200(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 200;
            this.eot = dfa_27;
            this.eof = dfa_27;
            this.min = dfa_28;
            this.max = dfa_29;
            this.accept = dfa_30;
            this.special = dfa_31;
            this.transition = dfa_32;
        }
        public String getDescription() {
            return "937:1: ( (lv_triggerDelay_7_0= RULE_INT ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA200_1 = input.LA(1);

                         
                        int index200_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred36_InternalSCTX()) ) {s = 14;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index200_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 200, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    
    private static class FollowSets000 {
        public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000010402L,0x0000000000000180L});
        public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000010402L,0x0000000000000080L});
        public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000010400L,0x0000000000000080L});
        public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000020020L});
        public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000020000L});
        public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x00FE5FE000FC0410L,0x00007F0000078080L});
        public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x00005FE000FC0410L,0x0000000000078080L});
        public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000000040000L});
        public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000500000040400L,0x0000000000000080L});
        public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000000F80400L,0x0000000000000080L});
        public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000F00000L});
        public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000000E00000L});
        public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000000C00000L});
        public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000000800000L});
        public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000001020422L,0x0000000000007E80L});
        public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000001020402L,0x0000000000007E80L});
        public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000000000402L,0x0000000000007E80L});
        public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000002000002L});
        public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x10800000320007F0L,0x000000C000000084L});
        public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x000000000C000000L});
        public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000008000000L});
        public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000020000000L});
        public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000040000002L});
        public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000080000002L});
        public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000100000000L});
        public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000000000400L,0x0000000000007E80L});
        public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000E00000002L,0x00000000003F8000L});
        public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000E00000002L,0x0000000000380000L});
        public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000000C00000002L,0x0000000000380000L});
        public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000000C00000002L});
        public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x10800000120007F0L,0x000000C000000084L});
        public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000000800000002L});
        public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x1080000000000490L,0x0000000000000080L});
        public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000001000000002L});
        public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000004000000000L});
        public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000030000000000L});
        public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000020000000000L});
        public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000400000002L});
        public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000000000F80402L,0x0000000000000080L});
        public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000000000000412L,0x0000000000000080L});
        public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000100000000400L,0x0000000000000080L});
        public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000200000000030L});
        public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000200000000020L});
        public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000200000000000L});
        public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x00FE000000F80400L,0x00007F0000000080L});
        public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000400000000400L,0x0000000000000080L});
        public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x00FE000000000410L,0x00007F0000000080L});
        public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x10FF800000000492L,0x00007F0000000080L});
        public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x1081800000000492L,0x0000000000000080L});
        public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000000000020010L});
        public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000800000000002L});
        public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x10FF800000040490L,0x00007F0000000080L});
        public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x1081800000040490L,0x0000000000000080L});
        public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000800000040000L});
        public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0001000000000400L,0x0000000000000080L});
        public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x003E000000000400L,0x00007F0000000080L});
        public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x003C000000000000L,0x00007F0000000000L});
        public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0038000000000000L,0x00007F0000000000L});
        public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0030000000000000L,0x00007F0000000000L});
        public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0020000000000000L,0x00007F0000000000L});
        public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0000000000000410L,0x0000000000000080L});
        public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000001004000000L});
        public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0000000004000002L});
        public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0000200000000002L});
        public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x00C0000000000400L,0x0000000000000080L});
        public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0300000080000002L});
        public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0200000000000002L});
        public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000000020000000L,0x0003C0000000000BL});
        public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0100000080000000L,0x00000000FFC00000L});
        public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0500000080000000L,0x00000000FFC00000L});
        public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000000000000410L,0x000000C000000080L});
        public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0000000080000000L,0x0000000300000000L});
        public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0000000000000480L,0x0000000000000080L});
        public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0800000002000000L});
        public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0080000000000400L,0x0000000000000080L});
        public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x2000000000000000L});
        public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x4000000000000002L});
        public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x8000000000000002L});
        public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000001L});
        public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000000020000002L});
        public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x3000000000000002L,0x0000003C00000000L});
        public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000002L});
        public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x10800000020007F0L,0x000000C000000084L});
        public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000004L});
        public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000008L});
        public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000010L});
        public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000020L});
        public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x0000000002000000L});
        public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000040L});
        public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x0400000080000002L});
        public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x0000000000000370L,0x0000000000000004L});
        public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0000000000000230L});
        public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x0000000080000000L});
        public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x0400000000000002L,0x0000000000000100L});
        public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x0000000000000040L});
        public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x0000000000000100L});
    }


}