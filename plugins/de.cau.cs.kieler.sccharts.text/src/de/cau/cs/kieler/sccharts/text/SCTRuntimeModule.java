/*
 * generated by Xtext
 */
package de.cau.cs.kieler.sccharts.text;

import org.eclipse.xtext.linking.ILinker;

import de.cau.cs.kieler.sccharts.text.formatting.SCTXValueConverter;
import de.cau.cs.kieler.sccharts.text.formatting.SCTXIndentionInformation;
import de.cau.cs.kieler.sccharts.text.scoping.SCTXQualifiedNameProvider;
import de.cau.cs.kieler.sccharts.text.validation.SCTXValidatorX;

/**
 * Use this class to register components to be used at runtime / without the Equinox extension registry.
 * 
 * @author ssm
 */
public class SCTRuntimeModule extends de.cau.cs.kieler.sccharts.text.AbstractSCTXRuntimeModule {

    @org.eclipse.xtext.service.SingletonBinding(eager=true) 
    public Class<? extends SCTXValidatorX> bindSctJavaValidator() {
        return SCTXValidatorX.class;
    }
    
    public Class<? extends org.eclipse.xtext.naming.IQualifiedNameProvider> bindIQualifiedNameProvider() {
        return SCTXQualifiedNameProvider.class;
    }    
    
//    public Class<? extends org.eclipse.xtext.resource.XtextResource> bindXtextResource() {
//        return SctResource.class;
//    }  
    
    public Class<? extends org.eclipse.xtext.parsetree.reconstr.ITransientValueService> bindITransientValueService() {
        return SCTXTransientValueService.class;
    }    
    
    public Class<? extends ILinker> bindILinker() {
        return SCTXLinker.class;
    }     
    
    public Class<? extends org.eclipse.xtext.formatting.IIndentationInformation> bindIIndentationInformation() {
        return SCTXIndentionInformation.class;
    }
    
    public Class<? extends org.eclipse.xtext.conversion.IValueConverterService> bindIValueConverterService() {
        return SCTXValueConverter.class;
    }    
}
