/*
 * generated by Xtext
 */
grammar InternalSCTX;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package de.cau.cs.kieler.sccharts.ui.text.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.cau.cs.kieler.sccharts.ui.text.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import de.cau.cs.kieler.sccharts.text.services.SCTXGrammarAccess;

}

@parser::members {
 
 	private SCTXGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(SCTXGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleSCCharts
entryRuleSCCharts 
:
{ before(grammarAccess.getSCChartsRule()); }
	 ruleSCCharts
{ after(grammarAccess.getSCChartsRule()); } 
	 EOF 
;

// Rule SCCharts
ruleSCCharts
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSCChartsAccess().getGroup()); }
(rule__SCCharts__Group__0)
{ after(grammarAccess.getSCChartsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRootState
entryRuleRootState 
:
{ before(grammarAccess.getRootStateRule()); }
	 ruleRootState
{ after(grammarAccess.getRootStateRule()); } 
	 EOF 
;

// Rule RootState
ruleRootState
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRootStateAccess().getGroup()); }
(rule__RootState__Group__0)
{ after(grammarAccess.getRootStateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleState
entryRuleState 
:
{ before(grammarAccess.getStateRule()); }
	 ruleState
{ after(grammarAccess.getStateRule()); } 
	 EOF 
;

// Rule State
ruleState
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStateAccess().getGroup()); }
(rule__State__Group__0)
{ after(grammarAccess.getStateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImplicitState
entryRuleImplicitState 
:
{ before(grammarAccess.getImplicitStateRule()); }
	 ruleImplicitState
{ after(grammarAccess.getImplicitStateRule()); } 
	 EOF 
;

// Rule ImplicitState
ruleImplicitState
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImplicitStateAccess().getGroup()); }
(rule__ImplicitState__Group__0)
{ after(grammarAccess.getImplicitStateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleScopeCall
entryRuleScopeCall 
:
{ before(grammarAccess.getScopeCallRule()); }
	 ruleScopeCall
{ after(grammarAccess.getScopeCallRule()); } 
	 EOF 
;

// Rule ScopeCall
ruleScopeCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getScopeCallAccess().getGroup()); }
(rule__ScopeCall__Group__0)
{ after(grammarAccess.getScopeCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameter
entryRuleParameter 
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterAccess().getGroup()); }
(rule__Parameter__Group__0)
{ after(grammarAccess.getParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTransition
entryRuleTransition 
:
{ before(grammarAccess.getTransitionRule()); }
	 ruleTransition
{ after(grammarAccess.getTransitionRule()); } 
	 EOF 
;

// Rule Transition
ruleTransition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTransitionAccess().getGroup()); }
(rule__Transition__Group__0)
{ after(grammarAccess.getTransitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRegion
entryRuleRegion 
:
{ before(grammarAccess.getRegionRule()); }
	 ruleRegion
{ after(grammarAccess.getRegionRule()); } 
	 EOF 
;

// Rule Region
ruleRegion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRegionAccess().getAlternatives()); }
(rule__Region__Alternatives)
{ after(grammarAccess.getRegionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImplicitControlflowRegion
entryRuleImplicitControlflowRegion 
:
{ before(grammarAccess.getImplicitControlflowRegionRule()); }
	 ruleImplicitControlflowRegion
{ after(grammarAccess.getImplicitControlflowRegionRule()); } 
	 EOF 
;

// Rule ImplicitControlflowRegion
ruleImplicitControlflowRegion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImplicitControlflowRegionAccess().getGroup()); }
(rule__ImplicitControlflowRegion__Group__0)
{ after(grammarAccess.getImplicitControlflowRegionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImplicitDataflowRegion
entryRuleImplicitDataflowRegion 
:
{ before(grammarAccess.getImplicitDataflowRegionRule()); }
	 ruleImplicitDataflowRegion
{ after(grammarAccess.getImplicitDataflowRegionRule()); } 
	 EOF 
;

// Rule ImplicitDataflowRegion
ruleImplicitDataflowRegion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImplicitDataflowRegionAccess().getGroup()); }
(rule__ImplicitDataflowRegion__Group__0)
{ after(grammarAccess.getImplicitDataflowRegionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleControlflowRegion
entryRuleControlflowRegion 
:
{ before(grammarAccess.getControlflowRegionRule()); }
	 ruleControlflowRegion
{ after(grammarAccess.getControlflowRegionRule()); } 
	 EOF 
;

// Rule ControlflowRegion
ruleControlflowRegion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getControlflowRegionAccess().getGroup()); }
(rule__ControlflowRegion__Group__0)
{ after(grammarAccess.getControlflowRegionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNestedControlflowRegion
entryRuleNestedControlflowRegion 
:
{ before(grammarAccess.getNestedControlflowRegionRule()); }
	 ruleNestedControlflowRegion
{ after(grammarAccess.getNestedControlflowRegionRule()); } 
	 EOF 
;

// Rule NestedControlflowRegion
ruleNestedControlflowRegion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNestedControlflowRegionAccess().getGroup()); }
(rule__NestedControlflowRegion__Group__0)
{ after(grammarAccess.getNestedControlflowRegionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataflowRegion
entryRuleDataflowRegion 
:
{ before(grammarAccess.getDataflowRegionRule()); }
	 ruleDataflowRegion
{ after(grammarAccess.getDataflowRegionRule()); } 
	 EOF 
;

// Rule DataflowRegion
ruleDataflowRegion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataflowRegionAccess().getGroup()); }
(rule__DataflowRegion__Group__0)
{ after(grammarAccess.getDataflowRegionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntOrReference
entryRuleIntOrReference 
:
{ before(grammarAccess.getIntOrReferenceRule()); }
	 ruleIntOrReference
{ after(grammarAccess.getIntOrReferenceRule()); } 
	 EOF 
;

// Rule IntOrReference
ruleIntOrReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntOrReferenceAccess().getAlternatives()); }
(rule__IntOrReference__Alternatives)
{ after(grammarAccess.getIntOrReferenceAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCounterVariable
entryRuleCounterVariable 
:
{ before(grammarAccess.getCounterVariableRule()); }
	 ruleCounterVariable
{ after(grammarAccess.getCounterVariableRule()); } 
	 EOF 
;

// Rule CounterVariable
ruleCounterVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCounterVariableAccess().getNameAssignment()); }
(rule__CounterVariable__NameAssignment)
{ after(grammarAccess.getCounterVariableAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLocalAction
entryRuleLocalAction 
:
{ before(grammarAccess.getLocalActionRule()); }
	 ruleLocalAction
{ after(grammarAccess.getLocalActionRule()); } 
	 EOF 
;

// Rule LocalAction
ruleLocalAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLocalActionAccess().getAlternatives()); }
(rule__LocalAction__Alternatives)
{ after(grammarAccess.getLocalActionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEntryAction
entryRuleEntryAction 
:
{ before(grammarAccess.getEntryActionRule()); }
	 ruleEntryAction
{ after(grammarAccess.getEntryActionRule()); } 
	 EOF 
;

// Rule EntryAction
ruleEntryAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEntryActionAccess().getGroup()); }
(rule__EntryAction__Group__0)
{ after(grammarAccess.getEntryActionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDuringAction
entryRuleDuringAction 
:
{ before(grammarAccess.getDuringActionRule()); }
	 ruleDuringAction
{ after(grammarAccess.getDuringActionRule()); } 
	 EOF 
;

// Rule DuringAction
ruleDuringAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDuringActionAccess().getGroup()); }
(rule__DuringAction__Group__0)
{ after(grammarAccess.getDuringActionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExitAction
entryRuleExitAction 
:
{ before(grammarAccess.getExitActionRule()); }
	 ruleExitAction
{ after(grammarAccess.getExitActionRule()); } 
	 EOF 
;

// Rule ExitAction
ruleExitAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExitActionAccess().getGroup()); }
(rule__ExitAction__Group__0)
{ after(grammarAccess.getExitActionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSuspendAction
entryRuleSuspendAction 
:
{ before(grammarAccess.getSuspendActionRule()); }
	 ruleSuspendAction
{ after(grammarAccess.getSuspendActionRule()); } 
	 EOF 
;

// Rule SuspendAction
ruleSuspendAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSuspendActionAccess().getGroup()); }
(rule__SuspendAction__Group__0)
{ after(grammarAccess.getSuspendActionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrecedingAction
entryRulePrecedingAction 
:
{ before(grammarAccess.getPrecedingActionRule()); }
	 rulePrecedingAction
{ after(grammarAccess.getPrecedingActionRule()); } 
	 EOF 
;

// Rule PrecedingAction
rulePrecedingAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrecedingActionAccess().getGroup()); }
(rule__PrecedingAction__Group__0)
{ after(grammarAccess.getPrecedingActionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSucceedingAction
entryRuleSucceedingAction 
:
{ before(grammarAccess.getSucceedingActionRule()); }
	 ruleSucceedingAction
{ after(grammarAccess.getSucceedingActionRule()); } 
	 EOF 
;

// Rule SucceedingAction
ruleSucceedingAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSucceedingActionAccess().getGroup()); }
(rule__SucceedingAction__Group__0)
{ after(grammarAccess.getSucceedingActionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleEquation
entryRuleEquation 
:
{ before(grammarAccess.getEquationRule()); }
	 ruleEquation
{ after(grammarAccess.getEquationRule()); } 
	 EOF 
;

// Rule Equation
ruleEquation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEquationAccess().getSubReferenceAssignmentParserRuleCall()); }
	ruleSubReferenceAssignment
{ after(grammarAccess.getEquationAccess().getSubReferenceAssignmentParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}







// Entry rule entryRuleRootScope
entryRuleRootScope 
:
{ before(grammarAccess.getRootScopeRule()); }
	 ruleRootScope
{ after(grammarAccess.getRootScopeRule()); } 
	 EOF 
;

// Rule RootScope
ruleRootScope
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRootScopeAccess().getGroup()); }
(rule__RootScope__Group__0)
{ after(grammarAccess.getRootScopeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleScope
entryRuleScope 
:
{ before(grammarAccess.getScopeRule()); }
	 ruleScope
{ after(grammarAccess.getScopeRule()); } 
	 EOF 
;

// Rule Scope
ruleScope
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getScopeAccess().getGroup()); }
(rule__Scope__Group__0)
{ after(grammarAccess.getScopeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTestEntity
entryRuleTestEntity 
:
{ before(grammarAccess.getTestEntityRule()); }
	 ruleTestEntity
{ after(grammarAccess.getTestEntityRule()); } 
	 EOF 
;

// Rule TestEntity
ruleTestEntity
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTestEntityAccess().getAlternatives()); }
(rule__TestEntity__Alternatives)
{ after(grammarAccess.getTestEntityAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnnotatedExpression
entryRuleAnnotatedExpression 
:
{ before(grammarAccess.getAnnotatedExpressionRule()); }
	 ruleAnnotatedExpression
{ after(grammarAccess.getAnnotatedExpressionRule()); } 
	 EOF 
;

// Rule AnnotatedExpression
ruleAnnotatedExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnnotatedExpressionAccess().getGroup()); }
(rule__AnnotatedExpression__Group__0)
{ after(grammarAccess.getAnnotatedExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDeclaration
entryRuleDeclaration 
:
{ before(grammarAccess.getDeclarationRule()); }
	 ruleDeclaration
{ after(grammarAccess.getDeclarationRule()); } 
	 EOF 
;

// Rule Declaration
ruleDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeclarationAccess().getAlternatives()); }
(rule__Declaration__Alternatives)
{ after(grammarAccess.getDeclarationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDeclarationWOSemicolon
entryRuleDeclarationWOSemicolon 
:
{ before(grammarAccess.getDeclarationWOSemicolonRule()); }
	 ruleDeclarationWOSemicolon
{ after(grammarAccess.getDeclarationWOSemicolonRule()); } 
	 EOF 
;

// Rule DeclarationWOSemicolon
ruleDeclarationWOSemicolon
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeclarationWOSemicolonAccess().getAlternatives()); }
(rule__DeclarationWOSemicolon__Alternatives)
{ after(grammarAccess.getDeclarationWOSemicolonAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableDeclaration
entryRuleVariableDeclaration 
:
{ before(grammarAccess.getVariableDeclarationRule()); }
	 ruleVariableDeclaration
{ after(grammarAccess.getVariableDeclarationRule()); } 
	 EOF 
;

// Rule VariableDeclaration
ruleVariableDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableDeclarationAccess().getGroup()); }
(rule__VariableDeclaration__Group__0)
{ after(grammarAccess.getVariableDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableDeclarationWOSemicolon
entryRuleVariableDeclarationWOSemicolon 
:
{ before(grammarAccess.getVariableDeclarationWOSemicolonRule()); }
	 ruleVariableDeclarationWOSemicolon
{ after(grammarAccess.getVariableDeclarationWOSemicolonRule()); } 
	 EOF 
;

// Rule VariableDeclarationWOSemicolon
ruleVariableDeclarationWOSemicolon
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableDeclarationWOSemicolonAccess().getGroup()); }
(rule__VariableDeclarationWOSemicolon__Group__0)
{ after(grammarAccess.getVariableDeclarationWOSemicolonAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNamespaceID
entryRuleNamespaceID 
:
{ before(grammarAccess.getNamespaceIDRule()); }
	 ruleNamespaceID
{ after(grammarAccess.getNamespaceIDRule()); } 
	 EOF 
;

// Rule NamespaceID
ruleNamespaceID
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNamespaceIDAccess().getGroup()); }
(rule__NamespaceID__Group__0)
{ after(grammarAccess.getNamespaceIDAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReferenceDeclaration
entryRuleReferenceDeclaration 
:
{ before(grammarAccess.getReferenceDeclarationRule()); }
	 ruleReferenceDeclaration
{ after(grammarAccess.getReferenceDeclarationRule()); } 
	 EOF 
;

// Rule ReferenceDeclaration
ruleReferenceDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReferenceDeclarationAccess().getGroup()); }
(rule__ReferenceDeclaration__Group__0)
{ after(grammarAccess.getReferenceDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReferenceDeclarationWOSemicolon
entryRuleReferenceDeclarationWOSemicolon 
:
{ before(grammarAccess.getReferenceDeclarationWOSemicolonRule()); }
	 ruleReferenceDeclarationWOSemicolon
{ after(grammarAccess.getReferenceDeclarationWOSemicolonRule()); } 
	 EOF 
;

// Rule ReferenceDeclarationWOSemicolon
ruleReferenceDeclarationWOSemicolon
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getGroup()); }
(rule__ReferenceDeclarationWOSemicolon__Group__0)
{ after(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleScheduleDeclaration
entryRuleScheduleDeclaration 
:
{ before(grammarAccess.getScheduleDeclarationRule()); }
	 ruleScheduleDeclaration
{ after(grammarAccess.getScheduleDeclarationRule()); } 
	 EOF 
;

// Rule ScheduleDeclaration
ruleScheduleDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getScheduleDeclarationAccess().getGroup()); }
(rule__ScheduleDeclaration__Group__0)
{ after(grammarAccess.getScheduleDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleScheduleDeclarationWOSemicolon
entryRuleScheduleDeclarationWOSemicolon 
:
{ before(grammarAccess.getScheduleDeclarationWOSemicolonRule()); }
	 ruleScheduleDeclarationWOSemicolon
{ after(grammarAccess.getScheduleDeclarationWOSemicolonRule()); } 
	 EOF 
;

// Rule ScheduleDeclarationWOSemicolon
ruleScheduleDeclarationWOSemicolon
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getGroup()); }
(rule__ScheduleDeclarationWOSemicolon__Group__0)
{ after(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSchedulePriority
entryRuleSchedulePriority 
:
{ before(grammarAccess.getSchedulePriorityRule()); }
	 ruleSchedulePriority
{ after(grammarAccess.getSchedulePriorityRule()); } 
	 EOF 
;

// Rule SchedulePriority
ruleSchedulePriority
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSchedulePriorityAccess().getGroup()); }
(rule__SchedulePriority__Group__0)
{ after(grammarAccess.getSchedulePriorityAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValuedObject
entryRuleValuedObject 
:
{ before(grammarAccess.getValuedObjectRule()); }
	 ruleValuedObject
{ after(grammarAccess.getValuedObjectRule()); } 
	 EOF 
;

// Rule ValuedObject
ruleValuedObject
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValuedObjectAccess().getGroup()); }
(rule__ValuedObject__Group__0)
{ after(grammarAccess.getValuedObjectAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEffect
entryRuleEffect 
:
{ before(grammarAccess.getEffectRule()); }
	 ruleEffect
{ after(grammarAccess.getEffectRule()); } 
	 EOF 
;

// Rule Effect
ruleEffect
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEffectAccess().getAlternatives()); }
(rule__Effect__Alternatives)
{ after(grammarAccess.getEffectAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEmission
entryRuleEmission 
:
{ before(grammarAccess.getEmissionRule()); }
	 ruleEmission
{ after(grammarAccess.getEmissionRule()); } 
	 EOF 
;

// Rule Emission
ruleEmission
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEmissionAccess().getGroup()); }
(rule__Emission__Group__0)
{ after(grammarAccess.getEmissionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssignment
entryRuleAssignment 
:
{ before(grammarAccess.getAssignmentRule()); }
	 ruleAssignment
{ after(grammarAccess.getAssignmentRule()); } 
	 EOF 
;

// Rule Assignment
ruleAssignment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssignmentAccess().getGroup()); }
(rule__Assignment__Group__0)
{ after(grammarAccess.getAssignmentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSubReferenceAssignment
entryRuleSubReferenceAssignment 
:
{ before(grammarAccess.getSubReferenceAssignmentRule()); }
	 ruleSubReferenceAssignment
{ after(grammarAccess.getSubReferenceAssignmentRule()); } 
	 EOF 
;

// Rule SubReferenceAssignment
ruleSubReferenceAssignment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSubReferenceAssignmentAccess().getGroup()); }
(rule__SubReferenceAssignment__Group__0)
{ after(grammarAccess.getSubReferenceAssignmentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePostfixEffect
entryRulePostfixEffect 
:
{ before(grammarAccess.getPostfixEffectRule()); }
	 rulePostfixEffect
{ after(grammarAccess.getPostfixEffectRule()); } 
	 EOF 
;

// Rule PostfixEffect
rulePostfixEffect
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPostfixEffectAccess().getGroup()); }
(rule__PostfixEffect__Group__0)
{ after(grammarAccess.getPostfixEffectAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHostcodeEffect
entryRuleHostcodeEffect 
:
{ before(grammarAccess.getHostcodeEffectRule()); }
	 ruleHostcodeEffect
{ after(grammarAccess.getHostcodeEffectRule()); } 
	 EOF 
;

// Rule HostcodeEffect
ruleHostcodeEffect
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHostcodeEffectAccess().getGroup()); }
(rule__HostcodeEffect__Group__0)
{ after(grammarAccess.getHostcodeEffectAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReferenceCallEffect
entryRuleReferenceCallEffect 
:
{ before(grammarAccess.getReferenceCallEffectRule()); }
	 ruleReferenceCallEffect
{ after(grammarAccess.getReferenceCallEffectRule()); } 
	 EOF 
;

// Rule ReferenceCallEffect
ruleReferenceCallEffect
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReferenceCallEffectAccess().getGroup()); }
(rule__ReferenceCallEffect__Group__0)
{ after(grammarAccess.getReferenceCallEffectAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionCallEffect
entryRuleFunctionCallEffect 
:
{ before(grammarAccess.getFunctionCallEffectRule()); }
	 ruleFunctionCallEffect
{ after(grammarAccess.getFunctionCallEffectRule()); } 
	 EOF 
;

// Rule FunctionCallEffect
ruleFunctionCallEffect
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getAlternatives()); }
(rule__FunctionCallEffect__Alternatives)
{ after(grammarAccess.getFunctionCallEffectAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrintCallEffect
entryRulePrintCallEffect 
:
{ before(grammarAccess.getPrintCallEffectRule()); }
	 rulePrintCallEffect
{ after(grammarAccess.getPrintCallEffectRule()); } 
	 EOF 
;

// Rule PrintCallEffect
rulePrintCallEffect
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrintCallEffectAccess().getGroup()); }
(rule__PrintCallEffect__Group__0)
{ after(grammarAccess.getPrintCallEffectAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getGroup()); }
(rule__Expression__Group__0)
{ after(grammarAccess.getExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBoolExpression
entryRuleBoolExpression 
:
{ before(grammarAccess.getBoolExpressionRule()); }
	 ruleBoolExpression
{ after(grammarAccess.getBoolExpressionRule()); } 
	 EOF 
;

// Rule BoolExpression
ruleBoolExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBoolExpressionAccess().getLogicalOrExpressionParserRuleCall()); }
	ruleLogicalOrExpression
{ after(grammarAccess.getBoolExpressionAccess().getLogicalOrExpressionParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLogicalOrExpression
entryRuleLogicalOrExpression 
:
{ before(grammarAccess.getLogicalOrExpressionRule()); }
	 ruleLogicalOrExpression
{ after(grammarAccess.getLogicalOrExpressionRule()); } 
	 EOF 
;

// Rule LogicalOrExpression
ruleLogicalOrExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLogicalOrExpressionAccess().getGroup()); }
(rule__LogicalOrExpression__Group__0)
{ after(grammarAccess.getLogicalOrExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLogicalAndExpression
entryRuleLogicalAndExpression 
:
{ before(grammarAccess.getLogicalAndExpressionRule()); }
	 ruleLogicalAndExpression
{ after(grammarAccess.getLogicalAndExpressionRule()); } 
	 EOF 
;

// Rule LogicalAndExpression
ruleLogicalAndExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLogicalAndExpressionAccess().getGroup()); }
(rule__LogicalAndExpression__Group__0)
{ after(grammarAccess.getLogicalAndExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBitwiseOrExpression
entryRuleBitwiseOrExpression 
:
{ before(grammarAccess.getBitwiseOrExpressionRule()); }
	 ruleBitwiseOrExpression
{ after(grammarAccess.getBitwiseOrExpressionRule()); } 
	 EOF 
;

// Rule BitwiseOrExpression
ruleBitwiseOrExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBitwiseOrExpressionAccess().getGroup()); }
(rule__BitwiseOrExpression__Group__0)
{ after(grammarAccess.getBitwiseOrExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBitwiseAndExpression
entryRuleBitwiseAndExpression 
:
{ before(grammarAccess.getBitwiseAndExpressionRule()); }
	 ruleBitwiseAndExpression
{ after(grammarAccess.getBitwiseAndExpressionRule()); } 
	 EOF 
;

// Rule BitwiseAndExpression
ruleBitwiseAndExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBitwiseAndExpressionAccess().getGroup()); }
(rule__BitwiseAndExpression__Group__0)
{ after(grammarAccess.getBitwiseAndExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCompareOperation
entryRuleCompareOperation 
:
{ before(grammarAccess.getCompareOperationRule()); }
	 ruleCompareOperation
{ after(grammarAccess.getCompareOperationRule()); } 
	 EOF 
;

// Rule CompareOperation
ruleCompareOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCompareOperationAccess().getGroup()); }
(rule__CompareOperation__Group__0)
{ after(grammarAccess.getCompareOperationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNotOrValuedExpression
entryRuleNotOrValuedExpression 
:
{ before(grammarAccess.getNotOrValuedExpressionRule()); }
	 ruleNotOrValuedExpression
{ after(grammarAccess.getNotOrValuedExpressionRule()); } 
	 EOF 
;

// Rule NotOrValuedExpression
ruleNotOrValuedExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNotOrValuedExpressionAccess().getAlternatives()); }
(rule__NotOrValuedExpression__Alternatives)
{ after(grammarAccess.getNotOrValuedExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNotExpression
entryRuleNotExpression 
:
{ before(grammarAccess.getNotExpressionRule()); }
	 ruleNotExpression
{ after(grammarAccess.getNotExpressionRule()); } 
	 EOF 
;

// Rule NotExpression
ruleNotExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNotExpressionAccess().getAlternatives()); }
(rule__NotExpression__Alternatives)
{ after(grammarAccess.getNotExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValuedExpression
entryRuleValuedExpression 
:
{ before(grammarAccess.getValuedExpressionRule()); }
	 ruleValuedExpression
{ after(grammarAccess.getValuedExpressionRule()); } 
	 EOF 
;

// Rule ValuedExpression
ruleValuedExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValuedExpressionAccess().getAddExpressionParserRuleCall()); }
	ruleAddExpression
{ after(grammarAccess.getValuedExpressionAccess().getAddExpressionParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAddExpression
entryRuleAddExpression 
:
{ before(grammarAccess.getAddExpressionRule()); }
	 ruleAddExpression
{ after(grammarAccess.getAddExpressionRule()); } 
	 EOF 
;

// Rule AddExpression
ruleAddExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAddExpressionAccess().getGroup()); }
(rule__AddExpression__Group__0)
{ after(grammarAccess.getAddExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSubExpression
entryRuleSubExpression 
:
{ before(grammarAccess.getSubExpressionRule()); }
	 ruleSubExpression
{ after(grammarAccess.getSubExpressionRule()); } 
	 EOF 
;

// Rule SubExpression
ruleSubExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSubExpressionAccess().getGroup()); }
(rule__SubExpression__Group__0)
{ after(grammarAccess.getSubExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultExpression
entryRuleMultExpression 
:
{ before(grammarAccess.getMultExpressionRule()); }
	 ruleMultExpression
{ after(grammarAccess.getMultExpressionRule()); } 
	 EOF 
;

// Rule MultExpression
ruleMultExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultExpressionAccess().getGroup()); }
(rule__MultExpression__Group__0)
{ after(grammarAccess.getMultExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDivExpression
entryRuleDivExpression 
:
{ before(grammarAccess.getDivExpressionRule()); }
	 ruleDivExpression
{ after(grammarAccess.getDivExpressionRule()); } 
	 EOF 
;

// Rule DivExpression
ruleDivExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDivExpressionAccess().getGroup()); }
(rule__DivExpression__Group__0)
{ after(grammarAccess.getDivExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModExpression
entryRuleModExpression 
:
{ before(grammarAccess.getModExpressionRule()); }
	 ruleModExpression
{ after(grammarAccess.getModExpressionRule()); } 
	 EOF 
;

// Rule ModExpression
ruleModExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModExpressionAccess().getGroup()); }
(rule__ModExpression__Group__0)
{ after(grammarAccess.getModExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNegExpression
entryRuleNegExpression 
:
{ before(grammarAccess.getNegExpressionRule()); }
	 ruleNegExpression
{ after(grammarAccess.getNegExpressionRule()); } 
	 EOF 
;

// Rule NegExpression
ruleNegExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNegExpressionAccess().getAlternatives()); }
(rule__NegExpression__Alternatives)
{ after(grammarAccess.getNegExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAtomicExpression
entryRuleAtomicExpression 
:
{ before(grammarAccess.getAtomicExpressionRule()); }
	 ruleAtomicExpression
{ after(grammarAccess.getAtomicExpressionRule()); } 
	 EOF 
;

// Rule AtomicExpression
ruleAtomicExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAtomicExpressionAccess().getAlternatives()); }
(rule__AtomicExpression__Alternatives)
{ after(grammarAccess.getAtomicExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAtomicValuedExpression
entryRuleAtomicValuedExpression 
:
{ before(grammarAccess.getAtomicValuedExpressionRule()); }
	 ruleAtomicValuedExpression
{ after(grammarAccess.getAtomicValuedExpressionRule()); } 
	 EOF 
;

// Rule AtomicValuedExpression
ruleAtomicValuedExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAtomicValuedExpressionAccess().getAlternatives()); }
(rule__AtomicValuedExpression__Alternatives)
{ after(grammarAccess.getAtomicValuedExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValuedObjectTestExpression
entryRuleValuedObjectTestExpression 
:
{ before(grammarAccess.getValuedObjectTestExpressionRule()); }
	 ruleValuedObjectTestExpression
{ after(grammarAccess.getValuedObjectTestExpressionRule()); } 
	 EOF 
;

// Rule ValuedObjectTestExpression
ruleValuedObjectTestExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getAlternatives()); }
(rule__ValuedObjectTestExpression__Alternatives)
{ after(grammarAccess.getValuedObjectTestExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimeID
entryRulePrimeID 
:
{ before(grammarAccess.getPrimeIDRule()); }
	 rulePrimeID
{ after(grammarAccess.getPrimeIDRule()); } 
	 EOF 
;

// Rule PrimeID
rulePrimeID
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimeIDAccess().getGroup()); }
(rule__PrimeID__Group__0)
{ after(grammarAccess.getPrimeIDAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValuedObjectReference
entryRuleValuedObjectReference 
:
{ before(grammarAccess.getValuedObjectReferenceRule()); }
	 ruleValuedObjectReference
{ after(grammarAccess.getValuedObjectReferenceRule()); } 
	 EOF 
;

// Rule ValuedObjectReference
ruleValuedObjectReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValuedObjectReferenceAccess().getGroup()); }
(rule__ValuedObjectReference__Group__0)
{ after(grammarAccess.getValuedObjectReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleScheduleObjectReference
entryRuleScheduleObjectReference 
:
{ before(grammarAccess.getScheduleObjectReferenceRule()); }
	 ruleScheduleObjectReference
{ after(grammarAccess.getScheduleObjectReferenceRule()); } 
	 EOF 
;

// Rule ScheduleObjectReference
ruleScheduleObjectReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getScheduleObjectReferenceAccess().getGroup()); }
(rule__ScheduleObjectReference__Group__0)
{ after(grammarAccess.getScheduleObjectReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReferenceCall
entryRuleReferenceCall 
:
{ before(grammarAccess.getReferenceCallRule()); }
	 ruleReferenceCall
{ after(grammarAccess.getReferenceCallRule()); } 
	 EOF 
;

// Rule ReferenceCall
ruleReferenceCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReferenceCallAccess().getGroup()); }
(rule__ReferenceCall__Group__0)
{ after(grammarAccess.getReferenceCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionCall
entryRuleFunctionCall 
:
{ before(grammarAccess.getFunctionCallRule()); }
	 ruleFunctionCall
{ after(grammarAccess.getFunctionCallRule()); } 
	 EOF 
;

// Rule FunctionCall
ruleFunctionCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionCallAccess().getAlternatives()); }
(rule__FunctionCall__Alternatives)
{ after(grammarAccess.getFunctionCallAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTextExpression
entryRuleTextExpression 
:
{ before(grammarAccess.getTextExpressionRule()); }
	 ruleTextExpression
{ after(grammarAccess.getTextExpressionRule()); } 
	 EOF 
;

// Rule TextExpression
ruleTextExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTextExpressionAccess().getTextAssignment()); }
(rule__TextExpression__TextAssignment)
{ after(grammarAccess.getTextExpressionAccess().getTextAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntValue
entryRuleIntValue 
:
{ before(grammarAccess.getIntValueRule()); }
	 ruleIntValue
{ after(grammarAccess.getIntValueRule()); } 
	 EOF 
;

// Rule IntValue
ruleIntValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntValueAccess().getValueAssignment()); }
(rule__IntValue__ValueAssignment)
{ after(grammarAccess.getIntValueAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFloatValue
entryRuleFloatValue 
:
{ before(grammarAccess.getFloatValueRule()); }
	 ruleFloatValue
{ after(grammarAccess.getFloatValueRule()); } 
	 EOF 
;

// Rule FloatValue
ruleFloatValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFloatValueAccess().getValueAssignment()); }
(rule__FloatValue__ValueAssignment)
{ after(grammarAccess.getFloatValueAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBoolValue
entryRuleBoolValue 
:
{ before(grammarAccess.getBoolValueRule()); }
	 ruleBoolValue
{ after(grammarAccess.getBoolValueRule()); } 
	 EOF 
;

// Rule BoolValue
ruleBoolValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBoolValueAccess().getValueAssignment()); }
(rule__BoolValue__ValueAssignment)
{ after(grammarAccess.getBoolValueAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringValue
entryRuleStringValue 
:
{ before(grammarAccess.getStringValueRule()); }
	 ruleStringValue
{ after(grammarAccess.getStringValueRule()); } 
	 EOF 
;

// Rule StringValue
ruleStringValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringValueAccess().getValueAssignment()); }
(rule__StringValue__ValueAssignment)
{ after(grammarAccess.getStringValueAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}







// Entry rule entryRuleAnnotation
entryRuleAnnotation 
:
{ before(grammarAccess.getAnnotationRule()); }
	 ruleAnnotation
{ after(grammarAccess.getAnnotationRule()); } 
	 EOF 
;

// Rule Annotation
ruleAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnnotationAccess().getAlternatives()); }
(rule__Annotation__Alternatives)
{ after(grammarAccess.getAnnotationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePragma
entryRulePragma 
:
{ before(grammarAccess.getPragmaRule()); }
	 rulePragma
{ after(grammarAccess.getPragmaRule()); } 
	 EOF 
;

// Rule Pragma
rulePragma
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPragmaAccess().getAlternatives()); }
(rule__Pragma__Alternatives)
{ after(grammarAccess.getPragmaAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleRestrictedTypeAnnotation
entryRuleRestrictedTypeAnnotation 
:
{ before(grammarAccess.getRestrictedTypeAnnotationRule()); }
	 ruleRestrictedTypeAnnotation
{ after(grammarAccess.getRestrictedTypeAnnotationRule()); } 
	 EOF 
;

// Rule RestrictedTypeAnnotation
ruleRestrictedTypeAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRestrictedTypeAnnotationAccess().getAlternatives()); }
(rule__RestrictedTypeAnnotation__Alternatives)
{ after(grammarAccess.getRestrictedTypeAnnotationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQuotedStringAnnotation
entryRuleQuotedStringAnnotation 
:
{ before(grammarAccess.getQuotedStringAnnotationRule()); }
	 ruleQuotedStringAnnotation
{ after(grammarAccess.getQuotedStringAnnotationRule()); } 
	 EOF 
;

// Rule QuotedStringAnnotation
ruleQuotedStringAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQuotedStringAnnotationAccess().getAlternatives()); }
(rule__QuotedStringAnnotation__Alternatives)
{ after(grammarAccess.getQuotedStringAnnotationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCommentAnnotation
entryRuleCommentAnnotation 
:
{ before(grammarAccess.getCommentAnnotationRule()); }
	 ruleCommentAnnotation
{ after(grammarAccess.getCommentAnnotationRule()); } 
	 EOF 
;

// Rule CommentAnnotation
ruleCommentAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCommentAnnotationAccess().getValuesAssignment()); }
(rule__CommentAnnotation__ValuesAssignment)
{ after(grammarAccess.getCommentAnnotationAccess().getValuesAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCommentAnnotatonSL
entryRuleCommentAnnotatonSL 
:
{ before(grammarAccess.getCommentAnnotatonSLRule()); }
	 ruleCommentAnnotatonSL
{ after(grammarAccess.getCommentAnnotatonSLRule()); } 
	 EOF 
;

// Rule CommentAnnotatonSL
ruleCommentAnnotatonSL
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCommentAnnotatonSLAccess().getValuesAssignment()); }
(rule__CommentAnnotatonSL__ValuesAssignment)
{ after(grammarAccess.getCommentAnnotatonSLAccess().getValuesAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTagAnnotation
entryRuleTagAnnotation 
:
{ before(grammarAccess.getTagAnnotationRule()); }
	 ruleTagAnnotation
{ after(grammarAccess.getTagAnnotationRule()); } 
	 EOF 
;

// Rule TagAnnotation
ruleTagAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTagAnnotationAccess().getGroup()); }
(rule__TagAnnotation__Group__0)
{ after(grammarAccess.getTagAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePragmaTag
entryRulePragmaTag 
:
{ before(grammarAccess.getPragmaTagRule()); }
	 rulePragmaTag
{ after(grammarAccess.getPragmaTagRule()); } 
	 EOF 
;

// Rule PragmaTag
rulePragmaTag
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPragmaTagAccess().getGroup()); }
(rule__PragmaTag__Group__0)
{ after(grammarAccess.getPragmaTagAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleKeyStringValueAnnotation
entryRuleKeyStringValueAnnotation 
:
{ before(grammarAccess.getKeyStringValueAnnotationRule()); }
	 ruleKeyStringValueAnnotation
{ after(grammarAccess.getKeyStringValueAnnotationRule()); } 
	 EOF 
;

// Rule KeyStringValueAnnotation
ruleKeyStringValueAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getGroup()); }
(rule__KeyStringValueAnnotation__Group__0)
{ after(grammarAccess.getKeyStringValueAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRestrictedKeyStringValueAnnotation
entryRuleRestrictedKeyStringValueAnnotation 
:
{ before(grammarAccess.getRestrictedKeyStringValueAnnotationRule()); }
	 ruleRestrictedKeyStringValueAnnotation
{ after(grammarAccess.getRestrictedKeyStringValueAnnotationRule()); } 
	 EOF 
;

// Rule RestrictedKeyStringValueAnnotation
ruleRestrictedKeyStringValueAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getGroup()); }
(rule__RestrictedKeyStringValueAnnotation__Group__0)
{ after(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringPragma
entryRuleStringPragma 
:
{ before(grammarAccess.getStringPragmaRule()); }
	 ruleStringPragma
{ after(grammarAccess.getStringPragmaRule()); } 
	 EOF 
;

// Rule StringPragma
ruleStringPragma
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringPragmaAccess().getGroup()); }
(rule__StringPragma__Group__0)
{ after(grammarAccess.getStringPragmaAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypedKeyStringValueAnnotation
entryRuleTypedKeyStringValueAnnotation 
:
{ before(grammarAccess.getTypedKeyStringValueAnnotationRule()); }
	 ruleTypedKeyStringValueAnnotation
{ after(grammarAccess.getTypedKeyStringValueAnnotationRule()); } 
	 EOF 
;

// Rule TypedKeyStringValueAnnotation
ruleTypedKeyStringValueAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getGroup()); }
(rule__TypedKeyStringValueAnnotation__Group__0)
{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRestrictedTypedKeyStringValueAnnotation
entryRuleRestrictedTypedKeyStringValueAnnotation 
:
{ before(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule()); }
	 ruleRestrictedTypedKeyStringValueAnnotation
{ after(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule()); } 
	 EOF 
;

// Rule RestrictedTypedKeyStringValueAnnotation
ruleRestrictedTypedKeyStringValueAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getGroup()); }
(rule__RestrictedTypedKeyStringValueAnnotation__Group__0)
{ after(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQuotedKeyStringValueAnnotation
entryRuleQuotedKeyStringValueAnnotation 
:
{ before(grammarAccess.getQuotedKeyStringValueAnnotationRule()); }
	 ruleQuotedKeyStringValueAnnotation
{ after(grammarAccess.getQuotedKeyStringValueAnnotationRule()); } 
	 EOF 
;

// Rule QuotedKeyStringValueAnnotation
ruleQuotedKeyStringValueAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getGroup()); }
(rule__QuotedKeyStringValueAnnotation__Group__0)
{ after(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQuotedTypedKeyStringValueAnnotation
entryRuleQuotedTypedKeyStringValueAnnotation 
:
{ before(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule()); }
	 ruleQuotedTypedKeyStringValueAnnotation
{ after(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule()); } 
	 EOF 
;

// Rule QuotedTypedKeyStringValueAnnotation
ruleQuotedTypedKeyStringValueAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getGroup()); }
(rule__QuotedTypedKeyStringValueAnnotation__Group__0)
{ after(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleEStringBoolean
entryRuleEStringBoolean 
:
{ before(grammarAccess.getEStringBooleanRule()); }
	 ruleEStringBoolean
{ after(grammarAccess.getEStringBooleanRule()); } 
	 EOF 
;

// Rule EStringBoolean
ruleEStringBoolean
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEStringBooleanAccess().getAlternatives()); }
(rule__EStringBoolean__Alternatives)
{ after(grammarAccess.getEStringBooleanAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEStringAllTypes
entryRuleEStringAllTypes 
:
{ before(grammarAccess.getEStringAllTypesRule()); }
	 ruleEStringAllTypes
{ after(grammarAccess.getEStringAllTypesRule()); } 
	 EOF 
;

// Rule EStringAllTypes
ruleEStringAllTypes
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEStringAllTypesAccess().getAlternatives()); }
(rule__EStringAllTypes__Alternatives)
{ after(grammarAccess.getEStringAllTypesAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExtendedID
entryRuleExtendedID 
:
{ before(grammarAccess.getExtendedIDRule()); }
	 ruleExtendedID
{ after(grammarAccess.getExtendedIDRule()); } 
	 EOF 
;

// Rule ExtendedID
ruleExtendedID
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExtendedIDAccess().getGroup()); }
(rule__ExtendedID__Group__0)
{ after(grammarAccess.getExtendedIDAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleInteger
entryRuleInteger 
:
{ before(grammarAccess.getIntegerRule()); }
	 ruleInteger
{ after(grammarAccess.getIntegerRule()); } 
	 EOF 
;

// Rule Integer
ruleInteger
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntegerAccess().getGroup()); }
(rule__Integer__Group__0)
{ after(grammarAccess.getIntegerAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFloateger
entryRuleFloateger 
:
{ before(grammarAccess.getFloategerRule()); }
	 ruleFloateger
{ after(grammarAccess.getFloategerRule()); } 
	 EOF 
;

// Rule Floateger
ruleFloateger
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFloategerAccess().getGroup()); }
(rule__Floateger__Group__0)
{ after(grammarAccess.getFloategerAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule PreemptionType
rulePreemptionType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreemptionTypeAccess().getAlternatives()); }
(rule__PreemptionType__Alternatives)
{ after(grammarAccess.getPreemptionTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule PreemptionTypeLegacy
rulePreemptionTypeLegacy
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreemptionTypeLegacyAccess().getAlternatives()); }
(rule__PreemptionTypeLegacy__Alternatives)
{ after(grammarAccess.getPreemptionTypeLegacyAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule DelayType
ruleDelayType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayTypeAccess().getAlternatives()); }
(rule__DelayType__Alternatives)
{ after(grammarAccess.getDelayTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule HistoryType
ruleHistoryType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHistoryTypeAccess().getAlternatives()); }
(rule__HistoryType__Alternatives)
{ after(grammarAccess.getHistoryTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule SchedulePriorityType
ruleSchedulePriorityType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSchedulePriorityTypeAccess().getAlternatives()); }
(rule__SchedulePriorityType__Alternatives)
{ after(grammarAccess.getSchedulePriorityTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule AssignOperator
ruleAssignOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignOperatorAccess().getAlternatives()); }
(rule__AssignOperator__Alternatives)
{ after(grammarAccess.getAssignOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule PostfixOperator
rulePostfixOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixOperatorAccess().getAlternatives()); }
(rule__PostfixOperator__Alternatives)
{ after(grammarAccess.getPostfixOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule CompareOperator
ruleCompareOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperatorAccess().getAlternatives()); }
(rule__CompareOperator__Alternatives)
{ after(grammarAccess.getCompareOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule PreOperator
rulePreOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreOperatorAccess().getPREEnumLiteralDeclaration()); }
(	'pre' 
)
{ after(grammarAccess.getPreOperatorAccess().getPREEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule BitwiseOrOperator
ruleBitwiseOrOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseOrOperatorAccess().getBITWISE_OREnumLiteralDeclaration()); }
(	'|' 
)
{ after(grammarAccess.getBitwiseOrOperatorAccess().getBITWISE_OREnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule BitwiseAndOperator
ruleBitwiseAndOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseAndOperatorAccess().getBITWISE_ANDEnumLiteralDeclaration()); }
(	'&' 
)
{ after(grammarAccess.getBitwiseAndOperatorAccess().getBITWISE_ANDEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule NotOperator
ruleNotOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotOperatorAccess().getNOTEnumLiteralDeclaration()); }
(	'!' 
)
{ after(grammarAccess.getNotOperatorAccess().getNOTEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule AddOperator
ruleAddOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddOperatorAccess().getADDEnumLiteralDeclaration()); }
(	'+' 
)
{ after(grammarAccess.getAddOperatorAccess().getADDEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule SubOperator
ruleSubOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubOperatorAccess().getSUBEnumLiteralDeclaration()); }
(	'-' 
)
{ after(grammarAccess.getSubOperatorAccess().getSUBEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule MultOperator
ruleMultOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultOperatorAccess().getMULTEnumLiteralDeclaration()); }
(	'*' 
)
{ after(grammarAccess.getMultOperatorAccess().getMULTEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule ModOperator
ruleModOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModOperatorAccess().getMODEnumLiteralDeclaration()); }
(	'%' 
)
{ after(grammarAccess.getModOperatorAccess().getMODEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule DivOperator
ruleDivOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivOperatorAccess().getDIVEnumLiteralDeclaration()); }
(	'/' 
)
{ after(grammarAccess.getDivOperatorAccess().getDIVEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule ValOperator
ruleValOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValOperatorAccess().getVALEnumLiteralDeclaration()); }
(	'val' 
)
{ after(grammarAccess.getValOperatorAccess().getVALEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule LogicalOrOperator
ruleLogicalOrOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalOrOperatorAccess().getLOGICAL_OREnumLiteralDeclaration()); }
(	'||' 
)
{ after(grammarAccess.getLogicalOrOperatorAccess().getLOGICAL_OREnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule LogicalAndOperator
ruleLogicalAndOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalAndOperatorAccess().getLOGICAL_ANDEnumLiteralDeclaration()); }
(	'&&' 
)
{ after(grammarAccess.getLogicalAndOperatorAccess().getLOGICAL_ANDEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}







// Rule ValueType
ruleValueType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueTypeAccess().getAlternatives()); }
(rule__ValueType__Alternatives)
{ after(grammarAccess.getValueTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Rule CombineOperator
ruleCombineOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCombineOperatorAccess().getAlternatives()); }
(rule__CombineOperator__Alternatives)
{ after(grammarAccess.getCombineOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__RootState__Alternatives_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootStateAccess().getRegionsAssignment_7_0()); }
(rule__RootState__RegionsAssignment_7_0)
{ after(grammarAccess.getRootStateAccess().getRegionsAssignment_7_0()); }
)

    |(
{ before(grammarAccess.getRootStateAccess().getRegionsAssignment_7_1()); }
(rule__RootState__RegionsAssignment_7_1)
{ after(grammarAccess.getRootStateAccess().getRegionsAssignment_7_1()); }
)

    |(
{ before(grammarAccess.getRootStateAccess().getRegionsAssignment_7_2()); }
(rule__RootState__RegionsAssignment_7_2)*
{ after(grammarAccess.getRootStateAccess().getRegionsAssignment_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__Alternatives_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getGroup_8_0()); }
(rule__State__Group_8_0__0)
{ after(grammarAccess.getStateAccess().getGroup_8_0()); }
)

    |(
{ before(grammarAccess.getStateAccess().getGroup_8_1()); }
(rule__State__Group_8_1__0)
{ after(grammarAccess.getStateAccess().getGroup_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__Alternatives_8_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getRegionsAssignment_8_1_3_0()); }
(rule__State__RegionsAssignment_8_1_3_0)
{ after(grammarAccess.getStateAccess().getRegionsAssignment_8_1_3_0()); }
)

    |(
{ before(grammarAccess.getStateAccess().getRegionsAssignment_8_1_3_1()); }
(rule__State__RegionsAssignment_8_1_3_1)
{ after(grammarAccess.getStateAccess().getRegionsAssignment_8_1_3_1()); }
)

    |(
{ before(grammarAccess.getStateAccess().getRegionsAssignment_8_1_3_2()); }
(rule__State__RegionsAssignment_8_1_3_2)*
{ after(grammarAccess.getStateAccess().getRegionsAssignment_8_1_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeCall__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeCallAccess().getGroup_1_0()); }
(rule__ScopeCall__Group_1_0__0)
{ after(grammarAccess.getScopeCallAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getScopeCallAccess().getGroup_1_1()); }
(rule__ScopeCall__Group_1_1__0)
{ after(grammarAccess.getScopeCallAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__PreemptionAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getPreemptionPreemptionTypeEnumRuleCall_1_0_0()); }
	rulePreemptionType
{ after(grammarAccess.getTransitionAccess().getPreemptionPreemptionTypeEnumRuleCall_1_0_0()); }
)

    |(
{ before(grammarAccess.getTransitionAccess().getPreemptionPreemptionTypeLegacyEnumRuleCall_1_0_1()); }
	rulePreemptionTypeLegacy
{ after(grammarAccess.getTransitionAccess().getPreemptionPreemptionTypeLegacyEnumRuleCall_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Alternatives_6_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getTriggerAssignment_6_2_0()); }
(rule__Transition__TriggerAssignment_6_2_0)
{ after(grammarAccess.getTransitionAccess().getTriggerAssignment_6_2_0()); }
)

    |(
{ before(grammarAccess.getTransitionAccess().getTriggerAssignment_6_2_1()); }
(rule__Transition__TriggerAssignment_6_2_1)
{ after(grammarAccess.getTransitionAccess().getTriggerAssignment_6_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Region__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionAccess().getControlflowRegionParserRuleCall_0()); }
	ruleControlflowRegion
{ after(grammarAccess.getRegionAccess().getControlflowRegionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getRegionAccess().getNestedControlflowRegionParserRuleCall_1()); }
	ruleNestedControlflowRegion
{ after(grammarAccess.getRegionAccess().getNestedControlflowRegionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getRegionAccess().getDataflowRegionParserRuleCall_2()); }
	ruleDataflowRegion
{ after(grammarAccess.getRegionAccess().getDataflowRegionParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NestedControlflowRegion__Alternatives_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedControlflowRegionAccess().getStatesAssignment_8_0()); }
(rule__NestedControlflowRegion__StatesAssignment_8_0)
{ after(grammarAccess.getNestedControlflowRegionAccess().getStatesAssignment_8_0()); }
)

    |(
(
{ before(grammarAccess.getNestedControlflowRegionAccess().getStatesAssignment_8_1()); }
(rule__NestedControlflowRegion__StatesAssignment_8_1)
{ after(grammarAccess.getNestedControlflowRegionAccess().getStatesAssignment_8_1()); }
)
(
{ before(grammarAccess.getNestedControlflowRegionAccess().getStatesAssignment_8_1()); }
(rule__NestedControlflowRegion__StatesAssignment_8_1)*
{ after(grammarAccess.getNestedControlflowRegionAccess().getStatesAssignment_8_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntOrReference__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntOrReferenceAccess().getIntValueParserRuleCall_0()); }
	ruleIntValue
{ after(grammarAccess.getIntOrReferenceAccess().getIntValueParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getIntOrReferenceAccess().getValuedObjectReferenceParserRuleCall_1()); }
	ruleValuedObjectReference
{ after(grammarAccess.getIntOrReferenceAccess().getValuedObjectReferenceParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalAction__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalActionAccess().getEntryActionParserRuleCall_0()); }
	ruleEntryAction
{ after(grammarAccess.getLocalActionAccess().getEntryActionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getLocalActionAccess().getDuringActionParserRuleCall_1()); }
	ruleDuringAction
{ after(grammarAccess.getLocalActionAccess().getDuringActionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getLocalActionAccess().getExitActionParserRuleCall_2()); }
	ruleExitAction
{ after(grammarAccess.getLocalActionAccess().getExitActionParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getLocalActionAccess().getSuspendActionParserRuleCall_3()); }
	ruleSuspendAction
{ after(grammarAccess.getLocalActionAccess().getSuspendActionParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getLocalActionAccess().getPrecedingActionParserRuleCall_4()); }
	rulePrecedingAction
{ after(grammarAccess.getLocalActionAccess().getPrecedingActionParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getLocalActionAccess().getSucceedingActionParserRuleCall_5()); }
	ruleSucceedingAction
{ after(grammarAccess.getLocalActionAccess().getSucceedingActionParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TestEntity__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestEntityAccess().getExpressionAssignment_0()); }
(rule__TestEntity__ExpressionAssignment_0)
{ after(grammarAccess.getTestEntityAccess().getExpressionAssignment_0()); }
)

    |(
{ before(grammarAccess.getTestEntityAccess().getEffectAssignment_1()); }
(rule__TestEntity__EffectAssignment_1)
{ after(grammarAccess.getTestEntityAccess().getEffectAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getVariableDeclarationParserRuleCall_0()); }
	ruleVariableDeclaration
{ after(grammarAccess.getDeclarationAccess().getVariableDeclarationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDeclarationAccess().getReferenceDeclarationParserRuleCall_1()); }
	ruleReferenceDeclaration
{ after(grammarAccess.getDeclarationAccess().getReferenceDeclarationParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getDeclarationAccess().getScheduleDeclarationParserRuleCall_2()); }
	ruleScheduleDeclaration
{ after(grammarAccess.getDeclarationAccess().getScheduleDeclarationParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationWOSemicolon__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationWOSemicolonAccess().getVariableDeclarationWOSemicolonParserRuleCall_0()); }
	ruleVariableDeclarationWOSemicolon
{ after(grammarAccess.getDeclarationWOSemicolonAccess().getVariableDeclarationWOSemicolonParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDeclarationWOSemicolonAccess().getReferenceDeclarationWOSemicolonParserRuleCall_1()); }
	ruleReferenceDeclarationWOSemicolon
{ after(grammarAccess.getDeclarationWOSemicolonAccess().getReferenceDeclarationWOSemicolonParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getDeclarationWOSemicolonAccess().getScheduleDeclarationWOSemicolonParserRuleCall_2()); }
	ruleScheduleDeclarationWOSemicolon
{ after(grammarAccess.getDeclarationWOSemicolonAccess().getScheduleDeclarationWOSemicolonParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Alternatives_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getGroup_5_0()); }
(rule__VariableDeclaration__Group_5_0__0)
{ after(grammarAccess.getVariableDeclarationAccess().getGroup_5_0()); }
)

    |(
{ before(grammarAccess.getVariableDeclarationAccess().getSignalAssignment_5_1()); }
(rule__VariableDeclaration__SignalAssignment_5_1)
{ after(grammarAccess.getVariableDeclarationAccess().getSignalAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationWOSemicolon__Alternatives_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationWOSemicolonAccess().getGroup_5_0()); }
(rule__VariableDeclarationWOSemicolon__Group_5_0__0)
{ after(grammarAccess.getVariableDeclarationWOSemicolonAccess().getGroup_5_0()); }
)

    |(
{ before(grammarAccess.getVariableDeclarationWOSemicolonAccess().getSignalAssignment_5_1()); }
(rule__VariableDeclarationWOSemicolon__SignalAssignment_5_1)
{ after(grammarAccess.getVariableDeclarationWOSemicolonAccess().getSignalAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceDeclaration__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceDeclarationAccess().getGroup_1_0()); }
(rule__ReferenceDeclaration__Group_1_0__0)
{ after(grammarAccess.getReferenceDeclarationAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getReferenceDeclarationAccess().getGroup_1_1()); }
(rule__ReferenceDeclaration__Group_1_1__0)
{ after(grammarAccess.getReferenceDeclarationAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceDeclarationWOSemicolon__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getGroup_1_0()); }
(rule__ReferenceDeclarationWOSemicolon__Group_1_0__0)
{ after(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getGroup_1_1()); }
(rule__ReferenceDeclarationWOSemicolon__Group_1_1__0)
{ after(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Effect__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEffectAccess().getAssignmentParserRuleCall_0()); }
	ruleAssignment
{ after(grammarAccess.getEffectAccess().getAssignmentParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEffectAccess().getPostfixEffectParserRuleCall_1()); }
	rulePostfixEffect
{ after(grammarAccess.getEffectAccess().getPostfixEffectParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getEffectAccess().getEmissionParserRuleCall_2()); }
	ruleEmission
{ after(grammarAccess.getEffectAccess().getEmissionParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getEffectAccess().getHostcodeEffectParserRuleCall_3()); }
	ruleHostcodeEffect
{ after(grammarAccess.getEffectAccess().getHostcodeEffectParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getEffectAccess().getReferenceCallEffectParserRuleCall_4()); }
	ruleReferenceCallEffect
{ after(grammarAccess.getEffectAccess().getReferenceCallEffectParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getEffectAccess().getFunctionCallEffectParserRuleCall_5()); }
	ruleFunctionCallEffect
{ after(grammarAccess.getEffectAccess().getFunctionCallEffectParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getEffectAccess().getPrintCallEffectParserRuleCall_6()); }
	rulePrintCallEffect
{ after(grammarAccess.getEffectAccess().getPrintCallEffectParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceCallEffect__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceCallEffectAccess().getGroup_2_0()); }
(rule__ReferenceCallEffect__Group_2_0__0)
{ after(grammarAccess.getReferenceCallEffectAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getReferenceCallEffectAccess().getLeftParenthesisRightParenthesisKeyword_2_1()); }

	'()' 

{ after(grammarAccess.getReferenceCallEffectAccess().getLeftParenthesisRightParenthesisKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallEffect__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getGroup_0()); }
(rule__FunctionCallEffect__Group_0__0)
{ after(grammarAccess.getFunctionCallEffectAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getFunctionCallEffectAccess().getGroup_1()); }
(rule__FunctionCallEffect__Group_1__0)
{ after(grammarAccess.getFunctionCallEffectAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallEffect__Alternatives_0_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getGroup_0_1_2_0()); }
(rule__FunctionCallEffect__Group_0_1_2_0__0)
{ after(grammarAccess.getFunctionCallEffectAccess().getGroup_0_1_2_0()); }
)

    |(
{ before(grammarAccess.getFunctionCallEffectAccess().getLeftParenthesisRightParenthesisKeyword_0_1_2_1()); }

	'()' 

{ after(grammarAccess.getFunctionCallEffectAccess().getLeftParenthesisRightParenthesisKeyword_0_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallEffect__Alternatives_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getGroup_1_2_0()); }
(rule__FunctionCallEffect__Group_1_2_0__0)
{ after(grammarAccess.getFunctionCallEffectAccess().getGroup_1_2_0()); }
)

    |(
{ before(grammarAccess.getFunctionCallEffectAccess().getLeftParenthesisRightParenthesisKeyword_1_2_1()); }

	'()' 

{ after(grammarAccess.getFunctionCallEffectAccess().getLeftParenthesisRightParenthesisKeyword_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getBoolExpressionParserRuleCall_0_0()); }
	ruleBoolExpression
{ after(grammarAccess.getExpressionAccess().getBoolExpressionParserRuleCall_0_0()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getValuedExpressionParserRuleCall_0_1()); }
	ruleValuedExpression
{ after(grammarAccess.getExpressionAccess().getValuedExpressionParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NotOrValuedExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotOrValuedExpressionAccess().getValuedExpressionParserRuleCall_0()); }
	ruleValuedExpression
{ after(grammarAccess.getNotOrValuedExpressionAccess().getValuedExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNotOrValuedExpressionAccess().getNotExpressionParserRuleCall_1()); }
	ruleNotExpression
{ after(grammarAccess.getNotOrValuedExpressionAccess().getNotExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NotExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotExpressionAccess().getGroup_0()); }
(rule__NotExpression__Group_0__0)
{ after(grammarAccess.getNotExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getNotExpressionAccess().getAtomicExpressionParserRuleCall_1()); }
	ruleAtomicExpression
{ after(grammarAccess.getNotExpressionAccess().getAtomicExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NegExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegExpressionAccess().getGroup_0()); }
(rule__NegExpression__Group_0__0)
{ after(grammarAccess.getNegExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getNegExpressionAccess().getAtomicValuedExpressionParserRuleCall_1()); }
	ruleAtomicValuedExpression
{ after(grammarAccess.getNegExpressionAccess().getAtomicValuedExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpressionAccess().getBoolValueParserRuleCall_0()); }
	ruleBoolValue
{ after(grammarAccess.getAtomicExpressionAccess().getBoolValueParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAtomicExpressionAccess().getValuedObjectTestExpressionParserRuleCall_1()); }
	ruleValuedObjectTestExpression
{ after(grammarAccess.getAtomicExpressionAccess().getValuedObjectTestExpressionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getAtomicExpressionAccess().getGroup_2()); }
(rule__AtomicExpression__Group_2__0)
{ after(grammarAccess.getAtomicExpressionAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getAtomicExpressionAccess().getReferenceCallParserRuleCall_3()); }
	ruleReferenceCall
{ after(grammarAccess.getAtomicExpressionAccess().getReferenceCallParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getAtomicExpressionAccess().getFunctionCallParserRuleCall_4()); }
	ruleFunctionCall
{ after(grammarAccess.getAtomicExpressionAccess().getFunctionCallParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getAtomicExpressionAccess().getTextExpressionParserRuleCall_5()); }
	ruleTextExpression
{ after(grammarAccess.getAtomicExpressionAccess().getTextExpressionParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicValuedExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicValuedExpressionAccess().getIntValueParserRuleCall_0()); }
	ruleIntValue
{ after(grammarAccess.getAtomicValuedExpressionAccess().getIntValueParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAtomicValuedExpressionAccess().getFloatValueParserRuleCall_1()); }
	ruleFloatValue
{ after(grammarAccess.getAtomicValuedExpressionAccess().getFloatValueParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getAtomicValuedExpressionAccess().getStringValueParserRuleCall_2()); }
	ruleStringValue
{ after(grammarAccess.getAtomicValuedExpressionAccess().getStringValueParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getAtomicValuedExpressionAccess().getGroup_3()); }
(rule__AtomicValuedExpression__Group_3__0)
{ after(grammarAccess.getAtomicValuedExpressionAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getAtomicValuedExpressionAccess().getAtomicExpressionParserRuleCall_4()); }
	ruleAtomicExpression
{ after(grammarAccess.getAtomicValuedExpressionAccess().getAtomicExpressionParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectTestExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getGroup_0()); }
(rule__ValuedObjectTestExpression__Group_0__0)
{ after(grammarAccess.getValuedObjectTestExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getValuedObjectReferenceParserRuleCall_1()); }
	ruleValuedObjectReference
{ after(grammarAccess.getValuedObjectTestExpressionAccess().getValuedObjectReferenceParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectTestExpression__OperatorAlternatives_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorPreOperatorEnumRuleCall_0_1_0_0()); }
	rulePreOperator
{ after(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorPreOperatorEnumRuleCall_0_1_0_0()); }
)

    |(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorValOperatorEnumRuleCall_0_1_0_1()); }
	ruleValOperator
{ after(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorValOperatorEnumRuleCall_0_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceCall__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceCallAccess().getGroup_1_0()); }
(rule__ReferenceCall__Group_1_0__0)
{ after(grammarAccess.getReferenceCallAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getReferenceCallAccess().getLeftParenthesisRightParenthesisKeyword_1_1()); }

	'()' 

{ after(grammarAccess.getReferenceCallAccess().getLeftParenthesisRightParenthesisKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getGroup_0()); }
(rule__FunctionCall__Group_0__0)
{ after(grammarAccess.getFunctionCallAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getFunctionCallAccess().getGroup_1()); }
(rule__FunctionCall__Group_1__0)
{ after(grammarAccess.getFunctionCallAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Alternatives_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getGroup_0_2_0()); }
(rule__FunctionCall__Group_0_2_0__0)
{ after(grammarAccess.getFunctionCallAccess().getGroup_0_2_0()); }
)

    |(
{ before(grammarAccess.getFunctionCallAccess().getLeftParenthesisRightParenthesisKeyword_0_2_1()); }

	'()' 

{ after(grammarAccess.getFunctionCallAccess().getLeftParenthesisRightParenthesisKeyword_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Alternatives_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getGroup_1_2_0()); }
(rule__FunctionCall__Group_1_2_0__0)
{ after(grammarAccess.getFunctionCallAccess().getGroup_1_2_0()); }
)

    |(
{ before(grammarAccess.getFunctionCallAccess().getLeftParenthesisRightParenthesisKeyword_1_2_1()); }

	'()' 

{ after(grammarAccess.getFunctionCallAccess().getLeftParenthesisRightParenthesisKeyword_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Annotation__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getCommentAnnotationParserRuleCall_0()); }
	ruleCommentAnnotation
{ after(grammarAccess.getAnnotationAccess().getCommentAnnotationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAnnotationAccess().getKeyStringValueAnnotationParserRuleCall_1()); }
	ruleKeyStringValueAnnotation
{ after(grammarAccess.getAnnotationAccess().getKeyStringValueAnnotationParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getAnnotationAccess().getTypedKeyStringValueAnnotationParserRuleCall_2()); }
	ruleTypedKeyStringValueAnnotation
{ after(grammarAccess.getAnnotationAccess().getTypedKeyStringValueAnnotationParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getAnnotationAccess().getTagAnnotationParserRuleCall_3()); }
	ruleTagAnnotation
{ after(grammarAccess.getAnnotationAccess().getTagAnnotationParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Pragma__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPragmaAccess().getStringPragmaParserRuleCall_0()); }
	ruleStringPragma
{ after(grammarAccess.getPragmaAccess().getStringPragmaParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPragmaAccess().getPragmaTagParserRuleCall_1()); }
	rulePragmaTag
{ after(grammarAccess.getPragmaAccess().getPragmaTagParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RestrictedTypeAnnotation__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictedTypeAnnotationAccess().getCommentAnnotationParserRuleCall_0()); }
	ruleCommentAnnotation
{ after(grammarAccess.getRestrictedTypeAnnotationAccess().getCommentAnnotationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getRestrictedTypeAnnotationAccess().getRestrictedKeyStringValueAnnotationParserRuleCall_1()); }
	ruleRestrictedKeyStringValueAnnotation
{ after(grammarAccess.getRestrictedTypeAnnotationAccess().getRestrictedKeyStringValueAnnotationParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getRestrictedTypeAnnotationAccess().getRestrictedTypedKeyStringValueAnnotationParserRuleCall_2()); }
	ruleRestrictedTypedKeyStringValueAnnotation
{ after(grammarAccess.getRestrictedTypeAnnotationAccess().getRestrictedTypedKeyStringValueAnnotationParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getRestrictedTypeAnnotationAccess().getTagAnnotationParserRuleCall_3()); }
	ruleTagAnnotation
{ after(grammarAccess.getRestrictedTypeAnnotationAccess().getTagAnnotationParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QuotedStringAnnotation__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuotedStringAnnotationAccess().getCommentAnnotationParserRuleCall_0()); }
	ruleCommentAnnotation
{ after(grammarAccess.getQuotedStringAnnotationAccess().getCommentAnnotationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getQuotedStringAnnotationAccess().getQuotedKeyStringValueAnnotationParserRuleCall_1()); }
	ruleQuotedKeyStringValueAnnotation
{ after(grammarAccess.getQuotedStringAnnotationAccess().getQuotedKeyStringValueAnnotationParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getQuotedStringAnnotationAccess().getQuotedTypedKeyStringValueAnnotationParserRuleCall_2()); }
	ruleQuotedTypedKeyStringValueAnnotation
{ after(grammarAccess.getQuotedStringAnnotationAccess().getQuotedTypedKeyStringValueAnnotationParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getQuotedStringAnnotationAccess().getTagAnnotationParserRuleCall_3()); }
	ruleTagAnnotation
{ after(grammarAccess.getQuotedStringAnnotationAccess().getTagAnnotationParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EStringBoolean__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEStringBooleanAccess().getSTRINGTerminalRuleCall_0()); }
	RULE_STRING
{ after(grammarAccess.getEStringBooleanAccess().getSTRINGTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEStringBooleanAccess().getExtendedIDParserRuleCall_1()); }
	ruleExtendedID
{ after(grammarAccess.getEStringBooleanAccess().getExtendedIDParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getEStringBooleanAccess().getBOOLEANTerminalRuleCall_2()); }
	RULE_BOOLEAN
{ after(grammarAccess.getEStringBooleanAccess().getBOOLEANTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EStringAllTypes__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEStringAllTypesAccess().getSTRINGTerminalRuleCall_0()); }
	RULE_STRING
{ after(grammarAccess.getEStringAllTypesAccess().getSTRINGTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEStringAllTypesAccess().getExtendedIDParserRuleCall_1()); }
	ruleExtendedID
{ after(grammarAccess.getEStringAllTypesAccess().getExtendedIDParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getEStringAllTypesAccess().getBOOLEANTerminalRuleCall_2()); }
	RULE_BOOLEAN
{ after(grammarAccess.getEStringAllTypesAccess().getBOOLEANTerminalRuleCall_2()); }
)

    |(
{ before(grammarAccess.getEStringAllTypesAccess().getIntegerParserRuleCall_3()); }
	ruleInteger
{ after(grammarAccess.getEStringAllTypesAccess().getIntegerParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getEStringAllTypesAccess().getFloategerParserRuleCall_4()); }
	ruleFloateger
{ after(grammarAccess.getEStringAllTypesAccess().getFloategerParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedID__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendedIDAccess().getFullStopKeyword_1_0_0()); }

	'.' 

{ after(grammarAccess.getExtendedIDAccess().getFullStopKeyword_1_0_0()); }
)

    |(
{ before(grammarAccess.getExtendedIDAccess().getHyphenMinusKeyword_1_0_1()); }

	'-' 

{ after(grammarAccess.getExtendedIDAccess().getHyphenMinusKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PreemptionType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreemptionTypeAccess().getWEAKABORTEnumLiteralDeclaration_0()); }
(	'go to' 
)
{ after(grammarAccess.getPreemptionTypeAccess().getWEAKABORTEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getPreemptionTypeAccess().getSTRONGABORTEnumLiteralDeclaration_1()); }
(	'abort to' 
)
{ after(grammarAccess.getPreemptionTypeAccess().getSTRONGABORTEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getPreemptionTypeAccess().getTERMINATIONEnumLiteralDeclaration_2()); }
(	'join to' 
)
{ after(grammarAccess.getPreemptionTypeAccess().getTERMINATIONEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PreemptionTypeLegacy__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreemptionTypeLegacyAccess().getWEAKABORTEnumLiteralDeclaration_0()); }
(	'-->' 
)
{ after(grammarAccess.getPreemptionTypeLegacyAccess().getWEAKABORTEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getPreemptionTypeLegacyAccess().getSTRONGABORTEnumLiteralDeclaration_1()); }
(	'o->' 
)
{ after(grammarAccess.getPreemptionTypeLegacyAccess().getSTRONGABORTEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getPreemptionTypeLegacyAccess().getTERMINATIONEnumLiteralDeclaration_2()); }
(	'>->' 
)
{ after(grammarAccess.getPreemptionTypeLegacyAccess().getTERMINATIONEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DelayType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayTypeAccess().getUNDEFINEDEnumLiteralDeclaration_0()); }
(	'undefined' 
)
{ after(grammarAccess.getDelayTypeAccess().getUNDEFINEDEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getDelayTypeAccess().getDELAYEDEnumLiteralDeclaration_1()); }
(	'delayed' 
)
{ after(grammarAccess.getDelayTypeAccess().getDELAYEDEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getDelayTypeAccess().getIMMEDIATEEnumLiteralDeclaration_2()); }
(	'immediate' 
)
{ after(grammarAccess.getDelayTypeAccess().getIMMEDIATEEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getDelayTypeAccess().getAUTOMATICEnumLiteralDeclaration_3()); }
(	'auto' 
)
{ after(grammarAccess.getDelayTypeAccess().getAUTOMATICEnumLiteralDeclaration_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HistoryType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHistoryTypeAccess().getRESETEnumLiteralDeclaration_0()); }
(	'reset' 
)
{ after(grammarAccess.getHistoryTypeAccess().getRESETEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getHistoryTypeAccess().getSHALLOWEnumLiteralDeclaration_1()); }
(	'shallow history' 
)
{ after(grammarAccess.getHistoryTypeAccess().getSHALLOWEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getHistoryTypeAccess().getDEEPEnumLiteralDeclaration_2()); }
(	'history' 
)
{ after(grammarAccess.getHistoryTypeAccess().getDEEPEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SchedulePriorityType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSchedulePriorityTypeAccess().getCONFLICTEnumLiteralDeclaration_0()); }
(	'conflict' 
)
{ after(grammarAccess.getSchedulePriorityTypeAccess().getCONFLICTEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getSchedulePriorityTypeAccess().getCONFLUENTEnumLiteralDeclaration_1()); }
(	'confluent' 
)
{ after(grammarAccess.getSchedulePriorityTypeAccess().getCONFLUENTEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignOperatorAccess().getASSIGNEnumLiteralDeclaration_0()); }
(	'=' 
)
{ after(grammarAccess.getAssignOperatorAccess().getASSIGNEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getAssignOperatorAccess().getASSIGNADDEnumLiteralDeclaration_1()); }
(	'+=' 
)
{ after(grammarAccess.getAssignOperatorAccess().getASSIGNADDEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getAssignOperatorAccess().getASSIGNSUBEnumLiteralDeclaration_2()); }
(	'-=' 
)
{ after(grammarAccess.getAssignOperatorAccess().getASSIGNSUBEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getAssignOperatorAccess().getASSIGNMULEnumLiteralDeclaration_3()); }
(	'*=' 
)
{ after(grammarAccess.getAssignOperatorAccess().getASSIGNMULEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getAssignOperatorAccess().getASSIGNDIVEnumLiteralDeclaration_4()); }
(	'/=' 
)
{ after(grammarAccess.getAssignOperatorAccess().getASSIGNDIVEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getAssignOperatorAccess().getASSIGNMODEnumLiteralDeclaration_5()); }
(	'%=' 
)
{ after(grammarAccess.getAssignOperatorAccess().getASSIGNMODEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getAssignOperatorAccess().getASSIGNANDEnumLiteralDeclaration_6()); }
(	'&=' 
)
{ after(grammarAccess.getAssignOperatorAccess().getASSIGNANDEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getAssignOperatorAccess().getASSIGNOREnumLiteralDeclaration_7()); }
(	'|=' 
)
{ after(grammarAccess.getAssignOperatorAccess().getASSIGNOREnumLiteralDeclaration_7()); }
)

    |(
{ before(grammarAccess.getAssignOperatorAccess().getASSIGNXOREnumLiteralDeclaration_8()); }
(	'^=' 
)
{ after(grammarAccess.getAssignOperatorAccess().getASSIGNXOREnumLiteralDeclaration_8()); }
)

    |(
{ before(grammarAccess.getAssignOperatorAccess().getASSIGNMINEnumLiteralDeclaration_9()); }
(	'min=' 
)
{ after(grammarAccess.getAssignOperatorAccess().getASSIGNMINEnumLiteralDeclaration_9()); }
)

    |(
{ before(grammarAccess.getAssignOperatorAccess().getASSIGNMAXEnumLiteralDeclaration_10()); }
(	'max=' 
)
{ after(grammarAccess.getAssignOperatorAccess().getASSIGNMAXEnumLiteralDeclaration_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixOperatorAccess().getPOSTFIXADDEnumLiteralDeclaration_0()); }
(	'++' 
)
{ after(grammarAccess.getPostfixOperatorAccess().getPOSTFIXADDEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getPostfixOperatorAccess().getPOSTFIXSUBEnumLiteralDeclaration_1()); }
(	'--' 
)
{ after(grammarAccess.getPostfixOperatorAccess().getPOSTFIXSUBEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperatorAccess().getEQEnumLiteralDeclaration_0()); }
(	'==' 
)
{ after(grammarAccess.getCompareOperatorAccess().getEQEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getCompareOperatorAccess().getLTEnumLiteralDeclaration_1()); }
(	'<' 
)
{ after(grammarAccess.getCompareOperatorAccess().getLTEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getCompareOperatorAccess().getLEQEnumLiteralDeclaration_2()); }
(	'<=' 
)
{ after(grammarAccess.getCompareOperatorAccess().getLEQEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getCompareOperatorAccess().getGTEnumLiteralDeclaration_3()); }
(	'>' 
)
{ after(grammarAccess.getCompareOperatorAccess().getGTEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getCompareOperatorAccess().getGEQEnumLiteralDeclaration_4()); }
(	'>=' 
)
{ after(grammarAccess.getCompareOperatorAccess().getGEQEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getCompareOperatorAccess().getNEEnumLiteralDeclaration_5()); }
(	'!=' 
)
{ after(grammarAccess.getCompareOperatorAccess().getNEEnumLiteralDeclaration_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValueType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueTypeAccess().getPUREEnumLiteralDeclaration_0()); }
(	'pure' 
)
{ after(grammarAccess.getValueTypeAccess().getPUREEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getValueTypeAccess().getBOOLEnumLiteralDeclaration_1()); }
(	'bool' 
)
{ after(grammarAccess.getValueTypeAccess().getBOOLEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getValueTypeAccess().getUNSIGNEDEnumLiteralDeclaration_2()); }
(	'unsigned' 
)
{ after(grammarAccess.getValueTypeAccess().getUNSIGNEDEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getValueTypeAccess().getINTEnumLiteralDeclaration_3()); }
(	'int' 
)
{ after(grammarAccess.getValueTypeAccess().getINTEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getValueTypeAccess().getFLOATEnumLiteralDeclaration_4()); }
(	'float' 
)
{ after(grammarAccess.getValueTypeAccess().getFLOATEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getValueTypeAccess().getSTRINGEnumLiteralDeclaration_5()); }
(	'string' 
)
{ after(grammarAccess.getValueTypeAccess().getSTRINGEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getValueTypeAccess().getHOSTEnumLiteralDeclaration_6()); }
(	'host' 
)
{ after(grammarAccess.getValueTypeAccess().getHOSTEnumLiteralDeclaration_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CombineOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCombineOperatorAccess().getNONEEnumLiteralDeclaration_0()); }
(	'none' 
)
{ after(grammarAccess.getCombineOperatorAccess().getNONEEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getCombineOperatorAccess().getADDEnumLiteralDeclaration_1()); }
(	'+' 
)
{ after(grammarAccess.getCombineOperatorAccess().getADDEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getCombineOperatorAccess().getMULTEnumLiteralDeclaration_2()); }
(	'*' 
)
{ after(grammarAccess.getCombineOperatorAccess().getMULTEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getCombineOperatorAccess().getMAXEnumLiteralDeclaration_3()); }
(	'max' 
)
{ after(grammarAccess.getCombineOperatorAccess().getMAXEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getCombineOperatorAccess().getMINEnumLiteralDeclaration_4()); }
(	'min' 
)
{ after(grammarAccess.getCombineOperatorAccess().getMINEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getCombineOperatorAccess().getOREnumLiteralDeclaration_5()); }
(	'|' 
)
{ after(grammarAccess.getCombineOperatorAccess().getOREnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getCombineOperatorAccess().getANDEnumLiteralDeclaration_6()); }
(	'&' 
)
{ after(grammarAccess.getCombineOperatorAccess().getANDEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getCombineOperatorAccess().getHOSTEnumLiteralDeclaration_7()); }
(	'host' 
)
{ after(grammarAccess.getCombineOperatorAccess().getHOSTEnumLiteralDeclaration_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__SCCharts__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SCCharts__Group__0__Impl
	rule__SCCharts__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SCCharts__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCChartsAccess().getPragmasAssignment_0()); }
(rule__SCCharts__PragmasAssignment_0)*
{ after(grammarAccess.getSCChartsAccess().getPragmasAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SCCharts__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SCCharts__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SCCharts__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCChartsAccess().getRootStatesAssignment_1()); }
(rule__SCCharts__RootStatesAssignment_1)*
{ after(grammarAccess.getSCChartsAccess().getRootStatesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RootState__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RootState__Group__0__Impl
	rule__RootState__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RootState__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootStateAccess().getAnnotationsAssignment_0()); }
(rule__RootState__AnnotationsAssignment_0)*
{ after(grammarAccess.getRootStateAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RootState__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RootState__Group__1__Impl
	rule__RootState__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RootState__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootStateAccess().getScchartKeyword_1()); }

	'scchart' 

{ after(grammarAccess.getRootStateAccess().getScchartKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RootState__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RootState__Group__2__Impl
	rule__RootState__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RootState__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootStateAccess().getNameAssignment_2()); }
(rule__RootState__NameAssignment_2)
{ after(grammarAccess.getRootStateAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RootState__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RootState__Group__3__Impl
	rule__RootState__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RootState__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootStateAccess().getLabelAssignment_3()); }
(rule__RootState__LabelAssignment_3)?
{ after(grammarAccess.getRootStateAccess().getLabelAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RootState__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RootState__Group__4__Impl
	rule__RootState__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RootState__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootStateAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getRootStateAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RootState__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RootState__Group__5__Impl
	rule__RootState__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RootState__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootStateAccess().getDeclarationsAssignment_5()); }
(rule__RootState__DeclarationsAssignment_5)*
{ after(grammarAccess.getRootStateAccess().getDeclarationsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RootState__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RootState__Group__6__Impl
	rule__RootState__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__RootState__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootStateAccess().getActionsAssignment_6()); }
(rule__RootState__ActionsAssignment_6)*
{ after(grammarAccess.getRootStateAccess().getActionsAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RootState__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RootState__Group__7__Impl
	rule__RootState__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__RootState__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootStateAccess().getAlternatives_7()); }
(rule__RootState__Alternatives_7)
{ after(grammarAccess.getRootStateAccess().getAlternatives_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RootState__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RootState__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RootState__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootStateAccess().getRightCurlyBracketKeyword_8()); }

	'}' 

{ after(grammarAccess.getRootStateAccess().getRightCurlyBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__State__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__0__Impl
	rule__State__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getAnnotationsAssignment_0()); }
(rule__State__AnnotationsAssignment_0)*
{ after(grammarAccess.getStateAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__1__Impl
	rule__State__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getInitialAssignment_1()); }
(rule__State__InitialAssignment_1)?
{ after(grammarAccess.getStateAccess().getInitialAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__2__Impl
	rule__State__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getFinalAssignment_2()); }
(rule__State__FinalAssignment_2)?
{ after(grammarAccess.getStateAccess().getFinalAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__3__Impl
	rule__State__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getViolationAssignment_3()); }
(rule__State__ViolationAssignment_3)?
{ after(grammarAccess.getStateAccess().getViolationAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__4__Impl
	rule__State__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getConnectorAssignment_4()); }
(rule__State__ConnectorAssignment_4)?
{ after(grammarAccess.getStateAccess().getConnectorAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__5__Impl
	rule__State__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getStateKeyword_5()); }

	'state' 

{ after(grammarAccess.getStateAccess().getStateKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__6__Impl
	rule__State__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getNameAssignment_6()); }
(rule__State__NameAssignment_6)
{ after(grammarAccess.getStateAccess().getNameAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__7__Impl
	rule__State__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getLabelAssignment_7()); }
(rule__State__LabelAssignment_7)?
{ after(grammarAccess.getStateAccess().getLabelAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__8__Impl
	rule__State__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getAlternatives_8()); }
(rule__State__Alternatives_8)?
{ after(grammarAccess.getStateAccess().getAlternatives_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getOutgoingTransitionsAssignment_9()); }
(rule__State__OutgoingTransitionsAssignment_9)*
{ after(grammarAccess.getStateAccess().getOutgoingTransitionsAssignment_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__State__Group_8_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_8_0__0__Impl
	rule__State__Group_8_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_8_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getIsKeyword_8_0_0()); }

	'is' 

{ after(grammarAccess.getStateAccess().getIsKeyword_8_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_8_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_8_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_8_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getReferenceAssignment_8_0_1()); }
(rule__State__ReferenceAssignment_8_0_1)
{ after(grammarAccess.getStateAccess().getReferenceAssignment_8_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__State__Group_8_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_8_1__0__Impl
	rule__State__Group_8_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_8_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_8_1_0()); }

	'{' 

{ after(grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_8_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_8_1__1__Impl
	rule__State__Group_8_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_8_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getDeclarationsAssignment_8_1_1()); }
(rule__State__DeclarationsAssignment_8_1_1)*
{ after(grammarAccess.getStateAccess().getDeclarationsAssignment_8_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_8_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_8_1__2__Impl
	rule__State__Group_8_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_8_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getActionsAssignment_8_1_2()); }
(rule__State__ActionsAssignment_8_1_2)*
{ after(grammarAccess.getStateAccess().getActionsAssignment_8_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_8_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_8_1__3__Impl
	rule__State__Group_8_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_8_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getAlternatives_8_1_3()); }
(rule__State__Alternatives_8_1_3)
{ after(grammarAccess.getStateAccess().getAlternatives_8_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_8_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_8_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_8_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getRightCurlyBracketKeyword_8_1_4()); }

	'}' 

{ after(grammarAccess.getStateAccess().getRightCurlyBracketKeyword_8_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ImplicitState__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImplicitState__Group__0__Impl
	rule__ImplicitState__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplicitState__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImplicitStateAccess().getStateAction_0()); }
(

)
{ after(grammarAccess.getImplicitStateAccess().getStateAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImplicitState__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImplicitState__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplicitState__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getImplicitStateAccess().getRegionsAssignment_1()); }
(rule__ImplicitState__RegionsAssignment_1)
{ after(grammarAccess.getImplicitStateAccess().getRegionsAssignment_1()); }
)
(
{ before(grammarAccess.getImplicitStateAccess().getRegionsAssignment_1()); }
(rule__ImplicitState__RegionsAssignment_1)*
{ after(grammarAccess.getImplicitStateAccess().getRegionsAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ScopeCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScopeCall__Group__0__Impl
	rule__ScopeCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeCall__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeCallAccess().getScopeAssignment_0()); }
(rule__ScopeCall__ScopeAssignment_0)
{ after(grammarAccess.getScopeCallAccess().getScopeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScopeCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScopeCall__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeCall__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeCallAccess().getAlternatives_1()); }
(rule__ScopeCall__Alternatives_1)?
{ after(grammarAccess.getScopeCallAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ScopeCall__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScopeCall__Group_1_0__0__Impl
	rule__ScopeCall__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeCall__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeCallAccess().getLeftParenthesisKeyword_1_0_0()); }

	'(' 

{ after(grammarAccess.getScopeCallAccess().getLeftParenthesisKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScopeCall__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScopeCall__Group_1_0__1__Impl
	rule__ScopeCall__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeCall__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeCallAccess().getParametersAssignment_1_0_1()); }
(rule__ScopeCall__ParametersAssignment_1_0_1)
{ after(grammarAccess.getScopeCallAccess().getParametersAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScopeCall__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScopeCall__Group_1_0__2__Impl
	rule__ScopeCall__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeCall__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeCallAccess().getGroup_1_0_2()); }
(rule__ScopeCall__Group_1_0_2__0)*
{ after(grammarAccess.getScopeCallAccess().getGroup_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScopeCall__Group_1_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScopeCall__Group_1_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeCall__Group_1_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeCallAccess().getRightParenthesisKeyword_1_0_3()); }

	')' 

{ after(grammarAccess.getScopeCallAccess().getRightParenthesisKeyword_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ScopeCall__Group_1_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScopeCall__Group_1_0_2__0__Impl
	rule__ScopeCall__Group_1_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeCall__Group_1_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeCallAccess().getCommaKeyword_1_0_2_0()); }

	',' 

{ after(grammarAccess.getScopeCallAccess().getCommaKeyword_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScopeCall__Group_1_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScopeCall__Group_1_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeCall__Group_1_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeCallAccess().getParametersAssignment_1_0_2_1()); }
(rule__ScopeCall__ParametersAssignment_1_0_2_1)
{ after(grammarAccess.getScopeCallAccess().getParametersAssignment_1_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ScopeCall__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScopeCall__Group_1_1__0__Impl
	rule__ScopeCall__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeCall__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeCallAccess().getLeftParenthesisKeyword_1_1_0()); }

	'(' 

{ after(grammarAccess.getScopeCallAccess().getLeftParenthesisKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScopeCall__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScopeCall__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeCall__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeCallAccess().getRightParenthesisKeyword_1_1_1()); }

	')' 

{ after(grammarAccess.getScopeCallAccess().getRightParenthesisKeyword_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Parameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getGroup_0()); }
(rule__Parameter__Group_0__0)?
{ after(grammarAccess.getParameterAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__1__Impl
	rule__Parameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getExpressionAssignment_1()); }
(rule__Parameter__ExpressionAssignment_1)
{ after(grammarAccess.getParameterAccess().getExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getGroup_2()); }
(rule__Parameter__Group_2__0)?
{ after(grammarAccess.getParameterAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Parameter__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group_0__0__Impl
	rule__Parameter__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getPureOutputAssignment_0_0()); }
(rule__Parameter__PureOutputAssignment_0_0)?
{ after(grammarAccess.getParameterAccess().getPureOutputAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getCallByReferenceAssignment_0_1()); }
(rule__Parameter__CallByReferenceAssignment_0_1)
{ after(grammarAccess.getParameterAccess().getCallByReferenceAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Parameter__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group_2__0__Impl
	rule__Parameter__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getToKeyword_2_0()); }

	'to' 

{ after(grammarAccess.getParameterAccess().getToKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group_2__1__Impl
	rule__Parameter__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getExplicitBindingAssignment_2_1()); }
(rule__Parameter__ExplicitBindingAssignment_2_1)
{ after(grammarAccess.getParameterAccess().getExplicitBindingAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getGroup_2_2()); }
(rule__Parameter__Group_2_2__0)*
{ after(grammarAccess.getParameterAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Parameter__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group_2_2__0__Impl
	rule__Parameter__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getLeftSquareBracketKeyword_2_2_0()); }

	'[' 

{ after(grammarAccess.getParameterAccess().getLeftSquareBracketKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group_2_2__1__Impl
	rule__Parameter__Group_2_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getExplicitBindingIndicesAssignment_2_2_1()); }
(rule__Parameter__ExplicitBindingIndicesAssignment_2_2_1)
{ after(grammarAccess.getParameterAccess().getExplicitBindingIndicesAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group_2_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group_2_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_2_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getRightSquareBracketKeyword_2_2_2()); }

	']' 

{ after(grammarAccess.getParameterAccess().getRightSquareBracketKeyword_2_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Transition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__0__Impl
	rule__Transition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getAnnotationsAssignment_0()); }
(rule__Transition__AnnotationsAssignment_0)*
{ after(grammarAccess.getTransitionAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__1__Impl
	rule__Transition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getPreemptionAssignment_1()); }
(rule__Transition__PreemptionAssignment_1)
{ after(grammarAccess.getTransitionAccess().getPreemptionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__2__Impl
	rule__Transition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getTargetStateAssignment_2()); }
(rule__Transition__TargetStateAssignment_2)
{ after(grammarAccess.getTransitionAccess().getTargetStateAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__3__Impl
	rule__Transition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getDelayAssignment_3()); }
(rule__Transition__DelayAssignment_3)?
{ after(grammarAccess.getTransitionAccess().getDelayAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__4__Impl
	rule__Transition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getDeferredAssignment_4()); }
(rule__Transition__DeferredAssignment_4)?
{ after(grammarAccess.getTransitionAccess().getDeferredAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__5__Impl
	rule__Transition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getHistoryAssignment_5()); }
(rule__Transition__HistoryAssignment_5)?
{ after(grammarAccess.getTransitionAccess().getHistoryAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__6__Impl
	rule__Transition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getGroup_6()); }
(rule__Transition__Group_6__0)?
{ after(grammarAccess.getTransitionAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__7__Impl
	rule__Transition__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getGroup_7()); }
(rule__Transition__Group_7__0)?
{ after(grammarAccess.getTransitionAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getGroup_8()); }
(rule__Transition__Group_8__0)?
{ after(grammarAccess.getTransitionAccess().getGroup_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__Transition__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_6__0__Impl
	rule__Transition__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getIfKeyword_6_0()); }

	'if' 

{ after(grammarAccess.getTransitionAccess().getIfKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_6__1__Impl
	rule__Transition__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getTriggerDelayAssignment_6_1()); }
(rule__Transition__TriggerDelayAssignment_6_1)?
{ after(grammarAccess.getTransitionAccess().getTriggerDelayAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getAlternatives_6_2()); }
(rule__Transition__Alternatives_6_2)
{ after(grammarAccess.getTransitionAccess().getAlternatives_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Transition__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_7__0__Impl
	rule__Transition__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getDoKeyword_7_0()); }

	'do' 

{ after(grammarAccess.getTransitionAccess().getDoKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_7__1__Impl
	rule__Transition__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getEffectsAssignment_7_1()); }
(rule__Transition__EffectsAssignment_7_1)
{ after(grammarAccess.getTransitionAccess().getEffectsAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getGroup_7_2()); }
(rule__Transition__Group_7_2__0)*
{ after(grammarAccess.getTransitionAccess().getGroup_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Transition__Group_7_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_7_2__0__Impl
	rule__Transition__Group_7_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_7_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getSemicolonKeyword_7_2_0()); }

	';' 

{ after(grammarAccess.getTransitionAccess().getSemicolonKeyword_7_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group_7_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_7_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_7_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getEffectsAssignment_7_2_1()); }
(rule__Transition__EffectsAssignment_7_2_1)
{ after(grammarAccess.getTransitionAccess().getEffectsAssignment_7_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Transition__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_8__0__Impl
	rule__Transition__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getLabelKeyword_8_0()); }

	'label' 

{ after(grammarAccess.getTransitionAccess().getLabelKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getLabelAssignment_8_1()); }
(rule__Transition__LabelAssignment_8_1)
{ after(grammarAccess.getTransitionAccess().getLabelAssignment_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ImplicitControlflowRegion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImplicitControlflowRegion__Group__0__Impl
	rule__ImplicitControlflowRegion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplicitControlflowRegion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImplicitControlflowRegionAccess().getControlflowRegionAction_0()); }
(

)
{ after(grammarAccess.getImplicitControlflowRegionAccess().getControlflowRegionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImplicitControlflowRegion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImplicitControlflowRegion__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplicitControlflowRegion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getImplicitControlflowRegionAccess().getStatesAssignment_1()); }
(rule__ImplicitControlflowRegion__StatesAssignment_1)
{ after(grammarAccess.getImplicitControlflowRegionAccess().getStatesAssignment_1()); }
)
(
{ before(grammarAccess.getImplicitControlflowRegionAccess().getStatesAssignment_1()); }
(rule__ImplicitControlflowRegion__StatesAssignment_1)*
{ after(grammarAccess.getImplicitControlflowRegionAccess().getStatesAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ImplicitDataflowRegion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImplicitDataflowRegion__Group__0__Impl
	rule__ImplicitDataflowRegion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplicitDataflowRegion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImplicitDataflowRegionAccess().getDataflowRegionAction_0()); }
(

)
{ after(grammarAccess.getImplicitDataflowRegionAccess().getDataflowRegionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImplicitDataflowRegion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImplicitDataflowRegion__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplicitDataflowRegion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getImplicitDataflowRegionAccess().getEquationsAssignment_1()); }
(rule__ImplicitDataflowRegion__EquationsAssignment_1)
{ after(grammarAccess.getImplicitDataflowRegionAccess().getEquationsAssignment_1()); }
)
(
{ before(grammarAccess.getImplicitDataflowRegionAccess().getEquationsAssignment_1()); }
(rule__ImplicitDataflowRegion__EquationsAssignment_1)*
{ after(grammarAccess.getImplicitDataflowRegionAccess().getEquationsAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ControlflowRegion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ControlflowRegion__Group__0__Impl
	rule__ControlflowRegion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlflowRegion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlflowRegionAccess().getControlflowRegionAction_0()); }
(

)
{ after(grammarAccess.getControlflowRegionAccess().getControlflowRegionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ControlflowRegion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ControlflowRegion__Group__1__Impl
	rule__ControlflowRegion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlflowRegion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlflowRegionAccess().getAnnotationsAssignment_1()); }
(rule__ControlflowRegion__AnnotationsAssignment_1)*
{ after(grammarAccess.getControlflowRegionAccess().getAnnotationsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ControlflowRegion__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ControlflowRegion__Group__2__Impl
	rule__ControlflowRegion__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlflowRegion__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlflowRegionAccess().getRegionKeyword_2()); }

	'region' 

{ after(grammarAccess.getControlflowRegionAccess().getRegionKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ControlflowRegion__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ControlflowRegion__Group__3__Impl
	rule__ControlflowRegion__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlflowRegion__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlflowRegionAccess().getNameAssignment_3()); }
(rule__ControlflowRegion__NameAssignment_3)?
{ after(grammarAccess.getControlflowRegionAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ControlflowRegion__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ControlflowRegion__Group__4__Impl
	rule__ControlflowRegion__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlflowRegion__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlflowRegionAccess().getLabelAssignment_4()); }
(rule__ControlflowRegion__LabelAssignment_4)?
{ after(grammarAccess.getControlflowRegionAccess().getLabelAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ControlflowRegion__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ControlflowRegion__Group__5__Impl
	rule__ControlflowRegion__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlflowRegion__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlflowRegionAccess().getGroup_5()); }
(rule__ControlflowRegion__Group_5__0)?
{ after(grammarAccess.getControlflowRegionAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ControlflowRegion__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ControlflowRegion__Group__6__Impl
	rule__ControlflowRegion__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlflowRegion__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlflowRegionAccess().getColonKeyword_6()); }

	':' 

{ after(grammarAccess.getControlflowRegionAccess().getColonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ControlflowRegion__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ControlflowRegion__Group__7__Impl
	rule__ControlflowRegion__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlflowRegion__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlflowRegionAccess().getDeclarationsAssignment_7()); }
(rule__ControlflowRegion__DeclarationsAssignment_7)*
{ after(grammarAccess.getControlflowRegionAccess().getDeclarationsAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ControlflowRegion__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ControlflowRegion__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlflowRegion__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getControlflowRegionAccess().getStatesAssignment_8()); }
(rule__ControlflowRegion__StatesAssignment_8)
{ after(grammarAccess.getControlflowRegionAccess().getStatesAssignment_8()); }
)
(
{ before(grammarAccess.getControlflowRegionAccess().getStatesAssignment_8()); }
(rule__ControlflowRegion__StatesAssignment_8)*
{ after(grammarAccess.getControlflowRegionAccess().getStatesAssignment_8()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__ControlflowRegion__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ControlflowRegion__Group_5__0__Impl
	rule__ControlflowRegion__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlflowRegion__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlflowRegionAccess().getForKeyword_5_0()); }

	'for' 

{ after(grammarAccess.getControlflowRegionAccess().getForKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ControlflowRegion__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ControlflowRegion__Group_5__1__Impl
	rule__ControlflowRegion__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlflowRegion__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlflowRegionAccess().getCounterVariableAssignment_5_1()); }
(rule__ControlflowRegion__CounterVariableAssignment_5_1)
{ after(grammarAccess.getControlflowRegionAccess().getCounterVariableAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ControlflowRegion__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ControlflowRegion__Group_5__2__Impl
	rule__ControlflowRegion__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlflowRegion__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlflowRegionAccess().getColonKeyword_5_2()); }

	':' 

{ after(grammarAccess.getControlflowRegionAccess().getColonKeyword_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ControlflowRegion__Group_5__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ControlflowRegion__Group_5__3__Impl
	rule__ControlflowRegion__Group_5__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlflowRegion__Group_5__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlflowRegionAccess().getForStartAssignment_5_3()); }
(rule__ControlflowRegion__ForStartAssignment_5_3)
{ after(grammarAccess.getControlflowRegionAccess().getForStartAssignment_5_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ControlflowRegion__Group_5__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ControlflowRegion__Group_5__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlflowRegion__Group_5__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlflowRegionAccess().getGroup_5_4()); }
(rule__ControlflowRegion__Group_5_4__0)?
{ after(grammarAccess.getControlflowRegionAccess().getGroup_5_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ControlflowRegion__Group_5_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ControlflowRegion__Group_5_4__0__Impl
	rule__ControlflowRegion__Group_5_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlflowRegion__Group_5_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlflowRegionAccess().getFullStopFullStopKeyword_5_4_0()); }

	'..' 

{ after(grammarAccess.getControlflowRegionAccess().getFullStopFullStopKeyword_5_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ControlflowRegion__Group_5_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ControlflowRegion__Group_5_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlflowRegion__Group_5_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlflowRegionAccess().getForEndAssignment_5_4_1()); }
(rule__ControlflowRegion__ForEndAssignment_5_4_1)
{ after(grammarAccess.getControlflowRegionAccess().getForEndAssignment_5_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NestedControlflowRegion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedControlflowRegion__Group__0__Impl
	rule__NestedControlflowRegion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedControlflowRegion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedControlflowRegionAccess().getControlflowRegionAction_0()); }
(

)
{ after(grammarAccess.getNestedControlflowRegionAccess().getControlflowRegionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NestedControlflowRegion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedControlflowRegion__Group__1__Impl
	rule__NestedControlflowRegion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedControlflowRegion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedControlflowRegionAccess().getAnnotationsAssignment_1()); }
(rule__NestedControlflowRegion__AnnotationsAssignment_1)*
{ after(grammarAccess.getNestedControlflowRegionAccess().getAnnotationsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NestedControlflowRegion__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedControlflowRegion__Group__2__Impl
	rule__NestedControlflowRegion__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedControlflowRegion__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedControlflowRegionAccess().getRegionKeyword_2()); }

	'region' 

{ after(grammarAccess.getNestedControlflowRegionAccess().getRegionKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NestedControlflowRegion__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedControlflowRegion__Group__3__Impl
	rule__NestedControlflowRegion__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedControlflowRegion__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedControlflowRegionAccess().getNameAssignment_3()); }
(rule__NestedControlflowRegion__NameAssignment_3)?
{ after(grammarAccess.getNestedControlflowRegionAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NestedControlflowRegion__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedControlflowRegion__Group__4__Impl
	rule__NestedControlflowRegion__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedControlflowRegion__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedControlflowRegionAccess().getLabelAssignment_4()); }
(rule__NestedControlflowRegion__LabelAssignment_4)?
{ after(grammarAccess.getNestedControlflowRegionAccess().getLabelAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NestedControlflowRegion__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedControlflowRegion__Group__5__Impl
	rule__NestedControlflowRegion__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedControlflowRegion__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedControlflowRegionAccess().getGroup_5()); }
(rule__NestedControlflowRegion__Group_5__0)?
{ after(grammarAccess.getNestedControlflowRegionAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NestedControlflowRegion__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedControlflowRegion__Group__6__Impl
	rule__NestedControlflowRegion__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedControlflowRegion__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedControlflowRegionAccess().getLeftCurlyBracketKeyword_6()); }

	'{' 

{ after(grammarAccess.getNestedControlflowRegionAccess().getLeftCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NestedControlflowRegion__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedControlflowRegion__Group__7__Impl
	rule__NestedControlflowRegion__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedControlflowRegion__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedControlflowRegionAccess().getDeclarationsAssignment_7()); }
(rule__NestedControlflowRegion__DeclarationsAssignment_7)*
{ after(grammarAccess.getNestedControlflowRegionAccess().getDeclarationsAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NestedControlflowRegion__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedControlflowRegion__Group__8__Impl
	rule__NestedControlflowRegion__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedControlflowRegion__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedControlflowRegionAccess().getAlternatives_8()); }
(rule__NestedControlflowRegion__Alternatives_8)
{ after(grammarAccess.getNestedControlflowRegionAccess().getAlternatives_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NestedControlflowRegion__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedControlflowRegion__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedControlflowRegion__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedControlflowRegionAccess().getRightCurlyBracketKeyword_9()); }

	'}' 

{ after(grammarAccess.getNestedControlflowRegionAccess().getRightCurlyBracketKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__NestedControlflowRegion__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedControlflowRegion__Group_5__0__Impl
	rule__NestedControlflowRegion__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedControlflowRegion__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedControlflowRegionAccess().getForKeyword_5_0()); }

	'for' 

{ after(grammarAccess.getNestedControlflowRegionAccess().getForKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NestedControlflowRegion__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedControlflowRegion__Group_5__1__Impl
	rule__NestedControlflowRegion__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedControlflowRegion__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedControlflowRegionAccess().getCounterVariableAssignment_5_1()); }
(rule__NestedControlflowRegion__CounterVariableAssignment_5_1)
{ after(grammarAccess.getNestedControlflowRegionAccess().getCounterVariableAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NestedControlflowRegion__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedControlflowRegion__Group_5__2__Impl
	rule__NestedControlflowRegion__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedControlflowRegion__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedControlflowRegionAccess().getColonKeyword_5_2()); }

	':' 

{ after(grammarAccess.getNestedControlflowRegionAccess().getColonKeyword_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NestedControlflowRegion__Group_5__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedControlflowRegion__Group_5__3__Impl
	rule__NestedControlflowRegion__Group_5__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedControlflowRegion__Group_5__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedControlflowRegionAccess().getForStartAssignment_5_3()); }
(rule__NestedControlflowRegion__ForStartAssignment_5_3)
{ after(grammarAccess.getNestedControlflowRegionAccess().getForStartAssignment_5_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NestedControlflowRegion__Group_5__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedControlflowRegion__Group_5__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedControlflowRegion__Group_5__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedControlflowRegionAccess().getGroup_5_4()); }
(rule__NestedControlflowRegion__Group_5_4__0)?
{ after(grammarAccess.getNestedControlflowRegionAccess().getGroup_5_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__NestedControlflowRegion__Group_5_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedControlflowRegion__Group_5_4__0__Impl
	rule__NestedControlflowRegion__Group_5_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedControlflowRegion__Group_5_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedControlflowRegionAccess().getFullStopFullStopKeyword_5_4_0()); }

	'..' 

{ after(grammarAccess.getNestedControlflowRegionAccess().getFullStopFullStopKeyword_5_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NestedControlflowRegion__Group_5_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedControlflowRegion__Group_5_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedControlflowRegion__Group_5_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedControlflowRegionAccess().getForEndAssignment_5_4_1()); }
(rule__NestedControlflowRegion__ForEndAssignment_5_4_1)
{ after(grammarAccess.getNestedControlflowRegionAccess().getForEndAssignment_5_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DataflowRegion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataflowRegion__Group__0__Impl
	rule__DataflowRegion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowRegion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataflowRegionAccess().getDataflowRegionAction_0()); }
(

)
{ after(grammarAccess.getDataflowRegionAccess().getDataflowRegionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataflowRegion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataflowRegion__Group__1__Impl
	rule__DataflowRegion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowRegion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataflowRegionAccess().getAnnotationsAssignment_1()); }
(rule__DataflowRegion__AnnotationsAssignment_1)*
{ after(grammarAccess.getDataflowRegionAccess().getAnnotationsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataflowRegion__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataflowRegion__Group__2__Impl
	rule__DataflowRegion__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowRegion__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataflowRegionAccess().getDataflowKeyword_2()); }

	'dataflow' 

{ after(grammarAccess.getDataflowRegionAccess().getDataflowKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataflowRegion__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataflowRegion__Group__3__Impl
	rule__DataflowRegion__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowRegion__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataflowRegionAccess().getNameAssignment_3()); }
(rule__DataflowRegion__NameAssignment_3)?
{ after(grammarAccess.getDataflowRegionAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataflowRegion__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataflowRegion__Group__4__Impl
	rule__DataflowRegion__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowRegion__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataflowRegionAccess().getLabelAssignment_4()); }
(rule__DataflowRegion__LabelAssignment_4)?
{ after(grammarAccess.getDataflowRegionAccess().getLabelAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataflowRegion__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataflowRegion__Group__5__Impl
	rule__DataflowRegion__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowRegion__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataflowRegionAccess().getGroup_5()); }
(rule__DataflowRegion__Group_5__0)?
{ after(grammarAccess.getDataflowRegionAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataflowRegion__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataflowRegion__Group__6__Impl
	rule__DataflowRegion__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowRegion__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataflowRegionAccess().getColonKeyword_6()); }

	':' 

{ after(grammarAccess.getDataflowRegionAccess().getColonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataflowRegion__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataflowRegion__Group__7__Impl
	rule__DataflowRegion__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowRegion__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataflowRegionAccess().getDeclarationsAssignment_7()); }
(rule__DataflowRegion__DeclarationsAssignment_7)*
{ after(grammarAccess.getDataflowRegionAccess().getDeclarationsAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataflowRegion__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataflowRegion__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowRegion__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getDataflowRegionAccess().getEquationsAssignment_8()); }
(rule__DataflowRegion__EquationsAssignment_8)
{ after(grammarAccess.getDataflowRegionAccess().getEquationsAssignment_8()); }
)
(
{ before(grammarAccess.getDataflowRegionAccess().getEquationsAssignment_8()); }
(rule__DataflowRegion__EquationsAssignment_8)*
{ after(grammarAccess.getDataflowRegionAccess().getEquationsAssignment_8()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__DataflowRegion__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataflowRegion__Group_5__0__Impl
	rule__DataflowRegion__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowRegion__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataflowRegionAccess().getForKeyword_5_0()); }

	'for' 

{ after(grammarAccess.getDataflowRegionAccess().getForKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataflowRegion__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataflowRegion__Group_5__1__Impl
	rule__DataflowRegion__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowRegion__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataflowRegionAccess().getCounterVariableAssignment_5_1()); }
(rule__DataflowRegion__CounterVariableAssignment_5_1)
{ after(grammarAccess.getDataflowRegionAccess().getCounterVariableAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataflowRegion__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataflowRegion__Group_5__2__Impl
	rule__DataflowRegion__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowRegion__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataflowRegionAccess().getColonKeyword_5_2()); }

	':' 

{ after(grammarAccess.getDataflowRegionAccess().getColonKeyword_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataflowRegion__Group_5__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataflowRegion__Group_5__3__Impl
	rule__DataflowRegion__Group_5__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowRegion__Group_5__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataflowRegionAccess().getForStartAssignment_5_3()); }
(rule__DataflowRegion__ForStartAssignment_5_3)
{ after(grammarAccess.getDataflowRegionAccess().getForStartAssignment_5_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataflowRegion__Group_5__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataflowRegion__Group_5__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowRegion__Group_5__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataflowRegionAccess().getGroup_5_4()); }
(rule__DataflowRegion__Group_5_4__0)?
{ after(grammarAccess.getDataflowRegionAccess().getGroup_5_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__DataflowRegion__Group_5_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataflowRegion__Group_5_4__0__Impl
	rule__DataflowRegion__Group_5_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowRegion__Group_5_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataflowRegionAccess().getFullStopFullStopKeyword_5_4_0()); }

	'..' 

{ after(grammarAccess.getDataflowRegionAccess().getFullStopFullStopKeyword_5_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataflowRegion__Group_5_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataflowRegion__Group_5_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowRegion__Group_5_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataflowRegionAccess().getForEndAssignment_5_4_1()); }
(rule__DataflowRegion__ForEndAssignment_5_4_1)
{ after(grammarAccess.getDataflowRegionAccess().getForEndAssignment_5_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EntryAction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntryAction__Group__0__Impl
	rule__EntryAction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryAction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntryActionAccess().getEntryActionAction_0()); }
(

)
{ after(grammarAccess.getEntryActionAccess().getEntryActionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EntryAction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntryAction__Group__1__Impl
	rule__EntryAction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryAction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntryActionAccess().getEntryKeyword_1()); }

	'entry' 

{ after(grammarAccess.getEntryActionAccess().getEntryKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EntryAction__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntryAction__Group__2__Impl
	rule__EntryAction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryAction__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntryActionAccess().getGroup_2()); }
(rule__EntryAction__Group_2__0)?
{ after(grammarAccess.getEntryActionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EntryAction__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntryAction__Group__3__Impl
	rule__EntryAction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryAction__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntryActionAccess().getGroup_3()); }
(rule__EntryAction__Group_3__0)?
{ after(grammarAccess.getEntryActionAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EntryAction__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntryAction__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryAction__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntryActionAccess().getGroup_4()); }
(rule__EntryAction__Group_4__0)?
{ after(grammarAccess.getEntryActionAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__EntryAction__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntryAction__Group_2__0__Impl
	rule__EntryAction__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryAction__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntryActionAccess().getIfKeyword_2_0()); }

	'if' 

{ after(grammarAccess.getEntryActionAccess().getIfKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EntryAction__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntryAction__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryAction__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntryActionAccess().getTriggerAssignment_2_1()); }
(rule__EntryAction__TriggerAssignment_2_1)
{ after(grammarAccess.getEntryActionAccess().getTriggerAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EntryAction__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntryAction__Group_3__0__Impl
	rule__EntryAction__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryAction__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntryActionAccess().getDoKeyword_3_0()); }

	'do' 

{ after(grammarAccess.getEntryActionAccess().getDoKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EntryAction__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntryAction__Group_3__1__Impl
	rule__EntryAction__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryAction__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntryActionAccess().getEffectsAssignment_3_1()); }
(rule__EntryAction__EffectsAssignment_3_1)
{ after(grammarAccess.getEntryActionAccess().getEffectsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EntryAction__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntryAction__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryAction__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntryActionAccess().getGroup_3_2()); }
(rule__EntryAction__Group_3_2__0)*
{ after(grammarAccess.getEntryActionAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__EntryAction__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntryAction__Group_3_2__0__Impl
	rule__EntryAction__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryAction__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntryActionAccess().getSemicolonKeyword_3_2_0()); }

	';' 

{ after(grammarAccess.getEntryActionAccess().getSemicolonKeyword_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EntryAction__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntryAction__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryAction__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntryActionAccess().getEffectsAssignment_3_2_1()); }
(rule__EntryAction__EffectsAssignment_3_2_1)
{ after(grammarAccess.getEntryActionAccess().getEffectsAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EntryAction__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntryAction__Group_4__0__Impl
	rule__EntryAction__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryAction__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntryActionAccess().getLabelKeyword_4_0()); }

	'label' 

{ after(grammarAccess.getEntryActionAccess().getLabelKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EntryAction__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntryAction__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryAction__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntryActionAccess().getLabelAssignment_4_1()); }
(rule__EntryAction__LabelAssignment_4_1)
{ after(grammarAccess.getEntryActionAccess().getLabelAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DuringAction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DuringAction__Group__0__Impl
	rule__DuringAction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DuringAction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDuringActionAccess().getDuringActionAction_0()); }
(

)
{ after(grammarAccess.getDuringActionAccess().getDuringActionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DuringAction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DuringAction__Group__1__Impl
	rule__DuringAction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DuringAction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDuringActionAccess().getDelayAssignment_1()); }
(rule__DuringAction__DelayAssignment_1)?
{ after(grammarAccess.getDuringActionAccess().getDelayAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DuringAction__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DuringAction__Group__2__Impl
	rule__DuringAction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DuringAction__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDuringActionAccess().getDuringKeyword_2()); }

	'during' 

{ after(grammarAccess.getDuringActionAccess().getDuringKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DuringAction__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DuringAction__Group__3__Impl
	rule__DuringAction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DuringAction__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDuringActionAccess().getGroup_3()); }
(rule__DuringAction__Group_3__0)?
{ after(grammarAccess.getDuringActionAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DuringAction__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DuringAction__Group__4__Impl
	rule__DuringAction__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DuringAction__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDuringActionAccess().getGroup_4()); }
(rule__DuringAction__Group_4__0)?
{ after(grammarAccess.getDuringActionAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DuringAction__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DuringAction__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DuringAction__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDuringActionAccess().getGroup_5()); }
(rule__DuringAction__Group_5__0)?
{ after(grammarAccess.getDuringActionAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__DuringAction__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DuringAction__Group_3__0__Impl
	rule__DuringAction__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DuringAction__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDuringActionAccess().getIfKeyword_3_0()); }

	'if' 

{ after(grammarAccess.getDuringActionAccess().getIfKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DuringAction__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DuringAction__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DuringAction__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDuringActionAccess().getTriggerAssignment_3_1()); }
(rule__DuringAction__TriggerAssignment_3_1)
{ after(grammarAccess.getDuringActionAccess().getTriggerAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DuringAction__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DuringAction__Group_4__0__Impl
	rule__DuringAction__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DuringAction__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDuringActionAccess().getDoKeyword_4_0()); }

	'do' 

{ after(grammarAccess.getDuringActionAccess().getDoKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DuringAction__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DuringAction__Group_4__1__Impl
	rule__DuringAction__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DuringAction__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDuringActionAccess().getEffectsAssignment_4_1()); }
(rule__DuringAction__EffectsAssignment_4_1)
{ after(grammarAccess.getDuringActionAccess().getEffectsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DuringAction__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DuringAction__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DuringAction__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDuringActionAccess().getGroup_4_2()); }
(rule__DuringAction__Group_4_2__0)*
{ after(grammarAccess.getDuringActionAccess().getGroup_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DuringAction__Group_4_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DuringAction__Group_4_2__0__Impl
	rule__DuringAction__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DuringAction__Group_4_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDuringActionAccess().getSemicolonKeyword_4_2_0()); }

	';' 

{ after(grammarAccess.getDuringActionAccess().getSemicolonKeyword_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DuringAction__Group_4_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DuringAction__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DuringAction__Group_4_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDuringActionAccess().getEffectsAssignment_4_2_1()); }
(rule__DuringAction__EffectsAssignment_4_2_1)
{ after(grammarAccess.getDuringActionAccess().getEffectsAssignment_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DuringAction__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DuringAction__Group_5__0__Impl
	rule__DuringAction__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DuringAction__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDuringActionAccess().getLabelKeyword_5_0()); }

	'label' 

{ after(grammarAccess.getDuringActionAccess().getLabelKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DuringAction__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DuringAction__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DuringAction__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDuringActionAccess().getLabelAssignment_5_1()); }
(rule__DuringAction__LabelAssignment_5_1)
{ after(grammarAccess.getDuringActionAccess().getLabelAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExitAction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExitAction__Group__0__Impl
	rule__ExitAction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExitAction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitActionAccess().getExitActionAction_0()); }
(

)
{ after(grammarAccess.getExitActionAccess().getExitActionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExitAction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExitAction__Group__1__Impl
	rule__ExitAction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExitAction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitActionAccess().getExitKeyword_1()); }

	'exit' 

{ after(grammarAccess.getExitActionAccess().getExitKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExitAction__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExitAction__Group__2__Impl
	rule__ExitAction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExitAction__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitActionAccess().getGroup_2()); }
(rule__ExitAction__Group_2__0)?
{ after(grammarAccess.getExitActionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExitAction__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExitAction__Group__3__Impl
	rule__ExitAction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExitAction__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitActionAccess().getGroup_3()); }
(rule__ExitAction__Group_3__0)?
{ after(grammarAccess.getExitActionAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExitAction__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExitAction__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExitAction__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitActionAccess().getGroup_4()); }
(rule__ExitAction__Group_4__0)?
{ after(grammarAccess.getExitActionAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ExitAction__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExitAction__Group_2__0__Impl
	rule__ExitAction__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExitAction__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitActionAccess().getIfKeyword_2_0()); }

	'if' 

{ after(grammarAccess.getExitActionAccess().getIfKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExitAction__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExitAction__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExitAction__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitActionAccess().getTriggerAssignment_2_1()); }
(rule__ExitAction__TriggerAssignment_2_1)
{ after(grammarAccess.getExitActionAccess().getTriggerAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExitAction__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExitAction__Group_3__0__Impl
	rule__ExitAction__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExitAction__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitActionAccess().getDoKeyword_3_0()); }

	'do' 

{ after(grammarAccess.getExitActionAccess().getDoKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExitAction__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExitAction__Group_3__1__Impl
	rule__ExitAction__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExitAction__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitActionAccess().getEffectsAssignment_3_1()); }
(rule__ExitAction__EffectsAssignment_3_1)
{ after(grammarAccess.getExitActionAccess().getEffectsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExitAction__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExitAction__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExitAction__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitActionAccess().getGroup_3_2()); }
(rule__ExitAction__Group_3_2__0)*
{ after(grammarAccess.getExitActionAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExitAction__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExitAction__Group_3_2__0__Impl
	rule__ExitAction__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExitAction__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitActionAccess().getSemicolonKeyword_3_2_0()); }

	';' 

{ after(grammarAccess.getExitActionAccess().getSemicolonKeyword_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExitAction__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExitAction__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExitAction__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitActionAccess().getEffectsAssignment_3_2_1()); }
(rule__ExitAction__EffectsAssignment_3_2_1)
{ after(grammarAccess.getExitActionAccess().getEffectsAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExitAction__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExitAction__Group_4__0__Impl
	rule__ExitAction__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExitAction__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitActionAccess().getLabelKeyword_4_0()); }

	'label' 

{ after(grammarAccess.getExitActionAccess().getLabelKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExitAction__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExitAction__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExitAction__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitActionAccess().getLabelAssignment_4_1()); }
(rule__ExitAction__LabelAssignment_4_1)
{ after(grammarAccess.getExitActionAccess().getLabelAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SuspendAction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuspendAction__Group__0__Impl
	rule__SuspendAction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SuspendAction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuspendActionAccess().getSuspendActionAction_0()); }
(

)
{ after(grammarAccess.getSuspendActionAccess().getSuspendActionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuspendAction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuspendAction__Group__1__Impl
	rule__SuspendAction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SuspendAction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuspendActionAccess().getDelayAssignment_1()); }
(rule__SuspendAction__DelayAssignment_1)?
{ after(grammarAccess.getSuspendActionAccess().getDelayAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuspendAction__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuspendAction__Group__2__Impl
	rule__SuspendAction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SuspendAction__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuspendActionAccess().getWeakAssignment_2()); }
(rule__SuspendAction__WeakAssignment_2)?
{ after(grammarAccess.getSuspendActionAccess().getWeakAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuspendAction__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuspendAction__Group__3__Impl
	rule__SuspendAction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SuspendAction__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuspendActionAccess().getSuspendKeyword_3()); }

	'suspend' 

{ after(grammarAccess.getSuspendActionAccess().getSuspendKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuspendAction__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuspendAction__Group__4__Impl
	rule__SuspendAction__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SuspendAction__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuspendActionAccess().getGroup_4()); }
(rule__SuspendAction__Group_4__0)?
{ after(grammarAccess.getSuspendActionAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuspendAction__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuspendAction__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SuspendAction__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuspendActionAccess().getGroup_5()); }
(rule__SuspendAction__Group_5__0)?
{ after(grammarAccess.getSuspendActionAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__SuspendAction__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuspendAction__Group_4__0__Impl
	rule__SuspendAction__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SuspendAction__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuspendActionAccess().getIfKeyword_4_0()); }

	'if' 

{ after(grammarAccess.getSuspendActionAccess().getIfKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuspendAction__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuspendAction__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SuspendAction__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuspendActionAccess().getTriggerAssignment_4_1()); }
(rule__SuspendAction__TriggerAssignment_4_1)
{ after(grammarAccess.getSuspendActionAccess().getTriggerAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SuspendAction__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuspendAction__Group_5__0__Impl
	rule__SuspendAction__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SuspendAction__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuspendActionAccess().getLabelKeyword_5_0()); }

	'label' 

{ after(grammarAccess.getSuspendActionAccess().getLabelKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuspendAction__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuspendAction__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SuspendAction__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuspendActionAccess().getLabelAssignment_5_1()); }
(rule__SuspendAction__LabelAssignment_5_1)
{ after(grammarAccess.getSuspendActionAccess().getLabelAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrecedingAction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrecedingAction__Group__0__Impl
	rule__PrecedingAction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrecedingAction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrecedingActionAccess().getPrecedingActionAction_0()); }
(

)
{ after(grammarAccess.getPrecedingActionAccess().getPrecedingActionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrecedingAction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrecedingAction__Group__1__Impl
	rule__PrecedingAction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrecedingAction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrecedingActionAccess().getPrecedingKeyword_1()); }

	'preceding' 

{ after(grammarAccess.getPrecedingActionAccess().getPrecedingKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrecedingAction__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrecedingAction__Group__2__Impl
	rule__PrecedingAction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrecedingAction__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrecedingActionAccess().getGroup_2()); }
(rule__PrecedingAction__Group_2__0)?
{ after(grammarAccess.getPrecedingActionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrecedingAction__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrecedingAction__Group__3__Impl
	rule__PrecedingAction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PrecedingAction__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrecedingActionAccess().getGroup_3()); }
(rule__PrecedingAction__Group_3__0)?
{ after(grammarAccess.getPrecedingActionAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrecedingAction__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrecedingAction__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrecedingAction__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrecedingActionAccess().getGroup_4()); }
(rule__PrecedingAction__Group_4__0)?
{ after(grammarAccess.getPrecedingActionAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__PrecedingAction__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrecedingAction__Group_2__0__Impl
	rule__PrecedingAction__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrecedingAction__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrecedingActionAccess().getIfKeyword_2_0()); }

	'if' 

{ after(grammarAccess.getPrecedingActionAccess().getIfKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrecedingAction__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrecedingAction__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrecedingAction__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrecedingActionAccess().getTriggerAssignment_2_1()); }
(rule__PrecedingAction__TriggerAssignment_2_1)
{ after(grammarAccess.getPrecedingActionAccess().getTriggerAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrecedingAction__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrecedingAction__Group_3__0__Impl
	rule__PrecedingAction__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrecedingAction__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrecedingActionAccess().getDoKeyword_3_0()); }

	'do' 

{ after(grammarAccess.getPrecedingActionAccess().getDoKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrecedingAction__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrecedingAction__Group_3__1__Impl
	rule__PrecedingAction__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrecedingAction__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrecedingActionAccess().getEffectsAssignment_3_1()); }
(rule__PrecedingAction__EffectsAssignment_3_1)
{ after(grammarAccess.getPrecedingActionAccess().getEffectsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrecedingAction__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrecedingAction__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrecedingAction__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrecedingActionAccess().getGroup_3_2()); }
(rule__PrecedingAction__Group_3_2__0)*
{ after(grammarAccess.getPrecedingActionAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PrecedingAction__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrecedingAction__Group_3_2__0__Impl
	rule__PrecedingAction__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrecedingAction__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrecedingActionAccess().getSemicolonKeyword_3_2_0()); }

	';' 

{ after(grammarAccess.getPrecedingActionAccess().getSemicolonKeyword_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrecedingAction__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrecedingAction__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrecedingAction__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrecedingActionAccess().getEffectsAssignment_3_2_1()); }
(rule__PrecedingAction__EffectsAssignment_3_2_1)
{ after(grammarAccess.getPrecedingActionAccess().getEffectsAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrecedingAction__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrecedingAction__Group_4__0__Impl
	rule__PrecedingAction__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrecedingAction__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrecedingActionAccess().getLabelKeyword_4_0()); }

	'label' 

{ after(grammarAccess.getPrecedingActionAccess().getLabelKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrecedingAction__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrecedingAction__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrecedingAction__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrecedingActionAccess().getLabelAssignment_4_1()); }
(rule__PrecedingAction__LabelAssignment_4_1)
{ after(grammarAccess.getPrecedingActionAccess().getLabelAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SucceedingAction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SucceedingAction__Group__0__Impl
	rule__SucceedingAction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SucceedingAction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSucceedingActionAccess().getSucceedingActionAction_0()); }
(

)
{ after(grammarAccess.getSucceedingActionAccess().getSucceedingActionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SucceedingAction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SucceedingAction__Group__1__Impl
	rule__SucceedingAction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SucceedingAction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSucceedingActionAccess().getSucceedingKeyword_1()); }

	'succeeding' 

{ after(grammarAccess.getSucceedingActionAccess().getSucceedingKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SucceedingAction__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SucceedingAction__Group__2__Impl
	rule__SucceedingAction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SucceedingAction__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSucceedingActionAccess().getGroup_2()); }
(rule__SucceedingAction__Group_2__0)?
{ after(grammarAccess.getSucceedingActionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SucceedingAction__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SucceedingAction__Group__3__Impl
	rule__SucceedingAction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SucceedingAction__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSucceedingActionAccess().getGroup_3()); }
(rule__SucceedingAction__Group_3__0)?
{ after(grammarAccess.getSucceedingActionAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SucceedingAction__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SucceedingAction__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SucceedingAction__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSucceedingActionAccess().getGroup_4()); }
(rule__SucceedingAction__Group_4__0)?
{ after(grammarAccess.getSucceedingActionAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__SucceedingAction__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SucceedingAction__Group_2__0__Impl
	rule__SucceedingAction__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SucceedingAction__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSucceedingActionAccess().getIfKeyword_2_0()); }

	'if' 

{ after(grammarAccess.getSucceedingActionAccess().getIfKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SucceedingAction__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SucceedingAction__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SucceedingAction__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSucceedingActionAccess().getTriggerAssignment_2_1()); }
(rule__SucceedingAction__TriggerAssignment_2_1)
{ after(grammarAccess.getSucceedingActionAccess().getTriggerAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SucceedingAction__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SucceedingAction__Group_3__0__Impl
	rule__SucceedingAction__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SucceedingAction__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSucceedingActionAccess().getDoKeyword_3_0()); }

	'do' 

{ after(grammarAccess.getSucceedingActionAccess().getDoKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SucceedingAction__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SucceedingAction__Group_3__1__Impl
	rule__SucceedingAction__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SucceedingAction__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSucceedingActionAccess().getEffectsAssignment_3_1()); }
(rule__SucceedingAction__EffectsAssignment_3_1)
{ after(grammarAccess.getSucceedingActionAccess().getEffectsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SucceedingAction__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SucceedingAction__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SucceedingAction__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSucceedingActionAccess().getGroup_3_2()); }
(rule__SucceedingAction__Group_3_2__0)*
{ after(grammarAccess.getSucceedingActionAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SucceedingAction__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SucceedingAction__Group_3_2__0__Impl
	rule__SucceedingAction__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SucceedingAction__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSucceedingActionAccess().getSemicolonKeyword_3_2_0()); }

	';' 

{ after(grammarAccess.getSucceedingActionAccess().getSemicolonKeyword_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SucceedingAction__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SucceedingAction__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SucceedingAction__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSucceedingActionAccess().getEffectsAssignment_3_2_1()); }
(rule__SucceedingAction__EffectsAssignment_3_2_1)
{ after(grammarAccess.getSucceedingActionAccess().getEffectsAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SucceedingAction__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SucceedingAction__Group_4__0__Impl
	rule__SucceedingAction__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SucceedingAction__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSucceedingActionAccess().getLabelKeyword_4_0()); }

	'label' 

{ after(grammarAccess.getSucceedingActionAccess().getLabelKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SucceedingAction__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SucceedingAction__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SucceedingAction__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSucceedingActionAccess().getLabelAssignment_4_1()); }
(rule__SucceedingAction__LabelAssignment_4_1)
{ after(grammarAccess.getSucceedingActionAccess().getLabelAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RootScope__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RootScope__Group__0__Impl
	rule__RootScope__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RootScope__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootScopeAccess().getKExtScopeAction_0()); }
(

)
{ after(grammarAccess.getRootScopeAccess().getKExtScopeAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RootScope__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RootScope__Group__1__Impl
	rule__RootScope__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RootScope__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootScopeAccess().getDeclarationsAssignment_1()); }
(rule__RootScope__DeclarationsAssignment_1)*
{ after(grammarAccess.getRootScopeAccess().getDeclarationsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RootScope__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RootScope__Group__2__Impl
	rule__RootScope__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RootScope__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootScopeAccess().getEntitiesAssignment_2()); }
(rule__RootScope__EntitiesAssignment_2)*
{ after(grammarAccess.getRootScopeAccess().getEntitiesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RootScope__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RootScope__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RootScope__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootScopeAccess().getGroup_3()); }
(rule__RootScope__Group_3__0)*
{ after(grammarAccess.getRootScopeAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__RootScope__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RootScope__Group_3__0__Impl
	rule__RootScope__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RootScope__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootScopeAccess().getScopeKeyword_3_0()); }

	'scope' 

{ after(grammarAccess.getRootScopeAccess().getScopeKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RootScope__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RootScope__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RootScope__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootScopeAccess().getScopesAssignment_3_1()); }
(rule__RootScope__ScopesAssignment_3_1)
{ after(grammarAccess.getRootScopeAccess().getScopesAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Scope__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scope__Group__0__Impl
	rule__Scope__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeAccess().getKExtScopeAction_0()); }
(

)
{ after(grammarAccess.getScopeAccess().getKExtScopeAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Scope__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scope__Group__1__Impl
	rule__Scope__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeAccess().getNameAssignment_1()); }
(rule__Scope__NameAssignment_1)?
{ after(grammarAccess.getScopeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Scope__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scope__Group__2__Impl
	rule__Scope__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getScopeAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Scope__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scope__Group__3__Impl
	rule__Scope__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeAccess().getDeclarationsAssignment_3()); }
(rule__Scope__DeclarationsAssignment_3)*
{ after(grammarAccess.getScopeAccess().getDeclarationsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Scope__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scope__Group__4__Impl
	rule__Scope__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeAccess().getEntitiesAssignment_4()); }
(rule__Scope__EntitiesAssignment_4)*
{ after(grammarAccess.getScopeAccess().getEntitiesAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Scope__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scope__Group__5__Impl
	rule__Scope__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeAccess().getGroup_5()); }
(rule__Scope__Group_5__0)*
{ after(grammarAccess.getScopeAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Scope__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scope__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getScopeAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Scope__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scope__Group_5__0__Impl
	rule__Scope__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeAccess().getScopeKeyword_5_0()); }

	'scope' 

{ after(grammarAccess.getScopeAccess().getScopeKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Scope__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scope__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeAccess().getScopesAssignment_5_1()); }
(rule__Scope__ScopesAssignment_5_1)
{ after(grammarAccess.getScopeAccess().getScopesAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AnnotatedExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotatedExpression__Group__0__Impl
	rule__AnnotatedExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotatedExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotatedExpressionAccess().getAnnotationsAssignment_0()); }
(rule__AnnotatedExpression__AnnotationsAssignment_0)*
{ after(grammarAccess.getAnnotatedExpressionAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotatedExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotatedExpression__Group__1__Impl
	rule__AnnotatedExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotatedExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotatedExpressionAccess().getExpressionKeyword_1()); }

	'expression' 

{ after(grammarAccess.getAnnotatedExpressionAccess().getExpressionKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotatedExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotatedExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotatedExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotatedExpressionAccess().getExpressionAssignment_2()); }
(rule__AnnotatedExpression__ExpressionAssignment_2)
{ after(grammarAccess.getAnnotatedExpressionAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VariableDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__0__Impl
	rule__VariableDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getAnnotationsAssignment_0()); }
(rule__VariableDeclaration__AnnotationsAssignment_0)*
{ after(grammarAccess.getVariableDeclarationAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__1__Impl
	rule__VariableDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getConstAssignment_1()); }
(rule__VariableDeclaration__ConstAssignment_1)?
{ after(grammarAccess.getVariableDeclarationAccess().getConstAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__2__Impl
	rule__VariableDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getInputAssignment_2()); }
(rule__VariableDeclaration__InputAssignment_2)?
{ after(grammarAccess.getVariableDeclarationAccess().getInputAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__3__Impl
	rule__VariableDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getOutputAssignment_3()); }
(rule__VariableDeclaration__OutputAssignment_3)?
{ after(grammarAccess.getVariableDeclarationAccess().getOutputAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__4__Impl
	rule__VariableDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getStaticAssignment_4()); }
(rule__VariableDeclaration__StaticAssignment_4)?
{ after(grammarAccess.getVariableDeclarationAccess().getStaticAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__5__Impl
	rule__VariableDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getAlternatives_5()); }
(rule__VariableDeclaration__Alternatives_5)
{ after(grammarAccess.getVariableDeclarationAccess().getAlternatives_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__6__Impl
	rule__VariableDeclaration__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getValuedObjectsAssignment_6()); }
(rule__VariableDeclaration__ValuedObjectsAssignment_6)
{ after(grammarAccess.getVariableDeclarationAccess().getValuedObjectsAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__7__Impl
	rule__VariableDeclaration__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getGroup_7()); }
(rule__VariableDeclaration__Group_7__0)*
{ after(grammarAccess.getVariableDeclarationAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__8__Impl
	rule__VariableDeclaration__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getSemicolonKeyword_8()); }

	';' 

{ after(grammarAccess.getVariableDeclarationAccess().getSemicolonKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getAnnotationsAssignment_9()); }
(rule__VariableDeclaration__AnnotationsAssignment_9)?
{ after(grammarAccess.getVariableDeclarationAccess().getAnnotationsAssignment_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__VariableDeclaration__Group_5_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group_5_0__0__Impl
	rule__VariableDeclaration__Group_5_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_5_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getSignalAssignment_5_0_0()); }
(rule__VariableDeclaration__SignalAssignment_5_0_0)?
{ after(grammarAccess.getVariableDeclarationAccess().getSignalAssignment_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_5_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group_5_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_5_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getTypeAssignment_5_0_1()); }
(rule__VariableDeclaration__TypeAssignment_5_0_1)
{ after(grammarAccess.getVariableDeclarationAccess().getTypeAssignment_5_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VariableDeclaration__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group_7__0__Impl
	rule__VariableDeclaration__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getCommaKeyword_7_0()); }

	',' 

{ after(grammarAccess.getVariableDeclarationAccess().getCommaKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getValuedObjectsAssignment_7_1()); }
(rule__VariableDeclaration__ValuedObjectsAssignment_7_1)
{ after(grammarAccess.getVariableDeclarationAccess().getValuedObjectsAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VariableDeclarationWOSemicolon__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarationWOSemicolon__Group__0__Impl
	rule__VariableDeclarationWOSemicolon__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationWOSemicolon__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationWOSemicolonAccess().getAnnotationsAssignment_0()); }
(rule__VariableDeclarationWOSemicolon__AnnotationsAssignment_0)*
{ after(grammarAccess.getVariableDeclarationWOSemicolonAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclarationWOSemicolon__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarationWOSemicolon__Group__1__Impl
	rule__VariableDeclarationWOSemicolon__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationWOSemicolon__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationWOSemicolonAccess().getConstAssignment_1()); }
(rule__VariableDeclarationWOSemicolon__ConstAssignment_1)?
{ after(grammarAccess.getVariableDeclarationWOSemicolonAccess().getConstAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclarationWOSemicolon__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarationWOSemicolon__Group__2__Impl
	rule__VariableDeclarationWOSemicolon__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationWOSemicolon__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationWOSemicolonAccess().getInputAssignment_2()); }
(rule__VariableDeclarationWOSemicolon__InputAssignment_2)?
{ after(grammarAccess.getVariableDeclarationWOSemicolonAccess().getInputAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclarationWOSemicolon__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarationWOSemicolon__Group__3__Impl
	rule__VariableDeclarationWOSemicolon__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationWOSemicolon__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationWOSemicolonAccess().getOutputAssignment_3()); }
(rule__VariableDeclarationWOSemicolon__OutputAssignment_3)?
{ after(grammarAccess.getVariableDeclarationWOSemicolonAccess().getOutputAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclarationWOSemicolon__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarationWOSemicolon__Group__4__Impl
	rule__VariableDeclarationWOSemicolon__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationWOSemicolon__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationWOSemicolonAccess().getStaticAssignment_4()); }
(rule__VariableDeclarationWOSemicolon__StaticAssignment_4)?
{ after(grammarAccess.getVariableDeclarationWOSemicolonAccess().getStaticAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclarationWOSemicolon__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarationWOSemicolon__Group__5__Impl
	rule__VariableDeclarationWOSemicolon__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationWOSemicolon__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationWOSemicolonAccess().getAlternatives_5()); }
(rule__VariableDeclarationWOSemicolon__Alternatives_5)
{ after(grammarAccess.getVariableDeclarationWOSemicolonAccess().getAlternatives_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclarationWOSemicolon__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarationWOSemicolon__Group__6__Impl
	rule__VariableDeclarationWOSemicolon__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationWOSemicolon__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationWOSemicolonAccess().getValuedObjectsAssignment_6()); }
(rule__VariableDeclarationWOSemicolon__ValuedObjectsAssignment_6)
{ after(grammarAccess.getVariableDeclarationWOSemicolonAccess().getValuedObjectsAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclarationWOSemicolon__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarationWOSemicolon__Group__7__Impl
	rule__VariableDeclarationWOSemicolon__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationWOSemicolon__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationWOSemicolonAccess().getGroup_7()); }
(rule__VariableDeclarationWOSemicolon__Group_7__0)*
{ after(grammarAccess.getVariableDeclarationWOSemicolonAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclarationWOSemicolon__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarationWOSemicolon__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationWOSemicolon__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationWOSemicolonAccess().getAnnotationsAssignment_8()); }
(rule__VariableDeclarationWOSemicolon__AnnotationsAssignment_8)?
{ after(grammarAccess.getVariableDeclarationWOSemicolonAccess().getAnnotationsAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__VariableDeclarationWOSemicolon__Group_5_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarationWOSemicolon__Group_5_0__0__Impl
	rule__VariableDeclarationWOSemicolon__Group_5_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationWOSemicolon__Group_5_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationWOSemicolonAccess().getSignalAssignment_5_0_0()); }
(rule__VariableDeclarationWOSemicolon__SignalAssignment_5_0_0)?
{ after(grammarAccess.getVariableDeclarationWOSemicolonAccess().getSignalAssignment_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclarationWOSemicolon__Group_5_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarationWOSemicolon__Group_5_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationWOSemicolon__Group_5_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationWOSemicolonAccess().getTypeAssignment_5_0_1()); }
(rule__VariableDeclarationWOSemicolon__TypeAssignment_5_0_1)
{ after(grammarAccess.getVariableDeclarationWOSemicolonAccess().getTypeAssignment_5_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VariableDeclarationWOSemicolon__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarationWOSemicolon__Group_7__0__Impl
	rule__VariableDeclarationWOSemicolon__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationWOSemicolon__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationWOSemicolonAccess().getCommaKeyword_7_0()); }

	',' 

{ after(grammarAccess.getVariableDeclarationWOSemicolonAccess().getCommaKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclarationWOSemicolon__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarationWOSemicolon__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationWOSemicolon__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationWOSemicolonAccess().getValuedObjectsAssignment_7_1()); }
(rule__VariableDeclarationWOSemicolon__ValuedObjectsAssignment_7_1)
{ after(grammarAccess.getVariableDeclarationWOSemicolonAccess().getValuedObjectsAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NamespaceID__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamespaceID__Group__0__Impl
	rule__NamespaceID__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceID__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceIDAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getNamespaceIDAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamespaceID__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamespaceID__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceID__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceIDAccess().getGroup_1()); }
(rule__NamespaceID__Group_1__0)*
{ after(grammarAccess.getNamespaceIDAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NamespaceID__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamespaceID__Group_1__0__Impl
	rule__NamespaceID__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceID__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceIDAccess().getColonKeyword_1_0()); }

	':' 

{ after(grammarAccess.getNamespaceIDAccess().getColonKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamespaceID__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamespaceID__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceID__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceIDAccess().getPrimeIDParserRuleCall_1_1()); }
	rulePrimeID
{ after(grammarAccess.getNamespaceIDAccess().getPrimeIDParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ReferenceDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceDeclaration__Group__0__Impl
	rule__ReferenceDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceDeclarationAccess().getAnnotationsAssignment_0()); }
(rule__ReferenceDeclaration__AnnotationsAssignment_0)*
{ after(grammarAccess.getReferenceDeclarationAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceDeclaration__Group__1__Impl
	rule__ReferenceDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceDeclarationAccess().getAlternatives_1()); }
(rule__ReferenceDeclaration__Alternatives_1)
{ after(grammarAccess.getReferenceDeclarationAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceDeclaration__Group__2__Impl
	rule__ReferenceDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceDeclarationAccess().getValuedObjectsAssignment_2()); }
(rule__ReferenceDeclaration__ValuedObjectsAssignment_2)
{ after(grammarAccess.getReferenceDeclarationAccess().getValuedObjectsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceDeclaration__Group__3__Impl
	rule__ReferenceDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceDeclarationAccess().getGroup_3()); }
(rule__ReferenceDeclaration__Group_3__0)*
{ after(grammarAccess.getReferenceDeclarationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceDeclaration__Group__4__Impl
	rule__ReferenceDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceDeclarationAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getReferenceDeclarationAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceDeclaration__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceDeclaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceDeclarationAccess().getAnnotationsAssignment_5()); }
(rule__ReferenceDeclaration__AnnotationsAssignment_5)?
{ after(grammarAccess.getReferenceDeclarationAccess().getAnnotationsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ReferenceDeclaration__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceDeclaration__Group_1_0__0__Impl
	rule__ReferenceDeclaration__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceDeclaration__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceDeclarationAccess().getRefKeyword_1_0_0()); }

	'ref' 

{ after(grammarAccess.getReferenceDeclarationAccess().getRefKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceDeclaration__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceDeclaration__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceDeclaration__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceDeclarationAccess().getReferenceAssignment_1_0_1()); }
(rule__ReferenceDeclaration__ReferenceAssignment_1_0_1)
{ after(grammarAccess.getReferenceDeclarationAccess().getReferenceAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ReferenceDeclaration__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceDeclaration__Group_1_1__0__Impl
	rule__ReferenceDeclaration__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceDeclaration__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceDeclarationAccess().getExternKeyword_1_1_0()); }

	'extern' 

{ after(grammarAccess.getReferenceDeclarationAccess().getExternKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceDeclaration__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceDeclaration__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceDeclaration__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceDeclarationAccess().getExternAssignment_1_1_1()); }
(rule__ReferenceDeclaration__ExternAssignment_1_1_1)
{ after(grammarAccess.getReferenceDeclarationAccess().getExternAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ReferenceDeclaration__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceDeclaration__Group_3__0__Impl
	rule__ReferenceDeclaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceDeclaration__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceDeclarationAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getReferenceDeclarationAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceDeclaration__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceDeclaration__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceDeclaration__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceDeclarationAccess().getValuedObjectsAssignment_3_1()); }
(rule__ReferenceDeclaration__ValuedObjectsAssignment_3_1)
{ after(grammarAccess.getReferenceDeclarationAccess().getValuedObjectsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ReferenceDeclarationWOSemicolon__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceDeclarationWOSemicolon__Group__0__Impl
	rule__ReferenceDeclarationWOSemicolon__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceDeclarationWOSemicolon__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getAnnotationsAssignment_0()); }
(rule__ReferenceDeclarationWOSemicolon__AnnotationsAssignment_0)*
{ after(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceDeclarationWOSemicolon__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceDeclarationWOSemicolon__Group__1__Impl
	rule__ReferenceDeclarationWOSemicolon__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceDeclarationWOSemicolon__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getAlternatives_1()); }
(rule__ReferenceDeclarationWOSemicolon__Alternatives_1)
{ after(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceDeclarationWOSemicolon__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceDeclarationWOSemicolon__Group__2__Impl
	rule__ReferenceDeclarationWOSemicolon__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceDeclarationWOSemicolon__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getValuedObjectsAssignment_2()); }
(rule__ReferenceDeclarationWOSemicolon__ValuedObjectsAssignment_2)
{ after(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getValuedObjectsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceDeclarationWOSemicolon__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceDeclarationWOSemicolon__Group__3__Impl
	rule__ReferenceDeclarationWOSemicolon__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceDeclarationWOSemicolon__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getGroup_3()); }
(rule__ReferenceDeclarationWOSemicolon__Group_3__0)*
{ after(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceDeclarationWOSemicolon__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceDeclarationWOSemicolon__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceDeclarationWOSemicolon__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getAnnotationsAssignment_4()); }
(rule__ReferenceDeclarationWOSemicolon__AnnotationsAssignment_4)?
{ after(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getAnnotationsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ReferenceDeclarationWOSemicolon__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceDeclarationWOSemicolon__Group_1_0__0__Impl
	rule__ReferenceDeclarationWOSemicolon__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceDeclarationWOSemicolon__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getRefKeyword_1_0_0()); }

	'ref' 

{ after(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getRefKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceDeclarationWOSemicolon__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceDeclarationWOSemicolon__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceDeclarationWOSemicolon__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getReferenceAssignment_1_0_1()); }
(rule__ReferenceDeclarationWOSemicolon__ReferenceAssignment_1_0_1)
{ after(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getReferenceAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ReferenceDeclarationWOSemicolon__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceDeclarationWOSemicolon__Group_1_1__0__Impl
	rule__ReferenceDeclarationWOSemicolon__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceDeclarationWOSemicolon__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getExternKeyword_1_1_0()); }

	'extern' 

{ after(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getExternKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceDeclarationWOSemicolon__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceDeclarationWOSemicolon__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceDeclarationWOSemicolon__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getExternAssignment_1_1_1()); }
(rule__ReferenceDeclarationWOSemicolon__ExternAssignment_1_1_1)
{ after(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getExternAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ReferenceDeclarationWOSemicolon__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceDeclarationWOSemicolon__Group_3__0__Impl
	rule__ReferenceDeclarationWOSemicolon__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceDeclarationWOSemicolon__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceDeclarationWOSemicolon__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceDeclarationWOSemicolon__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceDeclarationWOSemicolon__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getValuedObjectsAssignment_3_1()); }
(rule__ReferenceDeclarationWOSemicolon__ValuedObjectsAssignment_3_1)
{ after(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getValuedObjectsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ScheduleDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScheduleDeclaration__Group__0__Impl
	rule__ScheduleDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScheduleDeclarationAccess().getAnnotationsAssignment_0()); }
(rule__ScheduleDeclaration__AnnotationsAssignment_0)*
{ after(grammarAccess.getScheduleDeclarationAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScheduleDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScheduleDeclaration__Group__1__Impl
	rule__ScheduleDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScheduleDeclarationAccess().getScheduleKeyword_1()); }

	'schedule' 

{ after(grammarAccess.getScheduleDeclarationAccess().getScheduleKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScheduleDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScheduleDeclaration__Group__2__Impl
	rule__ScheduleDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScheduleDeclarationAccess().getNameAssignment_2()); }
(rule__ScheduleDeclaration__NameAssignment_2)
{ after(grammarAccess.getScheduleDeclarationAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScheduleDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScheduleDeclaration__Group__3__Impl
	rule__ScheduleDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScheduleDeclarationAccess().getGlobalAssignment_3()); }
(rule__ScheduleDeclaration__GlobalAssignment_3)?
{ after(grammarAccess.getScheduleDeclarationAccess().getGlobalAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScheduleDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScheduleDeclaration__Group__4__Impl
	rule__ScheduleDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScheduleDeclarationAccess().getPrioritiesAssignment_4()); }
(rule__ScheduleDeclaration__PrioritiesAssignment_4)*
{ after(grammarAccess.getScheduleDeclarationAccess().getPrioritiesAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScheduleDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScheduleDeclaration__Group__5__Impl
	rule__ScheduleDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleDeclaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScheduleDeclarationAccess().getValuedObjectsAssignment_5()); }
(rule__ScheduleDeclaration__ValuedObjectsAssignment_5)
{ after(grammarAccess.getScheduleDeclarationAccess().getValuedObjectsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScheduleDeclaration__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScheduleDeclaration__Group__6__Impl
	rule__ScheduleDeclaration__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleDeclaration__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScheduleDeclarationAccess().getGroup_6()); }
(rule__ScheduleDeclaration__Group_6__0)*
{ after(grammarAccess.getScheduleDeclarationAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScheduleDeclaration__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScheduleDeclaration__Group__7__Impl
	rule__ScheduleDeclaration__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleDeclaration__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScheduleDeclarationAccess().getSemicolonKeyword_7()); }

	';' 

{ after(grammarAccess.getScheduleDeclarationAccess().getSemicolonKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScheduleDeclaration__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScheduleDeclaration__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleDeclaration__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScheduleDeclarationAccess().getAnnotationsAssignment_8()); }
(rule__ScheduleDeclaration__AnnotationsAssignment_8)?
{ after(grammarAccess.getScheduleDeclarationAccess().getAnnotationsAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__ScheduleDeclaration__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScheduleDeclaration__Group_6__0__Impl
	rule__ScheduleDeclaration__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleDeclaration__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScheduleDeclarationAccess().getCommaKeyword_6_0()); }

	',' 

{ after(grammarAccess.getScheduleDeclarationAccess().getCommaKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScheduleDeclaration__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScheduleDeclaration__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleDeclaration__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScheduleDeclarationAccess().getValuedObjectsAssignment_6_1()); }
(rule__ScheduleDeclaration__ValuedObjectsAssignment_6_1)
{ after(grammarAccess.getScheduleDeclarationAccess().getValuedObjectsAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ScheduleDeclarationWOSemicolon__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScheduleDeclarationWOSemicolon__Group__0__Impl
	rule__ScheduleDeclarationWOSemicolon__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleDeclarationWOSemicolon__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getAnnotationsAssignment_0()); }
(rule__ScheduleDeclarationWOSemicolon__AnnotationsAssignment_0)*
{ after(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScheduleDeclarationWOSemicolon__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScheduleDeclarationWOSemicolon__Group__1__Impl
	rule__ScheduleDeclarationWOSemicolon__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleDeclarationWOSemicolon__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getScheduleKeyword_1()); }

	'schedule' 

{ after(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getScheduleKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScheduleDeclarationWOSemicolon__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScheduleDeclarationWOSemicolon__Group__2__Impl
	rule__ScheduleDeclarationWOSemicolon__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleDeclarationWOSemicolon__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getNameAssignment_2()); }
(rule__ScheduleDeclarationWOSemicolon__NameAssignment_2)
{ after(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScheduleDeclarationWOSemicolon__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScheduleDeclarationWOSemicolon__Group__3__Impl
	rule__ScheduleDeclarationWOSemicolon__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleDeclarationWOSemicolon__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getGlobalAssignment_3()); }
(rule__ScheduleDeclarationWOSemicolon__GlobalAssignment_3)?
{ after(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getGlobalAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScheduleDeclarationWOSemicolon__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScheduleDeclarationWOSemicolon__Group__4__Impl
	rule__ScheduleDeclarationWOSemicolon__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleDeclarationWOSemicolon__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getPrioritiesAssignment_4()); }
(rule__ScheduleDeclarationWOSemicolon__PrioritiesAssignment_4)*
{ after(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getPrioritiesAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScheduleDeclarationWOSemicolon__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScheduleDeclarationWOSemicolon__Group__5__Impl
	rule__ScheduleDeclarationWOSemicolon__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleDeclarationWOSemicolon__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getValuedObjectsAssignment_5()); }
(rule__ScheduleDeclarationWOSemicolon__ValuedObjectsAssignment_5)
{ after(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getValuedObjectsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScheduleDeclarationWOSemicolon__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScheduleDeclarationWOSemicolon__Group__6__Impl
	rule__ScheduleDeclarationWOSemicolon__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleDeclarationWOSemicolon__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getGroup_6()); }
(rule__ScheduleDeclarationWOSemicolon__Group_6__0)*
{ after(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScheduleDeclarationWOSemicolon__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScheduleDeclarationWOSemicolon__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleDeclarationWOSemicolon__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getAnnotationsAssignment_7()); }
(rule__ScheduleDeclarationWOSemicolon__AnnotationsAssignment_7)?
{ after(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getAnnotationsAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__ScheduleDeclarationWOSemicolon__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScheduleDeclarationWOSemicolon__Group_6__0__Impl
	rule__ScheduleDeclarationWOSemicolon__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleDeclarationWOSemicolon__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getCommaKeyword_6_0()); }

	',' 

{ after(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getCommaKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScheduleDeclarationWOSemicolon__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScheduleDeclarationWOSemicolon__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleDeclarationWOSemicolon__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getValuedObjectsAssignment_6_1()); }
(rule__ScheduleDeclarationWOSemicolon__ValuedObjectsAssignment_6_1)
{ after(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getValuedObjectsAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SchedulePriority__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SchedulePriority__Group__0__Impl
	rule__SchedulePriority__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SchedulePriority__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSchedulePriorityAccess().getPrioKeyword_0()); }

	'prio' 

{ after(grammarAccess.getSchedulePriorityAccess().getPrioKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SchedulePriority__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SchedulePriority__Group__1__Impl
	rule__SchedulePriority__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SchedulePriority__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSchedulePriorityAccess().getPriorityAssignment_1()); }
(rule__SchedulePriority__PriorityAssignment_1)
{ after(grammarAccess.getSchedulePriorityAccess().getPriorityAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SchedulePriority__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SchedulePriority__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SchedulePriority__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSchedulePriorityAccess().getTypeAssignment_2()); }
(rule__SchedulePriority__TypeAssignment_2)
{ after(grammarAccess.getSchedulePriorityAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ValuedObject__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObject__Group__0__Impl
	rule__ValuedObject__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObject__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectAccess().getAnnotationsAssignment_0()); }
(rule__ValuedObject__AnnotationsAssignment_0)*
{ after(grammarAccess.getValuedObjectAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuedObject__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObject__Group__1__Impl
	rule__ValuedObject__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObject__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectAccess().getNameAssignment_1()); }
(rule__ValuedObject__NameAssignment_1)
{ after(grammarAccess.getValuedObjectAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuedObject__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObject__Group__2__Impl
	rule__ValuedObject__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObject__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectAccess().getGroup_2()); }
(rule__ValuedObject__Group_2__0)*
{ after(grammarAccess.getValuedObjectAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuedObject__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObject__Group__3__Impl
	rule__ValuedObject__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObject__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectAccess().getGroup_3()); }
(rule__ValuedObject__Group_3__0)?
{ after(grammarAccess.getValuedObjectAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuedObject__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObject__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObject__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectAccess().getGroup_4()); }
(rule__ValuedObject__Group_4__0)?
{ after(grammarAccess.getValuedObjectAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ValuedObject__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObject__Group_2__0__Impl
	rule__ValuedObject__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObject__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectAccess().getLeftSquareBracketKeyword_2_0()); }

	'[' 

{ after(grammarAccess.getValuedObjectAccess().getLeftSquareBracketKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuedObject__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObject__Group_2__1__Impl
	rule__ValuedObject__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObject__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectAccess().getCardinalitiesAssignment_2_1()); }
(rule__ValuedObject__CardinalitiesAssignment_2_1)
{ after(grammarAccess.getValuedObjectAccess().getCardinalitiesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuedObject__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObject__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObject__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectAccess().getRightSquareBracketKeyword_2_2()); }

	']' 

{ after(grammarAccess.getValuedObjectAccess().getRightSquareBracketKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ValuedObject__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObject__Group_3__0__Impl
	rule__ValuedObject__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObject__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectAccess().getEqualsSignKeyword_3_0()); }

	'=' 

{ after(grammarAccess.getValuedObjectAccess().getEqualsSignKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuedObject__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObject__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObject__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectAccess().getInitialValueAssignment_3_1()); }
(rule__ValuedObject__InitialValueAssignment_3_1)
{ after(grammarAccess.getValuedObjectAccess().getInitialValueAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ValuedObject__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObject__Group_4__0__Impl
	rule__ValuedObject__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObject__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectAccess().getCombineKeyword_4_0()); }

	'combine' 

{ after(grammarAccess.getValuedObjectAccess().getCombineKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuedObject__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObject__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObject__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectAccess().getCombineOperatorAssignment_4_1()); }
(rule__ValuedObject__CombineOperatorAssignment_4_1)
{ after(grammarAccess.getValuedObjectAccess().getCombineOperatorAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Emission__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Emission__Group__0__Impl
	rule__Emission__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Emission__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmissionAccess().getAnnotationsAssignment_0()); }
(rule__Emission__AnnotationsAssignment_0)*
{ after(grammarAccess.getEmissionAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Emission__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Emission__Group__1__Impl
	rule__Emission__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Emission__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmissionAccess().getValuedObjectAssignment_1()); }
(rule__Emission__ValuedObjectAssignment_1)
{ after(grammarAccess.getEmissionAccess().getValuedObjectAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Emission__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Emission__Group__2__Impl
	rule__Emission__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Emission__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmissionAccess().getGroup_2()); }
(rule__Emission__Group_2__0)?
{ after(grammarAccess.getEmissionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Emission__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Emission__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Emission__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmissionAccess().getGroup_3()); }
(rule__Emission__Group_3__0)?
{ after(grammarAccess.getEmissionAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Emission__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Emission__Group_2__0__Impl
	rule__Emission__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Emission__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmissionAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getEmissionAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Emission__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Emission__Group_2__1__Impl
	rule__Emission__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Emission__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmissionAccess().getNewValueAssignment_2_1()); }
(rule__Emission__NewValueAssignment_2_1)
{ after(grammarAccess.getEmissionAccess().getNewValueAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Emission__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Emission__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Emission__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmissionAccess().getRightParenthesisKeyword_2_2()); }

	')' 

{ after(grammarAccess.getEmissionAccess().getRightParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Emission__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Emission__Group_3__0__Impl
	rule__Emission__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Emission__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmissionAccess().getScheduleKeyword_3_0()); }

	'schedule' 

{ after(grammarAccess.getEmissionAccess().getScheduleKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Emission__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Emission__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Emission__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getEmissionAccess().getScheduleAssignment_3_1()); }
(rule__Emission__ScheduleAssignment_3_1)
{ after(grammarAccess.getEmissionAccess().getScheduleAssignment_3_1()); }
)
(
{ before(grammarAccess.getEmissionAccess().getScheduleAssignment_3_1()); }
(rule__Emission__ScheduleAssignment_3_1)*
{ after(grammarAccess.getEmissionAccess().getScheduleAssignment_3_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Assignment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group__0__Impl
	rule__Assignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getAnnotationsAssignment_0()); }
(rule__Assignment__AnnotationsAssignment_0)*
{ after(grammarAccess.getAssignmentAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group__1__Impl
	rule__Assignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getValuedObjectAssignment_1()); }
(rule__Assignment__ValuedObjectAssignment_1)
{ after(grammarAccess.getAssignmentAccess().getValuedObjectAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group__2__Impl
	rule__Assignment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getGroup_2()); }
(rule__Assignment__Group_2__0)*
{ after(grammarAccess.getAssignmentAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group__3__Impl
	rule__Assignment__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getOperatorAssignment_3()); }
(rule__Assignment__OperatorAssignment_3)
{ after(grammarAccess.getAssignmentAccess().getOperatorAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group__4__Impl
	rule__Assignment__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getExpressionAssignment_4()); }
(rule__Assignment__ExpressionAssignment_4)
{ after(grammarAccess.getAssignmentAccess().getExpressionAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getGroup_5()); }
(rule__Assignment__Group_5__0)?
{ after(grammarAccess.getAssignmentAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Assignment__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_2__0__Impl
	rule__Assignment__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getLeftSquareBracketKeyword_2_0()); }

	'[' 

{ after(grammarAccess.getAssignmentAccess().getLeftSquareBracketKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_2__1__Impl
	rule__Assignment__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getIndicesAssignment_2_1()); }
(rule__Assignment__IndicesAssignment_2_1)
{ after(grammarAccess.getAssignmentAccess().getIndicesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getRightSquareBracketKeyword_2_2()); }

	']' 

{ after(grammarAccess.getAssignmentAccess().getRightSquareBracketKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Assignment__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_5__0__Impl
	rule__Assignment__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getScheduleKeyword_5_0()); }

	'schedule' 

{ after(grammarAccess.getAssignmentAccess().getScheduleKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getAssignmentAccess().getScheduleAssignment_5_1()); }
(rule__Assignment__ScheduleAssignment_5_1)
{ after(grammarAccess.getAssignmentAccess().getScheduleAssignment_5_1()); }
)
(
{ before(grammarAccess.getAssignmentAccess().getScheduleAssignment_5_1()); }
(rule__Assignment__ScheduleAssignment_5_1)*
{ after(grammarAccess.getAssignmentAccess().getScheduleAssignment_5_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SubReferenceAssignment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubReferenceAssignment__Group__0__Impl
	rule__SubReferenceAssignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubReferenceAssignment__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubReferenceAssignmentAccess().getAnnotationsAssignment_0()); }
(rule__SubReferenceAssignment__AnnotationsAssignment_0)*
{ after(grammarAccess.getSubReferenceAssignmentAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubReferenceAssignment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubReferenceAssignment__Group__1__Impl
	rule__SubReferenceAssignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SubReferenceAssignment__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubReferenceAssignmentAccess().getValuedObjectAssignment_1()); }
(rule__SubReferenceAssignment__ValuedObjectAssignment_1)
{ after(grammarAccess.getSubReferenceAssignmentAccess().getValuedObjectAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubReferenceAssignment__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubReferenceAssignment__Group__2__Impl
	rule__SubReferenceAssignment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SubReferenceAssignment__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubReferenceAssignmentAccess().getGroup_2()); }
(rule__SubReferenceAssignment__Group_2__0)*
{ after(grammarAccess.getSubReferenceAssignmentAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubReferenceAssignment__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubReferenceAssignment__Group__3__Impl
	rule__SubReferenceAssignment__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SubReferenceAssignment__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubReferenceAssignmentAccess().getGroup_3()); }
(rule__SubReferenceAssignment__Group_3__0)?
{ after(grammarAccess.getSubReferenceAssignmentAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubReferenceAssignment__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubReferenceAssignment__Group__4__Impl
	rule__SubReferenceAssignment__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SubReferenceAssignment__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubReferenceAssignmentAccess().getOperatorAssignment_4()); }
(rule__SubReferenceAssignment__OperatorAssignment_4)
{ after(grammarAccess.getSubReferenceAssignmentAccess().getOperatorAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubReferenceAssignment__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubReferenceAssignment__Group__5__Impl
	rule__SubReferenceAssignment__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SubReferenceAssignment__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubReferenceAssignmentAccess().getExpressionAssignment_5()); }
(rule__SubReferenceAssignment__ExpressionAssignment_5)
{ after(grammarAccess.getSubReferenceAssignmentAccess().getExpressionAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubReferenceAssignment__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubReferenceAssignment__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubReferenceAssignment__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubReferenceAssignmentAccess().getGroup_6()); }
(rule__SubReferenceAssignment__Group_6__0)?
{ after(grammarAccess.getSubReferenceAssignmentAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__SubReferenceAssignment__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubReferenceAssignment__Group_2__0__Impl
	rule__SubReferenceAssignment__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubReferenceAssignment__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubReferenceAssignmentAccess().getLeftSquareBracketKeyword_2_0()); }

	'[' 

{ after(grammarAccess.getSubReferenceAssignmentAccess().getLeftSquareBracketKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubReferenceAssignment__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubReferenceAssignment__Group_2__1__Impl
	rule__SubReferenceAssignment__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SubReferenceAssignment__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubReferenceAssignmentAccess().getIndicesAssignment_2_1()); }
(rule__SubReferenceAssignment__IndicesAssignment_2_1)
{ after(grammarAccess.getSubReferenceAssignmentAccess().getIndicesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubReferenceAssignment__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubReferenceAssignment__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubReferenceAssignment__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubReferenceAssignmentAccess().getRightSquareBracketKeyword_2_2()); }

	']' 

{ after(grammarAccess.getSubReferenceAssignmentAccess().getRightSquareBracketKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SubReferenceAssignment__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubReferenceAssignment__Group_3__0__Impl
	rule__SubReferenceAssignment__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubReferenceAssignment__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubReferenceAssignmentAccess().getFullStopKeyword_3_0()); }

	'.' 

{ after(grammarAccess.getSubReferenceAssignmentAccess().getFullStopKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubReferenceAssignment__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubReferenceAssignment__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubReferenceAssignment__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubReferenceAssignmentAccess().getSubReferenceAssignment_3_1()); }
(rule__SubReferenceAssignment__SubReferenceAssignment_3_1)
{ after(grammarAccess.getSubReferenceAssignmentAccess().getSubReferenceAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SubReferenceAssignment__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubReferenceAssignment__Group_6__0__Impl
	rule__SubReferenceAssignment__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubReferenceAssignment__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubReferenceAssignmentAccess().getScheduleKeyword_6_0()); }

	'schedule' 

{ after(grammarAccess.getSubReferenceAssignmentAccess().getScheduleKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubReferenceAssignment__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubReferenceAssignment__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubReferenceAssignment__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getSubReferenceAssignmentAccess().getScheduleAssignment_6_1()); }
(rule__SubReferenceAssignment__ScheduleAssignment_6_1)
{ after(grammarAccess.getSubReferenceAssignmentAccess().getScheduleAssignment_6_1()); }
)
(
{ before(grammarAccess.getSubReferenceAssignmentAccess().getScheduleAssignment_6_1()); }
(rule__SubReferenceAssignment__ScheduleAssignment_6_1)*
{ after(grammarAccess.getSubReferenceAssignmentAccess().getScheduleAssignment_6_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PostfixEffect__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixEffect__Group__0__Impl
	rule__PostfixEffect__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixEffect__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixEffectAccess().getAnnotationsAssignment_0()); }
(rule__PostfixEffect__AnnotationsAssignment_0)*
{ after(grammarAccess.getPostfixEffectAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixEffect__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixEffect__Group__1__Impl
	rule__PostfixEffect__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixEffect__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixEffectAccess().getValuedObjectAssignment_1()); }
(rule__PostfixEffect__ValuedObjectAssignment_1)
{ after(grammarAccess.getPostfixEffectAccess().getValuedObjectAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixEffect__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixEffect__Group__2__Impl
	rule__PostfixEffect__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixEffect__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixEffectAccess().getGroup_2()); }
(rule__PostfixEffect__Group_2__0)*
{ after(grammarAccess.getPostfixEffectAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixEffect__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixEffect__Group__3__Impl
	rule__PostfixEffect__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixEffect__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixEffectAccess().getOperatorAssignment_3()); }
(rule__PostfixEffect__OperatorAssignment_3)
{ after(grammarAccess.getPostfixEffectAccess().getOperatorAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixEffect__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixEffect__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixEffect__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixEffectAccess().getGroup_4()); }
(rule__PostfixEffect__Group_4__0)?
{ after(grammarAccess.getPostfixEffectAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__PostfixEffect__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixEffect__Group_2__0__Impl
	rule__PostfixEffect__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixEffect__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixEffectAccess().getLeftSquareBracketKeyword_2_0()); }

	'[' 

{ after(grammarAccess.getPostfixEffectAccess().getLeftSquareBracketKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixEffect__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixEffect__Group_2__1__Impl
	rule__PostfixEffect__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixEffect__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixEffectAccess().getIndicesAssignment_2_1()); }
(rule__PostfixEffect__IndicesAssignment_2_1)
{ after(grammarAccess.getPostfixEffectAccess().getIndicesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixEffect__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixEffect__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixEffect__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixEffectAccess().getRightSquareBracketKeyword_2_2()); }

	']' 

{ after(grammarAccess.getPostfixEffectAccess().getRightSquareBracketKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PostfixEffect__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixEffect__Group_4__0__Impl
	rule__PostfixEffect__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixEffect__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixEffectAccess().getScheduleKeyword_4_0()); }

	'schedule' 

{ after(grammarAccess.getPostfixEffectAccess().getScheduleKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixEffect__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixEffect__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixEffect__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getPostfixEffectAccess().getScheduleAssignment_4_1()); }
(rule__PostfixEffect__ScheduleAssignment_4_1)
{ after(grammarAccess.getPostfixEffectAccess().getScheduleAssignment_4_1()); }
)
(
{ before(grammarAccess.getPostfixEffectAccess().getScheduleAssignment_4_1()); }
(rule__PostfixEffect__ScheduleAssignment_4_1)*
{ after(grammarAccess.getPostfixEffectAccess().getScheduleAssignment_4_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__HostcodeEffect__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HostcodeEffect__Group__0__Impl
	rule__HostcodeEffect__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HostcodeEffect__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHostcodeEffectAccess().getAnnotationsAssignment_0()); }
(rule__HostcodeEffect__AnnotationsAssignment_0)*
{ after(grammarAccess.getHostcodeEffectAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HostcodeEffect__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HostcodeEffect__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HostcodeEffect__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHostcodeEffectAccess().getTextAssignment_1()); }
(rule__HostcodeEffect__TextAssignment_1)
{ after(grammarAccess.getHostcodeEffectAccess().getTextAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ReferenceCallEffect__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceCallEffect__Group__0__Impl
	rule__ReferenceCallEffect__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceCallEffect__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceCallEffectAccess().getAnnotationsAssignment_0()); }
(rule__ReferenceCallEffect__AnnotationsAssignment_0)*
{ after(grammarAccess.getReferenceCallEffectAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceCallEffect__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceCallEffect__Group__1__Impl
	rule__ReferenceCallEffect__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceCallEffect__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceCallEffectAccess().getValuedObjectAssignment_1()); }
(rule__ReferenceCallEffect__ValuedObjectAssignment_1)
{ after(grammarAccess.getReferenceCallEffectAccess().getValuedObjectAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceCallEffect__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceCallEffect__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceCallEffect__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceCallEffectAccess().getAlternatives_2()); }
(rule__ReferenceCallEffect__Alternatives_2)
{ after(grammarAccess.getReferenceCallEffectAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ReferenceCallEffect__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceCallEffect__Group_2_0__0__Impl
	rule__ReferenceCallEffect__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceCallEffect__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceCallEffectAccess().getLeftParenthesisKeyword_2_0_0()); }

	'(' 

{ after(grammarAccess.getReferenceCallEffectAccess().getLeftParenthesisKeyword_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceCallEffect__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceCallEffect__Group_2_0__1__Impl
	rule__ReferenceCallEffect__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceCallEffect__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceCallEffectAccess().getParametersAssignment_2_0_1()); }
(rule__ReferenceCallEffect__ParametersAssignment_2_0_1)
{ after(grammarAccess.getReferenceCallEffectAccess().getParametersAssignment_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceCallEffect__Group_2_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceCallEffect__Group_2_0__2__Impl
	rule__ReferenceCallEffect__Group_2_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceCallEffect__Group_2_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceCallEffectAccess().getGroup_2_0_2()); }
(rule__ReferenceCallEffect__Group_2_0_2__0)*
{ after(grammarAccess.getReferenceCallEffectAccess().getGroup_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceCallEffect__Group_2_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceCallEffect__Group_2_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceCallEffect__Group_2_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceCallEffectAccess().getRightParenthesisKeyword_2_0_3()); }

	')' 

{ after(grammarAccess.getReferenceCallEffectAccess().getRightParenthesisKeyword_2_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ReferenceCallEffect__Group_2_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceCallEffect__Group_2_0_2__0__Impl
	rule__ReferenceCallEffect__Group_2_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceCallEffect__Group_2_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceCallEffectAccess().getCommaKeyword_2_0_2_0()); }

	',' 

{ after(grammarAccess.getReferenceCallEffectAccess().getCommaKeyword_2_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceCallEffect__Group_2_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceCallEffect__Group_2_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceCallEffect__Group_2_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceCallEffectAccess().getParametersAssignment_2_0_2_1()); }
(rule__ReferenceCallEffect__ParametersAssignment_2_0_2_1)
{ after(grammarAccess.getReferenceCallEffectAccess().getParametersAssignment_2_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionCallEffect__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallEffect__Group_0__0__Impl
	rule__FunctionCallEffect__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallEffect__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getAnnotationsAssignment_0_0()); }
(rule__FunctionCallEffect__AnnotationsAssignment_0_0)*
{ after(grammarAccess.getFunctionCallEffectAccess().getAnnotationsAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallEffect__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallEffect__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallEffect__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getGroup_0_1()); }
(rule__FunctionCallEffect__Group_0_1__0)
{ after(grammarAccess.getFunctionCallEffectAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionCallEffect__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallEffect__Group_0_1__0__Impl
	rule__FunctionCallEffect__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallEffect__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getExternKeyword_0_1_0()); }

	'extern' 

{ after(grammarAccess.getFunctionCallEffectAccess().getExternKeyword_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallEffect__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallEffect__Group_0_1__1__Impl
	rule__FunctionCallEffect__Group_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallEffect__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getFunctionNameAssignment_0_1_1()); }
(rule__FunctionCallEffect__FunctionNameAssignment_0_1_1)
{ after(grammarAccess.getFunctionCallEffectAccess().getFunctionNameAssignment_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallEffect__Group_0_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallEffect__Group_0_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallEffect__Group_0_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getAlternatives_0_1_2()); }
(rule__FunctionCallEffect__Alternatives_0_1_2)
{ after(grammarAccess.getFunctionCallEffectAccess().getAlternatives_0_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FunctionCallEffect__Group_0_1_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallEffect__Group_0_1_2_0__0__Impl
	rule__FunctionCallEffect__Group_0_1_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallEffect__Group_0_1_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getLeftParenthesisKeyword_0_1_2_0_0()); }

	'(' 

{ after(grammarAccess.getFunctionCallEffectAccess().getLeftParenthesisKeyword_0_1_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallEffect__Group_0_1_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallEffect__Group_0_1_2_0__1__Impl
	rule__FunctionCallEffect__Group_0_1_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallEffect__Group_0_1_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getParametersAssignment_0_1_2_0_1()); }
(rule__FunctionCallEffect__ParametersAssignment_0_1_2_0_1)
{ after(grammarAccess.getFunctionCallEffectAccess().getParametersAssignment_0_1_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallEffect__Group_0_1_2_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallEffect__Group_0_1_2_0__2__Impl
	rule__FunctionCallEffect__Group_0_1_2_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallEffect__Group_0_1_2_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getGroup_0_1_2_0_2()); }
(rule__FunctionCallEffect__Group_0_1_2_0_2__0)*
{ after(grammarAccess.getFunctionCallEffectAccess().getGroup_0_1_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallEffect__Group_0_1_2_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallEffect__Group_0_1_2_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallEffect__Group_0_1_2_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getRightParenthesisKeyword_0_1_2_0_3()); }

	')' 

{ after(grammarAccess.getFunctionCallEffectAccess().getRightParenthesisKeyword_0_1_2_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FunctionCallEffect__Group_0_1_2_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallEffect__Group_0_1_2_0_2__0__Impl
	rule__FunctionCallEffect__Group_0_1_2_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallEffect__Group_0_1_2_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getCommaKeyword_0_1_2_0_2_0()); }

	',' 

{ after(grammarAccess.getFunctionCallEffectAccess().getCommaKeyword_0_1_2_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallEffect__Group_0_1_2_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallEffect__Group_0_1_2_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallEffect__Group_0_1_2_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getParametersAssignment_0_1_2_0_2_1()); }
(rule__FunctionCallEffect__ParametersAssignment_0_1_2_0_2_1)
{ after(grammarAccess.getFunctionCallEffectAccess().getParametersAssignment_0_1_2_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionCallEffect__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallEffect__Group_1__0__Impl
	rule__FunctionCallEffect__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallEffect__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getLessThanSignKeyword_1_0()); }

	'<' 

{ after(grammarAccess.getFunctionCallEffectAccess().getLessThanSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallEffect__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallEffect__Group_1__1__Impl
	rule__FunctionCallEffect__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallEffect__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getFunctionNameAssignment_1_1()); }
(rule__FunctionCallEffect__FunctionNameAssignment_1_1)
{ after(grammarAccess.getFunctionCallEffectAccess().getFunctionNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallEffect__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallEffect__Group_1__2__Impl
	rule__FunctionCallEffect__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallEffect__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getAlternatives_1_2()); }
(rule__FunctionCallEffect__Alternatives_1_2)
{ after(grammarAccess.getFunctionCallEffectAccess().getAlternatives_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallEffect__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallEffect__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallEffect__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getGreaterThanSignKeyword_1_3()); }

	'>' 

{ after(grammarAccess.getFunctionCallEffectAccess().getGreaterThanSignKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FunctionCallEffect__Group_1_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallEffect__Group_1_2_0__0__Impl
	rule__FunctionCallEffect__Group_1_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallEffect__Group_1_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getLeftParenthesisKeyword_1_2_0_0()); }

	'(' 

{ after(grammarAccess.getFunctionCallEffectAccess().getLeftParenthesisKeyword_1_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallEffect__Group_1_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallEffect__Group_1_2_0__1__Impl
	rule__FunctionCallEffect__Group_1_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallEffect__Group_1_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getParametersAssignment_1_2_0_1()); }
(rule__FunctionCallEffect__ParametersAssignment_1_2_0_1)
{ after(grammarAccess.getFunctionCallEffectAccess().getParametersAssignment_1_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallEffect__Group_1_2_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallEffect__Group_1_2_0__2__Impl
	rule__FunctionCallEffect__Group_1_2_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallEffect__Group_1_2_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getGroup_1_2_0_2()); }
(rule__FunctionCallEffect__Group_1_2_0_2__0)*
{ after(grammarAccess.getFunctionCallEffectAccess().getGroup_1_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallEffect__Group_1_2_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallEffect__Group_1_2_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallEffect__Group_1_2_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getRightParenthesisKeyword_1_2_0_3()); }

	')' 

{ after(grammarAccess.getFunctionCallEffectAccess().getRightParenthesisKeyword_1_2_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FunctionCallEffect__Group_1_2_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallEffect__Group_1_2_0_2__0__Impl
	rule__FunctionCallEffect__Group_1_2_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallEffect__Group_1_2_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getCommaKeyword_1_2_0_2_0()); }

	',' 

{ after(grammarAccess.getFunctionCallEffectAccess().getCommaKeyword_1_2_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallEffect__Group_1_2_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallEffect__Group_1_2_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallEffect__Group_1_2_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getParametersAssignment_1_2_0_2_1()); }
(rule__FunctionCallEffect__ParametersAssignment_1_2_0_2_1)
{ after(grammarAccess.getFunctionCallEffectAccess().getParametersAssignment_1_2_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrintCallEffect__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrintCallEffect__Group__0__Impl
	rule__PrintCallEffect__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrintCallEffect__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrintCallEffectAccess().getAnnotationsAssignment_0()); }
(rule__PrintCallEffect__AnnotationsAssignment_0)*
{ after(grammarAccess.getPrintCallEffectAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrintCallEffect__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrintCallEffect__Group__1__Impl
	rule__PrintCallEffect__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrintCallEffect__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrintCallEffectAccess().getPrintKeyword_1()); }

	'print' 

{ after(grammarAccess.getPrintCallEffectAccess().getPrintKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrintCallEffect__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrintCallEffect__Group__2__Impl
	rule__PrintCallEffect__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrintCallEffect__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrintCallEffectAccess().getParametersAssignment_2()); }
(rule__PrintCallEffect__ParametersAssignment_2)
{ after(grammarAccess.getPrintCallEffectAccess().getParametersAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrintCallEffect__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrintCallEffect__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrintCallEffect__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrintCallEffectAccess().getGroup_3()); }
(rule__PrintCallEffect__Group_3__0)*
{ after(grammarAccess.getPrintCallEffectAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PrintCallEffect__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrintCallEffect__Group_3__0__Impl
	rule__PrintCallEffect__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrintCallEffect__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrintCallEffectAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getPrintCallEffectAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrintCallEffect__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrintCallEffect__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrintCallEffect__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrintCallEffectAccess().getParametersAssignment_3_1()); }
(rule__PrintCallEffect__ParametersAssignment_3_1)
{ after(grammarAccess.getPrintCallEffectAccess().getParametersAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group__0__Impl
	rule__Expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getAlternatives_0()); }
(rule__Expression__Alternatives_0)
{ after(grammarAccess.getExpressionAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getGroup_1()); }
(rule__Expression__Group_1__0)?
{ after(grammarAccess.getExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1__0__Impl
	rule__Expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getScheduleKeyword_1_0()); }

	'schedule' 

{ after(grammarAccess.getExpressionAccess().getScheduleKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getExpressionAccess().getScheduleAssignment_1_1()); }
(rule__Expression__ScheduleAssignment_1_1)
{ after(grammarAccess.getExpressionAccess().getScheduleAssignment_1_1()); }
)
(
{ before(grammarAccess.getExpressionAccess().getScheduleAssignment_1_1()); }
(rule__Expression__ScheduleAssignment_1_1)*
{ after(grammarAccess.getExpressionAccess().getScheduleAssignment_1_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LogicalOrExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalOrExpression__Group__0__Impl
	rule__LogicalOrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalOrExpressionAccess().getLogicalAndExpressionParserRuleCall_0()); }
	ruleLogicalAndExpression
{ after(grammarAccess.getLogicalOrExpressionAccess().getLogicalAndExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalOrExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalOrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalOrExpressionAccess().getGroup_1()); }
(rule__LogicalOrExpression__Group_1__0)?
{ after(grammarAccess.getLogicalOrExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LogicalOrExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalOrExpression__Group_1__0__Impl
	rule__LogicalOrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalOrExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
(

)
{ after(grammarAccess.getLogicalOrExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalOrExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalOrExpression__Group_1__1__Impl
	rule__LogicalOrExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalOrExpressionAccess().getGroup_1_1()); }
(rule__LogicalOrExpression__Group_1_1__0)
{ after(grammarAccess.getLogicalOrExpressionAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalOrExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalOrExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalOrExpressionAccess().getGroup_1_2()); }
(rule__LogicalOrExpression__Group_1_2__0)*
{ after(grammarAccess.getLogicalOrExpressionAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LogicalOrExpression__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalOrExpression__Group_1_1__0__Impl
	rule__LogicalOrExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalOrExpressionAccess().getOperatorAssignment_1_1_0()); }
(rule__LogicalOrExpression__OperatorAssignment_1_1_0)
{ after(grammarAccess.getLogicalOrExpressionAccess().getOperatorAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalOrExpression__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalOrExpression__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalOrExpressionAccess().getSubExpressionsAssignment_1_1_1()); }
(rule__LogicalOrExpression__SubExpressionsAssignment_1_1_1)
{ after(grammarAccess.getLogicalOrExpressionAccess().getSubExpressionsAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LogicalOrExpression__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalOrExpression__Group_1_2__0__Impl
	rule__LogicalOrExpression__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalOrExpressionAccess().getVerticalLineVerticalLineKeyword_1_2_0()); }

	'||' 

{ after(grammarAccess.getLogicalOrExpressionAccess().getVerticalLineVerticalLineKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalOrExpression__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalOrExpression__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalOrExpressionAccess().getSubExpressionsAssignment_1_2_1()); }
(rule__LogicalOrExpression__SubExpressionsAssignment_1_2_1)
{ after(grammarAccess.getLogicalOrExpressionAccess().getSubExpressionsAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LogicalAndExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalAndExpression__Group__0__Impl
	rule__LogicalAndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalAndExpressionAccess().getBitwiseOrExpressionParserRuleCall_0()); }
	ruleBitwiseOrExpression
{ after(grammarAccess.getLogicalAndExpressionAccess().getBitwiseOrExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalAndExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalAndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalAndExpressionAccess().getGroup_1()); }
(rule__LogicalAndExpression__Group_1__0)?
{ after(grammarAccess.getLogicalAndExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LogicalAndExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalAndExpression__Group_1__0__Impl
	rule__LogicalAndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalAndExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
(

)
{ after(grammarAccess.getLogicalAndExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalAndExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalAndExpression__Group_1__1__Impl
	rule__LogicalAndExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalAndExpressionAccess().getGroup_1_1()); }
(rule__LogicalAndExpression__Group_1_1__0)
{ after(grammarAccess.getLogicalAndExpressionAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalAndExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalAndExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalAndExpressionAccess().getGroup_1_2()); }
(rule__LogicalAndExpression__Group_1_2__0)*
{ after(grammarAccess.getLogicalAndExpressionAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LogicalAndExpression__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalAndExpression__Group_1_1__0__Impl
	rule__LogicalAndExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalAndExpressionAccess().getOperatorAssignment_1_1_0()); }
(rule__LogicalAndExpression__OperatorAssignment_1_1_0)
{ after(grammarAccess.getLogicalAndExpressionAccess().getOperatorAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalAndExpression__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalAndExpression__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalAndExpressionAccess().getSubExpressionsAssignment_1_1_1()); }
(rule__LogicalAndExpression__SubExpressionsAssignment_1_1_1)
{ after(grammarAccess.getLogicalAndExpressionAccess().getSubExpressionsAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LogicalAndExpression__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalAndExpression__Group_1_2__0__Impl
	rule__LogicalAndExpression__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalAndExpressionAccess().getAmpersandAmpersandKeyword_1_2_0()); }

	'&&' 

{ after(grammarAccess.getLogicalAndExpressionAccess().getAmpersandAmpersandKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalAndExpression__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalAndExpression__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalAndExpressionAccess().getSubExpressionsAssignment_1_2_1()); }
(rule__LogicalAndExpression__SubExpressionsAssignment_1_2_1)
{ after(grammarAccess.getLogicalAndExpressionAccess().getSubExpressionsAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BitwiseOrExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseOrExpression__Group__0__Impl
	rule__BitwiseOrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseOrExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseOrExpressionAccess().getBitwiseAndExpressionParserRuleCall_0()); }
	ruleBitwiseAndExpression
{ after(grammarAccess.getBitwiseOrExpressionAccess().getBitwiseAndExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitwiseOrExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseOrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseOrExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseOrExpressionAccess().getGroup_1()); }
(rule__BitwiseOrExpression__Group_1__0)?
{ after(grammarAccess.getBitwiseOrExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BitwiseOrExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseOrExpression__Group_1__0__Impl
	rule__BitwiseOrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseOrExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseOrExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
(

)
{ after(grammarAccess.getBitwiseOrExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitwiseOrExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseOrExpression__Group_1__1__Impl
	rule__BitwiseOrExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseOrExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseOrExpressionAccess().getGroup_1_1()); }
(rule__BitwiseOrExpression__Group_1_1__0)
{ after(grammarAccess.getBitwiseOrExpressionAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitwiseOrExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseOrExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseOrExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseOrExpressionAccess().getGroup_1_2()); }
(rule__BitwiseOrExpression__Group_1_2__0)*
{ after(grammarAccess.getBitwiseOrExpressionAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BitwiseOrExpression__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseOrExpression__Group_1_1__0__Impl
	rule__BitwiseOrExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseOrExpression__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseOrExpressionAccess().getOperatorAssignment_1_1_0()); }
(rule__BitwiseOrExpression__OperatorAssignment_1_1_0)
{ after(grammarAccess.getBitwiseOrExpressionAccess().getOperatorAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitwiseOrExpression__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseOrExpression__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseOrExpression__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseOrExpressionAccess().getSubExpressionsAssignment_1_1_1()); }
(rule__BitwiseOrExpression__SubExpressionsAssignment_1_1_1)
{ after(grammarAccess.getBitwiseOrExpressionAccess().getSubExpressionsAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BitwiseOrExpression__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseOrExpression__Group_1_2__0__Impl
	rule__BitwiseOrExpression__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseOrExpression__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseOrExpressionAccess().getVerticalLineKeyword_1_2_0()); }

	'|' 

{ after(grammarAccess.getBitwiseOrExpressionAccess().getVerticalLineKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitwiseOrExpression__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseOrExpression__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseOrExpression__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseOrExpressionAccess().getSubExpressionsAssignment_1_2_1()); }
(rule__BitwiseOrExpression__SubExpressionsAssignment_1_2_1)
{ after(grammarAccess.getBitwiseOrExpressionAccess().getSubExpressionsAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BitwiseAndExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseAndExpression__Group__0__Impl
	rule__BitwiseAndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseAndExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseAndExpressionAccess().getCompareOperationParserRuleCall_0()); }
	ruleCompareOperation
{ after(grammarAccess.getBitwiseAndExpressionAccess().getCompareOperationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitwiseAndExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseAndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseAndExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseAndExpressionAccess().getGroup_1()); }
(rule__BitwiseAndExpression__Group_1__0)?
{ after(grammarAccess.getBitwiseAndExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BitwiseAndExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseAndExpression__Group_1__0__Impl
	rule__BitwiseAndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseAndExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseAndExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
(

)
{ after(grammarAccess.getBitwiseAndExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitwiseAndExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseAndExpression__Group_1__1__Impl
	rule__BitwiseAndExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseAndExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseAndExpressionAccess().getGroup_1_1()); }
(rule__BitwiseAndExpression__Group_1_1__0)
{ after(grammarAccess.getBitwiseAndExpressionAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitwiseAndExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseAndExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseAndExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseAndExpressionAccess().getGroup_1_2()); }
(rule__BitwiseAndExpression__Group_1_2__0)*
{ after(grammarAccess.getBitwiseAndExpressionAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BitwiseAndExpression__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseAndExpression__Group_1_1__0__Impl
	rule__BitwiseAndExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseAndExpression__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseAndExpressionAccess().getOperatorAssignment_1_1_0()); }
(rule__BitwiseAndExpression__OperatorAssignment_1_1_0)
{ after(grammarAccess.getBitwiseAndExpressionAccess().getOperatorAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitwiseAndExpression__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseAndExpression__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseAndExpression__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseAndExpressionAccess().getSubExpressionsAssignment_1_1_1()); }
(rule__BitwiseAndExpression__SubExpressionsAssignment_1_1_1)
{ after(grammarAccess.getBitwiseAndExpressionAccess().getSubExpressionsAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BitwiseAndExpression__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseAndExpression__Group_1_2__0__Impl
	rule__BitwiseAndExpression__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseAndExpression__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseAndExpressionAccess().getAmpersandKeyword_1_2_0()); }

	'&' 

{ after(grammarAccess.getBitwiseAndExpressionAccess().getAmpersandKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitwiseAndExpression__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseAndExpression__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseAndExpression__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseAndExpressionAccess().getSubExpressionsAssignment_1_2_1()); }
(rule__BitwiseAndExpression__SubExpressionsAssignment_1_2_1)
{ after(grammarAccess.getBitwiseAndExpressionAccess().getSubExpressionsAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CompareOperation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareOperation__Group__0__Impl
	rule__CompareOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperationAccess().getNotOrValuedExpressionParserRuleCall_0()); }
	ruleNotOrValuedExpression
{ after(grammarAccess.getCompareOperationAccess().getNotOrValuedExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompareOperation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareOperation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperationAccess().getGroup_1()); }
(rule__CompareOperation__Group_1__0)?
{ after(grammarAccess.getCompareOperationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CompareOperation__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareOperation__Group_1__0__Impl
	rule__CompareOperation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperationAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
(

)
{ after(grammarAccess.getCompareOperationAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompareOperation__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareOperation__Group_1__1__Impl
	rule__CompareOperation__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperationAccess().getOperatorAssignment_1_1()); }
(rule__CompareOperation__OperatorAssignment_1_1)
{ after(grammarAccess.getCompareOperationAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompareOperation__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareOperation__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperationAccess().getSubExpressionsAssignment_1_2()); }
(rule__CompareOperation__SubExpressionsAssignment_1_2)
{ after(grammarAccess.getCompareOperationAccess().getSubExpressionsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NotExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NotExpression__Group_0__0__Impl
	rule__NotExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NotExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotExpressionAccess().getOperatorExpressionAction_0_0()); }
(

)
{ after(grammarAccess.getNotExpressionAccess().getOperatorExpressionAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NotExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NotExpression__Group_0__1__Impl
	rule__NotExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NotExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotExpressionAccess().getOperatorAssignment_0_1()); }
(rule__NotExpression__OperatorAssignment_0_1)
{ after(grammarAccess.getNotExpressionAccess().getOperatorAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NotExpression__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NotExpression__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NotExpression__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotExpressionAccess().getSubExpressionsAssignment_0_2()); }
(rule__NotExpression__SubExpressionsAssignment_0_2)
{ after(grammarAccess.getNotExpressionAccess().getSubExpressionsAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AddExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExpression__Group__0__Impl
	rule__AddExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getSubExpressionParserRuleCall_0()); }
	ruleSubExpression
{ after(grammarAccess.getAddExpressionAccess().getSubExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getGroup_1()); }
(rule__AddExpression__Group_1__0)?
{ after(grammarAccess.getAddExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AddExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExpression__Group_1__0__Impl
	rule__AddExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
(

)
{ after(grammarAccess.getAddExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExpression__Group_1__1__Impl
	rule__AddExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getGroup_1_1()); }
(rule__AddExpression__Group_1_1__0)
{ after(grammarAccess.getAddExpressionAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getGroup_1_2()); }
(rule__AddExpression__Group_1_2__0)*
{ after(grammarAccess.getAddExpressionAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AddExpression__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExpression__Group_1_1__0__Impl
	rule__AddExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getOperatorAssignment_1_1_0()); }
(rule__AddExpression__OperatorAssignment_1_1_0)
{ after(grammarAccess.getAddExpressionAccess().getOperatorAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddExpression__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExpression__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getSubExpressionsAssignment_1_1_1()); }
(rule__AddExpression__SubExpressionsAssignment_1_1_1)
{ after(grammarAccess.getAddExpressionAccess().getSubExpressionsAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AddExpression__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExpression__Group_1_2__0__Impl
	rule__AddExpression__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getPlusSignKeyword_1_2_0()); }

	'+' 

{ after(grammarAccess.getAddExpressionAccess().getPlusSignKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddExpression__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExpression__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getSubExpressionsAssignment_1_2_1()); }
(rule__AddExpression__SubExpressionsAssignment_1_2_1)
{ after(grammarAccess.getAddExpressionAccess().getSubExpressionsAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SubExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubExpression__Group__0__Impl
	rule__SubExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubExpressionAccess().getMultExpressionParserRuleCall_0()); }
	ruleMultExpression
{ after(grammarAccess.getSubExpressionAccess().getMultExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubExpressionAccess().getGroup_1()); }
(rule__SubExpression__Group_1__0)?
{ after(grammarAccess.getSubExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SubExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubExpression__Group_1__0__Impl
	rule__SubExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
(

)
{ after(grammarAccess.getSubExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubExpression__Group_1__1__Impl
	rule__SubExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubExpressionAccess().getGroup_1_1()); }
(rule__SubExpression__Group_1_1__0)
{ after(grammarAccess.getSubExpressionAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubExpressionAccess().getGroup_1_2()); }
(rule__SubExpression__Group_1_2__0)*
{ after(grammarAccess.getSubExpressionAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SubExpression__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubExpression__Group_1_1__0__Impl
	rule__SubExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpression__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubExpressionAccess().getOperatorAssignment_1_1_0()); }
(rule__SubExpression__OperatorAssignment_1_1_0)
{ after(grammarAccess.getSubExpressionAccess().getOperatorAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubExpression__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubExpression__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpression__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubExpressionAccess().getSubExpressionsAssignment_1_1_1()); }
(rule__SubExpression__SubExpressionsAssignment_1_1_1)
{ after(grammarAccess.getSubExpressionAccess().getSubExpressionsAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SubExpression__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubExpression__Group_1_2__0__Impl
	rule__SubExpression__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpression__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubExpressionAccess().getHyphenMinusKeyword_1_2_0()); }

	'-' 

{ after(grammarAccess.getSubExpressionAccess().getHyphenMinusKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubExpression__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubExpression__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpression__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubExpressionAccess().getSubExpressionsAssignment_1_2_1()); }
(rule__SubExpression__SubExpressionsAssignment_1_2_1)
{ after(grammarAccess.getSubExpressionAccess().getSubExpressionsAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultExpression__Group__0__Impl
	rule__MultExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultExpressionAccess().getDivExpressionParserRuleCall_0()); }
	ruleDivExpression
{ after(grammarAccess.getMultExpressionAccess().getDivExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultExpressionAccess().getGroup_1()); }
(rule__MultExpression__Group_1__0)?
{ after(grammarAccess.getMultExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultExpression__Group_1__0__Impl
	rule__MultExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
(

)
{ after(grammarAccess.getMultExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultExpression__Group_1__1__Impl
	rule__MultExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultExpressionAccess().getGroup_1_1()); }
(rule__MultExpression__Group_1_1__0)
{ after(grammarAccess.getMultExpressionAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultExpressionAccess().getGroup_1_2()); }
(rule__MultExpression__Group_1_2__0)*
{ after(grammarAccess.getMultExpressionAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MultExpression__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultExpression__Group_1_1__0__Impl
	rule__MultExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultExpressionAccess().getOperatorAssignment_1_1_0()); }
(rule__MultExpression__OperatorAssignment_1_1_0)
{ after(grammarAccess.getMultExpressionAccess().getOperatorAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultExpression__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultExpression__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultExpressionAccess().getSubExpressionsAssignment_1_1_1()); }
(rule__MultExpression__SubExpressionsAssignment_1_1_1)
{ after(grammarAccess.getMultExpressionAccess().getSubExpressionsAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultExpression__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultExpression__Group_1_2__0__Impl
	rule__MultExpression__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultExpressionAccess().getAsteriskKeyword_1_2_0()); }

	'*' 

{ after(grammarAccess.getMultExpressionAccess().getAsteriskKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultExpression__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultExpression__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultExpressionAccess().getSubExpressionsAssignment_1_2_1()); }
(rule__MultExpression__SubExpressionsAssignment_1_2_1)
{ after(grammarAccess.getMultExpressionAccess().getSubExpressionsAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DivExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DivExpression__Group__0__Impl
	rule__DivExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DivExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivExpressionAccess().getModExpressionParserRuleCall_0()); }
	ruleModExpression
{ after(grammarAccess.getDivExpressionAccess().getModExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DivExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DivExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DivExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivExpressionAccess().getGroup_1()); }
(rule__DivExpression__Group_1__0)?
{ after(grammarAccess.getDivExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DivExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DivExpression__Group_1__0__Impl
	rule__DivExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DivExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
(

)
{ after(grammarAccess.getDivExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DivExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DivExpression__Group_1__1__Impl
	rule__DivExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DivExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivExpressionAccess().getGroup_1_1()); }
(rule__DivExpression__Group_1_1__0)
{ after(grammarAccess.getDivExpressionAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DivExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DivExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DivExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivExpressionAccess().getGroup_1_2()); }
(rule__DivExpression__Group_1_2__0)*
{ after(grammarAccess.getDivExpressionAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DivExpression__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DivExpression__Group_1_1__0__Impl
	rule__DivExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DivExpression__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivExpressionAccess().getOperatorAssignment_1_1_0()); }
(rule__DivExpression__OperatorAssignment_1_1_0)
{ after(grammarAccess.getDivExpressionAccess().getOperatorAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DivExpression__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DivExpression__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DivExpression__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivExpressionAccess().getSubExpressionsAssignment_1_1_1()); }
(rule__DivExpression__SubExpressionsAssignment_1_1_1)
{ after(grammarAccess.getDivExpressionAccess().getSubExpressionsAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DivExpression__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DivExpression__Group_1_2__0__Impl
	rule__DivExpression__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DivExpression__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivExpressionAccess().getSolidusKeyword_1_2_0()); }

	'/' 

{ after(grammarAccess.getDivExpressionAccess().getSolidusKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DivExpression__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DivExpression__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DivExpression__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivExpressionAccess().getSubExpressionsAssignment_1_2_1()); }
(rule__DivExpression__SubExpressionsAssignment_1_2_1)
{ after(grammarAccess.getDivExpressionAccess().getSubExpressionsAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ModExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModExpression__Group__0__Impl
	rule__ModExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModExpressionAccess().getNegExpressionParserRuleCall_0()); }
	ruleNegExpression
{ after(grammarAccess.getModExpressionAccess().getNegExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModExpressionAccess().getGroup_1()); }
(rule__ModExpression__Group_1__0)?
{ after(grammarAccess.getModExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ModExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModExpression__Group_1__0__Impl
	rule__ModExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
(

)
{ after(grammarAccess.getModExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModExpression__Group_1__1__Impl
	rule__ModExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModExpressionAccess().getGroup_1_1()); }
(rule__ModExpression__Group_1_1__0)
{ after(grammarAccess.getModExpressionAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModExpressionAccess().getGroup_1_2()); }
(rule__ModExpression__Group_1_2__0)*
{ after(grammarAccess.getModExpressionAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ModExpression__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModExpression__Group_1_1__0__Impl
	rule__ModExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModExpression__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModExpressionAccess().getOperatorAssignment_1_1_0()); }
(rule__ModExpression__OperatorAssignment_1_1_0)
{ after(grammarAccess.getModExpressionAccess().getOperatorAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModExpression__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModExpression__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModExpression__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModExpressionAccess().getSubExpressionsAssignment_1_1_1()); }
(rule__ModExpression__SubExpressionsAssignment_1_1_1)
{ after(grammarAccess.getModExpressionAccess().getSubExpressionsAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ModExpression__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModExpression__Group_1_2__0__Impl
	rule__ModExpression__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModExpression__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModExpressionAccess().getPercentSignKeyword_1_2_0()); }

	'%' 

{ after(grammarAccess.getModExpressionAccess().getPercentSignKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModExpression__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModExpression__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModExpression__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModExpressionAccess().getSubExpressionsAssignment_1_2_1()); }
(rule__ModExpression__SubExpressionsAssignment_1_2_1)
{ after(grammarAccess.getModExpressionAccess().getSubExpressionsAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NegExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NegExpression__Group_0__0__Impl
	rule__NegExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NegExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegExpressionAccess().getOperatorExpressionAction_0_0()); }
(

)
{ after(grammarAccess.getNegExpressionAccess().getOperatorExpressionAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NegExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NegExpression__Group_0__1__Impl
	rule__NegExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NegExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegExpressionAccess().getOperatorAssignment_0_1()); }
(rule__NegExpression__OperatorAssignment_0_1)
{ after(grammarAccess.getNegExpressionAccess().getOperatorAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NegExpression__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NegExpression__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NegExpression__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegExpressionAccess().getSubExpressionsAssignment_0_2()); }
(rule__NegExpression__SubExpressionsAssignment_0_2)
{ after(grammarAccess.getNegExpressionAccess().getSubExpressionsAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AtomicExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpression__Group_2__0__Impl
	rule__AtomicExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpressionAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getAtomicExpressionAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpression__Group_2__1__Impl
	rule__AtomicExpression__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpressionAccess().getBoolExpressionParserRuleCall_2_1()); }
	ruleBoolExpression
{ after(grammarAccess.getAtomicExpressionAccess().getBoolExpressionParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpression__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpression__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpressionAccess().getRightParenthesisKeyword_2_2()); }

	')' 

{ after(grammarAccess.getAtomicExpressionAccess().getRightParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AtomicValuedExpression__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicValuedExpression__Group_3__0__Impl
	rule__AtomicValuedExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicValuedExpression__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicValuedExpressionAccess().getLeftParenthesisKeyword_3_0()); }

	'(' 

{ after(grammarAccess.getAtomicValuedExpressionAccess().getLeftParenthesisKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicValuedExpression__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicValuedExpression__Group_3__1__Impl
	rule__AtomicValuedExpression__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicValuedExpression__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicValuedExpressionAccess().getValuedExpressionParserRuleCall_3_1()); }
	ruleValuedExpression
{ after(grammarAccess.getAtomicValuedExpressionAccess().getValuedExpressionParserRuleCall_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicValuedExpression__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicValuedExpression__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicValuedExpression__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicValuedExpressionAccess().getRightParenthesisKeyword_3_2()); }

	')' 

{ after(grammarAccess.getAtomicValuedExpressionAccess().getRightParenthesisKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ValuedObjectTestExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObjectTestExpression__Group_0__0__Impl
	rule__ValuedObjectTestExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectTestExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorExpressionAction_0_0()); }
(

)
{ after(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorExpressionAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuedObjectTestExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObjectTestExpression__Group_0__1__Impl
	rule__ValuedObjectTestExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectTestExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorAssignment_0_1()); }
(rule__ValuedObjectTestExpression__OperatorAssignment_0_1)
{ after(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuedObjectTestExpression__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObjectTestExpression__Group_0__2__Impl
	rule__ValuedObjectTestExpression__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectTestExpression__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getLeftParenthesisKeyword_0_2()); }

	'(' 

{ after(grammarAccess.getValuedObjectTestExpressionAccess().getLeftParenthesisKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuedObjectTestExpression__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObjectTestExpression__Group_0__3__Impl
	rule__ValuedObjectTestExpression__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectTestExpression__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsAssignment_0_3()); }
(rule__ValuedObjectTestExpression__SubExpressionsAssignment_0_3)
{ after(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsAssignment_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuedObjectTestExpression__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObjectTestExpression__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectTestExpression__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getRightParenthesisKeyword_0_4()); }

	')' 

{ after(grammarAccess.getValuedObjectTestExpressionAccess().getRightParenthesisKeyword_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__PrimeID__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimeID__Group__0__Impl
	rule__PrimeID__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimeID__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimeIDAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getPrimeIDAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimeID__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimeID__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimeID__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimeIDAccess().getApostropheKeyword_1()); }
(
	'\'' 
)*
{ after(grammarAccess.getPrimeIDAccess().getApostropheKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ValuedObjectReference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObjectReference__Group__0__Impl
	rule__ValuedObjectReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectReference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectReferenceAccess().getValuedObjectAssignment_0()); }
(rule__ValuedObjectReference__ValuedObjectAssignment_0)
{ after(grammarAccess.getValuedObjectReferenceAccess().getValuedObjectAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuedObjectReference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObjectReference__Group__1__Impl
	rule__ValuedObjectReference__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectReference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectReferenceAccess().getGroup_1()); }
(rule__ValuedObjectReference__Group_1__0)*
{ after(grammarAccess.getValuedObjectReferenceAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuedObjectReference__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObjectReference__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectReference__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectReferenceAccess().getGroup_2()); }
(rule__ValuedObjectReference__Group_2__0)?
{ after(grammarAccess.getValuedObjectReferenceAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ValuedObjectReference__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObjectReference__Group_1__0__Impl
	rule__ValuedObjectReference__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectReference__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectReferenceAccess().getLeftSquareBracketKeyword_1_0()); }

	'[' 

{ after(grammarAccess.getValuedObjectReferenceAccess().getLeftSquareBracketKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuedObjectReference__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObjectReference__Group_1__1__Impl
	rule__ValuedObjectReference__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectReference__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectReferenceAccess().getIndicesAssignment_1_1()); }
(rule__ValuedObjectReference__IndicesAssignment_1_1)
{ after(grammarAccess.getValuedObjectReferenceAccess().getIndicesAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuedObjectReference__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObjectReference__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectReference__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectReferenceAccess().getRightSquareBracketKeyword_1_2()); }

	']' 

{ after(grammarAccess.getValuedObjectReferenceAccess().getRightSquareBracketKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ValuedObjectReference__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObjectReference__Group_2__0__Impl
	rule__ValuedObjectReference__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectReference__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectReferenceAccess().getFullStopKeyword_2_0()); }

	'.' 

{ after(grammarAccess.getValuedObjectReferenceAccess().getFullStopKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuedObjectReference__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObjectReference__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectReference__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectReferenceAccess().getSubReferenceAssignment_2_1()); }
(rule__ValuedObjectReference__SubReferenceAssignment_2_1)
{ after(grammarAccess.getValuedObjectReferenceAccess().getSubReferenceAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ScheduleObjectReference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScheduleObjectReference__Group__0__Impl
	rule__ScheduleObjectReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleObjectReference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScheduleObjectReferenceAccess().getValuedObjectAssignment_0()); }
(rule__ScheduleObjectReference__ValuedObjectAssignment_0)
{ after(grammarAccess.getScheduleObjectReferenceAccess().getValuedObjectAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScheduleObjectReference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScheduleObjectReference__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleObjectReference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScheduleObjectReferenceAccess().getPriorityAssignment_1()); }
(rule__ScheduleObjectReference__PriorityAssignment_1)
{ after(grammarAccess.getScheduleObjectReferenceAccess().getPriorityAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ReferenceCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceCall__Group__0__Impl
	rule__ReferenceCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceCall__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceCallAccess().getValuedObjectAssignment_0()); }
(rule__ReferenceCall__ValuedObjectAssignment_0)
{ after(grammarAccess.getReferenceCallAccess().getValuedObjectAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceCall__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceCall__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceCallAccess().getAlternatives_1()); }
(rule__ReferenceCall__Alternatives_1)
{ after(grammarAccess.getReferenceCallAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ReferenceCall__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceCall__Group_1_0__0__Impl
	rule__ReferenceCall__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceCall__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceCallAccess().getLeftParenthesisKeyword_1_0_0()); }

	'(' 

{ after(grammarAccess.getReferenceCallAccess().getLeftParenthesisKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceCall__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceCall__Group_1_0__1__Impl
	rule__ReferenceCall__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceCall__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceCallAccess().getParametersAssignment_1_0_1()); }
(rule__ReferenceCall__ParametersAssignment_1_0_1)
{ after(grammarAccess.getReferenceCallAccess().getParametersAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceCall__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceCall__Group_1_0__2__Impl
	rule__ReferenceCall__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceCall__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceCallAccess().getGroup_1_0_2()); }
(rule__ReferenceCall__Group_1_0_2__0)*
{ after(grammarAccess.getReferenceCallAccess().getGroup_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceCall__Group_1_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceCall__Group_1_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceCall__Group_1_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceCallAccess().getRightParenthesisKeyword_1_0_3()); }

	')' 

{ after(grammarAccess.getReferenceCallAccess().getRightParenthesisKeyword_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ReferenceCall__Group_1_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceCall__Group_1_0_2__0__Impl
	rule__ReferenceCall__Group_1_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceCall__Group_1_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceCallAccess().getCommaKeyword_1_0_2_0()); }

	',' 

{ after(grammarAccess.getReferenceCallAccess().getCommaKeyword_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceCall__Group_1_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceCall__Group_1_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceCall__Group_1_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceCallAccess().getParametersAssignment_1_0_2_1()); }
(rule__ReferenceCall__ParametersAssignment_1_0_2_1)
{ after(grammarAccess.getReferenceCallAccess().getParametersAssignment_1_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionCall__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_0__0__Impl
	rule__FunctionCall__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getExternKeyword_0_0()); }

	'extern' 

{ after(grammarAccess.getFunctionCallAccess().getExternKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_0__1__Impl
	rule__FunctionCall__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getFunctionNameAssignment_0_1()); }
(rule__FunctionCall__FunctionNameAssignment_0_1)
{ after(grammarAccess.getFunctionCallAccess().getFunctionNameAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getAlternatives_0_2()); }
(rule__FunctionCall__Alternatives_0_2)
{ after(grammarAccess.getFunctionCallAccess().getAlternatives_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FunctionCall__Group_0_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_0_2_0__0__Impl
	rule__FunctionCall__Group_0_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_0_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_0_2_0_0()); }

	'(' 

{ after(grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_0_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_0_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_0_2_0__1__Impl
	rule__FunctionCall__Group_0_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_0_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getParametersAssignment_0_2_0_1()); }
(rule__FunctionCall__ParametersAssignment_0_2_0_1)
{ after(grammarAccess.getFunctionCallAccess().getParametersAssignment_0_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_0_2_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_0_2_0__2__Impl
	rule__FunctionCall__Group_0_2_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_0_2_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getGroup_0_2_0_2()); }
(rule__FunctionCall__Group_0_2_0_2__0)*
{ after(grammarAccess.getFunctionCallAccess().getGroup_0_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_0_2_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_0_2_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_0_2_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_0_2_0_3()); }

	')' 

{ after(grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_0_2_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FunctionCall__Group_0_2_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_0_2_0_2__0__Impl
	rule__FunctionCall__Group_0_2_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_0_2_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getCommaKeyword_0_2_0_2_0()); }

	',' 

{ after(grammarAccess.getFunctionCallAccess().getCommaKeyword_0_2_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_0_2_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_0_2_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_0_2_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getParametersAssignment_0_2_0_2_1()); }
(rule__FunctionCall__ParametersAssignment_0_2_0_2_1)
{ after(grammarAccess.getFunctionCallAccess().getParametersAssignment_0_2_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionCall__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_1__0__Impl
	rule__FunctionCall__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getLessThanSignKeyword_1_0()); }

	'<' 

{ after(grammarAccess.getFunctionCallAccess().getLessThanSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_1__1__Impl
	rule__FunctionCall__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getFunctionNameAssignment_1_1()); }
(rule__FunctionCall__FunctionNameAssignment_1_1)
{ after(grammarAccess.getFunctionCallAccess().getFunctionNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_1__2__Impl
	rule__FunctionCall__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getAlternatives_1_2()); }
(rule__FunctionCall__Alternatives_1_2)
{ after(grammarAccess.getFunctionCallAccess().getAlternatives_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getGreaterThanSignKeyword_1_3()); }

	'>' 

{ after(grammarAccess.getFunctionCallAccess().getGreaterThanSignKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FunctionCall__Group_1_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_1_2_0__0__Impl
	rule__FunctionCall__Group_1_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_1_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_1_2_0_0()); }

	'(' 

{ after(grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_1_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_1_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_1_2_0__1__Impl
	rule__FunctionCall__Group_1_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_1_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getParametersAssignment_1_2_0_1()); }
(rule__FunctionCall__ParametersAssignment_1_2_0_1)
{ after(grammarAccess.getFunctionCallAccess().getParametersAssignment_1_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_1_2_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_1_2_0__2__Impl
	rule__FunctionCall__Group_1_2_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_1_2_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getGroup_1_2_0_2()); }
(rule__FunctionCall__Group_1_2_0_2__0)*
{ after(grammarAccess.getFunctionCallAccess().getGroup_1_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_1_2_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_1_2_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_1_2_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_1_2_0_3()); }

	')' 

{ after(grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_1_2_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FunctionCall__Group_1_2_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_1_2_0_2__0__Impl
	rule__FunctionCall__Group_1_2_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_1_2_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getCommaKeyword_1_2_0_2_0()); }

	',' 

{ after(grammarAccess.getFunctionCallAccess().getCommaKeyword_1_2_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_1_2_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_1_2_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_1_2_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getParametersAssignment_1_2_0_2_1()); }
(rule__FunctionCall__ParametersAssignment_1_2_0_2_1)
{ after(grammarAccess.getFunctionCallAccess().getParametersAssignment_1_2_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TagAnnotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagAnnotation__Group__0__Impl
	rule__TagAnnotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TagAnnotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagAnnotationAccess().getCommercialAtKeyword_0()); }

	'@' 

{ after(grammarAccess.getTagAnnotationAccess().getCommercialAtKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TagAnnotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagAnnotation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TagAnnotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagAnnotationAccess().getNameAssignment_1()); }
(rule__TagAnnotation__NameAssignment_1)
{ after(grammarAccess.getTagAnnotationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PragmaTag__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PragmaTag__Group__0__Impl
	rule__PragmaTag__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PragmaTag__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPragmaTagAccess().getNumberSignKeyword_0()); }

	'#' 

{ after(grammarAccess.getPragmaTagAccess().getNumberSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PragmaTag__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PragmaTag__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PragmaTag__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPragmaTagAccess().getNameAssignment_1()); }
(rule__PragmaTag__NameAssignment_1)
{ after(grammarAccess.getPragmaTagAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__KeyStringValueAnnotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyStringValueAnnotation__Group__0__Impl
	rule__KeyStringValueAnnotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStringValueAnnotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getCommercialAtKeyword_0()); }

	'@' 

{ after(grammarAccess.getKeyStringValueAnnotationAccess().getCommercialAtKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyStringValueAnnotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyStringValueAnnotation__Group__1__Impl
	rule__KeyStringValueAnnotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStringValueAnnotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getNameAssignment_1()); }
(rule__KeyStringValueAnnotation__NameAssignment_1)
{ after(grammarAccess.getKeyStringValueAnnotationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyStringValueAnnotation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyStringValueAnnotation__Group__2__Impl
	rule__KeyStringValueAnnotation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStringValueAnnotation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getValuesAssignment_2()); }
(rule__KeyStringValueAnnotation__ValuesAssignment_2)
{ after(grammarAccess.getKeyStringValueAnnotationAccess().getValuesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyStringValueAnnotation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyStringValueAnnotation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStringValueAnnotation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getGroup_3()); }
(rule__KeyStringValueAnnotation__Group_3__0)*
{ after(grammarAccess.getKeyStringValueAnnotationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__KeyStringValueAnnotation__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyStringValueAnnotation__Group_3__0__Impl
	rule__KeyStringValueAnnotation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStringValueAnnotation__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getKeyStringValueAnnotationAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyStringValueAnnotation__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyStringValueAnnotation__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStringValueAnnotation__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getValuesAssignment_3_1()); }
(rule__KeyStringValueAnnotation__ValuesAssignment_3_1)
{ after(grammarAccess.getKeyStringValueAnnotationAccess().getValuesAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RestrictedKeyStringValueAnnotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RestrictedKeyStringValueAnnotation__Group__0__Impl
	rule__RestrictedKeyStringValueAnnotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RestrictedKeyStringValueAnnotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0()); }

	'@' 

{ after(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RestrictedKeyStringValueAnnotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RestrictedKeyStringValueAnnotation__Group__1__Impl
	rule__RestrictedKeyStringValueAnnotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RestrictedKeyStringValueAnnotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getNameAssignment_1()); }
(rule__RestrictedKeyStringValueAnnotation__NameAssignment_1)
{ after(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RestrictedKeyStringValueAnnotation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RestrictedKeyStringValueAnnotation__Group__2__Impl
	rule__RestrictedKeyStringValueAnnotation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RestrictedKeyStringValueAnnotation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getValuesAssignment_2()); }
(rule__RestrictedKeyStringValueAnnotation__ValuesAssignment_2)
{ after(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getValuesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RestrictedKeyStringValueAnnotation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RestrictedKeyStringValueAnnotation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RestrictedKeyStringValueAnnotation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getGroup_3()); }
(rule__RestrictedKeyStringValueAnnotation__Group_3__0)*
{ after(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__RestrictedKeyStringValueAnnotation__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RestrictedKeyStringValueAnnotation__Group_3__0__Impl
	rule__RestrictedKeyStringValueAnnotation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RestrictedKeyStringValueAnnotation__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RestrictedKeyStringValueAnnotation__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RestrictedKeyStringValueAnnotation__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RestrictedKeyStringValueAnnotation__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getValuesAssignment_3_1()); }
(rule__RestrictedKeyStringValueAnnotation__ValuesAssignment_3_1)
{ after(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getValuesAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StringPragma__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringPragma__Group__0__Impl
	rule__StringPragma__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringPragma__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringPragmaAccess().getNumberSignKeyword_0()); }

	'#' 

{ after(grammarAccess.getStringPragmaAccess().getNumberSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringPragma__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringPragma__Group__1__Impl
	rule__StringPragma__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StringPragma__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringPragmaAccess().getNameAssignment_1()); }
(rule__StringPragma__NameAssignment_1)
{ after(grammarAccess.getStringPragmaAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringPragma__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringPragma__Group__2__Impl
	rule__StringPragma__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StringPragma__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringPragmaAccess().getValuesAssignment_2()); }
(rule__StringPragma__ValuesAssignment_2)
{ after(grammarAccess.getStringPragmaAccess().getValuesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringPragma__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringPragma__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringPragma__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringPragmaAccess().getGroup_3()); }
(rule__StringPragma__Group_3__0)*
{ after(grammarAccess.getStringPragmaAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__StringPragma__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringPragma__Group_3__0__Impl
	rule__StringPragma__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringPragma__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringPragmaAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getStringPragmaAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringPragma__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringPragma__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringPragma__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringPragmaAccess().getValuesAssignment_3_1()); }
(rule__StringPragma__ValuesAssignment_3_1)
{ after(grammarAccess.getStringPragmaAccess().getValuesAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypedKeyStringValueAnnotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedKeyStringValueAnnotation__Group__0__Impl
	rule__TypedKeyStringValueAnnotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0()); }

	'@' 

{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedKeyStringValueAnnotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedKeyStringValueAnnotation__Group__1__Impl
	rule__TypedKeyStringValueAnnotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getNameAssignment_1()); }
(rule__TypedKeyStringValueAnnotation__NameAssignment_1)
{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedKeyStringValueAnnotation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedKeyStringValueAnnotation__Group__2__Impl
	rule__TypedKeyStringValueAnnotation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getLeftSquareBracketKeyword_2()); }

	'[' 

{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getLeftSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedKeyStringValueAnnotation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedKeyStringValueAnnotation__Group__3__Impl
	rule__TypedKeyStringValueAnnotation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getTypeAssignment_3()); }
(rule__TypedKeyStringValueAnnotation__TypeAssignment_3)
{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedKeyStringValueAnnotation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedKeyStringValueAnnotation__Group__4__Impl
	rule__TypedKeyStringValueAnnotation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getRightSquareBracketKeyword_4()); }

	']' 

{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getRightSquareBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedKeyStringValueAnnotation__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedKeyStringValueAnnotation__Group__5__Impl
	rule__TypedKeyStringValueAnnotation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValuesAssignment_5()); }
(rule__TypedKeyStringValueAnnotation__ValuesAssignment_5)
{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValuesAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedKeyStringValueAnnotation__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedKeyStringValueAnnotation__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getGroup_6()); }
(rule__TypedKeyStringValueAnnotation__Group_6__0)*
{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__TypedKeyStringValueAnnotation__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedKeyStringValueAnnotation__Group_6__0__Impl
	rule__TypedKeyStringValueAnnotation__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getCommaKeyword_6_0()); }

	',' 

{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getCommaKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedKeyStringValueAnnotation__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedKeyStringValueAnnotation__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValuesAssignment_6_1()); }
(rule__TypedKeyStringValueAnnotation__ValuesAssignment_6_1)
{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValuesAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RestrictedTypedKeyStringValueAnnotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RestrictedTypedKeyStringValueAnnotation__Group__0__Impl
	rule__RestrictedTypedKeyStringValueAnnotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RestrictedTypedKeyStringValueAnnotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0()); }

	'@' 

{ after(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RestrictedTypedKeyStringValueAnnotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RestrictedTypedKeyStringValueAnnotation__Group__1__Impl
	rule__RestrictedTypedKeyStringValueAnnotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RestrictedTypedKeyStringValueAnnotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getNameAssignment_1()); }
(rule__RestrictedTypedKeyStringValueAnnotation__NameAssignment_1)
{ after(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RestrictedTypedKeyStringValueAnnotation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RestrictedTypedKeyStringValueAnnotation__Group__2__Impl
	rule__RestrictedTypedKeyStringValueAnnotation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RestrictedTypedKeyStringValueAnnotation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getLeftSquareBracketKeyword_2()); }

	'[' 

{ after(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getLeftSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RestrictedTypedKeyStringValueAnnotation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RestrictedTypedKeyStringValueAnnotation__Group__3__Impl
	rule__RestrictedTypedKeyStringValueAnnotation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RestrictedTypedKeyStringValueAnnotation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getTypeAssignment_3()); }
(rule__RestrictedTypedKeyStringValueAnnotation__TypeAssignment_3)
{ after(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RestrictedTypedKeyStringValueAnnotation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RestrictedTypedKeyStringValueAnnotation__Group__4__Impl
	rule__RestrictedTypedKeyStringValueAnnotation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RestrictedTypedKeyStringValueAnnotation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getRightSquareBracketKeyword_4()); }

	']' 

{ after(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getRightSquareBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RestrictedTypedKeyStringValueAnnotation__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RestrictedTypedKeyStringValueAnnotation__Group__5__Impl
	rule__RestrictedTypedKeyStringValueAnnotation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RestrictedTypedKeyStringValueAnnotation__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getValuesAssignment_5()); }
(rule__RestrictedTypedKeyStringValueAnnotation__ValuesAssignment_5)
{ after(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getValuesAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RestrictedTypedKeyStringValueAnnotation__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RestrictedTypedKeyStringValueAnnotation__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RestrictedTypedKeyStringValueAnnotation__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getGroup_6()); }
(rule__RestrictedTypedKeyStringValueAnnotation__Group_6__0)*
{ after(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__RestrictedTypedKeyStringValueAnnotation__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RestrictedTypedKeyStringValueAnnotation__Group_6__0__Impl
	rule__RestrictedTypedKeyStringValueAnnotation__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RestrictedTypedKeyStringValueAnnotation__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getCommaKeyword_6_0()); }

	',' 

{ after(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getCommaKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RestrictedTypedKeyStringValueAnnotation__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RestrictedTypedKeyStringValueAnnotation__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RestrictedTypedKeyStringValueAnnotation__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getValuesAssignment_6_1()); }
(rule__RestrictedTypedKeyStringValueAnnotation__ValuesAssignment_6_1)
{ after(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getValuesAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QuotedKeyStringValueAnnotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QuotedKeyStringValueAnnotation__Group__0__Impl
	rule__QuotedKeyStringValueAnnotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QuotedKeyStringValueAnnotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0()); }

	'@' 

{ after(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QuotedKeyStringValueAnnotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QuotedKeyStringValueAnnotation__Group__1__Impl
	rule__QuotedKeyStringValueAnnotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QuotedKeyStringValueAnnotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getNameAssignment_1()); }
(rule__QuotedKeyStringValueAnnotation__NameAssignment_1)
{ after(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QuotedKeyStringValueAnnotation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QuotedKeyStringValueAnnotation__Group__2__Impl
	rule__QuotedKeyStringValueAnnotation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__QuotedKeyStringValueAnnotation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getValuesAssignment_2()); }
(rule__QuotedKeyStringValueAnnotation__ValuesAssignment_2)
{ after(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getValuesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QuotedKeyStringValueAnnotation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QuotedKeyStringValueAnnotation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QuotedKeyStringValueAnnotation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getGroup_3()); }
(rule__QuotedKeyStringValueAnnotation__Group_3__0)*
{ after(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__QuotedKeyStringValueAnnotation__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QuotedKeyStringValueAnnotation__Group_3__0__Impl
	rule__QuotedKeyStringValueAnnotation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QuotedKeyStringValueAnnotation__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QuotedKeyStringValueAnnotation__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QuotedKeyStringValueAnnotation__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QuotedKeyStringValueAnnotation__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getValuesAssignment_3_1()); }
(rule__QuotedKeyStringValueAnnotation__ValuesAssignment_3_1)
{ after(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getValuesAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QuotedTypedKeyStringValueAnnotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QuotedTypedKeyStringValueAnnotation__Group__0__Impl
	rule__QuotedTypedKeyStringValueAnnotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QuotedTypedKeyStringValueAnnotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0()); }

	'@' 

{ after(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QuotedTypedKeyStringValueAnnotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QuotedTypedKeyStringValueAnnotation__Group__1__Impl
	rule__QuotedTypedKeyStringValueAnnotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QuotedTypedKeyStringValueAnnotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getNameAssignment_1()); }
(rule__QuotedTypedKeyStringValueAnnotation__NameAssignment_1)
{ after(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QuotedTypedKeyStringValueAnnotation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QuotedTypedKeyStringValueAnnotation__Group__2__Impl
	rule__QuotedTypedKeyStringValueAnnotation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__QuotedTypedKeyStringValueAnnotation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getLeftSquareBracketKeyword_2()); }

	'[' 

{ after(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getLeftSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QuotedTypedKeyStringValueAnnotation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QuotedTypedKeyStringValueAnnotation__Group__3__Impl
	rule__QuotedTypedKeyStringValueAnnotation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__QuotedTypedKeyStringValueAnnotation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getTypeAssignment_3()); }
(rule__QuotedTypedKeyStringValueAnnotation__TypeAssignment_3)
{ after(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QuotedTypedKeyStringValueAnnotation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QuotedTypedKeyStringValueAnnotation__Group__4__Impl
	rule__QuotedTypedKeyStringValueAnnotation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__QuotedTypedKeyStringValueAnnotation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getRightSquareBracketKeyword_4()); }

	']' 

{ after(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getRightSquareBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QuotedTypedKeyStringValueAnnotation__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QuotedTypedKeyStringValueAnnotation__Group__5__Impl
	rule__QuotedTypedKeyStringValueAnnotation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__QuotedTypedKeyStringValueAnnotation__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getValuesAssignment_5()); }
(rule__QuotedTypedKeyStringValueAnnotation__ValuesAssignment_5)
{ after(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getValuesAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QuotedTypedKeyStringValueAnnotation__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QuotedTypedKeyStringValueAnnotation__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QuotedTypedKeyStringValueAnnotation__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getGroup_6()); }
(rule__QuotedTypedKeyStringValueAnnotation__Group_6__0)*
{ after(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__QuotedTypedKeyStringValueAnnotation__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QuotedTypedKeyStringValueAnnotation__Group_6__0__Impl
	rule__QuotedTypedKeyStringValueAnnotation__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QuotedTypedKeyStringValueAnnotation__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getCommaKeyword_6_0()); }

	',' 

{ after(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getCommaKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QuotedTypedKeyStringValueAnnotation__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QuotedTypedKeyStringValueAnnotation__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QuotedTypedKeyStringValueAnnotation__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getValuesAssignment_6_1()); }
(rule__QuotedTypedKeyStringValueAnnotation__ValuesAssignment_6_1)
{ after(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getValuesAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExtendedID__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtendedID__Group__0__Impl
	rule__ExtendedID__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedID__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendedIDAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getExtendedIDAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExtendedID__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtendedID__Group__1__Impl
	rule__ExtendedID__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedID__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendedIDAccess().getGroup_1()); }
(rule__ExtendedID__Group_1__0)*
{ after(grammarAccess.getExtendedIDAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExtendedID__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtendedID__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedID__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendedIDAccess().getGroup_2()); }
(rule__ExtendedID__Group_2__0)?
{ after(grammarAccess.getExtendedIDAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExtendedID__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtendedID__Group_1__0__Impl
	rule__ExtendedID__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedID__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendedIDAccess().getAlternatives_1_0()); }
(rule__ExtendedID__Alternatives_1_0)
{ after(grammarAccess.getExtendedIDAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExtendedID__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtendedID__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedID__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendedIDAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getExtendedIDAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExtendedID__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtendedID__Group_2__0__Impl
	rule__ExtendedID__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedID__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendedIDAccess().getNumberSignKeyword_2_0()); }

	'#' 

{ after(grammarAccess.getExtendedIDAccess().getNumberSignKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExtendedID__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtendedID__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedID__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendedIDAccess().getINTTerminalRuleCall_2_1()); }
	RULE_INT
{ after(grammarAccess.getExtendedIDAccess().getINTTerminalRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Integer__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Integer__Group__0__Impl
	rule__Integer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Integer__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerAccess().getHyphenMinusKeyword_0()); }
(
	'-' 
)?
{ after(grammarAccess.getIntegerAccess().getHyphenMinusKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Integer__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Integer__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Integer__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
{ after(grammarAccess.getIntegerAccess().getINTTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Floateger__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Floateger__Group__0__Impl
	rule__Floateger__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Floateger__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloategerAccess().getHyphenMinusKeyword_0()); }
(
	'-' 
)?
{ after(grammarAccess.getFloategerAccess().getHyphenMinusKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Floateger__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Floateger__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Floateger__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloategerAccess().getFLOATTerminalRuleCall_1()); }
	RULE_FLOAT
{ after(grammarAccess.getFloategerAccess().getFLOATTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__SCCharts__PragmasAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCChartsAccess().getPragmasPragmaParserRuleCall_0_0()); }
	rulePragma{ after(grammarAccess.getSCChartsAccess().getPragmasPragmaParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SCCharts__RootStatesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCChartsAccess().getRootStatesRootStateParserRuleCall_1_0()); }
	ruleRootState{ after(grammarAccess.getSCChartsAccess().getRootStatesRootStateParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RootState__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootStateAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getRootStateAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RootState__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootStateAccess().getNameExtendedIDParserRuleCall_2_0()); }
	ruleExtendedID{ after(grammarAccess.getRootStateAccess().getNameExtendedIDParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RootState__LabelAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootStateAccess().getLabelSTRINGTerminalRuleCall_3_0()); }
	RULE_STRING{ after(grammarAccess.getRootStateAccess().getLabelSTRINGTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RootState__DeclarationsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootStateAccess().getDeclarationsDeclarationWOSemicolonParserRuleCall_5_0()); }
	ruleDeclarationWOSemicolon{ after(grammarAccess.getRootStateAccess().getDeclarationsDeclarationWOSemicolonParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RootState__ActionsAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootStateAccess().getActionsLocalActionParserRuleCall_6_0()); }
	ruleLocalAction{ after(grammarAccess.getRootStateAccess().getActionsLocalActionParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RootState__RegionsAssignment_7_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootStateAccess().getRegionsImplicitControlflowRegionParserRuleCall_7_0_0()); }
	ruleImplicitControlflowRegion{ after(grammarAccess.getRootStateAccess().getRegionsImplicitControlflowRegionParserRuleCall_7_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RootState__RegionsAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootStateAccess().getRegionsImplicitDataflowRegionParserRuleCall_7_1_0()); }
	ruleImplicitDataflowRegion{ after(grammarAccess.getRootStateAccess().getRegionsImplicitDataflowRegionParserRuleCall_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RootState__RegionsAssignment_7_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootStateAccess().getRegionsRegionParserRuleCall_7_2_0()); }
	ruleRegion{ after(grammarAccess.getRootStateAccess().getRegionsRegionParserRuleCall_7_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getStateAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__InitialAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getInitialInitialKeyword_1_0()); }
(
{ before(grammarAccess.getStateAccess().getInitialInitialKeyword_1_0()); }

	'initial' 

{ after(grammarAccess.getStateAccess().getInitialInitialKeyword_1_0()); }
)

{ after(grammarAccess.getStateAccess().getInitialInitialKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__FinalAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getFinalFinalKeyword_2_0()); }
(
{ before(grammarAccess.getStateAccess().getFinalFinalKeyword_2_0()); }

	'final' 

{ after(grammarAccess.getStateAccess().getFinalFinalKeyword_2_0()); }
)

{ after(grammarAccess.getStateAccess().getFinalFinalKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__ViolationAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getViolationViolationKeyword_3_0()); }
(
{ before(grammarAccess.getStateAccess().getViolationViolationKeyword_3_0()); }

	'violation' 

{ after(grammarAccess.getStateAccess().getViolationViolationKeyword_3_0()); }
)

{ after(grammarAccess.getStateAccess().getViolationViolationKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__ConnectorAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getConnectorConnectorKeyword_4_0()); }
(
{ before(grammarAccess.getStateAccess().getConnectorConnectorKeyword_4_0()); }

	'connector' 

{ after(grammarAccess.getStateAccess().getConnectorConnectorKeyword_4_0()); }
)

{ after(grammarAccess.getStateAccess().getConnectorConnectorKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__NameAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_6_0()); }
	RULE_ID{ after(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__LabelAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getLabelSTRINGTerminalRuleCall_7_0()); }
	RULE_STRING{ after(grammarAccess.getStateAccess().getLabelSTRINGTerminalRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__ReferenceAssignment_8_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getReferenceScopeCallParserRuleCall_8_0_1_0()); }
	ruleScopeCall{ after(grammarAccess.getStateAccess().getReferenceScopeCallParserRuleCall_8_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__DeclarationsAssignment_8_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getDeclarationsDeclarationWOSemicolonParserRuleCall_8_1_1_0()); }
	ruleDeclarationWOSemicolon{ after(grammarAccess.getStateAccess().getDeclarationsDeclarationWOSemicolonParserRuleCall_8_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__ActionsAssignment_8_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getActionsLocalActionParserRuleCall_8_1_2_0()); }
	ruleLocalAction{ after(grammarAccess.getStateAccess().getActionsLocalActionParserRuleCall_8_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__RegionsAssignment_8_1_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getRegionsImplicitControlflowRegionParserRuleCall_8_1_3_0_0()); }
	ruleImplicitControlflowRegion{ after(grammarAccess.getStateAccess().getRegionsImplicitControlflowRegionParserRuleCall_8_1_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__RegionsAssignment_8_1_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getRegionsImplicitDataflowRegionParserRuleCall_8_1_3_1_0()); }
	ruleImplicitDataflowRegion{ after(grammarAccess.getStateAccess().getRegionsImplicitDataflowRegionParserRuleCall_8_1_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__RegionsAssignment_8_1_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getRegionsRegionParserRuleCall_8_1_3_2_0()); }
	ruleRegion{ after(grammarAccess.getStateAccess().getRegionsRegionParserRuleCall_8_1_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__OutgoingTransitionsAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getOutgoingTransitionsTransitionParserRuleCall_9_0()); }
	ruleTransition{ after(grammarAccess.getStateAccess().getOutgoingTransitionsTransitionParserRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImplicitState__RegionsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImplicitStateAccess().getRegionsRegionParserRuleCall_1_0()); }
	ruleRegion{ after(grammarAccess.getImplicitStateAccess().getRegionsRegionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeCall__ScopeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeCallAccess().getScopeStateCrossReference_0_0()); }
(
{ before(grammarAccess.getScopeCallAccess().getScopeStateIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getScopeCallAccess().getScopeStateIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getScopeCallAccess().getScopeStateCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeCall__ParametersAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeCallAccess().getParametersParameterParserRuleCall_1_0_1_0()); }
	ruleParameter{ after(grammarAccess.getScopeCallAccess().getParametersParameterParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeCall__ParametersAssignment_1_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeCallAccess().getParametersParameterParserRuleCall_1_0_2_1_0()); }
	ruleParameter{ after(grammarAccess.getScopeCallAccess().getParametersParameterParserRuleCall_1_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__PureOutputAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getPureOutputExclamationMarkKeyword_0_0_0()); }
(
{ before(grammarAccess.getParameterAccess().getPureOutputExclamationMarkKeyword_0_0_0()); }

	'!' 

{ after(grammarAccess.getParameterAccess().getPureOutputExclamationMarkKeyword_0_0_0()); }
)

{ after(grammarAccess.getParameterAccess().getPureOutputExclamationMarkKeyword_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__CallByReferenceAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getCallByReferenceAmpersandKeyword_0_1_0()); }
(
{ before(grammarAccess.getParameterAccess().getCallByReferenceAmpersandKeyword_0_1_0()); }

	'&' 

{ after(grammarAccess.getParameterAccess().getCallByReferenceAmpersandKeyword_0_1_0()); }
)

{ after(grammarAccess.getParameterAccess().getCallByReferenceAmpersandKeyword_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__ExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getExpressionExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getParameterAccess().getExpressionExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__ExplicitBindingAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getExplicitBindingValuedObjectCrossReference_2_1_0()); }
(
{ before(grammarAccess.getParameterAccess().getExplicitBindingValuedObjectIDTerminalRuleCall_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getParameterAccess().getExplicitBindingValuedObjectIDTerminalRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getParameterAccess().getExplicitBindingValuedObjectCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__ExplicitBindingIndicesAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getExplicitBindingIndicesExpressionParserRuleCall_2_2_1_0()); }
	ruleExpression{ after(grammarAccess.getParameterAccess().getExplicitBindingIndicesExpressionParserRuleCall_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getAnnotationsRestrictedTypeAnnotationParserRuleCall_0_0()); }
	ruleRestrictedTypeAnnotation{ after(grammarAccess.getTransitionAccess().getAnnotationsRestrictedTypeAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__PreemptionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getPreemptionAlternatives_1_0()); }
(rule__Transition__PreemptionAlternatives_1_0)
{ after(grammarAccess.getTransitionAccess().getPreemptionAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__TargetStateAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getTargetStateStateCrossReference_2_0()); }
(
{ before(grammarAccess.getTransitionAccess().getTargetStateStateIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getTransitionAccess().getTargetStateStateIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getTransitionAccess().getTargetStateStateCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__DelayAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getDelayDelayTypeEnumRuleCall_3_0()); }
	ruleDelayType{ after(grammarAccess.getTransitionAccess().getDelayDelayTypeEnumRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__DeferredAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getDeferredDeferredKeyword_4_0()); }
(
{ before(grammarAccess.getTransitionAccess().getDeferredDeferredKeyword_4_0()); }

	'deferred' 

{ after(grammarAccess.getTransitionAccess().getDeferredDeferredKeyword_4_0()); }
)

{ after(grammarAccess.getTransitionAccess().getDeferredDeferredKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__HistoryAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getHistoryHistoryTypeEnumRuleCall_5_0()); }
	ruleHistoryType{ after(grammarAccess.getTransitionAccess().getHistoryHistoryTypeEnumRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__TriggerDelayAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getTriggerDelayINTTerminalRuleCall_6_1_0()); }
	RULE_INT{ after(grammarAccess.getTransitionAccess().getTriggerDelayINTTerminalRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__TriggerAssignment_6_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getTriggerBoolExpressionParserRuleCall_6_2_0_0()); }
	ruleBoolExpression{ after(grammarAccess.getTransitionAccess().getTriggerBoolExpressionParserRuleCall_6_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__TriggerAssignment_6_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getTriggerAtomicExpressionParserRuleCall_6_2_1_0()); }
	ruleAtomicExpression{ after(grammarAccess.getTransitionAccess().getTriggerAtomicExpressionParserRuleCall_6_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__EffectsAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getEffectsEffectParserRuleCall_7_1_0()); }
	ruleEffect{ after(grammarAccess.getTransitionAccess().getEffectsEffectParserRuleCall_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__EffectsAssignment_7_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getEffectsEffectParserRuleCall_7_2_1_0()); }
	ruleEffect{ after(grammarAccess.getTransitionAccess().getEffectsEffectParserRuleCall_7_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__LabelAssignment_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getLabelSTRINGTerminalRuleCall_8_1_0()); }
	RULE_STRING{ after(grammarAccess.getTransitionAccess().getLabelSTRINGTerminalRuleCall_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImplicitControlflowRegion__StatesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImplicitControlflowRegionAccess().getStatesStateParserRuleCall_1_0()); }
	ruleState{ after(grammarAccess.getImplicitControlflowRegionAccess().getStatesStateParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImplicitDataflowRegion__EquationsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImplicitDataflowRegionAccess().getEquationsEquationParserRuleCall_1_0()); }
	ruleEquation{ after(grammarAccess.getImplicitDataflowRegionAccess().getEquationsEquationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ControlflowRegion__AnnotationsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlflowRegionAccess().getAnnotationsAnnotationParserRuleCall_1_0()); }
	ruleAnnotation{ after(grammarAccess.getControlflowRegionAccess().getAnnotationsAnnotationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ControlflowRegion__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlflowRegionAccess().getNameExtendedIDParserRuleCall_3_0()); }
	ruleExtendedID{ after(grammarAccess.getControlflowRegionAccess().getNameExtendedIDParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ControlflowRegion__LabelAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlflowRegionAccess().getLabelSTRINGTerminalRuleCall_4_0()); }
	RULE_STRING{ after(grammarAccess.getControlflowRegionAccess().getLabelSTRINGTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ControlflowRegion__CounterVariableAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlflowRegionAccess().getCounterVariableCounterVariableParserRuleCall_5_1_0()); }
	ruleCounterVariable{ after(grammarAccess.getControlflowRegionAccess().getCounterVariableCounterVariableParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ControlflowRegion__ForStartAssignment_5_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlflowRegionAccess().getForStartIntOrReferenceParserRuleCall_5_3_0()); }
	ruleIntOrReference{ after(grammarAccess.getControlflowRegionAccess().getForStartIntOrReferenceParserRuleCall_5_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ControlflowRegion__ForEndAssignment_5_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlflowRegionAccess().getForEndIntOrReferenceParserRuleCall_5_4_1_0()); }
	ruleIntOrReference{ after(grammarAccess.getControlflowRegionAccess().getForEndIntOrReferenceParserRuleCall_5_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ControlflowRegion__DeclarationsAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlflowRegionAccess().getDeclarationsDeclarationWOSemicolonParserRuleCall_7_0()); }
	ruleDeclarationWOSemicolon{ after(grammarAccess.getControlflowRegionAccess().getDeclarationsDeclarationWOSemicolonParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ControlflowRegion__StatesAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlflowRegionAccess().getStatesStateParserRuleCall_8_0()); }
	ruleState{ after(grammarAccess.getControlflowRegionAccess().getStatesStateParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NestedControlflowRegion__AnnotationsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedControlflowRegionAccess().getAnnotationsAnnotationParserRuleCall_1_0()); }
	ruleAnnotation{ after(grammarAccess.getNestedControlflowRegionAccess().getAnnotationsAnnotationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NestedControlflowRegion__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedControlflowRegionAccess().getNameExtendedIDParserRuleCall_3_0()); }
	ruleExtendedID{ after(grammarAccess.getNestedControlflowRegionAccess().getNameExtendedIDParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NestedControlflowRegion__LabelAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedControlflowRegionAccess().getLabelSTRINGTerminalRuleCall_4_0()); }
	RULE_STRING{ after(grammarAccess.getNestedControlflowRegionAccess().getLabelSTRINGTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NestedControlflowRegion__CounterVariableAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedControlflowRegionAccess().getCounterVariableCounterVariableParserRuleCall_5_1_0()); }
	ruleCounterVariable{ after(grammarAccess.getNestedControlflowRegionAccess().getCounterVariableCounterVariableParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NestedControlflowRegion__ForStartAssignment_5_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedControlflowRegionAccess().getForStartIntOrReferenceParserRuleCall_5_3_0()); }
	ruleIntOrReference{ after(grammarAccess.getNestedControlflowRegionAccess().getForStartIntOrReferenceParserRuleCall_5_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NestedControlflowRegion__ForEndAssignment_5_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedControlflowRegionAccess().getForEndIntOrReferenceParserRuleCall_5_4_1_0()); }
	ruleIntOrReference{ after(grammarAccess.getNestedControlflowRegionAccess().getForEndIntOrReferenceParserRuleCall_5_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NestedControlflowRegion__DeclarationsAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedControlflowRegionAccess().getDeclarationsDeclarationWOSemicolonParserRuleCall_7_0()); }
	ruleDeclarationWOSemicolon{ after(grammarAccess.getNestedControlflowRegionAccess().getDeclarationsDeclarationWOSemicolonParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NestedControlflowRegion__StatesAssignment_8_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedControlflowRegionAccess().getStatesImplicitStateParserRuleCall_8_0_0()); }
	ruleImplicitState{ after(grammarAccess.getNestedControlflowRegionAccess().getStatesImplicitStateParserRuleCall_8_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NestedControlflowRegion__StatesAssignment_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedControlflowRegionAccess().getStatesStateParserRuleCall_8_1_0()); }
	ruleState{ after(grammarAccess.getNestedControlflowRegionAccess().getStatesStateParserRuleCall_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowRegion__AnnotationsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataflowRegionAccess().getAnnotationsAnnotationParserRuleCall_1_0()); }
	ruleAnnotation{ after(grammarAccess.getDataflowRegionAccess().getAnnotationsAnnotationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowRegion__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataflowRegionAccess().getNameExtendedIDParserRuleCall_3_0()); }
	ruleExtendedID{ after(grammarAccess.getDataflowRegionAccess().getNameExtendedIDParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowRegion__LabelAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataflowRegionAccess().getLabelSTRINGTerminalRuleCall_4_0()); }
	RULE_STRING{ after(grammarAccess.getDataflowRegionAccess().getLabelSTRINGTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowRegion__CounterVariableAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataflowRegionAccess().getCounterVariableCounterVariableParserRuleCall_5_1_0()); }
	ruleCounterVariable{ after(grammarAccess.getDataflowRegionAccess().getCounterVariableCounterVariableParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowRegion__ForStartAssignment_5_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataflowRegionAccess().getForStartIntOrReferenceParserRuleCall_5_3_0()); }
	ruleIntOrReference{ after(grammarAccess.getDataflowRegionAccess().getForStartIntOrReferenceParserRuleCall_5_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowRegion__ForEndAssignment_5_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataflowRegionAccess().getForEndIntOrReferenceParserRuleCall_5_4_1_0()); }
	ruleIntOrReference{ after(grammarAccess.getDataflowRegionAccess().getForEndIntOrReferenceParserRuleCall_5_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowRegion__DeclarationsAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataflowRegionAccess().getDeclarationsDeclarationWOSemicolonParserRuleCall_7_0()); }
	ruleDeclarationWOSemicolon{ after(grammarAccess.getDataflowRegionAccess().getDeclarationsDeclarationWOSemicolonParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowRegion__EquationsAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataflowRegionAccess().getEquationsEquationParserRuleCall_8_0()); }
	ruleEquation{ after(grammarAccess.getDataflowRegionAccess().getEquationsEquationParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CounterVariable__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCounterVariableAccess().getNamePrimeIDParserRuleCall_0()); }
	rulePrimeID{ after(grammarAccess.getCounterVariableAccess().getNamePrimeIDParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EntryAction__TriggerAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntryActionAccess().getTriggerBoolExpressionParserRuleCall_2_1_0()); }
	ruleBoolExpression{ after(grammarAccess.getEntryActionAccess().getTriggerBoolExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EntryAction__EffectsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntryActionAccess().getEffectsEffectParserRuleCall_3_1_0()); }
	ruleEffect{ after(grammarAccess.getEntryActionAccess().getEffectsEffectParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EntryAction__EffectsAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntryActionAccess().getEffectsEffectParserRuleCall_3_2_1_0()); }
	ruleEffect{ after(grammarAccess.getEntryActionAccess().getEffectsEffectParserRuleCall_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EntryAction__LabelAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntryActionAccess().getLabelSTRINGTerminalRuleCall_4_1_0()); }
	RULE_STRING{ after(grammarAccess.getEntryActionAccess().getLabelSTRINGTerminalRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DuringAction__DelayAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDuringActionAccess().getDelayDelayTypeEnumRuleCall_1_0()); }
	ruleDelayType{ after(grammarAccess.getDuringActionAccess().getDelayDelayTypeEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DuringAction__TriggerAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDuringActionAccess().getTriggerBoolExpressionParserRuleCall_3_1_0()); }
	ruleBoolExpression{ after(grammarAccess.getDuringActionAccess().getTriggerBoolExpressionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DuringAction__EffectsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDuringActionAccess().getEffectsEffectParserRuleCall_4_1_0()); }
	ruleEffect{ after(grammarAccess.getDuringActionAccess().getEffectsEffectParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DuringAction__EffectsAssignment_4_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDuringActionAccess().getEffectsEffectParserRuleCall_4_2_1_0()); }
	ruleEffect{ after(grammarAccess.getDuringActionAccess().getEffectsEffectParserRuleCall_4_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DuringAction__LabelAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDuringActionAccess().getLabelSTRINGTerminalRuleCall_5_1_0()); }
	RULE_STRING{ after(grammarAccess.getDuringActionAccess().getLabelSTRINGTerminalRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExitAction__TriggerAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitActionAccess().getTriggerBoolExpressionParserRuleCall_2_1_0()); }
	ruleBoolExpression{ after(grammarAccess.getExitActionAccess().getTriggerBoolExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExitAction__EffectsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitActionAccess().getEffectsEffectParserRuleCall_3_1_0()); }
	ruleEffect{ after(grammarAccess.getExitActionAccess().getEffectsEffectParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExitAction__EffectsAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitActionAccess().getEffectsEffectParserRuleCall_3_2_1_0()); }
	ruleEffect{ after(grammarAccess.getExitActionAccess().getEffectsEffectParserRuleCall_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExitAction__LabelAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitActionAccess().getLabelSTRINGTerminalRuleCall_4_1_0()); }
	RULE_STRING{ after(grammarAccess.getExitActionAccess().getLabelSTRINGTerminalRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SuspendAction__DelayAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuspendActionAccess().getDelayDelayTypeEnumRuleCall_1_0()); }
	ruleDelayType{ after(grammarAccess.getSuspendActionAccess().getDelayDelayTypeEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SuspendAction__WeakAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuspendActionAccess().getWeakWeakKeyword_2_0()); }
(
{ before(grammarAccess.getSuspendActionAccess().getWeakWeakKeyword_2_0()); }

	'weak' 

{ after(grammarAccess.getSuspendActionAccess().getWeakWeakKeyword_2_0()); }
)

{ after(grammarAccess.getSuspendActionAccess().getWeakWeakKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SuspendAction__TriggerAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuspendActionAccess().getTriggerBoolExpressionParserRuleCall_4_1_0()); }
	ruleBoolExpression{ after(grammarAccess.getSuspendActionAccess().getTriggerBoolExpressionParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SuspendAction__LabelAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuspendActionAccess().getLabelSTRINGTerminalRuleCall_5_1_0()); }
	RULE_STRING{ after(grammarAccess.getSuspendActionAccess().getLabelSTRINGTerminalRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrecedingAction__TriggerAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrecedingActionAccess().getTriggerBoolExpressionParserRuleCall_2_1_0()); }
	ruleBoolExpression{ after(grammarAccess.getPrecedingActionAccess().getTriggerBoolExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrecedingAction__EffectsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrecedingActionAccess().getEffectsEffectParserRuleCall_3_1_0()); }
	ruleEffect{ after(grammarAccess.getPrecedingActionAccess().getEffectsEffectParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrecedingAction__EffectsAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrecedingActionAccess().getEffectsEffectParserRuleCall_3_2_1_0()); }
	ruleEffect{ after(grammarAccess.getPrecedingActionAccess().getEffectsEffectParserRuleCall_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrecedingAction__LabelAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrecedingActionAccess().getLabelSTRINGTerminalRuleCall_4_1_0()); }
	RULE_STRING{ after(grammarAccess.getPrecedingActionAccess().getLabelSTRINGTerminalRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SucceedingAction__TriggerAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSucceedingActionAccess().getTriggerBoolExpressionParserRuleCall_2_1_0()); }
	ruleBoolExpression{ after(grammarAccess.getSucceedingActionAccess().getTriggerBoolExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SucceedingAction__EffectsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSucceedingActionAccess().getEffectsEffectParserRuleCall_3_1_0()); }
	ruleEffect{ after(grammarAccess.getSucceedingActionAccess().getEffectsEffectParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SucceedingAction__EffectsAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSucceedingActionAccess().getEffectsEffectParserRuleCall_3_2_1_0()); }
	ruleEffect{ after(grammarAccess.getSucceedingActionAccess().getEffectsEffectParserRuleCall_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SucceedingAction__LabelAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSucceedingActionAccess().getLabelSTRINGTerminalRuleCall_4_1_0()); }
	RULE_STRING{ after(grammarAccess.getSucceedingActionAccess().getLabelSTRINGTerminalRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__RootScope__DeclarationsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootScopeAccess().getDeclarationsDeclarationParserRuleCall_1_0()); }
	ruleDeclaration{ after(grammarAccess.getRootScopeAccess().getDeclarationsDeclarationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RootScope__EntitiesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootScopeAccess().getEntitiesTestEntityParserRuleCall_2_0()); }
	ruleTestEntity{ after(grammarAccess.getRootScopeAccess().getEntitiesTestEntityParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RootScope__ScopesAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootScopeAccess().getScopesScopeParserRuleCall_3_1_0()); }
	ruleScope{ after(grammarAccess.getRootScopeAccess().getScopesScopeParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getScopeAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__DeclarationsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeAccess().getDeclarationsDeclarationParserRuleCall_3_0()); }
	ruleDeclaration{ after(grammarAccess.getScopeAccess().getDeclarationsDeclarationParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__EntitiesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeAccess().getEntitiesTestEntityParserRuleCall_4_0()); }
	ruleTestEntity{ after(grammarAccess.getScopeAccess().getEntitiesTestEntityParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__ScopesAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeAccess().getScopesScopeParserRuleCall_5_1_0()); }
	ruleScope{ after(grammarAccess.getScopeAccess().getScopesScopeParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TestEntity__ExpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestEntityAccess().getExpressionAnnotatedExpressionParserRuleCall_0_0()); }
	ruleAnnotatedExpression{ after(grammarAccess.getTestEntityAccess().getExpressionAnnotatedExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TestEntity__EffectAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestEntityAccess().getEffectEffectParserRuleCall_1_0()); }
	ruleEffect{ after(grammarAccess.getTestEntityAccess().getEffectEffectParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotatedExpression__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotatedExpressionAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getAnnotatedExpressionAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotatedExpression__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotatedExpressionAccess().getExpressionExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getAnnotatedExpressionAccess().getExpressionExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getVariableDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__ConstAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getConstConstKeyword_1_0()); }
(
{ before(grammarAccess.getVariableDeclarationAccess().getConstConstKeyword_1_0()); }

	'const' 

{ after(grammarAccess.getVariableDeclarationAccess().getConstConstKeyword_1_0()); }
)

{ after(grammarAccess.getVariableDeclarationAccess().getConstConstKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__InputAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getInputInputKeyword_2_0()); }
(
{ before(grammarAccess.getVariableDeclarationAccess().getInputInputKeyword_2_0()); }

	'input' 

{ after(grammarAccess.getVariableDeclarationAccess().getInputInputKeyword_2_0()); }
)

{ after(grammarAccess.getVariableDeclarationAccess().getInputInputKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__OutputAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getOutputOutputKeyword_3_0()); }
(
{ before(grammarAccess.getVariableDeclarationAccess().getOutputOutputKeyword_3_0()); }

	'output' 

{ after(grammarAccess.getVariableDeclarationAccess().getOutputOutputKeyword_3_0()); }
)

{ after(grammarAccess.getVariableDeclarationAccess().getOutputOutputKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__StaticAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getStaticStaticKeyword_4_0()); }
(
{ before(grammarAccess.getVariableDeclarationAccess().getStaticStaticKeyword_4_0()); }

	'static' 

{ after(grammarAccess.getVariableDeclarationAccess().getStaticStaticKeyword_4_0()); }
)

{ after(grammarAccess.getVariableDeclarationAccess().getStaticStaticKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__SignalAssignment_5_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getSignalSignalKeyword_5_0_0_0()); }
(
{ before(grammarAccess.getVariableDeclarationAccess().getSignalSignalKeyword_5_0_0_0()); }

	'signal' 

{ after(grammarAccess.getVariableDeclarationAccess().getSignalSignalKeyword_5_0_0_0()); }
)

{ after(grammarAccess.getVariableDeclarationAccess().getSignalSignalKeyword_5_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__TypeAssignment_5_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getTypeValueTypeEnumRuleCall_5_0_1_0()); }
	ruleValueType{ after(grammarAccess.getVariableDeclarationAccess().getTypeValueTypeEnumRuleCall_5_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__SignalAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getSignalSignalKeyword_5_1_0()); }
(
{ before(grammarAccess.getVariableDeclarationAccess().getSignalSignalKeyword_5_1_0()); }

	'signal' 

{ after(grammarAccess.getVariableDeclarationAccess().getSignalSignalKeyword_5_1_0()); }
)

{ after(grammarAccess.getVariableDeclarationAccess().getSignalSignalKeyword_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__ValuedObjectsAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_6_0()); }
	ruleValuedObject{ after(grammarAccess.getVariableDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__ValuedObjectsAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_7_1_0()); }
	ruleValuedObject{ after(grammarAccess.getVariableDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__AnnotationsAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_9_0()); }
	ruleCommentAnnotatonSL{ after(grammarAccess.getVariableDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationWOSemicolon__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getVariableDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationWOSemicolon__ConstAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationWOSemicolonAccess().getConstConstKeyword_1_0()); }
(
{ before(grammarAccess.getVariableDeclarationWOSemicolonAccess().getConstConstKeyword_1_0()); }

	'const' 

{ after(grammarAccess.getVariableDeclarationWOSemicolonAccess().getConstConstKeyword_1_0()); }
)

{ after(grammarAccess.getVariableDeclarationWOSemicolonAccess().getConstConstKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationWOSemicolon__InputAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationWOSemicolonAccess().getInputInputKeyword_2_0()); }
(
{ before(grammarAccess.getVariableDeclarationWOSemicolonAccess().getInputInputKeyword_2_0()); }

	'input' 

{ after(grammarAccess.getVariableDeclarationWOSemicolonAccess().getInputInputKeyword_2_0()); }
)

{ after(grammarAccess.getVariableDeclarationWOSemicolonAccess().getInputInputKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationWOSemicolon__OutputAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationWOSemicolonAccess().getOutputOutputKeyword_3_0()); }
(
{ before(grammarAccess.getVariableDeclarationWOSemicolonAccess().getOutputOutputKeyword_3_0()); }

	'output' 

{ after(grammarAccess.getVariableDeclarationWOSemicolonAccess().getOutputOutputKeyword_3_0()); }
)

{ after(grammarAccess.getVariableDeclarationWOSemicolonAccess().getOutputOutputKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationWOSemicolon__StaticAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationWOSemicolonAccess().getStaticStaticKeyword_4_0()); }
(
{ before(grammarAccess.getVariableDeclarationWOSemicolonAccess().getStaticStaticKeyword_4_0()); }

	'static' 

{ after(grammarAccess.getVariableDeclarationWOSemicolonAccess().getStaticStaticKeyword_4_0()); }
)

{ after(grammarAccess.getVariableDeclarationWOSemicolonAccess().getStaticStaticKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationWOSemicolon__SignalAssignment_5_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationWOSemicolonAccess().getSignalSignalKeyword_5_0_0_0()); }
(
{ before(grammarAccess.getVariableDeclarationWOSemicolonAccess().getSignalSignalKeyword_5_0_0_0()); }

	'signal' 

{ after(grammarAccess.getVariableDeclarationWOSemicolonAccess().getSignalSignalKeyword_5_0_0_0()); }
)

{ after(grammarAccess.getVariableDeclarationWOSemicolonAccess().getSignalSignalKeyword_5_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationWOSemicolon__TypeAssignment_5_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationWOSemicolonAccess().getTypeValueTypeEnumRuleCall_5_0_1_0()); }
	ruleValueType{ after(grammarAccess.getVariableDeclarationWOSemicolonAccess().getTypeValueTypeEnumRuleCall_5_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationWOSemicolon__SignalAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationWOSemicolonAccess().getSignalSignalKeyword_5_1_0()); }
(
{ before(grammarAccess.getVariableDeclarationWOSemicolonAccess().getSignalSignalKeyword_5_1_0()); }

	'signal' 

{ after(grammarAccess.getVariableDeclarationWOSemicolonAccess().getSignalSignalKeyword_5_1_0()); }
)

{ after(grammarAccess.getVariableDeclarationWOSemicolonAccess().getSignalSignalKeyword_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationWOSemicolon__ValuedObjectsAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_6_0()); }
	ruleValuedObject{ after(grammarAccess.getVariableDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationWOSemicolon__ValuedObjectsAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_7_1_0()); }
	ruleValuedObject{ after(grammarAccess.getVariableDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationWOSemicolon__AnnotationsAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_8_0()); }
	ruleCommentAnnotatonSL{ after(grammarAccess.getVariableDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceDeclaration__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getReferenceDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceDeclaration__ReferenceAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceDeclarationAccess().getReferenceNamedObjectCrossReference_1_0_1_0()); }
(
{ before(grammarAccess.getReferenceDeclarationAccess().getReferenceNamedObjectNamespaceIDParserRuleCall_1_0_1_0_1()); }
	ruleNamespaceID{ after(grammarAccess.getReferenceDeclarationAccess().getReferenceNamedObjectNamespaceIDParserRuleCall_1_0_1_0_1()); }
)
{ after(grammarAccess.getReferenceDeclarationAccess().getReferenceNamedObjectCrossReference_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceDeclaration__ExternAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceDeclarationAccess().getExternSTRINGTerminalRuleCall_1_1_1_0()); }
	RULE_STRING{ after(grammarAccess.getReferenceDeclarationAccess().getExternSTRINGTerminalRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceDeclaration__ValuedObjectsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_2_0()); }
	ruleValuedObject{ after(grammarAccess.getReferenceDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceDeclaration__ValuedObjectsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_3_1_0()); }
	ruleValuedObject{ after(grammarAccess.getReferenceDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceDeclaration__AnnotationsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_5_0()); }
	ruleCommentAnnotatonSL{ after(grammarAccess.getReferenceDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceDeclarationWOSemicolon__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceDeclarationWOSemicolon__ReferenceAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getReferenceNamedObjectCrossReference_1_0_1_0()); }
(
{ before(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getReferenceNamedObjectNamespaceIDParserRuleCall_1_0_1_0_1()); }
	ruleNamespaceID{ after(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getReferenceNamedObjectNamespaceIDParserRuleCall_1_0_1_0_1()); }
)
{ after(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getReferenceNamedObjectCrossReference_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceDeclarationWOSemicolon__ExternAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getExternSTRINGTerminalRuleCall_1_1_1_0()); }
	RULE_STRING{ after(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getExternSTRINGTerminalRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceDeclarationWOSemicolon__ValuedObjectsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_2_0()); }
	ruleValuedObject{ after(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceDeclarationWOSemicolon__ValuedObjectsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_3_1_0()); }
	ruleValuedObject{ after(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceDeclarationWOSemicolon__AnnotationsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_4_0()); }
	ruleCommentAnnotatonSL{ after(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleDeclaration__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScheduleDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getScheduleDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleDeclaration__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScheduleDeclarationAccess().getNamePrimeIDParserRuleCall_2_0()); }
	rulePrimeID{ after(grammarAccess.getScheduleDeclarationAccess().getNamePrimeIDParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleDeclaration__GlobalAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScheduleDeclarationAccess().getGlobalSchedulePriorityTypeEnumRuleCall_3_0()); }
	ruleSchedulePriorityType{ after(grammarAccess.getScheduleDeclarationAccess().getGlobalSchedulePriorityTypeEnumRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleDeclaration__PrioritiesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScheduleDeclarationAccess().getPrioritiesSchedulePriorityParserRuleCall_4_0()); }
	ruleSchedulePriority{ after(grammarAccess.getScheduleDeclarationAccess().getPrioritiesSchedulePriorityParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleDeclaration__ValuedObjectsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScheduleDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_5_0()); }
	ruleValuedObject{ after(grammarAccess.getScheduleDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleDeclaration__ValuedObjectsAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScheduleDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_6_1_0()); }
	ruleValuedObject{ after(grammarAccess.getScheduleDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleDeclaration__AnnotationsAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScheduleDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_8_0()); }
	ruleCommentAnnotatonSL{ after(grammarAccess.getScheduleDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleDeclarationWOSemicolon__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleDeclarationWOSemicolon__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getNamePrimeIDParserRuleCall_2_0()); }
	rulePrimeID{ after(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getNamePrimeIDParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleDeclarationWOSemicolon__GlobalAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getGlobalSchedulePriorityTypeEnumRuleCall_3_0()); }
	ruleSchedulePriorityType{ after(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getGlobalSchedulePriorityTypeEnumRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleDeclarationWOSemicolon__PrioritiesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getPrioritiesSchedulePriorityParserRuleCall_4_0()); }
	ruleSchedulePriority{ after(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getPrioritiesSchedulePriorityParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleDeclarationWOSemicolon__ValuedObjectsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_5_0()); }
	ruleValuedObject{ after(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleDeclarationWOSemicolon__ValuedObjectsAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_6_1_0()); }
	ruleValuedObject{ after(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleDeclarationWOSemicolon__AnnotationsAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_7_0()); }
	ruleCommentAnnotatonSL{ after(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SchedulePriority__PriorityAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSchedulePriorityAccess().getPriorityINTTerminalRuleCall_1_0()); }
	RULE_INT{ after(grammarAccess.getSchedulePriorityAccess().getPriorityINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SchedulePriority__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSchedulePriorityAccess().getTypeSchedulePriorityTypeEnumRuleCall_2_0()); }
	ruleSchedulePriorityType{ after(grammarAccess.getSchedulePriorityAccess().getTypeSchedulePriorityTypeEnumRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObject__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectAccess().getAnnotationsQuotedStringAnnotationParserRuleCall_0_0()); }
	ruleQuotedStringAnnotation{ after(grammarAccess.getValuedObjectAccess().getAnnotationsQuotedStringAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObject__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectAccess().getNamePrimeIDParserRuleCall_1_0()); }
	rulePrimeID{ after(grammarAccess.getValuedObjectAccess().getNamePrimeIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObject__CardinalitiesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectAccess().getCardinalitiesExpressionParserRuleCall_2_1_0()); }
	ruleExpression{ after(grammarAccess.getValuedObjectAccess().getCardinalitiesExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObject__InitialValueAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectAccess().getInitialValueExpressionParserRuleCall_3_1_0()); }
	ruleExpression{ after(grammarAccess.getValuedObjectAccess().getInitialValueExpressionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObject__CombineOperatorAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectAccess().getCombineOperatorCombineOperatorEnumRuleCall_4_1_0()); }
	ruleCombineOperator{ after(grammarAccess.getValuedObjectAccess().getCombineOperatorCombineOperatorEnumRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Emission__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmissionAccess().getAnnotationsQuotedStringAnnotationParserRuleCall_0_0()); }
	ruleQuotedStringAnnotation{ after(grammarAccess.getEmissionAccess().getAnnotationsQuotedStringAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Emission__ValuedObjectAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmissionAccess().getValuedObjectValuedObjectCrossReference_1_0()); }
(
{ before(grammarAccess.getEmissionAccess().getValuedObjectValuedObjectPrimeIDParserRuleCall_1_0_1()); }
	rulePrimeID{ after(grammarAccess.getEmissionAccess().getValuedObjectValuedObjectPrimeIDParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getEmissionAccess().getValuedObjectValuedObjectCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Emission__NewValueAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmissionAccess().getNewValueExpressionParserRuleCall_2_1_0()); }
	ruleExpression{ after(grammarAccess.getEmissionAccess().getNewValueExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Emission__ScheduleAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmissionAccess().getScheduleScheduleObjectReferenceParserRuleCall_3_1_0()); }
	ruleScheduleObjectReference{ after(grammarAccess.getEmissionAccess().getScheduleScheduleObjectReferenceParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getAssignmentAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__ValuedObjectAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getValuedObjectValuedObjectCrossReference_1_0()); }
(
{ before(grammarAccess.getAssignmentAccess().getValuedObjectValuedObjectPrimeIDParserRuleCall_1_0_1()); }
	rulePrimeID{ after(grammarAccess.getAssignmentAccess().getValuedObjectValuedObjectPrimeIDParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getAssignmentAccess().getValuedObjectValuedObjectCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__IndicesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getIndicesExpressionParserRuleCall_2_1_0()); }
	ruleExpression{ after(grammarAccess.getAssignmentAccess().getIndicesExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__OperatorAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getOperatorAssignOperatorEnumRuleCall_3_0()); }
	ruleAssignOperator{ after(grammarAccess.getAssignmentAccess().getOperatorAssignOperatorEnumRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__ExpressionAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getExpressionExpressionParserRuleCall_4_0()); }
	ruleExpression{ after(grammarAccess.getAssignmentAccess().getExpressionExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__ScheduleAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getScheduleScheduleObjectReferenceParserRuleCall_5_1_0()); }
	ruleScheduleObjectReference{ after(grammarAccess.getAssignmentAccess().getScheduleScheduleObjectReferenceParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubReferenceAssignment__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubReferenceAssignmentAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getSubReferenceAssignmentAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubReferenceAssignment__ValuedObjectAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubReferenceAssignmentAccess().getValuedObjectValuedObjectCrossReference_1_0()); }
(
{ before(grammarAccess.getSubReferenceAssignmentAccess().getValuedObjectValuedObjectPrimeIDParserRuleCall_1_0_1()); }
	rulePrimeID{ after(grammarAccess.getSubReferenceAssignmentAccess().getValuedObjectValuedObjectPrimeIDParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getSubReferenceAssignmentAccess().getValuedObjectValuedObjectCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubReferenceAssignment__IndicesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubReferenceAssignmentAccess().getIndicesExpressionParserRuleCall_2_1_0()); }
	ruleExpression{ after(grammarAccess.getSubReferenceAssignmentAccess().getIndicesExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubReferenceAssignment__SubReferenceAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubReferenceAssignmentAccess().getSubReferenceValuedObjectReferenceParserRuleCall_3_1_0()); }
	ruleValuedObjectReference{ after(grammarAccess.getSubReferenceAssignmentAccess().getSubReferenceValuedObjectReferenceParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubReferenceAssignment__OperatorAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubReferenceAssignmentAccess().getOperatorAssignOperatorEnumRuleCall_4_0()); }
	ruleAssignOperator{ after(grammarAccess.getSubReferenceAssignmentAccess().getOperatorAssignOperatorEnumRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubReferenceAssignment__ExpressionAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubReferenceAssignmentAccess().getExpressionExpressionParserRuleCall_5_0()); }
	ruleExpression{ after(grammarAccess.getSubReferenceAssignmentAccess().getExpressionExpressionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubReferenceAssignment__ScheduleAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubReferenceAssignmentAccess().getScheduleScheduleObjectReferenceParserRuleCall_6_1_0()); }
	ruleScheduleObjectReference{ after(grammarAccess.getSubReferenceAssignmentAccess().getScheduleScheduleObjectReferenceParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixEffect__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getPostfixEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixEffect__ValuedObjectAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixEffectAccess().getValuedObjectValuedObjectCrossReference_1_0()); }
(
{ before(grammarAccess.getPostfixEffectAccess().getValuedObjectValuedObjectPrimeIDParserRuleCall_1_0_1()); }
	rulePrimeID{ after(grammarAccess.getPostfixEffectAccess().getValuedObjectValuedObjectPrimeIDParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getPostfixEffectAccess().getValuedObjectValuedObjectCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixEffect__IndicesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixEffectAccess().getIndicesExpressionParserRuleCall_2_1_0()); }
	ruleExpression{ after(grammarAccess.getPostfixEffectAccess().getIndicesExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixEffect__OperatorAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixEffectAccess().getOperatorPostfixOperatorEnumRuleCall_3_0()); }
	rulePostfixOperator{ after(grammarAccess.getPostfixEffectAccess().getOperatorPostfixOperatorEnumRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixEffect__ScheduleAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixEffectAccess().getScheduleScheduleObjectReferenceParserRuleCall_4_1_0()); }
	ruleScheduleObjectReference{ after(grammarAccess.getPostfixEffectAccess().getScheduleScheduleObjectReferenceParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HostcodeEffect__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHostcodeEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getHostcodeEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HostcodeEffect__TextAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHostcodeEffectAccess().getTextHOSTCODETerminalRuleCall_1_0()); }
	RULE_HOSTCODE{ after(grammarAccess.getHostcodeEffectAccess().getTextHOSTCODETerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceCallEffect__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceCallEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getReferenceCallEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceCallEffect__ValuedObjectAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceCallEffectAccess().getValuedObjectValuedObjectCrossReference_1_0()); }
(
{ before(grammarAccess.getReferenceCallEffectAccess().getValuedObjectValuedObjectPrimeIDParserRuleCall_1_0_1()); }
	rulePrimeID{ after(grammarAccess.getReferenceCallEffectAccess().getValuedObjectValuedObjectPrimeIDParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getReferenceCallEffectAccess().getValuedObjectValuedObjectCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceCallEffect__ParametersAssignment_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceCallEffectAccess().getParametersParameterParserRuleCall_2_0_1_0()); }
	ruleParameter{ after(grammarAccess.getReferenceCallEffectAccess().getParametersParameterParserRuleCall_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceCallEffect__ParametersAssignment_2_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceCallEffectAccess().getParametersParameterParserRuleCall_2_0_2_1_0()); }
	ruleParameter{ after(grammarAccess.getReferenceCallEffectAccess().getParametersParameterParserRuleCall_2_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallEffect__AnnotationsAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0_0()); }
	ruleAnnotation{ after(grammarAccess.getFunctionCallEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallEffect__FunctionNameAssignment_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getFunctionNameIDTerminalRuleCall_0_1_1_0()); }
	RULE_ID{ after(grammarAccess.getFunctionCallEffectAccess().getFunctionNameIDTerminalRuleCall_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallEffect__ParametersAssignment_0_1_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getParametersParameterParserRuleCall_0_1_2_0_1_0()); }
	ruleParameter{ after(grammarAccess.getFunctionCallEffectAccess().getParametersParameterParserRuleCall_0_1_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallEffect__ParametersAssignment_0_1_2_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getParametersParameterParserRuleCall_0_1_2_0_2_1_0()); }
	ruleParameter{ after(grammarAccess.getFunctionCallEffectAccess().getParametersParameterParserRuleCall_0_1_2_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallEffect__FunctionNameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getFunctionNameIDTerminalRuleCall_1_1_0()); }
	RULE_ID{ after(grammarAccess.getFunctionCallEffectAccess().getFunctionNameIDTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallEffect__ParametersAssignment_1_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getParametersParameterParserRuleCall_1_2_0_1_0()); }
	ruleParameter{ after(grammarAccess.getFunctionCallEffectAccess().getParametersParameterParserRuleCall_1_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallEffect__ParametersAssignment_1_2_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getParametersParameterParserRuleCall_1_2_0_2_1_0()); }
	ruleParameter{ after(grammarAccess.getFunctionCallEffectAccess().getParametersParameterParserRuleCall_1_2_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrintCallEffect__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrintCallEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getPrintCallEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrintCallEffect__ParametersAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrintCallEffectAccess().getParametersParameterParserRuleCall_2_0()); }
	ruleParameter{ after(grammarAccess.getPrintCallEffectAccess().getParametersParameterParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrintCallEffect__ParametersAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrintCallEffectAccess().getParametersParameterParserRuleCall_3_1_0()); }
	ruleParameter{ after(grammarAccess.getPrintCallEffectAccess().getParametersParameterParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ScheduleAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getScheduleScheduleObjectReferenceParserRuleCall_1_1_0()); }
	ruleScheduleObjectReference{ after(grammarAccess.getExpressionAccess().getScheduleScheduleObjectReferenceParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__OperatorAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalOrExpressionAccess().getOperatorLogicalOrOperatorEnumRuleCall_1_1_0_0()); }
	ruleLogicalOrOperator{ after(grammarAccess.getLogicalOrExpressionAccess().getOperatorLogicalOrOperatorEnumRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__SubExpressionsAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalOrExpressionAccess().getSubExpressionsLogicalAndExpressionParserRuleCall_1_1_1_0()); }
	ruleLogicalAndExpression{ after(grammarAccess.getLogicalOrExpressionAccess().getSubExpressionsLogicalAndExpressionParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__SubExpressionsAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalOrExpressionAccess().getSubExpressionsLogicalAndExpressionParserRuleCall_1_2_1_0()); }
	ruleLogicalAndExpression{ after(grammarAccess.getLogicalOrExpressionAccess().getSubExpressionsLogicalAndExpressionParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__OperatorAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalAndExpressionAccess().getOperatorLogicalAndOperatorEnumRuleCall_1_1_0_0()); }
	ruleLogicalAndOperator{ after(grammarAccess.getLogicalAndExpressionAccess().getOperatorLogicalAndOperatorEnumRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__SubExpressionsAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalAndExpressionAccess().getSubExpressionsBitwiseOrExpressionParserRuleCall_1_1_1_0()); }
	ruleBitwiseOrExpression{ after(grammarAccess.getLogicalAndExpressionAccess().getSubExpressionsBitwiseOrExpressionParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__SubExpressionsAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalAndExpressionAccess().getSubExpressionsBitwiseOrExpressionParserRuleCall_1_2_1_0()); }
	ruleBitwiseOrExpression{ after(grammarAccess.getLogicalAndExpressionAccess().getSubExpressionsBitwiseOrExpressionParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseOrExpression__OperatorAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseOrExpressionAccess().getOperatorBitwiseOrOperatorEnumRuleCall_1_1_0_0()); }
	ruleBitwiseOrOperator{ after(grammarAccess.getBitwiseOrExpressionAccess().getOperatorBitwiseOrOperatorEnumRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseOrExpression__SubExpressionsAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseOrExpressionAccess().getSubExpressionsBitwiseAndExpressionParserRuleCall_1_1_1_0()); }
	ruleBitwiseAndExpression{ after(grammarAccess.getBitwiseOrExpressionAccess().getSubExpressionsBitwiseAndExpressionParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseOrExpression__SubExpressionsAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseOrExpressionAccess().getSubExpressionsBitwiseAndExpressionParserRuleCall_1_2_1_0()); }
	ruleBitwiseAndExpression{ after(grammarAccess.getBitwiseOrExpressionAccess().getSubExpressionsBitwiseAndExpressionParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseAndExpression__OperatorAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseAndExpressionAccess().getOperatorBitwiseAndOperatorEnumRuleCall_1_1_0_0()); }
	ruleBitwiseAndOperator{ after(grammarAccess.getBitwiseAndExpressionAccess().getOperatorBitwiseAndOperatorEnumRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseAndExpression__SubExpressionsAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseAndExpressionAccess().getSubExpressionsCompareOperationParserRuleCall_1_1_1_0()); }
	ruleCompareOperation{ after(grammarAccess.getBitwiseAndExpressionAccess().getSubExpressionsCompareOperationParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseAndExpression__SubExpressionsAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseAndExpressionAccess().getSubExpressionsCompareOperationParserRuleCall_1_2_1_0()); }
	ruleCompareOperation{ after(grammarAccess.getBitwiseAndExpressionAccess().getSubExpressionsCompareOperationParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperationAccess().getOperatorCompareOperatorEnumRuleCall_1_1_0()); }
	ruleCompareOperator{ after(grammarAccess.getCompareOperationAccess().getOperatorCompareOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__SubExpressionsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperationAccess().getSubExpressionsNotOrValuedExpressionParserRuleCall_1_2_0()); }
	ruleNotOrValuedExpression{ after(grammarAccess.getCompareOperationAccess().getSubExpressionsNotOrValuedExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NotExpression__OperatorAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotExpressionAccess().getOperatorNotOperatorEnumRuleCall_0_1_0()); }
	ruleNotOperator{ after(grammarAccess.getNotExpressionAccess().getOperatorNotOperatorEnumRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NotExpression__SubExpressionsAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotExpressionAccess().getSubExpressionsNotExpressionParserRuleCall_0_2_0()); }
	ruleNotExpression{ after(grammarAccess.getNotExpressionAccess().getSubExpressionsNotExpressionParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__OperatorAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getOperatorAddOperatorEnumRuleCall_1_1_0_0()); }
	ruleAddOperator{ after(grammarAccess.getAddExpressionAccess().getOperatorAddOperatorEnumRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__SubExpressionsAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getSubExpressionsSubExpressionParserRuleCall_1_1_1_0()); }
	ruleSubExpression{ after(grammarAccess.getAddExpressionAccess().getSubExpressionsSubExpressionParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__SubExpressionsAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getSubExpressionsSubExpressionParserRuleCall_1_2_1_0()); }
	ruleSubExpression{ after(grammarAccess.getAddExpressionAccess().getSubExpressionsSubExpressionParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpression__OperatorAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubExpressionAccess().getOperatorSubOperatorEnumRuleCall_1_1_0_0()); }
	ruleSubOperator{ after(grammarAccess.getSubExpressionAccess().getOperatorSubOperatorEnumRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpression__SubExpressionsAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubExpressionAccess().getSubExpressionsMultExpressionParserRuleCall_1_1_1_0()); }
	ruleMultExpression{ after(grammarAccess.getSubExpressionAccess().getSubExpressionsMultExpressionParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpression__SubExpressionsAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubExpressionAccess().getSubExpressionsMultExpressionParserRuleCall_1_2_1_0()); }
	ruleMultExpression{ after(grammarAccess.getSubExpressionAccess().getSubExpressionsMultExpressionParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__OperatorAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultExpressionAccess().getOperatorMultOperatorEnumRuleCall_1_1_0_0()); }
	ruleMultOperator{ after(grammarAccess.getMultExpressionAccess().getOperatorMultOperatorEnumRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__SubExpressionsAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultExpressionAccess().getSubExpressionsDivExpressionParserRuleCall_1_1_1_0()); }
	ruleDivExpression{ after(grammarAccess.getMultExpressionAccess().getSubExpressionsDivExpressionParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__SubExpressionsAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultExpressionAccess().getSubExpressionsDivExpressionParserRuleCall_1_2_1_0()); }
	ruleDivExpression{ after(grammarAccess.getMultExpressionAccess().getSubExpressionsDivExpressionParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DivExpression__OperatorAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivExpressionAccess().getOperatorDivOperatorEnumRuleCall_1_1_0_0()); }
	ruleDivOperator{ after(grammarAccess.getDivExpressionAccess().getOperatorDivOperatorEnumRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DivExpression__SubExpressionsAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivExpressionAccess().getSubExpressionsModExpressionParserRuleCall_1_1_1_0()); }
	ruleModExpression{ after(grammarAccess.getDivExpressionAccess().getSubExpressionsModExpressionParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DivExpression__SubExpressionsAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivExpressionAccess().getSubExpressionsModExpressionParserRuleCall_1_2_1_0()); }
	ruleModExpression{ after(grammarAccess.getDivExpressionAccess().getSubExpressionsModExpressionParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModExpression__OperatorAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModExpressionAccess().getOperatorModOperatorEnumRuleCall_1_1_0_0()); }
	ruleModOperator{ after(grammarAccess.getModExpressionAccess().getOperatorModOperatorEnumRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModExpression__SubExpressionsAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_1_1_1_0()); }
	ruleAtomicValuedExpression{ after(grammarAccess.getModExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModExpression__SubExpressionsAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_1_2_1_0()); }
	ruleAtomicValuedExpression{ after(grammarAccess.getModExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NegExpression__OperatorAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegExpressionAccess().getOperatorSubOperatorEnumRuleCall_0_1_0()); }
	ruleSubOperator{ after(grammarAccess.getNegExpressionAccess().getOperatorSubOperatorEnumRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NegExpression__SubExpressionsAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_0_2_0()); }
	ruleNegExpression{ after(grammarAccess.getNegExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectTestExpression__OperatorAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorAlternatives_0_1_0()); }
(rule__ValuedObjectTestExpression__OperatorAlternatives_0_1_0)
{ after(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorAlternatives_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectTestExpression__SubExpressionsAssignment_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsValuedObjectTestExpressionParserRuleCall_0_3_0()); }
	ruleValuedObjectTestExpression{ after(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsValuedObjectTestExpressionParserRuleCall_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectReference__ValuedObjectAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectReferenceAccess().getValuedObjectValuedObjectCrossReference_0_0()); }
(
{ before(grammarAccess.getValuedObjectReferenceAccess().getValuedObjectValuedObjectPrimeIDParserRuleCall_0_0_1()); }
	rulePrimeID{ after(grammarAccess.getValuedObjectReferenceAccess().getValuedObjectValuedObjectPrimeIDParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getValuedObjectReferenceAccess().getValuedObjectValuedObjectCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectReference__IndicesAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectReferenceAccess().getIndicesExpressionParserRuleCall_1_1_0()); }
	ruleExpression{ after(grammarAccess.getValuedObjectReferenceAccess().getIndicesExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectReference__SubReferenceAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectReferenceAccess().getSubReferenceValuedObjectReferenceParserRuleCall_2_1_0()); }
	ruleValuedObjectReference{ after(grammarAccess.getValuedObjectReferenceAccess().getSubReferenceValuedObjectReferenceParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleObjectReference__ValuedObjectAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScheduleObjectReferenceAccess().getValuedObjectValuedObjectCrossReference_0_0()); }
(
{ before(grammarAccess.getScheduleObjectReferenceAccess().getValuedObjectValuedObjectPrimeIDParserRuleCall_0_0_1()); }
	rulePrimeID{ after(grammarAccess.getScheduleObjectReferenceAccess().getValuedObjectValuedObjectPrimeIDParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getScheduleObjectReferenceAccess().getValuedObjectValuedObjectCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScheduleObjectReference__PriorityAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScheduleObjectReferenceAccess().getPriorityINTTerminalRuleCall_1_0()); }
	RULE_INT{ after(grammarAccess.getScheduleObjectReferenceAccess().getPriorityINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceCall__ValuedObjectAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceCallAccess().getValuedObjectValuedObjectCrossReference_0_0()); }
(
{ before(grammarAccess.getReferenceCallAccess().getValuedObjectValuedObjectPrimeIDParserRuleCall_0_0_1()); }
	rulePrimeID{ after(grammarAccess.getReferenceCallAccess().getValuedObjectValuedObjectPrimeIDParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getReferenceCallAccess().getValuedObjectValuedObjectCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceCall__ParametersAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceCallAccess().getParametersParameterParserRuleCall_1_0_1_0()); }
	ruleParameter{ after(grammarAccess.getReferenceCallAccess().getParametersParameterParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceCall__ParametersAssignment_1_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceCallAccess().getParametersParameterParserRuleCall_1_0_2_1_0()); }
	ruleParameter{ after(grammarAccess.getReferenceCallAccess().getParametersParameterParserRuleCall_1_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__FunctionNameAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getFunctionNameIDTerminalRuleCall_0_1_0()); }
	RULE_ID{ after(grammarAccess.getFunctionCallAccess().getFunctionNameIDTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__ParametersAssignment_0_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getParametersParameterParserRuleCall_0_2_0_1_0()); }
	ruleParameter{ after(grammarAccess.getFunctionCallAccess().getParametersParameterParserRuleCall_0_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__ParametersAssignment_0_2_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getParametersParameterParserRuleCall_0_2_0_2_1_0()); }
	ruleParameter{ after(grammarAccess.getFunctionCallAccess().getParametersParameterParserRuleCall_0_2_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__FunctionNameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getFunctionNameIDTerminalRuleCall_1_1_0()); }
	RULE_ID{ after(grammarAccess.getFunctionCallAccess().getFunctionNameIDTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__ParametersAssignment_1_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getParametersParameterParserRuleCall_1_2_0_1_0()); }
	ruleParameter{ after(grammarAccess.getFunctionCallAccess().getParametersParameterParserRuleCall_1_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__ParametersAssignment_1_2_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getParametersParameterParserRuleCall_1_2_0_2_1_0()); }
	ruleParameter{ after(grammarAccess.getFunctionCallAccess().getParametersParameterParserRuleCall_1_2_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TextExpression__TextAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextExpressionAccess().getTextHOSTCODETerminalRuleCall_0()); }
	RULE_HOSTCODE{ after(grammarAccess.getTextExpressionAccess().getTextHOSTCODETerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntValue__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntValueAccess().getValueINTTerminalRuleCall_0()); }
	RULE_INT{ after(grammarAccess.getIntValueAccess().getValueINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FloatValue__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloatValueAccess().getValueFLOATTerminalRuleCall_0()); }
	RULE_FLOAT{ after(grammarAccess.getFloatValueAccess().getValueFLOATTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BoolValue__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoolValueAccess().getValueBOOLEANTerminalRuleCall_0()); }
	RULE_BOOLEAN{ after(grammarAccess.getBoolValueAccess().getValueBOOLEANTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringValue__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringValueAccess().getValueSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getStringValueAccess().getValueSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CommentAnnotation__ValuesAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommentAnnotationAccess().getValuesCOMMENT_ANNOTATIONTerminalRuleCall_0()); }
	RULE_COMMENT_ANNOTATION{ after(grammarAccess.getCommentAnnotationAccess().getValuesCOMMENT_ANNOTATIONTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CommentAnnotatonSL__ValuesAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommentAnnotatonSLAccess().getValuesSL_COMMENT_ANNOTATIONTerminalRuleCall_0()); }
	RULE_SL_COMMENT_ANNOTATION{ after(grammarAccess.getCommentAnnotatonSLAccess().getValuesSL_COMMENT_ANNOTATIONTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TagAnnotation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
	ruleExtendedID{ after(grammarAccess.getTagAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PragmaTag__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPragmaTagAccess().getNameExtendedIDParserRuleCall_1_0()); }
	ruleExtendedID{ after(grammarAccess.getPragmaTagAccess().getNameExtendedIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStringValueAnnotation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
	ruleExtendedID{ after(grammarAccess.getKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStringValueAnnotation__ValuesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_2_0()); }
	ruleEStringAllTypes{ after(grammarAccess.getKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStringValueAnnotation__ValuesAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_3_1_0()); }
	ruleEStringAllTypes{ after(grammarAccess.getKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RestrictedKeyStringValueAnnotation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
	ruleExtendedID{ after(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RestrictedKeyStringValueAnnotation__ValuesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_2_0()); }
	ruleEStringBoolean{ after(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RestrictedKeyStringValueAnnotation__ValuesAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_3_1_0()); }
	ruleEStringBoolean{ after(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringPragma__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringPragmaAccess().getNameExtendedIDParserRuleCall_1_0()); }
	ruleExtendedID{ after(grammarAccess.getStringPragmaAccess().getNameExtendedIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringPragma__ValuesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringPragmaAccess().getValuesEStringAllTypesParserRuleCall_2_0()); }
	ruleEStringAllTypes{ after(grammarAccess.getStringPragmaAccess().getValuesEStringAllTypesParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringPragma__ValuesAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringPragmaAccess().getValuesEStringAllTypesParserRuleCall_3_1_0()); }
	ruleEStringAllTypes{ after(grammarAccess.getStringPragmaAccess().getValuesEStringAllTypesParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
	ruleExtendedID{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getTypeExtendedIDParserRuleCall_3_0()); }
	ruleExtendedID{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getTypeExtendedIDParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__ValuesAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_5_0()); }
	ruleEStringAllTypes{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__ValuesAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_6_1_0()); }
	ruleEStringAllTypes{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RestrictedTypedKeyStringValueAnnotation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
	ruleExtendedID{ after(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RestrictedTypedKeyStringValueAnnotation__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getTypeExtendedIDParserRuleCall_3_0()); }
	ruleExtendedID{ after(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getTypeExtendedIDParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RestrictedTypedKeyStringValueAnnotation__ValuesAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_5_0()); }
	ruleEStringBoolean{ after(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RestrictedTypedKeyStringValueAnnotation__ValuesAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_6_1_0()); }
	ruleEStringBoolean{ after(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QuotedKeyStringValueAnnotation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
	ruleExtendedID{ after(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QuotedKeyStringValueAnnotation__ValuesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QuotedKeyStringValueAnnotation__ValuesAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_3_1_0()); }
	RULE_STRING{ after(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QuotedTypedKeyStringValueAnnotation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
	ruleExtendedID{ after(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QuotedTypedKeyStringValueAnnotation__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getTypeExtendedIDParserRuleCall_3_0()); }
	ruleExtendedID{ after(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getTypeExtendedIDParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QuotedTypedKeyStringValueAnnotation__ValuesAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_5_0()); }
	RULE_STRING{ after(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QuotedTypedKeyStringValueAnnotation__ValuesAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_6_1_0()); }
	RULE_STRING{ after(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_HOSTCODE : '`' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'`')))* '`';

RULE_COMMENT_ANNOTATION : '/**' ( options {greedy=false;} : . )*'*/';

RULE_ML_COMMENT : '/*' ~('*') ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT_ANNOTATION : '//*' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_SL_COMMENT : '//' ~('*') ~(('\n'|'\r'))* ('\r'? '\n')?;

fragment RULE_NUMBER : '0'..'9';

RULE_INT : RULE_NUMBER+;

RULE_FLOAT : (RULE_NUMBER+ '.' RULE_NUMBER* (('e'|'E') ('+'|'-')? RULE_NUMBER+)? 'f'?|RULE_NUMBER+ 'f');

RULE_BOOLEAN : ('true'|'false');

RULE_STRING : '"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


