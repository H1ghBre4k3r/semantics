/*
 * generated by Xtext 2.12.0
 */
package de.cau.cs.kieler.ehelp.ide.contentassist.antlr;

import com.google.inject.Inject;
import de.cau.cs.kieler.ehelp.ide.contentassist.antlr.internal.InternalEHelpParser;
import de.cau.cs.kieler.ehelp.services.EHelpGrammarAccess;
import java.util.HashMap;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class EHelpParser extends AbstractContentAssistParser {

	@Inject
	private EHelpGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalEHelpParser createParser() {
		InternalEHelpParser result = new InternalEHelpParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getContentAccess().getAlternatives(), "rule__Content__Alternatives");
					put(grammarAccess.getChapterAccess().getGroup(), "rule__Chapter__Group__0");
					put(grammarAccess.getListAccess().getGroup(), "rule__List__Group__0");
					put(grammarAccess.getEnumAccess().getGroup(), "rule__Enum__Group__0");
					put(grammarAccess.getListItemAccess().getGroup(), "rule__ListItem__Group__0");
					put(grammarAccess.getTableAccess().getGroup(), "rule__Table__Group__0");
					put(grammarAccess.getTableAccess().getGroup_2(), "rule__Table__Group_2__0");
					put(grammarAccess.getTableRowAccess().getGroup(), "rule__TableRow__Group__0");
					put(grammarAccess.getTableRowAccess().getGroup_2(), "rule__TableRow__Group_2__0");
					put(grammarAccess.getTableCellAccess().getGroup(), "rule__TableCell__Group__0");
					put(grammarAccess.getKeywordAccess().getGroup(), "rule__Keyword__Group__0");
					put(grammarAccess.getContextAccess().getGroup(), "rule__Context__Group__0");
					put(grammarAccess.getImagesAccess().getGroup(), "rule__Images__Group__0");
					put(grammarAccess.getLinkAccess().getGroup(), "rule__Link__Group__0");
					put(grammarAccess.getEHelpModelAccess().getChaptersAssignment(), "rule__EHelpModel__ChaptersAssignment");
					put(grammarAccess.getChapterAccess().getNameAssignment_1(), "rule__Chapter__NameAssignment_1");
					put(grammarAccess.getChapterAccess().getTitleAssignment_2(), "rule__Chapter__TitleAssignment_2");
					put(grammarAccess.getChapterAccess().getContentAssignment_4(), "rule__Chapter__ContentAssignment_4");
					put(grammarAccess.getChapterAccess().getSubchaptersAssignment_5(), "rule__Chapter__SubchaptersAssignment_5");
					put(grammarAccess.getListAccess().getItemsAssignment_2(), "rule__List__ItemsAssignment_2");
					put(grammarAccess.getEnumAccess().getItemsAssignment_2(), "rule__Enum__ItemsAssignment_2");
					put(grammarAccess.getListItemAccess().getContentAssignment_1(), "rule__ListItem__ContentAssignment_1");
					put(grammarAccess.getTableAccess().getWidthAssignment_1(), "rule__Table__WidthAssignment_1");
					put(grammarAccess.getTableAccess().getSpacingAssignment_2_2(), "rule__Table__SpacingAssignment_2_2");
					put(grammarAccess.getTableAccess().getStretchAssignment_3(), "rule__Table__StretchAssignment_3");
					put(grammarAccess.getTableAccess().getRowsAssignment_5(), "rule__Table__RowsAssignment_5");
					put(grammarAccess.getTableRowAccess().getCellsAssignment_1(), "rule__TableRow__CellsAssignment_1");
					put(grammarAccess.getTableRowAccess().getCellsAssignment_2_1(), "rule__TableRow__CellsAssignment_2_1");
					put(grammarAccess.getTableCellAccess().getCenterAssignment_0(), "rule__TableCell__CenterAssignment_0");
					put(grammarAccess.getTableCellAccess().getLeftAssignment_1(), "rule__TableCell__LeftAssignment_1");
					put(grammarAccess.getTableCellAccess().getRightAssignment_2(), "rule__TableCell__RightAssignment_2");
					put(grammarAccess.getTableCellAccess().getTopAssignment_3(), "rule__TableCell__TopAssignment_3");
					put(grammarAccess.getTableCellAccess().getMiddleAssignment_4(), "rule__TableCell__MiddleAssignment_4");
					put(grammarAccess.getTableCellAccess().getBottomAssignment_5(), "rule__TableCell__BottomAssignment_5");
					put(grammarAccess.getTableCellAccess().getContentAssignment_6(), "rule__TableCell__ContentAssignment_6");
					put(grammarAccess.getTextAccess().getTextAssignment(), "rule__Text__TextAssignment");
					put(grammarAccess.getKeywordAccess().getTextAssignment_1(), "rule__Keyword__TextAssignment_1");
					put(grammarAccess.getContextAccess().getIdAssignment_1(), "rule__Context__IdAssignment_1");
					put(grammarAccess.getContextAccess().getLabelAssignment_2(), "rule__Context__LabelAssignment_2");
					put(grammarAccess.getImagesAccess().getImagesAssignment_1(), "rule__Images__ImagesAssignment_1");
					put(grammarAccess.getLinkAccess().getLinkAssignment_1(), "rule__Link__LinkAssignment_1");
					put(grammarAccess.getLinkAccess().getCaptionAssignment_2(), "rule__Link__CaptionAssignment_2");
				}
			};
		}
		return nameMappings.get(element);
	}
			
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public EHelpGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(EHelpGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
