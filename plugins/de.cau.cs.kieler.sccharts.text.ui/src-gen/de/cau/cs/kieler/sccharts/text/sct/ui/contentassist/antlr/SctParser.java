/*
* generated by Xtext
*/
package de.cau.cs.kieler.sccharts.text.sct.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import de.cau.cs.kieler.sccharts.text.sct.services.SctGrammarAccess;

public class SctParser extends AbstractContentAssistParser {
	
	@Inject
	private SctGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected de.cau.cs.kieler.sccharts.text.sct.ui.contentassist.antlr.internal.InternalSctParser createParser() {
		de.cau.cs.kieler.sccharts.text.sct.ui.contentassist.antlr.internal.InternalSctParser result = new de.cau.cs.kieler.sccharts.text.sct.ui.contentassist.antlr.internal.InternalSctParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getSCChartAccess().getAlternatives_4(), "rule__SCChart__Alternatives_4");
					put(grammarAccess.getSCChartAccess().getAlternatives_4_1_1_0(), "rule__SCChart__Alternatives_4_1_1_0");
					put(grammarAccess.getImportDeclAccess().getAlternatives_1(), "rule__ImportDecl__Alternatives_1");
					put(grammarAccess.getStateAccess().getAlternatives_1(), "rule__State__Alternatives_1");
					put(grammarAccess.getStateAccess().getAlternatives_6(), "rule__State__Alternatives_6");
					put(grammarAccess.getStateAccess().getAlternatives_6_1_1_0(), "rule__State__Alternatives_6_1_1_0");
					put(grammarAccess.getLocalActionAccess().getAlternatives(), "rule__LocalAction__Alternatives");
					put(grammarAccess.getTransitionAccess().getAlternatives_1(), "rule__Transition__Alternatives_1");
					put(grammarAccess.getTransitionAccess().getAlternatives_3_3(), "rule__Transition__Alternatives_3_3");
					put(grammarAccess.getTransitionAccess().getAlternatives_3_3_0_0(), "rule__Transition__Alternatives_3_3_0_0");
					put(grammarAccess.getTransitionAccess().getAlternatives_3_3_0_1_0(), "rule__Transition__Alternatives_3_3_0_1_0");
					put(grammarAccess.getDeclarationAccess().getAlternatives_1(), "rule__Declaration__Alternatives_1");
					put(grammarAccess.getDeclarationAccess().getAlternatives_1_0_5(), "rule__Declaration__Alternatives_1_0_5");
					put(grammarAccess.getEffectAccess().getAlternatives(), "rule__Effect__Alternatives");
					put(grammarAccess.getExpressionAccess().getAlternatives(), "rule__Expression__Alternatives");
					put(grammarAccess.getOrAndExpressionAccess().getAlternatives_1(), "rule__OrAndExpression__Alternatives_1");
					put(grammarAccess.getOrAndExpressionAccess().getOperatorAlternatives_1_0_1_0(), "rule__OrAndExpression__OperatorAlternatives_1_0_1_0");
					put(grammarAccess.getOrAndExpressionAccess().getOperatorAlternatives_1_1_1_0(), "rule__OrAndExpression__OperatorAlternatives_1_1_1_0");
					put(grammarAccess.getCompareOperationAccess().getAlternatives(), "rule__CompareOperation__Alternatives");
					put(grammarAccess.getNotOrValuedExpressionAccess().getAlternatives(), "rule__NotOrValuedExpression__Alternatives");
					put(grammarAccess.getNotExpressionAccess().getAlternatives(), "rule__NotExpression__Alternatives");
					put(grammarAccess.getNegExpressionAccess().getAlternatives(), "rule__NegExpression__Alternatives");
					put(grammarAccess.getAtomicExpressionAccess().getAlternatives(), "rule__AtomicExpression__Alternatives");
					put(grammarAccess.getAtomicValuedExpressionAccess().getAlternatives(), "rule__AtomicValuedExpression__Alternatives");
					put(grammarAccess.getValuedObjectTestExpressionAccess().getAlternatives(), "rule__ValuedObjectTestExpression__Alternatives");
					put(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorAlternatives_0_1_0(), "rule__ValuedObjectTestExpression__OperatorAlternatives_0_1_0");
					put(grammarAccess.getAnyTypeAccess().getAlternatives(), "rule__AnyType__Alternatives");
					put(grammarAccess.getAnnotationAccess().getAlternatives(), "rule__Annotation__Alternatives");
					put(grammarAccess.getValuedAnnotationAccess().getAlternatives(), "rule__ValuedAnnotation__Alternatives");
					put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
					put(grammarAccess.getStateTypeAccess().getAlternatives(), "rule__StateType__Alternatives");
					put(grammarAccess.getTransitionTypeAccess().getAlternatives(), "rule__TransitionType__Alternatives");
					put(grammarAccess.getTransitionTypeLegacyAccess().getAlternatives(), "rule__TransitionTypeLegacy__Alternatives");
					put(grammarAccess.getHistoryTypeAccess().getAlternatives(), "rule__HistoryType__Alternatives");
					put(grammarAccess.getCompareOperatorAccess().getAlternatives(), "rule__CompareOperator__Alternatives");
					put(grammarAccess.getValueTypeAccess().getAlternatives(), "rule__ValueType__Alternatives");
					put(grammarAccess.getCombineOperatorAccess().getAlternatives(), "rule__CombineOperator__Alternatives");
					put(grammarAccess.getSingleRegionAccess().getGroup(), "rule__SingleRegion__Group__0");
					put(grammarAccess.getSingleRegionAccess().getGroup_1(), "rule__SingleRegion__Group_1__0");
					put(grammarAccess.getSingleRegionAccess().getGroup_1_4(), "rule__SingleRegion__Group_1_4__0");
					put(grammarAccess.getForAccess().getGroup(), "rule__For__Group__0");
					put(grammarAccess.getRegionAccess().getGroup(), "rule__Region__Group__0");
					put(grammarAccess.getRegionAccess().getGroup_5(), "rule__Region__Group_5__0");
					put(grammarAccess.getSCChartAccess().getGroup(), "rule__SCChart__Group__0");
					put(grammarAccess.getSCChartAccess().getGroup_4_0(), "rule__SCChart__Group_4_0__0");
					put(grammarAccess.getSCChartAccess().getGroup_4_0_2(), "rule__SCChart__Group_4_0_2__0");
					put(grammarAccess.getSCChartAccess().getGroup_4_0_2_2(), "rule__SCChart__Group_4_0_2_2__0");
					put(grammarAccess.getSCChartAccess().getGroup_4_1(), "rule__SCChart__Group_4_1__0");
					put(grammarAccess.getSCChartAccess().getGroup_4_1_1(), "rule__SCChart__Group_4_1_1__0");
					put(grammarAccess.getSCChartAccess().getGroup_4_1_1_1(), "rule__SCChart__Group_4_1_1_1__0");
					put(grammarAccess.getImportDeclAccess().getGroup(), "rule__ImportDecl__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup_1(), "rule__QualifiedName__Group_1__0");
					put(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup(), "rule__QualifiedNameWithWildcard__Group__0");
					put(grammarAccess.getStateAccess().getGroup(), "rule__State__Group__0");
					put(grammarAccess.getStateAccess().getGroup_1_0(), "rule__State__Group_1_0__0");
					put(grammarAccess.getStateAccess().getGroup_1_1(), "rule__State__Group_1_1__0");
					put(grammarAccess.getStateAccess().getGroup_6_0(), "rule__State__Group_6_0__0");
					put(grammarAccess.getStateAccess().getGroup_6_0_2(), "rule__State__Group_6_0_2__0");
					put(grammarAccess.getStateAccess().getGroup_6_0_2_2(), "rule__State__Group_6_0_2_2__0");
					put(grammarAccess.getStateAccess().getGroup_6_1(), "rule__State__Group_6_1__0");
					put(grammarAccess.getStateAccess().getGroup_6_1_1(), "rule__State__Group_6_1_1__0");
					put(grammarAccess.getStateAccess().getGroup_6_1_1_1(), "rule__State__Group_6_1_1_1__0");
					put(grammarAccess.getTransitionAccess().getGroup(), "rule__Transition__Group__0");
					put(grammarAccess.getTransitionAccess().getGroup_3(), "rule__Transition__Group_3__0");
					put(grammarAccess.getTransitionAccess().getGroup_3_3_0(), "rule__Transition__Group_3_3_0__0");
					put(grammarAccess.getTransitionAccess().getGroup_3_3_0_0_0(), "rule__Transition__Group_3_3_0_0_0__0");
					put(grammarAccess.getTransitionAccess().getGroup_3_3_0_1(), "rule__Transition__Group_3_3_0_1__0");
					put(grammarAccess.getTransitionAccess().getGroup_3_3_0_1_2(), "rule__Transition__Group_3_3_0_1_2__0");
					put(grammarAccess.getTransitionAccess().getGroup_3_3_1(), "rule__Transition__Group_3_3_1__0");
					put(grammarAccess.getDeclarationAccess().getGroup(), "rule__Declaration__Group__0");
					put(grammarAccess.getDeclarationAccess().getGroup_1_0(), "rule__Declaration__Group_1_0__0");
					put(grammarAccess.getDeclarationAccess().getGroup_1_0_5_0(), "rule__Declaration__Group_1_0_5_0__0");
					put(grammarAccess.getDeclarationAccess().getGroup_1_1(), "rule__Declaration__Group_1_1__0");
					put(grammarAccess.getDeclarationAccess().getGroup_3(), "rule__Declaration__Group_3__0");
					put(grammarAccess.getValuedObjectAccess().getGroup(), "rule__ValuedObject__Group__0");
					put(grammarAccess.getValuedObjectAccess().getGroup_1(), "rule__ValuedObject__Group_1__0");
					put(grammarAccess.getValuedObjectAccess().getGroup_2(), "rule__ValuedObject__Group_2__0");
					put(grammarAccess.getValuedObjectAccess().getGroup_3(), "rule__ValuedObject__Group_3__0");
					put(grammarAccess.getTextualCodeAccess().getGroup(), "rule__TextualCode__Group__0");
					put(grammarAccess.getBindingAccess().getGroup(), "rule__Binding__Group__0");
					put(grammarAccess.getEntryActionAccess().getGroup(), "rule__EntryAction__Group__0");
					put(grammarAccess.getEntryActionAccess().getGroup_3(), "rule__EntryAction__Group_3__0");
					put(grammarAccess.getEntryActionAccess().getGroup_3_2(), "rule__EntryAction__Group_3_2__0");
					put(grammarAccess.getDuringActionAccess().getGroup(), "rule__DuringAction__Group__0");
					put(grammarAccess.getDuringActionAccess().getGroup_4(), "rule__DuringAction__Group_4__0");
					put(grammarAccess.getDuringActionAccess().getGroup_4_2(), "rule__DuringAction__Group_4_2__0");
					put(grammarAccess.getExitActionAccess().getGroup(), "rule__ExitAction__Group__0");
					put(grammarAccess.getExitActionAccess().getGroup_3(), "rule__ExitAction__Group_3__0");
					put(grammarAccess.getExitActionAccess().getGroup_3_2(), "rule__ExitAction__Group_3_2__0");
					put(grammarAccess.getSuspendActionAccess().getGroup(), "rule__SuspendAction__Group__0");
					put(grammarAccess.getEmissionAccess().getGroup(), "rule__Emission__Group__0");
					put(grammarAccess.getEmissionAccess().getGroup_1(), "rule__Emission__Group_1__0");
					put(grammarAccess.getAssignmentAccess().getGroup(), "rule__Assignment__Group__0");
					put(grammarAccess.getAssignmentAccess().getGroup_1(), "rule__Assignment__Group_1__0");
					put(grammarAccess.getFunctionCallEffectAccess().getGroup(), "rule__FunctionCallEffect__Group__0");
					put(grammarAccess.getFunctionCallEffectAccess().getGroup_2(), "rule__FunctionCallEffect__Group_2__0");
					put(grammarAccess.getFunctionCallEffectAccess().getGroup_2_2(), "rule__FunctionCallEffect__Group_2_2__0");
					put(grammarAccess.getParameterAccess().getGroup(), "rule__Parameter__Group__0");
					put(grammarAccess.getOrAndExpressionAccess().getGroup(), "rule__OrAndExpression__Group__0");
					put(grammarAccess.getOrAndExpressionAccess().getGroup_1_0(), "rule__OrAndExpression__Group_1_0__0");
					put(grammarAccess.getOrAndExpressionAccess().getGroup_1_1(), "rule__OrAndExpression__Group_1_1__0");
					put(grammarAccess.getCompareOperationAccess().getGroup_0(), "rule__CompareOperation__Group_0__0");
					put(grammarAccess.getCompareOperationAccess().getGroup_0_1(), "rule__CompareOperation__Group_0_1__0");
					put(grammarAccess.getNotExpressionAccess().getGroup_0(), "rule__NotExpression__Group_0__0");
					put(grammarAccess.getAddExpressionAccess().getGroup(), "rule__AddExpression__Group__0");
					put(grammarAccess.getAddExpressionAccess().getGroup_1(), "rule__AddExpression__Group_1__0");
					put(grammarAccess.getSubExpressionAccess().getGroup(), "rule__SubExpression__Group__0");
					put(grammarAccess.getSubExpressionAccess().getGroup_1(), "rule__SubExpression__Group_1__0");
					put(grammarAccess.getMultExpressionAccess().getGroup(), "rule__MultExpression__Group__0");
					put(grammarAccess.getMultExpressionAccess().getGroup_1(), "rule__MultExpression__Group_1__0");
					put(grammarAccess.getDivExpressionAccess().getGroup(), "rule__DivExpression__Group__0");
					put(grammarAccess.getDivExpressionAccess().getGroup_1(), "rule__DivExpression__Group_1__0");
					put(grammarAccess.getModExpressionAccess().getGroup(), "rule__ModExpression__Group__0");
					put(grammarAccess.getModExpressionAccess().getGroup_1(), "rule__ModExpression__Group_1__0");
					put(grammarAccess.getNegExpressionAccess().getGroup_0(), "rule__NegExpression__Group_0__0");
					put(grammarAccess.getAtomicExpressionAccess().getGroup_2(), "rule__AtomicExpression__Group_2__0");
					put(grammarAccess.getAtomicValuedExpressionAccess().getGroup_2(), "rule__AtomicValuedExpression__Group_2__0");
					put(grammarAccess.getValuedObjectTestExpressionAccess().getGroup_0(), "rule__ValuedObjectTestExpression__Group_0__0");
					put(grammarAccess.getValuedObjectReferenceAccess().getGroup(), "rule__ValuedObjectReference__Group__0");
					put(grammarAccess.getValuedObjectReferenceAccess().getGroup_1(), "rule__ValuedObjectReference__Group_1__0");
					put(grammarAccess.getFunctionCallAccess().getGroup(), "rule__FunctionCall__Group__0");
					put(grammarAccess.getFunctionCallAccess().getGroup_2(), "rule__FunctionCall__Group_2__0");
					put(grammarAccess.getFunctionCallAccess().getGroup_2_2(), "rule__FunctionCall__Group_2_2__0");
					put(grammarAccess.getTagAnnotationAccess().getGroup(), "rule__TagAnnotation__Group__0");
					put(grammarAccess.getTagAnnotationAccess().getGroup_2(), "rule__TagAnnotation__Group_2__0");
					put(grammarAccess.getKeyStringValueAnnotationAccess().getGroup(), "rule__KeyStringValueAnnotation__Group__0");
					put(grammarAccess.getKeyStringValueAnnotationAccess().getGroup_3(), "rule__KeyStringValueAnnotation__Group_3__0");
					put(grammarAccess.getTypedKeyStringValueAnnotationAccess().getGroup(), "rule__TypedKeyStringValueAnnotation__Group__0");
					put(grammarAccess.getTypedKeyStringValueAnnotationAccess().getGroup_6(), "rule__TypedKeyStringValueAnnotation__Group_6__0");
					put(grammarAccess.getKeyBooleanValueAnnotationAccess().getGroup(), "rule__KeyBooleanValueAnnotation__Group__0");
					put(grammarAccess.getKeyBooleanValueAnnotationAccess().getGroup_3(), "rule__KeyBooleanValueAnnotation__Group_3__0");
					put(grammarAccess.getKeyIntValueAnnotationAccess().getGroup(), "rule__KeyIntValueAnnotation__Group__0");
					put(grammarAccess.getKeyIntValueAnnotationAccess().getGroup_3(), "rule__KeyIntValueAnnotation__Group_3__0");
					put(grammarAccess.getKeyFloatValueAnnotationAccess().getGroup(), "rule__KeyFloatValueAnnotation__Group__0");
					put(grammarAccess.getKeyFloatValueAnnotationAccess().getGroup_3(), "rule__KeyFloatValueAnnotation__Group_3__0");
					put(grammarAccess.getImportAnnotationAccess().getGroup(), "rule__ImportAnnotation__Group__0");
					put(grammarAccess.getExtendedIDAccess().getGroup(), "rule__ExtendedID__Group__0");
					put(grammarAccess.getExtendedIDAccess().getGroup_1(), "rule__ExtendedID__Group_1__0");
					put(grammarAccess.getSingleRegionAccess().getAnnotationsAssignment_1_0(), "rule__SingleRegion__AnnotationsAssignment_1_0");
					put(grammarAccess.getSingleRegionAccess().getIdAssignment_1_2(), "rule__SingleRegion__IdAssignment_1_2");
					put(grammarAccess.getSingleRegionAccess().getLabelAssignment_1_3(), "rule__SingleRegion__LabelAssignment_1_3");
					put(grammarAccess.getSingleRegionAccess().getForAssignment_1_4_1(), "rule__SingleRegion__ForAssignment_1_4_1");
					put(grammarAccess.getSingleRegionAccess().getDeclarationsAssignment_1_6(), "rule__SingleRegion__DeclarationsAssignment_1_6");
					put(grammarAccess.getSingleRegionAccess().getStatesAssignment_2(), "rule__SingleRegion__StatesAssignment_2");
					put(grammarAccess.getForAccess().getValuedObjectAssignment_1(), "rule__For__ValuedObjectAssignment_1");
					put(grammarAccess.getForAccess().getFromAssignment_3(), "rule__For__FromAssignment_3");
					put(grammarAccess.getForAccess().getToAssignment_5(), "rule__For__ToAssignment_5");
					put(grammarAccess.getRegionAccess().getAnnotationsAssignment_1(), "rule__Region__AnnotationsAssignment_1");
					put(grammarAccess.getRegionAccess().getIdAssignment_3(), "rule__Region__IdAssignment_3");
					put(grammarAccess.getRegionAccess().getLabelAssignment_4(), "rule__Region__LabelAssignment_4");
					put(grammarAccess.getRegionAccess().getForAssignment_5_1(), "rule__Region__ForAssignment_5_1");
					put(grammarAccess.getRegionAccess().getDeclarationsAssignment_7(), "rule__Region__DeclarationsAssignment_7");
					put(grammarAccess.getRegionAccess().getStatesAssignment_8(), "rule__Region__StatesAssignment_8");
					put(grammarAccess.getSCChartAccess().getAnnotationsAssignment_0(), "rule__SCChart__AnnotationsAssignment_0");
					put(grammarAccess.getSCChartAccess().getIdAssignment_2(), "rule__SCChart__IdAssignment_2");
					put(grammarAccess.getSCChartAccess().getLabelAssignment_3(), "rule__SCChart__LabelAssignment_3");
					put(grammarAccess.getSCChartAccess().getReferencedScopeAssignment_4_0_1(), "rule__SCChart__ReferencedScopeAssignment_4_0_1");
					put(grammarAccess.getSCChartAccess().getBindingsAssignment_4_0_2_1(), "rule__SCChart__BindingsAssignment_4_0_2_1");
					put(grammarAccess.getSCChartAccess().getBindingsAssignment_4_0_2_2_1(), "rule__SCChart__BindingsAssignment_4_0_2_2_1");
					put(grammarAccess.getSCChartAccess().getDeclarationsAssignment_4_1_1_0_0(), "rule__SCChart__DeclarationsAssignment_4_1_1_0_0");
					put(grammarAccess.getSCChartAccess().getLocalActionsAssignment_4_1_1_0_1(), "rule__SCChart__LocalActionsAssignment_4_1_1_0_1");
					put(grammarAccess.getSCChartAccess().getRegionsAssignment_4_1_1_1_0(), "rule__SCChart__RegionsAssignment_4_1_1_1_0");
					put(grammarAccess.getSCChartAccess().getRegionsAssignment_4_1_1_1_1(), "rule__SCChart__RegionsAssignment_4_1_1_1_1");
					put(grammarAccess.getImportDeclAccess().getImportedTypeAssignment_1_0(), "rule__ImportDecl__ImportedTypeAssignment_1_0");
					put(grammarAccess.getImportDeclAccess().getImportedNamespaceAssignment_1_1(), "rule__ImportDecl__ImportedNamespaceAssignment_1_1");
					put(grammarAccess.getStateAccess().getAnnotationsAssignment_0(), "rule__State__AnnotationsAssignment_0");
					put(grammarAccess.getStateAccess().getInitialAssignment_1_0_0(), "rule__State__InitialAssignment_1_0_0");
					put(grammarAccess.getStateAccess().getFinalAssignment_1_0_1(), "rule__State__FinalAssignment_1_0_1");
					put(grammarAccess.getStateAccess().getFinalAssignment_1_1_0(), "rule__State__FinalAssignment_1_1_0");
					put(grammarAccess.getStateAccess().getInitialAssignment_1_1_1(), "rule__State__InitialAssignment_1_1_1");
					put(grammarAccess.getStateAccess().getTypeAssignment_2(), "rule__State__TypeAssignment_2");
					put(grammarAccess.getStateAccess().getIdAssignment_4(), "rule__State__IdAssignment_4");
					put(grammarAccess.getStateAccess().getLabelAssignment_5(), "rule__State__LabelAssignment_5");
					put(grammarAccess.getStateAccess().getReferencedScopeAssignment_6_0_1(), "rule__State__ReferencedScopeAssignment_6_0_1");
					put(grammarAccess.getStateAccess().getBindingsAssignment_6_0_2_1(), "rule__State__BindingsAssignment_6_0_2_1");
					put(grammarAccess.getStateAccess().getBindingsAssignment_6_0_2_2_1(), "rule__State__BindingsAssignment_6_0_2_2_1");
					put(grammarAccess.getStateAccess().getDeclarationsAssignment_6_1_1_0_0(), "rule__State__DeclarationsAssignment_6_1_1_0_0");
					put(grammarAccess.getStateAccess().getLocalActionsAssignment_6_1_1_0_1(), "rule__State__LocalActionsAssignment_6_1_1_0_1");
					put(grammarAccess.getStateAccess().getRegionsAssignment_6_1_1_1_0(), "rule__State__RegionsAssignment_6_1_1_1_0");
					put(grammarAccess.getStateAccess().getRegionsAssignment_6_1_1_1_1(), "rule__State__RegionsAssignment_6_1_1_1_1");
					put(grammarAccess.getStateAccess().getOutgoingTransitionsAssignment_7(), "rule__State__OutgoingTransitionsAssignment_7");
					put(grammarAccess.getTransitionAccess().getAnnotationsAssignment_0(), "rule__Transition__AnnotationsAssignment_0");
					put(grammarAccess.getTransitionAccess().getTypeAssignment_1_0(), "rule__Transition__TypeAssignment_1_0");
					put(grammarAccess.getTransitionAccess().getTypeAssignment_1_1(), "rule__Transition__TypeAssignment_1_1");
					put(grammarAccess.getTransitionAccess().getTargetStateAssignment_2(), "rule__Transition__TargetStateAssignment_2");
					put(grammarAccess.getTransitionAccess().getImmediateAssignment_3_0(), "rule__Transition__ImmediateAssignment_3_0");
					put(grammarAccess.getTransitionAccess().getDeferredAssignment_3_1(), "rule__Transition__DeferredAssignment_3_1");
					put(grammarAccess.getTransitionAccess().getHistoryAssignment_3_2(), "rule__Transition__HistoryAssignment_3_2");
					put(grammarAccess.getTransitionAccess().getDelayAssignment_3_3_0_0_0_1(), "rule__Transition__DelayAssignment_3_3_0_0_0_1");
					put(grammarAccess.getTransitionAccess().getTriggerAssignment_3_3_0_0_0_2(), "rule__Transition__TriggerAssignment_3_3_0_0_0_2");
					put(grammarAccess.getTransitionAccess().getEffectsAssignment_3_3_0_1_1(), "rule__Transition__EffectsAssignment_3_3_0_1_1");
					put(grammarAccess.getTransitionAccess().getEffectsAssignment_3_3_0_1_2_1(), "rule__Transition__EffectsAssignment_3_3_0_1_2_1");
					put(grammarAccess.getTransitionAccess().getLabelAssignment_3_3_1_1(), "rule__Transition__LabelAssignment_3_3_1_1");
					put(grammarAccess.getDeclarationAccess().getAnnotationsAssignment_0(), "rule__Declaration__AnnotationsAssignment_0");
					put(grammarAccess.getDeclarationAccess().getExternAssignment_1_0_0(), "rule__Declaration__ExternAssignment_1_0_0");
					put(grammarAccess.getDeclarationAccess().getStaticAssignment_1_0_1(), "rule__Declaration__StaticAssignment_1_0_1");
					put(grammarAccess.getDeclarationAccess().getConstAssignment_1_0_2(), "rule__Declaration__ConstAssignment_1_0_2");
					put(grammarAccess.getDeclarationAccess().getInputAssignment_1_0_3(), "rule__Declaration__InputAssignment_1_0_3");
					put(grammarAccess.getDeclarationAccess().getOutputAssignment_1_0_4(), "rule__Declaration__OutputAssignment_1_0_4");
					put(grammarAccess.getDeclarationAccess().getSignalAssignment_1_0_5_0_0(), "rule__Declaration__SignalAssignment_1_0_5_0_0");
					put(grammarAccess.getDeclarationAccess().getTypeAssignment_1_0_5_0_1(), "rule__Declaration__TypeAssignment_1_0_5_0_1");
					put(grammarAccess.getDeclarationAccess().getSignalAssignment_1_0_5_1(), "rule__Declaration__SignalAssignment_1_0_5_1");
					put(grammarAccess.getDeclarationAccess().getExternAssignment_1_1_0(), "rule__Declaration__ExternAssignment_1_1_0");
					put(grammarAccess.getDeclarationAccess().getStaticAssignment_1_1_1(), "rule__Declaration__StaticAssignment_1_1_1");
					put(grammarAccess.getDeclarationAccess().getConstAssignment_1_1_2(), "rule__Declaration__ConstAssignment_1_1_2");
					put(grammarAccess.getDeclarationAccess().getInputAssignment_1_1_3(), "rule__Declaration__InputAssignment_1_1_3");
					put(grammarAccess.getDeclarationAccess().getOutputAssignment_1_1_4(), "rule__Declaration__OutputAssignment_1_1_4");
					put(grammarAccess.getDeclarationAccess().getSignalAssignment_1_1_5(), "rule__Declaration__SignalAssignment_1_1_5");
					put(grammarAccess.getDeclarationAccess().getTypeAssignment_1_1_6(), "rule__Declaration__TypeAssignment_1_1_6");
					put(grammarAccess.getDeclarationAccess().getValuedObjectsAssignment_2(), "rule__Declaration__ValuedObjectsAssignment_2");
					put(grammarAccess.getDeclarationAccess().getValuedObjectsAssignment_3_1(), "rule__Declaration__ValuedObjectsAssignment_3_1");
					put(grammarAccess.getValuedObjectAccess().getNameAssignment_0(), "rule__ValuedObject__NameAssignment_0");
					put(grammarAccess.getValuedObjectAccess().getCardinalitiesAssignment_1_1(), "rule__ValuedObject__CardinalitiesAssignment_1_1");
					put(grammarAccess.getValuedObjectAccess().getInitialValueAssignment_2_1(), "rule__ValuedObject__InitialValueAssignment_2_1");
					put(grammarAccess.getValuedObjectAccess().getCombineOperatorAssignment_3_1(), "rule__ValuedObject__CombineOperatorAssignment_3_1");
					put(grammarAccess.getTextualCodeAccess().getTextAssignment_0(), "rule__TextualCode__TextAssignment_0");
					put(grammarAccess.getBindingAccess().getAnnotationsAssignment_0(), "rule__Binding__AnnotationsAssignment_0");
					put(grammarAccess.getBindingAccess().getFormalAssignment_1(), "rule__Binding__FormalAssignment_1");
					put(grammarAccess.getBindingAccess().getActualAssignment_3(), "rule__Binding__ActualAssignment_3");
					put(grammarAccess.getEntryActionAccess().getTriggerAssignment_2(), "rule__EntryAction__TriggerAssignment_2");
					put(grammarAccess.getEntryActionAccess().getEffectsAssignment_3_1(), "rule__EntryAction__EffectsAssignment_3_1");
					put(grammarAccess.getEntryActionAccess().getEffectsAssignment_3_2_1(), "rule__EntryAction__EffectsAssignment_3_2_1");
					put(grammarAccess.getDuringActionAccess().getImmediateAssignment_1(), "rule__DuringAction__ImmediateAssignment_1");
					put(grammarAccess.getDuringActionAccess().getTriggerAssignment_3(), "rule__DuringAction__TriggerAssignment_3");
					put(grammarAccess.getDuringActionAccess().getEffectsAssignment_4_1(), "rule__DuringAction__EffectsAssignment_4_1");
					put(grammarAccess.getDuringActionAccess().getEffectsAssignment_4_2_1(), "rule__DuringAction__EffectsAssignment_4_2_1");
					put(grammarAccess.getExitActionAccess().getTriggerAssignment_2(), "rule__ExitAction__TriggerAssignment_2");
					put(grammarAccess.getExitActionAccess().getEffectsAssignment_3_1(), "rule__ExitAction__EffectsAssignment_3_1");
					put(grammarAccess.getExitActionAccess().getEffectsAssignment_3_2_1(), "rule__ExitAction__EffectsAssignment_3_2_1");
					put(grammarAccess.getSuspendActionAccess().getImmediateAssignment_1(), "rule__SuspendAction__ImmediateAssignment_1");
					put(grammarAccess.getSuspendActionAccess().getWeakAssignment_2(), "rule__SuspendAction__WeakAssignment_2");
					put(grammarAccess.getSuspendActionAccess().getTriggerAssignment_4(), "rule__SuspendAction__TriggerAssignment_4");
					put(grammarAccess.getEmissionAccess().getValuedObjectAssignment_0(), "rule__Emission__ValuedObjectAssignment_0");
					put(grammarAccess.getEmissionAccess().getNewValueAssignment_1_1(), "rule__Emission__NewValueAssignment_1_1");
					put(grammarAccess.getAssignmentAccess().getValuedObjectAssignment_0(), "rule__Assignment__ValuedObjectAssignment_0");
					put(grammarAccess.getAssignmentAccess().getIndicesAssignment_1_1(), "rule__Assignment__IndicesAssignment_1_1");
					put(grammarAccess.getAssignmentAccess().getExpressionAssignment_3(), "rule__Assignment__ExpressionAssignment_3");
					put(grammarAccess.getTextEffectAccess().getTextAssignment(), "rule__TextEffect__TextAssignment");
					put(grammarAccess.getFunctionCallEffectAccess().getFunctionNameAssignment_1(), "rule__FunctionCallEffect__FunctionNameAssignment_1");
					put(grammarAccess.getFunctionCallEffectAccess().getParametersAssignment_2_1(), "rule__FunctionCallEffect__ParametersAssignment_2_1");
					put(grammarAccess.getFunctionCallEffectAccess().getParametersAssignment_2_2_1(), "rule__FunctionCallEffect__ParametersAssignment_2_2_1");
					put(grammarAccess.getParameterAccess().getCallByReferenceAssignment_0(), "rule__Parameter__CallByReferenceAssignment_0");
					put(grammarAccess.getParameterAccess().getExpressionAssignment_1(), "rule__Parameter__ExpressionAssignment_1");
					put(grammarAccess.getOrAndExpressionAccess().getOperatorAssignment_1_0_1(), "rule__OrAndExpression__OperatorAssignment_1_0_1");
					put(grammarAccess.getOrAndExpressionAccess().getSubExpressionsAssignment_1_0_2(), "rule__OrAndExpression__SubExpressionsAssignment_1_0_2");
					put(grammarAccess.getOrAndExpressionAccess().getOperatorAssignment_1_1_1(), "rule__OrAndExpression__OperatorAssignment_1_1_1");
					put(grammarAccess.getOrAndExpressionAccess().getSubExpressionsAssignment_1_1_2(), "rule__OrAndExpression__SubExpressionsAssignment_1_1_2");
					put(grammarAccess.getCompareOperationAccess().getOperatorAssignment_0_1_1(), "rule__CompareOperation__OperatorAssignment_0_1_1");
					put(grammarAccess.getCompareOperationAccess().getSubExpressionsAssignment_0_1_2(), "rule__CompareOperation__SubExpressionsAssignment_0_1_2");
					put(grammarAccess.getNotExpressionAccess().getOperatorAssignment_0_1(), "rule__NotExpression__OperatorAssignment_0_1");
					put(grammarAccess.getNotExpressionAccess().getSubExpressionsAssignment_0_2(), "rule__NotExpression__SubExpressionsAssignment_0_2");
					put(grammarAccess.getAddExpressionAccess().getOperatorAssignment_1_1(), "rule__AddExpression__OperatorAssignment_1_1");
					put(grammarAccess.getAddExpressionAccess().getSubExpressionsAssignment_1_2(), "rule__AddExpression__SubExpressionsAssignment_1_2");
					put(grammarAccess.getSubExpressionAccess().getOperatorAssignment_1_1(), "rule__SubExpression__OperatorAssignment_1_1");
					put(grammarAccess.getSubExpressionAccess().getSubExpressionsAssignment_1_2(), "rule__SubExpression__SubExpressionsAssignment_1_2");
					put(grammarAccess.getMultExpressionAccess().getOperatorAssignment_1_1(), "rule__MultExpression__OperatorAssignment_1_1");
					put(grammarAccess.getMultExpressionAccess().getSubExpressionsAssignment_1_2(), "rule__MultExpression__SubExpressionsAssignment_1_2");
					put(grammarAccess.getDivExpressionAccess().getOperatorAssignment_1_1(), "rule__DivExpression__OperatorAssignment_1_1");
					put(grammarAccess.getDivExpressionAccess().getSubExpressionsAssignment_1_2(), "rule__DivExpression__SubExpressionsAssignment_1_2");
					put(grammarAccess.getModExpressionAccess().getOperatorAssignment_1_1(), "rule__ModExpression__OperatorAssignment_1_1");
					put(grammarAccess.getModExpressionAccess().getSubExpressionsAssignment_1_2(), "rule__ModExpression__SubExpressionsAssignment_1_2");
					put(grammarAccess.getNegExpressionAccess().getOperatorAssignment_0_1(), "rule__NegExpression__OperatorAssignment_0_1");
					put(grammarAccess.getNegExpressionAccess().getSubExpressionsAssignment_0_2(), "rule__NegExpression__SubExpressionsAssignment_0_2");
					put(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorAssignment_0_1(), "rule__ValuedObjectTestExpression__OperatorAssignment_0_1");
					put(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsAssignment_0_3(), "rule__ValuedObjectTestExpression__SubExpressionsAssignment_0_3");
					put(grammarAccess.getValuedObjectReferenceAccess().getValuedObjectAssignment_0(), "rule__ValuedObjectReference__ValuedObjectAssignment_0");
					put(grammarAccess.getValuedObjectReferenceAccess().getIndicesAssignment_1_1(), "rule__ValuedObjectReference__IndicesAssignment_1_1");
					put(grammarAccess.getFunctionCallAccess().getFunctionNameAssignment_1(), "rule__FunctionCall__FunctionNameAssignment_1");
					put(grammarAccess.getFunctionCallAccess().getParametersAssignment_2_1(), "rule__FunctionCall__ParametersAssignment_2_1");
					put(grammarAccess.getFunctionCallAccess().getParametersAssignment_2_2_1(), "rule__FunctionCall__ParametersAssignment_2_2_1");
					put(grammarAccess.getTextExpressionAccess().getTextAssignment(), "rule__TextExpression__TextAssignment");
					put(grammarAccess.getIntValueAccess().getValueAssignment(), "rule__IntValue__ValueAssignment");
					put(grammarAccess.getFloatValueAccess().getValueAssignment(), "rule__FloatValue__ValueAssignment");
					put(grammarAccess.getBoolValueAccess().getValueAssignment(), "rule__BoolValue__ValueAssignment");
					put(grammarAccess.getCommentAnnotationAccess().getValueAssignment(), "rule__CommentAnnotation__ValueAssignment");
					put(grammarAccess.getTagAnnotationAccess().getNameAssignment_1(), "rule__TagAnnotation__NameAssignment_1");
					put(grammarAccess.getTagAnnotationAccess().getAnnotationsAssignment_2_1(), "rule__TagAnnotation__AnnotationsAssignment_2_1");
					put(grammarAccess.getKeyStringValueAnnotationAccess().getNameAssignment_1(), "rule__KeyStringValueAnnotation__NameAssignment_1");
					put(grammarAccess.getKeyStringValueAnnotationAccess().getValueAssignment_2(), "rule__KeyStringValueAnnotation__ValueAssignment_2");
					put(grammarAccess.getKeyStringValueAnnotationAccess().getAnnotationsAssignment_3_1(), "rule__KeyStringValueAnnotation__AnnotationsAssignment_3_1");
					put(grammarAccess.getTypedKeyStringValueAnnotationAccess().getNameAssignment_1(), "rule__TypedKeyStringValueAnnotation__NameAssignment_1");
					put(grammarAccess.getTypedKeyStringValueAnnotationAccess().getTypeAssignment_3(), "rule__TypedKeyStringValueAnnotation__TypeAssignment_3");
					put(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValueAssignment_5(), "rule__TypedKeyStringValueAnnotation__ValueAssignment_5");
					put(grammarAccess.getTypedKeyStringValueAnnotationAccess().getAnnotationsAssignment_6_1(), "rule__TypedKeyStringValueAnnotation__AnnotationsAssignment_6_1");
					put(grammarAccess.getKeyBooleanValueAnnotationAccess().getNameAssignment_1(), "rule__KeyBooleanValueAnnotation__NameAssignment_1");
					put(grammarAccess.getKeyBooleanValueAnnotationAccess().getValueAssignment_2(), "rule__KeyBooleanValueAnnotation__ValueAssignment_2");
					put(grammarAccess.getKeyBooleanValueAnnotationAccess().getAnnotationsAssignment_3_1(), "rule__KeyBooleanValueAnnotation__AnnotationsAssignment_3_1");
					put(grammarAccess.getKeyIntValueAnnotationAccess().getNameAssignment_1(), "rule__KeyIntValueAnnotation__NameAssignment_1");
					put(grammarAccess.getKeyIntValueAnnotationAccess().getValueAssignment_2(), "rule__KeyIntValueAnnotation__ValueAssignment_2");
					put(grammarAccess.getKeyIntValueAnnotationAccess().getAnnotationsAssignment_3_1(), "rule__KeyIntValueAnnotation__AnnotationsAssignment_3_1");
					put(grammarAccess.getKeyFloatValueAnnotationAccess().getNameAssignment_1(), "rule__KeyFloatValueAnnotation__NameAssignment_1");
					put(grammarAccess.getKeyFloatValueAnnotationAccess().getValueAssignment_2(), "rule__KeyFloatValueAnnotation__ValueAssignment_2");
					put(grammarAccess.getKeyFloatValueAnnotationAccess().getAnnotationsAssignment_3_1(), "rule__KeyFloatValueAnnotation__AnnotationsAssignment_3_1");
					put(grammarAccess.getImportAnnotationAccess().getImportURIAssignment_1(), "rule__ImportAnnotation__ImportURIAssignment_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			de.cau.cs.kieler.sccharts.text.sct.ui.contentassist.antlr.internal.InternalSctParser typedParser = (de.cau.cs.kieler.sccharts.text.sct.ui.contentassist.antlr.internal.InternalSctParser) parser;
			typedParser.entryRuleRoot();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public SctGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(SctGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
