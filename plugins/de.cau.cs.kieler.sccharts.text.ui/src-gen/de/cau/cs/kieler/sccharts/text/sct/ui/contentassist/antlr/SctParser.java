/*
* generated by Xtext
*/
package de.cau.cs.kieler.sccharts.text.sct.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import de.cau.cs.kieler.sccharts.text.sct.services.SctGrammarAccess;

public class SctParser extends AbstractContentAssistParser {
	
	@Inject
	private SctGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected de.cau.cs.kieler.sccharts.text.sct.ui.contentassist.antlr.internal.InternalSctParser createParser() {
		de.cau.cs.kieler.sccharts.text.sct.ui.contentassist.antlr.internal.InternalSctParser result = new de.cau.cs.kieler.sccharts.text.sct.ui.contentassist.antlr.internal.InternalSctParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getStateAccess().getAlternatives_1(), "rule__State__Alternatives_1");
					put(grammarAccess.getStateAccess().getAlternatives_6(), "rule__State__Alternatives_6");
					put(grammarAccess.getStateAccess().getAlternatives_6_1_1_0(), "rule__State__Alternatives_6_1_1_0");
					put(grammarAccess.getTransitionAccess().getAlternatives_4_1(), "rule__Transition__Alternatives_4_1");
					put(grammarAccess.getValuedObjectAccess().getAlternatives_7(), "rule__ValuedObject__Alternatives_7");
					put(grammarAccess.getEffectAccess().getAlternatives(), "rule__Effect__Alternatives");
					put(grammarAccess.getExpressionAccess().getAlternatives(), "rule__Expression__Alternatives");
					put(grammarAccess.getCompareOperationAccess().getAlternatives(), "rule__CompareOperation__Alternatives");
					put(grammarAccess.getNotOrValuedExpressionAccess().getAlternatives(), "rule__NotOrValuedExpression__Alternatives");
					put(grammarAccess.getNotExpressionAccess().getAlternatives(), "rule__NotExpression__Alternatives");
					put(grammarAccess.getNegExpressionAccess().getAlternatives(), "rule__NegExpression__Alternatives");
					put(grammarAccess.getAtomicExpressionAccess().getAlternatives(), "rule__AtomicExpression__Alternatives");
					put(grammarAccess.getAtomicValuedExpressionAccess().getAlternatives(), "rule__AtomicValuedExpression__Alternatives");
					put(grammarAccess.getValuedObjectTestExpressionAccess().getAlternatives(), "rule__ValuedObjectTestExpression__Alternatives");
					put(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorAlternatives_0_1_0(), "rule__ValuedObjectTestExpression__OperatorAlternatives_0_1_0");
					put(grammarAccess.getAnyTypeAccess().getAlternatives(), "rule__AnyType__Alternatives");
					put(grammarAccess.getAnnotationAccess().getAlternatives(), "rule__Annotation__Alternatives");
					put(grammarAccess.getValuedAnnotationAccess().getAlternatives(), "rule__ValuedAnnotation__Alternatives");
					put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
					put(grammarAccess.getStateTypeAccess().getAlternatives(), "rule__StateType__Alternatives");
					put(grammarAccess.getTransitionTypeAccess().getAlternatives(), "rule__TransitionType__Alternatives");
					put(grammarAccess.getCompareOperatorAccess().getAlternatives(), "rule__CompareOperator__Alternatives");
					put(grammarAccess.getValueTypeAccess().getAlternatives(), "rule__ValueType__Alternatives");
					put(grammarAccess.getCombineOperatorAccess().getAlternatives(), "rule__CombineOperator__Alternatives");
					put(grammarAccess.getRootRegionAccess().getGroup(), "rule__RootRegion__Group__0");
					put(grammarAccess.getRootRegionAccess().getGroup_2(), "rule__RootRegion__Group_2__0");
					put(grammarAccess.getSingleRegionAccess().getGroup(), "rule__SingleRegion__Group__0");
					put(grammarAccess.getSingleRegionAccess().getGroup_1(), "rule__SingleRegion__Group_1__0");
					put(grammarAccess.getRegionAccess().getGroup(), "rule__Region__Group__0");
					put(grammarAccess.getStateAccess().getGroup(), "rule__State__Group__0");
					put(grammarAccess.getStateAccess().getGroup_1_0(), "rule__State__Group_1_0__0");
					put(grammarAccess.getStateAccess().getGroup_1_1(), "rule__State__Group_1_1__0");
					put(grammarAccess.getStateAccess().getGroup_6_0(), "rule__State__Group_6_0__0");
					put(grammarAccess.getStateAccess().getGroup_6_0_2(), "rule__State__Group_6_0_2__0");
					put(grammarAccess.getStateAccess().getGroup_6_0_2_2(), "rule__State__Group_6_0_2_2__0");
					put(grammarAccess.getStateAccess().getGroup_6_1(), "rule__State__Group_6_1__0");
					put(grammarAccess.getStateAccess().getGroup_6_1_1(), "rule__State__Group_6_1_1__0");
					put(grammarAccess.getStateAccess().getGroup_6_1_1_0_1(), "rule__State__Group_6_1_1_0_1__0");
					put(grammarAccess.getStateAccess().getGroup_6_1_1_0_2(), "rule__State__Group_6_1_1_0_2__0");
					put(grammarAccess.getStateAccess().getGroup_6_1_1_0_3(), "rule__State__Group_6_1_1_0_3__0");
					put(grammarAccess.getStateAccess().getGroup_6_1_1_0_4(), "rule__State__Group_6_1_1_0_4__0");
					put(grammarAccess.getStateAccess().getGroup_6_1_1_2(), "rule__State__Group_6_1_1_2__0");
					put(grammarAccess.getTransitionAccess().getGroup(), "rule__Transition__Group__0");
					put(grammarAccess.getTransitionAccess().getGroup_4(), "rule__Transition__Group_4__0");
					put(grammarAccess.getTransitionAccess().getGroup_4_1_0(), "rule__Transition__Group_4_1_0__0");
					put(grammarAccess.getTransitionAccess().getGroup_4_1_0_3(), "rule__Transition__Group_4_1_0_3__0");
					put(grammarAccess.getTransitionAccess().getGroup_4_1_0_3_2(), "rule__Transition__Group_4_1_0_3_2__0");
					put(grammarAccess.getValuedObjectAccess().getGroup(), "rule__ValuedObject__Group__0");
					put(grammarAccess.getValuedObjectAccess().getGroup_6(), "rule__ValuedObject__Group_6__0");
					put(grammarAccess.getValuedObjectAccess().getGroup_7_0(), "rule__ValuedObject__Group_7_0__0");
					put(grammarAccess.getValuedObjectAccess().getGroup_7_1(), "rule__ValuedObject__Group_7_1__0");
					put(grammarAccess.getTextualCodeAccess().getGroup(), "rule__TextualCode__Group__0");
					put(grammarAccess.getSubstitutionAccess().getGroup(), "rule__Substitution__Group__0");
					put(grammarAccess.getActionAccess().getGroup(), "rule__Action__Group__0");
					put(grammarAccess.getActionAccess().getGroup_4(), "rule__Action__Group_4__0");
					put(grammarAccess.getActionAccess().getGroup_4_2(), "rule__Action__Group_4_2__0");
					put(grammarAccess.getEmissionAccess().getGroup(), "rule__Emission__Group__0");
					put(grammarAccess.getEmissionAccess().getGroup_1(), "rule__Emission__Group_1__0");
					put(grammarAccess.getAssignmentAccess().getGroup(), "rule__Assignment__Group__0");
					put(grammarAccess.getOrExpressionAccess().getGroup(), "rule__OrExpression__Group__0");
					put(grammarAccess.getOrExpressionAccess().getGroup_1(), "rule__OrExpression__Group_1__0");
					put(grammarAccess.getAndExpressionAccess().getGroup(), "rule__AndExpression__Group__0");
					put(grammarAccess.getAndExpressionAccess().getGroup_1(), "rule__AndExpression__Group_1__0");
					put(grammarAccess.getCompareOperationAccess().getGroup_0(), "rule__CompareOperation__Group_0__0");
					put(grammarAccess.getCompareOperationAccess().getGroup_0_1(), "rule__CompareOperation__Group_0_1__0");
					put(grammarAccess.getNotExpressionAccess().getGroup_0(), "rule__NotExpression__Group_0__0");
					put(grammarAccess.getAddExpressionAccess().getGroup(), "rule__AddExpression__Group__0");
					put(grammarAccess.getAddExpressionAccess().getGroup_1(), "rule__AddExpression__Group_1__0");
					put(grammarAccess.getSubExpressionAccess().getGroup(), "rule__SubExpression__Group__0");
					put(grammarAccess.getSubExpressionAccess().getGroup_1(), "rule__SubExpression__Group_1__0");
					put(grammarAccess.getMultExpressionAccess().getGroup(), "rule__MultExpression__Group__0");
					put(grammarAccess.getMultExpressionAccess().getGroup_1(), "rule__MultExpression__Group_1__0");
					put(grammarAccess.getDivExpressionAccess().getGroup(), "rule__DivExpression__Group__0");
					put(grammarAccess.getDivExpressionAccess().getGroup_1(), "rule__DivExpression__Group_1__0");
					put(grammarAccess.getModExpressionAccess().getGroup(), "rule__ModExpression__Group__0");
					put(grammarAccess.getModExpressionAccess().getGroup_1(), "rule__ModExpression__Group_1__0");
					put(grammarAccess.getNegExpressionAccess().getGroup_0(), "rule__NegExpression__Group_0__0");
					put(grammarAccess.getAtomicExpressionAccess().getGroup_2(), "rule__AtomicExpression__Group_2__0");
					put(grammarAccess.getAtomicValuedExpressionAccess().getGroup_2(), "rule__AtomicValuedExpression__Group_2__0");
					put(grammarAccess.getValuedObjectTestExpressionAccess().getGroup_0(), "rule__ValuedObjectTestExpression__Group_0__0");
					put(grammarAccess.getTagAnnotationAccess().getGroup(), "rule__TagAnnotation__Group__0");
					put(grammarAccess.getTagAnnotationAccess().getGroup_2(), "rule__TagAnnotation__Group_2__0");
					put(grammarAccess.getKeyStringValueAnnotationAccess().getGroup(), "rule__KeyStringValueAnnotation__Group__0");
					put(grammarAccess.getKeyStringValueAnnotationAccess().getGroup_3(), "rule__KeyStringValueAnnotation__Group_3__0");
					put(grammarAccess.getTypedKeyStringValueAnnotationAccess().getGroup(), "rule__TypedKeyStringValueAnnotation__Group__0");
					put(grammarAccess.getTypedKeyStringValueAnnotationAccess().getGroup_6(), "rule__TypedKeyStringValueAnnotation__Group_6__0");
					put(grammarAccess.getKeyBooleanValueAnnotationAccess().getGroup(), "rule__KeyBooleanValueAnnotation__Group__0");
					put(grammarAccess.getKeyBooleanValueAnnotationAccess().getGroup_3(), "rule__KeyBooleanValueAnnotation__Group_3__0");
					put(grammarAccess.getKeyIntValueAnnotationAccess().getGroup(), "rule__KeyIntValueAnnotation__Group__0");
					put(grammarAccess.getKeyIntValueAnnotationAccess().getGroup_3(), "rule__KeyIntValueAnnotation__Group_3__0");
					put(grammarAccess.getKeyFloatValueAnnotationAccess().getGroup(), "rule__KeyFloatValueAnnotation__Group__0");
					put(grammarAccess.getKeyFloatValueAnnotationAccess().getGroup_3(), "rule__KeyFloatValueAnnotation__Group_3__0");
					put(grammarAccess.getImportAnnotationAccess().getGroup(), "rule__ImportAnnotation__Group__0");
					put(grammarAccess.getExtendedIDAccess().getGroup(), "rule__ExtendedID__Group__0");
					put(grammarAccess.getExtendedIDAccess().getGroup_1(), "rule__ExtendedID__Group_1__0");
					put(grammarAccess.getRootRegionAccess().getAnnotationsAssignment_1(), "rule__RootRegion__AnnotationsAssignment_1");
					put(grammarAccess.getRootRegionAccess().getAnnotationsAssignment_2_0(), "rule__RootRegion__AnnotationsAssignment_2_0");
					put(grammarAccess.getRootRegionAccess().getIdAssignment_2_2(), "rule__RootRegion__IdAssignment_2_2");
					put(grammarAccess.getRootRegionAccess().getLabelAssignment_2_3(), "rule__RootRegion__LabelAssignment_2_3");
					put(grammarAccess.getRootRegionAccess().getValuedObjectsAssignment_2_5(), "rule__RootRegion__ValuedObjectsAssignment_2_5");
					put(grammarAccess.getRootRegionAccess().getBodyTextAssignment_2_6(), "rule__RootRegion__BodyTextAssignment_2_6");
					put(grammarAccess.getRootRegionAccess().getStatesAssignment_3(), "rule__RootRegion__StatesAssignment_3");
					put(grammarAccess.getSingleRegionAccess().getAnnotationsAssignment_1_0(), "rule__SingleRegion__AnnotationsAssignment_1_0");
					put(grammarAccess.getSingleRegionAccess().getIdAssignment_1_2(), "rule__SingleRegion__IdAssignment_1_2");
					put(grammarAccess.getSingleRegionAccess().getLabelAssignment_1_3(), "rule__SingleRegion__LabelAssignment_1_3");
					put(grammarAccess.getSingleRegionAccess().getValuedObjectsAssignment_1_5(), "rule__SingleRegion__ValuedObjectsAssignment_1_5");
					put(grammarAccess.getSingleRegionAccess().getBodyTextAssignment_1_6(), "rule__SingleRegion__BodyTextAssignment_1_6");
					put(grammarAccess.getSingleRegionAccess().getStatesAssignment_2(), "rule__SingleRegion__StatesAssignment_2");
					put(grammarAccess.getRegionAccess().getAnnotationsAssignment_1(), "rule__Region__AnnotationsAssignment_1");
					put(grammarAccess.getRegionAccess().getIdAssignment_3(), "rule__Region__IdAssignment_3");
					put(grammarAccess.getRegionAccess().getLabelAssignment_4(), "rule__Region__LabelAssignment_4");
					put(grammarAccess.getRegionAccess().getValuedObjectsAssignment_6(), "rule__Region__ValuedObjectsAssignment_6");
					put(grammarAccess.getRegionAccess().getBodyTextAssignment_7(), "rule__Region__BodyTextAssignment_7");
					put(grammarAccess.getRegionAccess().getStatesAssignment_8(), "rule__Region__StatesAssignment_8");
					put(grammarAccess.getStateAccess().getAnnotationsAssignment_0(), "rule__State__AnnotationsAssignment_0");
					put(grammarAccess.getStateAccess().getIsInitialAssignment_1_0_0(), "rule__State__IsInitialAssignment_1_0_0");
					put(grammarAccess.getStateAccess().getIsFinalAssignment_1_0_1(), "rule__State__IsFinalAssignment_1_0_1");
					put(grammarAccess.getStateAccess().getIsFinalAssignment_1_1_0(), "rule__State__IsFinalAssignment_1_1_0");
					put(grammarAccess.getStateAccess().getIsInitialAssignment_1_1_1(), "rule__State__IsInitialAssignment_1_1_1");
					put(grammarAccess.getStateAccess().getTypeAssignment_2(), "rule__State__TypeAssignment_2");
					put(grammarAccess.getStateAccess().getIdAssignment_4(), "rule__State__IdAssignment_4");
					put(grammarAccess.getStateAccess().getLabelAssignment_5(), "rule__State__LabelAssignment_5");
					put(grammarAccess.getStateAccess().getBodyReferenceAssignment_6_0_1(), "rule__State__BodyReferenceAssignment_6_0_1");
					put(grammarAccess.getStateAccess().getRenamingsAssignment_6_0_2_1(), "rule__State__RenamingsAssignment_6_0_2_1");
					put(grammarAccess.getStateAccess().getRenamingsAssignment_6_0_2_2_1(), "rule__State__RenamingsAssignment_6_0_2_2_1");
					put(grammarAccess.getStateAccess().getValuedObjectsAssignment_6_1_1_0_0(), "rule__State__ValuedObjectsAssignment_6_1_1_0_0");
					put(grammarAccess.getStateAccess().getEntryActionsAssignment_6_1_1_0_1_1(), "rule__State__EntryActionsAssignment_6_1_1_0_1_1");
					put(grammarAccess.getStateAccess().getDuringActionsAssignment_6_1_1_0_2_1(), "rule__State__DuringActionsAssignment_6_1_1_0_2_1");
					put(grammarAccess.getStateAccess().getExitActionsAssignment_6_1_1_0_3_1(), "rule__State__ExitActionsAssignment_6_1_1_0_3_1");
					put(grammarAccess.getStateAccess().getSuspensionTriggerAssignment_6_1_1_0_4_1(), "rule__State__SuspensionTriggerAssignment_6_1_1_0_4_1");
					put(grammarAccess.getStateAccess().getBodyTextAssignment_6_1_1_1(), "rule__State__BodyTextAssignment_6_1_1_1");
					put(grammarAccess.getStateAccess().getRegionsAssignment_6_1_1_2_0(), "rule__State__RegionsAssignment_6_1_1_2_0");
					put(grammarAccess.getStateAccess().getRegionsAssignment_6_1_1_2_1(), "rule__State__RegionsAssignment_6_1_1_2_1");
					put(grammarAccess.getStateAccess().getOutgoingTransitionsAssignment_7(), "rule__State__OutgoingTransitionsAssignment_7");
					put(grammarAccess.getTransitionAccess().getAnnotationsAssignment_0(), "rule__Transition__AnnotationsAssignment_0");
					put(grammarAccess.getTransitionAccess().getTypeAssignment_1(), "rule__Transition__TypeAssignment_1");
					put(grammarAccess.getTransitionAccess().getPriorityAssignment_2(), "rule__Transition__PriorityAssignment_2");
					put(grammarAccess.getTransitionAccess().getTargetStateAssignment_3(), "rule__Transition__TargetStateAssignment_3");
					put(grammarAccess.getTransitionAccess().getIsImmediateAssignment_4_1_0_0(), "rule__Transition__IsImmediateAssignment_4_1_0_0");
					put(grammarAccess.getTransitionAccess().getDelayAssignment_4_1_0_1(), "rule__Transition__DelayAssignment_4_1_0_1");
					put(grammarAccess.getTransitionAccess().getTriggerAssignment_4_1_0_2(), "rule__Transition__TriggerAssignment_4_1_0_2");
					put(grammarAccess.getTransitionAccess().getEffectsAssignment_4_1_0_3_1(), "rule__Transition__EffectsAssignment_4_1_0_3_1");
					put(grammarAccess.getTransitionAccess().getEffectsAssignment_4_1_0_3_2_1(), "rule__Transition__EffectsAssignment_4_1_0_3_2_1");
					put(grammarAccess.getTransitionAccess().getLabelAssignment_4_1_1(), "rule__Transition__LabelAssignment_4_1_1");
					put(grammarAccess.getTransitionAccess().getIsHistoryAssignment_5(), "rule__Transition__IsHistoryAssignment_5");
					put(grammarAccess.getValuedObjectAccess().getAnnotationsAssignment_0(), "rule__ValuedObject__AnnotationsAssignment_0");
					put(grammarAccess.getValuedObjectAccess().getIsInputAssignment_1(), "rule__ValuedObject__IsInputAssignment_1");
					put(grammarAccess.getValuedObjectAccess().getIsOutputAssignment_2(), "rule__ValuedObject__IsOutputAssignment_2");
					put(grammarAccess.getValuedObjectAccess().getIsStaticAssignment_3(), "rule__ValuedObject__IsStaticAssignment_3");
					put(grammarAccess.getValuedObjectAccess().getIsSignalAssignment_4(), "rule__ValuedObject__IsSignalAssignment_4");
					put(grammarAccess.getValuedObjectAccess().getNameAssignment_5(), "rule__ValuedObject__NameAssignment_5");
					put(grammarAccess.getValuedObjectAccess().getInitialValueAssignment_6_1(), "rule__ValuedObject__InitialValueAssignment_6_1");
					put(grammarAccess.getValuedObjectAccess().getTypeAssignment_7_0_1(), "rule__ValuedObject__TypeAssignment_7_0_1");
					put(grammarAccess.getValuedObjectAccess().getTypeAssignment_7_1_2(), "rule__ValuedObject__TypeAssignment_7_1_2");
					put(grammarAccess.getValuedObjectAccess().getCombineOperatorAssignment_7_1_4(), "rule__ValuedObject__CombineOperatorAssignment_7_1_4");
					put(grammarAccess.getTextualCodeAccess().getTextAssignment_3(), "rule__TextualCode__TextAssignment_3");
					put(grammarAccess.getSubstitutionAccess().getActualAssignment_0(), "rule__Substitution__ActualAssignment_0");
					put(grammarAccess.getSubstitutionAccess().getFormalAssignment_2(), "rule__Substitution__FormalAssignment_2");
					put(grammarAccess.getActionAccess().getIsImmediateAssignment_1(), "rule__Action__IsImmediateAssignment_1");
					put(grammarAccess.getActionAccess().getDelayAssignment_2(), "rule__Action__DelayAssignment_2");
					put(grammarAccess.getActionAccess().getTriggerAssignment_3(), "rule__Action__TriggerAssignment_3");
					put(grammarAccess.getActionAccess().getEffectsAssignment_4_1(), "rule__Action__EffectsAssignment_4_1");
					put(grammarAccess.getActionAccess().getEffectsAssignment_4_2_1(), "rule__Action__EffectsAssignment_4_2_1");
					put(grammarAccess.getEmissionAccess().getValuedObjectAssignment_0(), "rule__Emission__ValuedObjectAssignment_0");
					put(grammarAccess.getEmissionAccess().getNewValueAssignment_1_1(), "rule__Emission__NewValueAssignment_1_1");
					put(grammarAccess.getAssignmentAccess().getValuedObjectAssignment_0(), "rule__Assignment__ValuedObjectAssignment_0");
					put(grammarAccess.getAssignmentAccess().getExpressionAssignment_2(), "rule__Assignment__ExpressionAssignment_2");
					put(grammarAccess.getTextEffectAccess().getTextAssignment(), "rule__TextEffect__TextAssignment");
					put(grammarAccess.getOrExpressionAccess().getOperatorAssignment_1_1(), "rule__OrExpression__OperatorAssignment_1_1");
					put(grammarAccess.getOrExpressionAccess().getSubExpressionsAssignment_1_2(), "rule__OrExpression__SubExpressionsAssignment_1_2");
					put(grammarAccess.getAndExpressionAccess().getOperatorAssignment_1_1(), "rule__AndExpression__OperatorAssignment_1_1");
					put(grammarAccess.getAndExpressionAccess().getSubExpressionsAssignment_1_2(), "rule__AndExpression__SubExpressionsAssignment_1_2");
					put(grammarAccess.getCompareOperationAccess().getOperatorAssignment_0_1_1(), "rule__CompareOperation__OperatorAssignment_0_1_1");
					put(grammarAccess.getCompareOperationAccess().getSubExpressionsAssignment_0_1_2(), "rule__CompareOperation__SubExpressionsAssignment_0_1_2");
					put(grammarAccess.getNotExpressionAccess().getOperatorAssignment_0_1(), "rule__NotExpression__OperatorAssignment_0_1");
					put(grammarAccess.getNotExpressionAccess().getSubExpressionsAssignment_0_2(), "rule__NotExpression__SubExpressionsAssignment_0_2");
					put(grammarAccess.getAddExpressionAccess().getOperatorAssignment_1_1(), "rule__AddExpression__OperatorAssignment_1_1");
					put(grammarAccess.getAddExpressionAccess().getSubExpressionsAssignment_1_2(), "rule__AddExpression__SubExpressionsAssignment_1_2");
					put(grammarAccess.getSubExpressionAccess().getOperatorAssignment_1_1(), "rule__SubExpression__OperatorAssignment_1_1");
					put(grammarAccess.getSubExpressionAccess().getSubExpressionsAssignment_1_2(), "rule__SubExpression__SubExpressionsAssignment_1_2");
					put(grammarAccess.getMultExpressionAccess().getOperatorAssignment_1_1(), "rule__MultExpression__OperatorAssignment_1_1");
					put(grammarAccess.getMultExpressionAccess().getSubExpressionsAssignment_1_2(), "rule__MultExpression__SubExpressionsAssignment_1_2");
					put(grammarAccess.getDivExpressionAccess().getOperatorAssignment_1_1(), "rule__DivExpression__OperatorAssignment_1_1");
					put(grammarAccess.getDivExpressionAccess().getSubExpressionsAssignment_1_2(), "rule__DivExpression__SubExpressionsAssignment_1_2");
					put(grammarAccess.getModExpressionAccess().getOperatorAssignment_1_1(), "rule__ModExpression__OperatorAssignment_1_1");
					put(grammarAccess.getModExpressionAccess().getSubExpressionsAssignment_1_2(), "rule__ModExpression__SubExpressionsAssignment_1_2");
					put(grammarAccess.getNegExpressionAccess().getOperatorAssignment_0_1(), "rule__NegExpression__OperatorAssignment_0_1");
					put(grammarAccess.getNegExpressionAccess().getSubExpressionsAssignment_0_2(), "rule__NegExpression__SubExpressionsAssignment_0_2");
					put(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorAssignment_0_1(), "rule__ValuedObjectTestExpression__OperatorAssignment_0_1");
					put(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsAssignment_0_3(), "rule__ValuedObjectTestExpression__SubExpressionsAssignment_0_3");
					put(grammarAccess.getValuedObjectReferenceAccess().getValuedObjectAssignment(), "rule__ValuedObjectReference__ValuedObjectAssignment");
					put(grammarAccess.getTextExpressionAccess().getTextAssignment(), "rule__TextExpression__TextAssignment");
					put(grammarAccess.getIntValueAccess().getValueAssignment(), "rule__IntValue__ValueAssignment");
					put(grammarAccess.getFloatValueAccess().getValueAssignment(), "rule__FloatValue__ValueAssignment");
					put(grammarAccess.getBooleanValueAccess().getValueAssignment(), "rule__BooleanValue__ValueAssignment");
					put(grammarAccess.getCommentAnnotationAccess().getValueAssignment(), "rule__CommentAnnotation__ValueAssignment");
					put(grammarAccess.getTagAnnotationAccess().getNameAssignment_1(), "rule__TagAnnotation__NameAssignment_1");
					put(grammarAccess.getTagAnnotationAccess().getAnnotationsAssignment_2_1(), "rule__TagAnnotation__AnnotationsAssignment_2_1");
					put(grammarAccess.getKeyStringValueAnnotationAccess().getNameAssignment_1(), "rule__KeyStringValueAnnotation__NameAssignment_1");
					put(grammarAccess.getKeyStringValueAnnotationAccess().getValueAssignment_2(), "rule__KeyStringValueAnnotation__ValueAssignment_2");
					put(grammarAccess.getKeyStringValueAnnotationAccess().getAnnotationsAssignment_3_1(), "rule__KeyStringValueAnnotation__AnnotationsAssignment_3_1");
					put(grammarAccess.getTypedKeyStringValueAnnotationAccess().getNameAssignment_1(), "rule__TypedKeyStringValueAnnotation__NameAssignment_1");
					put(grammarAccess.getTypedKeyStringValueAnnotationAccess().getTypeAssignment_3(), "rule__TypedKeyStringValueAnnotation__TypeAssignment_3");
					put(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValueAssignment_5(), "rule__TypedKeyStringValueAnnotation__ValueAssignment_5");
					put(grammarAccess.getTypedKeyStringValueAnnotationAccess().getAnnotationsAssignment_6_1(), "rule__TypedKeyStringValueAnnotation__AnnotationsAssignment_6_1");
					put(grammarAccess.getKeyBooleanValueAnnotationAccess().getNameAssignment_1(), "rule__KeyBooleanValueAnnotation__NameAssignment_1");
					put(grammarAccess.getKeyBooleanValueAnnotationAccess().getValueAssignment_2(), "rule__KeyBooleanValueAnnotation__ValueAssignment_2");
					put(grammarAccess.getKeyBooleanValueAnnotationAccess().getAnnotationsAssignment_3_1(), "rule__KeyBooleanValueAnnotation__AnnotationsAssignment_3_1");
					put(grammarAccess.getKeyIntValueAnnotationAccess().getNameAssignment_1(), "rule__KeyIntValueAnnotation__NameAssignment_1");
					put(grammarAccess.getKeyIntValueAnnotationAccess().getValueAssignment_2(), "rule__KeyIntValueAnnotation__ValueAssignment_2");
					put(grammarAccess.getKeyIntValueAnnotationAccess().getAnnotationsAssignment_3_1(), "rule__KeyIntValueAnnotation__AnnotationsAssignment_3_1");
					put(grammarAccess.getKeyFloatValueAnnotationAccess().getNameAssignment_1(), "rule__KeyFloatValueAnnotation__NameAssignment_1");
					put(grammarAccess.getKeyFloatValueAnnotationAccess().getValueAssignment_2(), "rule__KeyFloatValueAnnotation__ValueAssignment_2");
					put(grammarAccess.getKeyFloatValueAnnotationAccess().getAnnotationsAssignment_3_1(), "rule__KeyFloatValueAnnotation__AnnotationsAssignment_3_1");
					put(grammarAccess.getImportAnnotationAccess().getImportURIAssignment_1(), "rule__ImportAnnotation__ImportURIAssignment_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			de.cau.cs.kieler.sccharts.text.sct.ui.contentassist.antlr.internal.InternalSctParser typedParser = (de.cau.cs.kieler.sccharts.text.sct.ui.contentassist.antlr.internal.InternalSctParser) parser;
			typedParser.entryRuleRootRegion();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public SctGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(SctGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
