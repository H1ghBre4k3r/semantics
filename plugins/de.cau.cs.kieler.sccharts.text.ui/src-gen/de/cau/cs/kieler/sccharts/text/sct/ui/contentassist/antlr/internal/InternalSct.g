/*
 * generated by Xtext
 */
grammar InternalSct;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package de.cau.cs.kieler.sccharts.text.sct.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.cau.cs.kieler.sccharts.text.sct.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import de.cau.cs.kieler.sccharts.text.sct.services.SctGrammarAccess;

}

@parser::members {
 
 	private SctGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(SctGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleRoot
entryRuleRoot 
:
{ before(grammarAccess.getRootRule()); }
	 ruleRoot
{ after(grammarAccess.getRootRule()); } 
	 EOF 
;

// Rule Root
ruleRoot
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRootAccess().getSCChartParserRuleCall()); }
	ruleSCChart
{ after(grammarAccess.getRootAccess().getSCChartParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSingleControlflowRegion
entryRuleSingleControlflowRegion 
:
{ before(grammarAccess.getSingleControlflowRegionRule()); }
	 ruleSingleControlflowRegion
{ after(grammarAccess.getSingleControlflowRegionRule()); } 
	 EOF 
;

// Rule SingleControlflowRegion
ruleSingleControlflowRegion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSingleControlflowRegionAccess().getGroup()); }
(rule__SingleControlflowRegion__Group__0)
{ after(grammarAccess.getSingleControlflowRegionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSingleDataflowRegion
entryRuleSingleDataflowRegion 
:
{ before(grammarAccess.getSingleDataflowRegionRule()); }
	 ruleSingleDataflowRegion
{ after(grammarAccess.getSingleDataflowRegionRule()); } 
	 EOF 
;

// Rule SingleDataflowRegion
ruleSingleDataflowRegion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSingleDataflowRegionAccess().getGroup()); }
(rule__SingleDataflowRegion__Group__0)
{ after(grammarAccess.getSingleDataflowRegionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFor
entryRuleFor 
:
{ before(grammarAccess.getForRule()); }
	 ruleFor
{ after(grammarAccess.getForRule()); } 
	 EOF 
;

// Rule For
ruleFor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getForAccess().getGroup()); }
(rule__For__Group__0)
{ after(grammarAccess.getForAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleControlflowRegion
entryRuleControlflowRegion 
:
{ before(grammarAccess.getControlflowRegionRule()); }
	 ruleControlflowRegion
{ after(grammarAccess.getControlflowRegionRule()); } 
	 EOF 
;

// Rule ControlflowRegion
ruleControlflowRegion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getControlflowRegionAccess().getGroup()); }
(rule__ControlflowRegion__Group__0)
{ after(grammarAccess.getControlflowRegionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataflowRegion
entryRuleDataflowRegion 
:
{ before(grammarAccess.getDataflowRegionRule()); }
	 ruleDataflowRegion
{ after(grammarAccess.getDataflowRegionRule()); } 
	 EOF 
;

// Rule DataflowRegion
ruleDataflowRegion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataflowRegionAccess().getGroup()); }
(rule__DataflowRegion__Group__0)
{ after(grammarAccess.getDataflowRegionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEquation
entryRuleEquation 
:
{ before(grammarAccess.getEquationRule()); }
	 ruleEquation
{ after(grammarAccess.getEquationRule()); } 
	 EOF 
;

// Rule Equation
ruleEquation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEquationAccess().getGroup()); }
(rule__Equation__Group__0)
{ after(grammarAccess.getEquationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSCChart
entryRuleSCChart 
:
{ before(grammarAccess.getSCChartRule()); }
	 ruleSCChart
{ after(grammarAccess.getSCChartRule()); } 
	 EOF 
;

// Rule SCChart
ruleSCChart
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSCChartAccess().getGroup()); }
(rule__SCChart__Group__0)
{ after(grammarAccess.getSCChartAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRegion
entryRuleRegion 
:
{ before(grammarAccess.getRegionRule()); }
	 ruleRegion
{ after(grammarAccess.getRegionRule()); } 
	 EOF 
;

// Rule Region
ruleRegion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRegionAccess().getAlternatives()); }
(rule__Region__Alternatives)
{ after(grammarAccess.getRegionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleState
entryRuleState 
:
{ before(grammarAccess.getStateRule()); }
	 ruleState
{ after(grammarAccess.getStateRule()); } 
	 EOF 
;

// Rule State
ruleState
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStateAccess().getGroup()); }
(rule__State__Group__0)
{ after(grammarAccess.getStateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNode
entryRuleNode 
:
{ before(grammarAccess.getNodeRule()); }
	 ruleNode
{ after(grammarAccess.getNodeRule()); } 
	 EOF 
;

// Rule Node
ruleNode
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNodeAccess().getAlternatives()); }
(rule__Node__Alternatives)
{ after(grammarAccess.getNodeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCallNode
entryRuleCallNode 
:
{ before(grammarAccess.getCallNodeRule()); }
	 ruleCallNode
{ after(grammarAccess.getCallNodeRule()); } 
	 EOF 
;

// Rule CallNode
ruleCallNode
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCallNodeAccess().getGroup()); }
(rule__CallNode__Group__0)
{ after(grammarAccess.getCallNodeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDefineNode
entryRuleDefineNode 
:
{ before(grammarAccess.getDefineNodeRule()); }
	 ruleDefineNode
{ after(grammarAccess.getDefineNodeRule()); } 
	 EOF 
;

// Rule DefineNode
ruleDefineNode
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefineNodeAccess().getGroup()); }
(rule__DefineNode__Group__0)
{ after(grammarAccess.getDefineNodeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReferenceNode
entryRuleReferenceNode 
:
{ before(grammarAccess.getReferenceNodeRule()); }
	 ruleReferenceNode
{ after(grammarAccess.getReferenceNodeRule()); } 
	 EOF 
;

// Rule ReferenceNode
ruleReferenceNode
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReferenceNodeAccess().getGroup()); }
(rule__ReferenceNode__Group__0)
{ after(grammarAccess.getReferenceNodeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLocalAction
entryRuleLocalAction 
:
{ before(grammarAccess.getLocalActionRule()); }
	 ruleLocalAction
{ after(grammarAccess.getLocalActionRule()); } 
	 EOF 
;

// Rule LocalAction
ruleLocalAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLocalActionAccess().getAlternatives()); }
(rule__LocalAction__Alternatives)
{ after(grammarAccess.getLocalActionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTransition
entryRuleTransition 
:
{ before(grammarAccess.getTransitionRule()); }
	 ruleTransition
{ after(grammarAccess.getTransitionRule()); } 
	 EOF 
;

// Rule Transition
ruleTransition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTransitionAccess().getGroup()); }
(rule__Transition__Group__0)
{ after(grammarAccess.getTransitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDeclaration
entryRuleDeclaration 
:
{ before(grammarAccess.getDeclarationRule()); }
	 ruleDeclaration
{ after(grammarAccess.getDeclarationRule()); } 
	 EOF 
;

// Rule Declaration
ruleDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeclarationAccess().getGroup()); }
(rule__Declaration__Group__0)
{ after(grammarAccess.getDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValuedObject
entryRuleValuedObject 
:
{ before(grammarAccess.getValuedObjectRule()); }
	 ruleValuedObject
{ after(grammarAccess.getValuedObjectRule()); } 
	 EOF 
;

// Rule ValuedObject
ruleValuedObject
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValuedObjectAccess().getGroup()); }
(rule__ValuedObject__Group__0)
{ after(grammarAccess.getValuedObjectAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleBinding
entryRuleBinding 
:
{ before(grammarAccess.getBindingRule()); }
	 ruleBinding
{ after(grammarAccess.getBindingRule()); } 
	 EOF 
;

// Rule Binding
ruleBinding
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBindingAccess().getGroup()); }
(rule__Binding__Group__0)
{ after(grammarAccess.getBindingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEntryAction
entryRuleEntryAction 
:
{ before(grammarAccess.getEntryActionRule()); }
	 ruleEntryAction
{ after(grammarAccess.getEntryActionRule()); } 
	 EOF 
;

// Rule EntryAction
ruleEntryAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEntryActionAccess().getGroup()); }
(rule__EntryAction__Group__0)
{ after(grammarAccess.getEntryActionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDuringAction
entryRuleDuringAction 
:
{ before(grammarAccess.getDuringActionRule()); }
	 ruleDuringAction
{ after(grammarAccess.getDuringActionRule()); } 
	 EOF 
;

// Rule DuringAction
ruleDuringAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDuringActionAccess().getGroup()); }
(rule__DuringAction__Group__0)
{ after(grammarAccess.getDuringActionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExitAction
entryRuleExitAction 
:
{ before(grammarAccess.getExitActionRule()); }
	 ruleExitAction
{ after(grammarAccess.getExitActionRule()); } 
	 EOF 
;

// Rule ExitAction
ruleExitAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExitActionAccess().getGroup()); }
(rule__ExitAction__Group__0)
{ after(grammarAccess.getExitActionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSuspendAction
entryRuleSuspendAction 
:
{ before(grammarAccess.getSuspendActionRule()); }
	 ruleSuspendAction
{ after(grammarAccess.getSuspendActionRule()); } 
	 EOF 
;

// Rule SuspendAction
ruleSuspendAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSuspendActionAccess().getGroup()); }
(rule__SuspendAction__Group__0)
{ after(grammarAccess.getSuspendActionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIterateAction
entryRuleIterateAction 
:
{ before(grammarAccess.getIterateActionRule()); }
	 ruleIterateAction
{ after(grammarAccess.getIterateActionRule()); } 
	 EOF 
;

// Rule IterateAction
ruleIterateAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIterateActionAccess().getGroup()); }
(rule__IterateAction__Group__0)
{ after(grammarAccess.getIterateActionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEffect
entryRuleEffect 
:
{ before(grammarAccess.getEffectRule()); }
	 ruleEffect
{ after(grammarAccess.getEffectRule()); } 
	 EOF 
;

// Rule Effect
ruleEffect
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEffectAccess().getAlternatives()); }
(rule__Effect__Alternatives)
{ after(grammarAccess.getEffectAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEmission
entryRuleEmission 
:
{ before(grammarAccess.getEmissionRule()); }
	 ruleEmission
{ after(grammarAccess.getEmissionRule()); } 
	 EOF 
;

// Rule Emission
ruleEmission
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEmissionAccess().getGroup()); }
(rule__Emission__Group__0)
{ after(grammarAccess.getEmissionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssignment
entryRuleAssignment 
:
{ before(grammarAccess.getAssignmentRule()); }
	 ruleAssignment
{ after(grammarAccess.getAssignmentRule()); } 
	 EOF 
;

// Rule Assignment
ruleAssignment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssignmentAccess().getGroup()); }
(rule__Assignment__Group__0)
{ after(grammarAccess.getAssignmentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTextEffect
entryRuleTextEffect 
:
{ before(grammarAccess.getTextEffectRule()); }
	 ruleTextEffect
{ after(grammarAccess.getTextEffectRule()); } 
	 EOF 
;

// Rule TextEffect
ruleTextEffect
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTextEffectAccess().getTextAssignment()); }
(rule__TextEffect__TextAssignment)
{ after(grammarAccess.getTextEffectAccess().getTextAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionCallEffect
entryRuleFunctionCallEffect 
:
{ before(grammarAccess.getFunctionCallEffectRule()); }
	 ruleFunctionCallEffect
{ after(grammarAccess.getFunctionCallEffectRule()); } 
	 EOF 
;

// Rule FunctionCallEffect
ruleFunctionCallEffect
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getGroup()); }
(rule__FunctionCallEffect__Group__0)
{ after(grammarAccess.getFunctionCallEffectAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameter
entryRuleParameter 
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterAccess().getGroup()); }
(rule__Parameter__Group__0)
{ after(grammarAccess.getParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
(rule__Expression__Alternatives)
{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBoolExpression
entryRuleBoolExpression 
:
{ before(grammarAccess.getBoolExpressionRule()); }
	 ruleBoolExpression
{ after(grammarAccess.getBoolExpressionRule()); } 
	 EOF 
;

// Rule BoolExpression
ruleBoolExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBoolExpressionAccess().getOrAndExpressionParserRuleCall()); }
	ruleOrAndExpression
{ after(grammarAccess.getBoolExpressionAccess().getOrAndExpressionParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOrAndExpression
entryRuleOrAndExpression 
:
{ before(grammarAccess.getOrAndExpressionRule()); }
	 ruleOrAndExpression
{ after(grammarAccess.getOrAndExpressionRule()); } 
	 EOF 
;

// Rule OrAndExpression
ruleOrAndExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOrAndExpressionAccess().getGroup()); }
(rule__OrAndExpression__Group__0)
{ after(grammarAccess.getOrAndExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCompareOperation
entryRuleCompareOperation 
:
{ before(grammarAccess.getCompareOperationRule()); }
	 ruleCompareOperation
{ after(grammarAccess.getCompareOperationRule()); } 
	 EOF 
;

// Rule CompareOperation
ruleCompareOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCompareOperationAccess().getAlternatives()); }
(rule__CompareOperation__Alternatives)
{ after(grammarAccess.getCompareOperationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNotOrValuedExpression
entryRuleNotOrValuedExpression 
:
{ before(grammarAccess.getNotOrValuedExpressionRule()); }
	 ruleNotOrValuedExpression
{ after(grammarAccess.getNotOrValuedExpressionRule()); } 
	 EOF 
;

// Rule NotOrValuedExpression
ruleNotOrValuedExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNotOrValuedExpressionAccess().getAlternatives()); }
(rule__NotOrValuedExpression__Alternatives)
{ after(grammarAccess.getNotOrValuedExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNotExpression
entryRuleNotExpression 
:
{ before(grammarAccess.getNotExpressionRule()); }
	 ruleNotExpression
{ after(grammarAccess.getNotExpressionRule()); } 
	 EOF 
;

// Rule NotExpression
ruleNotExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNotExpressionAccess().getAlternatives()); }
(rule__NotExpression__Alternatives)
{ after(grammarAccess.getNotExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValuedExpression
entryRuleValuedExpression 
:
{ before(grammarAccess.getValuedExpressionRule()); }
	 ruleValuedExpression
{ after(grammarAccess.getValuedExpressionRule()); } 
	 EOF 
;

// Rule ValuedExpression
ruleValuedExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValuedExpressionAccess().getAddExpressionParserRuleCall()); }
	ruleAddExpression
{ after(grammarAccess.getValuedExpressionAccess().getAddExpressionParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAddExpression
entryRuleAddExpression 
:
{ before(grammarAccess.getAddExpressionRule()); }
	 ruleAddExpression
{ after(grammarAccess.getAddExpressionRule()); } 
	 EOF 
;

// Rule AddExpression
ruleAddExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAddExpressionAccess().getGroup()); }
(rule__AddExpression__Group__0)
{ after(grammarAccess.getAddExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSubExpression
entryRuleSubExpression 
:
{ before(grammarAccess.getSubExpressionRule()); }
	 ruleSubExpression
{ after(grammarAccess.getSubExpressionRule()); } 
	 EOF 
;

// Rule SubExpression
ruleSubExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSubExpressionAccess().getGroup()); }
(rule__SubExpression__Group__0)
{ after(grammarAccess.getSubExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultExpression
entryRuleMultExpression 
:
{ before(grammarAccess.getMultExpressionRule()); }
	 ruleMultExpression
{ after(grammarAccess.getMultExpressionRule()); } 
	 EOF 
;

// Rule MultExpression
ruleMultExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultExpressionAccess().getGroup()); }
(rule__MultExpression__Group__0)
{ after(grammarAccess.getMultExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDivExpression
entryRuleDivExpression 
:
{ before(grammarAccess.getDivExpressionRule()); }
	 ruleDivExpression
{ after(grammarAccess.getDivExpressionRule()); } 
	 EOF 
;

// Rule DivExpression
ruleDivExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDivExpressionAccess().getGroup()); }
(rule__DivExpression__Group__0)
{ after(grammarAccess.getDivExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModExpression
entryRuleModExpression 
:
{ before(grammarAccess.getModExpressionRule()); }
	 ruleModExpression
{ after(grammarAccess.getModExpressionRule()); } 
	 EOF 
;

// Rule ModExpression
ruleModExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModExpressionAccess().getGroup()); }
(rule__ModExpression__Group__0)
{ after(grammarAccess.getModExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNegExpression
entryRuleNegExpression 
:
{ before(grammarAccess.getNegExpressionRule()); }
	 ruleNegExpression
{ after(grammarAccess.getNegExpressionRule()); } 
	 EOF 
;

// Rule NegExpression
ruleNegExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNegExpressionAccess().getAlternatives()); }
(rule__NegExpression__Alternatives)
{ after(grammarAccess.getNegExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAtomicExpression
entryRuleAtomicExpression 
:
{ before(grammarAccess.getAtomicExpressionRule()); }
	 ruleAtomicExpression
{ after(grammarAccess.getAtomicExpressionRule()); } 
	 EOF 
;

// Rule AtomicExpression
ruleAtomicExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAtomicExpressionAccess().getAlternatives()); }
(rule__AtomicExpression__Alternatives)
{ after(grammarAccess.getAtomicExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAtomicValuedExpression
entryRuleAtomicValuedExpression 
:
{ before(grammarAccess.getAtomicValuedExpressionRule()); }
	 ruleAtomicValuedExpression
{ after(grammarAccess.getAtomicValuedExpressionRule()); } 
	 EOF 
;

// Rule AtomicValuedExpression
ruleAtomicValuedExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAtomicValuedExpressionAccess().getAlternatives()); }
(rule__AtomicValuedExpression__Alternatives)
{ after(grammarAccess.getAtomicValuedExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValuedObjectTestExpression
entryRuleValuedObjectTestExpression 
:
{ before(grammarAccess.getValuedObjectTestExpressionRule()); }
	 ruleValuedObjectTestExpression
{ after(grammarAccess.getValuedObjectTestExpressionRule()); } 
	 EOF 
;

// Rule ValuedObjectTestExpression
ruleValuedObjectTestExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getAlternatives()); }
(rule__ValuedObjectTestExpression__Alternatives)
{ after(grammarAccess.getValuedObjectTestExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValuedObjectReference
entryRuleValuedObjectReference 
:
{ before(grammarAccess.getValuedObjectReferenceRule()); }
	 ruleValuedObjectReference
{ after(grammarAccess.getValuedObjectReferenceRule()); } 
	 EOF 
;

// Rule ValuedObjectReference
ruleValuedObjectReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValuedObjectReferenceAccess().getGroup()); }
(rule__ValuedObjectReference__Group__0)
{ after(grammarAccess.getValuedObjectReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionCall
entryRuleFunctionCall 
:
{ before(grammarAccess.getFunctionCallRule()); }
	 ruleFunctionCall
{ after(grammarAccess.getFunctionCallRule()); } 
	 EOF 
;

// Rule FunctionCall
ruleFunctionCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionCallAccess().getGroup()); }
(rule__FunctionCall__Group__0)
{ after(grammarAccess.getFunctionCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTextExpression
entryRuleTextExpression 
:
{ before(grammarAccess.getTextExpressionRule()); }
	 ruleTextExpression
{ after(grammarAccess.getTextExpressionRule()); } 
	 EOF 
;

// Rule TextExpression
ruleTextExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTextExpressionAccess().getTextAssignment()); }
(rule__TextExpression__TextAssignment)
{ after(grammarAccess.getTextExpressionAccess().getTextAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntValue
entryRuleIntValue 
:
{ before(grammarAccess.getIntValueRule()); }
	 ruleIntValue
{ after(grammarAccess.getIntValueRule()); } 
	 EOF 
;

// Rule IntValue
ruleIntValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntValueAccess().getValueAssignment()); }
(rule__IntValue__ValueAssignment)
{ after(grammarAccess.getIntValueAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFloatValue
entryRuleFloatValue 
:
{ before(grammarAccess.getFloatValueRule()); }
	 ruleFloatValue
{ after(grammarAccess.getFloatValueRule()); } 
	 EOF 
;

// Rule FloatValue
ruleFloatValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFloatValueAccess().getValueAssignment()); }
(rule__FloatValue__ValueAssignment)
{ after(grammarAccess.getFloatValueAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBoolValue
entryRuleBoolValue 
:
{ before(grammarAccess.getBoolValueRule()); }
	 ruleBoolValue
{ after(grammarAccess.getBoolValueRule()); } 
	 EOF 
;

// Rule BoolValue
ruleBoolValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBoolValueAccess().getValueAssignment()); }
(rule__BoolValue__ValueAssignment)
{ after(grammarAccess.getBoolValueAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringValue
entryRuleStringValue 
:
{ before(grammarAccess.getStringValueRule()); }
	 ruleStringValue
{ after(grammarAccess.getStringValueRule()); } 
	 EOF 
;

// Rule StringValue
ruleStringValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringValueAccess().getValueAssignment()); }
(rule__StringValue__ValueAssignment)
{ after(grammarAccess.getStringValueAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleAnnotation
entryRuleAnnotation 
:
{ before(grammarAccess.getAnnotationRule()); }
	 ruleAnnotation
{ after(grammarAccess.getAnnotationRule()); } 
	 EOF 
;

// Rule Annotation
ruleAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnnotationAccess().getAlternatives()); }
(rule__Annotation__Alternatives)
{ after(grammarAccess.getAnnotationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleCommentAnnotation
entryRuleCommentAnnotation 
:
{ before(grammarAccess.getCommentAnnotationRule()); }
	 ruleCommentAnnotation
{ after(grammarAccess.getCommentAnnotationRule()); } 
	 EOF 
;

// Rule CommentAnnotation
ruleCommentAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCommentAnnotationAccess().getValueAssignment()); }
(rule__CommentAnnotation__ValueAssignment)
{ after(grammarAccess.getCommentAnnotationAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTagAnnotation
entryRuleTagAnnotation 
:
{ before(grammarAccess.getTagAnnotationRule()); }
	 ruleTagAnnotation
{ after(grammarAccess.getTagAnnotationRule()); } 
	 EOF 
;

// Rule TagAnnotation
ruleTagAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTagAnnotationAccess().getGroup()); }
(rule__TagAnnotation__Group__0)
{ after(grammarAccess.getTagAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleKeyStringValueAnnotation
entryRuleKeyStringValueAnnotation 
:
{ before(grammarAccess.getKeyStringValueAnnotationRule()); }
	 ruleKeyStringValueAnnotation
{ after(grammarAccess.getKeyStringValueAnnotationRule()); } 
	 EOF 
;

// Rule KeyStringValueAnnotation
ruleKeyStringValueAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getGroup()); }
(rule__KeyStringValueAnnotation__Group__0)
{ after(grammarAccess.getKeyStringValueAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypedKeyStringValueAnnotation
entryRuleTypedKeyStringValueAnnotation 
:
{ before(grammarAccess.getTypedKeyStringValueAnnotationRule()); }
	 ruleTypedKeyStringValueAnnotation
{ after(grammarAccess.getTypedKeyStringValueAnnotationRule()); } 
	 EOF 
;

// Rule TypedKeyStringValueAnnotation
ruleTypedKeyStringValueAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getGroup()); }
(rule__TypedKeyStringValueAnnotation__Group__0)
{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleKeyBooleanValueAnnotation
entryRuleKeyBooleanValueAnnotation 
:
{ before(grammarAccess.getKeyBooleanValueAnnotationRule()); }
	 ruleKeyBooleanValueAnnotation
{ after(grammarAccess.getKeyBooleanValueAnnotationRule()); } 
	 EOF 
;

// Rule KeyBooleanValueAnnotation
ruleKeyBooleanValueAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getKeyBooleanValueAnnotationAccess().getGroup()); }
(rule__KeyBooleanValueAnnotation__Group__0)
{ after(grammarAccess.getKeyBooleanValueAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleKeyIntValueAnnotation
entryRuleKeyIntValueAnnotation 
:
{ before(grammarAccess.getKeyIntValueAnnotationRule()); }
	 ruleKeyIntValueAnnotation
{ after(grammarAccess.getKeyIntValueAnnotationRule()); } 
	 EOF 
;

// Rule KeyIntValueAnnotation
ruleKeyIntValueAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getKeyIntValueAnnotationAccess().getGroup()); }
(rule__KeyIntValueAnnotation__Group__0)
{ after(grammarAccess.getKeyIntValueAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleKeyFloatValueAnnotation
entryRuleKeyFloatValueAnnotation 
:
{ before(grammarAccess.getKeyFloatValueAnnotationRule()); }
	 ruleKeyFloatValueAnnotation
{ after(grammarAccess.getKeyFloatValueAnnotationRule()); } 
	 EOF 
;

// Rule KeyFloatValueAnnotation
ruleKeyFloatValueAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getKeyFloatValueAnnotationAccess().getGroup()); }
(rule__KeyFloatValueAnnotation__Group__0)
{ after(grammarAccess.getKeyFloatValueAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleEString
entryRuleEString 
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEStringAccess().getAlternatives()); }
(rule__EString__Alternatives)
{ after(grammarAccess.getEStringAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExtendedID
entryRuleExtendedID 
:
{ before(grammarAccess.getExtendedIDRule()); }
	 ruleExtendedID
{ after(grammarAccess.getExtendedIDRule()); } 
	 EOF 
;

// Rule ExtendedID
ruleExtendedID
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExtendedIDAccess().getGroup()); }
(rule__ExtendedID__Group__0)
{ after(grammarAccess.getExtendedIDAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule StateType
ruleStateType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateTypeAccess().getAlternatives()); }
(rule__StateType__Alternatives)
{ after(grammarAccess.getStateTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule TransitionType
ruleTransitionType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionTypeAccess().getAlternatives()); }
(rule__TransitionType__Alternatives)
{ after(grammarAccess.getTransitionTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule TransitionTypeLegacy
ruleTransitionTypeLegacy
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionTypeLegacyAccess().getAlternatives()); }
(rule__TransitionTypeLegacy__Alternatives)
{ after(grammarAccess.getTransitionTypeLegacyAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule DivOperator
ruleDivOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivOperatorAccess().getDIVEnumLiteralDeclaration()); }
(	':' 
)
{ after(grammarAccess.getDivOperatorAccess().getDIVEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule HistoryType
ruleHistoryType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHistoryTypeAccess().getAlternatives()); }
(rule__HistoryType__Alternatives)
{ after(grammarAccess.getHistoryTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule CompareOperator
ruleCompareOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperatorAccess().getAlternatives()); }
(rule__CompareOperator__Alternatives)
{ after(grammarAccess.getCompareOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule PreOperator
rulePreOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreOperatorAccess().getPREEnumLiteralDeclaration()); }
(	'pre' 
)
{ after(grammarAccess.getPreOperatorAccess().getPREEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule OrOperator
ruleOrOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrOperatorAccess().getOREnumLiteralDeclaration()); }
(	'|' 
)
{ after(grammarAccess.getOrOperatorAccess().getOREnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule AndOperator
ruleAndOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndOperatorAccess().getANDEnumLiteralDeclaration()); }
(	'&' 
)
{ after(grammarAccess.getAndOperatorAccess().getANDEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule NotOperator
ruleNotOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotOperatorAccess().getNOTEnumLiteralDeclaration()); }
(	'!' 
)
{ after(grammarAccess.getNotOperatorAccess().getNOTEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule AddOperator
ruleAddOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddOperatorAccess().getADDEnumLiteralDeclaration()); }
(	'+' 
)
{ after(grammarAccess.getAddOperatorAccess().getADDEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule SubOperator
ruleSubOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubOperatorAccess().getSUBEnumLiteralDeclaration()); }
(	'-' 
)
{ after(grammarAccess.getSubOperatorAccess().getSUBEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule MultOperator
ruleMultOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultOperatorAccess().getMULTEnumLiteralDeclaration()); }
(	'*' 
)
{ after(grammarAccess.getMultOperatorAccess().getMULTEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule ModOperator
ruleModOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModOperatorAccess().getMODEnumLiteralDeclaration()); }
(	'%' 
)
{ after(grammarAccess.getModOperatorAccess().getMODEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule ValOperator
ruleValOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValOperatorAccess().getVALEnumLiteralDeclaration()); }
(	'val' 
)
{ after(grammarAccess.getValOperatorAccess().getVALEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule LogicalOrOperator
ruleLogicalOrOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalOrOperatorAccess().getOREnumLiteralDeclaration()); }
(	'||' 
)
{ after(grammarAccess.getLogicalOrOperatorAccess().getOREnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule LogicalAndOperator
ruleLogicalAndOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalAndOperatorAccess().getANDEnumLiteralDeclaration()); }
(	'&&' 
)
{ after(grammarAccess.getLogicalAndOperatorAccess().getANDEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule ValueType
ruleValueType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueTypeAccess().getAlternatives()); }
(rule__ValueType__Alternatives)
{ after(grammarAccess.getValueTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Rule CombineOperator
ruleCombineOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCombineOperatorAccess().getAlternatives()); }
(rule__CombineOperator__Alternatives)
{ after(grammarAccess.getCombineOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__SingleDataflowRegion__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleDataflowRegionAccess().getEquationsAssignment_2_0()); }
(rule__SingleDataflowRegion__EquationsAssignment_2_0)
{ after(grammarAccess.getSingleDataflowRegionAccess().getEquationsAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getSingleDataflowRegionAccess().getNodesAssignment_2_1()); }
(rule__SingleDataflowRegion__NodesAssignment_2_1)
{ after(grammarAccess.getSingleDataflowRegionAccess().getNodesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowRegion__Alternatives_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataflowRegionAccess().getEquationsAssignment_8_0()); }
(rule__DataflowRegion__EquationsAssignment_8_0)
{ after(grammarAccess.getDataflowRegionAccess().getEquationsAssignment_8_0()); }
)

    |(
{ before(grammarAccess.getDataflowRegionAccess().getNodesAssignment_8_1()); }
(rule__DataflowRegion__NodesAssignment_8_1)
{ after(grammarAccess.getDataflowRegionAccess().getNodesAssignment_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquationAccess().getGroup_1_0()); }
(rule__Equation__Group_1_0__0)
{ after(grammarAccess.getEquationAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getEquationAccess().getGroup_1_1()); }
(rule__Equation__Group_1_1__0)
{ after(grammarAccess.getEquationAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SCChart__Alternatives_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCChartAccess().getGroup_4_0()); }
(rule__SCChart__Group_4_0__0)
{ after(grammarAccess.getSCChartAccess().getGroup_4_0()); }
)

    |(
{ before(grammarAccess.getSCChartAccess().getGroup_4_1()); }
(rule__SCChart__Group_4_1__0)
{ after(grammarAccess.getSCChartAccess().getGroup_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SCChart__Alternatives_4_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCChartAccess().getDeclarationsAssignment_4_1_1_0()); }
(rule__SCChart__DeclarationsAssignment_4_1_1_0)
{ after(grammarAccess.getSCChartAccess().getDeclarationsAssignment_4_1_1_0()); }
)

    |(
{ before(grammarAccess.getSCChartAccess().getLocalActionsAssignment_4_1_1_1()); }
(rule__SCChart__LocalActionsAssignment_4_1_1_1)
{ after(grammarAccess.getSCChartAccess().getLocalActionsAssignment_4_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SCChart__Alternatives_4_1_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCChartAccess().getRegionsAssignment_4_1_2_0_0()); }
(rule__SCChart__RegionsAssignment_4_1_2_0_0)
{ after(grammarAccess.getSCChartAccess().getRegionsAssignment_4_1_2_0_0()); }
)

    |(
{ before(grammarAccess.getSCChartAccess().getRegionsAssignment_4_1_2_0_1()); }
(rule__SCChart__RegionsAssignment_4_1_2_0_1)
{ after(grammarAccess.getSCChartAccess().getRegionsAssignment_4_1_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Region__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionAccess().getControlflowRegionParserRuleCall_0()); }
	ruleControlflowRegion
{ after(grammarAccess.getRegionAccess().getControlflowRegionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getRegionAccess().getDataflowRegionParserRuleCall_1()); }
	ruleDataflowRegion
{ after(grammarAccess.getRegionAccess().getDataflowRegionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getGroup_1_0()); }
(rule__State__Group_1_0__0)
{ after(grammarAccess.getStateAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getStateAccess().getGroup_1_1()); }
(rule__State__Group_1_1__0)
{ after(grammarAccess.getStateAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__Alternatives_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getGroup_6_0()); }
(rule__State__Group_6_0__0)
{ after(grammarAccess.getStateAccess().getGroup_6_0()); }
)

    |(
{ before(grammarAccess.getStateAccess().getGroup_6_1()); }
(rule__State__Group_6_1__0)
{ after(grammarAccess.getStateAccess().getGroup_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__Alternatives_6_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getDeclarationsAssignment_6_1_1_0()); }
(rule__State__DeclarationsAssignment_6_1_1_0)
{ after(grammarAccess.getStateAccess().getDeclarationsAssignment_6_1_1_0()); }
)

    |(
{ before(grammarAccess.getStateAccess().getLocalActionsAssignment_6_1_1_1()); }
(rule__State__LocalActionsAssignment_6_1_1_1)
{ after(grammarAccess.getStateAccess().getLocalActionsAssignment_6_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__Alternatives_6_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getRegionsAssignment_6_1_2_0()); }
(rule__State__RegionsAssignment_6_1_2_0)
{ after(grammarAccess.getStateAccess().getRegionsAssignment_6_1_2_0()); }
)

    |(
{ before(grammarAccess.getStateAccess().getRegionsAssignment_6_1_2_1()); }
(rule__State__RegionsAssignment_6_1_2_1)
{ after(grammarAccess.getStateAccess().getRegionsAssignment_6_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getReferenceNodeParserRuleCall_0()); }
	ruleReferenceNode
{ after(grammarAccess.getNodeAccess().getReferenceNodeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNodeAccess().getCallNodeParserRuleCall_1()); }
	ruleCallNode
{ after(grammarAccess.getNodeAccess().getCallNodeParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getNodeAccess().getDefineNodeParserRuleCall_2()); }
	ruleDefineNode
{ after(grammarAccess.getNodeAccess().getDefineNodeParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefineNode__Alternatives_11
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineNodeAccess().getGroup_11_0()); }
(rule__DefineNode__Group_11_0__0)*
{ after(grammarAccess.getDefineNodeAccess().getGroup_11_0()); }
)

    |(
{ before(grammarAccess.getDefineNodeAccess().getStatesAssignment_11_1()); }
(rule__DefineNode__StatesAssignment_11_1)*
{ after(grammarAccess.getDefineNodeAccess().getStatesAssignment_11_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalAction__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalActionAccess().getEntryActionParserRuleCall_0()); }
	ruleEntryAction
{ after(grammarAccess.getLocalActionAccess().getEntryActionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getLocalActionAccess().getDuringActionParserRuleCall_1()); }
	ruleDuringAction
{ after(grammarAccess.getLocalActionAccess().getDuringActionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getLocalActionAccess().getExitActionParserRuleCall_2()); }
	ruleExitAction
{ after(grammarAccess.getLocalActionAccess().getExitActionParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getLocalActionAccess().getSuspendActionParserRuleCall_3()); }
	ruleSuspendAction
{ after(grammarAccess.getLocalActionAccess().getSuspendActionParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getLocalActionAccess().getIterateActionParserRuleCall_4()); }
	ruleIterateAction
{ after(grammarAccess.getLocalActionAccess().getIterateActionParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getTypeAssignment_1_0()); }
(rule__Transition__TypeAssignment_1_0)
{ after(grammarAccess.getTransitionAccess().getTypeAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getTransitionAccess().getTypeAssignment_1_1()); }
(rule__Transition__TypeAssignment_1_1)
{ after(grammarAccess.getTransitionAccess().getTypeAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Alternatives_3_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getGroup_3_3_0()); }
(rule__Transition__Group_3_3_0__0)
{ after(grammarAccess.getTransitionAccess().getGroup_3_3_0()); }
)

    |(
{ before(grammarAccess.getTransitionAccess().getGroup_3_3_1()); }
(rule__Transition__Group_3_3_1__0)
{ after(grammarAccess.getTransitionAccess().getGroup_3_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Alternatives_3_3_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getGroup_3_3_0_0_0()); }
(rule__Transition__Group_3_3_0_0_0__0)
{ after(grammarAccess.getTransitionAccess().getGroup_3_3_0_0_0()); }
)

    |(
{ before(grammarAccess.getTransitionAccess().getWithKeyword_3_3_0_0_1()); }

	'with' 

{ after(grammarAccess.getTransitionAccess().getWithKeyword_3_3_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Alternatives_3_3_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getSolidusKeyword_3_3_0_1_0_0()); }

	'/' 

{ after(grammarAccess.getTransitionAccess().getSolidusKeyword_3_3_0_1_0_0()); }
)

    |(
{ before(grammarAccess.getTransitionAccess().getDoKeyword_3_3_0_1_0_1()); }

	'do' 

{ after(grammarAccess.getTransitionAccess().getDoKeyword_3_3_0_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getGroup_1_0()); }
(rule__Declaration__Group_1_0__0)
{ after(grammarAccess.getDeclarationAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getDeclarationAccess().getGroup_1_1()); }
(rule__Declaration__Group_1_1__0)
{ after(grammarAccess.getDeclarationAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Alternatives_1_0_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getGroup_1_0_5_0()); }
(rule__Declaration__Group_1_0_5_0__0)
{ after(grammarAccess.getDeclarationAccess().getGroup_1_0_5_0()); }
)

    |(
{ before(grammarAccess.getDeclarationAccess().getSignalAssignment_1_0_5_1()); }
(rule__Declaration__SignalAssignment_1_0_5_1)
{ after(grammarAccess.getDeclarationAccess().getSignalAssignment_1_0_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Effect__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEffectAccess().getEmissionParserRuleCall_0()); }
	ruleEmission
{ after(grammarAccess.getEffectAccess().getEmissionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEffectAccess().getAssignmentParserRuleCall_1()); }
	ruleAssignment
{ after(grammarAccess.getEffectAccess().getAssignmentParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getEffectAccess().getTextEffectParserRuleCall_2()); }
	ruleTextEffect
{ after(grammarAccess.getEffectAccess().getTextEffectParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getEffectAccess().getFunctionCallEffectParserRuleCall_3()); }
	ruleFunctionCallEffect
{ after(grammarAccess.getEffectAccess().getFunctionCallEffectParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallEffect__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getGroup_2_0()); }
(rule__FunctionCallEffect__Group_2_0__0)
{ after(grammarAccess.getFunctionCallEffectAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getFunctionCallEffectAccess().getLeftParenthesisRightParenthesisKeyword_2_1()); }

	'()' 

{ after(grammarAccess.getFunctionCallEffectAccess().getLeftParenthesisRightParenthesisKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getBoolExpressionParserRuleCall_0()); }
	ruleBoolExpression
{ after(grammarAccess.getExpressionAccess().getBoolExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getValuedExpressionParserRuleCall_1()); }
	ruleValuedExpression
{ after(grammarAccess.getExpressionAccess().getValuedExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrAndExpression__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAndExpressionAccess().getGroup_1_0()); }
(rule__OrAndExpression__Group_1_0__0)*
{ after(grammarAccess.getOrAndExpressionAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getOrAndExpressionAccess().getGroup_1_1()); }
(rule__OrAndExpression__Group_1_1__0)*
{ after(grammarAccess.getOrAndExpressionAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrAndExpression__OperatorAlternatives_1_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAndExpressionAccess().getOperatorOrOperatorEnumRuleCall_1_0_1_0_0()); }
	ruleOrOperator
{ after(grammarAccess.getOrAndExpressionAccess().getOperatorOrOperatorEnumRuleCall_1_0_1_0_0()); }
)

    |(
{ before(grammarAccess.getOrAndExpressionAccess().getOperatorLogicalOrOperatorEnumRuleCall_1_0_1_0_1()); }
	ruleLogicalOrOperator
{ after(grammarAccess.getOrAndExpressionAccess().getOperatorLogicalOrOperatorEnumRuleCall_1_0_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrAndExpression__OperatorAlternatives_1_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAndExpressionAccess().getOperatorAndOperatorEnumRuleCall_1_1_1_0_0()); }
	ruleAndOperator
{ after(grammarAccess.getOrAndExpressionAccess().getOperatorAndOperatorEnumRuleCall_1_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getOrAndExpressionAccess().getOperatorLogicalAndOperatorEnumRuleCall_1_1_1_0_1()); }
	ruleLogicalAndOperator
{ after(grammarAccess.getOrAndExpressionAccess().getOperatorLogicalAndOperatorEnumRuleCall_1_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperationAccess().getGroup_0()); }
(rule__CompareOperation__Group_0__0)
{ after(grammarAccess.getCompareOperationAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getCompareOperationAccess().getNotExpressionParserRuleCall_1()); }
	ruleNotExpression
{ after(grammarAccess.getCompareOperationAccess().getNotExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NotOrValuedExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotOrValuedExpressionAccess().getValuedExpressionParserRuleCall_0()); }
	ruleValuedExpression
{ after(grammarAccess.getNotOrValuedExpressionAccess().getValuedExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNotOrValuedExpressionAccess().getNotExpressionParserRuleCall_1()); }
	ruleNotExpression
{ after(grammarAccess.getNotOrValuedExpressionAccess().getNotExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NotExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotExpressionAccess().getGroup_0()); }
(rule__NotExpression__Group_0__0)
{ after(grammarAccess.getNotExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getNotExpressionAccess().getAtomicExpressionParserRuleCall_1()); }
	ruleAtomicExpression
{ after(grammarAccess.getNotExpressionAccess().getAtomicExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NegExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegExpressionAccess().getGroup_0()); }
(rule__NegExpression__Group_0__0)
{ after(grammarAccess.getNegExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getNegExpressionAccess().getAtomicValuedExpressionParserRuleCall_1()); }
	ruleAtomicValuedExpression
{ after(grammarAccess.getNegExpressionAccess().getAtomicValuedExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpressionAccess().getBoolValueParserRuleCall_0()); }
	ruleBoolValue
{ after(grammarAccess.getAtomicExpressionAccess().getBoolValueParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAtomicExpressionAccess().getValuedObjectTestExpressionParserRuleCall_1()); }
	ruleValuedObjectTestExpression
{ after(grammarAccess.getAtomicExpressionAccess().getValuedObjectTestExpressionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getAtomicExpressionAccess().getGroup_2()); }
(rule__AtomicExpression__Group_2__0)
{ after(grammarAccess.getAtomicExpressionAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getAtomicExpressionAccess().getFunctionCallParserRuleCall_3()); }
	ruleFunctionCall
{ after(grammarAccess.getAtomicExpressionAccess().getFunctionCallParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getAtomicExpressionAccess().getTextExpressionParserRuleCall_4()); }
	ruleTextExpression
{ after(grammarAccess.getAtomicExpressionAccess().getTextExpressionParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicValuedExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicValuedExpressionAccess().getIntValueParserRuleCall_0()); }
	ruleIntValue
{ after(grammarAccess.getAtomicValuedExpressionAccess().getIntValueParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAtomicValuedExpressionAccess().getFloatValueParserRuleCall_1()); }
	ruleFloatValue
{ after(grammarAccess.getAtomicValuedExpressionAccess().getFloatValueParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getAtomicValuedExpressionAccess().getStringValueParserRuleCall_2()); }
	ruleStringValue
{ after(grammarAccess.getAtomicValuedExpressionAccess().getStringValueParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getAtomicValuedExpressionAccess().getGroup_3()); }
(rule__AtomicValuedExpression__Group_3__0)
{ after(grammarAccess.getAtomicValuedExpressionAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getAtomicValuedExpressionAccess().getAtomicExpressionParserRuleCall_4()); }
	ruleAtomicExpression
{ after(grammarAccess.getAtomicValuedExpressionAccess().getAtomicExpressionParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectTestExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getGroup_0()); }
(rule__ValuedObjectTestExpression__Group_0__0)
{ after(grammarAccess.getValuedObjectTestExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getValuedObjectReferenceParserRuleCall_1()); }
	ruleValuedObjectReference
{ after(grammarAccess.getValuedObjectTestExpressionAccess().getValuedObjectReferenceParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectTestExpression__OperatorAlternatives_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorPreOperatorEnumRuleCall_0_1_0_0()); }
	rulePreOperator
{ after(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorPreOperatorEnumRuleCall_0_1_0_0()); }
)

    |(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorValOperatorEnumRuleCall_0_1_0_1()); }
	ruleValOperator
{ after(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorValOperatorEnumRuleCall_0_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getGroup_2_0()); }
(rule__FunctionCall__Group_2_0__0)
{ after(grammarAccess.getFunctionCallAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getFunctionCallAccess().getLeftParenthesisRightParenthesisKeyword_2_1()); }

	'()' 

{ after(grammarAccess.getFunctionCallAccess().getLeftParenthesisRightParenthesisKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getCommentAnnotationParserRuleCall_0()); }
	ruleCommentAnnotation
{ after(grammarAccess.getAnnotationAccess().getCommentAnnotationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAnnotationAccess().getTagAnnotationParserRuleCall_1()); }
	ruleTagAnnotation
{ after(grammarAccess.getAnnotationAccess().getTagAnnotationParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getAnnotationAccess().getKeyStringValueAnnotationParserRuleCall_2()); }
	ruleKeyStringValueAnnotation
{ after(grammarAccess.getAnnotationAccess().getKeyStringValueAnnotationParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getAnnotationAccess().getTypedKeyStringValueAnnotationParserRuleCall_3()); }
	ruleTypedKeyStringValueAnnotation
{ after(grammarAccess.getAnnotationAccess().getTypedKeyStringValueAnnotationParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getAnnotationAccess().getKeyBooleanValueAnnotationParserRuleCall_4()); }
	ruleKeyBooleanValueAnnotation
{ after(grammarAccess.getAnnotationAccess().getKeyBooleanValueAnnotationParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getAnnotationAccess().getKeyIntValueAnnotationParserRuleCall_5()); }
	ruleKeyIntValueAnnotation
{ after(grammarAccess.getAnnotationAccess().getKeyIntValueAnnotationParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getAnnotationAccess().getKeyFloatValueAnnotationParserRuleCall_6()); }
	ruleKeyFloatValueAnnotation
{ after(grammarAccess.getAnnotationAccess().getKeyFloatValueAnnotationParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EString__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	RULE_STRING
{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateTypeAccess().getNORMALEnumLiteralDeclaration_0()); }
(	'normal' 
)
{ after(grammarAccess.getStateTypeAccess().getNORMALEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getStateTypeAccess().getCONNECTOREnumLiteralDeclaration_1()); }
(	'connector' 
)
{ after(grammarAccess.getStateTypeAccess().getCONNECTOREnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getStateTypeAccess().getREFERENCEEnumLiteralDeclaration_2()); }
(	'reference' 
)
{ after(grammarAccess.getStateTypeAccess().getREFERENCEEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getStateTypeAccess().getTEXTUALEnumLiteralDeclaration_3()); }
(	'textual' 
)
{ after(grammarAccess.getStateTypeAccess().getTEXTUALEnumLiteralDeclaration_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionTypeAccess().getWEAKABORTEnumLiteralDeclaration_0()); }
(	'goto' 
)
{ after(grammarAccess.getTransitionTypeAccess().getWEAKABORTEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getTransitionTypeAccess().getSTRONGABORTEnumLiteralDeclaration_1()); }
(	'abort to' 
)
{ after(grammarAccess.getTransitionTypeAccess().getSTRONGABORTEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getTransitionTypeAccess().getTERMINATIONEnumLiteralDeclaration_2()); }
(	'join to' 
)
{ after(grammarAccess.getTransitionTypeAccess().getTERMINATIONEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionTypeLegacy__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionTypeLegacyAccess().getWEAKABORTEnumLiteralDeclaration_0()); }
(	'-->' 
)
{ after(grammarAccess.getTransitionTypeLegacyAccess().getWEAKABORTEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getTransitionTypeLegacyAccess().getSTRONGABORTEnumLiteralDeclaration_1()); }
(	'o->' 
)
{ after(grammarAccess.getTransitionTypeLegacyAccess().getSTRONGABORTEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getTransitionTypeLegacyAccess().getTERMINATIONEnumLiteralDeclaration_2()); }
(	'>->' 
)
{ after(grammarAccess.getTransitionTypeLegacyAccess().getTERMINATIONEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HistoryType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHistoryTypeAccess().getRESETEnumLiteralDeclaration_0()); }
(	'reset' 
)
{ after(grammarAccess.getHistoryTypeAccess().getRESETEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getHistoryTypeAccess().getSHALLOWEnumLiteralDeclaration_1()); }
(	'shallow history' 
)
{ after(grammarAccess.getHistoryTypeAccess().getSHALLOWEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getHistoryTypeAccess().getDEEPEnumLiteralDeclaration_2()); }
(	'history' 
)
{ after(grammarAccess.getHistoryTypeAccess().getDEEPEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperatorAccess().getEQEnumLiteralDeclaration_0()); }
(	'==' 
)
{ after(grammarAccess.getCompareOperatorAccess().getEQEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getCompareOperatorAccess().getLTEnumLiteralDeclaration_1()); }
(	'<' 
)
{ after(grammarAccess.getCompareOperatorAccess().getLTEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getCompareOperatorAccess().getLEQEnumLiteralDeclaration_2()); }
(	'<=' 
)
{ after(grammarAccess.getCompareOperatorAccess().getLEQEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getCompareOperatorAccess().getGTEnumLiteralDeclaration_3()); }
(	'>' 
)
{ after(grammarAccess.getCompareOperatorAccess().getGTEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getCompareOperatorAccess().getGEQEnumLiteralDeclaration_4()); }
(	'>=' 
)
{ after(grammarAccess.getCompareOperatorAccess().getGEQEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getCompareOperatorAccess().getNEEnumLiteralDeclaration_5()); }
(	'<>' 
)
{ after(grammarAccess.getCompareOperatorAccess().getNEEnumLiteralDeclaration_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValueType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueTypeAccess().getPUREEnumLiteralDeclaration_0()); }
(	'pure' 
)
{ after(grammarAccess.getValueTypeAccess().getPUREEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getValueTypeAccess().getBOOLEnumLiteralDeclaration_1()); }
(	'bool' 
)
{ after(grammarAccess.getValueTypeAccess().getBOOLEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getValueTypeAccess().getUNSIGNEDEnumLiteralDeclaration_2()); }
(	'unsigned' 
)
{ after(grammarAccess.getValueTypeAccess().getUNSIGNEDEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getValueTypeAccess().getINTEnumLiteralDeclaration_3()); }
(	'int' 
)
{ after(grammarAccess.getValueTypeAccess().getINTEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getValueTypeAccess().getFLOATEnumLiteralDeclaration_4()); }
(	'float' 
)
{ after(grammarAccess.getValueTypeAccess().getFLOATEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getValueTypeAccess().getSTRINGEnumLiteralDeclaration_5()); }
(	'string' 
)
{ after(grammarAccess.getValueTypeAccess().getSTRINGEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getValueTypeAccess().getHOSTEnumLiteralDeclaration_6()); }
(	'host' 
)
{ after(grammarAccess.getValueTypeAccess().getHOSTEnumLiteralDeclaration_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CombineOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCombineOperatorAccess().getNONEEnumLiteralDeclaration_0()); }
(	'none' 
)
{ after(grammarAccess.getCombineOperatorAccess().getNONEEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getCombineOperatorAccess().getADDEnumLiteralDeclaration_1()); }
(	'+' 
)
{ after(grammarAccess.getCombineOperatorAccess().getADDEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getCombineOperatorAccess().getMULTEnumLiteralDeclaration_2()); }
(	'*' 
)
{ after(grammarAccess.getCombineOperatorAccess().getMULTEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getCombineOperatorAccess().getMAXEnumLiteralDeclaration_3()); }
(	'max' 
)
{ after(grammarAccess.getCombineOperatorAccess().getMAXEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getCombineOperatorAccess().getMINEnumLiteralDeclaration_4()); }
(	'min' 
)
{ after(grammarAccess.getCombineOperatorAccess().getMINEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getCombineOperatorAccess().getOREnumLiteralDeclaration_5()); }
(	'|' 
)
{ after(grammarAccess.getCombineOperatorAccess().getOREnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getCombineOperatorAccess().getANDEnumLiteralDeclaration_6()); }
(	'&' 
)
{ after(grammarAccess.getCombineOperatorAccess().getANDEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getCombineOperatorAccess().getHOSTEnumLiteralDeclaration_7()); }
(	'host' 
)
{ after(grammarAccess.getCombineOperatorAccess().getHOSTEnumLiteralDeclaration_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__SingleControlflowRegion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleControlflowRegion__Group__0__Impl
	rule__SingleControlflowRegion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleControlflowRegion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleControlflowRegionAccess().getControlflowRegionAction_0()); }
(

)
{ after(grammarAccess.getSingleControlflowRegionAccess().getControlflowRegionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleControlflowRegion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleControlflowRegion__Group__1__Impl
	rule__SingleControlflowRegion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleControlflowRegion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleControlflowRegionAccess().getGroup_1()); }
(rule__SingleControlflowRegion__Group_1__0)?
{ after(grammarAccess.getSingleControlflowRegionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleControlflowRegion__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleControlflowRegion__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleControlflowRegion__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleControlflowRegionAccess().getStatesAssignment_2()); }
(rule__SingleControlflowRegion__StatesAssignment_2)*
{ after(grammarAccess.getSingleControlflowRegionAccess().getStatesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SingleControlflowRegion__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleControlflowRegion__Group_1__0__Impl
	rule__SingleControlflowRegion__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleControlflowRegion__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleControlflowRegionAccess().getAnnotationsAssignment_1_0()); }
(rule__SingleControlflowRegion__AnnotationsAssignment_1_0)*
{ after(grammarAccess.getSingleControlflowRegionAccess().getAnnotationsAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleControlflowRegion__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleControlflowRegion__Group_1__1__Impl
	rule__SingleControlflowRegion__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleControlflowRegion__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleControlflowRegionAccess().getRegionKeyword_1_1()); }

	'region' 

{ after(grammarAccess.getSingleControlflowRegionAccess().getRegionKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleControlflowRegion__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleControlflowRegion__Group_1__2__Impl
	rule__SingleControlflowRegion__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleControlflowRegion__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleControlflowRegionAccess().getIdAssignment_1_2()); }
(rule__SingleControlflowRegion__IdAssignment_1_2)?
{ after(grammarAccess.getSingleControlflowRegionAccess().getIdAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleControlflowRegion__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleControlflowRegion__Group_1__3__Impl
	rule__SingleControlflowRegion__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleControlflowRegion__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleControlflowRegionAccess().getLabelAssignment_1_3()); }
(rule__SingleControlflowRegion__LabelAssignment_1_3)?
{ after(grammarAccess.getSingleControlflowRegionAccess().getLabelAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleControlflowRegion__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleControlflowRegion__Group_1__4__Impl
	rule__SingleControlflowRegion__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleControlflowRegion__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleControlflowRegionAccess().getGroup_1_4()); }
(rule__SingleControlflowRegion__Group_1_4__0)?
{ after(grammarAccess.getSingleControlflowRegionAccess().getGroup_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleControlflowRegion__Group_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleControlflowRegion__Group_1__5__Impl
	rule__SingleControlflowRegion__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleControlflowRegion__Group_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleControlflowRegionAccess().getColonKeyword_1_5()); }

	':' 

{ after(grammarAccess.getSingleControlflowRegionAccess().getColonKeyword_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleControlflowRegion__Group_1__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleControlflowRegion__Group_1__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleControlflowRegion__Group_1__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleControlflowRegionAccess().getDeclarationsAssignment_1_6()); }
(rule__SingleControlflowRegion__DeclarationsAssignment_1_6)*
{ after(grammarAccess.getSingleControlflowRegionAccess().getDeclarationsAssignment_1_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__SingleControlflowRegion__Group_1_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleControlflowRegion__Group_1_4__0__Impl
	rule__SingleControlflowRegion__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleControlflowRegion__Group_1_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleControlflowRegionAccess().getLeftSquareBracketKeyword_1_4_0()); }

	'[' 

{ after(grammarAccess.getSingleControlflowRegionAccess().getLeftSquareBracketKeyword_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleControlflowRegion__Group_1_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleControlflowRegion__Group_1_4__1__Impl
	rule__SingleControlflowRegion__Group_1_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleControlflowRegion__Group_1_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleControlflowRegionAccess().getForAssignment_1_4_1()); }
(rule__SingleControlflowRegion__ForAssignment_1_4_1)
{ after(grammarAccess.getSingleControlflowRegionAccess().getForAssignment_1_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleControlflowRegion__Group_1_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleControlflowRegion__Group_1_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleControlflowRegion__Group_1_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleControlflowRegionAccess().getRightSquareBracketKeyword_1_4_2()); }

	']' 

{ after(grammarAccess.getSingleControlflowRegionAccess().getRightSquareBracketKeyword_1_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SingleDataflowRegion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleDataflowRegion__Group__0__Impl
	rule__SingleDataflowRegion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleDataflowRegion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleDataflowRegionAccess().getDataflowRegionAction_0()); }
(

)
{ after(grammarAccess.getSingleDataflowRegionAccess().getDataflowRegionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleDataflowRegion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleDataflowRegion__Group__1__Impl
	rule__SingleDataflowRegion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleDataflowRegion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleDataflowRegionAccess().getGroup_1()); }
(rule__SingleDataflowRegion__Group_1__0)
{ after(grammarAccess.getSingleDataflowRegionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleDataflowRegion__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleDataflowRegion__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleDataflowRegion__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleDataflowRegionAccess().getAlternatives_2()); }
(rule__SingleDataflowRegion__Alternatives_2)*
{ after(grammarAccess.getSingleDataflowRegionAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SingleDataflowRegion__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleDataflowRegion__Group_1__0__Impl
	rule__SingleDataflowRegion__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleDataflowRegion__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleDataflowRegionAccess().getAnnotationsAssignment_1_0()); }
(rule__SingleDataflowRegion__AnnotationsAssignment_1_0)*
{ after(grammarAccess.getSingleDataflowRegionAccess().getAnnotationsAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleDataflowRegion__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleDataflowRegion__Group_1__1__Impl
	rule__SingleDataflowRegion__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleDataflowRegion__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleDataflowRegionAccess().getDataflowKeyword_1_1()); }

	'dataflow' 

{ after(grammarAccess.getSingleDataflowRegionAccess().getDataflowKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleDataflowRegion__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleDataflowRegion__Group_1__2__Impl
	rule__SingleDataflowRegion__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleDataflowRegion__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleDataflowRegionAccess().getIdAssignment_1_2()); }
(rule__SingleDataflowRegion__IdAssignment_1_2)?
{ after(grammarAccess.getSingleDataflowRegionAccess().getIdAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleDataflowRegion__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleDataflowRegion__Group_1__3__Impl
	rule__SingleDataflowRegion__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleDataflowRegion__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleDataflowRegionAccess().getLabelAssignment_1_3()); }
(rule__SingleDataflowRegion__LabelAssignment_1_3)?
{ after(grammarAccess.getSingleDataflowRegionAccess().getLabelAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleDataflowRegion__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleDataflowRegion__Group_1__4__Impl
	rule__SingleDataflowRegion__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleDataflowRegion__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleDataflowRegionAccess().getGroup_1_4()); }
(rule__SingleDataflowRegion__Group_1_4__0)?
{ after(grammarAccess.getSingleDataflowRegionAccess().getGroup_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleDataflowRegion__Group_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleDataflowRegion__Group_1__5__Impl
	rule__SingleDataflowRegion__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleDataflowRegion__Group_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleDataflowRegionAccess().getColonKeyword_1_5()); }

	':' 

{ after(grammarAccess.getSingleDataflowRegionAccess().getColonKeyword_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleDataflowRegion__Group_1__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleDataflowRegion__Group_1__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleDataflowRegion__Group_1__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleDataflowRegionAccess().getDeclarationsAssignment_1_6()); }
(rule__SingleDataflowRegion__DeclarationsAssignment_1_6)*
{ after(grammarAccess.getSingleDataflowRegionAccess().getDeclarationsAssignment_1_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__SingleDataflowRegion__Group_1_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleDataflowRegion__Group_1_4__0__Impl
	rule__SingleDataflowRegion__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleDataflowRegion__Group_1_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleDataflowRegionAccess().getLeftSquareBracketKeyword_1_4_0()); }

	'[' 

{ after(grammarAccess.getSingleDataflowRegionAccess().getLeftSquareBracketKeyword_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleDataflowRegion__Group_1_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleDataflowRegion__Group_1_4__1__Impl
	rule__SingleDataflowRegion__Group_1_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleDataflowRegion__Group_1_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleDataflowRegionAccess().getForAssignment_1_4_1()); }
(rule__SingleDataflowRegion__ForAssignment_1_4_1)
{ after(grammarAccess.getSingleDataflowRegionAccess().getForAssignment_1_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleDataflowRegion__Group_1_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleDataflowRegion__Group_1_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleDataflowRegion__Group_1_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleDataflowRegionAccess().getRightSquareBracketKeyword_1_4_2()); }

	']' 

{ after(grammarAccess.getSingleDataflowRegionAccess().getRightSquareBracketKeyword_1_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__For__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For__Group__0__Impl
	rule__For__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAccess().getForAction_0()); }
(

)
{ after(grammarAccess.getForAccess().getForAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For__Group__1__Impl
	rule__For__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAccess().getValuedObjectAssignment_1()); }
(rule__For__ValuedObjectAssignment_1)
{ after(grammarAccess.getForAccess().getValuedObjectAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For__Group__2__Impl
	rule__For__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getForAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For__Group__3__Impl
	rule__For__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAccess().getFromAssignment_3()); }
(rule__For__FromAssignment_3)
{ after(grammarAccess.getForAccess().getFromAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For__Group__4__Impl
	rule__For__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAccess().getFullStopFullStopKeyword_4()); }

	'..' 

{ after(grammarAccess.getForAccess().getFullStopFullStopKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAccess().getToAssignment_5()); }
(rule__For__ToAssignment_5)
{ after(grammarAccess.getForAccess().getToAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ControlflowRegion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ControlflowRegion__Group__0__Impl
	rule__ControlflowRegion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlflowRegion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlflowRegionAccess().getControlflowRegionAction_0()); }
(

)
{ after(grammarAccess.getControlflowRegionAccess().getControlflowRegionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ControlflowRegion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ControlflowRegion__Group__1__Impl
	rule__ControlflowRegion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlflowRegion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlflowRegionAccess().getAnnotationsAssignment_1()); }
(rule__ControlflowRegion__AnnotationsAssignment_1)*
{ after(grammarAccess.getControlflowRegionAccess().getAnnotationsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ControlflowRegion__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ControlflowRegion__Group__2__Impl
	rule__ControlflowRegion__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlflowRegion__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlflowRegionAccess().getRegionKeyword_2()); }

	'region' 

{ after(grammarAccess.getControlflowRegionAccess().getRegionKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ControlflowRegion__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ControlflowRegion__Group__3__Impl
	rule__ControlflowRegion__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlflowRegion__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlflowRegionAccess().getIdAssignment_3()); }
(rule__ControlflowRegion__IdAssignment_3)?
{ after(grammarAccess.getControlflowRegionAccess().getIdAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ControlflowRegion__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ControlflowRegion__Group__4__Impl
	rule__ControlflowRegion__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlflowRegion__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlflowRegionAccess().getLabelAssignment_4()); }
(rule__ControlflowRegion__LabelAssignment_4)?
{ after(grammarAccess.getControlflowRegionAccess().getLabelAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ControlflowRegion__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ControlflowRegion__Group__5__Impl
	rule__ControlflowRegion__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlflowRegion__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlflowRegionAccess().getGroup_5()); }
(rule__ControlflowRegion__Group_5__0)?
{ after(grammarAccess.getControlflowRegionAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ControlflowRegion__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ControlflowRegion__Group__6__Impl
	rule__ControlflowRegion__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlflowRegion__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlflowRegionAccess().getColonKeyword_6()); }

	':' 

{ after(grammarAccess.getControlflowRegionAccess().getColonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ControlflowRegion__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ControlflowRegion__Group__7__Impl
	rule__ControlflowRegion__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlflowRegion__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlflowRegionAccess().getDeclarationsAssignment_7()); }
(rule__ControlflowRegion__DeclarationsAssignment_7)*
{ after(grammarAccess.getControlflowRegionAccess().getDeclarationsAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ControlflowRegion__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ControlflowRegion__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlflowRegion__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getControlflowRegionAccess().getStatesAssignment_8()); }
(rule__ControlflowRegion__StatesAssignment_8)
{ after(grammarAccess.getControlflowRegionAccess().getStatesAssignment_8()); }
)
(
{ before(grammarAccess.getControlflowRegionAccess().getStatesAssignment_8()); }
(rule__ControlflowRegion__StatesAssignment_8)*
{ after(grammarAccess.getControlflowRegionAccess().getStatesAssignment_8()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__ControlflowRegion__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ControlflowRegion__Group_5__0__Impl
	rule__ControlflowRegion__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlflowRegion__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlflowRegionAccess().getLeftSquareBracketKeyword_5_0()); }

	'[' 

{ after(grammarAccess.getControlflowRegionAccess().getLeftSquareBracketKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ControlflowRegion__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ControlflowRegion__Group_5__1__Impl
	rule__ControlflowRegion__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlflowRegion__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlflowRegionAccess().getForAssignment_5_1()); }
(rule__ControlflowRegion__ForAssignment_5_1)
{ after(grammarAccess.getControlflowRegionAccess().getForAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ControlflowRegion__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ControlflowRegion__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlflowRegion__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlflowRegionAccess().getRightSquareBracketKeyword_5_2()); }

	']' 

{ after(grammarAccess.getControlflowRegionAccess().getRightSquareBracketKeyword_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DataflowRegion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataflowRegion__Group__0__Impl
	rule__DataflowRegion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowRegion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataflowRegionAccess().getDataflowRegionAction_0()); }
(

)
{ after(grammarAccess.getDataflowRegionAccess().getDataflowRegionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataflowRegion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataflowRegion__Group__1__Impl
	rule__DataflowRegion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowRegion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataflowRegionAccess().getAnnotationsAssignment_1()); }
(rule__DataflowRegion__AnnotationsAssignment_1)*
{ after(grammarAccess.getDataflowRegionAccess().getAnnotationsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataflowRegion__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataflowRegion__Group__2__Impl
	rule__DataflowRegion__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowRegion__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataflowRegionAccess().getDataflowKeyword_2()); }

	'dataflow' 

{ after(grammarAccess.getDataflowRegionAccess().getDataflowKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataflowRegion__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataflowRegion__Group__3__Impl
	rule__DataflowRegion__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowRegion__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataflowRegionAccess().getIdAssignment_3()); }
(rule__DataflowRegion__IdAssignment_3)?
{ after(grammarAccess.getDataflowRegionAccess().getIdAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataflowRegion__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataflowRegion__Group__4__Impl
	rule__DataflowRegion__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowRegion__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataflowRegionAccess().getLabelAssignment_4()); }
(rule__DataflowRegion__LabelAssignment_4)?
{ after(grammarAccess.getDataflowRegionAccess().getLabelAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataflowRegion__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataflowRegion__Group__5__Impl
	rule__DataflowRegion__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowRegion__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataflowRegionAccess().getGroup_5()); }
(rule__DataflowRegion__Group_5__0)?
{ after(grammarAccess.getDataflowRegionAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataflowRegion__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataflowRegion__Group__6__Impl
	rule__DataflowRegion__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowRegion__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataflowRegionAccess().getColonKeyword_6()); }

	':' 

{ after(grammarAccess.getDataflowRegionAccess().getColonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataflowRegion__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataflowRegion__Group__7__Impl
	rule__DataflowRegion__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowRegion__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataflowRegionAccess().getDeclarationsAssignment_7()); }
(rule__DataflowRegion__DeclarationsAssignment_7)*
{ after(grammarAccess.getDataflowRegionAccess().getDeclarationsAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataflowRegion__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataflowRegion__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowRegion__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataflowRegionAccess().getAlternatives_8()); }
(rule__DataflowRegion__Alternatives_8)*
{ after(grammarAccess.getDataflowRegionAccess().getAlternatives_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__DataflowRegion__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataflowRegion__Group_5__0__Impl
	rule__DataflowRegion__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowRegion__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataflowRegionAccess().getLeftSquareBracketKeyword_5_0()); }

	'[' 

{ after(grammarAccess.getDataflowRegionAccess().getLeftSquareBracketKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataflowRegion__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataflowRegion__Group_5__1__Impl
	rule__DataflowRegion__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowRegion__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataflowRegionAccess().getForAssignment_5_1()); }
(rule__DataflowRegion__ForAssignment_5_1)
{ after(grammarAccess.getDataflowRegionAccess().getForAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataflowRegion__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataflowRegion__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowRegion__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataflowRegionAccess().getRightSquareBracketKeyword_5_2()); }

	']' 

{ after(grammarAccess.getDataflowRegionAccess().getRightSquareBracketKeyword_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Equation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Equation__Group__0__Impl
	rule__Equation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquationAccess().getEquationAction_0()); }
(

)
{ after(grammarAccess.getEquationAccess().getEquationAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Equation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Equation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquationAccess().getAlternatives_1()); }
(rule__Equation__Alternatives_1)
{ after(grammarAccess.getEquationAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Equation__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Equation__Group_1_0__0__Impl
	rule__Equation__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquationAccess().getValuedObjectAssignment_1_0_0()); }
(rule__Equation__ValuedObjectAssignment_1_0_0)
{ after(grammarAccess.getEquationAccess().getValuedObjectAssignment_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Equation__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Equation__Group_1_0__1__Impl
	rule__Equation__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquationAccess().getEqualsSignKeyword_1_0_1()); }

	'=' 

{ after(grammarAccess.getEquationAccess().getEqualsSignKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Equation__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Equation__Group_1_0__2__Impl
	rule__Equation__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquationAccess().getExpressionAssignment_1_0_2()); }
(rule__Equation__ExpressionAssignment_1_0_2)
{ after(grammarAccess.getEquationAccess().getExpressionAssignment_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Equation__Group_1_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Equation__Group_1_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group_1_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquationAccess().getSemicolonKeyword_1_0_3()); }

	';' 

{ after(grammarAccess.getEquationAccess().getSemicolonKeyword_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Equation__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Equation__Group_1_1__0__Impl
	rule__Equation__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquationAccess().getValuedObjectAssignment_1_1_0()); }
(rule__Equation__ValuedObjectAssignment_1_1_0)
{ after(grammarAccess.getEquationAccess().getValuedObjectAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Equation__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Equation__Group_1_1__1__Impl
	rule__Equation__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquationAccess().getEqualsSignKeyword_1_1_1()); }

	'=' 

{ after(grammarAccess.getEquationAccess().getEqualsSignKeyword_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Equation__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Equation__Group_1_1__2__Impl
	rule__Equation__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquationAccess().getNodeAssignment_1_1_2()); }
(rule__Equation__NodeAssignment_1_1_2)
{ after(grammarAccess.getEquationAccess().getNodeAssignment_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Equation__Group_1_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Equation__Group_1_1__3__Impl
	rule__Equation__Group_1_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group_1_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquationAccess().getFullStopKeyword_1_1_3()); }

	'.' 

{ after(grammarAccess.getEquationAccess().getFullStopKeyword_1_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Equation__Group_1_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Equation__Group_1_1__4__Impl
	rule__Equation__Group_1_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group_1_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquationAccess().getExpressionAssignment_1_1_4()); }
(rule__Equation__ExpressionAssignment_1_1_4)
{ after(grammarAccess.getEquationAccess().getExpressionAssignment_1_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Equation__Group_1_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Equation__Group_1_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group_1_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquationAccess().getSemicolonKeyword_1_1_5()); }

	';' 

{ after(grammarAccess.getEquationAccess().getSemicolonKeyword_1_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__SCChart__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SCChart__Group__0__Impl
	rule__SCChart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SCChart__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCChartAccess().getAnnotationsAssignment_0()); }
(rule__SCChart__AnnotationsAssignment_0)*
{ after(grammarAccess.getSCChartAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SCChart__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SCChart__Group__1__Impl
	rule__SCChart__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SCChart__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCChartAccess().getScchartKeyword_1()); }

	'scchart' 

{ after(grammarAccess.getSCChartAccess().getScchartKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SCChart__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SCChart__Group__2__Impl
	rule__SCChart__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SCChart__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCChartAccess().getIdAssignment_2()); }
(rule__SCChart__IdAssignment_2)
{ after(grammarAccess.getSCChartAccess().getIdAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SCChart__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SCChart__Group__3__Impl
	rule__SCChart__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SCChart__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCChartAccess().getLabelAssignment_3()); }
(rule__SCChart__LabelAssignment_3)?
{ after(grammarAccess.getSCChartAccess().getLabelAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SCChart__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SCChart__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SCChart__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCChartAccess().getAlternatives_4()); }
(rule__SCChart__Alternatives_4)?
{ after(grammarAccess.getSCChartAccess().getAlternatives_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__SCChart__Group_4_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SCChart__Group_4_0__0__Impl
	rule__SCChart__Group_4_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SCChart__Group_4_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCChartAccess().getReferencesKeyword_4_0_0()); }

	'references' 

{ after(grammarAccess.getSCChartAccess().getReferencesKeyword_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SCChart__Group_4_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SCChart__Group_4_0__1__Impl
	rule__SCChart__Group_4_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SCChart__Group_4_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCChartAccess().getReferencedScopeAssignment_4_0_1()); }
(rule__SCChart__ReferencedScopeAssignment_4_0_1)
{ after(grammarAccess.getSCChartAccess().getReferencedScopeAssignment_4_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SCChart__Group_4_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SCChart__Group_4_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SCChart__Group_4_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCChartAccess().getGroup_4_0_2()); }
(rule__SCChart__Group_4_0_2__0)?
{ after(grammarAccess.getSCChartAccess().getGroup_4_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SCChart__Group_4_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SCChart__Group_4_0_2__0__Impl
	rule__SCChart__Group_4_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SCChart__Group_4_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCChartAccess().getBindKeyword_4_0_2_0()); }

	'bind' 

{ after(grammarAccess.getSCChartAccess().getBindKeyword_4_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SCChart__Group_4_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SCChart__Group_4_0_2__1__Impl
	rule__SCChart__Group_4_0_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SCChart__Group_4_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCChartAccess().getBindingsAssignment_4_0_2_1()); }
(rule__SCChart__BindingsAssignment_4_0_2_1)
{ after(grammarAccess.getSCChartAccess().getBindingsAssignment_4_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SCChart__Group_4_0_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SCChart__Group_4_0_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SCChart__Group_4_0_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCChartAccess().getGroup_4_0_2_2()); }
(rule__SCChart__Group_4_0_2_2__0)*
{ after(grammarAccess.getSCChartAccess().getGroup_4_0_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SCChart__Group_4_0_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SCChart__Group_4_0_2_2__0__Impl
	rule__SCChart__Group_4_0_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SCChart__Group_4_0_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCChartAccess().getCommaKeyword_4_0_2_2_0()); }

	',' 

{ after(grammarAccess.getSCChartAccess().getCommaKeyword_4_0_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SCChart__Group_4_0_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SCChart__Group_4_0_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SCChart__Group_4_0_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCChartAccess().getBindingsAssignment_4_0_2_2_1()); }
(rule__SCChart__BindingsAssignment_4_0_2_2_1)
{ after(grammarAccess.getSCChartAccess().getBindingsAssignment_4_0_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SCChart__Group_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SCChart__Group_4_1__0__Impl
	rule__SCChart__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SCChart__Group_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCChartAccess().getLeftCurlyBracketKeyword_4_1_0()); }

	'{' 

{ after(grammarAccess.getSCChartAccess().getLeftCurlyBracketKeyword_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SCChart__Group_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SCChart__Group_4_1__1__Impl
	rule__SCChart__Group_4_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SCChart__Group_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCChartAccess().getAlternatives_4_1_1()); }
(rule__SCChart__Alternatives_4_1_1)*
{ after(grammarAccess.getSCChartAccess().getAlternatives_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SCChart__Group_4_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SCChart__Group_4_1__2__Impl
	rule__SCChart__Group_4_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SCChart__Group_4_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCChartAccess().getGroup_4_1_2()); }
(rule__SCChart__Group_4_1_2__0)?
{ after(grammarAccess.getSCChartAccess().getGroup_4_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SCChart__Group_4_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SCChart__Group_4_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SCChart__Group_4_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCChartAccess().getRightCurlyBracketKeyword_4_1_3()); }

	'}' 

{ after(grammarAccess.getSCChartAccess().getRightCurlyBracketKeyword_4_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SCChart__Group_4_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SCChart__Group_4_1_2__0__Impl
	rule__SCChart__Group_4_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SCChart__Group_4_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCChartAccess().getAlternatives_4_1_2_0()); }
(rule__SCChart__Alternatives_4_1_2_0)
{ after(grammarAccess.getSCChartAccess().getAlternatives_4_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SCChart__Group_4_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SCChart__Group_4_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SCChart__Group_4_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCChartAccess().getRegionsAssignment_4_1_2_1()); }
(rule__SCChart__RegionsAssignment_4_1_2_1)*
{ after(grammarAccess.getSCChartAccess().getRegionsAssignment_4_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__State__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__0__Impl
	rule__State__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getAnnotationsAssignment_0()); }
(rule__State__AnnotationsAssignment_0)*
{ after(grammarAccess.getStateAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__1__Impl
	rule__State__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getAlternatives_1()); }
(rule__State__Alternatives_1)?
{ after(grammarAccess.getStateAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__2__Impl
	rule__State__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getTypeAssignment_2()); }
(rule__State__TypeAssignment_2)?
{ after(grammarAccess.getStateAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__3__Impl
	rule__State__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getStateKeyword_3()); }

	'state' 

{ after(grammarAccess.getStateAccess().getStateKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__4__Impl
	rule__State__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getIdAssignment_4()); }
(rule__State__IdAssignment_4)
{ after(grammarAccess.getStateAccess().getIdAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__5__Impl
	rule__State__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getLabelAssignment_5()); }
(rule__State__LabelAssignment_5)?
{ after(grammarAccess.getStateAccess().getLabelAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__6__Impl
	rule__State__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getAlternatives_6()); }
(rule__State__Alternatives_6)?
{ after(grammarAccess.getStateAccess().getAlternatives_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__7__Impl
	rule__State__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getOutgoingTransitionsAssignment_7()); }
(rule__State__OutgoingTransitionsAssignment_7)*
{ after(grammarAccess.getStateAccess().getOutgoingTransitionsAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getSemicolonKeyword_8()); }

	';' 

{ after(grammarAccess.getStateAccess().getSemicolonKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__State__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_1_0__0__Impl
	rule__State__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getInitialAssignment_1_0_0()); }
(rule__State__InitialAssignment_1_0_0)
{ after(grammarAccess.getStateAccess().getInitialAssignment_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getFinalAssignment_1_0_1()); }
(rule__State__FinalAssignment_1_0_1)?
{ after(grammarAccess.getStateAccess().getFinalAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__State__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_1_1__0__Impl
	rule__State__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getFinalAssignment_1_1_0()); }
(rule__State__FinalAssignment_1_1_0)
{ after(grammarAccess.getStateAccess().getFinalAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getInitialAssignment_1_1_1()); }
(rule__State__InitialAssignment_1_1_1)?
{ after(grammarAccess.getStateAccess().getInitialAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__State__Group_6_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_6_0__0__Impl
	rule__State__Group_6_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_6_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getReferencesKeyword_6_0_0()); }

	'references' 

{ after(grammarAccess.getStateAccess().getReferencesKeyword_6_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_6_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_6_0__1__Impl
	rule__State__Group_6_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_6_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getReferencedScopeAssignment_6_0_1()); }
(rule__State__ReferencedScopeAssignment_6_0_1)
{ after(grammarAccess.getStateAccess().getReferencedScopeAssignment_6_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_6_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_6_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_6_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getGroup_6_0_2()); }
(rule__State__Group_6_0_2__0)?
{ after(grammarAccess.getStateAccess().getGroup_6_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__State__Group_6_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_6_0_2__0__Impl
	rule__State__Group_6_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_6_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getBindKeyword_6_0_2_0()); }

	'bind' 

{ after(grammarAccess.getStateAccess().getBindKeyword_6_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_6_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_6_0_2__1__Impl
	rule__State__Group_6_0_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_6_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getBindingsAssignment_6_0_2_1()); }
(rule__State__BindingsAssignment_6_0_2_1)
{ after(grammarAccess.getStateAccess().getBindingsAssignment_6_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_6_0_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_6_0_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_6_0_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getGroup_6_0_2_2()); }
(rule__State__Group_6_0_2_2__0)*
{ after(grammarAccess.getStateAccess().getGroup_6_0_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__State__Group_6_0_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_6_0_2_2__0__Impl
	rule__State__Group_6_0_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_6_0_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getCommaKeyword_6_0_2_2_0()); }

	',' 

{ after(grammarAccess.getStateAccess().getCommaKeyword_6_0_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_6_0_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_6_0_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_6_0_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getBindingsAssignment_6_0_2_2_1()); }
(rule__State__BindingsAssignment_6_0_2_2_1)
{ after(grammarAccess.getStateAccess().getBindingsAssignment_6_0_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__State__Group_6_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_6_1__0__Impl
	rule__State__Group_6_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_6_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_6_1_0()); }

	'{' 

{ after(grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_6_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_6_1__1__Impl
	rule__State__Group_6_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_6_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getAlternatives_6_1_1()); }
(rule__State__Alternatives_6_1_1)*
{ after(grammarAccess.getStateAccess().getAlternatives_6_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_6_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_6_1__2__Impl
	rule__State__Group_6_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_6_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getAlternatives_6_1_2()); }
(rule__State__Alternatives_6_1_2)
{ after(grammarAccess.getStateAccess().getAlternatives_6_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_6_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_6_1__3__Impl
	rule__State__Group_6_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_6_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getRegionsAssignment_6_1_3()); }
(rule__State__RegionsAssignment_6_1_3)*
{ after(grammarAccess.getStateAccess().getRegionsAssignment_6_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_6_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_6_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_6_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getRightCurlyBracketKeyword_6_1_4()); }

	'}' 

{ after(grammarAccess.getStateAccess().getRightCurlyBracketKeyword_6_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__CallNode__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallNode__Group__0__Impl
	rule__CallNode__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CallNode__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallNodeAccess().getCallNodeAction_0()); }
(

)
{ after(grammarAccess.getCallNodeAccess().getCallNodeAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallNode__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallNode__Group__1__Impl
	rule__CallNode__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CallNode__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallNodeAccess().getIdAssignment_1()); }
(rule__CallNode__IdAssignment_1)
{ after(grammarAccess.getCallNodeAccess().getIdAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallNode__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallNode__Group__2__Impl
	rule__CallNode__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CallNode__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallNodeAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getCallNodeAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallNode__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallNode__Group__3__Impl
	rule__CallNode__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CallNode__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallNodeAccess().getCallReferenceAssignment_3()); }
(rule__CallNode__CallReferenceAssignment_3)
{ after(grammarAccess.getCallNodeAccess().getCallReferenceAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallNode__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallNode__Group__4__Impl
	rule__CallNode__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CallNode__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallNodeAccess().getLeftParenthesisKeyword_4()); }

	'(' 

{ after(grammarAccess.getCallNodeAccess().getLeftParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallNode__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallNode__Group__5__Impl
	rule__CallNode__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__CallNode__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallNodeAccess().getParametersAssignment_5()); }
(rule__CallNode__ParametersAssignment_5)?
{ after(grammarAccess.getCallNodeAccess().getParametersAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallNode__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallNode__Group__6__Impl
	rule__CallNode__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__CallNode__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallNodeAccess().getGroup_6()); }
(rule__CallNode__Group_6__0)*
{ after(grammarAccess.getCallNodeAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallNode__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallNode__Group__7__Impl
	rule__CallNode__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__CallNode__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallNodeAccess().getRightParenthesisKeyword_7()); }

	')' 

{ after(grammarAccess.getCallNodeAccess().getRightParenthesisKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallNode__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallNode__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CallNode__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallNodeAccess().getSemicolonKeyword_8()); }

	';' 

{ after(grammarAccess.getCallNodeAccess().getSemicolonKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__CallNode__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallNode__Group_6__0__Impl
	rule__CallNode__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CallNode__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallNodeAccess().getCommaKeyword_6_0()); }

	',' 

{ after(grammarAccess.getCallNodeAccess().getCommaKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallNode__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallNode__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CallNode__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallNodeAccess().getParametersAssignment_6_1()); }
(rule__CallNode__ParametersAssignment_6_1)
{ after(grammarAccess.getCallNodeAccess().getParametersAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DefineNode__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefineNode__Group__0__Impl
	rule__DefineNode__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineNode__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineNodeAccess().getDefineNodeAction_0()); }
(

)
{ after(grammarAccess.getDefineNodeAccess().getDefineNodeAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefineNode__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefineNode__Group__1__Impl
	rule__DefineNode__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineNode__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineNodeAccess().getNodeKeyword_1()); }

	'node' 

{ after(grammarAccess.getDefineNodeAccess().getNodeKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefineNode__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefineNode__Group__2__Impl
	rule__DefineNode__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineNode__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineNodeAccess().getIdAssignment_2()); }
(rule__DefineNode__IdAssignment_2)
{ after(grammarAccess.getDefineNodeAccess().getIdAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefineNode__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefineNode__Group__3__Impl
	rule__DefineNode__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineNode__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineNodeAccess().getLeftParenthesisKeyword_3()); }

	'(' 

{ after(grammarAccess.getDefineNodeAccess().getLeftParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefineNode__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefineNode__Group__4__Impl
	rule__DefineNode__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineNode__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineNodeAccess().getInputsAssignment_4()); }
(rule__DefineNode__InputsAssignment_4)*
{ after(grammarAccess.getDefineNodeAccess().getInputsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefineNode__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefineNode__Group__5__Impl
	rule__DefineNode__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineNode__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineNodeAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getDefineNodeAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefineNode__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefineNode__Group__6__Impl
	rule__DefineNode__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineNode__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineNodeAccess().getReturnsKeyword_6()); }

	'returns' 

{ after(grammarAccess.getDefineNodeAccess().getReturnsKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefineNode__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefineNode__Group__7__Impl
	rule__DefineNode__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineNode__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineNodeAccess().getLeftParenthesisKeyword_7()); }

	'(' 

{ after(grammarAccess.getDefineNodeAccess().getLeftParenthesisKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefineNode__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefineNode__Group__8__Impl
	rule__DefineNode__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineNode__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineNodeAccess().getOutputsAssignment_8()); }
(rule__DefineNode__OutputsAssignment_8)*
{ after(grammarAccess.getDefineNodeAccess().getOutputsAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefineNode__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefineNode__Group__9__Impl
	rule__DefineNode__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineNode__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineNodeAccess().getRightParenthesisKeyword_9()); }

	')' 

{ after(grammarAccess.getDefineNodeAccess().getRightParenthesisKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefineNode__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefineNode__Group__10__Impl
	rule__DefineNode__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineNode__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineNodeAccess().getLeftCurlyBracketKeyword_10()); }

	'{' 

{ after(grammarAccess.getDefineNodeAccess().getLeftCurlyBracketKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefineNode__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefineNode__Group__11__Impl
	rule__DefineNode__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineNode__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineNodeAccess().getAlternatives_11()); }
(rule__DefineNode__Alternatives_11)
{ after(grammarAccess.getDefineNodeAccess().getAlternatives_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefineNode__Group__12
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefineNode__Group__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineNode__Group__12__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineNodeAccess().getRightCurlyBracketKeyword_12()); }

	'}' 

{ after(grammarAccess.getDefineNodeAccess().getRightCurlyBracketKeyword_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}




























rule__DefineNode__Group_11_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefineNode__Group_11_0__0__Impl
	rule__DefineNode__Group_11_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineNode__Group_11_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineNodeAccess().getValuedObjectsAssignment_11_0_0()); }
(rule__DefineNode__ValuedObjectsAssignment_11_0_0)
{ after(grammarAccess.getDefineNodeAccess().getValuedObjectsAssignment_11_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefineNode__Group_11_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefineNode__Group_11_0__1__Impl
	rule__DefineNode__Group_11_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineNode__Group_11_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineNodeAccess().getEqualsSignKeyword_11_0_1()); }

	'=' 

{ after(grammarAccess.getDefineNodeAccess().getEqualsSignKeyword_11_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefineNode__Group_11_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefineNode__Group_11_0__2__Impl
	rule__DefineNode__Group_11_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineNode__Group_11_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineNodeAccess().getExpressionsAssignment_11_0_2()); }
(rule__DefineNode__ExpressionsAssignment_11_0_2)
{ after(grammarAccess.getDefineNodeAccess().getExpressionsAssignment_11_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefineNode__Group_11_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefineNode__Group_11_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineNode__Group_11_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineNodeAccess().getSemicolonKeyword_11_0_3()); }

	';' 

{ after(grammarAccess.getDefineNodeAccess().getSemicolonKeyword_11_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ReferenceNode__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceNode__Group__0__Impl
	rule__ReferenceNode__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceNode__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceNodeAccess().getReferenceNodeAction_0()); }
(

)
{ after(grammarAccess.getReferenceNodeAccess().getReferenceNodeAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceNode__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceNode__Group__1__Impl
	rule__ReferenceNode__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceNode__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceNodeAccess().getIdAssignment_1()); }
(rule__ReferenceNode__IdAssignment_1)
{ after(grammarAccess.getReferenceNodeAccess().getIdAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceNode__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceNode__Group__2__Impl
	rule__ReferenceNode__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceNode__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceNodeAccess().getLabelAssignment_2()); }
(rule__ReferenceNode__LabelAssignment_2)?
{ after(grammarAccess.getReferenceNodeAccess().getLabelAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceNode__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceNode__Group__3__Impl
	rule__ReferenceNode__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceNode__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceNodeAccess().getEqualsSignKeyword_3()); }

	'=' 

{ after(grammarAccess.getReferenceNodeAccess().getEqualsSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceNode__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceNode__Group__4__Impl
	rule__ReferenceNode__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceNode__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceNodeAccess().getRefKeyword_4()); }

	'ref' 

{ after(grammarAccess.getReferenceNodeAccess().getRefKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceNode__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceNode__Group__5__Impl
	rule__ReferenceNode__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceNode__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceNodeAccess().getReferencedScopeAssignment_5()); }
(rule__ReferenceNode__ReferencedScopeAssignment_5)
{ after(grammarAccess.getReferenceNodeAccess().getReferencedScopeAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceNode__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceNode__Group__6__Impl
	rule__ReferenceNode__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceNode__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceNodeAccess().getLeftParenthesisKeyword_6()); }

	'(' 

{ after(grammarAccess.getReferenceNodeAccess().getLeftParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceNode__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceNode__Group__7__Impl
	rule__ReferenceNode__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceNode__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceNodeAccess().getParametersAssignment_7()); }
(rule__ReferenceNode__ParametersAssignment_7)?
{ after(grammarAccess.getReferenceNodeAccess().getParametersAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceNode__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceNode__Group__8__Impl
	rule__ReferenceNode__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceNode__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceNodeAccess().getGroup_8()); }
(rule__ReferenceNode__Group_8__0)*
{ after(grammarAccess.getReferenceNodeAccess().getGroup_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceNode__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceNode__Group__9__Impl
	rule__ReferenceNode__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceNode__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceNodeAccess().getRightParenthesisKeyword_9()); }

	')' 

{ after(grammarAccess.getReferenceNodeAccess().getRightParenthesisKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceNode__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceNode__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceNode__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceNodeAccess().getSemicolonKeyword_10()); }

	';' 

{ after(grammarAccess.getReferenceNodeAccess().getSemicolonKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}
























rule__ReferenceNode__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceNode__Group_8__0__Impl
	rule__ReferenceNode__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceNode__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceNodeAccess().getCommaKeyword_8_0()); }

	',' 

{ after(grammarAccess.getReferenceNodeAccess().getCommaKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceNode__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceNode__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceNode__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceNodeAccess().getParametersAssignment_8_1()); }
(rule__ReferenceNode__ParametersAssignment_8_1)
{ after(grammarAccess.getReferenceNodeAccess().getParametersAssignment_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Transition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__0__Impl
	rule__Transition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getAnnotationsAssignment_0()); }
(rule__Transition__AnnotationsAssignment_0)*
{ after(grammarAccess.getTransitionAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__1__Impl
	rule__Transition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getAlternatives_1()); }
(rule__Transition__Alternatives_1)
{ after(grammarAccess.getTransitionAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__2__Impl
	rule__Transition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getTargetStateAssignment_2()); }
(rule__Transition__TargetStateAssignment_2)
{ after(grammarAccess.getTransitionAccess().getTargetStateAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getGroup_3()); }
(rule__Transition__Group_3__0)?
{ after(grammarAccess.getTransitionAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Transition__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_3__0__Impl
	rule__Transition__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getImmediateAssignment_3_0()); }
(rule__Transition__ImmediateAssignment_3_0)?
{ after(grammarAccess.getTransitionAccess().getImmediateAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_3__1__Impl
	rule__Transition__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getDeferredAssignment_3_1()); }
(rule__Transition__DeferredAssignment_3_1)?
{ after(grammarAccess.getTransitionAccess().getDeferredAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_3__2__Impl
	rule__Transition__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getHistoryAssignment_3_2()); }
(rule__Transition__HistoryAssignment_3_2)?
{ after(grammarAccess.getTransitionAccess().getHistoryAssignment_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getAlternatives_3_3()); }
(rule__Transition__Alternatives_3_3)?
{ after(grammarAccess.getTransitionAccess().getAlternatives_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Transition__Group_3_3_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_3_3_0__0__Impl
	rule__Transition__Group_3_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_3_3_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getAlternatives_3_3_0_0()); }
(rule__Transition__Alternatives_3_3_0_0)?
{ after(grammarAccess.getTransitionAccess().getAlternatives_3_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group_3_3_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_3_3_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_3_3_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getGroup_3_3_0_1()); }
(rule__Transition__Group_3_3_0_1__0)?
{ after(grammarAccess.getTransitionAccess().getGroup_3_3_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Transition__Group_3_3_0_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_3_3_0_0_0__0__Impl
	rule__Transition__Group_3_3_0_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_3_3_0_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getWithKeyword_3_3_0_0_0_0()); }

	'with' 

{ after(grammarAccess.getTransitionAccess().getWithKeyword_3_3_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group_3_3_0_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_3_3_0_0_0__1__Impl
	rule__Transition__Group_3_3_0_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_3_3_0_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getDelayAssignment_3_3_0_0_0_1()); }
(rule__Transition__DelayAssignment_3_3_0_0_0_1)?
{ after(grammarAccess.getTransitionAccess().getDelayAssignment_3_3_0_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group_3_3_0_0_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_3_3_0_0_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_3_3_0_0_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getTriggerAssignment_3_3_0_0_0_2()); }
(rule__Transition__TriggerAssignment_3_3_0_0_0_2)
{ after(grammarAccess.getTransitionAccess().getTriggerAssignment_3_3_0_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Transition__Group_3_3_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_3_3_0_1__0__Impl
	rule__Transition__Group_3_3_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_3_3_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getAlternatives_3_3_0_1_0()); }
(rule__Transition__Alternatives_3_3_0_1_0)
{ after(grammarAccess.getTransitionAccess().getAlternatives_3_3_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group_3_3_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_3_3_0_1__1__Impl
	rule__Transition__Group_3_3_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_3_3_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getEffectsAssignment_3_3_0_1_1()); }
(rule__Transition__EffectsAssignment_3_3_0_1_1)
{ after(grammarAccess.getTransitionAccess().getEffectsAssignment_3_3_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group_3_3_0_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_3_3_0_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_3_3_0_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getGroup_3_3_0_1_2()); }
(rule__Transition__Group_3_3_0_1_2__0)*
{ after(grammarAccess.getTransitionAccess().getGroup_3_3_0_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Transition__Group_3_3_0_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_3_3_0_1_2__0__Impl
	rule__Transition__Group_3_3_0_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_3_3_0_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getSemicolonKeyword_3_3_0_1_2_0()); }

	';' 

{ after(grammarAccess.getTransitionAccess().getSemicolonKeyword_3_3_0_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group_3_3_0_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_3_3_0_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_3_3_0_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getEffectsAssignment_3_3_0_1_2_1()); }
(rule__Transition__EffectsAssignment_3_3_0_1_2_1)
{ after(grammarAccess.getTransitionAccess().getEffectsAssignment_3_3_0_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Transition__Group_3_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_3_3_1__0__Impl
	rule__Transition__Group_3_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_3_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getWithKeyword_3_3_1_0()); }

	'with' 

{ after(grammarAccess.getTransitionAccess().getWithKeyword_3_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group_3_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_3_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_3_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getLabelAssignment_3_3_1_1()); }
(rule__Transition__LabelAssignment_3_3_1_1)
{ after(grammarAccess.getTransitionAccess().getLabelAssignment_3_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Declaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group__0__Impl
	rule__Declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getAnnotationsAssignment_0()); }
(rule__Declaration__AnnotationsAssignment_0)*
{ after(grammarAccess.getDeclarationAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group__1__Impl
	rule__Declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getAlternatives_1()); }
(rule__Declaration__Alternatives_1)
{ after(grammarAccess.getDeclarationAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group__2__Impl
	rule__Declaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getValuedObjectsAssignment_2()); }
(rule__Declaration__ValuedObjectsAssignment_2)
{ after(grammarAccess.getDeclarationAccess().getValuedObjectsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group__3__Impl
	rule__Declaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getGroup_3()); }
(rule__Declaration__Group_3__0)*
{ after(grammarAccess.getDeclarationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getSemicolonKeyword_4()); }
(
	';' 
)?
{ after(grammarAccess.getDeclarationAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Declaration__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_1_0__0__Impl
	rule__Declaration__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getExternAssignment_1_0_0()); }
(rule__Declaration__ExternAssignment_1_0_0)?
{ after(grammarAccess.getDeclarationAccess().getExternAssignment_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_1_0__1__Impl
	rule__Declaration__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getStaticAssignment_1_0_1()); }
(rule__Declaration__StaticAssignment_1_0_1)?
{ after(grammarAccess.getDeclarationAccess().getStaticAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_1_0__2__Impl
	rule__Declaration__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getConstAssignment_1_0_2()); }
(rule__Declaration__ConstAssignment_1_0_2)?
{ after(grammarAccess.getDeclarationAccess().getConstAssignment_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_1_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_1_0__3__Impl
	rule__Declaration__Group_1_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_1_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getInputAssignment_1_0_3()); }
(rule__Declaration__InputAssignment_1_0_3)?
{ after(grammarAccess.getDeclarationAccess().getInputAssignment_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_1_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_1_0__4__Impl
	rule__Declaration__Group_1_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_1_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getOutputAssignment_1_0_4()); }
(rule__Declaration__OutputAssignment_1_0_4)?
{ after(grammarAccess.getDeclarationAccess().getOutputAssignment_1_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_1_0__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_1_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_1_0__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getAlternatives_1_0_5()); }
(rule__Declaration__Alternatives_1_0_5)
{ after(grammarAccess.getDeclarationAccess().getAlternatives_1_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Declaration__Group_1_0_5_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_1_0_5_0__0__Impl
	rule__Declaration__Group_1_0_5_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_1_0_5_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getSignalAssignment_1_0_5_0_0()); }
(rule__Declaration__SignalAssignment_1_0_5_0_0)?
{ after(grammarAccess.getDeclarationAccess().getSignalAssignment_1_0_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_1_0_5_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_1_0_5_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_1_0_5_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getTypeAssignment_1_0_5_0_1()); }
(rule__Declaration__TypeAssignment_1_0_5_0_1)
{ after(grammarAccess.getDeclarationAccess().getTypeAssignment_1_0_5_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Declaration__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_1_1__0__Impl
	rule__Declaration__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getExternAssignment_1_1_0()); }
(rule__Declaration__ExternAssignment_1_1_0)
{ after(grammarAccess.getDeclarationAccess().getExternAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_1_1__1__Impl
	rule__Declaration__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getStaticAssignment_1_1_1()); }
(rule__Declaration__StaticAssignment_1_1_1)?
{ after(grammarAccess.getDeclarationAccess().getStaticAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_1_1__2__Impl
	rule__Declaration__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getConstAssignment_1_1_2()); }
(rule__Declaration__ConstAssignment_1_1_2)?
{ after(grammarAccess.getDeclarationAccess().getConstAssignment_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_1_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_1_1__3__Impl
	rule__Declaration__Group_1_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_1_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getInputAssignment_1_1_3()); }
(rule__Declaration__InputAssignment_1_1_3)?
{ after(grammarAccess.getDeclarationAccess().getInputAssignment_1_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_1_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_1_1__4__Impl
	rule__Declaration__Group_1_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_1_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getOutputAssignment_1_1_4()); }
(rule__Declaration__OutputAssignment_1_1_4)?
{ after(grammarAccess.getDeclarationAccess().getOutputAssignment_1_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_1_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_1_1__5__Impl
	rule__Declaration__Group_1_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_1_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getSignalAssignment_1_1_5()); }
(rule__Declaration__SignalAssignment_1_1_5)?
{ after(grammarAccess.getDeclarationAccess().getSignalAssignment_1_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_1_1__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_1_1__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_1_1__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getTypeAssignment_1_1_6()); }
(rule__Declaration__TypeAssignment_1_1_6)?
{ after(grammarAccess.getDeclarationAccess().getTypeAssignment_1_1_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Declaration__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_3__0__Impl
	rule__Declaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getDeclarationAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getValuedObjectsAssignment_3_1()); }
(rule__Declaration__ValuedObjectsAssignment_3_1)
{ after(grammarAccess.getDeclarationAccess().getValuedObjectsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ValuedObject__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObject__Group__0__Impl
	rule__ValuedObject__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObject__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectAccess().getNameAssignment_0()); }
(rule__ValuedObject__NameAssignment_0)
{ after(grammarAccess.getValuedObjectAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuedObject__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObject__Group__1__Impl
	rule__ValuedObject__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObject__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectAccess().getGroup_1()); }
(rule__ValuedObject__Group_1__0)*
{ after(grammarAccess.getValuedObjectAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuedObject__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObject__Group__2__Impl
	rule__ValuedObject__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObject__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectAccess().getGroup_2()); }
(rule__ValuedObject__Group_2__0)?
{ after(grammarAccess.getValuedObjectAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuedObject__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObject__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObject__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectAccess().getGroup_3()); }
(rule__ValuedObject__Group_3__0)?
{ after(grammarAccess.getValuedObjectAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ValuedObject__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObject__Group_1__0__Impl
	rule__ValuedObject__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObject__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectAccess().getLeftSquareBracketKeyword_1_0()); }

	'[' 

{ after(grammarAccess.getValuedObjectAccess().getLeftSquareBracketKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuedObject__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObject__Group_1__1__Impl
	rule__ValuedObject__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObject__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectAccess().getCardinalitiesAssignment_1_1()); }
(rule__ValuedObject__CardinalitiesAssignment_1_1)
{ after(grammarAccess.getValuedObjectAccess().getCardinalitiesAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuedObject__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObject__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObject__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectAccess().getRightSquareBracketKeyword_1_2()); }

	']' 

{ after(grammarAccess.getValuedObjectAccess().getRightSquareBracketKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ValuedObject__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObject__Group_2__0__Impl
	rule__ValuedObject__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObject__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectAccess().getEqualsSignKeyword_2_0()); }

	'=' 

{ after(grammarAccess.getValuedObjectAccess().getEqualsSignKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuedObject__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObject__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObject__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectAccess().getInitialValueAssignment_2_1()); }
(rule__ValuedObject__InitialValueAssignment_2_1)
{ after(grammarAccess.getValuedObjectAccess().getInitialValueAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ValuedObject__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObject__Group_3__0__Impl
	rule__ValuedObject__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObject__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectAccess().getCombineKeyword_3_0()); }

	'combine' 

{ after(grammarAccess.getValuedObjectAccess().getCombineKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuedObject__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObject__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObject__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectAccess().getCombineOperatorAssignment_3_1()); }
(rule__ValuedObject__CombineOperatorAssignment_3_1)
{ after(grammarAccess.getValuedObjectAccess().getCombineOperatorAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Binding__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Binding__Group__0__Impl
	rule__Binding__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingAccess().getAnnotationsAssignment_0()); }
(rule__Binding__AnnotationsAssignment_0)*
{ after(grammarAccess.getBindingAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Binding__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Binding__Group__1__Impl
	rule__Binding__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingAccess().getFormalAssignment_1()); }
(rule__Binding__FormalAssignment_1)
{ after(grammarAccess.getBindingAccess().getFormalAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Binding__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Binding__Group__2__Impl
	rule__Binding__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingAccess().getToKeyword_2()); }

	'to' 

{ after(grammarAccess.getBindingAccess().getToKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Binding__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Binding__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingAccess().getActualAssignment_3()); }
(rule__Binding__ActualAssignment_3)
{ after(grammarAccess.getBindingAccess().getActualAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__EntryAction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntryAction__Group__0__Impl
	rule__EntryAction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryAction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntryActionAccess().getEntryActionAction_0()); }
(

)
{ after(grammarAccess.getEntryActionAccess().getEntryActionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EntryAction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntryAction__Group__1__Impl
	rule__EntryAction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryAction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntryActionAccess().getEntryKeyword_1()); }

	'entry' 

{ after(grammarAccess.getEntryActionAccess().getEntryKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EntryAction__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntryAction__Group__2__Impl
	rule__EntryAction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryAction__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntryActionAccess().getTriggerAssignment_2()); }
(rule__EntryAction__TriggerAssignment_2)?
{ after(grammarAccess.getEntryActionAccess().getTriggerAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EntryAction__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntryAction__Group__3__Impl
	rule__EntryAction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryAction__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntryActionAccess().getGroup_3()); }
(rule__EntryAction__Group_3__0)?
{ after(grammarAccess.getEntryActionAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EntryAction__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntryAction__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryAction__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntryActionAccess().getSemicolonKeyword_4()); }
(
	';' 
)?
{ after(grammarAccess.getEntryActionAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__EntryAction__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntryAction__Group_3__0__Impl
	rule__EntryAction__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryAction__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntryActionAccess().getSolidusKeyword_3_0()); }

	'/' 

{ after(grammarAccess.getEntryActionAccess().getSolidusKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EntryAction__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntryAction__Group_3__1__Impl
	rule__EntryAction__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryAction__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntryActionAccess().getEffectsAssignment_3_1()); }
(rule__EntryAction__EffectsAssignment_3_1)
{ after(grammarAccess.getEntryActionAccess().getEffectsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EntryAction__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntryAction__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryAction__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntryActionAccess().getGroup_3_2()); }
(rule__EntryAction__Group_3_2__0)*
{ after(grammarAccess.getEntryActionAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__EntryAction__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntryAction__Group_3_2__0__Impl
	rule__EntryAction__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryAction__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntryActionAccess().getSemicolonKeyword_3_2_0()); }

	';' 

{ after(grammarAccess.getEntryActionAccess().getSemicolonKeyword_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EntryAction__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntryAction__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryAction__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntryActionAccess().getEffectsAssignment_3_2_1()); }
(rule__EntryAction__EffectsAssignment_3_2_1)
{ after(grammarAccess.getEntryActionAccess().getEffectsAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DuringAction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DuringAction__Group__0__Impl
	rule__DuringAction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DuringAction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDuringActionAccess().getDuringActionAction_0()); }
(

)
{ after(grammarAccess.getDuringActionAccess().getDuringActionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DuringAction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DuringAction__Group__1__Impl
	rule__DuringAction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DuringAction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDuringActionAccess().getImmediateAssignment_1()); }
(rule__DuringAction__ImmediateAssignment_1)?
{ after(grammarAccess.getDuringActionAccess().getImmediateAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DuringAction__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DuringAction__Group__2__Impl
	rule__DuringAction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DuringAction__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDuringActionAccess().getDuringKeyword_2()); }

	'during' 

{ after(grammarAccess.getDuringActionAccess().getDuringKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DuringAction__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DuringAction__Group__3__Impl
	rule__DuringAction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DuringAction__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDuringActionAccess().getTriggerAssignment_3()); }
(rule__DuringAction__TriggerAssignment_3)?
{ after(grammarAccess.getDuringActionAccess().getTriggerAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DuringAction__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DuringAction__Group__4__Impl
	rule__DuringAction__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DuringAction__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDuringActionAccess().getGroup_4()); }
(rule__DuringAction__Group_4__0)?
{ after(grammarAccess.getDuringActionAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DuringAction__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DuringAction__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DuringAction__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDuringActionAccess().getSemicolonKeyword_5()); }
(
	';' 
)?
{ after(grammarAccess.getDuringActionAccess().getSemicolonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__DuringAction__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DuringAction__Group_4__0__Impl
	rule__DuringAction__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DuringAction__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDuringActionAccess().getSolidusKeyword_4_0()); }

	'/' 

{ after(grammarAccess.getDuringActionAccess().getSolidusKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DuringAction__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DuringAction__Group_4__1__Impl
	rule__DuringAction__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DuringAction__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDuringActionAccess().getEffectsAssignment_4_1()); }
(rule__DuringAction__EffectsAssignment_4_1)
{ after(grammarAccess.getDuringActionAccess().getEffectsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DuringAction__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DuringAction__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DuringAction__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDuringActionAccess().getGroup_4_2()); }
(rule__DuringAction__Group_4_2__0)*
{ after(grammarAccess.getDuringActionAccess().getGroup_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DuringAction__Group_4_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DuringAction__Group_4_2__0__Impl
	rule__DuringAction__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DuringAction__Group_4_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDuringActionAccess().getSemicolonKeyword_4_2_0()); }

	';' 

{ after(grammarAccess.getDuringActionAccess().getSemicolonKeyword_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DuringAction__Group_4_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DuringAction__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DuringAction__Group_4_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDuringActionAccess().getEffectsAssignment_4_2_1()); }
(rule__DuringAction__EffectsAssignment_4_2_1)
{ after(grammarAccess.getDuringActionAccess().getEffectsAssignment_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExitAction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExitAction__Group__0__Impl
	rule__ExitAction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExitAction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitActionAccess().getExitActionAction_0()); }
(

)
{ after(grammarAccess.getExitActionAccess().getExitActionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExitAction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExitAction__Group__1__Impl
	rule__ExitAction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExitAction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitActionAccess().getExitKeyword_1()); }

	'exit' 

{ after(grammarAccess.getExitActionAccess().getExitKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExitAction__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExitAction__Group__2__Impl
	rule__ExitAction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExitAction__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitActionAccess().getTriggerAssignment_2()); }
(rule__ExitAction__TriggerAssignment_2)?
{ after(grammarAccess.getExitActionAccess().getTriggerAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExitAction__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExitAction__Group__3__Impl
	rule__ExitAction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExitAction__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitActionAccess().getGroup_3()); }
(rule__ExitAction__Group_3__0)?
{ after(grammarAccess.getExitActionAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExitAction__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExitAction__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExitAction__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitActionAccess().getSemicolonKeyword_4()); }
(
	';' 
)?
{ after(grammarAccess.getExitActionAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ExitAction__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExitAction__Group_3__0__Impl
	rule__ExitAction__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExitAction__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitActionAccess().getSolidusKeyword_3_0()); }

	'/' 

{ after(grammarAccess.getExitActionAccess().getSolidusKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExitAction__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExitAction__Group_3__1__Impl
	rule__ExitAction__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExitAction__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitActionAccess().getEffectsAssignment_3_1()); }
(rule__ExitAction__EffectsAssignment_3_1)
{ after(grammarAccess.getExitActionAccess().getEffectsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExitAction__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExitAction__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExitAction__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitActionAccess().getGroup_3_2()); }
(rule__ExitAction__Group_3_2__0)*
{ after(grammarAccess.getExitActionAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExitAction__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExitAction__Group_3_2__0__Impl
	rule__ExitAction__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExitAction__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitActionAccess().getSemicolonKeyword_3_2_0()); }

	';' 

{ after(grammarAccess.getExitActionAccess().getSemicolonKeyword_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExitAction__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExitAction__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExitAction__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitActionAccess().getEffectsAssignment_3_2_1()); }
(rule__ExitAction__EffectsAssignment_3_2_1)
{ after(grammarAccess.getExitActionAccess().getEffectsAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SuspendAction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuspendAction__Group__0__Impl
	rule__SuspendAction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SuspendAction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuspendActionAccess().getSuspendActionAction_0()); }
(

)
{ after(grammarAccess.getSuspendActionAccess().getSuspendActionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuspendAction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuspendAction__Group__1__Impl
	rule__SuspendAction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SuspendAction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuspendActionAccess().getImmediateAssignment_1()); }
(rule__SuspendAction__ImmediateAssignment_1)?
{ after(grammarAccess.getSuspendActionAccess().getImmediateAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuspendAction__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuspendAction__Group__2__Impl
	rule__SuspendAction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SuspendAction__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuspendActionAccess().getWeakAssignment_2()); }
(rule__SuspendAction__WeakAssignment_2)?
{ after(grammarAccess.getSuspendActionAccess().getWeakAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuspendAction__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuspendAction__Group__3__Impl
	rule__SuspendAction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SuspendAction__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuspendActionAccess().getSuspendKeyword_3()); }

	'suspend' 

{ after(grammarAccess.getSuspendActionAccess().getSuspendKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuspendAction__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuspendAction__Group__4__Impl
	rule__SuspendAction__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SuspendAction__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuspendActionAccess().getTriggerAssignment_4()); }
(rule__SuspendAction__TriggerAssignment_4)?
{ after(grammarAccess.getSuspendActionAccess().getTriggerAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuspendAction__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuspendAction__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SuspendAction__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuspendActionAccess().getSemicolonKeyword_5()); }
(
	';' 
)?
{ after(grammarAccess.getSuspendActionAccess().getSemicolonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__IterateAction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterateAction__Group__0__Impl
	rule__IterateAction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateAction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterateActionAccess().getIterateActionAction_0()); }
(

)
{ after(grammarAccess.getIterateActionAccess().getIterateActionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IterateAction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterateAction__Group__1__Impl
	rule__IterateAction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateAction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterateActionAccess().getImmediateAssignment_1()); }
(rule__IterateAction__ImmediateAssignment_1)?
{ after(grammarAccess.getIterateActionAccess().getImmediateAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IterateAction__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterateAction__Group__2__Impl
	rule__IterateAction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateAction__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterateActionAccess().getIterateKeyword_2()); }

	'iterate' 

{ after(grammarAccess.getIterateActionAccess().getIterateKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IterateAction__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterateAction__Group__3__Impl
	rule__IterateAction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateAction__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterateActionAccess().getTriggerAssignment_3()); }
(rule__IterateAction__TriggerAssignment_3)?
{ after(grammarAccess.getIterateActionAccess().getTriggerAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IterateAction__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterateAction__Group__4__Impl
	rule__IterateAction__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateAction__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterateActionAccess().getGroup_4()); }
(rule__IterateAction__Group_4__0)?
{ after(grammarAccess.getIterateActionAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IterateAction__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterateAction__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateAction__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterateActionAccess().getSemicolonKeyword_5()); }
(
	';' 
)?
{ after(grammarAccess.getIterateActionAccess().getSemicolonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__IterateAction__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterateAction__Group_4__0__Impl
	rule__IterateAction__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateAction__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterateActionAccess().getSolidusKeyword_4_0()); }

	'/' 

{ after(grammarAccess.getIterateActionAccess().getSolidusKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IterateAction__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterateAction__Group_4__1__Impl
	rule__IterateAction__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateAction__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterateActionAccess().getEffectsAssignment_4_1()); }
(rule__IterateAction__EffectsAssignment_4_1)
{ after(grammarAccess.getIterateActionAccess().getEffectsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IterateAction__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterateAction__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateAction__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterateActionAccess().getGroup_4_2()); }
(rule__IterateAction__Group_4_2__0)*
{ after(grammarAccess.getIterateActionAccess().getGroup_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IterateAction__Group_4_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterateAction__Group_4_2__0__Impl
	rule__IterateAction__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateAction__Group_4_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterateActionAccess().getSemicolonKeyword_4_2_0()); }

	';' 

{ after(grammarAccess.getIterateActionAccess().getSemicolonKeyword_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IterateAction__Group_4_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterateAction__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateAction__Group_4_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterateActionAccess().getEffectsAssignment_4_2_1()); }
(rule__IterateAction__EffectsAssignment_4_2_1)
{ after(grammarAccess.getIterateActionAccess().getEffectsAssignment_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Emission__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Emission__Group__0__Impl
	rule__Emission__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Emission__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmissionAccess().getValuedObjectAssignment_0()); }
(rule__Emission__ValuedObjectAssignment_0)
{ after(grammarAccess.getEmissionAccess().getValuedObjectAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Emission__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Emission__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Emission__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmissionAccess().getGroup_1()); }
(rule__Emission__Group_1__0)?
{ after(grammarAccess.getEmissionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Emission__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Emission__Group_1__0__Impl
	rule__Emission__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Emission__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmissionAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getEmissionAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Emission__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Emission__Group_1__1__Impl
	rule__Emission__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Emission__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmissionAccess().getNewValueAssignment_1_1()); }
(rule__Emission__NewValueAssignment_1_1)
{ after(grammarAccess.getEmissionAccess().getNewValueAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Emission__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Emission__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Emission__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmissionAccess().getRightParenthesisKeyword_1_2()); }

	')' 

{ after(grammarAccess.getEmissionAccess().getRightParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Assignment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group__0__Impl
	rule__Assignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getValuedObjectAssignment_0()); }
(rule__Assignment__ValuedObjectAssignment_0)
{ after(grammarAccess.getAssignmentAccess().getValuedObjectAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group__1__Impl
	rule__Assignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getGroup_1()); }
(rule__Assignment__Group_1__0)*
{ after(grammarAccess.getAssignmentAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group__2__Impl
	rule__Assignment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getAssignmentAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getExpressionAssignment_3()); }
(rule__Assignment__ExpressionAssignment_3)
{ after(grammarAccess.getAssignmentAccess().getExpressionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Assignment__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_1__0__Impl
	rule__Assignment__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getLeftSquareBracketKeyword_1_0()); }

	'[' 

{ after(grammarAccess.getAssignmentAccess().getLeftSquareBracketKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_1__1__Impl
	rule__Assignment__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getIndicesAssignment_1_1()); }
(rule__Assignment__IndicesAssignment_1_1)
{ after(grammarAccess.getAssignmentAccess().getIndicesAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getRightSquareBracketKeyword_1_2()); }

	']' 

{ after(grammarAccess.getAssignmentAccess().getRightSquareBracketKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FunctionCallEffect__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallEffect__Group__0__Impl
	rule__FunctionCallEffect__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallEffect__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getLessThanSignKeyword_0()); }

	'<' 

{ after(grammarAccess.getFunctionCallEffectAccess().getLessThanSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallEffect__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallEffect__Group__1__Impl
	rule__FunctionCallEffect__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallEffect__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getFunctionNameAssignment_1()); }
(rule__FunctionCallEffect__FunctionNameAssignment_1)
{ after(grammarAccess.getFunctionCallEffectAccess().getFunctionNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallEffect__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallEffect__Group__2__Impl
	rule__FunctionCallEffect__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallEffect__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getAlternatives_2()); }
(rule__FunctionCallEffect__Alternatives_2)?
{ after(grammarAccess.getFunctionCallEffectAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallEffect__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallEffect__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallEffect__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getGreaterThanSignKeyword_3()); }

	'>' 

{ after(grammarAccess.getFunctionCallEffectAccess().getGreaterThanSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FunctionCallEffect__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallEffect__Group_2_0__0__Impl
	rule__FunctionCallEffect__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallEffect__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getLeftParenthesisKeyword_2_0_0()); }

	'(' 

{ after(grammarAccess.getFunctionCallEffectAccess().getLeftParenthesisKeyword_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallEffect__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallEffect__Group_2_0__1__Impl
	rule__FunctionCallEffect__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallEffect__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getParametersAssignment_2_0_1()); }
(rule__FunctionCallEffect__ParametersAssignment_2_0_1)
{ after(grammarAccess.getFunctionCallEffectAccess().getParametersAssignment_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallEffect__Group_2_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallEffect__Group_2_0__2__Impl
	rule__FunctionCallEffect__Group_2_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallEffect__Group_2_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getGroup_2_0_2()); }
(rule__FunctionCallEffect__Group_2_0_2__0)*
{ after(grammarAccess.getFunctionCallEffectAccess().getGroup_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallEffect__Group_2_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallEffect__Group_2_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallEffect__Group_2_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getRightParenthesisKeyword_2_0_3()); }

	')' 

{ after(grammarAccess.getFunctionCallEffectAccess().getRightParenthesisKeyword_2_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FunctionCallEffect__Group_2_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallEffect__Group_2_0_2__0__Impl
	rule__FunctionCallEffect__Group_2_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallEffect__Group_2_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getCommaKeyword_2_0_2_0()); }

	',' 

{ after(grammarAccess.getFunctionCallEffectAccess().getCommaKeyword_2_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallEffect__Group_2_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallEffect__Group_2_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallEffect__Group_2_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getParametersAssignment_2_0_2_1()); }
(rule__FunctionCallEffect__ParametersAssignment_2_0_2_1)
{ after(grammarAccess.getFunctionCallEffectAccess().getParametersAssignment_2_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Parameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getCallByReferenceAssignment_0()); }
(rule__Parameter__CallByReferenceAssignment_0)?
{ after(grammarAccess.getParameterAccess().getCallByReferenceAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getExpressionAssignment_1()); }
(rule__Parameter__ExpressionAssignment_1)
{ after(grammarAccess.getParameterAccess().getExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrAndExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrAndExpression__Group__0__Impl
	rule__OrAndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrAndExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAndExpressionAccess().getCompareOperationParserRuleCall_0()); }
	ruleCompareOperation
{ after(grammarAccess.getOrAndExpressionAccess().getCompareOperationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrAndExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrAndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrAndExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAndExpressionAccess().getAlternatives_1()); }
(rule__OrAndExpression__Alternatives_1)
{ after(grammarAccess.getOrAndExpressionAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrAndExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrAndExpression__Group_1_0__0__Impl
	rule__OrAndExpression__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrAndExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAndExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0_0()); }
(

)
{ after(grammarAccess.getOrAndExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrAndExpression__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrAndExpression__Group_1_0__1__Impl
	rule__OrAndExpression__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrAndExpression__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAndExpressionAccess().getOperatorAssignment_1_0_1()); }
(rule__OrAndExpression__OperatorAssignment_1_0_1)
{ after(grammarAccess.getOrAndExpressionAccess().getOperatorAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrAndExpression__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrAndExpression__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrAndExpression__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAndExpressionAccess().getSubExpressionsAssignment_1_0_2()); }
(rule__OrAndExpression__SubExpressionsAssignment_1_0_2)
{ after(grammarAccess.getOrAndExpressionAccess().getSubExpressionsAssignment_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__OrAndExpression__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrAndExpression__Group_1_1__0__Impl
	rule__OrAndExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrAndExpression__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAndExpressionAccess().getOperatorExpressionSubExpressionsAction_1_1_0()); }
(

)
{ after(grammarAccess.getOrAndExpressionAccess().getOperatorExpressionSubExpressionsAction_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrAndExpression__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrAndExpression__Group_1_1__1__Impl
	rule__OrAndExpression__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrAndExpression__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAndExpressionAccess().getOperatorAssignment_1_1_1()); }
(rule__OrAndExpression__OperatorAssignment_1_1_1)
{ after(grammarAccess.getOrAndExpressionAccess().getOperatorAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrAndExpression__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrAndExpression__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrAndExpression__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAndExpressionAccess().getSubExpressionsAssignment_1_1_2()); }
(rule__OrAndExpression__SubExpressionsAssignment_1_1_2)
{ after(grammarAccess.getOrAndExpressionAccess().getSubExpressionsAssignment_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__CompareOperation__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareOperation__Group_0__0__Impl
	rule__CompareOperation__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperationAccess().getNotOrValuedExpressionParserRuleCall_0_0()); }
	ruleNotOrValuedExpression
{ after(grammarAccess.getCompareOperationAccess().getNotOrValuedExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompareOperation__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareOperation__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperationAccess().getGroup_0_1()); }
(rule__CompareOperation__Group_0_1__0)
{ after(grammarAccess.getCompareOperationAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CompareOperation__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareOperation__Group_0_1__0__Impl
	rule__CompareOperation__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperationAccess().getOperatorExpressionSubExpressionsAction_0_1_0()); }
(

)
{ after(grammarAccess.getCompareOperationAccess().getOperatorExpressionSubExpressionsAction_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompareOperation__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareOperation__Group_0_1__1__Impl
	rule__CompareOperation__Group_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperationAccess().getOperatorAssignment_0_1_1()); }
(rule__CompareOperation__OperatorAssignment_0_1_1)
{ after(grammarAccess.getCompareOperationAccess().getOperatorAssignment_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompareOperation__Group_0_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareOperation__Group_0_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Group_0_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperationAccess().getSubExpressionsAssignment_0_1_2()); }
(rule__CompareOperation__SubExpressionsAssignment_0_1_2)
{ after(grammarAccess.getCompareOperationAccess().getSubExpressionsAssignment_0_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NotExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NotExpression__Group_0__0__Impl
	rule__NotExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NotExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotExpressionAccess().getOperatorExpressionAction_0_0()); }
(

)
{ after(grammarAccess.getNotExpressionAccess().getOperatorExpressionAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NotExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NotExpression__Group_0__1__Impl
	rule__NotExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NotExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotExpressionAccess().getOperatorAssignment_0_1()); }
(rule__NotExpression__OperatorAssignment_0_1)
{ after(grammarAccess.getNotExpressionAccess().getOperatorAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NotExpression__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NotExpression__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NotExpression__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotExpressionAccess().getSubExpressionsAssignment_0_2()); }
(rule__NotExpression__SubExpressionsAssignment_0_2)
{ after(grammarAccess.getNotExpressionAccess().getSubExpressionsAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AddExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExpression__Group__0__Impl
	rule__AddExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getSubExpressionParserRuleCall_0()); }
	ruleSubExpression
{ after(grammarAccess.getAddExpressionAccess().getSubExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getGroup_1()); }
(rule__AddExpression__Group_1__0)*
{ after(grammarAccess.getAddExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AddExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExpression__Group_1__0__Impl
	rule__AddExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
(

)
{ after(grammarAccess.getAddExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExpression__Group_1__1__Impl
	rule__AddExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getOperatorAssignment_1_1()); }
(rule__AddExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getAddExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getSubExpressionsAssignment_1_2()); }
(rule__AddExpression__SubExpressionsAssignment_1_2)
{ after(grammarAccess.getAddExpressionAccess().getSubExpressionsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SubExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubExpression__Group__0__Impl
	rule__SubExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubExpressionAccess().getMultExpressionParserRuleCall_0()); }
	ruleMultExpression
{ after(grammarAccess.getSubExpressionAccess().getMultExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubExpressionAccess().getGroup_1()); }
(rule__SubExpression__Group_1__0)*
{ after(grammarAccess.getSubExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SubExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubExpression__Group_1__0__Impl
	rule__SubExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
(

)
{ after(grammarAccess.getSubExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubExpression__Group_1__1__Impl
	rule__SubExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubExpressionAccess().getOperatorAssignment_1_1()); }
(rule__SubExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getSubExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubExpressionAccess().getSubExpressionsAssignment_1_2()); }
(rule__SubExpression__SubExpressionsAssignment_1_2)
{ after(grammarAccess.getSubExpressionAccess().getSubExpressionsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MultExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultExpression__Group__0__Impl
	rule__MultExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultExpressionAccess().getDivExpressionParserRuleCall_0()); }
	ruleDivExpression
{ after(grammarAccess.getMultExpressionAccess().getDivExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultExpressionAccess().getGroup_1()); }
(rule__MultExpression__Group_1__0)*
{ after(grammarAccess.getMultExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultExpression__Group_1__0__Impl
	rule__MultExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
(

)
{ after(grammarAccess.getMultExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultExpression__Group_1__1__Impl
	rule__MultExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultExpressionAccess().getOperatorAssignment_1_1()); }
(rule__MultExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getMultExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultExpressionAccess().getSubExpressionsAssignment_1_2()); }
(rule__MultExpression__SubExpressionsAssignment_1_2)
{ after(grammarAccess.getMultExpressionAccess().getSubExpressionsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DivExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DivExpression__Group__0__Impl
	rule__DivExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DivExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivExpressionAccess().getModExpressionParserRuleCall_0()); }
	ruleModExpression
{ after(grammarAccess.getDivExpressionAccess().getModExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DivExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DivExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DivExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivExpressionAccess().getGroup_1()); }
(rule__DivExpression__Group_1__0)?
{ after(grammarAccess.getDivExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DivExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DivExpression__Group_1__0__Impl
	rule__DivExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DivExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
(

)
{ after(grammarAccess.getDivExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DivExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DivExpression__Group_1__1__Impl
	rule__DivExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DivExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivExpressionAccess().getOperatorAssignment_1_1()); }
(rule__DivExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getDivExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DivExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DivExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DivExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivExpressionAccess().getSubExpressionsAssignment_1_2()); }
(rule__DivExpression__SubExpressionsAssignment_1_2)
{ after(grammarAccess.getDivExpressionAccess().getSubExpressionsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ModExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModExpression__Group__0__Impl
	rule__ModExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModExpressionAccess().getNegExpressionParserRuleCall_0()); }
	ruleNegExpression
{ after(grammarAccess.getModExpressionAccess().getNegExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModExpressionAccess().getGroup_1()); }
(rule__ModExpression__Group_1__0)?
{ after(grammarAccess.getModExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ModExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModExpression__Group_1__0__Impl
	rule__ModExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
(

)
{ after(grammarAccess.getModExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModExpression__Group_1__1__Impl
	rule__ModExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModExpressionAccess().getOperatorAssignment_1_1()); }
(rule__ModExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getModExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModExpressionAccess().getSubExpressionsAssignment_1_2()); }
(rule__ModExpression__SubExpressionsAssignment_1_2)
{ after(grammarAccess.getModExpressionAccess().getSubExpressionsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NegExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NegExpression__Group_0__0__Impl
	rule__NegExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NegExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegExpressionAccess().getOperatorExpressionAction_0_0()); }
(

)
{ after(grammarAccess.getNegExpressionAccess().getOperatorExpressionAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NegExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NegExpression__Group_0__1__Impl
	rule__NegExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NegExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegExpressionAccess().getOperatorAssignment_0_1()); }
(rule__NegExpression__OperatorAssignment_0_1)
{ after(grammarAccess.getNegExpressionAccess().getOperatorAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NegExpression__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NegExpression__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NegExpression__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegExpressionAccess().getSubExpressionsAssignment_0_2()); }
(rule__NegExpression__SubExpressionsAssignment_0_2)
{ after(grammarAccess.getNegExpressionAccess().getSubExpressionsAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AtomicExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpression__Group_2__0__Impl
	rule__AtomicExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpressionAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getAtomicExpressionAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpression__Group_2__1__Impl
	rule__AtomicExpression__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpressionAccess().getBoolExpressionParserRuleCall_2_1()); }
	ruleBoolExpression
{ after(grammarAccess.getAtomicExpressionAccess().getBoolExpressionParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpression__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpression__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpressionAccess().getRightParenthesisKeyword_2_2()); }

	')' 

{ after(grammarAccess.getAtomicExpressionAccess().getRightParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AtomicValuedExpression__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicValuedExpression__Group_3__0__Impl
	rule__AtomicValuedExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicValuedExpression__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicValuedExpressionAccess().getLeftParenthesisKeyword_3_0()); }

	'(' 

{ after(grammarAccess.getAtomicValuedExpressionAccess().getLeftParenthesisKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicValuedExpression__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicValuedExpression__Group_3__1__Impl
	rule__AtomicValuedExpression__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicValuedExpression__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicValuedExpressionAccess().getValuedExpressionParserRuleCall_3_1()); }
	ruleValuedExpression
{ after(grammarAccess.getAtomicValuedExpressionAccess().getValuedExpressionParserRuleCall_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicValuedExpression__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicValuedExpression__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicValuedExpression__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicValuedExpressionAccess().getRightParenthesisKeyword_3_2()); }

	')' 

{ after(grammarAccess.getAtomicValuedExpressionAccess().getRightParenthesisKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ValuedObjectTestExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObjectTestExpression__Group_0__0__Impl
	rule__ValuedObjectTestExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectTestExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorExpressionAction_0_0()); }
(

)
{ after(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorExpressionAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuedObjectTestExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObjectTestExpression__Group_0__1__Impl
	rule__ValuedObjectTestExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectTestExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorAssignment_0_1()); }
(rule__ValuedObjectTestExpression__OperatorAssignment_0_1)
{ after(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuedObjectTestExpression__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObjectTestExpression__Group_0__2__Impl
	rule__ValuedObjectTestExpression__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectTestExpression__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getLeftParenthesisKeyword_0_2()); }

	'(' 

{ after(grammarAccess.getValuedObjectTestExpressionAccess().getLeftParenthesisKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuedObjectTestExpression__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObjectTestExpression__Group_0__3__Impl
	rule__ValuedObjectTestExpression__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectTestExpression__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsAssignment_0_3()); }
(rule__ValuedObjectTestExpression__SubExpressionsAssignment_0_3)
{ after(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsAssignment_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuedObjectTestExpression__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObjectTestExpression__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectTestExpression__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getRightParenthesisKeyword_0_4()); }

	')' 

{ after(grammarAccess.getValuedObjectTestExpressionAccess().getRightParenthesisKeyword_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ValuedObjectReference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObjectReference__Group__0__Impl
	rule__ValuedObjectReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectReference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectReferenceAccess().getValuedObjectAssignment_0()); }
(rule__ValuedObjectReference__ValuedObjectAssignment_0)
{ after(grammarAccess.getValuedObjectReferenceAccess().getValuedObjectAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuedObjectReference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObjectReference__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectReference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectReferenceAccess().getGroup_1()); }
(rule__ValuedObjectReference__Group_1__0)*
{ after(grammarAccess.getValuedObjectReferenceAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ValuedObjectReference__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObjectReference__Group_1__0__Impl
	rule__ValuedObjectReference__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectReference__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectReferenceAccess().getLeftSquareBracketKeyword_1_0()); }

	'[' 

{ after(grammarAccess.getValuedObjectReferenceAccess().getLeftSquareBracketKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuedObjectReference__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObjectReference__Group_1__1__Impl
	rule__ValuedObjectReference__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectReference__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectReferenceAccess().getIndicesAssignment_1_1()); }
(rule__ValuedObjectReference__IndicesAssignment_1_1)
{ after(grammarAccess.getValuedObjectReferenceAccess().getIndicesAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuedObjectReference__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObjectReference__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectReference__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectReferenceAccess().getRightSquareBracketKeyword_1_2()); }

	']' 

{ after(grammarAccess.getValuedObjectReferenceAccess().getRightSquareBracketKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FunctionCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group__0__Impl
	rule__FunctionCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getLessThanSignKeyword_0()); }

	'<' 

{ after(grammarAccess.getFunctionCallAccess().getLessThanSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group__1__Impl
	rule__FunctionCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getFunctionNameAssignment_1()); }
(rule__FunctionCall__FunctionNameAssignment_1)
{ after(grammarAccess.getFunctionCallAccess().getFunctionNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group__2__Impl
	rule__FunctionCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getAlternatives_2()); }
(rule__FunctionCall__Alternatives_2)?
{ after(grammarAccess.getFunctionCallAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getGreaterThanSignKeyword_3()); }

	'>' 

{ after(grammarAccess.getFunctionCallAccess().getGreaterThanSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FunctionCall__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_2_0__0__Impl
	rule__FunctionCall__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_2_0_0()); }

	'(' 

{ after(grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_2_0__1__Impl
	rule__FunctionCall__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getParametersAssignment_2_0_1()); }
(rule__FunctionCall__ParametersAssignment_2_0_1)
{ after(grammarAccess.getFunctionCallAccess().getParametersAssignment_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_2_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_2_0__2__Impl
	rule__FunctionCall__Group_2_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_2_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getGroup_2_0_2()); }
(rule__FunctionCall__Group_2_0_2__0)*
{ after(grammarAccess.getFunctionCallAccess().getGroup_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_2_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_2_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_2_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_2_0_3()); }

	')' 

{ after(grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_2_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FunctionCall__Group_2_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_2_0_2__0__Impl
	rule__FunctionCall__Group_2_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_2_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getCommaKeyword_2_0_2_0()); }

	',' 

{ after(grammarAccess.getFunctionCallAccess().getCommaKeyword_2_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_2_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_2_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_2_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getParametersAssignment_2_0_2_1()); }
(rule__FunctionCall__ParametersAssignment_2_0_2_1)
{ after(grammarAccess.getFunctionCallAccess().getParametersAssignment_2_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TagAnnotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagAnnotation__Group__0__Impl
	rule__TagAnnotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TagAnnotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagAnnotationAccess().getCommercialAtKeyword_0()); }

	'@' 

{ after(grammarAccess.getTagAnnotationAccess().getCommercialAtKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TagAnnotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagAnnotation__Group__1__Impl
	rule__TagAnnotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TagAnnotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagAnnotationAccess().getNameAssignment_1()); }
(rule__TagAnnotation__NameAssignment_1)
{ after(grammarAccess.getTagAnnotationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TagAnnotation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagAnnotation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TagAnnotation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagAnnotationAccess().getGroup_2()); }
(rule__TagAnnotation__Group_2__0)?
{ after(grammarAccess.getTagAnnotationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TagAnnotation__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagAnnotation__Group_2__0__Impl
	rule__TagAnnotation__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TagAnnotation__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagAnnotationAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getTagAnnotationAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TagAnnotation__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagAnnotation__Group_2__1__Impl
	rule__TagAnnotation__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TagAnnotation__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagAnnotationAccess().getAnnotationsAssignment_2_1()); }
(rule__TagAnnotation__AnnotationsAssignment_2_1)*
{ after(grammarAccess.getTagAnnotationAccess().getAnnotationsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TagAnnotation__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagAnnotation__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TagAnnotation__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagAnnotationAccess().getRightParenthesisKeyword_2_2()); }

	')' 

{ after(grammarAccess.getTagAnnotationAccess().getRightParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__KeyStringValueAnnotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyStringValueAnnotation__Group__0__Impl
	rule__KeyStringValueAnnotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStringValueAnnotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getCommercialAtKeyword_0()); }

	'@' 

{ after(grammarAccess.getKeyStringValueAnnotationAccess().getCommercialAtKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyStringValueAnnotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyStringValueAnnotation__Group__1__Impl
	rule__KeyStringValueAnnotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStringValueAnnotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getNameAssignment_1()); }
(rule__KeyStringValueAnnotation__NameAssignment_1)
{ after(grammarAccess.getKeyStringValueAnnotationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyStringValueAnnotation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyStringValueAnnotation__Group__2__Impl
	rule__KeyStringValueAnnotation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStringValueAnnotation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getValueAssignment_2()); }
(rule__KeyStringValueAnnotation__ValueAssignment_2)
{ after(grammarAccess.getKeyStringValueAnnotationAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyStringValueAnnotation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyStringValueAnnotation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStringValueAnnotation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getGroup_3()); }
(rule__KeyStringValueAnnotation__Group_3__0)?
{ after(grammarAccess.getKeyStringValueAnnotationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__KeyStringValueAnnotation__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyStringValueAnnotation__Group_3__0__Impl
	rule__KeyStringValueAnnotation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStringValueAnnotation__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getLeftParenthesisKeyword_3_0()); }

	'(' 

{ after(grammarAccess.getKeyStringValueAnnotationAccess().getLeftParenthesisKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyStringValueAnnotation__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyStringValueAnnotation__Group_3__1__Impl
	rule__KeyStringValueAnnotation__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStringValueAnnotation__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getAnnotationsAssignment_3_1()); }
(rule__KeyStringValueAnnotation__AnnotationsAssignment_3_1)*
{ after(grammarAccess.getKeyStringValueAnnotationAccess().getAnnotationsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyStringValueAnnotation__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyStringValueAnnotation__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStringValueAnnotation__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getRightParenthesisKeyword_3_2()); }

	')' 

{ after(grammarAccess.getKeyStringValueAnnotationAccess().getRightParenthesisKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TypedKeyStringValueAnnotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedKeyStringValueAnnotation__Group__0__Impl
	rule__TypedKeyStringValueAnnotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0()); }

	'@' 

{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedKeyStringValueAnnotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedKeyStringValueAnnotation__Group__1__Impl
	rule__TypedKeyStringValueAnnotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getNameAssignment_1()); }
(rule__TypedKeyStringValueAnnotation__NameAssignment_1)
{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedKeyStringValueAnnotation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedKeyStringValueAnnotation__Group__2__Impl
	rule__TypedKeyStringValueAnnotation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getLeftSquareBracketKeyword_2()); }

	'[' 

{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getLeftSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedKeyStringValueAnnotation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedKeyStringValueAnnotation__Group__3__Impl
	rule__TypedKeyStringValueAnnotation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getTypeAssignment_3()); }
(rule__TypedKeyStringValueAnnotation__TypeAssignment_3)
{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedKeyStringValueAnnotation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedKeyStringValueAnnotation__Group__4__Impl
	rule__TypedKeyStringValueAnnotation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getRightSquareBracketKeyword_4()); }

	']' 

{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getRightSquareBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedKeyStringValueAnnotation__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedKeyStringValueAnnotation__Group__5__Impl
	rule__TypedKeyStringValueAnnotation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValueAssignment_5()); }
(rule__TypedKeyStringValueAnnotation__ValueAssignment_5)
{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValueAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedKeyStringValueAnnotation__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedKeyStringValueAnnotation__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getGroup_6()); }
(rule__TypedKeyStringValueAnnotation__Group_6__0)?
{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__TypedKeyStringValueAnnotation__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedKeyStringValueAnnotation__Group_6__0__Impl
	rule__TypedKeyStringValueAnnotation__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getLeftParenthesisKeyword_6_0()); }

	'(' 

{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getLeftParenthesisKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedKeyStringValueAnnotation__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedKeyStringValueAnnotation__Group_6__1__Impl
	rule__TypedKeyStringValueAnnotation__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getAnnotationsAssignment_6_1()); }
(rule__TypedKeyStringValueAnnotation__AnnotationsAssignment_6_1)*
{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getAnnotationsAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedKeyStringValueAnnotation__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedKeyStringValueAnnotation__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getRightParenthesisKeyword_6_2()); }

	')' 

{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getRightParenthesisKeyword_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__KeyBooleanValueAnnotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyBooleanValueAnnotation__Group__0__Impl
	rule__KeyBooleanValueAnnotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyBooleanValueAnnotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyBooleanValueAnnotationAccess().getCommercialAtKeyword_0()); }

	'@' 

{ after(grammarAccess.getKeyBooleanValueAnnotationAccess().getCommercialAtKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyBooleanValueAnnotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyBooleanValueAnnotation__Group__1__Impl
	rule__KeyBooleanValueAnnotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyBooleanValueAnnotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyBooleanValueAnnotationAccess().getNameAssignment_1()); }
(rule__KeyBooleanValueAnnotation__NameAssignment_1)
{ after(grammarAccess.getKeyBooleanValueAnnotationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyBooleanValueAnnotation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyBooleanValueAnnotation__Group__2__Impl
	rule__KeyBooleanValueAnnotation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyBooleanValueAnnotation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyBooleanValueAnnotationAccess().getValueAssignment_2()); }
(rule__KeyBooleanValueAnnotation__ValueAssignment_2)
{ after(grammarAccess.getKeyBooleanValueAnnotationAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyBooleanValueAnnotation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyBooleanValueAnnotation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyBooleanValueAnnotation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyBooleanValueAnnotationAccess().getGroup_3()); }
(rule__KeyBooleanValueAnnotation__Group_3__0)?
{ after(grammarAccess.getKeyBooleanValueAnnotationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__KeyBooleanValueAnnotation__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyBooleanValueAnnotation__Group_3__0__Impl
	rule__KeyBooleanValueAnnotation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyBooleanValueAnnotation__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyBooleanValueAnnotationAccess().getLeftParenthesisKeyword_3_0()); }

	'(' 

{ after(grammarAccess.getKeyBooleanValueAnnotationAccess().getLeftParenthesisKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyBooleanValueAnnotation__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyBooleanValueAnnotation__Group_3__1__Impl
	rule__KeyBooleanValueAnnotation__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyBooleanValueAnnotation__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyBooleanValueAnnotationAccess().getAnnotationsAssignment_3_1()); }
(rule__KeyBooleanValueAnnotation__AnnotationsAssignment_3_1)*
{ after(grammarAccess.getKeyBooleanValueAnnotationAccess().getAnnotationsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyBooleanValueAnnotation__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyBooleanValueAnnotation__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyBooleanValueAnnotation__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyBooleanValueAnnotationAccess().getRightParenthesisKeyword_3_2()); }

	')' 

{ after(grammarAccess.getKeyBooleanValueAnnotationAccess().getRightParenthesisKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__KeyIntValueAnnotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyIntValueAnnotation__Group__0__Impl
	rule__KeyIntValueAnnotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyIntValueAnnotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyIntValueAnnotationAccess().getCommercialAtKeyword_0()); }

	'@' 

{ after(grammarAccess.getKeyIntValueAnnotationAccess().getCommercialAtKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyIntValueAnnotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyIntValueAnnotation__Group__1__Impl
	rule__KeyIntValueAnnotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyIntValueAnnotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyIntValueAnnotationAccess().getNameAssignment_1()); }
(rule__KeyIntValueAnnotation__NameAssignment_1)
{ after(grammarAccess.getKeyIntValueAnnotationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyIntValueAnnotation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyIntValueAnnotation__Group__2__Impl
	rule__KeyIntValueAnnotation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyIntValueAnnotation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyIntValueAnnotationAccess().getValueAssignment_2()); }
(rule__KeyIntValueAnnotation__ValueAssignment_2)
{ after(grammarAccess.getKeyIntValueAnnotationAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyIntValueAnnotation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyIntValueAnnotation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyIntValueAnnotation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyIntValueAnnotationAccess().getGroup_3()); }
(rule__KeyIntValueAnnotation__Group_3__0)?
{ after(grammarAccess.getKeyIntValueAnnotationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__KeyIntValueAnnotation__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyIntValueAnnotation__Group_3__0__Impl
	rule__KeyIntValueAnnotation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyIntValueAnnotation__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyIntValueAnnotationAccess().getLeftParenthesisKeyword_3_0()); }

	'(' 

{ after(grammarAccess.getKeyIntValueAnnotationAccess().getLeftParenthesisKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyIntValueAnnotation__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyIntValueAnnotation__Group_3__1__Impl
	rule__KeyIntValueAnnotation__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyIntValueAnnotation__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyIntValueAnnotationAccess().getAnnotationsAssignment_3_1()); }
(rule__KeyIntValueAnnotation__AnnotationsAssignment_3_1)*
{ after(grammarAccess.getKeyIntValueAnnotationAccess().getAnnotationsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyIntValueAnnotation__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyIntValueAnnotation__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyIntValueAnnotation__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyIntValueAnnotationAccess().getRightParenthesisKeyword_3_2()); }

	')' 

{ after(grammarAccess.getKeyIntValueAnnotationAccess().getRightParenthesisKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__KeyFloatValueAnnotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyFloatValueAnnotation__Group__0__Impl
	rule__KeyFloatValueAnnotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyFloatValueAnnotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyFloatValueAnnotationAccess().getCommercialAtKeyword_0()); }

	'@' 

{ after(grammarAccess.getKeyFloatValueAnnotationAccess().getCommercialAtKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyFloatValueAnnotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyFloatValueAnnotation__Group__1__Impl
	rule__KeyFloatValueAnnotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyFloatValueAnnotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyFloatValueAnnotationAccess().getNameAssignment_1()); }
(rule__KeyFloatValueAnnotation__NameAssignment_1)
{ after(grammarAccess.getKeyFloatValueAnnotationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyFloatValueAnnotation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyFloatValueAnnotation__Group__2__Impl
	rule__KeyFloatValueAnnotation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyFloatValueAnnotation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyFloatValueAnnotationAccess().getValueAssignment_2()); }
(rule__KeyFloatValueAnnotation__ValueAssignment_2)
{ after(grammarAccess.getKeyFloatValueAnnotationAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyFloatValueAnnotation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyFloatValueAnnotation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyFloatValueAnnotation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyFloatValueAnnotationAccess().getGroup_3()); }
(rule__KeyFloatValueAnnotation__Group_3__0)?
{ after(grammarAccess.getKeyFloatValueAnnotationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__KeyFloatValueAnnotation__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyFloatValueAnnotation__Group_3__0__Impl
	rule__KeyFloatValueAnnotation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyFloatValueAnnotation__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyFloatValueAnnotationAccess().getLeftParenthesisKeyword_3_0()); }

	'(' 

{ after(grammarAccess.getKeyFloatValueAnnotationAccess().getLeftParenthesisKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyFloatValueAnnotation__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyFloatValueAnnotation__Group_3__1__Impl
	rule__KeyFloatValueAnnotation__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyFloatValueAnnotation__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyFloatValueAnnotationAccess().getAnnotationsAssignment_3_1()); }
(rule__KeyFloatValueAnnotation__AnnotationsAssignment_3_1)*
{ after(grammarAccess.getKeyFloatValueAnnotationAccess().getAnnotationsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyFloatValueAnnotation__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyFloatValueAnnotation__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyFloatValueAnnotation__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyFloatValueAnnotationAccess().getRightParenthesisKeyword_3_2()); }

	')' 

{ after(grammarAccess.getKeyFloatValueAnnotationAccess().getRightParenthesisKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__ExtendedID__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtendedID__Group__0__Impl
	rule__ExtendedID__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedID__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendedIDAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getExtendedIDAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExtendedID__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtendedID__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedID__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendedIDAccess().getGroup_1()); }
(rule__ExtendedID__Group_1__0)*
{ after(grammarAccess.getExtendedIDAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExtendedID__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtendedID__Group_1__0__Impl
	rule__ExtendedID__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedID__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendedIDAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getExtendedIDAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExtendedID__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtendedID__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedID__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendedIDAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getExtendedIDAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__SingleControlflowRegion__AnnotationsAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleControlflowRegionAccess().getAnnotationsAnnotationParserRuleCall_1_0_0()); }
	ruleAnnotation{ after(grammarAccess.getSingleControlflowRegionAccess().getAnnotationsAnnotationParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SingleControlflowRegion__IdAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleControlflowRegionAccess().getIdIDTerminalRuleCall_1_2_0()); }
	RULE_ID{ after(grammarAccess.getSingleControlflowRegionAccess().getIdIDTerminalRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SingleControlflowRegion__LabelAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleControlflowRegionAccess().getLabelSTRINGTerminalRuleCall_1_3_0()); }
	RULE_STRING{ after(grammarAccess.getSingleControlflowRegionAccess().getLabelSTRINGTerminalRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SingleControlflowRegion__ForAssignment_1_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleControlflowRegionAccess().getForForParserRuleCall_1_4_1_0()); }
	ruleFor{ after(grammarAccess.getSingleControlflowRegionAccess().getForForParserRuleCall_1_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SingleControlflowRegion__DeclarationsAssignment_1_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleControlflowRegionAccess().getDeclarationsDeclarationParserRuleCall_1_6_0()); }
	ruleDeclaration{ after(grammarAccess.getSingleControlflowRegionAccess().getDeclarationsDeclarationParserRuleCall_1_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SingleControlflowRegion__StatesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleControlflowRegionAccess().getStatesStateParserRuleCall_2_0()); }
	ruleState{ after(grammarAccess.getSingleControlflowRegionAccess().getStatesStateParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SingleDataflowRegion__AnnotationsAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleDataflowRegionAccess().getAnnotationsAnnotationParserRuleCall_1_0_0()); }
	ruleAnnotation{ after(grammarAccess.getSingleDataflowRegionAccess().getAnnotationsAnnotationParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SingleDataflowRegion__IdAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleDataflowRegionAccess().getIdIDTerminalRuleCall_1_2_0()); }
	RULE_ID{ after(grammarAccess.getSingleDataflowRegionAccess().getIdIDTerminalRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SingleDataflowRegion__LabelAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleDataflowRegionAccess().getLabelSTRINGTerminalRuleCall_1_3_0()); }
	RULE_STRING{ after(grammarAccess.getSingleDataflowRegionAccess().getLabelSTRINGTerminalRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SingleDataflowRegion__ForAssignment_1_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleDataflowRegionAccess().getForForParserRuleCall_1_4_1_0()); }
	ruleFor{ after(grammarAccess.getSingleDataflowRegionAccess().getForForParserRuleCall_1_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SingleDataflowRegion__DeclarationsAssignment_1_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleDataflowRegionAccess().getDeclarationsDeclarationParserRuleCall_1_6_0()); }
	ruleDeclaration{ after(grammarAccess.getSingleDataflowRegionAccess().getDeclarationsDeclarationParserRuleCall_1_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SingleDataflowRegion__EquationsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleDataflowRegionAccess().getEquationsEquationParserRuleCall_2_0_0()); }
	ruleEquation{ after(grammarAccess.getSingleDataflowRegionAccess().getEquationsEquationParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SingleDataflowRegion__NodesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleDataflowRegionAccess().getNodesNodeParserRuleCall_2_1_0()); }
	ruleNode{ after(grammarAccess.getSingleDataflowRegionAccess().getNodesNodeParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__For__ValuedObjectAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAccess().getValuedObjectValuedObjectParserRuleCall_1_0()); }
	ruleValuedObject{ after(grammarAccess.getForAccess().getValuedObjectValuedObjectParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__For__FromAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAccess().getFromINTTerminalRuleCall_3_0()); }
	RULE_INT{ after(grammarAccess.getForAccess().getFromINTTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__For__ToAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAccess().getToINTTerminalRuleCall_5_0()); }
	RULE_INT{ after(grammarAccess.getForAccess().getToINTTerminalRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ControlflowRegion__AnnotationsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlflowRegionAccess().getAnnotationsAnnotationParserRuleCall_1_0()); }
	ruleAnnotation{ after(grammarAccess.getControlflowRegionAccess().getAnnotationsAnnotationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ControlflowRegion__IdAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlflowRegionAccess().getIdIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getControlflowRegionAccess().getIdIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ControlflowRegion__LabelAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlflowRegionAccess().getLabelSTRINGTerminalRuleCall_4_0()); }
	RULE_STRING{ after(grammarAccess.getControlflowRegionAccess().getLabelSTRINGTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ControlflowRegion__ForAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlflowRegionAccess().getForForParserRuleCall_5_1_0()); }
	ruleFor{ after(grammarAccess.getControlflowRegionAccess().getForForParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ControlflowRegion__DeclarationsAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlflowRegionAccess().getDeclarationsDeclarationParserRuleCall_7_0()); }
	ruleDeclaration{ after(grammarAccess.getControlflowRegionAccess().getDeclarationsDeclarationParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ControlflowRegion__StatesAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlflowRegionAccess().getStatesStateParserRuleCall_8_0()); }
	ruleState{ after(grammarAccess.getControlflowRegionAccess().getStatesStateParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowRegion__AnnotationsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataflowRegionAccess().getAnnotationsAnnotationParserRuleCall_1_0()); }
	ruleAnnotation{ after(grammarAccess.getDataflowRegionAccess().getAnnotationsAnnotationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowRegion__IdAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataflowRegionAccess().getIdIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getDataflowRegionAccess().getIdIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowRegion__LabelAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataflowRegionAccess().getLabelSTRINGTerminalRuleCall_4_0()); }
	RULE_STRING{ after(grammarAccess.getDataflowRegionAccess().getLabelSTRINGTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowRegion__ForAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataflowRegionAccess().getForForParserRuleCall_5_1_0()); }
	ruleFor{ after(grammarAccess.getDataflowRegionAccess().getForForParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowRegion__DeclarationsAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataflowRegionAccess().getDeclarationsDeclarationParserRuleCall_7_0()); }
	ruleDeclaration{ after(grammarAccess.getDataflowRegionAccess().getDeclarationsDeclarationParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowRegion__EquationsAssignment_8_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataflowRegionAccess().getEquationsEquationParserRuleCall_8_0_0()); }
	ruleEquation{ after(grammarAccess.getDataflowRegionAccess().getEquationsEquationParserRuleCall_8_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataflowRegion__NodesAssignment_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataflowRegionAccess().getNodesNodeParserRuleCall_8_1_0()); }
	ruleNode{ after(grammarAccess.getDataflowRegionAccess().getNodesNodeParserRuleCall_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__ValuedObjectAssignment_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquationAccess().getValuedObjectValuedObjectCrossReference_1_0_0_0()); }
(
{ before(grammarAccess.getEquationAccess().getValuedObjectValuedObjectIDTerminalRuleCall_1_0_0_0_1()); }
	RULE_ID{ after(grammarAccess.getEquationAccess().getValuedObjectValuedObjectIDTerminalRuleCall_1_0_0_0_1()); }
)
{ after(grammarAccess.getEquationAccess().getValuedObjectValuedObjectCrossReference_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__ExpressionAssignment_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquationAccess().getExpressionExpressionParserRuleCall_1_0_2_0()); }
	ruleExpression{ after(grammarAccess.getEquationAccess().getExpressionExpressionParserRuleCall_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__ValuedObjectAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquationAccess().getValuedObjectValuedObjectCrossReference_1_1_0_0()); }
(
{ before(grammarAccess.getEquationAccess().getValuedObjectValuedObjectIDTerminalRuleCall_1_1_0_0_1()); }
	RULE_ID{ after(grammarAccess.getEquationAccess().getValuedObjectValuedObjectIDTerminalRuleCall_1_1_0_0_1()); }
)
{ after(grammarAccess.getEquationAccess().getValuedObjectValuedObjectCrossReference_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__NodeAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquationAccess().getNodeNodeCrossReference_1_1_2_0()); }
(
{ before(grammarAccess.getEquationAccess().getNodeNodeIDTerminalRuleCall_1_1_2_0_1()); }
	RULE_ID{ after(grammarAccess.getEquationAccess().getNodeNodeIDTerminalRuleCall_1_1_2_0_1()); }
)
{ after(grammarAccess.getEquationAccess().getNodeNodeCrossReference_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__ExpressionAssignment_1_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquationAccess().getExpressionValuedObjectReferenceParserRuleCall_1_1_4_0()); }
	ruleValuedObjectReference{ after(grammarAccess.getEquationAccess().getExpressionValuedObjectReferenceParserRuleCall_1_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SCChart__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCChartAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getSCChartAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SCChart__IdAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCChartAccess().getIdIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getSCChartAccess().getIdIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SCChart__LabelAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCChartAccess().getLabelSTRINGTerminalRuleCall_3_0()); }
	RULE_STRING{ after(grammarAccess.getSCChartAccess().getLabelSTRINGTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SCChart__ReferencedScopeAssignment_4_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCChartAccess().getReferencedScopeStateCrossReference_4_0_1_0()); }
(
{ before(grammarAccess.getSCChartAccess().getReferencedScopeStateIDTerminalRuleCall_4_0_1_0_1()); }
	RULE_ID{ after(grammarAccess.getSCChartAccess().getReferencedScopeStateIDTerminalRuleCall_4_0_1_0_1()); }
)
{ after(grammarAccess.getSCChartAccess().getReferencedScopeStateCrossReference_4_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SCChart__BindingsAssignment_4_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCChartAccess().getBindingsBindingParserRuleCall_4_0_2_1_0()); }
	ruleBinding{ after(grammarAccess.getSCChartAccess().getBindingsBindingParserRuleCall_4_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SCChart__BindingsAssignment_4_0_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCChartAccess().getBindingsBindingParserRuleCall_4_0_2_2_1_0()); }
	ruleBinding{ after(grammarAccess.getSCChartAccess().getBindingsBindingParserRuleCall_4_0_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SCChart__DeclarationsAssignment_4_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCChartAccess().getDeclarationsDeclarationParserRuleCall_4_1_1_0_0()); }
	ruleDeclaration{ after(grammarAccess.getSCChartAccess().getDeclarationsDeclarationParserRuleCall_4_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SCChart__LocalActionsAssignment_4_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCChartAccess().getLocalActionsLocalActionParserRuleCall_4_1_1_1_0()); }
	ruleLocalAction{ after(grammarAccess.getSCChartAccess().getLocalActionsLocalActionParserRuleCall_4_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SCChart__RegionsAssignment_4_1_2_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCChartAccess().getRegionsSingleDataflowRegionParserRuleCall_4_1_2_0_0_0()); }
	ruleSingleDataflowRegion{ after(grammarAccess.getSCChartAccess().getRegionsSingleDataflowRegionParserRuleCall_4_1_2_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SCChart__RegionsAssignment_4_1_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCChartAccess().getRegionsSingleControlflowRegionParserRuleCall_4_1_2_0_1_0()); }
	ruleSingleControlflowRegion{ after(grammarAccess.getSCChartAccess().getRegionsSingleControlflowRegionParserRuleCall_4_1_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SCChart__RegionsAssignment_4_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCChartAccess().getRegionsRegionParserRuleCall_4_1_2_1_0()); }
	ruleRegion{ after(grammarAccess.getSCChartAccess().getRegionsRegionParserRuleCall_4_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getStateAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__InitialAssignment_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getInitialInitialKeyword_1_0_0_0()); }
(
{ before(grammarAccess.getStateAccess().getInitialInitialKeyword_1_0_0_0()); }

	'initial' 

{ after(grammarAccess.getStateAccess().getInitialInitialKeyword_1_0_0_0()); }
)

{ after(grammarAccess.getStateAccess().getInitialInitialKeyword_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__FinalAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getFinalFinalKeyword_1_0_1_0()); }
(
{ before(grammarAccess.getStateAccess().getFinalFinalKeyword_1_0_1_0()); }

	'final' 

{ after(grammarAccess.getStateAccess().getFinalFinalKeyword_1_0_1_0()); }
)

{ after(grammarAccess.getStateAccess().getFinalFinalKeyword_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__FinalAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getFinalFinalKeyword_1_1_0_0()); }
(
{ before(grammarAccess.getStateAccess().getFinalFinalKeyword_1_1_0_0()); }

	'final' 

{ after(grammarAccess.getStateAccess().getFinalFinalKeyword_1_1_0_0()); }
)

{ after(grammarAccess.getStateAccess().getFinalFinalKeyword_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__InitialAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getInitialInitialKeyword_1_1_1_0()); }
(
{ before(grammarAccess.getStateAccess().getInitialInitialKeyword_1_1_1_0()); }

	'initial' 

{ after(grammarAccess.getStateAccess().getInitialInitialKeyword_1_1_1_0()); }
)

{ after(grammarAccess.getStateAccess().getInitialInitialKeyword_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getTypeStateTypeEnumRuleCall_2_0()); }
	ruleStateType{ after(grammarAccess.getStateAccess().getTypeStateTypeEnumRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__IdAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getIdIDTerminalRuleCall_4_0()); }
	RULE_ID{ after(grammarAccess.getStateAccess().getIdIDTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__LabelAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getLabelSTRINGTerminalRuleCall_5_0()); }
	RULE_STRING{ after(grammarAccess.getStateAccess().getLabelSTRINGTerminalRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__ReferencedScopeAssignment_6_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getReferencedScopeStateCrossReference_6_0_1_0()); }
(
{ before(grammarAccess.getStateAccess().getReferencedScopeStateIDTerminalRuleCall_6_0_1_0_1()); }
	RULE_ID{ after(grammarAccess.getStateAccess().getReferencedScopeStateIDTerminalRuleCall_6_0_1_0_1()); }
)
{ after(grammarAccess.getStateAccess().getReferencedScopeStateCrossReference_6_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__BindingsAssignment_6_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getBindingsBindingParserRuleCall_6_0_2_1_0()); }
	ruleBinding{ after(grammarAccess.getStateAccess().getBindingsBindingParserRuleCall_6_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__BindingsAssignment_6_0_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getBindingsBindingParserRuleCall_6_0_2_2_1_0()); }
	ruleBinding{ after(grammarAccess.getStateAccess().getBindingsBindingParserRuleCall_6_0_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__DeclarationsAssignment_6_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getDeclarationsDeclarationParserRuleCall_6_1_1_0_0()); }
	ruleDeclaration{ after(grammarAccess.getStateAccess().getDeclarationsDeclarationParserRuleCall_6_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__LocalActionsAssignment_6_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getLocalActionsLocalActionParserRuleCall_6_1_1_1_0()); }
	ruleLocalAction{ after(grammarAccess.getStateAccess().getLocalActionsLocalActionParserRuleCall_6_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__RegionsAssignment_6_1_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getRegionsSingleDataflowRegionParserRuleCall_6_1_2_0_0()); }
	ruleSingleDataflowRegion{ after(grammarAccess.getStateAccess().getRegionsSingleDataflowRegionParserRuleCall_6_1_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__RegionsAssignment_6_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getRegionsSingleControlflowRegionParserRuleCall_6_1_2_1_0()); }
	ruleSingleControlflowRegion{ after(grammarAccess.getStateAccess().getRegionsSingleControlflowRegionParserRuleCall_6_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__RegionsAssignment_6_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getRegionsRegionParserRuleCall_6_1_3_0()); }
	ruleRegion{ after(grammarAccess.getStateAccess().getRegionsRegionParserRuleCall_6_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__OutgoingTransitionsAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getOutgoingTransitionsTransitionParserRuleCall_7_0()); }
	ruleTransition{ after(grammarAccess.getStateAccess().getOutgoingTransitionsTransitionParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CallNode__IdAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallNodeAccess().getIdIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getCallNodeAccess().getIdIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CallNode__CallReferenceAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallNodeAccess().getCallReferenceDefineNodeCrossReference_3_0()); }
(
{ before(grammarAccess.getCallNodeAccess().getCallReferenceDefineNodeIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getCallNodeAccess().getCallReferenceDefineNodeIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getCallNodeAccess().getCallReferenceDefineNodeCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CallNode__ParametersAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallNodeAccess().getParametersValuedObjectReferenceParserRuleCall_5_0()); }
	ruleValuedObjectReference{ after(grammarAccess.getCallNodeAccess().getParametersValuedObjectReferenceParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CallNode__ParametersAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallNodeAccess().getParametersValuedObjectReferenceParserRuleCall_6_1_0()); }
	ruleValuedObjectReference{ after(grammarAccess.getCallNodeAccess().getParametersValuedObjectReferenceParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefineNode__IdAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineNodeAccess().getIdIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getDefineNodeAccess().getIdIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefineNode__InputsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineNodeAccess().getInputsDeclarationParserRuleCall_4_0()); }
	ruleDeclaration{ after(grammarAccess.getDefineNodeAccess().getInputsDeclarationParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefineNode__OutputsAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineNodeAccess().getOutputsDeclarationParserRuleCall_8_0()); }
	ruleDeclaration{ after(grammarAccess.getDefineNodeAccess().getOutputsDeclarationParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefineNode__ValuedObjectsAssignment_11_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineNodeAccess().getValuedObjectsValuedObjectCrossReference_11_0_0_0()); }
(
{ before(grammarAccess.getDefineNodeAccess().getValuedObjectsValuedObjectIDTerminalRuleCall_11_0_0_0_1()); }
	RULE_ID{ after(grammarAccess.getDefineNodeAccess().getValuedObjectsValuedObjectIDTerminalRuleCall_11_0_0_0_1()); }
)
{ after(grammarAccess.getDefineNodeAccess().getValuedObjectsValuedObjectCrossReference_11_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefineNode__ExpressionsAssignment_11_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineNodeAccess().getExpressionsExpressionParserRuleCall_11_0_2_0()); }
	ruleExpression{ after(grammarAccess.getDefineNodeAccess().getExpressionsExpressionParserRuleCall_11_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefineNode__StatesAssignment_11_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineNodeAccess().getStatesStateParserRuleCall_11_1_0()); }
	ruleState{ after(grammarAccess.getDefineNodeAccess().getStatesStateParserRuleCall_11_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceNode__IdAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceNodeAccess().getIdIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getReferenceNodeAccess().getIdIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceNode__LabelAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceNodeAccess().getLabelSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getReferenceNodeAccess().getLabelSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceNode__ReferencedScopeAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceNodeAccess().getReferencedScopeStateCrossReference_5_0()); }
(
{ before(grammarAccess.getReferenceNodeAccess().getReferencedScopeStateIDTerminalRuleCall_5_0_1()); }
	RULE_ID{ after(grammarAccess.getReferenceNodeAccess().getReferencedScopeStateIDTerminalRuleCall_5_0_1()); }
)
{ after(grammarAccess.getReferenceNodeAccess().getReferencedScopeStateCrossReference_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceNode__ParametersAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceNodeAccess().getParametersValuedObjectReferenceParserRuleCall_7_0()); }
	ruleValuedObjectReference{ after(grammarAccess.getReferenceNodeAccess().getParametersValuedObjectReferenceParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceNode__ParametersAssignment_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceNodeAccess().getParametersValuedObjectReferenceParserRuleCall_8_1_0()); }
	ruleValuedObjectReference{ after(grammarAccess.getReferenceNodeAccess().getParametersValuedObjectReferenceParserRuleCall_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getTransitionAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__TypeAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getTypeTransitionTypeLegacyEnumRuleCall_1_0_0()); }
	ruleTransitionTypeLegacy{ after(grammarAccess.getTransitionAccess().getTypeTransitionTypeLegacyEnumRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__TypeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getTypeTransitionTypeEnumRuleCall_1_1_0()); }
	ruleTransitionType{ after(grammarAccess.getTransitionAccess().getTypeTransitionTypeEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__TargetStateAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getTargetStateStateCrossReference_2_0()); }
(
{ before(grammarAccess.getTransitionAccess().getTargetStateStateIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getTransitionAccess().getTargetStateStateIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getTransitionAccess().getTargetStateStateCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__ImmediateAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getImmediateImmediateKeyword_3_0_0()); }
(
{ before(grammarAccess.getTransitionAccess().getImmediateImmediateKeyword_3_0_0()); }

	'immediate' 

{ after(grammarAccess.getTransitionAccess().getImmediateImmediateKeyword_3_0_0()); }
)

{ after(grammarAccess.getTransitionAccess().getImmediateImmediateKeyword_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__DeferredAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getDeferredDeferredKeyword_3_1_0()); }
(
{ before(grammarAccess.getTransitionAccess().getDeferredDeferredKeyword_3_1_0()); }

	'deferred' 

{ after(grammarAccess.getTransitionAccess().getDeferredDeferredKeyword_3_1_0()); }
)

{ after(grammarAccess.getTransitionAccess().getDeferredDeferredKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__HistoryAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getHistoryHistoryTypeEnumRuleCall_3_2_0()); }
	ruleHistoryType{ after(grammarAccess.getTransitionAccess().getHistoryHistoryTypeEnumRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__DelayAssignment_3_3_0_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getDelayINTTerminalRuleCall_3_3_0_0_0_1_0()); }
	RULE_INT{ after(grammarAccess.getTransitionAccess().getDelayINTTerminalRuleCall_3_3_0_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__TriggerAssignment_3_3_0_0_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getTriggerBoolExpressionParserRuleCall_3_3_0_0_0_2_0()); }
	ruleBoolExpression{ after(grammarAccess.getTransitionAccess().getTriggerBoolExpressionParserRuleCall_3_3_0_0_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__EffectsAssignment_3_3_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getEffectsEffectParserRuleCall_3_3_0_1_1_0()); }
	ruleEffect{ after(grammarAccess.getTransitionAccess().getEffectsEffectParserRuleCall_3_3_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__EffectsAssignment_3_3_0_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getEffectsEffectParserRuleCall_3_3_0_1_2_1_0()); }
	ruleEffect{ after(grammarAccess.getTransitionAccess().getEffectsEffectParserRuleCall_3_3_0_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__LabelAssignment_3_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getLabelSTRINGTerminalRuleCall_3_3_1_1_0()); }
	RULE_STRING{ after(grammarAccess.getTransitionAccess().getLabelSTRINGTerminalRuleCall_3_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__ExternAssignment_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getExternExternKeyword_1_0_0_0()); }
(
{ before(grammarAccess.getDeclarationAccess().getExternExternKeyword_1_0_0_0()); }

	'extern' 

{ after(grammarAccess.getDeclarationAccess().getExternExternKeyword_1_0_0_0()); }
)

{ after(grammarAccess.getDeclarationAccess().getExternExternKeyword_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__StaticAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getStaticStaticKeyword_1_0_1_0()); }
(
{ before(grammarAccess.getDeclarationAccess().getStaticStaticKeyword_1_0_1_0()); }

	'static' 

{ after(grammarAccess.getDeclarationAccess().getStaticStaticKeyword_1_0_1_0()); }
)

{ after(grammarAccess.getDeclarationAccess().getStaticStaticKeyword_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__ConstAssignment_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getConstConstKeyword_1_0_2_0()); }
(
{ before(grammarAccess.getDeclarationAccess().getConstConstKeyword_1_0_2_0()); }

	'const' 

{ after(grammarAccess.getDeclarationAccess().getConstConstKeyword_1_0_2_0()); }
)

{ after(grammarAccess.getDeclarationAccess().getConstConstKeyword_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__InputAssignment_1_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getInputInputKeyword_1_0_3_0()); }
(
{ before(grammarAccess.getDeclarationAccess().getInputInputKeyword_1_0_3_0()); }

	'input' 

{ after(grammarAccess.getDeclarationAccess().getInputInputKeyword_1_0_3_0()); }
)

{ after(grammarAccess.getDeclarationAccess().getInputInputKeyword_1_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__OutputAssignment_1_0_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getOutputOutputKeyword_1_0_4_0()); }
(
{ before(grammarAccess.getDeclarationAccess().getOutputOutputKeyword_1_0_4_0()); }

	'output' 

{ after(grammarAccess.getDeclarationAccess().getOutputOutputKeyword_1_0_4_0()); }
)

{ after(grammarAccess.getDeclarationAccess().getOutputOutputKeyword_1_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__SignalAssignment_1_0_5_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getSignalSignalKeyword_1_0_5_0_0_0()); }
(
{ before(grammarAccess.getDeclarationAccess().getSignalSignalKeyword_1_0_5_0_0_0()); }

	'signal' 

{ after(grammarAccess.getDeclarationAccess().getSignalSignalKeyword_1_0_5_0_0_0()); }
)

{ after(grammarAccess.getDeclarationAccess().getSignalSignalKeyword_1_0_5_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__TypeAssignment_1_0_5_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getTypeValueTypeEnumRuleCall_1_0_5_0_1_0()); }
	ruleValueType{ after(grammarAccess.getDeclarationAccess().getTypeValueTypeEnumRuleCall_1_0_5_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__SignalAssignment_1_0_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getSignalSignalKeyword_1_0_5_1_0()); }
(
{ before(grammarAccess.getDeclarationAccess().getSignalSignalKeyword_1_0_5_1_0()); }

	'signal' 

{ after(grammarAccess.getDeclarationAccess().getSignalSignalKeyword_1_0_5_1_0()); }
)

{ after(grammarAccess.getDeclarationAccess().getSignalSignalKeyword_1_0_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__ExternAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getExternExternKeyword_1_1_0_0()); }
(
{ before(grammarAccess.getDeclarationAccess().getExternExternKeyword_1_1_0_0()); }

	'extern' 

{ after(grammarAccess.getDeclarationAccess().getExternExternKeyword_1_1_0_0()); }
)

{ after(grammarAccess.getDeclarationAccess().getExternExternKeyword_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__StaticAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getStaticStaticKeyword_1_1_1_0()); }
(
{ before(grammarAccess.getDeclarationAccess().getStaticStaticKeyword_1_1_1_0()); }

	'static' 

{ after(grammarAccess.getDeclarationAccess().getStaticStaticKeyword_1_1_1_0()); }
)

{ after(grammarAccess.getDeclarationAccess().getStaticStaticKeyword_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__ConstAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getConstConstKeyword_1_1_2_0()); }
(
{ before(grammarAccess.getDeclarationAccess().getConstConstKeyword_1_1_2_0()); }

	'const' 

{ after(grammarAccess.getDeclarationAccess().getConstConstKeyword_1_1_2_0()); }
)

{ after(grammarAccess.getDeclarationAccess().getConstConstKeyword_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__InputAssignment_1_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getInputInputKeyword_1_1_3_0()); }
(
{ before(grammarAccess.getDeclarationAccess().getInputInputKeyword_1_1_3_0()); }

	'input' 

{ after(grammarAccess.getDeclarationAccess().getInputInputKeyword_1_1_3_0()); }
)

{ after(grammarAccess.getDeclarationAccess().getInputInputKeyword_1_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__OutputAssignment_1_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getOutputOutputKeyword_1_1_4_0()); }
(
{ before(grammarAccess.getDeclarationAccess().getOutputOutputKeyword_1_1_4_0()); }

	'output' 

{ after(grammarAccess.getDeclarationAccess().getOutputOutputKeyword_1_1_4_0()); }
)

{ after(grammarAccess.getDeclarationAccess().getOutputOutputKeyword_1_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__SignalAssignment_1_1_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getSignalSignalKeyword_1_1_5_0()); }
(
{ before(grammarAccess.getDeclarationAccess().getSignalSignalKeyword_1_1_5_0()); }

	'signal' 

{ after(grammarAccess.getDeclarationAccess().getSignalSignalKeyword_1_1_5_0()); }
)

{ after(grammarAccess.getDeclarationAccess().getSignalSignalKeyword_1_1_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__TypeAssignment_1_1_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getTypeValueTypeEnumRuleCall_1_1_6_0()); }
	ruleValueType{ after(grammarAccess.getDeclarationAccess().getTypeValueTypeEnumRuleCall_1_1_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__ValuedObjectsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_2_0()); }
	ruleValuedObject{ after(grammarAccess.getDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__ValuedObjectsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_3_1_0()); }
	ruleValuedObject{ after(grammarAccess.getDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObject__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getValuedObjectAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObject__CardinalitiesAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectAccess().getCardinalitiesINTTerminalRuleCall_1_1_0()); }
	RULE_INT{ after(grammarAccess.getValuedObjectAccess().getCardinalitiesINTTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObject__InitialValueAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectAccess().getInitialValueExpressionParserRuleCall_2_1_0()); }
	ruleExpression{ after(grammarAccess.getValuedObjectAccess().getInitialValueExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObject__CombineOperatorAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectAccess().getCombineOperatorCombineOperatorEnumRuleCall_3_1_0()); }
	ruleCombineOperator{ after(grammarAccess.getValuedObjectAccess().getCombineOperatorCombineOperatorEnumRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Binding__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getBindingAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__FormalAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingAccess().getFormalValuedObjectCrossReference_1_0()); }
(
{ before(grammarAccess.getBindingAccess().getFormalValuedObjectIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getBindingAccess().getFormalValuedObjectIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getBindingAccess().getFormalValuedObjectCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__ActualAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingAccess().getActualValuedObjectCrossReference_3_0()); }
(
{ before(grammarAccess.getBindingAccess().getActualValuedObjectIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getBindingAccess().getActualValuedObjectIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getBindingAccess().getActualValuedObjectCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EntryAction__TriggerAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntryActionAccess().getTriggerBoolExpressionParserRuleCall_2_0()); }
	ruleBoolExpression{ after(grammarAccess.getEntryActionAccess().getTriggerBoolExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EntryAction__EffectsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntryActionAccess().getEffectsEffectParserRuleCall_3_1_0()); }
	ruleEffect{ after(grammarAccess.getEntryActionAccess().getEffectsEffectParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EntryAction__EffectsAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntryActionAccess().getEffectsEffectParserRuleCall_3_2_1_0()); }
	ruleEffect{ after(grammarAccess.getEntryActionAccess().getEffectsEffectParserRuleCall_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DuringAction__ImmediateAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDuringActionAccess().getImmediateImmediateKeyword_1_0()); }
(
{ before(grammarAccess.getDuringActionAccess().getImmediateImmediateKeyword_1_0()); }

	'immediate' 

{ after(grammarAccess.getDuringActionAccess().getImmediateImmediateKeyword_1_0()); }
)

{ after(grammarAccess.getDuringActionAccess().getImmediateImmediateKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DuringAction__TriggerAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDuringActionAccess().getTriggerBoolExpressionParserRuleCall_3_0()); }
	ruleBoolExpression{ after(grammarAccess.getDuringActionAccess().getTriggerBoolExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DuringAction__EffectsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDuringActionAccess().getEffectsEffectParserRuleCall_4_1_0()); }
	ruleEffect{ after(grammarAccess.getDuringActionAccess().getEffectsEffectParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DuringAction__EffectsAssignment_4_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDuringActionAccess().getEffectsEffectParserRuleCall_4_2_1_0()); }
	ruleEffect{ after(grammarAccess.getDuringActionAccess().getEffectsEffectParserRuleCall_4_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExitAction__TriggerAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitActionAccess().getTriggerBoolExpressionParserRuleCall_2_0()); }
	ruleBoolExpression{ after(grammarAccess.getExitActionAccess().getTriggerBoolExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExitAction__EffectsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitActionAccess().getEffectsEffectParserRuleCall_3_1_0()); }
	ruleEffect{ after(grammarAccess.getExitActionAccess().getEffectsEffectParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExitAction__EffectsAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitActionAccess().getEffectsEffectParserRuleCall_3_2_1_0()); }
	ruleEffect{ after(grammarAccess.getExitActionAccess().getEffectsEffectParserRuleCall_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SuspendAction__ImmediateAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuspendActionAccess().getImmediateImmediateKeyword_1_0()); }
(
{ before(grammarAccess.getSuspendActionAccess().getImmediateImmediateKeyword_1_0()); }

	'immediate' 

{ after(grammarAccess.getSuspendActionAccess().getImmediateImmediateKeyword_1_0()); }
)

{ after(grammarAccess.getSuspendActionAccess().getImmediateImmediateKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SuspendAction__WeakAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuspendActionAccess().getWeakWeakKeyword_2_0()); }
(
{ before(grammarAccess.getSuspendActionAccess().getWeakWeakKeyword_2_0()); }

	'weak' 

{ after(grammarAccess.getSuspendActionAccess().getWeakWeakKeyword_2_0()); }
)

{ after(grammarAccess.getSuspendActionAccess().getWeakWeakKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SuspendAction__TriggerAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuspendActionAccess().getTriggerBoolExpressionParserRuleCall_4_0()); }
	ruleBoolExpression{ after(grammarAccess.getSuspendActionAccess().getTriggerBoolExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IterateAction__ImmediateAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterateActionAccess().getImmediateImmediateKeyword_1_0()); }
(
{ before(grammarAccess.getIterateActionAccess().getImmediateImmediateKeyword_1_0()); }

	'immediate' 

{ after(grammarAccess.getIterateActionAccess().getImmediateImmediateKeyword_1_0()); }
)

{ after(grammarAccess.getIterateActionAccess().getImmediateImmediateKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IterateAction__TriggerAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterateActionAccess().getTriggerBoolExpressionParserRuleCall_3_0()); }
	ruleBoolExpression{ after(grammarAccess.getIterateActionAccess().getTriggerBoolExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IterateAction__EffectsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterateActionAccess().getEffectsEffectParserRuleCall_4_1_0()); }
	ruleEffect{ after(grammarAccess.getIterateActionAccess().getEffectsEffectParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IterateAction__EffectsAssignment_4_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterateActionAccess().getEffectsEffectParserRuleCall_4_2_1_0()); }
	ruleEffect{ after(grammarAccess.getIterateActionAccess().getEffectsEffectParserRuleCall_4_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Emission__ValuedObjectAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmissionAccess().getValuedObjectValuedObjectCrossReference_0_0()); }
(
{ before(grammarAccess.getEmissionAccess().getValuedObjectValuedObjectIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getEmissionAccess().getValuedObjectValuedObjectIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getEmissionAccess().getValuedObjectValuedObjectCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Emission__NewValueAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmissionAccess().getNewValueExpressionParserRuleCall_1_1_0()); }
	ruleExpression{ after(grammarAccess.getEmissionAccess().getNewValueExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__ValuedObjectAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getValuedObjectValuedObjectCrossReference_0_0()); }
(
{ before(grammarAccess.getAssignmentAccess().getValuedObjectValuedObjectIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getAssignmentAccess().getValuedObjectValuedObjectIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getAssignmentAccess().getValuedObjectValuedObjectCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__IndicesAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getIndicesExpressionParserRuleCall_1_1_0()); }
	ruleExpression{ after(grammarAccess.getAssignmentAccess().getIndicesExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__ExpressionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getExpressionExpressionParserRuleCall_3_0()); }
	ruleExpression{ after(grammarAccess.getAssignmentAccess().getExpressionExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TextEffect__TextAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextEffectAccess().getTextHOSTCODETerminalRuleCall_0()); }
	RULE_HOSTCODE{ after(grammarAccess.getTextEffectAccess().getTextHOSTCODETerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallEffect__FunctionNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getFunctionNameExtendedIDParserRuleCall_1_0()); }
	ruleExtendedID{ after(grammarAccess.getFunctionCallEffectAccess().getFunctionNameExtendedIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallEffect__ParametersAssignment_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getParametersParameterParserRuleCall_2_0_1_0()); }
	ruleParameter{ after(grammarAccess.getFunctionCallEffectAccess().getParametersParameterParserRuleCall_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallEffect__ParametersAssignment_2_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getParametersParameterParserRuleCall_2_0_2_1_0()); }
	ruleParameter{ after(grammarAccess.getFunctionCallEffectAccess().getParametersParameterParserRuleCall_2_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__CallByReferenceAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getCallByReferenceAmpersandKeyword_0_0()); }
(
{ before(grammarAccess.getParameterAccess().getCallByReferenceAmpersandKeyword_0_0()); }

	'&' 

{ after(grammarAccess.getParameterAccess().getCallByReferenceAmpersandKeyword_0_0()); }
)

{ after(grammarAccess.getParameterAccess().getCallByReferenceAmpersandKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__ExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getExpressionExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getParameterAccess().getExpressionExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrAndExpression__OperatorAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAndExpressionAccess().getOperatorAlternatives_1_0_1_0()); }
(rule__OrAndExpression__OperatorAlternatives_1_0_1_0)
{ after(grammarAccess.getOrAndExpressionAccess().getOperatorAlternatives_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrAndExpression__SubExpressionsAssignment_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAndExpressionAccess().getSubExpressionsCompareOperationParserRuleCall_1_0_2_0()); }
	ruleCompareOperation{ after(grammarAccess.getOrAndExpressionAccess().getSubExpressionsCompareOperationParserRuleCall_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrAndExpression__OperatorAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAndExpressionAccess().getOperatorAlternatives_1_1_1_0()); }
(rule__OrAndExpression__OperatorAlternatives_1_1_1_0)
{ after(grammarAccess.getOrAndExpressionAccess().getOperatorAlternatives_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrAndExpression__SubExpressionsAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAndExpressionAccess().getSubExpressionsCompareOperationParserRuleCall_1_1_2_0()); }
	ruleCompareOperation{ after(grammarAccess.getOrAndExpressionAccess().getSubExpressionsCompareOperationParserRuleCall_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__OperatorAssignment_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperationAccess().getOperatorCompareOperatorEnumRuleCall_0_1_1_0()); }
	ruleCompareOperator{ after(grammarAccess.getCompareOperationAccess().getOperatorCompareOperatorEnumRuleCall_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__SubExpressionsAssignment_0_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperationAccess().getSubExpressionsNotOrValuedExpressionParserRuleCall_0_1_2_0()); }
	ruleNotOrValuedExpression{ after(grammarAccess.getCompareOperationAccess().getSubExpressionsNotOrValuedExpressionParserRuleCall_0_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NotExpression__OperatorAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotExpressionAccess().getOperatorNotOperatorEnumRuleCall_0_1_0()); }
	ruleNotOperator{ after(grammarAccess.getNotExpressionAccess().getOperatorNotOperatorEnumRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NotExpression__SubExpressionsAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotExpressionAccess().getSubExpressionsNotExpressionParserRuleCall_0_2_0()); }
	ruleNotExpression{ after(grammarAccess.getNotExpressionAccess().getSubExpressionsNotExpressionParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getOperatorAddOperatorEnumRuleCall_1_1_0()); }
	ruleAddOperator{ after(grammarAccess.getAddExpressionAccess().getOperatorAddOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__SubExpressionsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getSubExpressionsSubExpressionParserRuleCall_1_2_0()); }
	ruleSubExpression{ after(grammarAccess.getAddExpressionAccess().getSubExpressionsSubExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubExpressionAccess().getOperatorSubOperatorEnumRuleCall_1_1_0()); }
	ruleSubOperator{ after(grammarAccess.getSubExpressionAccess().getOperatorSubOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpression__SubExpressionsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubExpressionAccess().getSubExpressionsMultExpressionParserRuleCall_1_2_0()); }
	ruleMultExpression{ after(grammarAccess.getSubExpressionAccess().getSubExpressionsMultExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultExpressionAccess().getOperatorMultOperatorEnumRuleCall_1_1_0()); }
	ruleMultOperator{ after(grammarAccess.getMultExpressionAccess().getOperatorMultOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__SubExpressionsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultExpressionAccess().getSubExpressionsDivExpressionParserRuleCall_1_2_0()); }
	ruleDivExpression{ after(grammarAccess.getMultExpressionAccess().getSubExpressionsDivExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DivExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivExpressionAccess().getOperatorDivOperatorEnumRuleCall_1_1_0()); }
	ruleDivOperator{ after(grammarAccess.getDivExpressionAccess().getOperatorDivOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DivExpression__SubExpressionsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivExpressionAccess().getSubExpressionsModExpressionParserRuleCall_1_2_0()); }
	ruleModExpression{ after(grammarAccess.getDivExpressionAccess().getSubExpressionsModExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModExpressionAccess().getOperatorModOperatorEnumRuleCall_1_1_0()); }
	ruleModOperator{ after(grammarAccess.getModExpressionAccess().getOperatorModOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModExpression__SubExpressionsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_1_2_0()); }
	ruleAtomicValuedExpression{ after(grammarAccess.getModExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NegExpression__OperatorAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegExpressionAccess().getOperatorSubOperatorEnumRuleCall_0_1_0()); }
	ruleSubOperator{ after(grammarAccess.getNegExpressionAccess().getOperatorSubOperatorEnumRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NegExpression__SubExpressionsAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_0_2_0()); }
	ruleNegExpression{ after(grammarAccess.getNegExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectTestExpression__OperatorAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorAlternatives_0_1_0()); }
(rule__ValuedObjectTestExpression__OperatorAlternatives_0_1_0)
{ after(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorAlternatives_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectTestExpression__SubExpressionsAssignment_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsValuedObjectTestExpressionParserRuleCall_0_3_0()); }
	ruleValuedObjectTestExpression{ after(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsValuedObjectTestExpressionParserRuleCall_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectReference__ValuedObjectAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectReferenceAccess().getValuedObjectValuedObjectCrossReference_0_0()); }
(
{ before(grammarAccess.getValuedObjectReferenceAccess().getValuedObjectValuedObjectIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getValuedObjectReferenceAccess().getValuedObjectValuedObjectIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getValuedObjectReferenceAccess().getValuedObjectValuedObjectCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectReference__IndicesAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectReferenceAccess().getIndicesExpressionParserRuleCall_1_1_0()); }
	ruleExpression{ after(grammarAccess.getValuedObjectReferenceAccess().getIndicesExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__FunctionNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getFunctionNameExtendedIDParserRuleCall_1_0()); }
	ruleExtendedID{ after(grammarAccess.getFunctionCallAccess().getFunctionNameExtendedIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__ParametersAssignment_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getParametersParameterParserRuleCall_2_0_1_0()); }
	ruleParameter{ after(grammarAccess.getFunctionCallAccess().getParametersParameterParserRuleCall_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__ParametersAssignment_2_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getParametersParameterParserRuleCall_2_0_2_1_0()); }
	ruleParameter{ after(grammarAccess.getFunctionCallAccess().getParametersParameterParserRuleCall_2_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TextExpression__TextAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextExpressionAccess().getTextHOSTCODETerminalRuleCall_0()); }
	RULE_HOSTCODE{ after(grammarAccess.getTextExpressionAccess().getTextHOSTCODETerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntValue__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntValueAccess().getValueINTTerminalRuleCall_0()); }
	RULE_INT{ after(grammarAccess.getIntValueAccess().getValueINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FloatValue__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloatValueAccess().getValueFLOATTerminalRuleCall_0()); }
	RULE_FLOAT{ after(grammarAccess.getFloatValueAccess().getValueFLOATTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BoolValue__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoolValueAccess().getValueBOOLEANTerminalRuleCall_0()); }
	RULE_BOOLEAN{ after(grammarAccess.getBoolValueAccess().getValueBOOLEANTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringValue__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringValueAccess().getValueSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getStringValueAccess().getValueSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CommentAnnotation__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommentAnnotationAccess().getValueCOMMENT_ANNOTATIONTerminalRuleCall_0()); }
	RULE_COMMENT_ANNOTATION{ after(grammarAccess.getCommentAnnotationAccess().getValueCOMMENT_ANNOTATIONTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TagAnnotation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
	ruleExtendedID{ after(grammarAccess.getTagAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TagAnnotation__AnnotationsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagAnnotationAccess().getAnnotationsAnnotationParserRuleCall_2_1_0()); }
	ruleAnnotation{ after(grammarAccess.getTagAnnotationAccess().getAnnotationsAnnotationParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStringValueAnnotation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
	ruleExtendedID{ after(grammarAccess.getKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStringValueAnnotation__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getValueEStringParserRuleCall_2_0()); }
	ruleEString{ after(grammarAccess.getKeyStringValueAnnotationAccess().getValueEStringParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStringValueAnnotation__AnnotationsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getAnnotationsAnnotationParserRuleCall_3_1_0()); }
	ruleAnnotation{ after(grammarAccess.getKeyStringValueAnnotationAccess().getAnnotationsAnnotationParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
	ruleExtendedID{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getTypeExtendedIDParserRuleCall_3_0()); }
	ruleExtendedID{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getTypeExtendedIDParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__ValueAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValueEStringParserRuleCall_5_0()); }
	ruleEString{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValueEStringParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__AnnotationsAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getAnnotationsAnnotationParserRuleCall_6_1_0()); }
	ruleAnnotation{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getAnnotationsAnnotationParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyBooleanValueAnnotation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyBooleanValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
	ruleExtendedID{ after(grammarAccess.getKeyBooleanValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyBooleanValueAnnotation__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyBooleanValueAnnotationAccess().getValueBOOLEANTerminalRuleCall_2_0()); }
	RULE_BOOLEAN{ after(grammarAccess.getKeyBooleanValueAnnotationAccess().getValueBOOLEANTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyBooleanValueAnnotation__AnnotationsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyBooleanValueAnnotationAccess().getAnnotationsAnnotationParserRuleCall_3_1_0()); }
	ruleAnnotation{ after(grammarAccess.getKeyBooleanValueAnnotationAccess().getAnnotationsAnnotationParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyIntValueAnnotation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyIntValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
	ruleExtendedID{ after(grammarAccess.getKeyIntValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyIntValueAnnotation__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyIntValueAnnotationAccess().getValueINTTerminalRuleCall_2_0()); }
	RULE_INT{ after(grammarAccess.getKeyIntValueAnnotationAccess().getValueINTTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyIntValueAnnotation__AnnotationsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyIntValueAnnotationAccess().getAnnotationsAnnotationParserRuleCall_3_1_0()); }
	ruleAnnotation{ after(grammarAccess.getKeyIntValueAnnotationAccess().getAnnotationsAnnotationParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyFloatValueAnnotation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyFloatValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
	ruleExtendedID{ after(grammarAccess.getKeyFloatValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyFloatValueAnnotation__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyFloatValueAnnotationAccess().getValueFLOATTerminalRuleCall_2_0()); }
	RULE_FLOAT{ after(grammarAccess.getKeyFloatValueAnnotationAccess().getValueFLOATTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyFloatValueAnnotation__AnnotationsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyFloatValueAnnotationAccess().getAnnotationsAnnotationParserRuleCall_3_1_0()); }
	ruleAnnotation{ after(grammarAccess.getKeyFloatValueAnnotationAccess().getAnnotationsAnnotationParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}



RULE_HOSTCODE : '\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'';

RULE_COMMENT_ANNOTATION : '/**' ( options {greedy=false;} : . )*'*/';

RULE_ML_COMMENT : '/*' ~('*') ( options {greedy=false;} : . )*'*/';

fragment RULE_NUMBER : '0'..'9';

RULE_INT : '-'? RULE_NUMBER+;

RULE_FLOAT : ('-'? RULE_NUMBER+ '.' RULE_NUMBER* (('e'|'E') ('+'|'-')? RULE_NUMBER+)? 'f'?|'-'? RULE_NUMBER+ 'f');

RULE_BOOLEAN : ('true'|'false');

RULE_STRING : '"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


