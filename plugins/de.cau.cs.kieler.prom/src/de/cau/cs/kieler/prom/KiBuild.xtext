grammar de.cau.cs.kieler.prom.KiBuild with de.cau.cs.kieler.kexpressions.KExpressions

generate kibuild "http://www.cau.de/cs/kieler/prom/KiBuild"

import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "http://kieler.cs.cau.de/kexpressions/0.1.2" as kexpressions 

BuildConfiguration:
	(attributes+=AttributeMapping)*
	(modelCompilers+=ModelCompiler)*
	(simulationCompilers+=SimulationCompiler)*
	(templateProcessors+=TemplateProcessor)*
;

ModelCompiler:
	'model' 'compiler' name=ID '{'
        (attributes+=AttributeMapping)*
        (simulationProcessor=SimulationTemplateProcessor)?
	'}'
;

SimulationCompiler:
    'simulation' 'compiler' name=ID '{'
        (attributes+=AttributeMapping)*
    '}'
;

TemplateProcessor:
    NormalTemplateProcessor
    | SimulationTemplateProcessor
    | WrapperCodeTemplateProcessor
;

NormalTemplateProcessor returns TemplateProcessor:
    'process' 'template' '{'
        {NormalTemplateProcessor}
        (attributes+=AttributeMapping)*    
    '}'
;

SimulationTemplateProcessor returns TemplateProcessor:
    'process' 'simulation' 'template' '{'
        {SimulationTemplateProcessor}
        (attributes+=AttributeMapping)*    
    '}'
;

WrapperCodeTemplateProcessor returns TemplateProcessor:
    'process' 'wrapper' 'template' '{'
        {WrapperCodeTemplateProcessor}
        (attributes+=AttributeMapping)*    
    '}'
;

AttributeMapping:
    name=ID
    ((':' value=Literal)
    | (':' values+=Literal (',' values+=Literal)+)
    | (':'? '{' (attributes+=AttributeMapping)+ '}'))
;

Literal:
    value=TextValue | value = SignedInt | value = SignedFloat | (value = AnyValue)
;

enum Sign:
    POSITIVE='+' | NEGATIVE='-'
;

SignedFloat:
    (sign = Sign)?
    value = FLOAT
;

SignedInt:
    (sign = Sign)?
    value = INT
;

TextValue:
    value=ID
;

// Overwrute BOOLEAN and ID to have a less strict definition of IDs
terminal BOOLEAN returns ecore::EBooleanObject :
    'true' | 'false';

terminal ID returns ecore::EString:
    '^'?('a'..'z'|'A'..'Z'|'_'|'/'|'\\') ('a'..'z'|'A'..'Z'|'_'|'-'|'.'|'/'|'\\'|'0'..'9')*
;
