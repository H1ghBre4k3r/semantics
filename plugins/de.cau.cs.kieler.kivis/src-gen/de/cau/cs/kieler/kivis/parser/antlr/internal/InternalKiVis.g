/*
 * generated by Xtext
 */
grammar InternalKiVis;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package de.cau.cs.kieler.kivis.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package de.cau.cs.kieler.kivis.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.cau.cs.kieler.kivis.services.KiVisGrammarAccess;

}

@parser::members {

 	private KiVisGrammarAccess grammarAccess;

    public InternalKiVisParser(TokenStream input, KiVisGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Visualization";
   	}

   	@Override
   	protected KiVisGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleVisualization
entryRuleVisualization returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVisualizationRule()); }
	iv_ruleVisualization=ruleVisualization
	{ $current=$iv_ruleVisualization.current; }
	EOF;

// Rule Visualization
ruleVisualization returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='image'
			{
				newLeafNode(otherlv_0, grammarAccess.getVisualizationAccess().getImageKeyword_0_0());
			}
			(
				(
					lv_images_1_0=RULE_STRING
					{
						newLeafNode(lv_images_1_0, grammarAccess.getVisualizationAccess().getImagesSTRINGTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVisualizationRule());
						}
						addWithLastConsumed(
							$current,
							"images",
							lv_images_1_0,
							"de.cau.cs.kieler.kivis.KiVis.STRING");
					}
				)
			)
		)*
		(
			otherlv_2='load'
			{
				newLeafNode(otherlv_2, grammarAccess.getVisualizationAccess().getLoadKeyword_1_0());
			}
			(
				(
					lv_loads_3_0=RULE_STRING
					{
						newLeafNode(lv_loads_3_0, grammarAccess.getVisualizationAccess().getLoadsSTRINGTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVisualizationRule());
						}
						addWithLastConsumed(
							$current,
							"loads",
							lv_loads_3_0,
							"de.cau.cs.kieler.kivis.KiVis.STRING");
					}
				)
			)
		)*
		(
			otherlv_4='init'
			{
				newLeafNode(otherlv_4, grammarAccess.getVisualizationAccess().getInitKeyword_2_0());
			}
			(
				(
					lv_init_5_0=RULE_SCRIPT
					{
						newLeafNode(lv_init_5_0, grammarAccess.getVisualizationAccess().getInitSCRIPTTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVisualizationRule());
						}
						setWithLastConsumed(
							$current,
							"init",
							lv_init_5_0,
							"de.cau.cs.kieler.kivis.KiVis.SCRIPT");
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getVisualizationAccess().getContentContentParserRuleCall_3_0());
				}
				lv_content_6_0=ruleContent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVisualizationRule());
					}
					add(
						$current,
						"content",
						lv_content_6_0,
						"de.cau.cs.kieler.kivis.KiVis.Content");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleContent
entryRuleContent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getContentRule()); }
	iv_ruleContent=ruleContent
	{ $current=$iv_ruleContent.current; }
	EOF;

// Rule Content
ruleContent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getContentAccess().getBindingParserRuleCall_0());
		}
		this_Binding_0=ruleBinding
		{
			$current = $this_Binding_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getContentAccess().getHandlerParserRuleCall_1());
		}
		this_Handler_1=ruleHandler
		{
			$current = $this_Handler_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getContentAccess().getActionParserRuleCall_2());
		}
		this_Action_2=ruleAction
		{
			$current = $this_Action_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getContentAccess().getCodeParserRuleCall_3());
		}
		this_Code_3=ruleCode
		{
			$current = $this_Code_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBinding
entryRuleBinding returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBindingRule()); }
	iv_ruleBinding=ruleBinding
	{ $current=$iv_ruleBinding.current; }
	EOF;

// Rule Binding
ruleBinding returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='bind'
		{
			newLeafNode(otherlv_0, grammarAccess.getBindingAccess().getBindKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBindingAccess().getVariableComplexKeyParserRuleCall_1_0());
				}
				lv_variable_1_0=ruleComplexKey
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBindingRule());
					}
					set(
						$current,
						"variable",
						lv_variable_1_0,
						"de.cau.cs.kieler.kivis.KiVis.ComplexKey");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				otherlv_2='to'
				{
					newLeafNode(otherlv_2, grammarAccess.getBindingAccess().getToKeyword_2_0_0());
				}
				(
					(
						lv_domElement_3_0=RULE_STRING
						{
							newLeafNode(lv_domElement_3_0, grammarAccess.getBindingAccess().getDomElementSTRINGTerminalRuleCall_2_0_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getBindingRule());
							}
							setWithLastConsumed(
								$current,
								"domElement",
								lv_domElement_3_0,
								"de.cau.cs.kieler.kivis.KiVis.STRING");
						}
					)
				)
				otherlv_4='with'
				{
					newLeafNode(otherlv_4, grammarAccess.getBindingAccess().getWithKeyword_2_0_2());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getBindingAccess().getInterfaceBindingInterface1ParserRuleCall_2_0_3_0());
						}
						lv_interface_5_0=ruleBindingInterface1
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBindingRule());
							}
							set(
								$current,
								"interface",
								lv_interface_5_0,
								"de.cau.cs.kieler.kivis.KiVis.BindingInterface1");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						lv_script_6_0=RULE_SCRIPT
						{
							newLeafNode(lv_script_6_0, grammarAccess.getBindingAccess().getScriptSCRIPTTerminalRuleCall_2_0_4_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getBindingRule());
							}
							setWithLastConsumed(
								$current,
								"script",
								lv_script_6_0,
								"de.cau.cs.kieler.kivis.KiVis.SCRIPT");
						}
					)
				)
			)
			    |
			(
				otherlv_7='with'
				{
					newLeafNode(otherlv_7, grammarAccess.getBindingAccess().getWithKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getBindingAccess().getInterfaceBindingInterface2ParserRuleCall_2_1_1_0());
						}
						lv_interface_8_0=ruleBindingInterface2
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBindingRule());
							}
							set(
								$current,
								"interface",
								lv_interface_8_0,
								"de.cau.cs.kieler.kivis.KiVis.BindingInterface2");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						lv_script_9_0=RULE_SCRIPT
						{
							newLeafNode(lv_script_9_0, grammarAccess.getBindingAccess().getScriptSCRIPTTerminalRuleCall_2_1_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getBindingRule());
							}
							setWithLastConsumed(
								$current,
								"script",
								lv_script_9_0,
								"de.cau.cs.kieler.kivis.KiVis.SCRIPT");
						}
					)
				)
			)
		)
	)
;

// Entry rule entryRuleHandler
entryRuleHandler returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHandlerRule()); }
	iv_ruleHandler=ruleHandler
	{ $current=$iv_ruleHandler.current; }
	EOF;

// Rule Handler
ruleHandler returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='handle'
		{
			newLeafNode(otherlv_0, grammarAccess.getHandlerAccess().getHandleKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getHandlerAccess().getVariableSimpleKeyParserRuleCall_1_0());
				}
				lv_variable_1_0=ruleSimpleKey
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getHandlerRule());
					}
					set(
						$current,
						"variable",
						lv_variable_1_0,
						"de.cau.cs.kieler.kivis.KiVis.SimpleKey");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				otherlv_2='in'
				{
					newLeafNode(otherlv_2, grammarAccess.getHandlerAccess().getInKeyword_2_0_0());
				}
				(
					(
						lv_multimatch_3_0='all'
						{
							newLeafNode(lv_multimatch_3_0, grammarAccess.getHandlerAccess().getMultimatchAllKeyword_2_0_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getHandlerRule());
							}
							setWithLastConsumed($current, "multimatch", true, "all");
						}
					)
				)?
				(
					(
						lv_domElement_4_0=RULE_STRING
						{
							newLeafNode(lv_domElement_4_0, grammarAccess.getHandlerAccess().getDomElementSTRINGTerminalRuleCall_2_0_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getHandlerRule());
							}
							setWithLastConsumed(
								$current,
								"domElement",
								lv_domElement_4_0,
								"de.cau.cs.kieler.kivis.KiVis.STRING");
						}
					)
				)
				otherlv_5='with'
				{
					newLeafNode(otherlv_5, grammarAccess.getHandlerAccess().getWithKeyword_2_0_3());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getHandlerAccess().getInterfaceHandlerInterface1ParserRuleCall_2_0_4_0());
						}
						lv_interface_6_0=ruleHandlerInterface1
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getHandlerRule());
							}
							set(
								$current,
								"interface",
								lv_interface_6_0,
								"de.cau.cs.kieler.kivis.KiVis.HandlerInterface1");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						lv_script_7_0=RULE_SCRIPT
						{
							newLeafNode(lv_script_7_0, grammarAccess.getHandlerAccess().getScriptSCRIPTTerminalRuleCall_2_0_5_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getHandlerRule());
							}
							setWithLastConsumed(
								$current,
								"script",
								lv_script_7_0,
								"de.cau.cs.kieler.kivis.KiVis.SCRIPT");
						}
					)
				)
			)
			    |
			(
				otherlv_8='with'
				{
					newLeafNode(otherlv_8, grammarAccess.getHandlerAccess().getWithKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getHandlerAccess().getInterfaceHandlerInterface2ParserRuleCall_2_1_1_0());
						}
						lv_interface_9_0=ruleHandlerInterface2
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getHandlerRule());
							}
							set(
								$current,
								"interface",
								lv_interface_9_0,
								"de.cau.cs.kieler.kivis.KiVis.HandlerInterface2");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						lv_script_10_0=RULE_SCRIPT
						{
							newLeafNode(lv_script_10_0, grammarAccess.getHandlerAccess().getScriptSCRIPTTerminalRuleCall_2_1_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getHandlerRule());
							}
							setWithLastConsumed(
								$current,
								"script",
								lv_script_10_0,
								"de.cau.cs.kieler.kivis.KiVis.SCRIPT");
						}
					)
				)
			)
		)
	)
;

// Entry rule entryRuleAction
entryRuleAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionRule()); }
	iv_ruleAction=ruleAction
	{ $current=$iv_ruleAction.current; }
	EOF;

// Rule Action
ruleAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='event'
		{
			newLeafNode(otherlv_0, grammarAccess.getActionAccess().getEventKeyword_0());
		}
		(
			(
				lv_domEvent_1_0=RULE_STRING
				{
					newLeafNode(lv_domEvent_1_0, grammarAccess.getActionAccess().getDomEventSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActionRule());
					}
					setWithLastConsumed(
						$current,
						"domEvent",
						lv_domEvent_1_0,
						"de.cau.cs.kieler.kivis.KiVis.STRING");
				}
			)
		)
		otherlv_2='on'
		{
			newLeafNode(otherlv_2, grammarAccess.getActionAccess().getOnKeyword_2());
		}
		(
			(
				lv_multimatch_3_0='all'
				{
					newLeafNode(lv_multimatch_3_0, grammarAccess.getActionAccess().getMultimatchAllKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActionRule());
					}
					setWithLastConsumed($current, "multimatch", true, "all");
				}
			)
		)?
		(
			(
				lv_domElement_4_0=RULE_STRING
				{
					newLeafNode(lv_domElement_4_0, grammarAccess.getActionAccess().getDomElementSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActionRule());
					}
					setWithLastConsumed(
						$current,
						"domElement",
						lv_domElement_4_0,
						"de.cau.cs.kieler.kivis.KiVis.STRING");
				}
			)
		)
		(
			otherlv_5='do'
			{
				newLeafNode(otherlv_5, grammarAccess.getActionAccess().getDoKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getActionAccess().getInterfaceActionInterface1ParserRuleCall_5_1_0());
					}
					lv_interface_6_0=ruleActionInterface1
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActionRule());
						}
						set(
							$current,
							"interface",
							lv_interface_6_0,
							"de.cau.cs.kieler.kivis.KiVis.ActionInterface1");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					lv_script_7_0=RULE_SCRIPT
					{
						newLeafNode(lv_script_7_0, grammarAccess.getActionAccess().getScriptSCRIPTTerminalRuleCall_5_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getActionRule());
						}
						setWithLastConsumed(
							$current,
							"script",
							lv_script_7_0,
							"de.cau.cs.kieler.kivis.KiVis.SCRIPT");
					}
				)
			)
		)?
		(
			otherlv_8='deferred'
			{
				newLeafNode(otherlv_8, grammarAccess.getActionAccess().getDeferredKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getActionAccess().getDeferredInterfaceActionInterface2ParserRuleCall_6_1_0());
					}
					lv_deferredInterface_9_0=ruleActionInterface2
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActionRule());
						}
						set(
							$current,
							"deferredInterface",
							lv_deferredInterface_9_0,
							"de.cau.cs.kieler.kivis.KiVis.ActionInterface2");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					lv_deferredScript_10_0=RULE_SCRIPT
					{
						newLeafNode(lv_deferredScript_10_0, grammarAccess.getActionAccess().getDeferredScriptSCRIPTTerminalRuleCall_6_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getActionRule());
						}
						setWithLastConsumed(
							$current,
							"deferredScript",
							lv_deferredScript_10_0,
							"de.cau.cs.kieler.kivis.KiVis.SCRIPT");
					}
				)
			)
		)?
		(
			otherlv_11='set'
			{
				newLeafNode(otherlv_11, grammarAccess.getActionAccess().getSetKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getActionAccess().getSetterSetterParserRuleCall_7_1_0());
					}
					lv_setter_12_0=ruleSetter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActionRule());
						}
						add(
							$current,
							"setter",
							lv_setter_12_0,
							"de.cau.cs.kieler.kivis.KiVis.Setter");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_13='signal'
			{
				newLeafNode(otherlv_13, grammarAccess.getActionAccess().getSignalKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getActionAccess().getSignalComplexKeyParserRuleCall_8_1_0());
					}
					lv_signal_14_0=ruleComplexKey
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActionRule());
						}
						set(
							$current,
							"signal",
							lv_signal_14_0,
							"de.cau.cs.kieler.kivis.KiVis.ComplexKey");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_15='simulation'
			{
				newLeafNode(otherlv_15, grammarAccess.getActionAccess().getSimulationKeyword_9_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getActionAccess().getControlSimulationCorntrolEnumRuleCall_9_1_0());
					}
					lv_control_16_0=ruleSimulationCorntrol
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActionRule());
						}
						set(
							$current,
							"control",
							lv_control_16_0,
							"de.cau.cs.kieler.kivis.KiVis.SimulationCorntrol");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleCode
entryRuleCode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCodeRule()); }
	iv_ruleCode=ruleCode
	{ $current=$iv_ruleCode.current; }
	EOF;

// Rule Code
ruleCode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='script'
		{
			newLeafNode(otherlv_0, grammarAccess.getCodeAccess().getScriptKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCodeAccess().getInterfaceCodeInterfaceParserRuleCall_1_0());
				}
				lv_interface_1_0=ruleCodeInterface
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCodeRule());
					}
					set(
						$current,
						"interface",
						lv_interface_1_0,
						"de.cau.cs.kieler.kivis.KiVis.CodeInterface");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_script_2_0=RULE_SCRIPT
				{
					newLeafNode(lv_script_2_0, grammarAccess.getCodeAccess().getScriptSCRIPTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCodeRule());
					}
					setWithLastConsumed(
						$current,
						"script",
						lv_script_2_0,
						"de.cau.cs.kieler.kivis.KiVis.SCRIPT");
				}
			)
		)
	)
;

// Entry rule entryRuleSetter
entryRuleSetter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSetterRule()); }
	iv_ruleSetter=ruleSetter
	{ $current=$iv_ruleSetter.current; }
	EOF;

// Rule Setter
ruleSetter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSetterAccess().getVariableComplexKeyParserRuleCall_0_0());
				}
				lv_variable_0_0=ruleComplexKey
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSetterRule());
					}
					set(
						$current,
						"variable",
						lv_variable_0_0,
						"de.cau.cs.kieler.kivis.KiVis.ComplexKey");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSetterAccess().getInterfaceSetterInterfaceParserRuleCall_1_0());
				}
				lv_interface_1_0=ruleSetterInterface
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSetterRule());
					}
					set(
						$current,
						"interface",
						lv_interface_1_0,
						"de.cau.cs.kieler.kivis.KiVis.SetterInterface");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_script_2_0=RULE_SCRIPT
				{
					newLeafNode(lv_script_2_0, grammarAccess.getSetterAccess().getScriptSCRIPTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSetterRule());
					}
					setWithLastConsumed(
						$current,
						"script",
						lv_script_2_0,
						"de.cau.cs.kieler.kivis.KiVis.SCRIPT");
				}
			)
		)
	)
;

// Entry rule entryRuleBindingInterface1
entryRuleBindingInterface1 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBindingInterface1Rule()); }
	iv_ruleBindingInterface1=ruleBindingInterface1
	{ $current=$iv_ruleBindingInterface1.current; }
	EOF;

// Rule BindingInterface1
ruleBindingInterface1 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBindingInterface1Access().getInterfaceAction_0(),
					$current);
			}
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getBindingInterface1Access().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_element_2_0=RULE_ID
				{
					newLeafNode(lv_element_2_0, grammarAccess.getBindingInterface1Access().getElementIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBindingInterface1Rule());
					}
					setWithLastConsumed(
						$current,
						"element",
						lv_element_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getBindingInterface1Access().getCommaKeyword_3_0_0());
				}
				(
					(
						lv_variable_4_0=RULE_ID
						{
							newLeafNode(lv_variable_4_0, grammarAccess.getBindingInterface1Access().getVariableIDTerminalRuleCall_3_0_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getBindingInterface1Rule());
							}
							setWithLastConsumed(
								$current,
								"variable",
								lv_variable_4_0,
								"org.eclipse.xtext.common.Terminals.ID");
						}
					)
				)
			)
			    |
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getBindingInterface1Access().getCommaKeyword_3_1_0());
				}
				(
					(
						lv_variable_6_0=RULE_ID
						{
							newLeafNode(lv_variable_6_0, grammarAccess.getBindingInterface1Access().getVariableIDTerminalRuleCall_3_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getBindingInterface1Rule());
							}
							setWithLastConsumed(
								$current,
								"variable",
								lv_variable_6_0,
								"org.eclipse.xtext.common.Terminals.ID");
						}
					)
				)
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getBindingInterface1Access().getCommaKeyword_3_1_2());
				}
				(
					(
						lv_pool_8_0=RULE_ID
						{
							newLeafNode(lv_pool_8_0, grammarAccess.getBindingInterface1Access().getPoolIDTerminalRuleCall_3_1_3_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getBindingInterface1Rule());
							}
							setWithLastConsumed(
								$current,
								"pool",
								lv_pool_8_0,
								"org.eclipse.xtext.common.Terminals.ID");
						}
					)
				)
			)
		)?
		otherlv_9=')'
		{
			newLeafNode(otherlv_9, grammarAccess.getBindingInterface1Access().getRightParenthesisKeyword_4());
		}
		(
			otherlv_10='=>'
			{
				newLeafNode(otherlv_10, grammarAccess.getBindingInterface1Access().getEqualsSignGreaterThanSignKeyword_5());
			}
		)?
	)
;

// Entry rule entryRuleBindingInterface2
entryRuleBindingInterface2 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBindingInterface2Rule()); }
	iv_ruleBindingInterface2=ruleBindingInterface2
	{ $current=$iv_ruleBindingInterface2.current; }
	EOF;

// Rule BindingInterface2
ruleBindingInterface2 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBindingInterface2Access().getInterfaceAction_0(),
					$current);
			}
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getBindingInterface2Access().getLeftParenthesisKeyword_1());
		}
		(
			(
				(
					lv_variable_2_0=RULE_ID
					{
						newLeafNode(lv_variable_2_0, grammarAccess.getBindingInterface2Access().getVariableIDTerminalRuleCall_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBindingInterface2Rule());
						}
						setWithLastConsumed(
							$current,
							"variable",
							lv_variable_2_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getBindingInterface2Access().getCommaKeyword_2_1_0());
				}
				(
					(
						lv_pool_4_0=RULE_ID
						{
							newLeafNode(lv_pool_4_0, grammarAccess.getBindingInterface2Access().getPoolIDTerminalRuleCall_2_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getBindingInterface2Rule());
							}
							setWithLastConsumed(
								$current,
								"pool",
								lv_pool_4_0,
								"org.eclipse.xtext.common.Terminals.ID");
						}
					)
				)
			)?
		)?
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getBindingInterface2Access().getRightParenthesisKeyword_3());
		}
		(
			otherlv_6='=>'
			{
				newLeafNode(otherlv_6, grammarAccess.getBindingInterface2Access().getEqualsSignGreaterThanSignKeyword_4());
			}
		)?
	)
;

// Entry rule entryRuleHandlerInterface1
entryRuleHandlerInterface1 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHandlerInterface1Rule()); }
	iv_ruleHandlerInterface1=ruleHandlerInterface1
	{ $current=$iv_ruleHandlerInterface1.current; }
	EOF;

// Rule HandlerInterface1
ruleHandlerInterface1 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getHandlerInterface1Access().getInterfaceAction_0(),
					$current);
			}
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getHandlerInterface1Access().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_element_2_0=RULE_ID
				{
					newLeafNode(lv_element_2_0, grammarAccess.getHandlerInterface1Access().getElementIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getHandlerInterface1Rule());
					}
					setWithLastConsumed(
						$current,
						"element",
						lv_element_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getHandlerInterface1Access().getCommaKeyword_3());
		}
		(
			(
				lv_variable_4_0=RULE_ID
				{
					newLeafNode(lv_variable_4_0, grammarAccess.getHandlerInterface1Access().getVariableIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getHandlerInterface1Rule());
					}
					setWithLastConsumed(
						$current,
						"variable",
						lv_variable_4_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getHandlerInterface1Access().getCommaKeyword_5_0());
			}
			(
				(
					lv_pool_6_0=RULE_ID
					{
						newLeafNode(lv_pool_6_0, grammarAccess.getHandlerInterface1Access().getPoolIDTerminalRuleCall_5_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getHandlerInterface1Rule());
						}
						setWithLastConsumed(
							$current,
							"pool",
							lv_pool_6_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)?
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getHandlerInterface1Access().getRightParenthesisKeyword_6());
		}
		(
			otherlv_8='=>'
			{
				newLeafNode(otherlv_8, grammarAccess.getHandlerInterface1Access().getEqualsSignGreaterThanSignKeyword_7());
			}
		)?
	)
;

// Entry rule entryRuleHandlerInterface2
entryRuleHandlerInterface2 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHandlerInterface2Rule()); }
	iv_ruleHandlerInterface2=ruleHandlerInterface2
	{ $current=$iv_ruleHandlerInterface2.current; }
	EOF;

// Rule HandlerInterface2
ruleHandlerInterface2 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getHandlerInterface2Access().getInterfaceAction_0(),
					$current);
			}
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getHandlerInterface2Access().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_variable_2_0=RULE_ID
				{
					newLeafNode(lv_variable_2_0, grammarAccess.getHandlerInterface2Access().getVariableIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getHandlerInterface2Rule());
					}
					setWithLastConsumed(
						$current,
						"variable",
						lv_variable_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getHandlerInterface2Access().getCommaKeyword_3_0());
			}
			(
				(
					lv_pool_4_0=RULE_ID
					{
						newLeafNode(lv_pool_4_0, grammarAccess.getHandlerInterface2Access().getPoolIDTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getHandlerInterface2Rule());
						}
						setWithLastConsumed(
							$current,
							"pool",
							lv_pool_4_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)?
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getHandlerInterface2Access().getRightParenthesisKeyword_4());
		}
		(
			otherlv_6='=>'
			{
				newLeafNode(otherlv_6, grammarAccess.getHandlerInterface2Access().getEqualsSignGreaterThanSignKeyword_5());
			}
		)?
	)
;

// Entry rule entryRuleActionInterface1
entryRuleActionInterface1 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionInterface1Rule()); }
	iv_ruleActionInterface1=ruleActionInterface1
	{ $current=$iv_ruleActionInterface1.current; }
	EOF;

// Rule ActionInterface1
ruleActionInterface1 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getActionInterface1Access().getInterfaceAction_0(),
					$current);
			}
		)
		(
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getActionInterface1Access().getLeftParenthesisKeyword_1_0());
			}
			otherlv_2=')'
			{
				newLeafNode(otherlv_2, grammarAccess.getActionInterface1Access().getRightParenthesisKeyword_1_1());
			}
			(
				otherlv_3='=>'
				{
					newLeafNode(otherlv_3, grammarAccess.getActionInterface1Access().getEqualsSignGreaterThanSignKeyword_1_2());
				}
			)?
		)?
	)
;

// Entry rule entryRuleActionInterface2
entryRuleActionInterface2 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionInterface2Rule()); }
	iv_ruleActionInterface2=ruleActionInterface2
	{ $current=$iv_ruleActionInterface2.current; }
	EOF;

// Rule ActionInterface2
ruleActionInterface2 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getActionInterface2Access().getInterfaceAction_0(),
					$current);
			}
		)
		(
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getActionInterface2Access().getLeftParenthesisKeyword_1_0());
			}
			(
				(
					lv_pool_2_0=RULE_ID
					{
						newLeafNode(lv_pool_2_0, grammarAccess.getActionInterface2Access().getPoolIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getActionInterface2Rule());
						}
						setWithLastConsumed(
							$current,
							"pool",
							lv_pool_2_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)?
			otherlv_3=')'
			{
				newLeafNode(otherlv_3, grammarAccess.getActionInterface2Access().getRightParenthesisKeyword_1_2());
			}
			(
				otherlv_4='=>'
				{
					newLeafNode(otherlv_4, grammarAccess.getActionInterface2Access().getEqualsSignGreaterThanSignKeyword_1_3());
				}
			)?
		)?
	)
;

// Entry rule entryRuleCodeInterface
entryRuleCodeInterface returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCodeInterfaceRule()); }
	iv_ruleCodeInterface=ruleCodeInterface
	{ $current=$iv_ruleCodeInterface.current; }
	EOF;

// Rule CodeInterface
ruleCodeInterface returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCodeInterfaceAccess().getInterfaceAction_0(),
					$current);
			}
		)
		(
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getCodeInterfaceAccess().getLeftParenthesisKeyword_1_0());
			}
			(
				(
					lv_pool_2_0=RULE_ID
					{
						newLeafNode(lv_pool_2_0, grammarAccess.getCodeInterfaceAccess().getPoolIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCodeInterfaceRule());
						}
						setWithLastConsumed(
							$current,
							"pool",
							lv_pool_2_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)?
			otherlv_3=')'
			{
				newLeafNode(otherlv_3, grammarAccess.getCodeInterfaceAccess().getRightParenthesisKeyword_1_2());
			}
			(
				otherlv_4='=>'
				{
					newLeafNode(otherlv_4, grammarAccess.getCodeInterfaceAccess().getEqualsSignGreaterThanSignKeyword_1_3());
				}
			)?
		)?
	)
;

// Entry rule entryRuleSetterInterface
entryRuleSetterInterface returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSetterInterfaceRule()); }
	iv_ruleSetterInterface=ruleSetterInterface
	{ $current=$iv_ruleSetterInterface.current; }
	EOF;

// Rule SetterInterface
ruleSetterInterface returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSetterInterfaceAccess().getInterfaceAction_0(),
					$current);
			}
		)
		(
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getSetterInterfaceAccess().getLeftParenthesisKeyword_1_0());
			}
			otherlv_2=')'
			{
				newLeafNode(otherlv_2, grammarAccess.getSetterInterfaceAccess().getRightParenthesisKeyword_1_1());
			}
			(
				otherlv_3='=>'
				{
					newLeafNode(otherlv_3, grammarAccess.getSetterInterfaceAccess().getEqualsSignGreaterThanSignKeyword_1_2());
				}
			)?
		)?
	)
;

// Entry rule entryRuleSimpleKey
entryRuleSimpleKey returns [String current=null]:
	{ newCompositeNode(grammarAccess.getSimpleKeyRule()); }
	iv_ruleSimpleKey=ruleSimpleKey
	{ $current=$iv_ruleSimpleKey.current.getText(); }
	EOF;

// Rule SimpleKey
ruleSimpleKey returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			this_ID_0=RULE_ID
			{
				$current.merge(this_ID_0);
			}
			{
				newLeafNode(this_ID_0, grammarAccess.getSimpleKeyAccess().getIDTerminalRuleCall_0_0());
			}
			    |
			(
				kw='#'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getSimpleKeyAccess().getNumberSignKeyword_0_1_0());
				}
				this_ID_2=RULE_ID
				{
					$current.merge(this_ID_2);
				}
				{
					newLeafNode(this_ID_2, grammarAccess.getSimpleKeyAccess().getIDTerminalRuleCall_0_1_1());
				}
			)
		)
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getSimpleKeyAccess().getHyphenMinusKeyword_1_0());
			}
			this_ID_4=RULE_ID
			{
				$current.merge(this_ID_4);
			}
			{
				newLeafNode(this_ID_4, grammarAccess.getSimpleKeyAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Entry rule entryRuleComplexKey
entryRuleComplexKey returns [String current=null]:
	{ newCompositeNode(grammarAccess.getComplexKeyRule()); }
	iv_ruleComplexKey=ruleComplexKey
	{ $current=$iv_ruleComplexKey.current.getText(); }
	EOF;

// Rule ComplexKey
ruleComplexKey returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			this_ID_0=RULE_ID
			{
				$current.merge(this_ID_0);
			}
			{
				newLeafNode(this_ID_0, grammarAccess.getComplexKeyAccess().getIDTerminalRuleCall_0_0());
			}
			    |
			(
				kw='#'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getComplexKeyAccess().getNumberSignKeyword_0_1_0());
				}
				this_ID_2=RULE_ID
				{
					$current.merge(this_ID_2);
				}
				{
					newLeafNode(this_ID_2, grammarAccess.getComplexKeyAccess().getIDTerminalRuleCall_0_1_1());
				}
			)
		)
		(
			(
				kw='-'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getComplexKeyAccess().getHyphenMinusKeyword_1_0_0());
				}
				this_ID_4=RULE_ID
				{
					$current.merge(this_ID_4);
				}
				{
					newLeafNode(this_ID_4, grammarAccess.getComplexKeyAccess().getIDTerminalRuleCall_1_0_1());
				}
			)
			    |
			(
				kw='.'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getComplexKeyAccess().getFullStopKeyword_1_1_0());
				}
				(
					this_INT_6=RULE_INT
					{
						$current.merge(this_INT_6);
					}
					{
						newLeafNode(this_INT_6, grammarAccess.getComplexKeyAccess().getINTTerminalRuleCall_1_1_1_0());
					}
					    |
					this_ID_7=RULE_ID
					{
						$current.merge(this_ID_7);
					}
					{
						newLeafNode(this_ID_7, grammarAccess.getComplexKeyAccess().getIDTerminalRuleCall_1_1_1_1());
					}
				)
			)
		)*
	)
;

// Rule SimulationCorntrol
ruleSimulationCorntrol returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='nothing'
			{
				$current = grammarAccess.getSimulationCorntrolAccess().getNONEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getSimulationCorntrolAccess().getNONEEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='step'
			{
				$current = grammarAccess.getSimulationCorntrolAccess().getSTEPEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getSimulationCorntrolAccess().getSTEPEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='stop'
			{
				$current = grammarAccess.getSimulationCorntrolAccess().getSTOPEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getSimulationCorntrolAccess().getSTOPEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='pause'
			{
				$current = grammarAccess.getSimulationCorntrolAccess().getPAUSEEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getSimulationCorntrolAccess().getPAUSEEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='play'
			{
				$current = grammarAccess.getSimulationCorntrolAccess().getPLAYEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getSimulationCorntrolAccess().getPLAYEnumLiteralDeclaration_4());
			}
		)
	)
;

RULE_BOOL : ('true'|'false');

fragment RULE_ESCAPED_CHAR : '\\' ('n'|'t'|'r'|'\\');

RULE_SCRIPT : '\'' (RULE_ESCAPED_CHAR|~(('\\'|'\'')))* '\'';

RULE_STRING : '"' (RULE_ESCAPED_CHAR|~(('\\'|'"')))* '"';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
