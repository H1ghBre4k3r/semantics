/**
 * generated by Xtext
 */
package de.cau.cs.kieler.kivis.kivis.impl;

import de.cau.cs.kieler.kivis.kivis.Action;
import de.cau.cs.kieler.kivis.kivis.KivisPackage;
import de.cau.cs.kieler.kivis.kivis.SimulationCorntrol;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Action</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.cau.cs.kieler.kivis.kivis.impl.ActionImpl#getDomEvent <em>Dom Event</em>}</li>
 *   <li>{@link de.cau.cs.kieler.kivis.kivis.impl.ActionImpl#isMultimatch <em>Multimatch</em>}</li>
 *   <li>{@link de.cau.cs.kieler.kivis.kivis.impl.ActionImpl#getDomElement <em>Dom Element</em>}</li>
 *   <li>{@link de.cau.cs.kieler.kivis.kivis.impl.ActionImpl#isDeferred <em>Deferred</em>}</li>
 *   <li>{@link de.cau.cs.kieler.kivis.kivis.impl.ActionImpl#getVariable <em>Variable</em>}</li>
 *   <li>{@link de.cau.cs.kieler.kivis.kivis.impl.ActionImpl#getControl <em>Control</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ActionImpl extends ContentImpl implements Action
{
  /**
   * The default value of the '{@link #getDomEvent() <em>Dom Event</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDomEvent()
   * @generated
   * @ordered
   */
  protected static final String DOM_EVENT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDomEvent() <em>Dom Event</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDomEvent()
   * @generated
   * @ordered
   */
  protected String domEvent = DOM_EVENT_EDEFAULT;

  /**
   * The default value of the '{@link #isMultimatch() <em>Multimatch</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isMultimatch()
   * @generated
   * @ordered
   */
  protected static final boolean MULTIMATCH_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isMultimatch() <em>Multimatch</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isMultimatch()
   * @generated
   * @ordered
   */
  protected boolean multimatch = MULTIMATCH_EDEFAULT;

  /**
   * The default value of the '{@link #getDomElement() <em>Dom Element</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDomElement()
   * @generated
   * @ordered
   */
  protected static final String DOM_ELEMENT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDomElement() <em>Dom Element</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDomElement()
   * @generated
   * @ordered
   */
  protected String domElement = DOM_ELEMENT_EDEFAULT;

  /**
   * The default value of the '{@link #isDeferred() <em>Deferred</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isDeferred()
   * @generated
   * @ordered
   */
  protected static final boolean DEFERRED_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isDeferred() <em>Deferred</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isDeferred()
   * @generated
   * @ordered
   */
  protected boolean deferred = DEFERRED_EDEFAULT;

  /**
   * The default value of the '{@link #getVariable() <em>Variable</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVariable()
   * @generated
   * @ordered
   */
  protected static final String VARIABLE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getVariable() <em>Variable</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVariable()
   * @generated
   * @ordered
   */
  protected String variable = VARIABLE_EDEFAULT;

  /**
   * The default value of the '{@link #getControl() <em>Control</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getControl()
   * @generated
   * @ordered
   */
  protected static final SimulationCorntrol CONTROL_EDEFAULT = SimulationCorntrol.NONE;

  /**
   * The cached value of the '{@link #getControl() <em>Control</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getControl()
   * @generated
   * @ordered
   */
  protected SimulationCorntrol control = CONTROL_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ActionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return KivisPackage.Literals.ACTION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getDomEvent()
  {
    return domEvent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDomEvent(String newDomEvent)
  {
    String oldDomEvent = domEvent;
    domEvent = newDomEvent;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KivisPackage.ACTION__DOM_EVENT, oldDomEvent, domEvent));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isMultimatch()
  {
    return multimatch;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMultimatch(boolean newMultimatch)
  {
    boolean oldMultimatch = multimatch;
    multimatch = newMultimatch;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KivisPackage.ACTION__MULTIMATCH, oldMultimatch, multimatch));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getDomElement()
  {
    return domElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDomElement(String newDomElement)
  {
    String oldDomElement = domElement;
    domElement = newDomElement;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KivisPackage.ACTION__DOM_ELEMENT, oldDomElement, domElement));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isDeferred()
  {
    return deferred;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDeferred(boolean newDeferred)
  {
    boolean oldDeferred = deferred;
    deferred = newDeferred;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KivisPackage.ACTION__DEFERRED, oldDeferred, deferred));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getVariable()
  {
    return variable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setVariable(String newVariable)
  {
    String oldVariable = variable;
    variable = newVariable;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KivisPackage.ACTION__VARIABLE, oldVariable, variable));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SimulationCorntrol getControl()
  {
    return control;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setControl(SimulationCorntrol newControl)
  {
    SimulationCorntrol oldControl = control;
    control = newControl == null ? CONTROL_EDEFAULT : newControl;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KivisPackage.ACTION__CONTROL, oldControl, control));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case KivisPackage.ACTION__DOM_EVENT:
        return getDomEvent();
      case KivisPackage.ACTION__MULTIMATCH:
        return isMultimatch();
      case KivisPackage.ACTION__DOM_ELEMENT:
        return getDomElement();
      case KivisPackage.ACTION__DEFERRED:
        return isDeferred();
      case KivisPackage.ACTION__VARIABLE:
        return getVariable();
      case KivisPackage.ACTION__CONTROL:
        return getControl();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case KivisPackage.ACTION__DOM_EVENT:
        setDomEvent((String)newValue);
        return;
      case KivisPackage.ACTION__MULTIMATCH:
        setMultimatch((Boolean)newValue);
        return;
      case KivisPackage.ACTION__DOM_ELEMENT:
        setDomElement((String)newValue);
        return;
      case KivisPackage.ACTION__DEFERRED:
        setDeferred((Boolean)newValue);
        return;
      case KivisPackage.ACTION__VARIABLE:
        setVariable((String)newValue);
        return;
      case KivisPackage.ACTION__CONTROL:
        setControl((SimulationCorntrol)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case KivisPackage.ACTION__DOM_EVENT:
        setDomEvent(DOM_EVENT_EDEFAULT);
        return;
      case KivisPackage.ACTION__MULTIMATCH:
        setMultimatch(MULTIMATCH_EDEFAULT);
        return;
      case KivisPackage.ACTION__DOM_ELEMENT:
        setDomElement(DOM_ELEMENT_EDEFAULT);
        return;
      case KivisPackage.ACTION__DEFERRED:
        setDeferred(DEFERRED_EDEFAULT);
        return;
      case KivisPackage.ACTION__VARIABLE:
        setVariable(VARIABLE_EDEFAULT);
        return;
      case KivisPackage.ACTION__CONTROL:
        setControl(CONTROL_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case KivisPackage.ACTION__DOM_EVENT:
        return DOM_EVENT_EDEFAULT == null ? domEvent != null : !DOM_EVENT_EDEFAULT.equals(domEvent);
      case KivisPackage.ACTION__MULTIMATCH:
        return multimatch != MULTIMATCH_EDEFAULT;
      case KivisPackage.ACTION__DOM_ELEMENT:
        return DOM_ELEMENT_EDEFAULT == null ? domElement != null : !DOM_ELEMENT_EDEFAULT.equals(domElement);
      case KivisPackage.ACTION__DEFERRED:
        return deferred != DEFERRED_EDEFAULT;
      case KivisPackage.ACTION__VARIABLE:
        return VARIABLE_EDEFAULT == null ? variable != null : !VARIABLE_EDEFAULT.equals(variable);
      case KivisPackage.ACTION__CONTROL:
        return control != CONTROL_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (domEvent: ");
    result.append(domEvent);
    result.append(", multimatch: ");
    result.append(multimatch);
    result.append(", domElement: ");
    result.append(domElement);
    result.append(", deferred: ");
    result.append(deferred);
    result.append(", variable: ");
    result.append(variable);
    result.append(", control: ");
    result.append(control);
    result.append(')');
    return result.toString();
  }

} //ActionImpl
