/*
 * generated by Xtext
 */
package de.cau.cs.kieler.kivis.formatting2

import com.google.inject.Inject
import de.cau.cs.kieler.kivis.kivis.Binding
import de.cau.cs.kieler.kivis.kivis.Content
import de.cau.cs.kieler.kivis.kivis.Visualization
import de.cau.cs.kieler.kivis.services.KiVisGrammarAccess
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument

class KiVisFormatter extends AbstractFormatter2 {
	
	@Inject extension KiVisGrammarAccess

	def dispatch void format(Visualization visualization, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (Content content : visualization.getContent()) {
			content.format;
		}
	}

	def dispatch void format(Binding binding, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		binding.getInterface.format;
	}
	
	// TODO: implement for Handler, Action, Code
}
