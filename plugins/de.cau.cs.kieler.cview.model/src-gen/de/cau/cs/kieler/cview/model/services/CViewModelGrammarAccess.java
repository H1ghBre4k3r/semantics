/*
 * generated by Xtext 2.10.0
 */
package de.cau.cs.kieler.cview.model.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class CViewModelGrammarAccess extends AbstractGrammarElementFinder {
	
	public class CViewModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.cview.model.CViewModel.CViewModel");
		private final Assignment cComponentsAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cComponentsComponentParserRuleCall_0 = (RuleCall)cComponentsAssignment.eContents().get(0);
		
		//CViewModel:
		//	components+=Component*;
		@Override public ParserRule getRule() { return rule; }
		
		////    folders+=Folder*
		////    ';'
		////    files+=File*
		////    ';'
		//components+=Component*
		public Assignment getComponentsAssignment() { return cComponentsAssignment; }
		
		//Component
		public RuleCall getComponentsComponentParserRuleCall_0() { return cComponentsComponentParserRuleCall_0; }
	}
	public class ComponentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.cview.model.CViewModel.Component");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cComponentKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cParentKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cParentAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final CrossReference cParentComponentCrossReference_2_2_0 = (CrossReference)cParentAssignment_2_2.eContents().get(0);
		private final RuleCall cParentComponentIDTerminalRuleCall_2_2_0_1 = (RuleCall)cParentComponentCrossReference_2_2_0.eContents().get(1);
		private final Keyword cTypeKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cTypeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cTypeComponentTypeEnumRuleCall_5_0 = (RuleCall)cTypeAssignment_5.eContents().get(0);
		private final Keyword cLocationKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cEqualsSignKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cLocationAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cLocationSTRINGTerminalRuleCall_8_0 = (RuleCall)cLocationAssignment_8.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cReferenceLineKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Keyword cEqualsSignKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Assignment cReferenceLineAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final RuleCall cReferenceLineINTTerminalRuleCall_9_2_0 = (RuleCall)cReferenceLineAssignment_9_2.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cChildrenKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Keyword cEqualsSignKeyword_10_1 = (Keyword)cGroup_10.eContents().get(1);
		private final Assignment cChildrenAssignment_10_2 = (Assignment)cGroup_10.eContents().get(2);
		private final CrossReference cChildrenComponentCrossReference_10_2_0 = (CrossReference)cChildrenAssignment_10_2.eContents().get(0);
		private final RuleCall cChildrenComponentIDTerminalRuleCall_10_2_0_1 = (RuleCall)cChildrenComponentCrossReference_10_2_0.eContents().get(1);
		
		////Folder:
		////	'Folder'  name=ID  
		////	         ('parent' '=' parent=[Folder])?
		////	         (project?='project')
		////	         'location' '=' location=STRING
		////             ('children' '=' children+=([FileOrFolder])*)?;
		////
		////File:
		////    'File'  name=ID  
		////           ('parent' '=' parent=[Folder])?
		////           'location' '=' location=STRING;
		////	
		////FileOrFolder returns FileOrFolder:
		////    File | Folder
		////;	
		//Component:
		//	'Component' name=ID ('parent' '=' parent=[Component])?
		//	'type' '=' type=ComponentType
		//	//           ('referenceFile' '=' referenceFile=[File])?
		//	'location' '=' location=STRING ('referenceLine' '=' referenceLine=INT)? ('children' '=' children+=[Component]*)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'Component' name=ID ('parent' '=' parent=[Component])? 'type' '=' type=ComponentType //           ('referenceFile' '=' referenceFile=[File])?
		//'location' '=' location=STRING ('referenceLine' '=' referenceLine=INT)? ('children' '=' children+=[Component]*)?
		public Group getGroup() { return cGroup; }
		
		//'Component'
		public Keyword getComponentKeyword_0() { return cComponentKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//('parent' '=' parent=[Component])?
		public Group getGroup_2() { return cGroup_2; }
		
		//'parent'
		public Keyword getParentKeyword_2_0() { return cParentKeyword_2_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_2_1() { return cEqualsSignKeyword_2_1; }
		
		//parent=[Component]
		public Assignment getParentAssignment_2_2() { return cParentAssignment_2_2; }
		
		//[Component]
		public CrossReference getParentComponentCrossReference_2_2_0() { return cParentComponentCrossReference_2_2_0; }
		
		//ID
		public RuleCall getParentComponentIDTerminalRuleCall_2_2_0_1() { return cParentComponentIDTerminalRuleCall_2_2_0_1; }
		
		//'type'
		public Keyword getTypeKeyword_3() { return cTypeKeyword_3; }
		
		//'='
		public Keyword getEqualsSignKeyword_4() { return cEqualsSignKeyword_4; }
		
		//type=ComponentType
		public Assignment getTypeAssignment_5() { return cTypeAssignment_5; }
		
		//ComponentType
		public RuleCall getTypeComponentTypeEnumRuleCall_5_0() { return cTypeComponentTypeEnumRuleCall_5_0; }
		
		////           ('referenceFile' '=' referenceFile=[File])?
		//'location'
		public Keyword getLocationKeyword_6() { return cLocationKeyword_6; }
		
		//'='
		public Keyword getEqualsSignKeyword_7() { return cEqualsSignKeyword_7; }
		
		//location=STRING
		public Assignment getLocationAssignment_8() { return cLocationAssignment_8; }
		
		//STRING
		public RuleCall getLocationSTRINGTerminalRuleCall_8_0() { return cLocationSTRINGTerminalRuleCall_8_0; }
		
		//('referenceLine' '=' referenceLine=INT)?
		public Group getGroup_9() { return cGroup_9; }
		
		//'referenceLine'
		public Keyword getReferenceLineKeyword_9_0() { return cReferenceLineKeyword_9_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_9_1() { return cEqualsSignKeyword_9_1; }
		
		//referenceLine=INT
		public Assignment getReferenceLineAssignment_9_2() { return cReferenceLineAssignment_9_2; }
		
		//INT
		public RuleCall getReferenceLineINTTerminalRuleCall_9_2_0() { return cReferenceLineINTTerminalRuleCall_9_2_0; }
		
		//('children' '=' children+=[Component]*)?
		public Group getGroup_10() { return cGroup_10; }
		
		//'children'
		public Keyword getChildrenKeyword_10_0() { return cChildrenKeyword_10_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_10_1() { return cEqualsSignKeyword_10_1; }
		
		//children+=[Component]*
		public Assignment getChildrenAssignment_10_2() { return cChildrenAssignment_10_2; }
		
		//[Component]
		public CrossReference getChildrenComponentCrossReference_10_2_0() { return cChildrenComponentCrossReference_10_2_0; }
		
		//ID
		public RuleCall getChildrenComponentIDTerminalRuleCall_10_2_0_1() { return cChildrenComponentIDTerminalRuleCall_10_2_0_1; }
	}
	
	public class ComponentTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "de.cau.cs.kieler.cview.model.CViewModel.ComponentType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cDIREnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cDIRDIRKeyword_0_0 = (Keyword)cDIREnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cFILEEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cFILEFILEKeyword_1_0 = (Keyword)cFILEEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cFUNCEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cFUNCFUNCKeyword_2_0 = (Keyword)cFUNCEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cCOMPOUNDEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cCOMPOUNDCOMPOUNDKeyword_3_0 = (Keyword)cCOMPOUNDEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cREADEREnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cREADERREADERKeyword_4_0 = (Keyword)cREADEREnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cWRITEREnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cWRITERWRITERKeyword_5_0 = (Keyword)cWRITEREnumLiteralDeclaration_5.eContents().get(0);
		
		//enum ComponentType:
		//	DIR | FILE | FUNC | COMPOUND | READER | WRITER;
		public EnumRule getRule() { return rule; }
		
		//DIR | FILE | FUNC | COMPOUND | READER | WRITER
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//DIR
		public EnumLiteralDeclaration getDIREnumLiteralDeclaration_0() { return cDIREnumLiteralDeclaration_0; }
		
		//"DIR"
		public Keyword getDIRDIRKeyword_0_0() { return cDIRDIRKeyword_0_0; }
		
		//FILE
		public EnumLiteralDeclaration getFILEEnumLiteralDeclaration_1() { return cFILEEnumLiteralDeclaration_1; }
		
		//"FILE"
		public Keyword getFILEFILEKeyword_1_0() { return cFILEFILEKeyword_1_0; }
		
		//FUNC
		public EnumLiteralDeclaration getFUNCEnumLiteralDeclaration_2() { return cFUNCEnumLiteralDeclaration_2; }
		
		//"FUNC"
		public Keyword getFUNCFUNCKeyword_2_0() { return cFUNCFUNCKeyword_2_0; }
		
		//COMPOUND
		public EnumLiteralDeclaration getCOMPOUNDEnumLiteralDeclaration_3() { return cCOMPOUNDEnumLiteralDeclaration_3; }
		
		//"COMPOUND"
		public Keyword getCOMPOUNDCOMPOUNDKeyword_3_0() { return cCOMPOUNDCOMPOUNDKeyword_3_0; }
		
		//READER
		public EnumLiteralDeclaration getREADEREnumLiteralDeclaration_4() { return cREADEREnumLiteralDeclaration_4; }
		
		//"READER"
		public Keyword getREADERREADERKeyword_4_0() { return cREADERREADERKeyword_4_0; }
		
		//WRITER
		public EnumLiteralDeclaration getWRITEREnumLiteralDeclaration_5() { return cWRITEREnumLiteralDeclaration_5; }
		
		//"WRITER"
		public Keyword getWRITERWRITERKeyword_5_0() { return cWRITERWRITERKeyword_5_0; }
	}
	
	private final CViewModelElements pCViewModel;
	private final ComponentElements pComponent;
	private final ComponentTypeElements eComponentType;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public CViewModelGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pCViewModel = new CViewModelElements();
		this.pComponent = new ComponentElements();
		this.eComponentType = new ComponentTypeElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("de.cau.cs.kieler.cview.model.CViewModel".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//CViewModel:
	//	components+=Component*;
	public CViewModelElements getCViewModelAccess() {
		return pCViewModel;
	}
	
	public ParserRule getCViewModelRule() {
		return getCViewModelAccess().getRule();
	}
	
	////Folder:
	////	'Folder'  name=ID  
	////	         ('parent' '=' parent=[Folder])?
	////	         (project?='project')
	////	         'location' '=' location=STRING
	////             ('children' '=' children+=([FileOrFolder])*)?;
	////
	////File:
	////    'File'  name=ID  
	////           ('parent' '=' parent=[Folder])?
	////           'location' '=' location=STRING;
	////	
	////FileOrFolder returns FileOrFolder:
	////    File | Folder
	////;	
	//Component:
	//	'Component' name=ID ('parent' '=' parent=[Component])?
	//	'type' '=' type=ComponentType
	//	//           ('referenceFile' '=' referenceFile=[File])?
	//	'location' '=' location=STRING ('referenceLine' '=' referenceLine=INT)? ('children' '=' children+=[Component]*)?;
	public ComponentElements getComponentAccess() {
		return pComponent;
	}
	
	public ParserRule getComponentRule() {
		return getComponentAccess().getRule();
	}
	
	//enum ComponentType:
	//	DIR | FILE | FUNC | COMPOUND | READER | WRITER;
	public ComponentTypeElements getComponentTypeAccess() {
		return eComponentType;
	}
	
	public EnumRule getComponentTypeRule() {
		return getComponentTypeAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/ *'->'* /';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
