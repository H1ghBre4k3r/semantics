package de.cau.cs.kieler.esterel.scest.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.cau.cs.kieler.esterel.scest.services.SCEstGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalSCEstParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_ID", "RULE_STRING", "RULE_HOSTCODE", "RULE_INT", "RULE_FLOAT", "RULE_BOOLEAN", "RULE_COMMENT_ANNOTATION", "RULE_SL_COMMENT_ANNOTATION", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_NUMBER", "RULE_WS", "RULE_ANY_OTHER", "'module'", "':'", "'end'", "'.'", "';'", "':='", "'unemit'", "'set'", "'('", "')'", "'combine'", "'with'", "'type'", "','", "'constant'", "'='", "'function'", "'()'", "'procedure'", "'task'", "'input'", "'output'", "'inputoutput'", "'return'", "'sensor'", "'relation'", "'=>'", "'#'", "'||'", "'nothing'", "'pause'", "'halt'", "'['", "']'", "'emit'", "'sustain'", "'call'", "'present'", "'then'", "'else'", "'case'", "'do'", "'if'", "'elsif'", "'loop'", "'each'", "'positive'", "'repeat'", "'times'", "'weak'", "'abort'", "'when'", "'await'", "'every'", "'suspend'", "'trap'", "'in'", "'handle'", "'exit'", "'exec'", "'signal'", "'var'", "'run'", "'copymodule'", "'/'", "'*'", "'+'", "'-'", "'mod'", "'<>'", "'>'", "'<'", "'<='", "'>='", "'not'", "'and'", "'or'", "'upto'", "'watching'", "'timeout'", "'??'", "'tick'", "'immediate'", "'goto'", "'schedule'", "'{'", "'}'", "'fork'", "'par'", "'join'", "'!'", "'&'", "'to'", "'scope'", "'expression'", "'private'", "'const'", "'global'", "'static'", "'ref'", "'extern'", "'print'", "'randomize'", "'&&'", "'|'", "'^'", "'>>'", "'>>>'", "'\\''", "'_'", "'null'", "'@'", "'pre'", "'?'", "'pure'", "'boolean'", "'unsigned'", "'integer'", "'float'", "'double'", "'string'", "'host'", "'none'", "'max'", "'min'", "'conflict'", "'confluent'", "'+='", "'-='", "'*='", "'/='", "'%='", "'&='", "'|='", "'^='", "'<<='", "'>>='", "'>>>='", "'min='", "'max='", "'++'", "'--'", "'~'", "'val'", "'<<'", "'->'", "'bool'", "'int'", "'struct'"
    };
    public static final int T__144=144;
    public static final int T__143=143;
    public static final int T__146=146;
    public static final int T__50=50;
    public static final int T__145=145;
    public static final int T__140=140;
    public static final int T__142=142;
    public static final int T__141=141;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__137=137;
    public static final int T__52=52;
    public static final int T__136=136;
    public static final int T__53=53;
    public static final int T__139=139;
    public static final int T__54=54;
    public static final int T__138=138;
    public static final int T__133=133;
    public static final int T__132=132;
    public static final int T__60=60;
    public static final int T__135=135;
    public static final int T__61=61;
    public static final int T__134=134;
    public static final int RULE_ID=4;
    public static final int T__131=131;
    public static final int T__130=130;
    public static final int RULE_INT=7;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=12;
    public static final int T__67=67;
    public static final int T__129=129;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__126=126;
    public static final int T__63=63;
    public static final int T__125=125;
    public static final int T__64=64;
    public static final int T__128=128;
    public static final int T__65=65;
    public static final int T__127=127;
    public static final int T__165=165;
    public static final int T__162=162;
    public static final int T__161=161;
    public static final int T__164=164;
    public static final int T__163=163;
    public static final int RULE_COMMENT_ANNOTATION=10;
    public static final int T__160=160;
    public static final int T__37=37;
    public static final int RULE_SL_COMMENT_ANNOTATION=11;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__159=159;
    public static final int T__30=30;
    public static final int T__158=158;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int T__155=155;
    public static final int T__154=154;
    public static final int T__157=157;
    public static final int T__156=156;
    public static final int T__151=151;
    public static final int T__150=150;
    public static final int T__153=153;
    public static final int T__152=152;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int RULE_FLOAT=8;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__148=148;
    public static final int T__41=41;
    public static final int T__147=147;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__149=149;
    public static final int T__91=91;
    public static final int T__100=100;
    public static final int T__92=92;
    public static final int T__93=93;
    public static final int T__102=102;
    public static final int T__94=94;
    public static final int T__101=101;
    public static final int T__90=90;
    public static final int RULE_BOOLEAN=9;
    public static final int T__19=19;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__99=99;
    public static final int T__95=95;
    public static final int T__96=96;
    public static final int T__97=97;
    public static final int T__98=98;
    public static final int T__26=26;
    public static final int RULE_HOSTCODE=6;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__23=23;
    public static final int T__24=24;
    public static final int T__25=25;
    public static final int T__20=20;
    public static final int T__21=21;
    public static final int T__122=122;
    public static final int T__70=70;
    public static final int T__121=121;
    public static final int T__71=71;
    public static final int T__124=124;
    public static final int T__72=72;
    public static final int T__123=123;
    public static final int T__120=120;
    public static final int RULE_STRING=5;
    public static final int RULE_SL_COMMENT=13;
    public static final int T__77=77;
    public static final int T__119=119;
    public static final int T__78=78;
    public static final int T__118=118;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int T__115=115;
    public static final int EOF=-1;
    public static final int T__74=74;
    public static final int T__114=114;
    public static final int T__75=75;
    public static final int T__117=117;
    public static final int T__76=76;
    public static final int T__116=116;
    public static final int T__80=80;
    public static final int T__111=111;
    public static final int T__81=81;
    public static final int T__110=110;
    public static final int T__82=82;
    public static final int T__113=113;
    public static final int T__83=83;
    public static final int T__112=112;
    public static final int RULE_WS=15;
    public static final int RULE_ANY_OTHER=16;
    public static final int RULE_NUMBER=14;
    public static final int T__88=88;
    public static final int T__108=108;
    public static final int T__89=89;
    public static final int T__107=107;
    public static final int T__109=109;
    public static final int T__84=84;
    public static final int T__104=104;
    public static final int T__85=85;
    public static final int T__103=103;
    public static final int T__86=86;
    public static final int T__106=106;
    public static final int T__87=87;
    public static final int T__105=105;

    // delegates
    // delegators


        public InternalSCEstParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalSCEstParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalSCEstParser.tokenNames; }
    public String getGrammarFileName() { return "InternalSCEst.g"; }



    /*
      This grammar contains a lot of empty actions to work around a bug in ANTLR.
      Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
    */

     	private SCEstGrammarAccess grammarAccess;

        public InternalSCEstParser(TokenStream input, SCEstGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "EsterelProgram";
       	}

       	@Override
       	protected SCEstGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleEsterelProgram"
    // InternalSCEst.g:71:1: entryRuleEsterelProgram returns [EObject current=null] : iv_ruleEsterelProgram= ruleEsterelProgram EOF ;
    public final EObject entryRuleEsterelProgram() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEsterelProgram = null;



        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_SL_COMMENT", "RULE_ML_COMMENT", "RULE_WS");

        try {
            // InternalSCEst.g:73:2: (iv_ruleEsterelProgram= ruleEsterelProgram EOF )
            // InternalSCEst.g:74:2: iv_ruleEsterelProgram= ruleEsterelProgram EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEsterelProgramRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEsterelProgram=ruleEsterelProgram();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEsterelProgram; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleEsterelProgram"


    // $ANTLR start "ruleEsterelProgram"
    // InternalSCEst.g:83:1: ruleEsterelProgram returns [EObject current=null] : ( ( (lv_pragmas_0_0= rulePragma ) )* ( (lv_modules_1_0= ruleEsterelModule ) )* ) ;
    public final EObject ruleEsterelProgram() throws RecognitionException {
        EObject current = null;

        EObject lv_pragmas_0_0 = null;

        EObject lv_modules_1_0 = null;



        	enterRule();
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_SL_COMMENT", "RULE_ML_COMMENT", "RULE_WS");

        try {
            // InternalSCEst.g:90:2: ( ( ( (lv_pragmas_0_0= rulePragma ) )* ( (lv_modules_1_0= ruleEsterelModule ) )* ) )
            // InternalSCEst.g:91:2: ( ( (lv_pragmas_0_0= rulePragma ) )* ( (lv_modules_1_0= ruleEsterelModule ) )* )
            {
            // InternalSCEst.g:91:2: ( ( (lv_pragmas_0_0= rulePragma ) )* ( (lv_modules_1_0= ruleEsterelModule ) )* )
            // InternalSCEst.g:92:3: ( (lv_pragmas_0_0= rulePragma ) )* ( (lv_modules_1_0= ruleEsterelModule ) )*
            {
            // InternalSCEst.g:92:3: ( (lv_pragmas_0_0= rulePragma ) )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==44) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // InternalSCEst.g:93:4: (lv_pragmas_0_0= rulePragma )
            	    {
            	    // InternalSCEst.g:93:4: (lv_pragmas_0_0= rulePragma )
            	    // InternalSCEst.g:94:5: lv_pragmas_0_0= rulePragma
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getEsterelProgramAccess().getPragmasPragmaParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_3);
            	    lv_pragmas_0_0=rulePragma();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getEsterelProgramRule());
            	      					}
            	      					add(
            	      						current,
            	      						"pragmas",
            	      						lv_pragmas_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Pragma");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

            // InternalSCEst.g:111:3: ( (lv_modules_1_0= ruleEsterelModule ) )*
            loop2:
            do {
                int alt2=2;
                int LA2_0 = input.LA(1);

                if ( (LA2_0==RULE_COMMENT_ANNOTATION||LA2_0==17||LA2_0==128) ) {
                    alt2=1;
                }


                switch (alt2) {
            	case 1 :
            	    // InternalSCEst.g:112:4: (lv_modules_1_0= ruleEsterelModule )
            	    {
            	    // InternalSCEst.g:112:4: (lv_modules_1_0= ruleEsterelModule )
            	    // InternalSCEst.g:113:5: lv_modules_1_0= ruleEsterelModule
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getEsterelProgramAccess().getModulesEsterelModuleParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_4);
            	    lv_modules_1_0=ruleEsterelModule();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getEsterelProgramRule());
            	      					}
            	      					add(
            	      						current,
            	      						"modules",
            	      						lv_modules_1_0,
            	      						"de.cau.cs.kieler.esterel.scest.SCEst.EsterelModule");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleEsterelProgram"


    // $ANTLR start "entryRuleEsterelModule"
    // InternalSCEst.g:137:1: entryRuleEsterelModule returns [EObject current=null] : iv_ruleEsterelModule= ruleEsterelModule EOF ;
    public final EObject entryRuleEsterelModule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEsterelModule = null;


        try {
            // InternalSCEst.g:137:54: (iv_ruleEsterelModule= ruleEsterelModule EOF )
            // InternalSCEst.g:138:2: iv_ruleEsterelModule= ruleEsterelModule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEsterelModuleRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEsterelModule=ruleEsterelModule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEsterelModule; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEsterelModule"


    // $ANTLR start "ruleEsterelModule"
    // InternalSCEst.g:144:1: ruleEsterelModule returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'module' ( (lv_name_2_0= RULE_ID ) ) otherlv_3= ':' ( ( (lv_declarations_4_0= ruleVariableDeclaration ) ) | ( (lv_declarations_5_0= ruleEsterelDeclaration ) ) )* ( (lv_statements_6_0= ruleEsterelParallel ) )? ( (otherlv_7= 'end' otherlv_8= 'module' ) | otherlv_9= '.' ) ) ;
    public final EObject ruleEsterelModule() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_name_2_0=null;
        Token otherlv_3=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_declarations_4_0 = null;

        EObject lv_declarations_5_0 = null;

        EObject lv_statements_6_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:150:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'module' ( (lv_name_2_0= RULE_ID ) ) otherlv_3= ':' ( ( (lv_declarations_4_0= ruleVariableDeclaration ) ) | ( (lv_declarations_5_0= ruleEsterelDeclaration ) ) )* ( (lv_statements_6_0= ruleEsterelParallel ) )? ( (otherlv_7= 'end' otherlv_8= 'module' ) | otherlv_9= '.' ) ) )
            // InternalSCEst.g:151:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'module' ( (lv_name_2_0= RULE_ID ) ) otherlv_3= ':' ( ( (lv_declarations_4_0= ruleVariableDeclaration ) ) | ( (lv_declarations_5_0= ruleEsterelDeclaration ) ) )* ( (lv_statements_6_0= ruleEsterelParallel ) )? ( (otherlv_7= 'end' otherlv_8= 'module' ) | otherlv_9= '.' ) )
            {
            // InternalSCEst.g:151:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'module' ( (lv_name_2_0= RULE_ID ) ) otherlv_3= ':' ( ( (lv_declarations_4_0= ruleVariableDeclaration ) ) | ( (lv_declarations_5_0= ruleEsterelDeclaration ) ) )* ( (lv_statements_6_0= ruleEsterelParallel ) )? ( (otherlv_7= 'end' otherlv_8= 'module' ) | otherlv_9= '.' ) )
            // InternalSCEst.g:152:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'module' ( (lv_name_2_0= RULE_ID ) ) otherlv_3= ':' ( ( (lv_declarations_4_0= ruleVariableDeclaration ) ) | ( (lv_declarations_5_0= ruleEsterelDeclaration ) ) )* ( (lv_statements_6_0= ruleEsterelParallel ) )? ( (otherlv_7= 'end' otherlv_8= 'module' ) | otherlv_9= '.' )
            {
            // InternalSCEst.g:152:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop3:
            do {
                int alt3=2;
                int LA3_0 = input.LA(1);

                if ( (LA3_0==RULE_COMMENT_ANNOTATION||LA3_0==128) ) {
                    alt3=1;
                }


                switch (alt3) {
            	case 1 :
            	    // InternalSCEst.g:153:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:153:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCEst.g:154:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getEsterelModuleAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_5);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getEsterelModuleRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop3;
                }
            } while (true);

            otherlv_1=(Token)match(input,17,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getEsterelModuleAccess().getModuleKeyword_1());
              		
            }
            // InternalSCEst.g:175:3: ( (lv_name_2_0= RULE_ID ) )
            // InternalSCEst.g:176:4: (lv_name_2_0= RULE_ID )
            {
            // InternalSCEst.g:176:4: (lv_name_2_0= RULE_ID )
            // InternalSCEst.g:177:5: lv_name_2_0= RULE_ID
            {
            lv_name_2_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_2_0, grammarAccess.getEsterelModuleAccess().getNameIDTerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getEsterelModuleRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_2_0,
              						"de.cau.cs.kieler.annotations.Annotations.ID");
              				
            }

            }


            }

            otherlv_3=(Token)match(input,18,FollowSets000.FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getEsterelModuleAccess().getColonKeyword_3());
              		
            }
            // InternalSCEst.g:197:3: ( ( (lv_declarations_4_0= ruleVariableDeclaration ) ) | ( (lv_declarations_5_0= ruleEsterelDeclaration ) ) )*
            loop4:
            do {
                int alt4=3;
                alt4 = dfa4.predict(input);
                switch (alt4) {
            	case 1 :
            	    // InternalSCEst.g:198:4: ( (lv_declarations_4_0= ruleVariableDeclaration ) )
            	    {
            	    // InternalSCEst.g:198:4: ( (lv_declarations_4_0= ruleVariableDeclaration ) )
            	    // InternalSCEst.g:199:5: (lv_declarations_4_0= ruleVariableDeclaration )
            	    {
            	    // InternalSCEst.g:199:5: (lv_declarations_4_0= ruleVariableDeclaration )
            	    // InternalSCEst.g:200:6: lv_declarations_4_0= ruleVariableDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getEsterelModuleAccess().getDeclarationsVariableDeclarationParserRuleCall_4_0_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_8);
            	    lv_declarations_4_0=ruleVariableDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getEsterelModuleRule());
            	      						}
            	      						add(
            	      							current,
            	      							"declarations",
            	      							lv_declarations_4_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.VariableDeclaration");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalSCEst.g:218:4: ( (lv_declarations_5_0= ruleEsterelDeclaration ) )
            	    {
            	    // InternalSCEst.g:218:4: ( (lv_declarations_5_0= ruleEsterelDeclaration ) )
            	    // InternalSCEst.g:219:5: (lv_declarations_5_0= ruleEsterelDeclaration )
            	    {
            	    // InternalSCEst.g:219:5: (lv_declarations_5_0= ruleEsterelDeclaration )
            	    // InternalSCEst.g:220:6: lv_declarations_5_0= ruleEsterelDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getEsterelModuleAccess().getDeclarationsEsterelDeclarationParserRuleCall_4_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_8);
            	    lv_declarations_5_0=ruleEsterelDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getEsterelModuleRule());
            	      						}
            	      						add(
            	      							current,
            	      							"declarations",
            	      							lv_declarations_5_0,
            	      							"de.cau.cs.kieler.esterel.Esterel.EsterelDeclaration");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop4;
                }
            } while (true);

            // InternalSCEst.g:238:3: ( (lv_statements_6_0= ruleEsterelParallel ) )?
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==RULE_ID||LA5_0==RULE_COMMENT_ANNOTATION||(LA5_0>=23 && LA5_0<=24)||(LA5_0>=46 && LA5_0<=49)||(LA5_0>=51 && LA5_0<=54)||(LA5_0>=58 && LA5_0<=59)||LA5_0==61||(LA5_0>=63 && LA5_0<=64)||(LA5_0>=66 && LA5_0<=67)||(LA5_0>=69 && LA5_0<=72)||(LA5_0>=75 && LA5_0<=80)||LA5_0==100||LA5_0==102||LA5_0==104||LA5_0==128) ) {
                alt5=1;
            }
            switch (alt5) {
                case 1 :
                    // InternalSCEst.g:239:4: (lv_statements_6_0= ruleEsterelParallel )
                    {
                    // InternalSCEst.g:239:4: (lv_statements_6_0= ruleEsterelParallel )
                    // InternalSCEst.g:240:5: lv_statements_6_0= ruleEsterelParallel
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getEsterelModuleAccess().getStatementsEsterelParallelParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_9);
                    lv_statements_6_0=ruleEsterelParallel();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getEsterelModuleRule());
                      					}
                      					add(
                      						current,
                      						"statements",
                      						lv_statements_6_0,
                      						"de.cau.cs.kieler.esterel.Esterel.EsterelParallel");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCEst.g:257:3: ( (otherlv_7= 'end' otherlv_8= 'module' ) | otherlv_9= '.' )
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==19) ) {
                alt6=1;
            }
            else if ( (LA6_0==20) ) {
                alt6=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }
            switch (alt6) {
                case 1 :
                    // InternalSCEst.g:258:4: (otherlv_7= 'end' otherlv_8= 'module' )
                    {
                    // InternalSCEst.g:258:4: (otherlv_7= 'end' otherlv_8= 'module' )
                    // InternalSCEst.g:259:5: otherlv_7= 'end' otherlv_8= 'module'
                    {
                    otherlv_7=(Token)match(input,19,FollowSets000.FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getEsterelModuleAccess().getEndKeyword_6_0_0());
                      				
                    }
                    otherlv_8=(Token)match(input,17,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_8, grammarAccess.getEsterelModuleAccess().getModuleKeyword_6_0_1());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCEst.g:269:4: otherlv_9= '.'
                    {
                    otherlv_9=(Token)match(input,20,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getEsterelModuleAccess().getFullStopKeyword_6_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEsterelModule"


    // $ANTLR start "entryRuleStatement"
    // InternalSCEst.g:278:1: entryRuleStatement returns [EObject current=null] : iv_ruleStatement= ruleStatement EOF ;
    public final EObject entryRuleStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStatement = null;


        try {
            // InternalSCEst.g:278:50: (iv_ruleStatement= ruleStatement EOF )
            // InternalSCEst.g:279:2: iv_ruleStatement= ruleStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStatementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStatement=ruleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStatement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStatement"


    // $ANTLR start "ruleStatement"
    // InternalSCEst.g:285:1: ruleStatement returns [EObject current=null] : this_EsterelParallel_0= ruleEsterelParallel ;
    public final EObject ruleStatement() throws RecognitionException {
        EObject current = null;

        EObject this_EsterelParallel_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:291:2: (this_EsterelParallel_0= ruleEsterelParallel )
            // InternalSCEst.g:292:2: this_EsterelParallel_0= ruleEsterelParallel
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getStatementAccess().getEsterelParallelParserRuleCall());
              	
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_EsterelParallel_0=ruleEsterelParallel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_EsterelParallel_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStatement"


    // $ANTLR start "entryRuleInstructionStatement"
    // InternalSCEst.g:306:1: entryRuleInstructionStatement returns [EObject current=null] : iv_ruleInstructionStatement= ruleInstructionStatement EOF ;
    public final EObject entryRuleInstructionStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInstructionStatement = null;


        try {
            // InternalSCEst.g:306:61: (iv_ruleInstructionStatement= ruleInstructionStatement EOF )
            // InternalSCEst.g:307:2: iv_ruleInstructionStatement= ruleInstructionStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInstructionStatementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleInstructionStatement=ruleInstructionStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInstructionStatement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInstructionStatement"


    // $ANTLR start "ruleInstructionStatement"
    // InternalSCEst.g:313:1: ruleInstructionStatement returns [EObject current=null] : (this_InstructionStatement_0= superInstructionStatement | this_UnEmit_1= ruleUnEmit | this_Set_2= ruleSet ) ;
    public final EObject ruleInstructionStatement() throws RecognitionException {
        EObject current = null;

        EObject this_InstructionStatement_0 = null;

        EObject this_UnEmit_1 = null;

        EObject this_Set_2 = null;



        	enterRule();

        try {
            // InternalSCEst.g:319:2: ( (this_InstructionStatement_0= superInstructionStatement | this_UnEmit_1= ruleUnEmit | this_Set_2= ruleSet ) )
            // InternalSCEst.g:320:2: (this_InstructionStatement_0= superInstructionStatement | this_UnEmit_1= ruleUnEmit | this_Set_2= ruleSet )
            {
            // InternalSCEst.g:320:2: (this_InstructionStatement_0= superInstructionStatement | this_UnEmit_1= ruleUnEmit | this_Set_2= ruleSet )
            int alt7=3;
            alt7 = dfa7.predict(input);
            switch (alt7) {
                case 1 :
                    // InternalSCEst.g:321:3: this_InstructionStatement_0= superInstructionStatement
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getInstructionStatementAccess().getInstructionStatementParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_InstructionStatement_0=superInstructionStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_InstructionStatement_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCEst.g:333:3: this_UnEmit_1= ruleUnEmit
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getInstructionStatementAccess().getUnEmitParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_UnEmit_1=ruleUnEmit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_UnEmit_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCEst.g:345:3: this_Set_2= ruleSet
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getInstructionStatementAccess().getSetParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Set_2=ruleSet();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Set_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInstructionStatement"


    // $ANTLR start "entryRuleSCLStatement"
    // InternalSCEst.g:360:1: entryRuleSCLStatement returns [EObject current=null] : iv_ruleSCLStatement= ruleSCLStatement EOF ;
    public final EObject entryRuleSCLStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSCLStatement = null;


        try {
            // InternalSCEst.g:360:53: (iv_ruleSCLStatement= ruleSCLStatement EOF )
            // InternalSCEst.g:361:2: iv_ruleSCLStatement= ruleSCLStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSCLStatementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSCLStatement=ruleSCLStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSCLStatement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSCLStatement"


    // $ANTLR start "ruleSCLStatement"
    // InternalSCEst.g:367:1: ruleSCLStatement returns [EObject current=null] : (this_Assignment_0= ruleAssignment | this_Label_1= ruleLabel | this_Conditional_2= ruleConditional | this_LegacyConditional_3= ruleLegacyConditional | this_Goto_4= ruleGoto | this_Parallel_5= ruleParallel | this_ModuleCall_6= ruleModuleCall | this_ScopeStatement_7= ruleScopeStatement ) ;
    public final EObject ruleSCLStatement() throws RecognitionException {
        EObject current = null;

        EObject this_Assignment_0 = null;

        EObject this_Label_1 = null;

        EObject this_Conditional_2 = null;

        EObject this_LegacyConditional_3 = null;

        EObject this_Goto_4 = null;

        EObject this_Parallel_5 = null;

        EObject this_ModuleCall_6 = null;

        EObject this_ScopeStatement_7 = null;



        	enterRule();

        try {
            // InternalSCEst.g:373:2: ( (this_Assignment_0= ruleAssignment | this_Label_1= ruleLabel | this_Conditional_2= ruleConditional | this_LegacyConditional_3= ruleLegacyConditional | this_Goto_4= ruleGoto | this_Parallel_5= ruleParallel | this_ModuleCall_6= ruleModuleCall | this_ScopeStatement_7= ruleScopeStatement ) )
            // InternalSCEst.g:374:2: (this_Assignment_0= ruleAssignment | this_Label_1= ruleLabel | this_Conditional_2= ruleConditional | this_LegacyConditional_3= ruleLegacyConditional | this_Goto_4= ruleGoto | this_Parallel_5= ruleParallel | this_ModuleCall_6= ruleModuleCall | this_ScopeStatement_7= ruleScopeStatement )
            {
            // InternalSCEst.g:374:2: (this_Assignment_0= ruleAssignment | this_Label_1= ruleLabel | this_Conditional_2= ruleConditional | this_LegacyConditional_3= ruleLegacyConditional | this_Goto_4= ruleGoto | this_Parallel_5= ruleParallel | this_ModuleCall_6= ruleModuleCall | this_ScopeStatement_7= ruleScopeStatement )
            int alt8=8;
            alt8 = dfa8.predict(input);
            switch (alt8) {
                case 1 :
                    // InternalSCEst.g:375:3: this_Assignment_0= ruleAssignment
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSCLStatementAccess().getAssignmentParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Assignment_0=ruleAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Assignment_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCEst.g:387:3: this_Label_1= ruleLabel
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSCLStatementAccess().getLabelParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Label_1=ruleLabel();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Label_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCEst.g:399:3: this_Conditional_2= ruleConditional
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSCLStatementAccess().getConditionalParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Conditional_2=ruleConditional();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Conditional_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSCEst.g:411:3: this_LegacyConditional_3= ruleLegacyConditional
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSCLStatementAccess().getLegacyConditionalParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_LegacyConditional_3=ruleLegacyConditional();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LegacyConditional_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalSCEst.g:423:3: this_Goto_4= ruleGoto
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSCLStatementAccess().getGotoParserRuleCall_4());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Goto_4=ruleGoto();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Goto_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalSCEst.g:435:3: this_Parallel_5= ruleParallel
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSCLStatementAccess().getParallelParserRuleCall_5());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Parallel_5=ruleParallel();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Parallel_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalSCEst.g:447:3: this_ModuleCall_6= ruleModuleCall
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSCLStatementAccess().getModuleCallParserRuleCall_6());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ModuleCall_6=ruleModuleCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ModuleCall_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalSCEst.g:459:3: this_ScopeStatement_7= ruleScopeStatement
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSCLStatementAccess().getScopeStatementParserRuleCall_7());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ScopeStatement_7=ruleScopeStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ScopeStatement_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSCLStatement"


    // $ANTLR start "entryRuleEsterelThread"
    // InternalSCEst.g:474:1: entryRuleEsterelThread returns [EObject current=null] : iv_ruleEsterelThread= ruleEsterelThread EOF ;
    public final EObject entryRuleEsterelThread() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEsterelThread = null;


        try {
            // InternalSCEst.g:474:54: (iv_ruleEsterelThread= ruleEsterelThread EOF )
            // InternalSCEst.g:475:2: iv_ruleEsterelThread= ruleEsterelThread EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEsterelThreadRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEsterelThread=ruleEsterelThread();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEsterelThread; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEsterelThread"


    // $ANTLR start "ruleEsterelThread"
    // InternalSCEst.g:481:1: ruleEsterelThread returns [EObject current=null] : ( (this_InstructionStatement_0= ruleInstructionStatement ( () ( ( ( ';' )=>otherlv_2= ';' ) ( (lv_statements_3_0= ruleEsterelThread ) ) ) )? ) | (this_SCLStatement_4= ruleSCLStatement ( () ( (lv_statements_6_0= ruleEsterelThread ) ) )? ) ) ;
    public final EObject ruleEsterelThread() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_InstructionStatement_0 = null;

        EObject lv_statements_3_0 = null;

        EObject this_SCLStatement_4 = null;

        EObject lv_statements_6_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:487:2: ( ( (this_InstructionStatement_0= ruleInstructionStatement ( () ( ( ( ';' )=>otherlv_2= ';' ) ( (lv_statements_3_0= ruleEsterelThread ) ) ) )? ) | (this_SCLStatement_4= ruleSCLStatement ( () ( (lv_statements_6_0= ruleEsterelThread ) ) )? ) ) )
            // InternalSCEst.g:488:2: ( (this_InstructionStatement_0= ruleInstructionStatement ( () ( ( ( ';' )=>otherlv_2= ';' ) ( (lv_statements_3_0= ruleEsterelThread ) ) ) )? ) | (this_SCLStatement_4= ruleSCLStatement ( () ( (lv_statements_6_0= ruleEsterelThread ) ) )? ) )
            {
            // InternalSCEst.g:488:2: ( (this_InstructionStatement_0= ruleInstructionStatement ( () ( ( ( ';' )=>otherlv_2= ';' ) ( (lv_statements_3_0= ruleEsterelThread ) ) ) )? ) | (this_SCLStatement_4= ruleSCLStatement ( () ( (lv_statements_6_0= ruleEsterelThread ) ) )? ) )
            int alt11=2;
            alt11 = dfa11.predict(input);
            switch (alt11) {
                case 1 :
                    // InternalSCEst.g:489:3: (this_InstructionStatement_0= ruleInstructionStatement ( () ( ( ( ';' )=>otherlv_2= ';' ) ( (lv_statements_3_0= ruleEsterelThread ) ) ) )? )
                    {
                    // InternalSCEst.g:489:3: (this_InstructionStatement_0= ruleInstructionStatement ( () ( ( ( ';' )=>otherlv_2= ';' ) ( (lv_statements_3_0= ruleEsterelThread ) ) ) )? )
                    // InternalSCEst.g:490:4: this_InstructionStatement_0= ruleInstructionStatement ( () ( ( ( ';' )=>otherlv_2= ';' ) ( (lv_statements_3_0= ruleEsterelThread ) ) ) )?
                    {
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getEsterelThreadAccess().getInstructionStatementParserRuleCall_0_0());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_11);
                    this_InstructionStatement_0=ruleInstructionStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_InstructionStatement_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalSCEst.g:501:4: ( () ( ( ( ';' )=>otherlv_2= ';' ) ( (lv_statements_3_0= ruleEsterelThread ) ) ) )?
                    int alt9=2;
                    int LA9_0 = input.LA(1);

                    if ( (LA9_0==21) ) {
                        alt9=1;
                    }
                    switch (alt9) {
                        case 1 :
                            // InternalSCEst.g:502:5: () ( ( ( ';' )=>otherlv_2= ';' ) ( (lv_statements_3_0= ruleEsterelThread ) ) )
                            {
                            // InternalSCEst.g:502:5: ()
                            // InternalSCEst.g:503:6: 
                            {
                            if ( state.backtracking==0 ) {

                              						/* */
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						current = forceCreateModelElementAndAdd(
                              							grammarAccess.getEsterelThreadAccess().getEsterelThreadStatementsAction_0_1_0(),
                              							current);
                              					
                            }

                            }

                            // InternalSCEst.g:512:5: ( ( ( ';' )=>otherlv_2= ';' ) ( (lv_statements_3_0= ruleEsterelThread ) ) )
                            // InternalSCEst.g:513:6: ( ( ';' )=>otherlv_2= ';' ) ( (lv_statements_3_0= ruleEsterelThread ) )
                            {
                            // InternalSCEst.g:513:6: ( ( ';' )=>otherlv_2= ';' )
                            // InternalSCEst.g:514:7: ( ';' )=>otherlv_2= ';'
                            {
                            otherlv_2=(Token)match(input,21,FollowSets000.FOLLOW_12); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_2, grammarAccess.getEsterelThreadAccess().getSemicolonKeyword_0_1_1_0());
                              						
                            }

                            }

                            // InternalSCEst.g:520:6: ( (lv_statements_3_0= ruleEsterelThread ) )
                            // InternalSCEst.g:521:7: (lv_statements_3_0= ruleEsterelThread )
                            {
                            // InternalSCEst.g:521:7: (lv_statements_3_0= ruleEsterelThread )
                            // InternalSCEst.g:522:8: lv_statements_3_0= ruleEsterelThread
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getEsterelThreadAccess().getStatementsEsterelThreadParserRuleCall_0_1_1_1_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_statements_3_0=ruleEsterelThread();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getEsterelThreadRule());
                              								}
                              								add(
                              									current,
                              									"statements",
                              									lv_statements_3_0,
                              									"de.cau.cs.kieler.esterel.scest.SCEst.EsterelThread");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCEst.g:543:3: (this_SCLStatement_4= ruleSCLStatement ( () ( (lv_statements_6_0= ruleEsterelThread ) ) )? )
                    {
                    // InternalSCEst.g:543:3: (this_SCLStatement_4= ruleSCLStatement ( () ( (lv_statements_6_0= ruleEsterelThread ) ) )? )
                    // InternalSCEst.g:544:4: this_SCLStatement_4= ruleSCLStatement ( () ( (lv_statements_6_0= ruleEsterelThread ) ) )?
                    {
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getEsterelThreadAccess().getSCLStatementParserRuleCall_1_0());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_13);
                    this_SCLStatement_4=ruleSCLStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_SCLStatement_4;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalSCEst.g:555:4: ( () ( (lv_statements_6_0= ruleEsterelThread ) ) )?
                    int alt10=2;
                    alt10 = dfa10.predict(input);
                    switch (alt10) {
                        case 1 :
                            // InternalSCEst.g:556:5: () ( (lv_statements_6_0= ruleEsterelThread ) )
                            {
                            // InternalSCEst.g:556:5: ()
                            // InternalSCEst.g:557:6: 
                            {
                            if ( state.backtracking==0 ) {

                              						/* */
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						current = forceCreateModelElementAndAdd(
                              							grammarAccess.getEsterelThreadAccess().getEsterelThreadStatementsAction_1_1_0(),
                              							current);
                              					
                            }

                            }

                            // InternalSCEst.g:566:5: ( (lv_statements_6_0= ruleEsterelThread ) )
                            // InternalSCEst.g:567:6: (lv_statements_6_0= ruleEsterelThread )
                            {
                            // InternalSCEst.g:567:6: (lv_statements_6_0= ruleEsterelThread )
                            // InternalSCEst.g:568:7: lv_statements_6_0= ruleEsterelThread
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getEsterelThreadAccess().getStatementsEsterelThreadParserRuleCall_1_1_1_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_statements_6_0=ruleEsterelThread();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getEsterelThreadRule());
                              							}
                              							add(
                              								current,
                              								"statements",
                              								lv_statements_6_0,
                              								"de.cau.cs.kieler.esterel.scest.SCEst.EsterelThread");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEsterelThread"


    // $ANTLR start "entryRuleEsterelAssignment"
    // InternalSCEst.g:591:1: entryRuleEsterelAssignment returns [EObject current=null] : iv_ruleEsterelAssignment= ruleEsterelAssignment EOF ;
    public final EObject entryRuleEsterelAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEsterelAssignment = null;


        try {
            // InternalSCEst.g:591:58: (iv_ruleEsterelAssignment= ruleEsterelAssignment EOF )
            // InternalSCEst.g:592:2: iv_ruleEsterelAssignment= ruleEsterelAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEsterelAssignmentRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEsterelAssignment=ruleEsterelAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEsterelAssignment; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEsterelAssignment"


    // $ANTLR start "ruleEsterelAssignment"
    // InternalSCEst.g:598:1: ruleEsterelAssignment returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleVariableOrSignalReference ) ) otherlv_2= ':=' ( (lv_expression_3_0= ruleExpression ) ) ) ;
    public final EObject ruleEsterelAssignment() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_reference_1_0 = null;

        EObject lv_expression_3_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:604:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleVariableOrSignalReference ) ) otherlv_2= ':=' ( (lv_expression_3_0= ruleExpression ) ) ) )
            // InternalSCEst.g:605:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleVariableOrSignalReference ) ) otherlv_2= ':=' ( (lv_expression_3_0= ruleExpression ) ) )
            {
            // InternalSCEst.g:605:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleVariableOrSignalReference ) ) otherlv_2= ':=' ( (lv_expression_3_0= ruleExpression ) ) )
            // InternalSCEst.g:606:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleVariableOrSignalReference ) ) otherlv_2= ':=' ( (lv_expression_3_0= ruleExpression ) )
            {
            // InternalSCEst.g:606:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop12:
            do {
                int alt12=2;
                int LA12_0 = input.LA(1);

                if ( (LA12_0==RULE_COMMENT_ANNOTATION||LA12_0==128) ) {
                    alt12=1;
                }


                switch (alt12) {
            	case 1 :
            	    // InternalSCEst.g:607:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:607:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCEst.g:608:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getEsterelAssignmentAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_14);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getEsterelAssignmentRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop12;
                }
            } while (true);

            // InternalSCEst.g:625:3: ( (lv_reference_1_0= ruleVariableOrSignalReference ) )
            // InternalSCEst.g:626:4: (lv_reference_1_0= ruleVariableOrSignalReference )
            {
            // InternalSCEst.g:626:4: (lv_reference_1_0= ruleVariableOrSignalReference )
            // InternalSCEst.g:627:5: lv_reference_1_0= ruleVariableOrSignalReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEsterelAssignmentAccess().getReferenceVariableOrSignalReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_15);
            lv_reference_1_0=ruleVariableOrSignalReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEsterelAssignmentRule());
              					}
              					set(
              						current,
              						"reference",
              						lv_reference_1_0,
              						"de.cau.cs.kieler.esterel.scest.SCEst.VariableOrSignalReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,22,FollowSets000.FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getEsterelAssignmentAccess().getColonEqualsSignKeyword_2());
              		
            }
            // InternalSCEst.g:648:3: ( (lv_expression_3_0= ruleExpression ) )
            // InternalSCEst.g:649:4: (lv_expression_3_0= ruleExpression )
            {
            // InternalSCEst.g:649:4: (lv_expression_3_0= ruleExpression )
            // InternalSCEst.g:650:5: lv_expression_3_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEsterelAssignmentAccess().getExpressionExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_expression_3_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEsterelAssignmentRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_3_0,
              						"de.cau.cs.kieler.esterel.Esterel.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEsterelAssignment"


    // $ANTLR start "entryRuleVariableOrSignalReference"
    // InternalSCEst.g:671:1: entryRuleVariableOrSignalReference returns [EObject current=null] : iv_ruleVariableOrSignalReference= ruleVariableOrSignalReference EOF ;
    public final EObject entryRuleVariableOrSignalReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVariableOrSignalReference = null;


        try {
            // InternalSCEst.g:671:66: (iv_ruleVariableOrSignalReference= ruleVariableOrSignalReference EOF )
            // InternalSCEst.g:672:2: iv_ruleVariableOrSignalReference= ruleVariableOrSignalReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVariableOrSignalReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleVariableOrSignalReference=ruleVariableOrSignalReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVariableOrSignalReference; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVariableOrSignalReference"


    // $ANTLR start "ruleVariableOrSignalReference"
    // InternalSCEst.g:678:1: ruleVariableOrSignalReference returns [EObject current=null] : (this_ValuedObjectReference_0= ruleValuedObjectReference | this_SignalReferenceExpression_1= ruleSignalReferenceExpression | this_VariableReference_2= ruleVariableReference ) ;
    public final EObject ruleVariableOrSignalReference() throws RecognitionException {
        EObject current = null;

        EObject this_ValuedObjectReference_0 = null;

        EObject this_SignalReferenceExpression_1 = null;

        EObject this_VariableReference_2 = null;



        	enterRule();

        try {
            // InternalSCEst.g:684:2: ( (this_ValuedObjectReference_0= ruleValuedObjectReference | this_SignalReferenceExpression_1= ruleSignalReferenceExpression | this_VariableReference_2= ruleVariableReference ) )
            // InternalSCEst.g:685:2: (this_ValuedObjectReference_0= ruleValuedObjectReference | this_SignalReferenceExpression_1= ruleSignalReferenceExpression | this_VariableReference_2= ruleVariableReference )
            {
            // InternalSCEst.g:685:2: (this_ValuedObjectReference_0= ruleValuedObjectReference | this_SignalReferenceExpression_1= ruleSignalReferenceExpression | this_VariableReference_2= ruleVariableReference )
            int alt13=3;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==RULE_ID) ) {
                int LA13_1 = input.LA(2);

                if ( (synpred22_InternalSCEst()) ) {
                    alt13=1;
                }
                else if ( (synpred23_InternalSCEst()) ) {
                    alt13=2;
                }
                else if ( (true) ) {
                    alt13=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 13, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }
            switch (alt13) {
                case 1 :
                    // InternalSCEst.g:686:3: this_ValuedObjectReference_0= ruleValuedObjectReference
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getVariableOrSignalReferenceAccess().getValuedObjectReferenceParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedObjectReference_0=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ValuedObjectReference_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCEst.g:698:3: this_SignalReferenceExpression_1= ruleSignalReferenceExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getVariableOrSignalReferenceAccess().getSignalReferenceExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_SignalReferenceExpression_1=ruleSignalReferenceExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SignalReferenceExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCEst.g:710:3: this_VariableReference_2= ruleVariableReference
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getVariableOrSignalReferenceAccess().getVariableReferenceParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_VariableReference_2=ruleVariableReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_VariableReference_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVariableOrSignalReference"


    // $ANTLR start "entryRuleUnEmit"
    // InternalSCEst.g:725:1: entryRuleUnEmit returns [EObject current=null] : iv_ruleUnEmit= ruleUnEmit EOF ;
    public final EObject entryRuleUnEmit() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnEmit = null;


        try {
            // InternalSCEst.g:725:47: (iv_ruleUnEmit= ruleUnEmit EOF )
            // InternalSCEst.g:726:2: iv_ruleUnEmit= ruleUnEmit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnEmitRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleUnEmit=ruleUnEmit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnEmit; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnEmit"


    // $ANTLR start "ruleUnEmit"
    // InternalSCEst.g:732:1: ruleUnEmit returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'unemit' ( (otherlv_2= RULE_ID ) ) ) ;
    public final EObject ruleUnEmit() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_annotations_0_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:738:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'unemit' ( (otherlv_2= RULE_ID ) ) ) )
            // InternalSCEst.g:739:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'unemit' ( (otherlv_2= RULE_ID ) ) )
            {
            // InternalSCEst.g:739:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'unemit' ( (otherlv_2= RULE_ID ) ) )
            // InternalSCEst.g:740:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'unemit' ( (otherlv_2= RULE_ID ) )
            {
            // InternalSCEst.g:740:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop14:
            do {
                int alt14=2;
                int LA14_0 = input.LA(1);

                if ( (LA14_0==RULE_COMMENT_ANNOTATION||LA14_0==128) ) {
                    alt14=1;
                }


                switch (alt14) {
            	case 1 :
            	    // InternalSCEst.g:741:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:741:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCEst.g:742:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getUnEmitAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_17);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getUnEmitRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop14;
                }
            } while (true);

            otherlv_1=(Token)match(input,23,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getUnEmitAccess().getUnemitKeyword_1());
              		
            }
            // InternalSCEst.g:763:3: ( (otherlv_2= RULE_ID ) )
            // InternalSCEst.g:764:4: (otherlv_2= RULE_ID )
            {
            // InternalSCEst.g:764:4: (otherlv_2= RULE_ID )
            // InternalSCEst.g:765:5: otherlv_2= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getUnEmitRule());
              					}
              				
            }
            otherlv_2=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_2, grammarAccess.getUnEmitAccess().getSignalSignalCrossReference_2_0());
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnEmit"


    // $ANTLR start "entryRuleSet"
    // InternalSCEst.g:783:1: entryRuleSet returns [EObject current=null] : iv_ruleSet= ruleSet EOF ;
    public final EObject entryRuleSet() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSet = null;


        try {
            // InternalSCEst.g:783:44: (iv_ruleSet= ruleSet EOF )
            // InternalSCEst.g:784:2: iv_ruleSet= ruleSet EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSet=ruleSet();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSet; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSet"


    // $ANTLR start "ruleSet"
    // InternalSCEst.g:790:1: ruleSet returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'set' ( (otherlv_2= RULE_ID ) ) (otherlv_3= '(' ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= ')' ) ) ;
    public final EObject ruleSet() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_expression_4_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:796:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'set' ( (otherlv_2= RULE_ID ) ) (otherlv_3= '(' ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= ')' ) ) )
            // InternalSCEst.g:797:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'set' ( (otherlv_2= RULE_ID ) ) (otherlv_3= '(' ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= ')' ) )
            {
            // InternalSCEst.g:797:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'set' ( (otherlv_2= RULE_ID ) ) (otherlv_3= '(' ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= ')' ) )
            // InternalSCEst.g:798:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'set' ( (otherlv_2= RULE_ID ) ) (otherlv_3= '(' ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= ')' )
            {
            // InternalSCEst.g:798:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop15:
            do {
                int alt15=2;
                int LA15_0 = input.LA(1);

                if ( (LA15_0==RULE_COMMENT_ANNOTATION||LA15_0==128) ) {
                    alt15=1;
                }


                switch (alt15) {
            	case 1 :
            	    // InternalSCEst.g:799:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:799:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCEst.g:800:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSetAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_18);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSetRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop15;
                }
            } while (true);

            otherlv_1=(Token)match(input,24,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSetAccess().getSetKeyword_1());
              		
            }
            // InternalSCEst.g:821:3: ( (otherlv_2= RULE_ID ) )
            // InternalSCEst.g:822:4: (otherlv_2= RULE_ID )
            {
            // InternalSCEst.g:822:4: (otherlv_2= RULE_ID )
            // InternalSCEst.g:823:5: otherlv_2= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSetRule());
              					}
              				
            }
            otherlv_2=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_2, grammarAccess.getSetAccess().getSignalSignalCrossReference_2_0());
              				
            }

            }


            }

            // InternalSCEst.g:837:3: (otherlv_3= '(' ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= ')' )
            // InternalSCEst.g:838:4: otherlv_3= '(' ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= ')'
            {
            otherlv_3=(Token)match(input,25,FollowSets000.FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_3, grammarAccess.getSetAccess().getLeftParenthesisKeyword_3_0());
              			
            }
            // InternalSCEst.g:842:4: ( (lv_expression_4_0= ruleExpression ) )
            // InternalSCEst.g:843:5: (lv_expression_4_0= ruleExpression )
            {
            // InternalSCEst.g:843:5: (lv_expression_4_0= ruleExpression )
            // InternalSCEst.g:844:6: lv_expression_4_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              						newCompositeNode(grammarAccess.getSetAccess().getExpressionExpressionParserRuleCall_3_1_0());
              					
            }
            pushFollow(FollowSets000.FOLLOW_20);
            lv_expression_4_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElementForParent(grammarAccess.getSetRule());
              						}
              						set(
              							current,
              							"expression",
              							lv_expression_4_0,
              							"de.cau.cs.kieler.esterel.Esterel.Expression");
              						afterParserOrEnumRuleCall();
              					
            }

            }


            }

            otherlv_5=(Token)match(input,26,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_5, grammarAccess.getSetAccess().getRightParenthesisKeyword_3_2());
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSet"


    // $ANTLR start "entryRuleAtomicExpression"
    // InternalSCEst.g:870:1: entryRuleAtomicExpression returns [EObject current=null] : iv_ruleAtomicExpression= ruleAtomicExpression EOF ;
    public final EObject entryRuleAtomicExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAtomicExpression = null;


        try {
            // InternalSCEst.g:870:57: (iv_ruleAtomicExpression= ruleAtomicExpression EOF )
            // InternalSCEst.g:871:2: iv_ruleAtomicExpression= ruleAtomicExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAtomicExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAtomicExpression=ruleAtomicExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAtomicExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAtomicExpression"


    // $ANTLR start "ruleAtomicExpression"
    // InternalSCEst.g:877:1: ruleAtomicExpression returns [EObject current=null] : (this_EsterelFunctionCall_0= ruleEsterelFunctionCall | this_TrapExpression_1= ruleTrapExpression | this_BoolValue_2= ruleBoolValue | this_ValuedObjectPreExpression_3= ruleValuedObjectPreExpression | this_TextExpression_4= ruleTextExpression | (otherlv_5= '(' this_BooleanExpression_6= ruleBooleanExpression otherlv_7= ')' ) | this_ConstantExpression_8= ruleConstantExpression | this_FunctionCall_9= ruleFunctionCall | this_SignalOrTickReferenceExpression_10= ruleSignalOrTickReferenceExpression ) ;
    public final EObject ruleAtomicExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject this_EsterelFunctionCall_0 = null;

        EObject this_TrapExpression_1 = null;

        EObject this_BoolValue_2 = null;

        EObject this_ValuedObjectPreExpression_3 = null;

        EObject this_TextExpression_4 = null;

        EObject this_BooleanExpression_6 = null;

        EObject this_ConstantExpression_8 = null;

        EObject this_FunctionCall_9 = null;

        EObject this_SignalOrTickReferenceExpression_10 = null;



        	enterRule();

        try {
            // InternalSCEst.g:883:2: ( (this_EsterelFunctionCall_0= ruleEsterelFunctionCall | this_TrapExpression_1= ruleTrapExpression | this_BoolValue_2= ruleBoolValue | this_ValuedObjectPreExpression_3= ruleValuedObjectPreExpression | this_TextExpression_4= ruleTextExpression | (otherlv_5= '(' this_BooleanExpression_6= ruleBooleanExpression otherlv_7= ')' ) | this_ConstantExpression_8= ruleConstantExpression | this_FunctionCall_9= ruleFunctionCall | this_SignalOrTickReferenceExpression_10= ruleSignalOrTickReferenceExpression ) )
            // InternalSCEst.g:884:2: (this_EsterelFunctionCall_0= ruleEsterelFunctionCall | this_TrapExpression_1= ruleTrapExpression | this_BoolValue_2= ruleBoolValue | this_ValuedObjectPreExpression_3= ruleValuedObjectPreExpression | this_TextExpression_4= ruleTextExpression | (otherlv_5= '(' this_BooleanExpression_6= ruleBooleanExpression otherlv_7= ')' ) | this_ConstantExpression_8= ruleConstantExpression | this_FunctionCall_9= ruleFunctionCall | this_SignalOrTickReferenceExpression_10= ruleSignalOrTickReferenceExpression )
            {
            // InternalSCEst.g:884:2: (this_EsterelFunctionCall_0= ruleEsterelFunctionCall | this_TrapExpression_1= ruleTrapExpression | this_BoolValue_2= ruleBoolValue | this_ValuedObjectPreExpression_3= ruleValuedObjectPreExpression | this_TextExpression_4= ruleTextExpression | (otherlv_5= '(' this_BooleanExpression_6= ruleBooleanExpression otherlv_7= ')' ) | this_ConstantExpression_8= ruleConstantExpression | this_FunctionCall_9= ruleFunctionCall | this_SignalOrTickReferenceExpression_10= ruleSignalOrTickReferenceExpression )
            int alt16=9;
            alt16 = dfa16.predict(input);
            switch (alt16) {
                case 1 :
                    // InternalSCEst.g:885:3: this_EsterelFunctionCall_0= ruleEsterelFunctionCall
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicExpressionAccess().getEsterelFunctionCallParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_EsterelFunctionCall_0=ruleEsterelFunctionCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EsterelFunctionCall_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCEst.g:897:3: this_TrapExpression_1= ruleTrapExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicExpressionAccess().getTrapExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TrapExpression_1=ruleTrapExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TrapExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCEst.g:909:3: this_BoolValue_2= ruleBoolValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicExpressionAccess().getBoolValueParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_BoolValue_2=ruleBoolValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BoolValue_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSCEst.g:921:3: this_ValuedObjectPreExpression_3= ruleValuedObjectPreExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicExpressionAccess().getValuedObjectPreExpressionParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedObjectPreExpression_3=ruleValuedObjectPreExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ValuedObjectPreExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalSCEst.g:933:3: this_TextExpression_4= ruleTextExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicExpressionAccess().getTextExpressionParserRuleCall_4());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TextExpression_4=ruleTextExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TextExpression_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalSCEst.g:945:3: (otherlv_5= '(' this_BooleanExpression_6= ruleBooleanExpression otherlv_7= ')' )
                    {
                    // InternalSCEst.g:945:3: (otherlv_5= '(' this_BooleanExpression_6= ruleBooleanExpression otherlv_7= ')' )
                    // InternalSCEst.g:946:4: otherlv_5= '(' this_BooleanExpression_6= ruleBooleanExpression otherlv_7= ')'
                    {
                    otherlv_5=(Token)match(input,25,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getAtomicExpressionAccess().getLeftParenthesisKeyword_5_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getAtomicExpressionAccess().getBooleanExpressionParserRuleCall_5_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_20);
                    this_BooleanExpression_6=ruleBooleanExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_BooleanExpression_6;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_7=(Token)match(input,26,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getAtomicExpressionAccess().getRightParenthesisKeyword_5_2());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSCEst.g:967:3: this_ConstantExpression_8= ruleConstantExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicExpressionAccess().getConstantExpressionParserRuleCall_6());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ConstantExpression_8=ruleConstantExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ConstantExpression_8;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalSCEst.g:979:3: this_FunctionCall_9= ruleFunctionCall
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicExpressionAccess().getFunctionCallParserRuleCall_7());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_FunctionCall_9=ruleFunctionCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FunctionCall_9;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalSCEst.g:991:3: this_SignalOrTickReferenceExpression_10= ruleSignalOrTickReferenceExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicExpressionAccess().getSignalOrTickReferenceExpressionParserRuleCall_8());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_SignalOrTickReferenceExpression_10=ruleSignalOrTickReferenceExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SignalOrTickReferenceExpression_10;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAtomicExpression"


    // $ANTLR start "entryRuleAtomicValuedExpression"
    // InternalSCEst.g:1006:1: entryRuleAtomicValuedExpression returns [EObject current=null] : iv_ruleAtomicValuedExpression= ruleAtomicValuedExpression EOF ;
    public final EObject entryRuleAtomicValuedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAtomicValuedExpression = null;


        try {
            // InternalSCEst.g:1006:63: (iv_ruleAtomicValuedExpression= ruleAtomicValuedExpression EOF )
            // InternalSCEst.g:1007:2: iv_ruleAtomicValuedExpression= ruleAtomicValuedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAtomicValuedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAtomicValuedExpression=ruleAtomicValuedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAtomicValuedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAtomicValuedExpression"


    // $ANTLR start "ruleAtomicValuedExpression"
    // InternalSCEst.g:1013:1: ruleAtomicValuedExpression returns [EObject current=null] : (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | (otherlv_2= '(' this_ValuedExpression_3= ruleValuedExpression otherlv_4= ')' ) | this_AtomicExpression_5= ruleAtomicExpression | this_StringValue_6= ruleStringValue ) ;
    public final EObject ruleAtomicValuedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject this_IntValue_0 = null;

        EObject this_FloatValue_1 = null;

        EObject this_ValuedExpression_3 = null;

        EObject this_AtomicExpression_5 = null;

        EObject this_StringValue_6 = null;



        	enterRule();

        try {
            // InternalSCEst.g:1019:2: ( (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | (otherlv_2= '(' this_ValuedExpression_3= ruleValuedExpression otherlv_4= ')' ) | this_AtomicExpression_5= ruleAtomicExpression | this_StringValue_6= ruleStringValue ) )
            // InternalSCEst.g:1020:2: (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | (otherlv_2= '(' this_ValuedExpression_3= ruleValuedExpression otherlv_4= ')' ) | this_AtomicExpression_5= ruleAtomicExpression | this_StringValue_6= ruleStringValue )
            {
            // InternalSCEst.g:1020:2: (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | (otherlv_2= '(' this_ValuedExpression_3= ruleValuedExpression otherlv_4= ')' ) | this_AtomicExpression_5= ruleAtomicExpression | this_StringValue_6= ruleStringValue )
            int alt17=5;
            alt17 = dfa17.predict(input);
            switch (alt17) {
                case 1 :
                    // InternalSCEst.g:1021:3: this_IntValue_0= ruleIntValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getIntValueParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_IntValue_0=ruleIntValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_IntValue_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCEst.g:1033:3: this_FloatValue_1= ruleFloatValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getFloatValueParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_FloatValue_1=ruleFloatValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FloatValue_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCEst.g:1045:3: (otherlv_2= '(' this_ValuedExpression_3= ruleValuedExpression otherlv_4= ')' )
                    {
                    // InternalSCEst.g:1045:3: (otherlv_2= '(' this_ValuedExpression_3= ruleValuedExpression otherlv_4= ')' )
                    // InternalSCEst.g:1046:4: otherlv_2= '(' this_ValuedExpression_3= ruleValuedExpression otherlv_4= ')'
                    {
                    otherlv_2=(Token)match(input,25,FollowSets000.FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getAtomicValuedExpressionAccess().getLeftParenthesisKeyword_2_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getValuedExpressionParserRuleCall_2_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_20);
                    this_ValuedExpression_3=ruleValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ValuedExpression_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_4=(Token)match(input,26,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getAtomicValuedExpressionAccess().getRightParenthesisKeyword_2_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSCEst.g:1067:3: this_AtomicExpression_5= ruleAtomicExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getAtomicExpressionParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AtomicExpression_5=ruleAtomicExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AtomicExpression_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalSCEst.g:1079:3: this_StringValue_6= ruleStringValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getStringValueParserRuleCall_4());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_StringValue_6=ruleStringValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_StringValue_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAtomicValuedExpression"


    // $ANTLR start "entryRuleEsterelDeclaration"
    // InternalSCEst.g:1094:1: entryRuleEsterelDeclaration returns [EObject current=null] : iv_ruleEsterelDeclaration= ruleEsterelDeclaration EOF ;
    public final EObject entryRuleEsterelDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEsterelDeclaration = null;


        try {
            // InternalSCEst.g:1094:59: (iv_ruleEsterelDeclaration= ruleEsterelDeclaration EOF )
            // InternalSCEst.g:1095:2: iv_ruleEsterelDeclaration= ruleEsterelDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEsterelDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEsterelDeclaration=ruleEsterelDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEsterelDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEsterelDeclaration"


    // $ANTLR start "ruleEsterelDeclaration"
    // InternalSCEst.g:1101:1: ruleEsterelDeclaration returns [EObject current=null] : (this_InputDeclaration_0= ruleInputDeclaration | this_OutputDeclaration_1= ruleOutputDeclaration | this_InputOutputDeclaration_2= ruleInputOutputDeclaration | this_ReturnDeclaration_3= ruleReturnDeclaration | this_TypeDeclaration_4= ruleTypeDeclaration | this_SensorDeclaration_5= ruleSensorDeclaration | this_ConstantDeclaration_6= ruleConstantDeclaration | this_RelationDeclaration_7= ruleRelationDeclaration | this_TaskDeclaration_8= ruleTaskDeclaration | this_FunctionDeclaration_9= ruleFunctionDeclaration | this_ProcedureDeclaration_10= ruleProcedureDeclaration ) ;
    public final EObject ruleEsterelDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_InputDeclaration_0 = null;

        EObject this_OutputDeclaration_1 = null;

        EObject this_InputOutputDeclaration_2 = null;

        EObject this_ReturnDeclaration_3 = null;

        EObject this_TypeDeclaration_4 = null;

        EObject this_SensorDeclaration_5 = null;

        EObject this_ConstantDeclaration_6 = null;

        EObject this_RelationDeclaration_7 = null;

        EObject this_TaskDeclaration_8 = null;

        EObject this_FunctionDeclaration_9 = null;

        EObject this_ProcedureDeclaration_10 = null;



        	enterRule();

        try {
            // InternalSCEst.g:1107:2: ( (this_InputDeclaration_0= ruleInputDeclaration | this_OutputDeclaration_1= ruleOutputDeclaration | this_InputOutputDeclaration_2= ruleInputOutputDeclaration | this_ReturnDeclaration_3= ruleReturnDeclaration | this_TypeDeclaration_4= ruleTypeDeclaration | this_SensorDeclaration_5= ruleSensorDeclaration | this_ConstantDeclaration_6= ruleConstantDeclaration | this_RelationDeclaration_7= ruleRelationDeclaration | this_TaskDeclaration_8= ruleTaskDeclaration | this_FunctionDeclaration_9= ruleFunctionDeclaration | this_ProcedureDeclaration_10= ruleProcedureDeclaration ) )
            // InternalSCEst.g:1108:2: (this_InputDeclaration_0= ruleInputDeclaration | this_OutputDeclaration_1= ruleOutputDeclaration | this_InputOutputDeclaration_2= ruleInputOutputDeclaration | this_ReturnDeclaration_3= ruleReturnDeclaration | this_TypeDeclaration_4= ruleTypeDeclaration | this_SensorDeclaration_5= ruleSensorDeclaration | this_ConstantDeclaration_6= ruleConstantDeclaration | this_RelationDeclaration_7= ruleRelationDeclaration | this_TaskDeclaration_8= ruleTaskDeclaration | this_FunctionDeclaration_9= ruleFunctionDeclaration | this_ProcedureDeclaration_10= ruleProcedureDeclaration )
            {
            // InternalSCEst.g:1108:2: (this_InputDeclaration_0= ruleInputDeclaration | this_OutputDeclaration_1= ruleOutputDeclaration | this_InputOutputDeclaration_2= ruleInputOutputDeclaration | this_ReturnDeclaration_3= ruleReturnDeclaration | this_TypeDeclaration_4= ruleTypeDeclaration | this_SensorDeclaration_5= ruleSensorDeclaration | this_ConstantDeclaration_6= ruleConstantDeclaration | this_RelationDeclaration_7= ruleRelationDeclaration | this_TaskDeclaration_8= ruleTaskDeclaration | this_FunctionDeclaration_9= ruleFunctionDeclaration | this_ProcedureDeclaration_10= ruleProcedureDeclaration )
            int alt18=11;
            alt18 = dfa18.predict(input);
            switch (alt18) {
                case 1 :
                    // InternalSCEst.g:1109:3: this_InputDeclaration_0= ruleInputDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEsterelDeclarationAccess().getInputDeclarationParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_InputDeclaration_0=ruleInputDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_InputDeclaration_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCEst.g:1121:3: this_OutputDeclaration_1= ruleOutputDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEsterelDeclarationAccess().getOutputDeclarationParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_OutputDeclaration_1=ruleOutputDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_OutputDeclaration_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCEst.g:1133:3: this_InputOutputDeclaration_2= ruleInputOutputDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEsterelDeclarationAccess().getInputOutputDeclarationParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_InputOutputDeclaration_2=ruleInputOutputDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_InputOutputDeclaration_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSCEst.g:1145:3: this_ReturnDeclaration_3= ruleReturnDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEsterelDeclarationAccess().getReturnDeclarationParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ReturnDeclaration_3=ruleReturnDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ReturnDeclaration_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalSCEst.g:1157:3: this_TypeDeclaration_4= ruleTypeDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEsterelDeclarationAccess().getTypeDeclarationParserRuleCall_4());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TypeDeclaration_4=ruleTypeDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TypeDeclaration_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalSCEst.g:1169:3: this_SensorDeclaration_5= ruleSensorDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEsterelDeclarationAccess().getSensorDeclarationParserRuleCall_5());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_SensorDeclaration_5=ruleSensorDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SensorDeclaration_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalSCEst.g:1181:3: this_ConstantDeclaration_6= ruleConstantDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEsterelDeclarationAccess().getConstantDeclarationParserRuleCall_6());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ConstantDeclaration_6=ruleConstantDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ConstantDeclaration_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalSCEst.g:1193:3: this_RelationDeclaration_7= ruleRelationDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEsterelDeclarationAccess().getRelationDeclarationParserRuleCall_7());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_RelationDeclaration_7=ruleRelationDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_RelationDeclaration_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalSCEst.g:1205:3: this_TaskDeclaration_8= ruleTaskDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEsterelDeclarationAccess().getTaskDeclarationParserRuleCall_8());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TaskDeclaration_8=ruleTaskDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TaskDeclaration_8;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalSCEst.g:1217:3: this_FunctionDeclaration_9= ruleFunctionDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEsterelDeclarationAccess().getFunctionDeclarationParserRuleCall_9());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_FunctionDeclaration_9=ruleFunctionDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FunctionDeclaration_9;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 11 :
                    // InternalSCEst.g:1229:3: this_ProcedureDeclaration_10= ruleProcedureDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEsterelDeclarationAccess().getProcedureDeclarationParserRuleCall_10());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ProcedureDeclaration_10=ruleProcedureDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ProcedureDeclaration_10;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEsterelDeclaration"


    // $ANTLR start "entryRuleTypeIdentifier"
    // InternalSCEst.g:1244:1: entryRuleTypeIdentifier returns [EObject current=null] : iv_ruleTypeIdentifier= ruleTypeIdentifier EOF ;
    public final EObject entryRuleTypeIdentifier() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeIdentifier = null;


        try {
            // InternalSCEst.g:1244:55: (iv_ruleTypeIdentifier= ruleTypeIdentifier EOF )
            // InternalSCEst.g:1245:2: iv_ruleTypeIdentifier= ruleTypeIdentifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeIdentifierRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypeIdentifier=ruleTypeIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeIdentifier; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeIdentifier"


    // $ANTLR start "ruleTypeIdentifier"
    // InternalSCEst.g:1251:1: ruleTypeIdentifier returns [EObject current=null] : ( ( (lv_type_0_0= ruleEsterelValueType ) ) | (otherlv_1= 'combine' ( ( (lv_type_2_0= ruleEsterelValueType ) ) | ( (lv_idType_3_0= RULE_ID ) ) ) otherlv_4= 'with' ( (lv_operator_5_0= ruleEsterelCombineOperator ) ) ) | ( (lv_idType_6_0= RULE_ID ) ) | ( (otherlv_7= RULE_ID ) ) ) ;
    public final EObject ruleTypeIdentifier() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_idType_3_0=null;
        Token otherlv_4=null;
        Token lv_idType_6_0=null;
        Token otherlv_7=null;
        Enumerator lv_type_0_0 = null;

        Enumerator lv_type_2_0 = null;

        Enumerator lv_operator_5_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:1257:2: ( ( ( (lv_type_0_0= ruleEsterelValueType ) ) | (otherlv_1= 'combine' ( ( (lv_type_2_0= ruleEsterelValueType ) ) | ( (lv_idType_3_0= RULE_ID ) ) ) otherlv_4= 'with' ( (lv_operator_5_0= ruleEsterelCombineOperator ) ) ) | ( (lv_idType_6_0= RULE_ID ) ) | ( (otherlv_7= RULE_ID ) ) ) )
            // InternalSCEst.g:1258:2: ( ( (lv_type_0_0= ruleEsterelValueType ) ) | (otherlv_1= 'combine' ( ( (lv_type_2_0= ruleEsterelValueType ) ) | ( (lv_idType_3_0= RULE_ID ) ) ) otherlv_4= 'with' ( (lv_operator_5_0= ruleEsterelCombineOperator ) ) ) | ( (lv_idType_6_0= RULE_ID ) ) | ( (otherlv_7= RULE_ID ) ) )
            {
            // InternalSCEst.g:1258:2: ( ( (lv_type_0_0= ruleEsterelValueType ) ) | (otherlv_1= 'combine' ( ( (lv_type_2_0= ruleEsterelValueType ) ) | ( (lv_idType_3_0= RULE_ID ) ) ) otherlv_4= 'with' ( (lv_operator_5_0= ruleEsterelCombineOperator ) ) ) | ( (lv_idType_6_0= RULE_ID ) ) | ( (otherlv_7= RULE_ID ) ) )
            int alt20=4;
            switch ( input.LA(1) ) {
            case 131:
            case 132:
            case 133:
            case 134:
            case 135:
            case 136:
            case 137:
            case 138:
                {
                alt20=1;
                }
                break;
            case 27:
                {
                alt20=2;
                }
                break;
            case RULE_ID:
                {
                int LA20_3 = input.LA(2);

                if ( (synpred51_InternalSCEst()) ) {
                    alt20=3;
                }
                else if ( (true) ) {
                    alt20=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 20, 3, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }

            switch (alt20) {
                case 1 :
                    // InternalSCEst.g:1259:3: ( (lv_type_0_0= ruleEsterelValueType ) )
                    {
                    // InternalSCEst.g:1259:3: ( (lv_type_0_0= ruleEsterelValueType ) )
                    // InternalSCEst.g:1260:4: (lv_type_0_0= ruleEsterelValueType )
                    {
                    // InternalSCEst.g:1260:4: (lv_type_0_0= ruleEsterelValueType )
                    // InternalSCEst.g:1261:5: lv_type_0_0= ruleEsterelValueType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTypeIdentifierAccess().getTypeEsterelValueTypeEnumRuleCall_0_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_type_0_0=ruleEsterelValueType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTypeIdentifierRule());
                      					}
                      					set(
                      						current,
                      						"type",
                      						lv_type_0_0,
                      						"de.cau.cs.kieler.esterel.Esterel.EsterelValueType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCEst.g:1279:3: (otherlv_1= 'combine' ( ( (lv_type_2_0= ruleEsterelValueType ) ) | ( (lv_idType_3_0= RULE_ID ) ) ) otherlv_4= 'with' ( (lv_operator_5_0= ruleEsterelCombineOperator ) ) )
                    {
                    // InternalSCEst.g:1279:3: (otherlv_1= 'combine' ( ( (lv_type_2_0= ruleEsterelValueType ) ) | ( (lv_idType_3_0= RULE_ID ) ) ) otherlv_4= 'with' ( (lv_operator_5_0= ruleEsterelCombineOperator ) ) )
                    // InternalSCEst.g:1280:4: otherlv_1= 'combine' ( ( (lv_type_2_0= ruleEsterelValueType ) ) | ( (lv_idType_3_0= RULE_ID ) ) ) otherlv_4= 'with' ( (lv_operator_5_0= ruleEsterelCombineOperator ) )
                    {
                    otherlv_1=(Token)match(input,27,FollowSets000.FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getTypeIdentifierAccess().getCombineKeyword_1_0());
                      			
                    }
                    // InternalSCEst.g:1284:4: ( ( (lv_type_2_0= ruleEsterelValueType ) ) | ( (lv_idType_3_0= RULE_ID ) ) )
                    int alt19=2;
                    int LA19_0 = input.LA(1);

                    if ( ((LA19_0>=131 && LA19_0<=138)) ) {
                        alt19=1;
                    }
                    else if ( (LA19_0==RULE_ID) ) {
                        alt19=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 19, 0, input);

                        throw nvae;
                    }
                    switch (alt19) {
                        case 1 :
                            // InternalSCEst.g:1285:5: ( (lv_type_2_0= ruleEsterelValueType ) )
                            {
                            // InternalSCEst.g:1285:5: ( (lv_type_2_0= ruleEsterelValueType ) )
                            // InternalSCEst.g:1286:6: (lv_type_2_0= ruleEsterelValueType )
                            {
                            // InternalSCEst.g:1286:6: (lv_type_2_0= ruleEsterelValueType )
                            // InternalSCEst.g:1287:7: lv_type_2_0= ruleEsterelValueType
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getTypeIdentifierAccess().getTypeEsterelValueTypeEnumRuleCall_1_1_0_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_23);
                            lv_type_2_0=ruleEsterelValueType();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getTypeIdentifierRule());
                              							}
                              							set(
                              								current,
                              								"type",
                              								lv_type_2_0,
                              								"de.cau.cs.kieler.esterel.Esterel.EsterelValueType");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalSCEst.g:1305:5: ( (lv_idType_3_0= RULE_ID ) )
                            {
                            // InternalSCEst.g:1305:5: ( (lv_idType_3_0= RULE_ID ) )
                            // InternalSCEst.g:1306:6: (lv_idType_3_0= RULE_ID )
                            {
                            // InternalSCEst.g:1306:6: (lv_idType_3_0= RULE_ID )
                            // InternalSCEst.g:1307:7: lv_idType_3_0= RULE_ID
                            {
                            lv_idType_3_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_23); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_idType_3_0, grammarAccess.getTypeIdentifierAccess().getIdTypeIDTerminalRuleCall_1_1_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getTypeIdentifierRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"idType",
                              								lv_idType_3_0,
                              								"de.cau.cs.kieler.annotations.Annotations.ID");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    otherlv_4=(Token)match(input,28,FollowSets000.FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getTypeIdentifierAccess().getWithKeyword_1_2());
                      			
                    }
                    // InternalSCEst.g:1328:4: ( (lv_operator_5_0= ruleEsterelCombineOperator ) )
                    // InternalSCEst.g:1329:5: (lv_operator_5_0= ruleEsterelCombineOperator )
                    {
                    // InternalSCEst.g:1329:5: (lv_operator_5_0= ruleEsterelCombineOperator )
                    // InternalSCEst.g:1330:6: lv_operator_5_0= ruleEsterelCombineOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeIdentifierAccess().getOperatorEsterelCombineOperatorEnumRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_operator_5_0=ruleEsterelCombineOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeIdentifierRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_5_0,
                      							"de.cau.cs.kieler.esterel.Esterel.EsterelCombineOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSCEst.g:1349:3: ( (lv_idType_6_0= RULE_ID ) )
                    {
                    // InternalSCEst.g:1349:3: ( (lv_idType_6_0= RULE_ID ) )
                    // InternalSCEst.g:1350:4: (lv_idType_6_0= RULE_ID )
                    {
                    // InternalSCEst.g:1350:4: (lv_idType_6_0= RULE_ID )
                    // InternalSCEst.g:1351:5: lv_idType_6_0= RULE_ID
                    {
                    lv_idType_6_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_idType_6_0, grammarAccess.getTypeIdentifierAccess().getIdTypeIDTerminalRuleCall_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getTypeIdentifierRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"idType",
                      						lv_idType_6_0,
                      						"de.cau.cs.kieler.annotations.Annotations.ID");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalSCEst.g:1368:3: ( (otherlv_7= RULE_ID ) )
                    {
                    // InternalSCEst.g:1368:3: ( (otherlv_7= RULE_ID ) )
                    // InternalSCEst.g:1369:4: (otherlv_7= RULE_ID )
                    {
                    // InternalSCEst.g:1369:4: (otherlv_7= RULE_ID )
                    // InternalSCEst.g:1370:5: otherlv_7= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getTypeIdentifierRule());
                      					}
                      				
                    }
                    otherlv_7=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getTypeIdentifierAccess().getEsterelTypeTypeDefinitionCrossReference_3_0());
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeIdentifier"


    // $ANTLR start "entryRuleTypeDeclaration"
    // InternalSCEst.g:1388:1: entryRuleTypeDeclaration returns [EObject current=null] : iv_ruleTypeDeclaration= ruleTypeDeclaration EOF ;
    public final EObject entryRuleTypeDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeDeclaration = null;


        try {
            // InternalSCEst.g:1388:56: (iv_ruleTypeDeclaration= ruleTypeDeclaration EOF )
            // InternalSCEst.g:1389:2: iv_ruleTypeDeclaration= ruleTypeDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypeDeclaration=ruleTypeDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeDeclaration"


    // $ANTLR start "ruleTypeDeclaration"
    // InternalSCEst.g:1395:1: ruleTypeDeclaration returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'type' ( (lv_valuedObjects_2_0= ruleTypeDefinition ) ) (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleTypeDefinition ) ) )* otherlv_5= ';' ) ;
    public final EObject ruleTypeDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_valuedObjects_2_0 = null;

        EObject lv_valuedObjects_4_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:1401:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'type' ( (lv_valuedObjects_2_0= ruleTypeDefinition ) ) (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleTypeDefinition ) ) )* otherlv_5= ';' ) )
            // InternalSCEst.g:1402:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'type' ( (lv_valuedObjects_2_0= ruleTypeDefinition ) ) (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleTypeDefinition ) ) )* otherlv_5= ';' )
            {
            // InternalSCEst.g:1402:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'type' ( (lv_valuedObjects_2_0= ruleTypeDefinition ) ) (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleTypeDefinition ) ) )* otherlv_5= ';' )
            // InternalSCEst.g:1403:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'type' ( (lv_valuedObjects_2_0= ruleTypeDefinition ) ) (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleTypeDefinition ) ) )* otherlv_5= ';'
            {
            // InternalSCEst.g:1403:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop21:
            do {
                int alt21=2;
                int LA21_0 = input.LA(1);

                if ( (LA21_0==RULE_COMMENT_ANNOTATION||LA21_0==128) ) {
                    alt21=1;
                }


                switch (alt21) {
            	case 1 :
            	    // InternalSCEst.g:1404:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:1404:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCEst.g:1405:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getTypeDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_25);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getTypeDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop21;
                }
            } while (true);

            otherlv_1=(Token)match(input,29,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getTypeDeclarationAccess().getTypeKeyword_1());
              		
            }
            // InternalSCEst.g:1426:3: ( (lv_valuedObjects_2_0= ruleTypeDefinition ) )
            // InternalSCEst.g:1427:4: (lv_valuedObjects_2_0= ruleTypeDefinition )
            {
            // InternalSCEst.g:1427:4: (lv_valuedObjects_2_0= ruleTypeDefinition )
            // InternalSCEst.g:1428:5: lv_valuedObjects_2_0= ruleTypeDefinition
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeDeclarationAccess().getValuedObjectsTypeDefinitionParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_26);
            lv_valuedObjects_2_0=ruleTypeDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeDeclarationRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_2_0,
              						"de.cau.cs.kieler.esterel.Esterel.TypeDefinition");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCEst.g:1445:3: (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleTypeDefinition ) ) )*
            loop22:
            do {
                int alt22=2;
                int LA22_0 = input.LA(1);

                if ( (LA22_0==30) ) {
                    alt22=1;
                }


                switch (alt22) {
            	case 1 :
            	    // InternalSCEst.g:1446:4: otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleTypeDefinition ) )
            	    {
            	    otherlv_3=(Token)match(input,30,FollowSets000.FOLLOW_6); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getTypeDeclarationAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalSCEst.g:1450:4: ( (lv_valuedObjects_4_0= ruleTypeDefinition ) )
            	    // InternalSCEst.g:1451:5: (lv_valuedObjects_4_0= ruleTypeDefinition )
            	    {
            	    // InternalSCEst.g:1451:5: (lv_valuedObjects_4_0= ruleTypeDefinition )
            	    // InternalSCEst.g:1452:6: lv_valuedObjects_4_0= ruleTypeDefinition
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTypeDeclarationAccess().getValuedObjectsTypeDefinitionParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_26);
            	    lv_valuedObjects_4_0=ruleTypeDefinition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTypeDeclarationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"valuedObjects",
            	      							lv_valuedObjects_4_0,
            	      							"de.cau.cs.kieler.esterel.Esterel.TypeDefinition");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop22;
                }
            } while (true);

            otherlv_5=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getTypeDeclarationAccess().getSemicolonKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeDeclaration"


    // $ANTLR start "entryRuleTypeDefinition"
    // InternalSCEst.g:1478:1: entryRuleTypeDefinition returns [EObject current=null] : iv_ruleTypeDefinition= ruleTypeDefinition EOF ;
    public final EObject entryRuleTypeDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeDefinition = null;


        try {
            // InternalSCEst.g:1478:55: (iv_ruleTypeDefinition= ruleTypeDefinition EOF )
            // InternalSCEst.g:1479:2: iv_ruleTypeDefinition= ruleTypeDefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeDefinitionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypeDefinition=ruleTypeDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeDefinition; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeDefinition"


    // $ANTLR start "ruleTypeDefinition"
    // InternalSCEst.g:1485:1: ruleTypeDefinition returns [EObject current=null] : ( (lv_name_0_0= RULE_ID ) ) ;
    public final EObject ruleTypeDefinition() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;


        	enterRule();

        try {
            // InternalSCEst.g:1491:2: ( ( (lv_name_0_0= RULE_ID ) ) )
            // InternalSCEst.g:1492:2: ( (lv_name_0_0= RULE_ID ) )
            {
            // InternalSCEst.g:1492:2: ( (lv_name_0_0= RULE_ID ) )
            // InternalSCEst.g:1493:3: (lv_name_0_0= RULE_ID )
            {
            // InternalSCEst.g:1493:3: (lv_name_0_0= RULE_ID )
            // InternalSCEst.g:1494:4: lv_name_0_0= RULE_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_name_0_0, grammarAccess.getTypeDefinitionAccess().getNameIDTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getTypeDefinitionRule());
              				}
              				setWithLastConsumed(
              					current,
              					"name",
              					lv_name_0_0,
              					"de.cau.cs.kieler.annotations.Annotations.ID");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeDefinition"


    // $ANTLR start "entryRuleConstantDeclaration"
    // InternalSCEst.g:1513:1: entryRuleConstantDeclaration returns [EObject current=null] : iv_ruleConstantDeclaration= ruleConstantDeclaration EOF ;
    public final EObject entryRuleConstantDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConstantDeclaration = null;


        try {
            // InternalSCEst.g:1513:60: (iv_ruleConstantDeclaration= ruleConstantDeclaration EOF )
            // InternalSCEst.g:1514:2: iv_ruleConstantDeclaration= ruleConstantDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConstantDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleConstantDeclaration=ruleConstantDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConstantDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConstantDeclaration"


    // $ANTLR start "ruleConstantDeclaration"
    // InternalSCEst.g:1520:1: ruleConstantDeclaration returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'constant' ( (lv_valuedObjects_2_0= ruleConstant ) ) (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleConstant ) ) )* otherlv_5= ';' ) ;
    public final EObject ruleConstantDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_valuedObjects_2_0 = null;

        EObject lv_valuedObjects_4_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:1526:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'constant' ( (lv_valuedObjects_2_0= ruleConstant ) ) (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleConstant ) ) )* otherlv_5= ';' ) )
            // InternalSCEst.g:1527:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'constant' ( (lv_valuedObjects_2_0= ruleConstant ) ) (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleConstant ) ) )* otherlv_5= ';' )
            {
            // InternalSCEst.g:1527:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'constant' ( (lv_valuedObjects_2_0= ruleConstant ) ) (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleConstant ) ) )* otherlv_5= ';' )
            // InternalSCEst.g:1528:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'constant' ( (lv_valuedObjects_2_0= ruleConstant ) ) (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleConstant ) ) )* otherlv_5= ';'
            {
            // InternalSCEst.g:1528:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop23:
            do {
                int alt23=2;
                int LA23_0 = input.LA(1);

                if ( (LA23_0==RULE_COMMENT_ANNOTATION||LA23_0==128) ) {
                    alt23=1;
                }


                switch (alt23) {
            	case 1 :
            	    // InternalSCEst.g:1529:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:1529:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCEst.g:1530:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getConstantDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_27);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getConstantDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop23;
                }
            } while (true);

            otherlv_1=(Token)match(input,31,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getConstantDeclarationAccess().getConstantKeyword_1());
              		
            }
            // InternalSCEst.g:1551:3: ( (lv_valuedObjects_2_0= ruleConstant ) )
            // InternalSCEst.g:1552:4: (lv_valuedObjects_2_0= ruleConstant )
            {
            // InternalSCEst.g:1552:4: (lv_valuedObjects_2_0= ruleConstant )
            // InternalSCEst.g:1553:5: lv_valuedObjects_2_0= ruleConstant
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConstantDeclarationAccess().getValuedObjectsConstantParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_26);
            lv_valuedObjects_2_0=ruleConstant();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConstantDeclarationRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_2_0,
              						"de.cau.cs.kieler.esterel.Esterel.Constant");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCEst.g:1570:3: (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleConstant ) ) )*
            loop24:
            do {
                int alt24=2;
                int LA24_0 = input.LA(1);

                if ( (LA24_0==30) ) {
                    alt24=1;
                }


                switch (alt24) {
            	case 1 :
            	    // InternalSCEst.g:1571:4: otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleConstant ) )
            	    {
            	    otherlv_3=(Token)match(input,30,FollowSets000.FOLLOW_6); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getConstantDeclarationAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalSCEst.g:1575:4: ( (lv_valuedObjects_4_0= ruleConstant ) )
            	    // InternalSCEst.g:1576:5: (lv_valuedObjects_4_0= ruleConstant )
            	    {
            	    // InternalSCEst.g:1576:5: (lv_valuedObjects_4_0= ruleConstant )
            	    // InternalSCEst.g:1577:6: lv_valuedObjects_4_0= ruleConstant
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getConstantDeclarationAccess().getValuedObjectsConstantParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_26);
            	    lv_valuedObjects_4_0=ruleConstant();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getConstantDeclarationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"valuedObjects",
            	      							lv_valuedObjects_4_0,
            	      							"de.cau.cs.kieler.esterel.Esterel.Constant");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop24;
                }
            } while (true);

            otherlv_5=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getConstantDeclarationAccess().getSemicolonKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConstantDeclaration"


    // $ANTLR start "entryRuleConstant"
    // InternalSCEst.g:1603:1: entryRuleConstant returns [EObject current=null] : iv_ruleConstant= ruleConstant EOF ;
    public final EObject entryRuleConstant() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConstant = null;


        try {
            // InternalSCEst.g:1603:49: (iv_ruleConstant= ruleConstant EOF )
            // InternalSCEst.g:1604:2: iv_ruleConstant= ruleConstant EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConstantRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleConstant=ruleConstant();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConstant; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConstant"


    // $ANTLR start "ruleConstant"
    // InternalSCEst.g:1610:1: ruleConstant returns [EObject current=null] : ( ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= '=' ( (lv_initialValue_2_0= ruleExpression ) ) )? otherlv_3= ':' ( (lv_type_4_0= ruleTypeIdentifier ) ) ) ;
    public final EObject ruleConstant() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_initialValue_2_0 = null;

        EObject lv_type_4_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:1616:2: ( ( ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= '=' ( (lv_initialValue_2_0= ruleExpression ) ) )? otherlv_3= ':' ( (lv_type_4_0= ruleTypeIdentifier ) ) ) )
            // InternalSCEst.g:1617:2: ( ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= '=' ( (lv_initialValue_2_0= ruleExpression ) ) )? otherlv_3= ':' ( (lv_type_4_0= ruleTypeIdentifier ) ) )
            {
            // InternalSCEst.g:1617:2: ( ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= '=' ( (lv_initialValue_2_0= ruleExpression ) ) )? otherlv_3= ':' ( (lv_type_4_0= ruleTypeIdentifier ) ) )
            // InternalSCEst.g:1618:3: ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= '=' ( (lv_initialValue_2_0= ruleExpression ) ) )? otherlv_3= ':' ( (lv_type_4_0= ruleTypeIdentifier ) )
            {
            // InternalSCEst.g:1618:3: ( (lv_name_0_0= RULE_ID ) )
            // InternalSCEst.g:1619:4: (lv_name_0_0= RULE_ID )
            {
            // InternalSCEst.g:1619:4: (lv_name_0_0= RULE_ID )
            // InternalSCEst.g:1620:5: lv_name_0_0= RULE_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_28); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getConstantAccess().getNameIDTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getConstantRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_0_0,
              						"de.cau.cs.kieler.annotations.Annotations.ID");
              				
            }

            }


            }

            // InternalSCEst.g:1636:3: (otherlv_1= '=' ( (lv_initialValue_2_0= ruleExpression ) ) )?
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==32) ) {
                alt25=1;
            }
            switch (alt25) {
                case 1 :
                    // InternalSCEst.g:1637:4: otherlv_1= '=' ( (lv_initialValue_2_0= ruleExpression ) )
                    {
                    otherlv_1=(Token)match(input,32,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getConstantAccess().getEqualsSignKeyword_1_0());
                      			
                    }
                    // InternalSCEst.g:1641:4: ( (lv_initialValue_2_0= ruleExpression ) )
                    // InternalSCEst.g:1642:5: (lv_initialValue_2_0= ruleExpression )
                    {
                    // InternalSCEst.g:1642:5: (lv_initialValue_2_0= ruleExpression )
                    // InternalSCEst.g:1643:6: lv_initialValue_2_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConstantAccess().getInitialValueExpressionParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_7);
                    lv_initialValue_2_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConstantRule());
                      						}
                      						set(
                      							current,
                      							"initialValue",
                      							lv_initialValue_2_0,
                      							"de.cau.cs.kieler.esterel.Esterel.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,18,FollowSets000.FOLLOW_29); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getConstantAccess().getColonKeyword_2());
              		
            }
            // InternalSCEst.g:1665:3: ( (lv_type_4_0= ruleTypeIdentifier ) )
            // InternalSCEst.g:1666:4: (lv_type_4_0= ruleTypeIdentifier )
            {
            // InternalSCEst.g:1666:4: (lv_type_4_0= ruleTypeIdentifier )
            // InternalSCEst.g:1667:5: lv_type_4_0= ruleTypeIdentifier
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConstantAccess().getTypeTypeIdentifierParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_type_4_0=ruleTypeIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConstantRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_4_0,
              						"de.cau.cs.kieler.esterel.Esterel.TypeIdentifier");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConstant"


    // $ANTLR start "entryRuleFunctionDeclaration"
    // InternalSCEst.g:1688:1: entryRuleFunctionDeclaration returns [EObject current=null] : iv_ruleFunctionDeclaration= ruleFunctionDeclaration EOF ;
    public final EObject entryRuleFunctionDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionDeclaration = null;


        try {
            // InternalSCEst.g:1688:60: (iv_ruleFunctionDeclaration= ruleFunctionDeclaration EOF )
            // InternalSCEst.g:1689:2: iv_ruleFunctionDeclaration= ruleFunctionDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFunctionDeclaration=ruleFunctionDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionDeclaration"


    // $ANTLR start "ruleFunctionDeclaration"
    // InternalSCEst.g:1695:1: ruleFunctionDeclaration returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'function' ( (lv_valuedObjects_2_0= ruleFunction ) ) (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleFunction ) ) )* otherlv_5= ';' ) ;
    public final EObject ruleFunctionDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_valuedObjects_2_0 = null;

        EObject lv_valuedObjects_4_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:1701:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'function' ( (lv_valuedObjects_2_0= ruleFunction ) ) (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleFunction ) ) )* otherlv_5= ';' ) )
            // InternalSCEst.g:1702:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'function' ( (lv_valuedObjects_2_0= ruleFunction ) ) (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleFunction ) ) )* otherlv_5= ';' )
            {
            // InternalSCEst.g:1702:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'function' ( (lv_valuedObjects_2_0= ruleFunction ) ) (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleFunction ) ) )* otherlv_5= ';' )
            // InternalSCEst.g:1703:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'function' ( (lv_valuedObjects_2_0= ruleFunction ) ) (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleFunction ) ) )* otherlv_5= ';'
            {
            // InternalSCEst.g:1703:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop26:
            do {
                int alt26=2;
                int LA26_0 = input.LA(1);

                if ( (LA26_0==RULE_COMMENT_ANNOTATION||LA26_0==128) ) {
                    alt26=1;
                }


                switch (alt26) {
            	case 1 :
            	    // InternalSCEst.g:1704:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:1704:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCEst.g:1705:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getFunctionDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_30);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getFunctionDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop26;
                }
            } while (true);

            otherlv_1=(Token)match(input,33,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getFunctionDeclarationAccess().getFunctionKeyword_1());
              		
            }
            // InternalSCEst.g:1726:3: ( (lv_valuedObjects_2_0= ruleFunction ) )
            // InternalSCEst.g:1727:4: (lv_valuedObjects_2_0= ruleFunction )
            {
            // InternalSCEst.g:1727:4: (lv_valuedObjects_2_0= ruleFunction )
            // InternalSCEst.g:1728:5: lv_valuedObjects_2_0= ruleFunction
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFunctionDeclarationAccess().getValuedObjectsFunctionParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_26);
            lv_valuedObjects_2_0=ruleFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFunctionDeclarationRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_2_0,
              						"de.cau.cs.kieler.esterel.Esterel.Function");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCEst.g:1745:3: (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleFunction ) ) )*
            loop27:
            do {
                int alt27=2;
                int LA27_0 = input.LA(1);

                if ( (LA27_0==30) ) {
                    alt27=1;
                }


                switch (alt27) {
            	case 1 :
            	    // InternalSCEst.g:1746:4: otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleFunction ) )
            	    {
            	    otherlv_3=(Token)match(input,30,FollowSets000.FOLLOW_6); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getFunctionDeclarationAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalSCEst.g:1750:4: ( (lv_valuedObjects_4_0= ruleFunction ) )
            	    // InternalSCEst.g:1751:5: (lv_valuedObjects_4_0= ruleFunction )
            	    {
            	    // InternalSCEst.g:1751:5: (lv_valuedObjects_4_0= ruleFunction )
            	    // InternalSCEst.g:1752:6: lv_valuedObjects_4_0= ruleFunction
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getFunctionDeclarationAccess().getValuedObjectsFunctionParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_26);
            	    lv_valuedObjects_4_0=ruleFunction();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getFunctionDeclarationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"valuedObjects",
            	      							lv_valuedObjects_4_0,
            	      							"de.cau.cs.kieler.esterel.Esterel.Function");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop27;
                }
            } while (true);

            otherlv_5=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getFunctionDeclarationAccess().getSemicolonKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionDeclaration"


    // $ANTLR start "entryRuleFunction"
    // InternalSCEst.g:1778:1: entryRuleFunction returns [EObject current=null] : iv_ruleFunction= ruleFunction EOF ;
    public final EObject entryRuleFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunction = null;


        try {
            // InternalSCEst.g:1778:49: (iv_ruleFunction= ruleFunction EOF )
            // InternalSCEst.g:1779:2: iv_ruleFunction= ruleFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFunction=ruleFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunction; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunction"


    // $ANTLR start "ruleFunction"
    // InternalSCEst.g:1785:1: ruleFunction returns [EObject current=null] : ( ( (lv_name_0_0= RULE_ID ) ) ( (otherlv_1= '(' ( ( (lv_parameterTypes_2_0= ruleTypeIdentifier ) ) (otherlv_3= ',' ( (lv_parameterTypes_4_0= ruleTypeIdentifier ) ) )* )? otherlv_5= ')' ) | otherlv_6= '()' ) otherlv_7= ':' ( (lv_returnType_8_0= ruleTypeIdentifier ) ) ) ;
    public final EObject ruleFunction() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        EObject lv_parameterTypes_2_0 = null;

        EObject lv_parameterTypes_4_0 = null;

        EObject lv_returnType_8_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:1791:2: ( ( ( (lv_name_0_0= RULE_ID ) ) ( (otherlv_1= '(' ( ( (lv_parameterTypes_2_0= ruleTypeIdentifier ) ) (otherlv_3= ',' ( (lv_parameterTypes_4_0= ruleTypeIdentifier ) ) )* )? otherlv_5= ')' ) | otherlv_6= '()' ) otherlv_7= ':' ( (lv_returnType_8_0= ruleTypeIdentifier ) ) ) )
            // InternalSCEst.g:1792:2: ( ( (lv_name_0_0= RULE_ID ) ) ( (otherlv_1= '(' ( ( (lv_parameterTypes_2_0= ruleTypeIdentifier ) ) (otherlv_3= ',' ( (lv_parameterTypes_4_0= ruleTypeIdentifier ) ) )* )? otherlv_5= ')' ) | otherlv_6= '()' ) otherlv_7= ':' ( (lv_returnType_8_0= ruleTypeIdentifier ) ) )
            {
            // InternalSCEst.g:1792:2: ( ( (lv_name_0_0= RULE_ID ) ) ( (otherlv_1= '(' ( ( (lv_parameterTypes_2_0= ruleTypeIdentifier ) ) (otherlv_3= ',' ( (lv_parameterTypes_4_0= ruleTypeIdentifier ) ) )* )? otherlv_5= ')' ) | otherlv_6= '()' ) otherlv_7= ':' ( (lv_returnType_8_0= ruleTypeIdentifier ) ) )
            // InternalSCEst.g:1793:3: ( (lv_name_0_0= RULE_ID ) ) ( (otherlv_1= '(' ( ( (lv_parameterTypes_2_0= ruleTypeIdentifier ) ) (otherlv_3= ',' ( (lv_parameterTypes_4_0= ruleTypeIdentifier ) ) )* )? otherlv_5= ')' ) | otherlv_6= '()' ) otherlv_7= ':' ( (lv_returnType_8_0= ruleTypeIdentifier ) )
            {
            // InternalSCEst.g:1793:3: ( (lv_name_0_0= RULE_ID ) )
            // InternalSCEst.g:1794:4: (lv_name_0_0= RULE_ID )
            {
            // InternalSCEst.g:1794:4: (lv_name_0_0= RULE_ID )
            // InternalSCEst.g:1795:5: lv_name_0_0= RULE_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getFunctionRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_0_0,
              						"de.cau.cs.kieler.annotations.Annotations.ID");
              				
            }

            }


            }

            // InternalSCEst.g:1811:3: ( (otherlv_1= '(' ( ( (lv_parameterTypes_2_0= ruleTypeIdentifier ) ) (otherlv_3= ',' ( (lv_parameterTypes_4_0= ruleTypeIdentifier ) ) )* )? otherlv_5= ')' ) | otherlv_6= '()' )
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==25) ) {
                alt30=1;
            }
            else if ( (LA30_0==34) ) {
                alt30=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 30, 0, input);

                throw nvae;
            }
            switch (alt30) {
                case 1 :
                    // InternalSCEst.g:1812:4: (otherlv_1= '(' ( ( (lv_parameterTypes_2_0= ruleTypeIdentifier ) ) (otherlv_3= ',' ( (lv_parameterTypes_4_0= ruleTypeIdentifier ) ) )* )? otherlv_5= ')' )
                    {
                    // InternalSCEst.g:1812:4: (otherlv_1= '(' ( ( (lv_parameterTypes_2_0= ruleTypeIdentifier ) ) (otherlv_3= ',' ( (lv_parameterTypes_4_0= ruleTypeIdentifier ) ) )* )? otherlv_5= ')' )
                    // InternalSCEst.g:1813:5: otherlv_1= '(' ( ( (lv_parameterTypes_2_0= ruleTypeIdentifier ) ) (otherlv_3= ',' ( (lv_parameterTypes_4_0= ruleTypeIdentifier ) ) )* )? otherlv_5= ')'
                    {
                    otherlv_1=(Token)match(input,25,FollowSets000.FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_1_0_0());
                      				
                    }
                    // InternalSCEst.g:1817:5: ( ( (lv_parameterTypes_2_0= ruleTypeIdentifier ) ) (otherlv_3= ',' ( (lv_parameterTypes_4_0= ruleTypeIdentifier ) ) )* )?
                    int alt29=2;
                    int LA29_0 = input.LA(1);

                    if ( (LA29_0==RULE_ID||LA29_0==27||(LA29_0>=131 && LA29_0<=138)) ) {
                        alt29=1;
                    }
                    switch (alt29) {
                        case 1 :
                            // InternalSCEst.g:1818:6: ( (lv_parameterTypes_2_0= ruleTypeIdentifier ) ) (otherlv_3= ',' ( (lv_parameterTypes_4_0= ruleTypeIdentifier ) ) )*
                            {
                            // InternalSCEst.g:1818:6: ( (lv_parameterTypes_2_0= ruleTypeIdentifier ) )
                            // InternalSCEst.g:1819:7: (lv_parameterTypes_2_0= ruleTypeIdentifier )
                            {
                            // InternalSCEst.g:1819:7: (lv_parameterTypes_2_0= ruleTypeIdentifier )
                            // InternalSCEst.g:1820:8: lv_parameterTypes_2_0= ruleTypeIdentifier
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getFunctionAccess().getParameterTypesTypeIdentifierParserRuleCall_1_0_1_0_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_33);
                            lv_parameterTypes_2_0=ruleTypeIdentifier();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getFunctionRule());
                              								}
                              								add(
                              									current,
                              									"parameterTypes",
                              									lv_parameterTypes_2_0,
                              									"de.cau.cs.kieler.esterel.Esterel.TypeIdentifier");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalSCEst.g:1837:6: (otherlv_3= ',' ( (lv_parameterTypes_4_0= ruleTypeIdentifier ) ) )*
                            loop28:
                            do {
                                int alt28=2;
                                int LA28_0 = input.LA(1);

                                if ( (LA28_0==30) ) {
                                    alt28=1;
                                }


                                switch (alt28) {
                            	case 1 :
                            	    // InternalSCEst.g:1838:7: otherlv_3= ',' ( (lv_parameterTypes_4_0= ruleTypeIdentifier ) )
                            	    {
                            	    otherlv_3=(Token)match(input,30,FollowSets000.FOLLOW_29); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_3, grammarAccess.getFunctionAccess().getCommaKeyword_1_0_1_1_0());
                            	      						
                            	    }
                            	    // InternalSCEst.g:1842:7: ( (lv_parameterTypes_4_0= ruleTypeIdentifier ) )
                            	    // InternalSCEst.g:1843:8: (lv_parameterTypes_4_0= ruleTypeIdentifier )
                            	    {
                            	    // InternalSCEst.g:1843:8: (lv_parameterTypes_4_0= ruleTypeIdentifier )
                            	    // InternalSCEst.g:1844:9: lv_parameterTypes_4_0= ruleTypeIdentifier
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getFunctionAccess().getParameterTypesTypeIdentifierParserRuleCall_1_0_1_1_1_0());
                            	      								
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_33);
                            	    lv_parameterTypes_4_0=ruleTypeIdentifier();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getFunctionRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"parameterTypes",
                            	      										lv_parameterTypes_4_0,
                            	      										"de.cau.cs.kieler.esterel.Esterel.TypeIdentifier");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop28;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_5=(Token)match(input,26,FollowSets000.FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getFunctionAccess().getRightParenthesisKeyword_1_0_2());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCEst.g:1869:4: otherlv_6= '()'
                    {
                    otherlv_6=(Token)match(input,34,FollowSets000.FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getFunctionAccess().getLeftParenthesisRightParenthesisKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            otherlv_7=(Token)match(input,18,FollowSets000.FOLLOW_29); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getFunctionAccess().getColonKeyword_2());
              		
            }
            // InternalSCEst.g:1878:3: ( (lv_returnType_8_0= ruleTypeIdentifier ) )
            // InternalSCEst.g:1879:4: (lv_returnType_8_0= ruleTypeIdentifier )
            {
            // InternalSCEst.g:1879:4: (lv_returnType_8_0= ruleTypeIdentifier )
            // InternalSCEst.g:1880:5: lv_returnType_8_0= ruleTypeIdentifier
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFunctionAccess().getReturnTypeTypeIdentifierParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_returnType_8_0=ruleTypeIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFunctionRule());
              					}
              					set(
              						current,
              						"returnType",
              						lv_returnType_8_0,
              						"de.cau.cs.kieler.esterel.Esterel.TypeIdentifier");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunction"


    // $ANTLR start "entryRuleProcedureDeclaration"
    // InternalSCEst.g:1901:1: entryRuleProcedureDeclaration returns [EObject current=null] : iv_ruleProcedureDeclaration= ruleProcedureDeclaration EOF ;
    public final EObject entryRuleProcedureDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleProcedureDeclaration = null;


        try {
            // InternalSCEst.g:1901:61: (iv_ruleProcedureDeclaration= ruleProcedureDeclaration EOF )
            // InternalSCEst.g:1902:2: iv_ruleProcedureDeclaration= ruleProcedureDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getProcedureDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleProcedureDeclaration=ruleProcedureDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleProcedureDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleProcedureDeclaration"


    // $ANTLR start "ruleProcedureDeclaration"
    // InternalSCEst.g:1908:1: ruleProcedureDeclaration returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'procedure' ( (lv_valuedObjects_2_0= ruleProcedure ) ) (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleProcedure ) ) )* otherlv_5= ';' ) ;
    public final EObject ruleProcedureDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_valuedObjects_2_0 = null;

        EObject lv_valuedObjects_4_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:1914:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'procedure' ( (lv_valuedObjects_2_0= ruleProcedure ) ) (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleProcedure ) ) )* otherlv_5= ';' ) )
            // InternalSCEst.g:1915:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'procedure' ( (lv_valuedObjects_2_0= ruleProcedure ) ) (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleProcedure ) ) )* otherlv_5= ';' )
            {
            // InternalSCEst.g:1915:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'procedure' ( (lv_valuedObjects_2_0= ruleProcedure ) ) (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleProcedure ) ) )* otherlv_5= ';' )
            // InternalSCEst.g:1916:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'procedure' ( (lv_valuedObjects_2_0= ruleProcedure ) ) (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleProcedure ) ) )* otherlv_5= ';'
            {
            // InternalSCEst.g:1916:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop31:
            do {
                int alt31=2;
                int LA31_0 = input.LA(1);

                if ( (LA31_0==RULE_COMMENT_ANNOTATION||LA31_0==128) ) {
                    alt31=1;
                }


                switch (alt31) {
            	case 1 :
            	    // InternalSCEst.g:1917:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:1917:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCEst.g:1918:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getProcedureDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_34);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getProcedureDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop31;
                }
            } while (true);

            otherlv_1=(Token)match(input,35,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getProcedureDeclarationAccess().getProcedureKeyword_1());
              		
            }
            // InternalSCEst.g:1939:3: ( (lv_valuedObjects_2_0= ruleProcedure ) )
            // InternalSCEst.g:1940:4: (lv_valuedObjects_2_0= ruleProcedure )
            {
            // InternalSCEst.g:1940:4: (lv_valuedObjects_2_0= ruleProcedure )
            // InternalSCEst.g:1941:5: lv_valuedObjects_2_0= ruleProcedure
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getProcedureDeclarationAccess().getValuedObjectsProcedureParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_26);
            lv_valuedObjects_2_0=ruleProcedure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getProcedureDeclarationRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_2_0,
              						"de.cau.cs.kieler.esterel.Esterel.Procedure");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCEst.g:1958:3: (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleProcedure ) ) )*
            loop32:
            do {
                int alt32=2;
                int LA32_0 = input.LA(1);

                if ( (LA32_0==30) ) {
                    alt32=1;
                }


                switch (alt32) {
            	case 1 :
            	    // InternalSCEst.g:1959:4: otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleProcedure ) )
            	    {
            	    otherlv_3=(Token)match(input,30,FollowSets000.FOLLOW_6); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getProcedureDeclarationAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalSCEst.g:1963:4: ( (lv_valuedObjects_4_0= ruleProcedure ) )
            	    // InternalSCEst.g:1964:5: (lv_valuedObjects_4_0= ruleProcedure )
            	    {
            	    // InternalSCEst.g:1964:5: (lv_valuedObjects_4_0= ruleProcedure )
            	    // InternalSCEst.g:1965:6: lv_valuedObjects_4_0= ruleProcedure
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getProcedureDeclarationAccess().getValuedObjectsProcedureParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_26);
            	    lv_valuedObjects_4_0=ruleProcedure();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getProcedureDeclarationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"valuedObjects",
            	      							lv_valuedObjects_4_0,
            	      							"de.cau.cs.kieler.esterel.Esterel.Procedure");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop32;
                }
            } while (true);

            otherlv_5=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getProcedureDeclarationAccess().getSemicolonKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleProcedureDeclaration"


    // $ANTLR start "entryRuleProcedure"
    // InternalSCEst.g:1991:1: entryRuleProcedure returns [EObject current=null] : iv_ruleProcedure= ruleProcedure EOF ;
    public final EObject entryRuleProcedure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleProcedure = null;


        try {
            // InternalSCEst.g:1991:50: (iv_ruleProcedure= ruleProcedure EOF )
            // InternalSCEst.g:1992:2: iv_ruleProcedure= ruleProcedure EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getProcedureRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleProcedure=ruleProcedure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleProcedure; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleProcedure"


    // $ANTLR start "ruleProcedure"
    // InternalSCEst.g:1998:1: ruleProcedure returns [EObject current=null] : ( ( (lv_name_0_0= RULE_ID ) ) ( (otherlv_1= '(' ( ( (lv_referenceArguments_2_0= ruleTypeIdentifier ) ) (otherlv_3= ',' ( (lv_referenceArguments_4_0= ruleTypeIdentifier ) ) )* )? otherlv_5= ')' ) | otherlv_6= '()' ) ( (otherlv_7= '(' ( ( (lv_valueArguments_8_0= ruleTypeIdentifier ) ) (otherlv_9= ',' ( (lv_valueArguments_10_0= ruleTypeIdentifier ) ) )* )? otherlv_11= ')' ) | otherlv_12= '()' ) ) ;
    public final EObject ruleProcedure() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        EObject lv_referenceArguments_2_0 = null;

        EObject lv_referenceArguments_4_0 = null;

        EObject lv_valueArguments_8_0 = null;

        EObject lv_valueArguments_10_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:2004:2: ( ( ( (lv_name_0_0= RULE_ID ) ) ( (otherlv_1= '(' ( ( (lv_referenceArguments_2_0= ruleTypeIdentifier ) ) (otherlv_3= ',' ( (lv_referenceArguments_4_0= ruleTypeIdentifier ) ) )* )? otherlv_5= ')' ) | otherlv_6= '()' ) ( (otherlv_7= '(' ( ( (lv_valueArguments_8_0= ruleTypeIdentifier ) ) (otherlv_9= ',' ( (lv_valueArguments_10_0= ruleTypeIdentifier ) ) )* )? otherlv_11= ')' ) | otherlv_12= '()' ) ) )
            // InternalSCEst.g:2005:2: ( ( (lv_name_0_0= RULE_ID ) ) ( (otherlv_1= '(' ( ( (lv_referenceArguments_2_0= ruleTypeIdentifier ) ) (otherlv_3= ',' ( (lv_referenceArguments_4_0= ruleTypeIdentifier ) ) )* )? otherlv_5= ')' ) | otherlv_6= '()' ) ( (otherlv_7= '(' ( ( (lv_valueArguments_8_0= ruleTypeIdentifier ) ) (otherlv_9= ',' ( (lv_valueArguments_10_0= ruleTypeIdentifier ) ) )* )? otherlv_11= ')' ) | otherlv_12= '()' ) )
            {
            // InternalSCEst.g:2005:2: ( ( (lv_name_0_0= RULE_ID ) ) ( (otherlv_1= '(' ( ( (lv_referenceArguments_2_0= ruleTypeIdentifier ) ) (otherlv_3= ',' ( (lv_referenceArguments_4_0= ruleTypeIdentifier ) ) )* )? otherlv_5= ')' ) | otherlv_6= '()' ) ( (otherlv_7= '(' ( ( (lv_valueArguments_8_0= ruleTypeIdentifier ) ) (otherlv_9= ',' ( (lv_valueArguments_10_0= ruleTypeIdentifier ) ) )* )? otherlv_11= ')' ) | otherlv_12= '()' ) )
            // InternalSCEst.g:2006:3: ( (lv_name_0_0= RULE_ID ) ) ( (otherlv_1= '(' ( ( (lv_referenceArguments_2_0= ruleTypeIdentifier ) ) (otherlv_3= ',' ( (lv_referenceArguments_4_0= ruleTypeIdentifier ) ) )* )? otherlv_5= ')' ) | otherlv_6= '()' ) ( (otherlv_7= '(' ( ( (lv_valueArguments_8_0= ruleTypeIdentifier ) ) (otherlv_9= ',' ( (lv_valueArguments_10_0= ruleTypeIdentifier ) ) )* )? otherlv_11= ')' ) | otherlv_12= '()' )
            {
            // InternalSCEst.g:2006:3: ( (lv_name_0_0= RULE_ID ) )
            // InternalSCEst.g:2007:4: (lv_name_0_0= RULE_ID )
            {
            // InternalSCEst.g:2007:4: (lv_name_0_0= RULE_ID )
            // InternalSCEst.g:2008:5: lv_name_0_0= RULE_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getProcedureAccess().getNameIDTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getProcedureRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_0_0,
              						"de.cau.cs.kieler.annotations.Annotations.ID");
              				
            }

            }


            }

            // InternalSCEst.g:2024:3: ( (otherlv_1= '(' ( ( (lv_referenceArguments_2_0= ruleTypeIdentifier ) ) (otherlv_3= ',' ( (lv_referenceArguments_4_0= ruleTypeIdentifier ) ) )* )? otherlv_5= ')' ) | otherlv_6= '()' )
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==25) ) {
                alt35=1;
            }
            else if ( (LA35_0==34) ) {
                alt35=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 35, 0, input);

                throw nvae;
            }
            switch (alt35) {
                case 1 :
                    // InternalSCEst.g:2025:4: (otherlv_1= '(' ( ( (lv_referenceArguments_2_0= ruleTypeIdentifier ) ) (otherlv_3= ',' ( (lv_referenceArguments_4_0= ruleTypeIdentifier ) ) )* )? otherlv_5= ')' )
                    {
                    // InternalSCEst.g:2025:4: (otherlv_1= '(' ( ( (lv_referenceArguments_2_0= ruleTypeIdentifier ) ) (otherlv_3= ',' ( (lv_referenceArguments_4_0= ruleTypeIdentifier ) ) )* )? otherlv_5= ')' )
                    // InternalSCEst.g:2026:5: otherlv_1= '(' ( ( (lv_referenceArguments_2_0= ruleTypeIdentifier ) ) (otherlv_3= ',' ( (lv_referenceArguments_4_0= ruleTypeIdentifier ) ) )* )? otherlv_5= ')'
                    {
                    otherlv_1=(Token)match(input,25,FollowSets000.FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getProcedureAccess().getLeftParenthesisKeyword_1_0_0());
                      				
                    }
                    // InternalSCEst.g:2030:5: ( ( (lv_referenceArguments_2_0= ruleTypeIdentifier ) ) (otherlv_3= ',' ( (lv_referenceArguments_4_0= ruleTypeIdentifier ) ) )* )?
                    int alt34=2;
                    int LA34_0 = input.LA(1);

                    if ( (LA34_0==RULE_ID||LA34_0==27||(LA34_0>=131 && LA34_0<=138)) ) {
                        alt34=1;
                    }
                    switch (alt34) {
                        case 1 :
                            // InternalSCEst.g:2031:6: ( (lv_referenceArguments_2_0= ruleTypeIdentifier ) ) (otherlv_3= ',' ( (lv_referenceArguments_4_0= ruleTypeIdentifier ) ) )*
                            {
                            // InternalSCEst.g:2031:6: ( (lv_referenceArguments_2_0= ruleTypeIdentifier ) )
                            // InternalSCEst.g:2032:7: (lv_referenceArguments_2_0= ruleTypeIdentifier )
                            {
                            // InternalSCEst.g:2032:7: (lv_referenceArguments_2_0= ruleTypeIdentifier )
                            // InternalSCEst.g:2033:8: lv_referenceArguments_2_0= ruleTypeIdentifier
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getProcedureAccess().getReferenceArgumentsTypeIdentifierParserRuleCall_1_0_1_0_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_33);
                            lv_referenceArguments_2_0=ruleTypeIdentifier();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getProcedureRule());
                              								}
                              								add(
                              									current,
                              									"referenceArguments",
                              									lv_referenceArguments_2_0,
                              									"de.cau.cs.kieler.esterel.Esterel.TypeIdentifier");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalSCEst.g:2050:6: (otherlv_3= ',' ( (lv_referenceArguments_4_0= ruleTypeIdentifier ) ) )*
                            loop33:
                            do {
                                int alt33=2;
                                int LA33_0 = input.LA(1);

                                if ( (LA33_0==30) ) {
                                    alt33=1;
                                }


                                switch (alt33) {
                            	case 1 :
                            	    // InternalSCEst.g:2051:7: otherlv_3= ',' ( (lv_referenceArguments_4_0= ruleTypeIdentifier ) )
                            	    {
                            	    otherlv_3=(Token)match(input,30,FollowSets000.FOLLOW_29); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_3, grammarAccess.getProcedureAccess().getCommaKeyword_1_0_1_1_0());
                            	      						
                            	    }
                            	    // InternalSCEst.g:2055:7: ( (lv_referenceArguments_4_0= ruleTypeIdentifier ) )
                            	    // InternalSCEst.g:2056:8: (lv_referenceArguments_4_0= ruleTypeIdentifier )
                            	    {
                            	    // InternalSCEst.g:2056:8: (lv_referenceArguments_4_0= ruleTypeIdentifier )
                            	    // InternalSCEst.g:2057:9: lv_referenceArguments_4_0= ruleTypeIdentifier
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getProcedureAccess().getReferenceArgumentsTypeIdentifierParserRuleCall_1_0_1_1_1_0());
                            	      								
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_33);
                            	    lv_referenceArguments_4_0=ruleTypeIdentifier();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getProcedureRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"referenceArguments",
                            	      										lv_referenceArguments_4_0,
                            	      										"de.cau.cs.kieler.esterel.Esterel.TypeIdentifier");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop33;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_5=(Token)match(input,26,FollowSets000.FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getProcedureAccess().getRightParenthesisKeyword_1_0_2());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCEst.g:2082:4: otherlv_6= '()'
                    {
                    otherlv_6=(Token)match(input,34,FollowSets000.FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getProcedureAccess().getLeftParenthesisRightParenthesisKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalSCEst.g:2087:3: ( (otherlv_7= '(' ( ( (lv_valueArguments_8_0= ruleTypeIdentifier ) ) (otherlv_9= ',' ( (lv_valueArguments_10_0= ruleTypeIdentifier ) ) )* )? otherlv_11= ')' ) | otherlv_12= '()' )
            int alt38=2;
            int LA38_0 = input.LA(1);

            if ( (LA38_0==25) ) {
                alt38=1;
            }
            else if ( (LA38_0==34) ) {
                alt38=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 38, 0, input);

                throw nvae;
            }
            switch (alt38) {
                case 1 :
                    // InternalSCEst.g:2088:4: (otherlv_7= '(' ( ( (lv_valueArguments_8_0= ruleTypeIdentifier ) ) (otherlv_9= ',' ( (lv_valueArguments_10_0= ruleTypeIdentifier ) ) )* )? otherlv_11= ')' )
                    {
                    // InternalSCEst.g:2088:4: (otherlv_7= '(' ( ( (lv_valueArguments_8_0= ruleTypeIdentifier ) ) (otherlv_9= ',' ( (lv_valueArguments_10_0= ruleTypeIdentifier ) ) )* )? otherlv_11= ')' )
                    // InternalSCEst.g:2089:5: otherlv_7= '(' ( ( (lv_valueArguments_8_0= ruleTypeIdentifier ) ) (otherlv_9= ',' ( (lv_valueArguments_10_0= ruleTypeIdentifier ) ) )* )? otherlv_11= ')'
                    {
                    otherlv_7=(Token)match(input,25,FollowSets000.FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getProcedureAccess().getLeftParenthesisKeyword_2_0_0());
                      				
                    }
                    // InternalSCEst.g:2093:5: ( ( (lv_valueArguments_8_0= ruleTypeIdentifier ) ) (otherlv_9= ',' ( (lv_valueArguments_10_0= ruleTypeIdentifier ) ) )* )?
                    int alt37=2;
                    int LA37_0 = input.LA(1);

                    if ( (LA37_0==RULE_ID||LA37_0==27||(LA37_0>=131 && LA37_0<=138)) ) {
                        alt37=1;
                    }
                    switch (alt37) {
                        case 1 :
                            // InternalSCEst.g:2094:6: ( (lv_valueArguments_8_0= ruleTypeIdentifier ) ) (otherlv_9= ',' ( (lv_valueArguments_10_0= ruleTypeIdentifier ) ) )*
                            {
                            // InternalSCEst.g:2094:6: ( (lv_valueArguments_8_0= ruleTypeIdentifier ) )
                            // InternalSCEst.g:2095:7: (lv_valueArguments_8_0= ruleTypeIdentifier )
                            {
                            // InternalSCEst.g:2095:7: (lv_valueArguments_8_0= ruleTypeIdentifier )
                            // InternalSCEst.g:2096:8: lv_valueArguments_8_0= ruleTypeIdentifier
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getProcedureAccess().getValueArgumentsTypeIdentifierParserRuleCall_2_0_1_0_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_33);
                            lv_valueArguments_8_0=ruleTypeIdentifier();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getProcedureRule());
                              								}
                              								add(
                              									current,
                              									"valueArguments",
                              									lv_valueArguments_8_0,
                              									"de.cau.cs.kieler.esterel.Esterel.TypeIdentifier");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalSCEst.g:2113:6: (otherlv_9= ',' ( (lv_valueArguments_10_0= ruleTypeIdentifier ) ) )*
                            loop36:
                            do {
                                int alt36=2;
                                int LA36_0 = input.LA(1);

                                if ( (LA36_0==30) ) {
                                    alt36=1;
                                }


                                switch (alt36) {
                            	case 1 :
                            	    // InternalSCEst.g:2114:7: otherlv_9= ',' ( (lv_valueArguments_10_0= ruleTypeIdentifier ) )
                            	    {
                            	    otherlv_9=(Token)match(input,30,FollowSets000.FOLLOW_29); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_9, grammarAccess.getProcedureAccess().getCommaKeyword_2_0_1_1_0());
                            	      						
                            	    }
                            	    // InternalSCEst.g:2118:7: ( (lv_valueArguments_10_0= ruleTypeIdentifier ) )
                            	    // InternalSCEst.g:2119:8: (lv_valueArguments_10_0= ruleTypeIdentifier )
                            	    {
                            	    // InternalSCEst.g:2119:8: (lv_valueArguments_10_0= ruleTypeIdentifier )
                            	    // InternalSCEst.g:2120:9: lv_valueArguments_10_0= ruleTypeIdentifier
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getProcedureAccess().getValueArgumentsTypeIdentifierParserRuleCall_2_0_1_1_1_0());
                            	      								
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_33);
                            	    lv_valueArguments_10_0=ruleTypeIdentifier();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getProcedureRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"valueArguments",
                            	      										lv_valueArguments_10_0,
                            	      										"de.cau.cs.kieler.esterel.Esterel.TypeIdentifier");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop36;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_11=(Token)match(input,26,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_11, grammarAccess.getProcedureAccess().getRightParenthesisKeyword_2_0_2());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCEst.g:2145:4: otherlv_12= '()'
                    {
                    otherlv_12=(Token)match(input,34,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getProcedureAccess().getLeftParenthesisRightParenthesisKeyword_2_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleProcedure"


    // $ANTLR start "entryRuleTaskDeclaration"
    // InternalSCEst.g:2154:1: entryRuleTaskDeclaration returns [EObject current=null] : iv_ruleTaskDeclaration= ruleTaskDeclaration EOF ;
    public final EObject entryRuleTaskDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTaskDeclaration = null;


        try {
            // InternalSCEst.g:2154:56: (iv_ruleTaskDeclaration= ruleTaskDeclaration EOF )
            // InternalSCEst.g:2155:2: iv_ruleTaskDeclaration= ruleTaskDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTaskDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTaskDeclaration=ruleTaskDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTaskDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTaskDeclaration"


    // $ANTLR start "ruleTaskDeclaration"
    // InternalSCEst.g:2161:1: ruleTaskDeclaration returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'task' ( (lv_valuedObjects_2_0= ruleTask ) ) (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleTask ) ) )* otherlv_5= ';' ) ;
    public final EObject ruleTaskDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_valuedObjects_2_0 = null;

        EObject lv_valuedObjects_4_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:2167:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'task' ( (lv_valuedObjects_2_0= ruleTask ) ) (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleTask ) ) )* otherlv_5= ';' ) )
            // InternalSCEst.g:2168:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'task' ( (lv_valuedObjects_2_0= ruleTask ) ) (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleTask ) ) )* otherlv_5= ';' )
            {
            // InternalSCEst.g:2168:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'task' ( (lv_valuedObjects_2_0= ruleTask ) ) (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleTask ) ) )* otherlv_5= ';' )
            // InternalSCEst.g:2169:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'task' ( (lv_valuedObjects_2_0= ruleTask ) ) (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleTask ) ) )* otherlv_5= ';'
            {
            // InternalSCEst.g:2169:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop39:
            do {
                int alt39=2;
                int LA39_0 = input.LA(1);

                if ( (LA39_0==RULE_COMMENT_ANNOTATION||LA39_0==128) ) {
                    alt39=1;
                }


                switch (alt39) {
            	case 1 :
            	    // InternalSCEst.g:2170:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:2170:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCEst.g:2171:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getTaskDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_35);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getTaskDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop39;
                }
            } while (true);

            otherlv_1=(Token)match(input,36,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getTaskDeclarationAccess().getTaskKeyword_1());
              		
            }
            // InternalSCEst.g:2192:3: ( (lv_valuedObjects_2_0= ruleTask ) )
            // InternalSCEst.g:2193:4: (lv_valuedObjects_2_0= ruleTask )
            {
            // InternalSCEst.g:2193:4: (lv_valuedObjects_2_0= ruleTask )
            // InternalSCEst.g:2194:5: lv_valuedObjects_2_0= ruleTask
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTaskDeclarationAccess().getValuedObjectsTaskParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_26);
            lv_valuedObjects_2_0=ruleTask();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTaskDeclarationRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_2_0,
              						"de.cau.cs.kieler.esterel.Esterel.Task");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCEst.g:2211:3: (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleTask ) ) )*
            loop40:
            do {
                int alt40=2;
                int LA40_0 = input.LA(1);

                if ( (LA40_0==30) ) {
                    alt40=1;
                }


                switch (alt40) {
            	case 1 :
            	    // InternalSCEst.g:2212:4: otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleTask ) )
            	    {
            	    otherlv_3=(Token)match(input,30,FollowSets000.FOLLOW_6); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getTaskDeclarationAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalSCEst.g:2216:4: ( (lv_valuedObjects_4_0= ruleTask ) )
            	    // InternalSCEst.g:2217:5: (lv_valuedObjects_4_0= ruleTask )
            	    {
            	    // InternalSCEst.g:2217:5: (lv_valuedObjects_4_0= ruleTask )
            	    // InternalSCEst.g:2218:6: lv_valuedObjects_4_0= ruleTask
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTaskDeclarationAccess().getValuedObjectsTaskParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_26);
            	    lv_valuedObjects_4_0=ruleTask();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTaskDeclarationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"valuedObjects",
            	      							lv_valuedObjects_4_0,
            	      							"de.cau.cs.kieler.esterel.Esterel.Task");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop40;
                }
            } while (true);

            otherlv_5=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getTaskDeclarationAccess().getSemicolonKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTaskDeclaration"


    // $ANTLR start "entryRuleTask"
    // InternalSCEst.g:2244:1: entryRuleTask returns [EObject current=null] : iv_ruleTask= ruleTask EOF ;
    public final EObject entryRuleTask() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTask = null;


        try {
            // InternalSCEst.g:2244:45: (iv_ruleTask= ruleTask EOF )
            // InternalSCEst.g:2245:2: iv_ruleTask= ruleTask EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTaskRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTask=ruleTask();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTask; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTask"


    // $ANTLR start "ruleTask"
    // InternalSCEst.g:2251:1: ruleTask returns [EObject current=null] : ( ( (lv_name_0_0= RULE_ID ) ) ( (otherlv_1= '(' ( ( (lv_referenceArguments_2_0= ruleTypeIdentifier ) ) (otherlv_3= ',' ( (lv_referenceArguments_4_0= ruleTypeIdentifier ) ) )* )? otherlv_5= ')' ) | otherlv_6= '()' ) ( (otherlv_7= '(' ( ( (lv_valueArguments_8_0= ruleTypeIdentifier ) ) (otherlv_9= ',' ( (lv_valueArguments_10_0= ruleTypeIdentifier ) ) )* )? otherlv_11= ')' ) | otherlv_12= '()' ) ) ;
    public final EObject ruleTask() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        EObject lv_referenceArguments_2_0 = null;

        EObject lv_referenceArguments_4_0 = null;

        EObject lv_valueArguments_8_0 = null;

        EObject lv_valueArguments_10_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:2257:2: ( ( ( (lv_name_0_0= RULE_ID ) ) ( (otherlv_1= '(' ( ( (lv_referenceArguments_2_0= ruleTypeIdentifier ) ) (otherlv_3= ',' ( (lv_referenceArguments_4_0= ruleTypeIdentifier ) ) )* )? otherlv_5= ')' ) | otherlv_6= '()' ) ( (otherlv_7= '(' ( ( (lv_valueArguments_8_0= ruleTypeIdentifier ) ) (otherlv_9= ',' ( (lv_valueArguments_10_0= ruleTypeIdentifier ) ) )* )? otherlv_11= ')' ) | otherlv_12= '()' ) ) )
            // InternalSCEst.g:2258:2: ( ( (lv_name_0_0= RULE_ID ) ) ( (otherlv_1= '(' ( ( (lv_referenceArguments_2_0= ruleTypeIdentifier ) ) (otherlv_3= ',' ( (lv_referenceArguments_4_0= ruleTypeIdentifier ) ) )* )? otherlv_5= ')' ) | otherlv_6= '()' ) ( (otherlv_7= '(' ( ( (lv_valueArguments_8_0= ruleTypeIdentifier ) ) (otherlv_9= ',' ( (lv_valueArguments_10_0= ruleTypeIdentifier ) ) )* )? otherlv_11= ')' ) | otherlv_12= '()' ) )
            {
            // InternalSCEst.g:2258:2: ( ( (lv_name_0_0= RULE_ID ) ) ( (otherlv_1= '(' ( ( (lv_referenceArguments_2_0= ruleTypeIdentifier ) ) (otherlv_3= ',' ( (lv_referenceArguments_4_0= ruleTypeIdentifier ) ) )* )? otherlv_5= ')' ) | otherlv_6= '()' ) ( (otherlv_7= '(' ( ( (lv_valueArguments_8_0= ruleTypeIdentifier ) ) (otherlv_9= ',' ( (lv_valueArguments_10_0= ruleTypeIdentifier ) ) )* )? otherlv_11= ')' ) | otherlv_12= '()' ) )
            // InternalSCEst.g:2259:3: ( (lv_name_0_0= RULE_ID ) ) ( (otherlv_1= '(' ( ( (lv_referenceArguments_2_0= ruleTypeIdentifier ) ) (otherlv_3= ',' ( (lv_referenceArguments_4_0= ruleTypeIdentifier ) ) )* )? otherlv_5= ')' ) | otherlv_6= '()' ) ( (otherlv_7= '(' ( ( (lv_valueArguments_8_0= ruleTypeIdentifier ) ) (otherlv_9= ',' ( (lv_valueArguments_10_0= ruleTypeIdentifier ) ) )* )? otherlv_11= ')' ) | otherlv_12= '()' )
            {
            // InternalSCEst.g:2259:3: ( (lv_name_0_0= RULE_ID ) )
            // InternalSCEst.g:2260:4: (lv_name_0_0= RULE_ID )
            {
            // InternalSCEst.g:2260:4: (lv_name_0_0= RULE_ID )
            // InternalSCEst.g:2261:5: lv_name_0_0= RULE_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getTaskAccess().getNameIDTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getTaskRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_0_0,
              						"de.cau.cs.kieler.annotations.Annotations.ID");
              				
            }

            }


            }

            // InternalSCEst.g:2277:3: ( (otherlv_1= '(' ( ( (lv_referenceArguments_2_0= ruleTypeIdentifier ) ) (otherlv_3= ',' ( (lv_referenceArguments_4_0= ruleTypeIdentifier ) ) )* )? otherlv_5= ')' ) | otherlv_6= '()' )
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==25) ) {
                alt43=1;
            }
            else if ( (LA43_0==34) ) {
                alt43=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 43, 0, input);

                throw nvae;
            }
            switch (alt43) {
                case 1 :
                    // InternalSCEst.g:2278:4: (otherlv_1= '(' ( ( (lv_referenceArguments_2_0= ruleTypeIdentifier ) ) (otherlv_3= ',' ( (lv_referenceArguments_4_0= ruleTypeIdentifier ) ) )* )? otherlv_5= ')' )
                    {
                    // InternalSCEst.g:2278:4: (otherlv_1= '(' ( ( (lv_referenceArguments_2_0= ruleTypeIdentifier ) ) (otherlv_3= ',' ( (lv_referenceArguments_4_0= ruleTypeIdentifier ) ) )* )? otherlv_5= ')' )
                    // InternalSCEst.g:2279:5: otherlv_1= '(' ( ( (lv_referenceArguments_2_0= ruleTypeIdentifier ) ) (otherlv_3= ',' ( (lv_referenceArguments_4_0= ruleTypeIdentifier ) ) )* )? otherlv_5= ')'
                    {
                    otherlv_1=(Token)match(input,25,FollowSets000.FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getTaskAccess().getLeftParenthesisKeyword_1_0_0());
                      				
                    }
                    // InternalSCEst.g:2283:5: ( ( (lv_referenceArguments_2_0= ruleTypeIdentifier ) ) (otherlv_3= ',' ( (lv_referenceArguments_4_0= ruleTypeIdentifier ) ) )* )?
                    int alt42=2;
                    int LA42_0 = input.LA(1);

                    if ( (LA42_0==RULE_ID||LA42_0==27||(LA42_0>=131 && LA42_0<=138)) ) {
                        alt42=1;
                    }
                    switch (alt42) {
                        case 1 :
                            // InternalSCEst.g:2284:6: ( (lv_referenceArguments_2_0= ruleTypeIdentifier ) ) (otherlv_3= ',' ( (lv_referenceArguments_4_0= ruleTypeIdentifier ) ) )*
                            {
                            // InternalSCEst.g:2284:6: ( (lv_referenceArguments_2_0= ruleTypeIdentifier ) )
                            // InternalSCEst.g:2285:7: (lv_referenceArguments_2_0= ruleTypeIdentifier )
                            {
                            // InternalSCEst.g:2285:7: (lv_referenceArguments_2_0= ruleTypeIdentifier )
                            // InternalSCEst.g:2286:8: lv_referenceArguments_2_0= ruleTypeIdentifier
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getTaskAccess().getReferenceArgumentsTypeIdentifierParserRuleCall_1_0_1_0_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_33);
                            lv_referenceArguments_2_0=ruleTypeIdentifier();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getTaskRule());
                              								}
                              								add(
                              									current,
                              									"referenceArguments",
                              									lv_referenceArguments_2_0,
                              									"de.cau.cs.kieler.esterel.Esterel.TypeIdentifier");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalSCEst.g:2303:6: (otherlv_3= ',' ( (lv_referenceArguments_4_0= ruleTypeIdentifier ) ) )*
                            loop41:
                            do {
                                int alt41=2;
                                int LA41_0 = input.LA(1);

                                if ( (LA41_0==30) ) {
                                    alt41=1;
                                }


                                switch (alt41) {
                            	case 1 :
                            	    // InternalSCEst.g:2304:7: otherlv_3= ',' ( (lv_referenceArguments_4_0= ruleTypeIdentifier ) )
                            	    {
                            	    otherlv_3=(Token)match(input,30,FollowSets000.FOLLOW_29); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_3, grammarAccess.getTaskAccess().getCommaKeyword_1_0_1_1_0());
                            	      						
                            	    }
                            	    // InternalSCEst.g:2308:7: ( (lv_referenceArguments_4_0= ruleTypeIdentifier ) )
                            	    // InternalSCEst.g:2309:8: (lv_referenceArguments_4_0= ruleTypeIdentifier )
                            	    {
                            	    // InternalSCEst.g:2309:8: (lv_referenceArguments_4_0= ruleTypeIdentifier )
                            	    // InternalSCEst.g:2310:9: lv_referenceArguments_4_0= ruleTypeIdentifier
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getTaskAccess().getReferenceArgumentsTypeIdentifierParserRuleCall_1_0_1_1_1_0());
                            	      								
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_33);
                            	    lv_referenceArguments_4_0=ruleTypeIdentifier();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getTaskRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"referenceArguments",
                            	      										lv_referenceArguments_4_0,
                            	      										"de.cau.cs.kieler.esterel.Esterel.TypeIdentifier");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop41;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_5=(Token)match(input,26,FollowSets000.FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getTaskAccess().getRightParenthesisKeyword_1_0_2());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCEst.g:2335:4: otherlv_6= '()'
                    {
                    otherlv_6=(Token)match(input,34,FollowSets000.FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getTaskAccess().getLeftParenthesisRightParenthesisKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalSCEst.g:2340:3: ( (otherlv_7= '(' ( ( (lv_valueArguments_8_0= ruleTypeIdentifier ) ) (otherlv_9= ',' ( (lv_valueArguments_10_0= ruleTypeIdentifier ) ) )* )? otherlv_11= ')' ) | otherlv_12= '()' )
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( (LA46_0==25) ) {
                alt46=1;
            }
            else if ( (LA46_0==34) ) {
                alt46=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 46, 0, input);

                throw nvae;
            }
            switch (alt46) {
                case 1 :
                    // InternalSCEst.g:2341:4: (otherlv_7= '(' ( ( (lv_valueArguments_8_0= ruleTypeIdentifier ) ) (otherlv_9= ',' ( (lv_valueArguments_10_0= ruleTypeIdentifier ) ) )* )? otherlv_11= ')' )
                    {
                    // InternalSCEst.g:2341:4: (otherlv_7= '(' ( ( (lv_valueArguments_8_0= ruleTypeIdentifier ) ) (otherlv_9= ',' ( (lv_valueArguments_10_0= ruleTypeIdentifier ) ) )* )? otherlv_11= ')' )
                    // InternalSCEst.g:2342:5: otherlv_7= '(' ( ( (lv_valueArguments_8_0= ruleTypeIdentifier ) ) (otherlv_9= ',' ( (lv_valueArguments_10_0= ruleTypeIdentifier ) ) )* )? otherlv_11= ')'
                    {
                    otherlv_7=(Token)match(input,25,FollowSets000.FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getTaskAccess().getLeftParenthesisKeyword_2_0_0());
                      				
                    }
                    // InternalSCEst.g:2346:5: ( ( (lv_valueArguments_8_0= ruleTypeIdentifier ) ) (otherlv_9= ',' ( (lv_valueArguments_10_0= ruleTypeIdentifier ) ) )* )?
                    int alt45=2;
                    int LA45_0 = input.LA(1);

                    if ( (LA45_0==RULE_ID||LA45_0==27||(LA45_0>=131 && LA45_0<=138)) ) {
                        alt45=1;
                    }
                    switch (alt45) {
                        case 1 :
                            // InternalSCEst.g:2347:6: ( (lv_valueArguments_8_0= ruleTypeIdentifier ) ) (otherlv_9= ',' ( (lv_valueArguments_10_0= ruleTypeIdentifier ) ) )*
                            {
                            // InternalSCEst.g:2347:6: ( (lv_valueArguments_8_0= ruleTypeIdentifier ) )
                            // InternalSCEst.g:2348:7: (lv_valueArguments_8_0= ruleTypeIdentifier )
                            {
                            // InternalSCEst.g:2348:7: (lv_valueArguments_8_0= ruleTypeIdentifier )
                            // InternalSCEst.g:2349:8: lv_valueArguments_8_0= ruleTypeIdentifier
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getTaskAccess().getValueArgumentsTypeIdentifierParserRuleCall_2_0_1_0_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_33);
                            lv_valueArguments_8_0=ruleTypeIdentifier();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getTaskRule());
                              								}
                              								add(
                              									current,
                              									"valueArguments",
                              									lv_valueArguments_8_0,
                              									"de.cau.cs.kieler.esterel.Esterel.TypeIdentifier");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalSCEst.g:2366:6: (otherlv_9= ',' ( (lv_valueArguments_10_0= ruleTypeIdentifier ) ) )*
                            loop44:
                            do {
                                int alt44=2;
                                int LA44_0 = input.LA(1);

                                if ( (LA44_0==30) ) {
                                    alt44=1;
                                }


                                switch (alt44) {
                            	case 1 :
                            	    // InternalSCEst.g:2367:7: otherlv_9= ',' ( (lv_valueArguments_10_0= ruleTypeIdentifier ) )
                            	    {
                            	    otherlv_9=(Token)match(input,30,FollowSets000.FOLLOW_29); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_9, grammarAccess.getTaskAccess().getCommaKeyword_2_0_1_1_0());
                            	      						
                            	    }
                            	    // InternalSCEst.g:2371:7: ( (lv_valueArguments_10_0= ruleTypeIdentifier ) )
                            	    // InternalSCEst.g:2372:8: (lv_valueArguments_10_0= ruleTypeIdentifier )
                            	    {
                            	    // InternalSCEst.g:2372:8: (lv_valueArguments_10_0= ruleTypeIdentifier )
                            	    // InternalSCEst.g:2373:9: lv_valueArguments_10_0= ruleTypeIdentifier
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getTaskAccess().getValueArgumentsTypeIdentifierParserRuleCall_2_0_1_1_1_0());
                            	      								
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_33);
                            	    lv_valueArguments_10_0=ruleTypeIdentifier();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getTaskRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"valueArguments",
                            	      										lv_valueArguments_10_0,
                            	      										"de.cau.cs.kieler.esterel.Esterel.TypeIdentifier");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop44;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_11=(Token)match(input,26,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_11, grammarAccess.getTaskAccess().getRightParenthesisKeyword_2_0_2());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCEst.g:2398:4: otherlv_12= '()'
                    {
                    otherlv_12=(Token)match(input,34,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getTaskAccess().getLeftParenthesisRightParenthesisKeyword_2_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTask"


    // $ANTLR start "entryRuleInputDeclaration"
    // InternalSCEst.g:2407:1: entryRuleInputDeclaration returns [EObject current=null] : iv_ruleInputDeclaration= ruleInputDeclaration EOF ;
    public final EObject entryRuleInputDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInputDeclaration = null;


        try {
            // InternalSCEst.g:2407:57: (iv_ruleInputDeclaration= ruleInputDeclaration EOF )
            // InternalSCEst.g:2408:2: iv_ruleInputDeclaration= ruleInputDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInputDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleInputDeclaration=ruleInputDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInputDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInputDeclaration"


    // $ANTLR start "ruleInputDeclaration"
    // InternalSCEst.g:2414:1: ruleInputDeclaration returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'input' ( (lv_valuedObjects_2_0= ruleSignal ) ) (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleSignal ) ) )* otherlv_5= ';' ) ;
    public final EObject ruleInputDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_valuedObjects_2_0 = null;

        EObject lv_valuedObjects_4_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:2420:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'input' ( (lv_valuedObjects_2_0= ruleSignal ) ) (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleSignal ) ) )* otherlv_5= ';' ) )
            // InternalSCEst.g:2421:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'input' ( (lv_valuedObjects_2_0= ruleSignal ) ) (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleSignal ) ) )* otherlv_5= ';' )
            {
            // InternalSCEst.g:2421:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'input' ( (lv_valuedObjects_2_0= ruleSignal ) ) (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleSignal ) ) )* otherlv_5= ';' )
            // InternalSCEst.g:2422:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'input' ( (lv_valuedObjects_2_0= ruleSignal ) ) (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleSignal ) ) )* otherlv_5= ';'
            {
            // InternalSCEst.g:2422:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop47:
            do {
                int alt47=2;
                int LA47_0 = input.LA(1);

                if ( (LA47_0==RULE_COMMENT_ANNOTATION||LA47_0==128) ) {
                    alt47=1;
                }


                switch (alt47) {
            	case 1 :
            	    // InternalSCEst.g:2423:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:2423:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCEst.g:2424:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getInputDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_36);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getInputDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop47;
                }
            } while (true);

            otherlv_1=(Token)match(input,37,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getInputDeclarationAccess().getInputKeyword_1());
              		
            }
            // InternalSCEst.g:2445:3: ( (lv_valuedObjects_2_0= ruleSignal ) )
            // InternalSCEst.g:2446:4: (lv_valuedObjects_2_0= ruleSignal )
            {
            // InternalSCEst.g:2446:4: (lv_valuedObjects_2_0= ruleSignal )
            // InternalSCEst.g:2447:5: lv_valuedObjects_2_0= ruleSignal
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getInputDeclarationAccess().getValuedObjectsSignalParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_26);
            lv_valuedObjects_2_0=ruleSignal();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getInputDeclarationRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_2_0,
              						"de.cau.cs.kieler.esterel.Esterel.Signal");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCEst.g:2464:3: (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleSignal ) ) )*
            loop48:
            do {
                int alt48=2;
                int LA48_0 = input.LA(1);

                if ( (LA48_0==30) ) {
                    alt48=1;
                }


                switch (alt48) {
            	case 1 :
            	    // InternalSCEst.g:2465:4: otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleSignal ) )
            	    {
            	    otherlv_3=(Token)match(input,30,FollowSets000.FOLLOW_6); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getInputDeclarationAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalSCEst.g:2469:4: ( (lv_valuedObjects_4_0= ruleSignal ) )
            	    // InternalSCEst.g:2470:5: (lv_valuedObjects_4_0= ruleSignal )
            	    {
            	    // InternalSCEst.g:2470:5: (lv_valuedObjects_4_0= ruleSignal )
            	    // InternalSCEst.g:2471:6: lv_valuedObjects_4_0= ruleSignal
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getInputDeclarationAccess().getValuedObjectsSignalParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_26);
            	    lv_valuedObjects_4_0=ruleSignal();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getInputDeclarationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"valuedObjects",
            	      							lv_valuedObjects_4_0,
            	      							"de.cau.cs.kieler.esterel.Esterel.Signal");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop48;
                }
            } while (true);

            otherlv_5=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getInputDeclarationAccess().getSemicolonKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInputDeclaration"


    // $ANTLR start "entryRuleOutputDeclaration"
    // InternalSCEst.g:2497:1: entryRuleOutputDeclaration returns [EObject current=null] : iv_ruleOutputDeclaration= ruleOutputDeclaration EOF ;
    public final EObject entryRuleOutputDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOutputDeclaration = null;


        try {
            // InternalSCEst.g:2497:58: (iv_ruleOutputDeclaration= ruleOutputDeclaration EOF )
            // InternalSCEst.g:2498:2: iv_ruleOutputDeclaration= ruleOutputDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOutputDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleOutputDeclaration=ruleOutputDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOutputDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOutputDeclaration"


    // $ANTLR start "ruleOutputDeclaration"
    // InternalSCEst.g:2504:1: ruleOutputDeclaration returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'output' ( (lv_valuedObjects_2_0= ruleSignal ) ) (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleSignal ) ) )* otherlv_5= ';' ) ;
    public final EObject ruleOutputDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_valuedObjects_2_0 = null;

        EObject lv_valuedObjects_4_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:2510:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'output' ( (lv_valuedObjects_2_0= ruleSignal ) ) (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleSignal ) ) )* otherlv_5= ';' ) )
            // InternalSCEst.g:2511:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'output' ( (lv_valuedObjects_2_0= ruleSignal ) ) (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleSignal ) ) )* otherlv_5= ';' )
            {
            // InternalSCEst.g:2511:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'output' ( (lv_valuedObjects_2_0= ruleSignal ) ) (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleSignal ) ) )* otherlv_5= ';' )
            // InternalSCEst.g:2512:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'output' ( (lv_valuedObjects_2_0= ruleSignal ) ) (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleSignal ) ) )* otherlv_5= ';'
            {
            // InternalSCEst.g:2512:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop49:
            do {
                int alt49=2;
                int LA49_0 = input.LA(1);

                if ( (LA49_0==RULE_COMMENT_ANNOTATION||LA49_0==128) ) {
                    alt49=1;
                }


                switch (alt49) {
            	case 1 :
            	    // InternalSCEst.g:2513:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:2513:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCEst.g:2514:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getOutputDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_37);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getOutputDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop49;
                }
            } while (true);

            otherlv_1=(Token)match(input,38,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getOutputDeclarationAccess().getOutputKeyword_1());
              		
            }
            // InternalSCEst.g:2535:3: ( (lv_valuedObjects_2_0= ruleSignal ) )
            // InternalSCEst.g:2536:4: (lv_valuedObjects_2_0= ruleSignal )
            {
            // InternalSCEst.g:2536:4: (lv_valuedObjects_2_0= ruleSignal )
            // InternalSCEst.g:2537:5: lv_valuedObjects_2_0= ruleSignal
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getOutputDeclarationAccess().getValuedObjectsSignalParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_26);
            lv_valuedObjects_2_0=ruleSignal();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getOutputDeclarationRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_2_0,
              						"de.cau.cs.kieler.esterel.Esterel.Signal");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCEst.g:2554:3: (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleSignal ) ) )*
            loop50:
            do {
                int alt50=2;
                int LA50_0 = input.LA(1);

                if ( (LA50_0==30) ) {
                    alt50=1;
                }


                switch (alt50) {
            	case 1 :
            	    // InternalSCEst.g:2555:4: otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleSignal ) )
            	    {
            	    otherlv_3=(Token)match(input,30,FollowSets000.FOLLOW_6); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getOutputDeclarationAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalSCEst.g:2559:4: ( (lv_valuedObjects_4_0= ruleSignal ) )
            	    // InternalSCEst.g:2560:5: (lv_valuedObjects_4_0= ruleSignal )
            	    {
            	    // InternalSCEst.g:2560:5: (lv_valuedObjects_4_0= ruleSignal )
            	    // InternalSCEst.g:2561:6: lv_valuedObjects_4_0= ruleSignal
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getOutputDeclarationAccess().getValuedObjectsSignalParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_26);
            	    lv_valuedObjects_4_0=ruleSignal();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getOutputDeclarationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"valuedObjects",
            	      							lv_valuedObjects_4_0,
            	      							"de.cau.cs.kieler.esterel.Esterel.Signal");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop50;
                }
            } while (true);

            otherlv_5=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getOutputDeclarationAccess().getSemicolonKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOutputDeclaration"


    // $ANTLR start "entryRuleInputOutputDeclaration"
    // InternalSCEst.g:2587:1: entryRuleInputOutputDeclaration returns [EObject current=null] : iv_ruleInputOutputDeclaration= ruleInputOutputDeclaration EOF ;
    public final EObject entryRuleInputOutputDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInputOutputDeclaration = null;


        try {
            // InternalSCEst.g:2587:63: (iv_ruleInputOutputDeclaration= ruleInputOutputDeclaration EOF )
            // InternalSCEst.g:2588:2: iv_ruleInputOutputDeclaration= ruleInputOutputDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInputOutputDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleInputOutputDeclaration=ruleInputOutputDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInputOutputDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInputOutputDeclaration"


    // $ANTLR start "ruleInputOutputDeclaration"
    // InternalSCEst.g:2594:1: ruleInputOutputDeclaration returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'inputoutput' ( (lv_valuedObjects_2_0= ruleSignal ) ) (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleSignal ) ) )* otherlv_5= ';' ) ;
    public final EObject ruleInputOutputDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_valuedObjects_2_0 = null;

        EObject lv_valuedObjects_4_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:2600:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'inputoutput' ( (lv_valuedObjects_2_0= ruleSignal ) ) (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleSignal ) ) )* otherlv_5= ';' ) )
            // InternalSCEst.g:2601:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'inputoutput' ( (lv_valuedObjects_2_0= ruleSignal ) ) (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleSignal ) ) )* otherlv_5= ';' )
            {
            // InternalSCEst.g:2601:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'inputoutput' ( (lv_valuedObjects_2_0= ruleSignal ) ) (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleSignal ) ) )* otherlv_5= ';' )
            // InternalSCEst.g:2602:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'inputoutput' ( (lv_valuedObjects_2_0= ruleSignal ) ) (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleSignal ) ) )* otherlv_5= ';'
            {
            // InternalSCEst.g:2602:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop51:
            do {
                int alt51=2;
                int LA51_0 = input.LA(1);

                if ( (LA51_0==RULE_COMMENT_ANNOTATION||LA51_0==128) ) {
                    alt51=1;
                }


                switch (alt51) {
            	case 1 :
            	    // InternalSCEst.g:2603:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:2603:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCEst.g:2604:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getInputOutputDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_38);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getInputOutputDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop51;
                }
            } while (true);

            otherlv_1=(Token)match(input,39,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getInputOutputDeclarationAccess().getInputoutputKeyword_1());
              		
            }
            // InternalSCEst.g:2625:3: ( (lv_valuedObjects_2_0= ruleSignal ) )
            // InternalSCEst.g:2626:4: (lv_valuedObjects_2_0= ruleSignal )
            {
            // InternalSCEst.g:2626:4: (lv_valuedObjects_2_0= ruleSignal )
            // InternalSCEst.g:2627:5: lv_valuedObjects_2_0= ruleSignal
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getInputOutputDeclarationAccess().getValuedObjectsSignalParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_26);
            lv_valuedObjects_2_0=ruleSignal();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getInputOutputDeclarationRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_2_0,
              						"de.cau.cs.kieler.esterel.Esterel.Signal");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCEst.g:2644:3: (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleSignal ) ) )*
            loop52:
            do {
                int alt52=2;
                int LA52_0 = input.LA(1);

                if ( (LA52_0==30) ) {
                    alt52=1;
                }


                switch (alt52) {
            	case 1 :
            	    // InternalSCEst.g:2645:4: otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleSignal ) )
            	    {
            	    otherlv_3=(Token)match(input,30,FollowSets000.FOLLOW_6); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getInputOutputDeclarationAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalSCEst.g:2649:4: ( (lv_valuedObjects_4_0= ruleSignal ) )
            	    // InternalSCEst.g:2650:5: (lv_valuedObjects_4_0= ruleSignal )
            	    {
            	    // InternalSCEst.g:2650:5: (lv_valuedObjects_4_0= ruleSignal )
            	    // InternalSCEst.g:2651:6: lv_valuedObjects_4_0= ruleSignal
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getInputOutputDeclarationAccess().getValuedObjectsSignalParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_26);
            	    lv_valuedObjects_4_0=ruleSignal();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getInputOutputDeclarationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"valuedObjects",
            	      							lv_valuedObjects_4_0,
            	      							"de.cau.cs.kieler.esterel.Esterel.Signal");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop52;
                }
            } while (true);

            otherlv_5=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getInputOutputDeclarationAccess().getSemicolonKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInputOutputDeclaration"


    // $ANTLR start "entryRuleReturnDeclaration"
    // InternalSCEst.g:2677:1: entryRuleReturnDeclaration returns [EObject current=null] : iv_ruleReturnDeclaration= ruleReturnDeclaration EOF ;
    public final EObject entryRuleReturnDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReturnDeclaration = null;


        try {
            // InternalSCEst.g:2677:58: (iv_ruleReturnDeclaration= ruleReturnDeclaration EOF )
            // InternalSCEst.g:2678:2: iv_ruleReturnDeclaration= ruleReturnDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReturnDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleReturnDeclaration=ruleReturnDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReturnDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReturnDeclaration"


    // $ANTLR start "ruleReturnDeclaration"
    // InternalSCEst.g:2684:1: ruleReturnDeclaration returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'return' ( (lv_valuedObjects_2_0= ruleSignal ) ) (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleSignal ) ) )* otherlv_5= ';' ) ;
    public final EObject ruleReturnDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_valuedObjects_2_0 = null;

        EObject lv_valuedObjects_4_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:2690:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'return' ( (lv_valuedObjects_2_0= ruleSignal ) ) (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleSignal ) ) )* otherlv_5= ';' ) )
            // InternalSCEst.g:2691:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'return' ( (lv_valuedObjects_2_0= ruleSignal ) ) (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleSignal ) ) )* otherlv_5= ';' )
            {
            // InternalSCEst.g:2691:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'return' ( (lv_valuedObjects_2_0= ruleSignal ) ) (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleSignal ) ) )* otherlv_5= ';' )
            // InternalSCEst.g:2692:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'return' ( (lv_valuedObjects_2_0= ruleSignal ) ) (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleSignal ) ) )* otherlv_5= ';'
            {
            // InternalSCEst.g:2692:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop53:
            do {
                int alt53=2;
                int LA53_0 = input.LA(1);

                if ( (LA53_0==RULE_COMMENT_ANNOTATION||LA53_0==128) ) {
                    alt53=1;
                }


                switch (alt53) {
            	case 1 :
            	    // InternalSCEst.g:2693:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:2693:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCEst.g:2694:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getReturnDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_39);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getReturnDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop53;
                }
            } while (true);

            otherlv_1=(Token)match(input,40,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getReturnDeclarationAccess().getReturnKeyword_1());
              		
            }
            // InternalSCEst.g:2715:3: ( (lv_valuedObjects_2_0= ruleSignal ) )
            // InternalSCEst.g:2716:4: (lv_valuedObjects_2_0= ruleSignal )
            {
            // InternalSCEst.g:2716:4: (lv_valuedObjects_2_0= ruleSignal )
            // InternalSCEst.g:2717:5: lv_valuedObjects_2_0= ruleSignal
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getReturnDeclarationAccess().getValuedObjectsSignalParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_26);
            lv_valuedObjects_2_0=ruleSignal();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getReturnDeclarationRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_2_0,
              						"de.cau.cs.kieler.esterel.Esterel.Signal");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCEst.g:2734:3: (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleSignal ) ) )*
            loop54:
            do {
                int alt54=2;
                int LA54_0 = input.LA(1);

                if ( (LA54_0==30) ) {
                    alt54=1;
                }


                switch (alt54) {
            	case 1 :
            	    // InternalSCEst.g:2735:4: otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleSignal ) )
            	    {
            	    otherlv_3=(Token)match(input,30,FollowSets000.FOLLOW_6); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getReturnDeclarationAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalSCEst.g:2739:4: ( (lv_valuedObjects_4_0= ruleSignal ) )
            	    // InternalSCEst.g:2740:5: (lv_valuedObjects_4_0= ruleSignal )
            	    {
            	    // InternalSCEst.g:2740:5: (lv_valuedObjects_4_0= ruleSignal )
            	    // InternalSCEst.g:2741:6: lv_valuedObjects_4_0= ruleSignal
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getReturnDeclarationAccess().getValuedObjectsSignalParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_26);
            	    lv_valuedObjects_4_0=ruleSignal();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getReturnDeclarationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"valuedObjects",
            	      							lv_valuedObjects_4_0,
            	      							"de.cau.cs.kieler.esterel.Esterel.Signal");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop54;
                }
            } while (true);

            otherlv_5=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getReturnDeclarationAccess().getSemicolonKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReturnDeclaration"


    // $ANTLR start "entryRuleSignal"
    // InternalSCEst.g:2767:1: entryRuleSignal returns [EObject current=null] : iv_ruleSignal= ruleSignal EOF ;
    public final EObject entryRuleSignal() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSignal = null;


        try {
            // InternalSCEst.g:2767:47: (iv_ruleSignal= ruleSignal EOF )
            // InternalSCEst.g:2768:2: iv_ruleSignal= ruleSignal EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSignalRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSignal=ruleSignal();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSignal; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSignal"


    // $ANTLR start "ruleSignal"
    // InternalSCEst.g:2774:1: ruleSignal returns [EObject current=null] : ( ( (lv_name_0_0= RULE_ID ) ) ( ( (otherlv_1= ':=' ( (lv_initialValue_2_0= ruleExpression ) ) )? otherlv_3= ':' ( ( (lv_type_4_0= ruleEsterelValueType ) ) | ( (lv_idType_5_0= RULE_ID ) ) | (otherlv_6= 'combine' ( ( (lv_type_7_0= ruleEsterelValueType ) ) | ( (lv_idType_8_0= RULE_ID ) ) ) otherlv_9= 'with' ( ( (otherlv_10= RULE_ID ) ) | ( (lv_combineOperator_11_0= ruleEsterelCombineOperator ) ) ) ) ) ) | (otherlv_12= '(' (otherlv_13= ':=' ( (lv_initialValue_14_0= ruleExpression ) ) otherlv_15= ':' )? ( ( (lv_type_16_0= ruleEsterelValueType ) ) | ( (lv_idType_17_0= RULE_ID ) ) | (otherlv_18= 'combine' ( ( (lv_type_19_0= ruleEsterelValueType ) ) | ( (lv_idType_20_0= RULE_ID ) ) ) otherlv_21= 'with' ( ( (otherlv_22= RULE_ID ) ) | ( (lv_combineOperator_23_0= ruleEsterelCombineOperator ) ) ) ) ) otherlv_24= ')' ) )? ) ;
    public final EObject ruleSignal() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token lv_idType_5_0=null;
        Token otherlv_6=null;
        Token lv_idType_8_0=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token lv_idType_17_0=null;
        Token otherlv_18=null;
        Token lv_idType_20_0=null;
        Token otherlv_21=null;
        Token otherlv_22=null;
        Token otherlv_24=null;
        EObject lv_initialValue_2_0 = null;

        Enumerator lv_type_4_0 = null;

        Enumerator lv_type_7_0 = null;

        Enumerator lv_combineOperator_11_0 = null;

        EObject lv_initialValue_14_0 = null;

        Enumerator lv_type_16_0 = null;

        Enumerator lv_type_19_0 = null;

        Enumerator lv_combineOperator_23_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:2780:2: ( ( ( (lv_name_0_0= RULE_ID ) ) ( ( (otherlv_1= ':=' ( (lv_initialValue_2_0= ruleExpression ) ) )? otherlv_3= ':' ( ( (lv_type_4_0= ruleEsterelValueType ) ) | ( (lv_idType_5_0= RULE_ID ) ) | (otherlv_6= 'combine' ( ( (lv_type_7_0= ruleEsterelValueType ) ) | ( (lv_idType_8_0= RULE_ID ) ) ) otherlv_9= 'with' ( ( (otherlv_10= RULE_ID ) ) | ( (lv_combineOperator_11_0= ruleEsterelCombineOperator ) ) ) ) ) ) | (otherlv_12= '(' (otherlv_13= ':=' ( (lv_initialValue_14_0= ruleExpression ) ) otherlv_15= ':' )? ( ( (lv_type_16_0= ruleEsterelValueType ) ) | ( (lv_idType_17_0= RULE_ID ) ) | (otherlv_18= 'combine' ( ( (lv_type_19_0= ruleEsterelValueType ) ) | ( (lv_idType_20_0= RULE_ID ) ) ) otherlv_21= 'with' ( ( (otherlv_22= RULE_ID ) ) | ( (lv_combineOperator_23_0= ruleEsterelCombineOperator ) ) ) ) ) otherlv_24= ')' ) )? ) )
            // InternalSCEst.g:2781:2: ( ( (lv_name_0_0= RULE_ID ) ) ( ( (otherlv_1= ':=' ( (lv_initialValue_2_0= ruleExpression ) ) )? otherlv_3= ':' ( ( (lv_type_4_0= ruleEsterelValueType ) ) | ( (lv_idType_5_0= RULE_ID ) ) | (otherlv_6= 'combine' ( ( (lv_type_7_0= ruleEsterelValueType ) ) | ( (lv_idType_8_0= RULE_ID ) ) ) otherlv_9= 'with' ( ( (otherlv_10= RULE_ID ) ) | ( (lv_combineOperator_11_0= ruleEsterelCombineOperator ) ) ) ) ) ) | (otherlv_12= '(' (otherlv_13= ':=' ( (lv_initialValue_14_0= ruleExpression ) ) otherlv_15= ':' )? ( ( (lv_type_16_0= ruleEsterelValueType ) ) | ( (lv_idType_17_0= RULE_ID ) ) | (otherlv_18= 'combine' ( ( (lv_type_19_0= ruleEsterelValueType ) ) | ( (lv_idType_20_0= RULE_ID ) ) ) otherlv_21= 'with' ( ( (otherlv_22= RULE_ID ) ) | ( (lv_combineOperator_23_0= ruleEsterelCombineOperator ) ) ) ) ) otherlv_24= ')' ) )? )
            {
            // InternalSCEst.g:2781:2: ( ( (lv_name_0_0= RULE_ID ) ) ( ( (otherlv_1= ':=' ( (lv_initialValue_2_0= ruleExpression ) ) )? otherlv_3= ':' ( ( (lv_type_4_0= ruleEsterelValueType ) ) | ( (lv_idType_5_0= RULE_ID ) ) | (otherlv_6= 'combine' ( ( (lv_type_7_0= ruleEsterelValueType ) ) | ( (lv_idType_8_0= RULE_ID ) ) ) otherlv_9= 'with' ( ( (otherlv_10= RULE_ID ) ) | ( (lv_combineOperator_11_0= ruleEsterelCombineOperator ) ) ) ) ) ) | (otherlv_12= '(' (otherlv_13= ':=' ( (lv_initialValue_14_0= ruleExpression ) ) otherlv_15= ':' )? ( ( (lv_type_16_0= ruleEsterelValueType ) ) | ( (lv_idType_17_0= RULE_ID ) ) | (otherlv_18= 'combine' ( ( (lv_type_19_0= ruleEsterelValueType ) ) | ( (lv_idType_20_0= RULE_ID ) ) ) otherlv_21= 'with' ( ( (otherlv_22= RULE_ID ) ) | ( (lv_combineOperator_23_0= ruleEsterelCombineOperator ) ) ) ) ) otherlv_24= ')' ) )? )
            // InternalSCEst.g:2782:3: ( (lv_name_0_0= RULE_ID ) ) ( ( (otherlv_1= ':=' ( (lv_initialValue_2_0= ruleExpression ) ) )? otherlv_3= ':' ( ( (lv_type_4_0= ruleEsterelValueType ) ) | ( (lv_idType_5_0= RULE_ID ) ) | (otherlv_6= 'combine' ( ( (lv_type_7_0= ruleEsterelValueType ) ) | ( (lv_idType_8_0= RULE_ID ) ) ) otherlv_9= 'with' ( ( (otherlv_10= RULE_ID ) ) | ( (lv_combineOperator_11_0= ruleEsterelCombineOperator ) ) ) ) ) ) | (otherlv_12= '(' (otherlv_13= ':=' ( (lv_initialValue_14_0= ruleExpression ) ) otherlv_15= ':' )? ( ( (lv_type_16_0= ruleEsterelValueType ) ) | ( (lv_idType_17_0= RULE_ID ) ) | (otherlv_18= 'combine' ( ( (lv_type_19_0= ruleEsterelValueType ) ) | ( (lv_idType_20_0= RULE_ID ) ) ) otherlv_21= 'with' ( ( (otherlv_22= RULE_ID ) ) | ( (lv_combineOperator_23_0= ruleEsterelCombineOperator ) ) ) ) ) otherlv_24= ')' ) )?
            {
            // InternalSCEst.g:2782:3: ( (lv_name_0_0= RULE_ID ) )
            // InternalSCEst.g:2783:4: (lv_name_0_0= RULE_ID )
            {
            // InternalSCEst.g:2783:4: (lv_name_0_0= RULE_ID )
            // InternalSCEst.g:2784:5: lv_name_0_0= RULE_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_40); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getSignalAccess().getNameIDTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSignalRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_0_0,
              						"de.cau.cs.kieler.annotations.Annotations.ID");
              				
            }

            }


            }

            // InternalSCEst.g:2800:3: ( ( (otherlv_1= ':=' ( (lv_initialValue_2_0= ruleExpression ) ) )? otherlv_3= ':' ( ( (lv_type_4_0= ruleEsterelValueType ) ) | ( (lv_idType_5_0= RULE_ID ) ) | (otherlv_6= 'combine' ( ( (lv_type_7_0= ruleEsterelValueType ) ) | ( (lv_idType_8_0= RULE_ID ) ) ) otherlv_9= 'with' ( ( (otherlv_10= RULE_ID ) ) | ( (lv_combineOperator_11_0= ruleEsterelCombineOperator ) ) ) ) ) ) | (otherlv_12= '(' (otherlv_13= ':=' ( (lv_initialValue_14_0= ruleExpression ) ) otherlv_15= ':' )? ( ( (lv_type_16_0= ruleEsterelValueType ) ) | ( (lv_idType_17_0= RULE_ID ) ) | (otherlv_18= 'combine' ( ( (lv_type_19_0= ruleEsterelValueType ) ) | ( (lv_idType_20_0= RULE_ID ) ) ) otherlv_21= 'with' ( ( (otherlv_22= RULE_ID ) ) | ( (lv_combineOperator_23_0= ruleEsterelCombineOperator ) ) ) ) ) otherlv_24= ')' ) )?
            int alt63=3;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==18||LA63_0==22) ) {
                alt63=1;
            }
            else if ( (LA63_0==25) ) {
                alt63=2;
            }
            switch (alt63) {
                case 1 :
                    // InternalSCEst.g:2801:4: ( (otherlv_1= ':=' ( (lv_initialValue_2_0= ruleExpression ) ) )? otherlv_3= ':' ( ( (lv_type_4_0= ruleEsterelValueType ) ) | ( (lv_idType_5_0= RULE_ID ) ) | (otherlv_6= 'combine' ( ( (lv_type_7_0= ruleEsterelValueType ) ) | ( (lv_idType_8_0= RULE_ID ) ) ) otherlv_9= 'with' ( ( (otherlv_10= RULE_ID ) ) | ( (lv_combineOperator_11_0= ruleEsterelCombineOperator ) ) ) ) ) )
                    {
                    // InternalSCEst.g:2801:4: ( (otherlv_1= ':=' ( (lv_initialValue_2_0= ruleExpression ) ) )? otherlv_3= ':' ( ( (lv_type_4_0= ruleEsterelValueType ) ) | ( (lv_idType_5_0= RULE_ID ) ) | (otherlv_6= 'combine' ( ( (lv_type_7_0= ruleEsterelValueType ) ) | ( (lv_idType_8_0= RULE_ID ) ) ) otherlv_9= 'with' ( ( (otherlv_10= RULE_ID ) ) | ( (lv_combineOperator_11_0= ruleEsterelCombineOperator ) ) ) ) ) )
                    // InternalSCEst.g:2802:5: (otherlv_1= ':=' ( (lv_initialValue_2_0= ruleExpression ) ) )? otherlv_3= ':' ( ( (lv_type_4_0= ruleEsterelValueType ) ) | ( (lv_idType_5_0= RULE_ID ) ) | (otherlv_6= 'combine' ( ( (lv_type_7_0= ruleEsterelValueType ) ) | ( (lv_idType_8_0= RULE_ID ) ) ) otherlv_9= 'with' ( ( (otherlv_10= RULE_ID ) ) | ( (lv_combineOperator_11_0= ruleEsterelCombineOperator ) ) ) ) )
                    {
                    // InternalSCEst.g:2802:5: (otherlv_1= ':=' ( (lv_initialValue_2_0= ruleExpression ) ) )?
                    int alt55=2;
                    int LA55_0 = input.LA(1);

                    if ( (LA55_0==22) ) {
                        alt55=1;
                    }
                    switch (alt55) {
                        case 1 :
                            // InternalSCEst.g:2803:6: otherlv_1= ':=' ( (lv_initialValue_2_0= ruleExpression ) )
                            {
                            otherlv_1=(Token)match(input,22,FollowSets000.FOLLOW_16); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_1, grammarAccess.getSignalAccess().getColonEqualsSignKeyword_1_0_0_0());
                              					
                            }
                            // InternalSCEst.g:2807:6: ( (lv_initialValue_2_0= ruleExpression ) )
                            // InternalSCEst.g:2808:7: (lv_initialValue_2_0= ruleExpression )
                            {
                            // InternalSCEst.g:2808:7: (lv_initialValue_2_0= ruleExpression )
                            // InternalSCEst.g:2809:8: lv_initialValue_2_0= ruleExpression
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getSignalAccess().getInitialValueExpressionParserRuleCall_1_0_0_1_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_7);
                            lv_initialValue_2_0=ruleExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getSignalRule());
                              								}
                              								set(
                              									current,
                              									"initialValue",
                              									lv_initialValue_2_0,
                              									"de.cau.cs.kieler.esterel.Esterel.Expression");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }
                            break;

                    }

                    otherlv_3=(Token)match(input,18,FollowSets000.FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getSignalAccess().getColonKeyword_1_0_1());
                      				
                    }
                    // InternalSCEst.g:2831:5: ( ( (lv_type_4_0= ruleEsterelValueType ) ) | ( (lv_idType_5_0= RULE_ID ) ) | (otherlv_6= 'combine' ( ( (lv_type_7_0= ruleEsterelValueType ) ) | ( (lv_idType_8_0= RULE_ID ) ) ) otherlv_9= 'with' ( ( (otherlv_10= RULE_ID ) ) | ( (lv_combineOperator_11_0= ruleEsterelCombineOperator ) ) ) ) )
                    int alt58=3;
                    switch ( input.LA(1) ) {
                    case 131:
                    case 132:
                    case 133:
                    case 134:
                    case 135:
                    case 136:
                    case 137:
                    case 138:
                        {
                        alt58=1;
                        }
                        break;
                    case RULE_ID:
                        {
                        alt58=2;
                        }
                        break;
                    case 27:
                        {
                        alt58=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 58, 0, input);

                        throw nvae;
                    }

                    switch (alt58) {
                        case 1 :
                            // InternalSCEst.g:2832:6: ( (lv_type_4_0= ruleEsterelValueType ) )
                            {
                            // InternalSCEst.g:2832:6: ( (lv_type_4_0= ruleEsterelValueType ) )
                            // InternalSCEst.g:2833:7: (lv_type_4_0= ruleEsterelValueType )
                            {
                            // InternalSCEst.g:2833:7: (lv_type_4_0= ruleEsterelValueType )
                            // InternalSCEst.g:2834:8: lv_type_4_0= ruleEsterelValueType
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getSignalAccess().getTypeEsterelValueTypeEnumRuleCall_1_0_2_0_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_type_4_0=ruleEsterelValueType();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getSignalRule());
                              								}
                              								set(
                              									current,
                              									"type",
                              									lv_type_4_0,
                              									"de.cau.cs.kieler.esterel.Esterel.EsterelValueType");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalSCEst.g:2852:6: ( (lv_idType_5_0= RULE_ID ) )
                            {
                            // InternalSCEst.g:2852:6: ( (lv_idType_5_0= RULE_ID ) )
                            // InternalSCEst.g:2853:7: (lv_idType_5_0= RULE_ID )
                            {
                            // InternalSCEst.g:2853:7: (lv_idType_5_0= RULE_ID )
                            // InternalSCEst.g:2854:8: lv_idType_5_0= RULE_ID
                            {
                            lv_idType_5_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_idType_5_0, grammarAccess.getSignalAccess().getIdTypeIDTerminalRuleCall_1_0_2_1_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getSignalRule());
                              								}
                              								setWithLastConsumed(
                              									current,
                              									"idType",
                              									lv_idType_5_0,
                              									"de.cau.cs.kieler.annotations.Annotations.ID");
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalSCEst.g:2871:6: (otherlv_6= 'combine' ( ( (lv_type_7_0= ruleEsterelValueType ) ) | ( (lv_idType_8_0= RULE_ID ) ) ) otherlv_9= 'with' ( ( (otherlv_10= RULE_ID ) ) | ( (lv_combineOperator_11_0= ruleEsterelCombineOperator ) ) ) )
                            {
                            // InternalSCEst.g:2871:6: (otherlv_6= 'combine' ( ( (lv_type_7_0= ruleEsterelValueType ) ) | ( (lv_idType_8_0= RULE_ID ) ) ) otherlv_9= 'with' ( ( (otherlv_10= RULE_ID ) ) | ( (lv_combineOperator_11_0= ruleEsterelCombineOperator ) ) ) )
                            // InternalSCEst.g:2872:7: otherlv_6= 'combine' ( ( (lv_type_7_0= ruleEsterelValueType ) ) | ( (lv_idType_8_0= RULE_ID ) ) ) otherlv_9= 'with' ( ( (otherlv_10= RULE_ID ) ) | ( (lv_combineOperator_11_0= ruleEsterelCombineOperator ) ) )
                            {
                            otherlv_6=(Token)match(input,27,FollowSets000.FOLLOW_22); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_6, grammarAccess.getSignalAccess().getCombineKeyword_1_0_2_2_0());
                              						
                            }
                            // InternalSCEst.g:2876:7: ( ( (lv_type_7_0= ruleEsterelValueType ) ) | ( (lv_idType_8_0= RULE_ID ) ) )
                            int alt56=2;
                            int LA56_0 = input.LA(1);

                            if ( ((LA56_0>=131 && LA56_0<=138)) ) {
                                alt56=1;
                            }
                            else if ( (LA56_0==RULE_ID) ) {
                                alt56=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 56, 0, input);

                                throw nvae;
                            }
                            switch (alt56) {
                                case 1 :
                                    // InternalSCEst.g:2877:8: ( (lv_type_7_0= ruleEsterelValueType ) )
                                    {
                                    // InternalSCEst.g:2877:8: ( (lv_type_7_0= ruleEsterelValueType ) )
                                    // InternalSCEst.g:2878:9: (lv_type_7_0= ruleEsterelValueType )
                                    {
                                    // InternalSCEst.g:2878:9: (lv_type_7_0= ruleEsterelValueType )
                                    // InternalSCEst.g:2879:10: lv_type_7_0= ruleEsterelValueType
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getSignalAccess().getTypeEsterelValueTypeEnumRuleCall_1_0_2_2_1_0_0());
                                      									
                                    }
                                    pushFollow(FollowSets000.FOLLOW_23);
                                    lv_type_7_0=ruleEsterelValueType();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getSignalRule());
                                      										}
                                      										set(
                                      											current,
                                      											"type",
                                      											lv_type_7_0,
                                      											"de.cau.cs.kieler.esterel.Esterel.EsterelValueType");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalSCEst.g:2897:8: ( (lv_idType_8_0= RULE_ID ) )
                                    {
                                    // InternalSCEst.g:2897:8: ( (lv_idType_8_0= RULE_ID ) )
                                    // InternalSCEst.g:2898:9: (lv_idType_8_0= RULE_ID )
                                    {
                                    // InternalSCEst.g:2898:9: (lv_idType_8_0= RULE_ID )
                                    // InternalSCEst.g:2899:10: lv_idType_8_0= RULE_ID
                                    {
                                    lv_idType_8_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_23); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_idType_8_0, grammarAccess.getSignalAccess().getIdTypeIDTerminalRuleCall_1_0_2_2_1_1_0());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getSignalRule());
                                      										}
                                      										setWithLastConsumed(
                                      											current,
                                      											"idType",
                                      											lv_idType_8_0,
                                      											"de.cau.cs.kieler.annotations.Annotations.ID");
                                      									
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }

                            otherlv_9=(Token)match(input,28,FollowSets000.FOLLOW_41); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_9, grammarAccess.getSignalAccess().getWithKeyword_1_0_2_2_2());
                              						
                            }
                            // InternalSCEst.g:2920:7: ( ( (otherlv_10= RULE_ID ) ) | ( (lv_combineOperator_11_0= ruleEsterelCombineOperator ) ) )
                            int alt57=2;
                            int LA57_0 = input.LA(1);

                            if ( (LA57_0==RULE_ID) ) {
                                alt57=1;
                            }
                            else if ( ((LA57_0>=82 && LA57_0<=83)||(LA57_0>=92 && LA57_0<=93)||(LA57_0>=138 && LA57_0<=141)) ) {
                                alt57=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 57, 0, input);

                                throw nvae;
                            }
                            switch (alt57) {
                                case 1 :
                                    // InternalSCEst.g:2921:8: ( (otherlv_10= RULE_ID ) )
                                    {
                                    // InternalSCEst.g:2921:8: ( (otherlv_10= RULE_ID ) )
                                    // InternalSCEst.g:2922:9: (otherlv_10= RULE_ID )
                                    {
                                    // InternalSCEst.g:2922:9: (otherlv_10= RULE_ID )
                                    // InternalSCEst.g:2923:10: otherlv_10= RULE_ID
                                    {
                                    if ( state.backtracking==0 ) {

                                      										/* */
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getSignalRule());
                                      										}
                                      									
                                    }
                                    otherlv_10=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(otherlv_10, grammarAccess.getSignalAccess().getCombineFunctionFunctionCrossReference_1_0_2_2_3_0_0());
                                      									
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalSCEst.g:2938:8: ( (lv_combineOperator_11_0= ruleEsterelCombineOperator ) )
                                    {
                                    // InternalSCEst.g:2938:8: ( (lv_combineOperator_11_0= ruleEsterelCombineOperator ) )
                                    // InternalSCEst.g:2939:9: (lv_combineOperator_11_0= ruleEsterelCombineOperator )
                                    {
                                    // InternalSCEst.g:2939:9: (lv_combineOperator_11_0= ruleEsterelCombineOperator )
                                    // InternalSCEst.g:2940:10: lv_combineOperator_11_0= ruleEsterelCombineOperator
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getSignalAccess().getCombineOperatorEsterelCombineOperatorEnumRuleCall_1_0_2_2_3_1_0());
                                      									
                                    }
                                    pushFollow(FollowSets000.FOLLOW_2);
                                    lv_combineOperator_11_0=ruleEsterelCombineOperator();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getSignalRule());
                                      										}
                                      										set(
                                      											current,
                                      											"combineOperator",
                                      											lv_combineOperator_11_0,
                                      											"de.cau.cs.kieler.esterel.Esterel.EsterelCombineOperator");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCEst.g:2962:4: (otherlv_12= '(' (otherlv_13= ':=' ( (lv_initialValue_14_0= ruleExpression ) ) otherlv_15= ':' )? ( ( (lv_type_16_0= ruleEsterelValueType ) ) | ( (lv_idType_17_0= RULE_ID ) ) | (otherlv_18= 'combine' ( ( (lv_type_19_0= ruleEsterelValueType ) ) | ( (lv_idType_20_0= RULE_ID ) ) ) otherlv_21= 'with' ( ( (otherlv_22= RULE_ID ) ) | ( (lv_combineOperator_23_0= ruleEsterelCombineOperator ) ) ) ) ) otherlv_24= ')' )
                    {
                    // InternalSCEst.g:2962:4: (otherlv_12= '(' (otherlv_13= ':=' ( (lv_initialValue_14_0= ruleExpression ) ) otherlv_15= ':' )? ( ( (lv_type_16_0= ruleEsterelValueType ) ) | ( (lv_idType_17_0= RULE_ID ) ) | (otherlv_18= 'combine' ( ( (lv_type_19_0= ruleEsterelValueType ) ) | ( (lv_idType_20_0= RULE_ID ) ) ) otherlv_21= 'with' ( ( (otherlv_22= RULE_ID ) ) | ( (lv_combineOperator_23_0= ruleEsterelCombineOperator ) ) ) ) ) otherlv_24= ')' )
                    // InternalSCEst.g:2963:5: otherlv_12= '(' (otherlv_13= ':=' ( (lv_initialValue_14_0= ruleExpression ) ) otherlv_15= ':' )? ( ( (lv_type_16_0= ruleEsterelValueType ) ) | ( (lv_idType_17_0= RULE_ID ) ) | (otherlv_18= 'combine' ( ( (lv_type_19_0= ruleEsterelValueType ) ) | ( (lv_idType_20_0= RULE_ID ) ) ) otherlv_21= 'with' ( ( (otherlv_22= RULE_ID ) ) | ( (lv_combineOperator_23_0= ruleEsterelCombineOperator ) ) ) ) ) otherlv_24= ')'
                    {
                    otherlv_12=(Token)match(input,25,FollowSets000.FOLLOW_42); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_12, grammarAccess.getSignalAccess().getLeftParenthesisKeyword_1_1_0());
                      				
                    }
                    // InternalSCEst.g:2967:5: (otherlv_13= ':=' ( (lv_initialValue_14_0= ruleExpression ) ) otherlv_15= ':' )?
                    int alt59=2;
                    int LA59_0 = input.LA(1);

                    if ( (LA59_0==22) ) {
                        alt59=1;
                    }
                    switch (alt59) {
                        case 1 :
                            // InternalSCEst.g:2968:6: otherlv_13= ':=' ( (lv_initialValue_14_0= ruleExpression ) ) otherlv_15= ':'
                            {
                            otherlv_13=(Token)match(input,22,FollowSets000.FOLLOW_16); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_13, grammarAccess.getSignalAccess().getColonEqualsSignKeyword_1_1_1_0());
                              					
                            }
                            // InternalSCEst.g:2972:6: ( (lv_initialValue_14_0= ruleExpression ) )
                            // InternalSCEst.g:2973:7: (lv_initialValue_14_0= ruleExpression )
                            {
                            // InternalSCEst.g:2973:7: (lv_initialValue_14_0= ruleExpression )
                            // InternalSCEst.g:2974:8: lv_initialValue_14_0= ruleExpression
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getSignalAccess().getInitialValueExpressionParserRuleCall_1_1_1_1_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_7);
                            lv_initialValue_14_0=ruleExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getSignalRule());
                              								}
                              								set(
                              									current,
                              									"initialValue",
                              									lv_initialValue_14_0,
                              									"de.cau.cs.kieler.esterel.Esterel.Expression");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_15=(Token)match(input,18,FollowSets000.FOLLOW_29); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_15, grammarAccess.getSignalAccess().getColonKeyword_1_1_1_2());
                              					
                            }

                            }
                            break;

                    }

                    // InternalSCEst.g:2996:5: ( ( (lv_type_16_0= ruleEsterelValueType ) ) | ( (lv_idType_17_0= RULE_ID ) ) | (otherlv_18= 'combine' ( ( (lv_type_19_0= ruleEsterelValueType ) ) | ( (lv_idType_20_0= RULE_ID ) ) ) otherlv_21= 'with' ( ( (otherlv_22= RULE_ID ) ) | ( (lv_combineOperator_23_0= ruleEsterelCombineOperator ) ) ) ) )
                    int alt62=3;
                    switch ( input.LA(1) ) {
                    case 131:
                    case 132:
                    case 133:
                    case 134:
                    case 135:
                    case 136:
                    case 137:
                    case 138:
                        {
                        alt62=1;
                        }
                        break;
                    case RULE_ID:
                        {
                        alt62=2;
                        }
                        break;
                    case 27:
                        {
                        alt62=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 62, 0, input);

                        throw nvae;
                    }

                    switch (alt62) {
                        case 1 :
                            // InternalSCEst.g:2997:6: ( (lv_type_16_0= ruleEsterelValueType ) )
                            {
                            // InternalSCEst.g:2997:6: ( (lv_type_16_0= ruleEsterelValueType ) )
                            // InternalSCEst.g:2998:7: (lv_type_16_0= ruleEsterelValueType )
                            {
                            // InternalSCEst.g:2998:7: (lv_type_16_0= ruleEsterelValueType )
                            // InternalSCEst.g:2999:8: lv_type_16_0= ruleEsterelValueType
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getSignalAccess().getTypeEsterelValueTypeEnumRuleCall_1_1_2_0_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_20);
                            lv_type_16_0=ruleEsterelValueType();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getSignalRule());
                              								}
                              								set(
                              									current,
                              									"type",
                              									lv_type_16_0,
                              									"de.cau.cs.kieler.esterel.Esterel.EsterelValueType");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalSCEst.g:3017:6: ( (lv_idType_17_0= RULE_ID ) )
                            {
                            // InternalSCEst.g:3017:6: ( (lv_idType_17_0= RULE_ID ) )
                            // InternalSCEst.g:3018:7: (lv_idType_17_0= RULE_ID )
                            {
                            // InternalSCEst.g:3018:7: (lv_idType_17_0= RULE_ID )
                            // InternalSCEst.g:3019:8: lv_idType_17_0= RULE_ID
                            {
                            lv_idType_17_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_20); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_idType_17_0, grammarAccess.getSignalAccess().getIdTypeIDTerminalRuleCall_1_1_2_1_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getSignalRule());
                              								}
                              								setWithLastConsumed(
                              									current,
                              									"idType",
                              									lv_idType_17_0,
                              									"de.cau.cs.kieler.annotations.Annotations.ID");
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalSCEst.g:3036:6: (otherlv_18= 'combine' ( ( (lv_type_19_0= ruleEsterelValueType ) ) | ( (lv_idType_20_0= RULE_ID ) ) ) otherlv_21= 'with' ( ( (otherlv_22= RULE_ID ) ) | ( (lv_combineOperator_23_0= ruleEsterelCombineOperator ) ) ) )
                            {
                            // InternalSCEst.g:3036:6: (otherlv_18= 'combine' ( ( (lv_type_19_0= ruleEsterelValueType ) ) | ( (lv_idType_20_0= RULE_ID ) ) ) otherlv_21= 'with' ( ( (otherlv_22= RULE_ID ) ) | ( (lv_combineOperator_23_0= ruleEsterelCombineOperator ) ) ) )
                            // InternalSCEst.g:3037:7: otherlv_18= 'combine' ( ( (lv_type_19_0= ruleEsterelValueType ) ) | ( (lv_idType_20_0= RULE_ID ) ) ) otherlv_21= 'with' ( ( (otherlv_22= RULE_ID ) ) | ( (lv_combineOperator_23_0= ruleEsterelCombineOperator ) ) )
                            {
                            otherlv_18=(Token)match(input,27,FollowSets000.FOLLOW_22); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_18, grammarAccess.getSignalAccess().getCombineKeyword_1_1_2_2_0());
                              						
                            }
                            // InternalSCEst.g:3041:7: ( ( (lv_type_19_0= ruleEsterelValueType ) ) | ( (lv_idType_20_0= RULE_ID ) ) )
                            int alt60=2;
                            int LA60_0 = input.LA(1);

                            if ( ((LA60_0>=131 && LA60_0<=138)) ) {
                                alt60=1;
                            }
                            else if ( (LA60_0==RULE_ID) ) {
                                alt60=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 60, 0, input);

                                throw nvae;
                            }
                            switch (alt60) {
                                case 1 :
                                    // InternalSCEst.g:3042:8: ( (lv_type_19_0= ruleEsterelValueType ) )
                                    {
                                    // InternalSCEst.g:3042:8: ( (lv_type_19_0= ruleEsterelValueType ) )
                                    // InternalSCEst.g:3043:9: (lv_type_19_0= ruleEsterelValueType )
                                    {
                                    // InternalSCEst.g:3043:9: (lv_type_19_0= ruleEsterelValueType )
                                    // InternalSCEst.g:3044:10: lv_type_19_0= ruleEsterelValueType
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getSignalAccess().getTypeEsterelValueTypeEnumRuleCall_1_1_2_2_1_0_0());
                                      									
                                    }
                                    pushFollow(FollowSets000.FOLLOW_23);
                                    lv_type_19_0=ruleEsterelValueType();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getSignalRule());
                                      										}
                                      										set(
                                      											current,
                                      											"type",
                                      											lv_type_19_0,
                                      											"de.cau.cs.kieler.esterel.Esterel.EsterelValueType");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalSCEst.g:3062:8: ( (lv_idType_20_0= RULE_ID ) )
                                    {
                                    // InternalSCEst.g:3062:8: ( (lv_idType_20_0= RULE_ID ) )
                                    // InternalSCEst.g:3063:9: (lv_idType_20_0= RULE_ID )
                                    {
                                    // InternalSCEst.g:3063:9: (lv_idType_20_0= RULE_ID )
                                    // InternalSCEst.g:3064:10: lv_idType_20_0= RULE_ID
                                    {
                                    lv_idType_20_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_23); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_idType_20_0, grammarAccess.getSignalAccess().getIdTypeIDTerminalRuleCall_1_1_2_2_1_1_0());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getSignalRule());
                                      										}
                                      										setWithLastConsumed(
                                      											current,
                                      											"idType",
                                      											lv_idType_20_0,
                                      											"de.cau.cs.kieler.annotations.Annotations.ID");
                                      									
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }

                            otherlv_21=(Token)match(input,28,FollowSets000.FOLLOW_41); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_21, grammarAccess.getSignalAccess().getWithKeyword_1_1_2_2_2());
                              						
                            }
                            // InternalSCEst.g:3085:7: ( ( (otherlv_22= RULE_ID ) ) | ( (lv_combineOperator_23_0= ruleEsterelCombineOperator ) ) )
                            int alt61=2;
                            int LA61_0 = input.LA(1);

                            if ( (LA61_0==RULE_ID) ) {
                                alt61=1;
                            }
                            else if ( ((LA61_0>=82 && LA61_0<=83)||(LA61_0>=92 && LA61_0<=93)||(LA61_0>=138 && LA61_0<=141)) ) {
                                alt61=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 61, 0, input);

                                throw nvae;
                            }
                            switch (alt61) {
                                case 1 :
                                    // InternalSCEst.g:3086:8: ( (otherlv_22= RULE_ID ) )
                                    {
                                    // InternalSCEst.g:3086:8: ( (otherlv_22= RULE_ID ) )
                                    // InternalSCEst.g:3087:9: (otherlv_22= RULE_ID )
                                    {
                                    // InternalSCEst.g:3087:9: (otherlv_22= RULE_ID )
                                    // InternalSCEst.g:3088:10: otherlv_22= RULE_ID
                                    {
                                    if ( state.backtracking==0 ) {

                                      										/* */
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getSignalRule());
                                      										}
                                      									
                                    }
                                    otherlv_22=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_20); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(otherlv_22, grammarAccess.getSignalAccess().getCombineFunctionFunctionCrossReference_1_1_2_2_3_0_0());
                                      									
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalSCEst.g:3103:8: ( (lv_combineOperator_23_0= ruleEsterelCombineOperator ) )
                                    {
                                    // InternalSCEst.g:3103:8: ( (lv_combineOperator_23_0= ruleEsterelCombineOperator ) )
                                    // InternalSCEst.g:3104:9: (lv_combineOperator_23_0= ruleEsterelCombineOperator )
                                    {
                                    // InternalSCEst.g:3104:9: (lv_combineOperator_23_0= ruleEsterelCombineOperator )
                                    // InternalSCEst.g:3105:10: lv_combineOperator_23_0= ruleEsterelCombineOperator
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getSignalAccess().getCombineOperatorEsterelCombineOperatorEnumRuleCall_1_1_2_2_3_1_0());
                                      									
                                    }
                                    pushFollow(FollowSets000.FOLLOW_20);
                                    lv_combineOperator_23_0=ruleEsterelCombineOperator();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getSignalRule());
                                      										}
                                      										set(
                                      											current,
                                      											"combineOperator",
                                      											lv_combineOperator_23_0,
                                      											"de.cau.cs.kieler.esterel.Esterel.EsterelCombineOperator");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }

                    otherlv_24=(Token)match(input,26,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_24, grammarAccess.getSignalAccess().getRightParenthesisKeyword_1_1_3());
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSignal"


    // $ANTLR start "entryRuleSensorDeclaration"
    // InternalSCEst.g:3135:1: entryRuleSensorDeclaration returns [EObject current=null] : iv_ruleSensorDeclaration= ruleSensorDeclaration EOF ;
    public final EObject entryRuleSensorDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSensorDeclaration = null;


        try {
            // InternalSCEst.g:3135:58: (iv_ruleSensorDeclaration= ruleSensorDeclaration EOF )
            // InternalSCEst.g:3136:2: iv_ruleSensorDeclaration= ruleSensorDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSensorDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSensorDeclaration=ruleSensorDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSensorDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSensorDeclaration"


    // $ANTLR start "ruleSensorDeclaration"
    // InternalSCEst.g:3142:1: ruleSensorDeclaration returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'sensor' ( (lv_valuedObjects_2_0= ruleSensor ) ) (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleSensor ) ) )* otherlv_5= ';' ) ;
    public final EObject ruleSensorDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_valuedObjects_2_0 = null;

        EObject lv_valuedObjects_4_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:3148:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'sensor' ( (lv_valuedObjects_2_0= ruleSensor ) ) (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleSensor ) ) )* otherlv_5= ';' ) )
            // InternalSCEst.g:3149:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'sensor' ( (lv_valuedObjects_2_0= ruleSensor ) ) (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleSensor ) ) )* otherlv_5= ';' )
            {
            // InternalSCEst.g:3149:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'sensor' ( (lv_valuedObjects_2_0= ruleSensor ) ) (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleSensor ) ) )* otherlv_5= ';' )
            // InternalSCEst.g:3150:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'sensor' ( (lv_valuedObjects_2_0= ruleSensor ) ) (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleSensor ) ) )* otherlv_5= ';'
            {
            // InternalSCEst.g:3150:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop64:
            do {
                int alt64=2;
                int LA64_0 = input.LA(1);

                if ( (LA64_0==RULE_COMMENT_ANNOTATION||LA64_0==128) ) {
                    alt64=1;
                }


                switch (alt64) {
            	case 1 :
            	    // InternalSCEst.g:3151:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:3151:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCEst.g:3152:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSensorDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_43);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSensorDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop64;
                }
            } while (true);

            otherlv_1=(Token)match(input,41,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSensorDeclarationAccess().getSensorKeyword_1());
              		
            }
            // InternalSCEst.g:3173:3: ( (lv_valuedObjects_2_0= ruleSensor ) )
            // InternalSCEst.g:3174:4: (lv_valuedObjects_2_0= ruleSensor )
            {
            // InternalSCEst.g:3174:4: (lv_valuedObjects_2_0= ruleSensor )
            // InternalSCEst.g:3175:5: lv_valuedObjects_2_0= ruleSensor
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSensorDeclarationAccess().getValuedObjectsSensorParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_26);
            lv_valuedObjects_2_0=ruleSensor();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSensorDeclarationRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_2_0,
              						"de.cau.cs.kieler.esterel.Esterel.Sensor");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCEst.g:3192:3: (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleSensor ) ) )*
            loop65:
            do {
                int alt65=2;
                int LA65_0 = input.LA(1);

                if ( (LA65_0==30) ) {
                    alt65=1;
                }


                switch (alt65) {
            	case 1 :
            	    // InternalSCEst.g:3193:4: otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleSensor ) )
            	    {
            	    otherlv_3=(Token)match(input,30,FollowSets000.FOLLOW_6); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getSensorDeclarationAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalSCEst.g:3197:4: ( (lv_valuedObjects_4_0= ruleSensor ) )
            	    // InternalSCEst.g:3198:5: (lv_valuedObjects_4_0= ruleSensor )
            	    {
            	    // InternalSCEst.g:3198:5: (lv_valuedObjects_4_0= ruleSensor )
            	    // InternalSCEst.g:3199:6: lv_valuedObjects_4_0= ruleSensor
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getSensorDeclarationAccess().getValuedObjectsSensorParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_26);
            	    lv_valuedObjects_4_0=ruleSensor();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getSensorDeclarationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"valuedObjects",
            	      							lv_valuedObjects_4_0,
            	      							"de.cau.cs.kieler.esterel.Esterel.Sensor");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop65;
                }
            } while (true);

            otherlv_5=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getSensorDeclarationAccess().getSemicolonKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSensorDeclaration"


    // $ANTLR start "entryRuleSensor"
    // InternalSCEst.g:3225:1: entryRuleSensor returns [EObject current=null] : iv_ruleSensor= ruleSensor EOF ;
    public final EObject entryRuleSensor() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSensor = null;


        try {
            // InternalSCEst.g:3225:47: (iv_ruleSensor= ruleSensor EOF )
            // InternalSCEst.g:3226:2: iv_ruleSensor= ruleSensor EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSensorRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSensor=ruleSensor();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSensor; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSensor"


    // $ANTLR start "ruleSensor"
    // InternalSCEst.g:3232:1: ruleSensor returns [EObject current=null] : ( ( (lv_name_0_0= RULE_ID ) ) ( (otherlv_1= ':' ( (lv_type_2_0= ruleTypeIdentifier ) ) ) | (otherlv_3= '(' ( (lv_type_4_0= ruleTypeIdentifier ) ) otherlv_5= ')' ) )? ) ;
    public final EObject ruleSensor() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_type_2_0 = null;

        EObject lv_type_4_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:3238:2: ( ( ( (lv_name_0_0= RULE_ID ) ) ( (otherlv_1= ':' ( (lv_type_2_0= ruleTypeIdentifier ) ) ) | (otherlv_3= '(' ( (lv_type_4_0= ruleTypeIdentifier ) ) otherlv_5= ')' ) )? ) )
            // InternalSCEst.g:3239:2: ( ( (lv_name_0_0= RULE_ID ) ) ( (otherlv_1= ':' ( (lv_type_2_0= ruleTypeIdentifier ) ) ) | (otherlv_3= '(' ( (lv_type_4_0= ruleTypeIdentifier ) ) otherlv_5= ')' ) )? )
            {
            // InternalSCEst.g:3239:2: ( ( (lv_name_0_0= RULE_ID ) ) ( (otherlv_1= ':' ( (lv_type_2_0= ruleTypeIdentifier ) ) ) | (otherlv_3= '(' ( (lv_type_4_0= ruleTypeIdentifier ) ) otherlv_5= ')' ) )? )
            // InternalSCEst.g:3240:3: ( (lv_name_0_0= RULE_ID ) ) ( (otherlv_1= ':' ( (lv_type_2_0= ruleTypeIdentifier ) ) ) | (otherlv_3= '(' ( (lv_type_4_0= ruleTypeIdentifier ) ) otherlv_5= ')' ) )?
            {
            // InternalSCEst.g:3240:3: ( (lv_name_0_0= RULE_ID ) )
            // InternalSCEst.g:3241:4: (lv_name_0_0= RULE_ID )
            {
            // InternalSCEst.g:3241:4: (lv_name_0_0= RULE_ID )
            // InternalSCEst.g:3242:5: lv_name_0_0= RULE_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_44); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getSensorAccess().getNameIDTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSensorRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_0_0,
              						"de.cau.cs.kieler.annotations.Annotations.ID");
              				
            }

            }


            }

            // InternalSCEst.g:3258:3: ( (otherlv_1= ':' ( (lv_type_2_0= ruleTypeIdentifier ) ) ) | (otherlv_3= '(' ( (lv_type_4_0= ruleTypeIdentifier ) ) otherlv_5= ')' ) )?
            int alt66=3;
            int LA66_0 = input.LA(1);

            if ( (LA66_0==18) ) {
                alt66=1;
            }
            else if ( (LA66_0==25) ) {
                alt66=2;
            }
            switch (alt66) {
                case 1 :
                    // InternalSCEst.g:3259:4: (otherlv_1= ':' ( (lv_type_2_0= ruleTypeIdentifier ) ) )
                    {
                    // InternalSCEst.g:3259:4: (otherlv_1= ':' ( (lv_type_2_0= ruleTypeIdentifier ) ) )
                    // InternalSCEst.g:3260:5: otherlv_1= ':' ( (lv_type_2_0= ruleTypeIdentifier ) )
                    {
                    otherlv_1=(Token)match(input,18,FollowSets000.FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getSensorAccess().getColonKeyword_1_0_0());
                      				
                    }
                    // InternalSCEst.g:3264:5: ( (lv_type_2_0= ruleTypeIdentifier ) )
                    // InternalSCEst.g:3265:6: (lv_type_2_0= ruleTypeIdentifier )
                    {
                    // InternalSCEst.g:3265:6: (lv_type_2_0= ruleTypeIdentifier )
                    // InternalSCEst.g:3266:7: lv_type_2_0= ruleTypeIdentifier
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSensorAccess().getTypeTypeIdentifierParserRuleCall_1_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_type_2_0=ruleTypeIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSensorRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_2_0,
                      								"de.cau.cs.kieler.esterel.Esterel.TypeIdentifier");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCEst.g:3285:4: (otherlv_3= '(' ( (lv_type_4_0= ruleTypeIdentifier ) ) otherlv_5= ')' )
                    {
                    // InternalSCEst.g:3285:4: (otherlv_3= '(' ( (lv_type_4_0= ruleTypeIdentifier ) ) otherlv_5= ')' )
                    // InternalSCEst.g:3286:5: otherlv_3= '(' ( (lv_type_4_0= ruleTypeIdentifier ) ) otherlv_5= ')'
                    {
                    otherlv_3=(Token)match(input,25,FollowSets000.FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getSensorAccess().getLeftParenthesisKeyword_1_1_0());
                      				
                    }
                    // InternalSCEst.g:3290:5: ( (lv_type_4_0= ruleTypeIdentifier ) )
                    // InternalSCEst.g:3291:6: (lv_type_4_0= ruleTypeIdentifier )
                    {
                    // InternalSCEst.g:3291:6: (lv_type_4_0= ruleTypeIdentifier )
                    // InternalSCEst.g:3292:7: lv_type_4_0= ruleTypeIdentifier
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSensorAccess().getTypeTypeIdentifierParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_20);
                    lv_type_4_0=ruleTypeIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSensorRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_4_0,
                      								"de.cau.cs.kieler.esterel.Esterel.TypeIdentifier");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,26,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getSensorAccess().getRightParenthesisKeyword_1_1_2());
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSensor"


    // $ANTLR start "entryRuleRelationDeclaration"
    // InternalSCEst.g:3319:1: entryRuleRelationDeclaration returns [EObject current=null] : iv_ruleRelationDeclaration= ruleRelationDeclaration EOF ;
    public final EObject entryRuleRelationDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRelationDeclaration = null;


        try {
            // InternalSCEst.g:3319:60: (iv_ruleRelationDeclaration= ruleRelationDeclaration EOF )
            // InternalSCEst.g:3320:2: iv_ruleRelationDeclaration= ruleRelationDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRelationDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRelationDeclaration=ruleRelationDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRelationDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRelationDeclaration"


    // $ANTLR start "ruleRelationDeclaration"
    // InternalSCEst.g:3326:1: ruleRelationDeclaration returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'relation' ( (lv_relations_2_0= ruleRelation ) ) (otherlv_3= ',' ( (lv_relations_4_0= ruleRelation ) ) )* otherlv_5= ';' ) ;
    public final EObject ruleRelationDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_relations_2_0 = null;

        EObject lv_relations_4_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:3332:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'relation' ( (lv_relations_2_0= ruleRelation ) ) (otherlv_3= ',' ( (lv_relations_4_0= ruleRelation ) ) )* otherlv_5= ';' ) )
            // InternalSCEst.g:3333:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'relation' ( (lv_relations_2_0= ruleRelation ) ) (otherlv_3= ',' ( (lv_relations_4_0= ruleRelation ) ) )* otherlv_5= ';' )
            {
            // InternalSCEst.g:3333:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'relation' ( (lv_relations_2_0= ruleRelation ) ) (otherlv_3= ',' ( (lv_relations_4_0= ruleRelation ) ) )* otherlv_5= ';' )
            // InternalSCEst.g:3334:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'relation' ( (lv_relations_2_0= ruleRelation ) ) (otherlv_3= ',' ( (lv_relations_4_0= ruleRelation ) ) )* otherlv_5= ';'
            {
            // InternalSCEst.g:3334:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop67:
            do {
                int alt67=2;
                int LA67_0 = input.LA(1);

                if ( (LA67_0==RULE_COMMENT_ANNOTATION||LA67_0==128) ) {
                    alt67=1;
                }


                switch (alt67) {
            	case 1 :
            	    // InternalSCEst.g:3335:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:3335:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCEst.g:3336:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getRelationDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_45);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getRelationDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop67;
                }
            } while (true);

            otherlv_1=(Token)match(input,42,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getRelationDeclarationAccess().getRelationKeyword_1());
              		
            }
            // InternalSCEst.g:3357:3: ( (lv_relations_2_0= ruleRelation ) )
            // InternalSCEst.g:3358:4: (lv_relations_2_0= ruleRelation )
            {
            // InternalSCEst.g:3358:4: (lv_relations_2_0= ruleRelation )
            // InternalSCEst.g:3359:5: lv_relations_2_0= ruleRelation
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRelationDeclarationAccess().getRelationsRelationParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_26);
            lv_relations_2_0=ruleRelation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRelationDeclarationRule());
              					}
              					add(
              						current,
              						"relations",
              						lv_relations_2_0,
              						"de.cau.cs.kieler.esterel.Esterel.Relation");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCEst.g:3376:3: (otherlv_3= ',' ( (lv_relations_4_0= ruleRelation ) ) )*
            loop68:
            do {
                int alt68=2;
                int LA68_0 = input.LA(1);

                if ( (LA68_0==30) ) {
                    alt68=1;
                }


                switch (alt68) {
            	case 1 :
            	    // InternalSCEst.g:3377:4: otherlv_3= ',' ( (lv_relations_4_0= ruleRelation ) )
            	    {
            	    otherlv_3=(Token)match(input,30,FollowSets000.FOLLOW_6); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getRelationDeclarationAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalSCEst.g:3381:4: ( (lv_relations_4_0= ruleRelation ) )
            	    // InternalSCEst.g:3382:5: (lv_relations_4_0= ruleRelation )
            	    {
            	    // InternalSCEst.g:3382:5: (lv_relations_4_0= ruleRelation )
            	    // InternalSCEst.g:3383:6: lv_relations_4_0= ruleRelation
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getRelationDeclarationAccess().getRelationsRelationParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_26);
            	    lv_relations_4_0=ruleRelation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getRelationDeclarationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"relations",
            	      							lv_relations_4_0,
            	      							"de.cau.cs.kieler.esterel.Esterel.Relation");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop68;
                }
            } while (true);

            otherlv_5=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getRelationDeclarationAccess().getSemicolonKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRelationDeclaration"


    // $ANTLR start "entryRuleRelation"
    // InternalSCEst.g:3409:1: entryRuleRelation returns [EObject current=null] : iv_ruleRelation= ruleRelation EOF ;
    public final EObject entryRuleRelation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRelation = null;


        try {
            // InternalSCEst.g:3409:49: (iv_ruleRelation= ruleRelation EOF )
            // InternalSCEst.g:3410:2: iv_ruleRelation= ruleRelation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRelationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRelation=ruleRelation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRelation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRelation"


    // $ANTLR start "ruleRelation"
    // InternalSCEst.g:3416:1: ruleRelation returns [EObject current=null] : (this_RelationImplication_0= ruleRelationImplication | this_RelationIncompatibility_1= ruleRelationIncompatibility ) ;
    public final EObject ruleRelation() throws RecognitionException {
        EObject current = null;

        EObject this_RelationImplication_0 = null;

        EObject this_RelationIncompatibility_1 = null;



        	enterRule();

        try {
            // InternalSCEst.g:3422:2: ( (this_RelationImplication_0= ruleRelationImplication | this_RelationIncompatibility_1= ruleRelationIncompatibility ) )
            // InternalSCEst.g:3423:2: (this_RelationImplication_0= ruleRelationImplication | this_RelationIncompatibility_1= ruleRelationIncompatibility )
            {
            // InternalSCEst.g:3423:2: (this_RelationImplication_0= ruleRelationImplication | this_RelationIncompatibility_1= ruleRelationIncompatibility )
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( (LA69_0==RULE_ID) ) {
                int LA69_1 = input.LA(2);

                if ( (LA69_1==43) ) {
                    alt69=1;
                }
                else if ( (LA69_1==44) ) {
                    alt69=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 69, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 69, 0, input);

                throw nvae;
            }
            switch (alt69) {
                case 1 :
                    // InternalSCEst.g:3424:3: this_RelationImplication_0= ruleRelationImplication
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getRelationAccess().getRelationImplicationParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_RelationImplication_0=ruleRelationImplication();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_RelationImplication_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCEst.g:3436:3: this_RelationIncompatibility_1= ruleRelationIncompatibility
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getRelationAccess().getRelationIncompatibilityParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_RelationIncompatibility_1=ruleRelationIncompatibility();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_RelationIncompatibility_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRelation"


    // $ANTLR start "entryRuleRelationImplication"
    // InternalSCEst.g:3451:1: entryRuleRelationImplication returns [EObject current=null] : iv_ruleRelationImplication= ruleRelationImplication EOF ;
    public final EObject entryRuleRelationImplication() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRelationImplication = null;


        try {
            // InternalSCEst.g:3451:60: (iv_ruleRelationImplication= ruleRelationImplication EOF )
            // InternalSCEst.g:3452:2: iv_ruleRelationImplication= ruleRelationImplication EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRelationImplicationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRelationImplication=ruleRelationImplication();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRelationImplication; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRelationImplication"


    // $ANTLR start "ruleRelationImplication"
    // InternalSCEst.g:3458:1: ruleRelationImplication returns [EObject current=null] : ( ( (otherlv_0= RULE_ID ) ) ( (lv_type_1_0= '=>' ) ) ( (otherlv_2= RULE_ID ) ) ) ;
    public final EObject ruleRelationImplication() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_type_1_0=null;
        Token otherlv_2=null;


        	enterRule();

        try {
            // InternalSCEst.g:3464:2: ( ( ( (otherlv_0= RULE_ID ) ) ( (lv_type_1_0= '=>' ) ) ( (otherlv_2= RULE_ID ) ) ) )
            // InternalSCEst.g:3465:2: ( ( (otherlv_0= RULE_ID ) ) ( (lv_type_1_0= '=>' ) ) ( (otherlv_2= RULE_ID ) ) )
            {
            // InternalSCEst.g:3465:2: ( ( (otherlv_0= RULE_ID ) ) ( (lv_type_1_0= '=>' ) ) ( (otherlv_2= RULE_ID ) ) )
            // InternalSCEst.g:3466:3: ( (otherlv_0= RULE_ID ) ) ( (lv_type_1_0= '=>' ) ) ( (otherlv_2= RULE_ID ) )
            {
            // InternalSCEst.g:3466:3: ( (otherlv_0= RULE_ID ) )
            // InternalSCEst.g:3467:4: (otherlv_0= RULE_ID )
            {
            // InternalSCEst.g:3467:4: (otherlv_0= RULE_ID )
            // InternalSCEst.g:3468:5: otherlv_0= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getRelationImplicationRule());
              					}
              				
            }
            otherlv_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_46); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_0, grammarAccess.getRelationImplicationAccess().getFirstSignalCrossReference_0_0());
              				
            }

            }


            }

            // InternalSCEst.g:3482:3: ( (lv_type_1_0= '=>' ) )
            // InternalSCEst.g:3483:4: (lv_type_1_0= '=>' )
            {
            // InternalSCEst.g:3483:4: (lv_type_1_0= '=>' )
            // InternalSCEst.g:3484:5: lv_type_1_0= '=>'
            {
            lv_type_1_0=(Token)match(input,43,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_type_1_0, grammarAccess.getRelationImplicationAccess().getTypeEqualsSignGreaterThanSignKeyword_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getRelationImplicationRule());
              					}
              					setWithLastConsumed(current, "type", lv_type_1_0, "=>");
              				
            }

            }


            }

            // InternalSCEst.g:3496:3: ( (otherlv_2= RULE_ID ) )
            // InternalSCEst.g:3497:4: (otherlv_2= RULE_ID )
            {
            // InternalSCEst.g:3497:4: (otherlv_2= RULE_ID )
            // InternalSCEst.g:3498:5: otherlv_2= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getRelationImplicationRule());
              					}
              				
            }
            otherlv_2=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_2, grammarAccess.getRelationImplicationAccess().getSecondSignalCrossReference_2_0());
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRelationImplication"


    // $ANTLR start "entryRuleRelationIncompatibility"
    // InternalSCEst.g:3516:1: entryRuleRelationIncompatibility returns [EObject current=null] : iv_ruleRelationIncompatibility= ruleRelationIncompatibility EOF ;
    public final EObject entryRuleRelationIncompatibility() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRelationIncompatibility = null;


        try {
            // InternalSCEst.g:3516:64: (iv_ruleRelationIncompatibility= ruleRelationIncompatibility EOF )
            // InternalSCEst.g:3517:2: iv_ruleRelationIncompatibility= ruleRelationIncompatibility EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRelationIncompatibilityRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRelationIncompatibility=ruleRelationIncompatibility();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRelationIncompatibility; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRelationIncompatibility"


    // $ANTLR start "ruleRelationIncompatibility"
    // InternalSCEst.g:3523:1: ruleRelationIncompatibility returns [EObject current=null] : ( ( (otherlv_0= RULE_ID ) ) ( (lv_type_1_0= '#' ) ) ( (otherlv_2= RULE_ID ) ) (otherlv_3= '#' ( (otherlv_4= RULE_ID ) ) )* ) ;
    public final EObject ruleRelationIncompatibility() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_type_1_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;


        	enterRule();

        try {
            // InternalSCEst.g:3529:2: ( ( ( (otherlv_0= RULE_ID ) ) ( (lv_type_1_0= '#' ) ) ( (otherlv_2= RULE_ID ) ) (otherlv_3= '#' ( (otherlv_4= RULE_ID ) ) )* ) )
            // InternalSCEst.g:3530:2: ( ( (otherlv_0= RULE_ID ) ) ( (lv_type_1_0= '#' ) ) ( (otherlv_2= RULE_ID ) ) (otherlv_3= '#' ( (otherlv_4= RULE_ID ) ) )* )
            {
            // InternalSCEst.g:3530:2: ( ( (otherlv_0= RULE_ID ) ) ( (lv_type_1_0= '#' ) ) ( (otherlv_2= RULE_ID ) ) (otherlv_3= '#' ( (otherlv_4= RULE_ID ) ) )* )
            // InternalSCEst.g:3531:3: ( (otherlv_0= RULE_ID ) ) ( (lv_type_1_0= '#' ) ) ( (otherlv_2= RULE_ID ) ) (otherlv_3= '#' ( (otherlv_4= RULE_ID ) ) )*
            {
            // InternalSCEst.g:3531:3: ( (otherlv_0= RULE_ID ) )
            // InternalSCEst.g:3532:4: (otherlv_0= RULE_ID )
            {
            // InternalSCEst.g:3532:4: (otherlv_0= RULE_ID )
            // InternalSCEst.g:3533:5: otherlv_0= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getRelationIncompatibilityRule());
              					}
              				
            }
            otherlv_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_47); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_0, grammarAccess.getRelationIncompatibilityAccess().getIncompSignalCrossReference_0_0());
              				
            }

            }


            }

            // InternalSCEst.g:3547:3: ( (lv_type_1_0= '#' ) )
            // InternalSCEst.g:3548:4: (lv_type_1_0= '#' )
            {
            // InternalSCEst.g:3548:4: (lv_type_1_0= '#' )
            // InternalSCEst.g:3549:5: lv_type_1_0= '#'
            {
            lv_type_1_0=(Token)match(input,44,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_type_1_0, grammarAccess.getRelationIncompatibilityAccess().getTypeNumberSignKeyword_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getRelationIncompatibilityRule());
              					}
              					setWithLastConsumed(current, "type", lv_type_1_0, "#");
              				
            }

            }


            }

            // InternalSCEst.g:3561:3: ( (otherlv_2= RULE_ID ) )
            // InternalSCEst.g:3562:4: (otherlv_2= RULE_ID )
            {
            // InternalSCEst.g:3562:4: (otherlv_2= RULE_ID )
            // InternalSCEst.g:3563:5: otherlv_2= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getRelationIncompatibilityRule());
              					}
              				
            }
            otherlv_2=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_48); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_2, grammarAccess.getRelationIncompatibilityAccess().getIncompSignalCrossReference_2_0());
              				
            }

            }


            }

            // InternalSCEst.g:3577:3: (otherlv_3= '#' ( (otherlv_4= RULE_ID ) ) )*
            loop70:
            do {
                int alt70=2;
                int LA70_0 = input.LA(1);

                if ( (LA70_0==44) ) {
                    alt70=1;
                }


                switch (alt70) {
            	case 1 :
            	    // InternalSCEst.g:3578:4: otherlv_3= '#' ( (otherlv_4= RULE_ID ) )
            	    {
            	    otherlv_3=(Token)match(input,44,FollowSets000.FOLLOW_6); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getRelationIncompatibilityAccess().getNumberSignKeyword_3_0());
            	      			
            	    }
            	    // InternalSCEst.g:3582:4: ( (otherlv_4= RULE_ID ) )
            	    // InternalSCEst.g:3583:5: (otherlv_4= RULE_ID )
            	    {
            	    // InternalSCEst.g:3583:5: (otherlv_4= RULE_ID )
            	    // InternalSCEst.g:3584:6: otherlv_4= RULE_ID
            	    {
            	    if ( state.backtracking==0 ) {

            	      						/* */
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getRelationIncompatibilityRule());
            	      						}
            	      					
            	    }
            	    otherlv_4=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_48); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(otherlv_4, grammarAccess.getRelationIncompatibilityAccess().getIncompSignalCrossReference_3_1_0());
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop70;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRelationIncompatibility"


    // $ANTLR start "entrySuperInstructionStatement"
    // InternalSCEst.g:3603:1: entrySuperInstructionStatement returns [EObject current=null] : iv_superInstructionStatement= superInstructionStatement EOF ;
    public final EObject entrySuperInstructionStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_superInstructionStatement = null;


        try {
            // InternalSCEst.g:3603:62: (iv_superInstructionStatement= superInstructionStatement EOF )
            // InternalSCEst.g:3604:2: iv_superInstructionStatement= superInstructionStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEsterelInstructionStatementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_superInstructionStatement=superInstructionStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_superInstructionStatement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entrySuperInstructionStatement"


    // $ANTLR start "superInstructionStatement"
    // InternalSCEst.g:3610:1: superInstructionStatement returns [EObject current=null] : (this_Nothing_0= ruleNothing | this_EsterelPause_1= ruleEsterelPause | this_Halt_2= ruleHalt | this_Emit_3= ruleEmit | this_Exit_4= ruleExit | this_Present_5= rulePresent | this_Await_6= ruleAwait | this_EsterelAssignment_7= ruleEsterelAssignment | this_Abort_8= ruleAbort | this_Loop_9= ruleLoop | this_EveryDo_10= ruleEveryDo | this_Sustain_11= ruleSustain | this_Trap_12= ruleTrap | this_Suspend_13= ruleSuspend | this_LocalSignalDeclaration_14= ruleLocalSignalDeclaration | this_LocalVariableDeclaration_15= ruleLocalVariableDeclaration | this_IfTest_16= ruleIfTest | this_Exec_17= ruleExec | this_Run_18= ruleRun | this_ProcedureCall_19= ruleProcedureCall | this_Repeat_20= ruleRepeat | this_Block_21= ruleBlock | this_LegacyDo_22= ruleLegacyDo ) ;
    public final EObject superInstructionStatement() throws RecognitionException {
        EObject current = null;

        EObject this_Nothing_0 = null;

        EObject this_EsterelPause_1 = null;

        EObject this_Halt_2 = null;

        EObject this_Emit_3 = null;

        EObject this_Exit_4 = null;

        EObject this_Present_5 = null;

        EObject this_Await_6 = null;

        EObject this_EsterelAssignment_7 = null;

        EObject this_Abort_8 = null;

        EObject this_Loop_9 = null;

        EObject this_EveryDo_10 = null;

        EObject this_Sustain_11 = null;

        EObject this_Trap_12 = null;

        EObject this_Suspend_13 = null;

        EObject this_LocalSignalDeclaration_14 = null;

        EObject this_LocalVariableDeclaration_15 = null;

        EObject this_IfTest_16 = null;

        EObject this_Exec_17 = null;

        EObject this_Run_18 = null;

        EObject this_ProcedureCall_19 = null;

        EObject this_Repeat_20 = null;

        EObject this_Block_21 = null;

        EObject this_LegacyDo_22 = null;



        	enterRule();

        try {
            // InternalSCEst.g:3616:2: ( (this_Nothing_0= ruleNothing | this_EsterelPause_1= ruleEsterelPause | this_Halt_2= ruleHalt | this_Emit_3= ruleEmit | this_Exit_4= ruleExit | this_Present_5= rulePresent | this_Await_6= ruleAwait | this_EsterelAssignment_7= ruleEsterelAssignment | this_Abort_8= ruleAbort | this_Loop_9= ruleLoop | this_EveryDo_10= ruleEveryDo | this_Sustain_11= ruleSustain | this_Trap_12= ruleTrap | this_Suspend_13= ruleSuspend | this_LocalSignalDeclaration_14= ruleLocalSignalDeclaration | this_LocalVariableDeclaration_15= ruleLocalVariableDeclaration | this_IfTest_16= ruleIfTest | this_Exec_17= ruleExec | this_Run_18= ruleRun | this_ProcedureCall_19= ruleProcedureCall | this_Repeat_20= ruleRepeat | this_Block_21= ruleBlock | this_LegacyDo_22= ruleLegacyDo ) )
            // InternalSCEst.g:3617:2: (this_Nothing_0= ruleNothing | this_EsterelPause_1= ruleEsterelPause | this_Halt_2= ruleHalt | this_Emit_3= ruleEmit | this_Exit_4= ruleExit | this_Present_5= rulePresent | this_Await_6= ruleAwait | this_EsterelAssignment_7= ruleEsterelAssignment | this_Abort_8= ruleAbort | this_Loop_9= ruleLoop | this_EveryDo_10= ruleEveryDo | this_Sustain_11= ruleSustain | this_Trap_12= ruleTrap | this_Suspend_13= ruleSuspend | this_LocalSignalDeclaration_14= ruleLocalSignalDeclaration | this_LocalVariableDeclaration_15= ruleLocalVariableDeclaration | this_IfTest_16= ruleIfTest | this_Exec_17= ruleExec | this_Run_18= ruleRun | this_ProcedureCall_19= ruleProcedureCall | this_Repeat_20= ruleRepeat | this_Block_21= ruleBlock | this_LegacyDo_22= ruleLegacyDo )
            {
            // InternalSCEst.g:3617:2: (this_Nothing_0= ruleNothing | this_EsterelPause_1= ruleEsterelPause | this_Halt_2= ruleHalt | this_Emit_3= ruleEmit | this_Exit_4= ruleExit | this_Present_5= rulePresent | this_Await_6= ruleAwait | this_EsterelAssignment_7= ruleEsterelAssignment | this_Abort_8= ruleAbort | this_Loop_9= ruleLoop | this_EveryDo_10= ruleEveryDo | this_Sustain_11= ruleSustain | this_Trap_12= ruleTrap | this_Suspend_13= ruleSuspend | this_LocalSignalDeclaration_14= ruleLocalSignalDeclaration | this_LocalVariableDeclaration_15= ruleLocalVariableDeclaration | this_IfTest_16= ruleIfTest | this_Exec_17= ruleExec | this_Run_18= ruleRun | this_ProcedureCall_19= ruleProcedureCall | this_Repeat_20= ruleRepeat | this_Block_21= ruleBlock | this_LegacyDo_22= ruleLegacyDo )
            int alt71=23;
            alt71 = dfa71.predict(input);
            switch (alt71) {
                case 1 :
                    // InternalSCEst.g:3618:3: this_Nothing_0= ruleNothing
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEsterelInstructionStatementAccess().getNothingParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Nothing_0=ruleNothing();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Nothing_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCEst.g:3630:3: this_EsterelPause_1= ruleEsterelPause
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEsterelInstructionStatementAccess().getEsterelPauseParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_EsterelPause_1=ruleEsterelPause();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EsterelPause_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCEst.g:3642:3: this_Halt_2= ruleHalt
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEsterelInstructionStatementAccess().getHaltParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Halt_2=ruleHalt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Halt_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSCEst.g:3654:3: this_Emit_3= ruleEmit
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEsterelInstructionStatementAccess().getEmitParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Emit_3=ruleEmit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Emit_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalSCEst.g:3666:3: this_Exit_4= ruleExit
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEsterelInstructionStatementAccess().getExitParserRuleCall_4());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Exit_4=ruleExit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Exit_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalSCEst.g:3678:3: this_Present_5= rulePresent
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEsterelInstructionStatementAccess().getPresentParserRuleCall_5());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Present_5=rulePresent();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Present_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalSCEst.g:3690:3: this_Await_6= ruleAwait
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEsterelInstructionStatementAccess().getAwaitParserRuleCall_6());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Await_6=ruleAwait();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Await_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalSCEst.g:3702:3: this_EsterelAssignment_7= ruleEsterelAssignment
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEsterelInstructionStatementAccess().getEsterelAssignmentParserRuleCall_7());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_EsterelAssignment_7=ruleEsterelAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EsterelAssignment_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalSCEst.g:3714:3: this_Abort_8= ruleAbort
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEsterelInstructionStatementAccess().getAbortParserRuleCall_8());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Abort_8=ruleAbort();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Abort_8;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalSCEst.g:3726:3: this_Loop_9= ruleLoop
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEsterelInstructionStatementAccess().getLoopParserRuleCall_9());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Loop_9=ruleLoop();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Loop_9;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 11 :
                    // InternalSCEst.g:3738:3: this_EveryDo_10= ruleEveryDo
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEsterelInstructionStatementAccess().getEveryDoParserRuleCall_10());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_EveryDo_10=ruleEveryDo();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EveryDo_10;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 12 :
                    // InternalSCEst.g:3750:3: this_Sustain_11= ruleSustain
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEsterelInstructionStatementAccess().getSustainParserRuleCall_11());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Sustain_11=ruleSustain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Sustain_11;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 13 :
                    // InternalSCEst.g:3762:3: this_Trap_12= ruleTrap
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEsterelInstructionStatementAccess().getTrapParserRuleCall_12());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Trap_12=ruleTrap();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Trap_12;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 14 :
                    // InternalSCEst.g:3774:3: this_Suspend_13= ruleSuspend
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEsterelInstructionStatementAccess().getSuspendParserRuleCall_13());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Suspend_13=ruleSuspend();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Suspend_13;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 15 :
                    // InternalSCEst.g:3786:3: this_LocalSignalDeclaration_14= ruleLocalSignalDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEsterelInstructionStatementAccess().getLocalSignalDeclarationParserRuleCall_14());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_LocalSignalDeclaration_14=ruleLocalSignalDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LocalSignalDeclaration_14;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 16 :
                    // InternalSCEst.g:3798:3: this_LocalVariableDeclaration_15= ruleLocalVariableDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEsterelInstructionStatementAccess().getLocalVariableDeclarationParserRuleCall_15());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_LocalVariableDeclaration_15=ruleLocalVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LocalVariableDeclaration_15;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 17 :
                    // InternalSCEst.g:3810:3: this_IfTest_16= ruleIfTest
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEsterelInstructionStatementAccess().getIfTestParserRuleCall_16());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_IfTest_16=ruleIfTest();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_IfTest_16;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 18 :
                    // InternalSCEst.g:3822:3: this_Exec_17= ruleExec
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEsterelInstructionStatementAccess().getExecParserRuleCall_17());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Exec_17=ruleExec();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Exec_17;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 19 :
                    // InternalSCEst.g:3834:3: this_Run_18= ruleRun
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEsterelInstructionStatementAccess().getRunParserRuleCall_18());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Run_18=ruleRun();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Run_18;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 20 :
                    // InternalSCEst.g:3846:3: this_ProcedureCall_19= ruleProcedureCall
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEsterelInstructionStatementAccess().getProcedureCallParserRuleCall_19());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ProcedureCall_19=ruleProcedureCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ProcedureCall_19;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 21 :
                    // InternalSCEst.g:3858:3: this_Repeat_20= ruleRepeat
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEsterelInstructionStatementAccess().getRepeatParserRuleCall_20());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Repeat_20=ruleRepeat();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Repeat_20;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 22 :
                    // InternalSCEst.g:3870:3: this_Block_21= ruleBlock
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEsterelInstructionStatementAccess().getBlockParserRuleCall_21());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Block_21=ruleBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Block_21;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 23 :
                    // InternalSCEst.g:3882:3: this_LegacyDo_22= ruleLegacyDo
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEsterelInstructionStatementAccess().getLegacyDoParserRuleCall_22());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_LegacyDo_22=ruleLegacyDo();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LegacyDo_22;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "superInstructionStatement"


    // $ANTLR start "entryRuleEsterelParallel"
    // InternalSCEst.g:3897:1: entryRuleEsterelParallel returns [EObject current=null] : iv_ruleEsterelParallel= ruleEsterelParallel EOF ;
    public final EObject entryRuleEsterelParallel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEsterelParallel = null;


        try {
            // InternalSCEst.g:3897:56: (iv_ruleEsterelParallel= ruleEsterelParallel EOF )
            // InternalSCEst.g:3898:2: iv_ruleEsterelParallel= ruleEsterelParallel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEsterelParallelRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEsterelParallel=ruleEsterelParallel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEsterelParallel; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEsterelParallel"


    // $ANTLR start "ruleEsterelParallel"
    // InternalSCEst.g:3904:1: ruleEsterelParallel returns [EObject current=null] : (this_EsterelThread_0= ruleEsterelThread ( () ( ( ( '||' )=>otherlv_2= '||' ) ( (lv_statements_3_0= ruleEsterelThread ) ) )+ )? ) ;
    public final EObject ruleEsterelParallel() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_EsterelThread_0 = null;

        EObject lv_statements_3_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:3910:2: ( (this_EsterelThread_0= ruleEsterelThread ( () ( ( ( '||' )=>otherlv_2= '||' ) ( (lv_statements_3_0= ruleEsterelThread ) ) )+ )? ) )
            // InternalSCEst.g:3911:2: (this_EsterelThread_0= ruleEsterelThread ( () ( ( ( '||' )=>otherlv_2= '||' ) ( (lv_statements_3_0= ruleEsterelThread ) ) )+ )? )
            {
            // InternalSCEst.g:3911:2: (this_EsterelThread_0= ruleEsterelThread ( () ( ( ( '||' )=>otherlv_2= '||' ) ( (lv_statements_3_0= ruleEsterelThread ) ) )+ )? )
            // InternalSCEst.g:3912:3: this_EsterelThread_0= ruleEsterelThread ( () ( ( ( '||' )=>otherlv_2= '||' ) ( (lv_statements_3_0= ruleEsterelThread ) ) )+ )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getEsterelParallelAccess().getEsterelThreadParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_49);
            this_EsterelThread_0=ruleEsterelThread();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_EsterelThread_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCEst.g:3923:3: ( () ( ( ( '||' )=>otherlv_2= '||' ) ( (lv_statements_3_0= ruleEsterelThread ) ) )+ )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==45) ) {
                alt73=1;
            }
            switch (alt73) {
                case 1 :
                    // InternalSCEst.g:3924:4: () ( ( ( '||' )=>otherlv_2= '||' ) ( (lv_statements_3_0= ruleEsterelThread ) ) )+
                    {
                    // InternalSCEst.g:3924:4: ()
                    // InternalSCEst.g:3925:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getEsterelParallelAccess().getEsterelParallelStatementsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCEst.g:3934:4: ( ( ( '||' )=>otherlv_2= '||' ) ( (lv_statements_3_0= ruleEsterelThread ) ) )+
                    int cnt72=0;
                    loop72:
                    do {
                        int alt72=2;
                        int LA72_0 = input.LA(1);

                        if ( (LA72_0==45) ) {
                            alt72=1;
                        }


                        switch (alt72) {
                    	case 1 :
                    	    // InternalSCEst.g:3935:5: ( ( '||' )=>otherlv_2= '||' ) ( (lv_statements_3_0= ruleEsterelThread ) )
                    	    {
                    	    // InternalSCEst.g:3935:5: ( ( '||' )=>otherlv_2= '||' )
                    	    // InternalSCEst.g:3936:6: ( '||' )=>otherlv_2= '||'
                    	    {
                    	    otherlv_2=(Token)match(input,45,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_2, grammarAccess.getEsterelParallelAccess().getVerticalLineVerticalLineKeyword_1_1_0());
                    	      					
                    	    }

                    	    }

                    	    // InternalSCEst.g:3942:5: ( (lv_statements_3_0= ruleEsterelThread ) )
                    	    // InternalSCEst.g:3943:6: (lv_statements_3_0= ruleEsterelThread )
                    	    {
                    	    // InternalSCEst.g:3943:6: (lv_statements_3_0= ruleEsterelThread )
                    	    // InternalSCEst.g:3944:7: lv_statements_3_0= ruleEsterelThread
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getEsterelParallelAccess().getStatementsEsterelThreadParserRuleCall_1_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_49);
                    	    lv_statements_3_0=ruleEsterelThread();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getEsterelParallelRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"statements",
                    	      								lv_statements_3_0,
                    	      								"de.cau.cs.kieler.esterel.scest.SCEst.EsterelThread");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt72 >= 1 ) break loop72;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(72, input);
                                throw eee;
                        }
                        cnt72++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEsterelParallel"


    // $ANTLR start "entryRuleNothing"
    // InternalSCEst.g:3967:1: entryRuleNothing returns [EObject current=null] : iv_ruleNothing= ruleNothing EOF ;
    public final EObject entryRuleNothing() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNothing = null;


        try {
            // InternalSCEst.g:3967:48: (iv_ruleNothing= ruleNothing EOF )
            // InternalSCEst.g:3968:2: iv_ruleNothing= ruleNothing EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNothingRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNothing=ruleNothing();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNothing; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNothing"


    // $ANTLR start "ruleNothing"
    // InternalSCEst.g:3974:1: ruleNothing returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'nothing' ) ;
    public final EObject ruleNothing() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_annotations_1_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:3980:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'nothing' ) )
            // InternalSCEst.g:3981:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'nothing' )
            {
            // InternalSCEst.g:3981:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'nothing' )
            // InternalSCEst.g:3982:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'nothing'
            {
            // InternalSCEst.g:3982:3: ()
            // InternalSCEst.g:3983:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getNothingAccess().getNothingAction_0(),
              					current);
              			
            }

            }

            // InternalSCEst.g:3992:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop74:
            do {
                int alt74=2;
                int LA74_0 = input.LA(1);

                if ( (LA74_0==RULE_COMMENT_ANNOTATION||LA74_0==128) ) {
                    alt74=1;
                }


                switch (alt74) {
            	case 1 :
            	    // InternalSCEst.g:3993:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:3993:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCEst.g:3994:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getNothingAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_50);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getNothingRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop74;
                }
            } while (true);

            otherlv_2=(Token)match(input,46,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getNothingAccess().getNothingKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNothing"


    // $ANTLR start "entryRuleEsterelPause"
    // InternalSCEst.g:4019:1: entryRuleEsterelPause returns [EObject current=null] : iv_ruleEsterelPause= ruleEsterelPause EOF ;
    public final EObject entryRuleEsterelPause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEsterelPause = null;


        try {
            // InternalSCEst.g:4019:53: (iv_ruleEsterelPause= ruleEsterelPause EOF )
            // InternalSCEst.g:4020:2: iv_ruleEsterelPause= ruleEsterelPause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEsterelPauseRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEsterelPause=ruleEsterelPause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEsterelPause; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEsterelPause"


    // $ANTLR start "ruleEsterelPause"
    // InternalSCEst.g:4026:1: ruleEsterelPause returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'pause' ) ;
    public final EObject ruleEsterelPause() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_annotations_1_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:4032:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'pause' ) )
            // InternalSCEst.g:4033:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'pause' )
            {
            // InternalSCEst.g:4033:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'pause' )
            // InternalSCEst.g:4034:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'pause'
            {
            // InternalSCEst.g:4034:3: ()
            // InternalSCEst.g:4035:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getEsterelPauseAccess().getPauseAction_0(),
              					current);
              			
            }

            }

            // InternalSCEst.g:4044:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop75:
            do {
                int alt75=2;
                int LA75_0 = input.LA(1);

                if ( (LA75_0==RULE_COMMENT_ANNOTATION||LA75_0==128) ) {
                    alt75=1;
                }


                switch (alt75) {
            	case 1 :
            	    // InternalSCEst.g:4045:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:4045:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCEst.g:4046:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getEsterelPauseAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_51);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getEsterelPauseRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop75;
                }
            } while (true);

            otherlv_2=(Token)match(input,47,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getEsterelPauseAccess().getPauseKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEsterelPause"


    // $ANTLR start "entryRuleHalt"
    // InternalSCEst.g:4071:1: entryRuleHalt returns [EObject current=null] : iv_ruleHalt= ruleHalt EOF ;
    public final EObject entryRuleHalt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleHalt = null;


        try {
            // InternalSCEst.g:4071:45: (iv_ruleHalt= ruleHalt EOF )
            // InternalSCEst.g:4072:2: iv_ruleHalt= ruleHalt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getHaltRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleHalt=ruleHalt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleHalt; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleHalt"


    // $ANTLR start "ruleHalt"
    // InternalSCEst.g:4078:1: ruleHalt returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'halt' ) ;
    public final EObject ruleHalt() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_annotations_1_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:4084:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'halt' ) )
            // InternalSCEst.g:4085:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'halt' )
            {
            // InternalSCEst.g:4085:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'halt' )
            // InternalSCEst.g:4086:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'halt'
            {
            // InternalSCEst.g:4086:3: ()
            // InternalSCEst.g:4087:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getHaltAccess().getHaltAction_0(),
              					current);
              			
            }

            }

            // InternalSCEst.g:4096:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop76:
            do {
                int alt76=2;
                int LA76_0 = input.LA(1);

                if ( (LA76_0==RULE_COMMENT_ANNOTATION||LA76_0==128) ) {
                    alt76=1;
                }


                switch (alt76) {
            	case 1 :
            	    // InternalSCEst.g:4097:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:4097:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCEst.g:4098:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getHaltAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_52);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getHaltRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop76;
                }
            } while (true);

            otherlv_2=(Token)match(input,48,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getHaltAccess().getHaltKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleHalt"


    // $ANTLR start "entryRuleBlock"
    // InternalSCEst.g:4123:1: entryRuleBlock returns [EObject current=null] : iv_ruleBlock= ruleBlock EOF ;
    public final EObject entryRuleBlock() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBlock = null;


        try {
            // InternalSCEst.g:4123:46: (iv_ruleBlock= ruleBlock EOF )
            // InternalSCEst.g:4124:2: iv_ruleBlock= ruleBlock EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBlockRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBlock=ruleBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBlock; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBlock"


    // $ANTLR start "ruleBlock"
    // InternalSCEst.g:4130:1: ruleBlock returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '[' ( (lv_statements_3_0= ruleEsterelParallel ) ) otherlv_4= ']' ) ;
    public final EObject ruleBlock() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_annotations_1_0 = null;

        EObject lv_statements_3_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:4136:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '[' ( (lv_statements_3_0= ruleEsterelParallel ) ) otherlv_4= ']' ) )
            // InternalSCEst.g:4137:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '[' ( (lv_statements_3_0= ruleEsterelParallel ) ) otherlv_4= ']' )
            {
            // InternalSCEst.g:4137:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '[' ( (lv_statements_3_0= ruleEsterelParallel ) ) otherlv_4= ']' )
            // InternalSCEst.g:4138:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '[' ( (lv_statements_3_0= ruleEsterelParallel ) ) otherlv_4= ']'
            {
            // InternalSCEst.g:4138:3: ()
            // InternalSCEst.g:4139:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getBlockAccess().getBlockAction_0(),
              					current);
              			
            }

            }

            // InternalSCEst.g:4148:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop77:
            do {
                int alt77=2;
                int LA77_0 = input.LA(1);

                if ( (LA77_0==RULE_COMMENT_ANNOTATION||LA77_0==128) ) {
                    alt77=1;
                }


                switch (alt77) {
            	case 1 :
            	    // InternalSCEst.g:4149:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:4149:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCEst.g:4150:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getBlockAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_53);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getBlockRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop77;
                }
            } while (true);

            otherlv_2=(Token)match(input,49,FollowSets000.FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getBlockAccess().getLeftSquareBracketKeyword_2());
              		
            }
            // InternalSCEst.g:4171:3: ( (lv_statements_3_0= ruleEsterelParallel ) )
            // InternalSCEst.g:4172:4: (lv_statements_3_0= ruleEsterelParallel )
            {
            // InternalSCEst.g:4172:4: (lv_statements_3_0= ruleEsterelParallel )
            // InternalSCEst.g:4173:5: lv_statements_3_0= ruleEsterelParallel
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getBlockAccess().getStatementsEsterelParallelParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_54);
            lv_statements_3_0=ruleEsterelParallel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getBlockRule());
              					}
              					add(
              						current,
              						"statements",
              						lv_statements_3_0,
              						"de.cau.cs.kieler.esterel.Esterel.EsterelParallel");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getBlockAccess().getRightSquareBracketKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBlock"


    // $ANTLR start "entryRuleEmit"
    // InternalSCEst.g:4198:1: entryRuleEmit returns [EObject current=null] : iv_ruleEmit= ruleEmit EOF ;
    public final EObject entryRuleEmit() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEmit = null;


        try {
            // InternalSCEst.g:4198:45: (iv_ruleEmit= ruleEmit EOF )
            // InternalSCEst.g:4199:2: iv_ruleEmit= ruleEmit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEmitRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEmit=ruleEmit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEmit; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEmit"


    // $ANTLR start "ruleEmit"
    // InternalSCEst.g:4205:1: ruleEmit returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'emit' ( (otherlv_2= RULE_ID ) ) (otherlv_3= '(' ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= ')' )? ) ;
    public final EObject ruleEmit() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_expression_4_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:4211:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'emit' ( (otherlv_2= RULE_ID ) ) (otherlv_3= '(' ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= ')' )? ) )
            // InternalSCEst.g:4212:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'emit' ( (otherlv_2= RULE_ID ) ) (otherlv_3= '(' ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= ')' )? )
            {
            // InternalSCEst.g:4212:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'emit' ( (otherlv_2= RULE_ID ) ) (otherlv_3= '(' ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= ')' )? )
            // InternalSCEst.g:4213:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'emit' ( (otherlv_2= RULE_ID ) ) (otherlv_3= '(' ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= ')' )?
            {
            // InternalSCEst.g:4213:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop78:
            do {
                int alt78=2;
                int LA78_0 = input.LA(1);

                if ( (LA78_0==RULE_COMMENT_ANNOTATION||LA78_0==128) ) {
                    alt78=1;
                }


                switch (alt78) {
            	case 1 :
            	    // InternalSCEst.g:4214:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:4214:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCEst.g:4215:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getEmitAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_55);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getEmitRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop78;
                }
            } while (true);

            otherlv_1=(Token)match(input,51,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getEmitAccess().getEmitKeyword_1());
              		
            }
            // InternalSCEst.g:4236:3: ( (otherlv_2= RULE_ID ) )
            // InternalSCEst.g:4237:4: (otherlv_2= RULE_ID )
            {
            // InternalSCEst.g:4237:4: (otherlv_2= RULE_ID )
            // InternalSCEst.g:4238:5: otherlv_2= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getEmitRule());
              					}
              				
            }
            otherlv_2=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_56); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_2, grammarAccess.getEmitAccess().getSignalSignalCrossReference_2_0());
              				
            }

            }


            }

            // InternalSCEst.g:4252:3: (otherlv_3= '(' ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= ')' )?
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( (LA79_0==25) ) {
                alt79=1;
            }
            switch (alt79) {
                case 1 :
                    // InternalSCEst.g:4253:4: otherlv_3= '(' ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= ')'
                    {
                    otherlv_3=(Token)match(input,25,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getEmitAccess().getLeftParenthesisKeyword_3_0());
                      			
                    }
                    // InternalSCEst.g:4257:4: ( (lv_expression_4_0= ruleExpression ) )
                    // InternalSCEst.g:4258:5: (lv_expression_4_0= ruleExpression )
                    {
                    // InternalSCEst.g:4258:5: (lv_expression_4_0= ruleExpression )
                    // InternalSCEst.g:4259:6: lv_expression_4_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEmitAccess().getExpressionExpressionParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_20);
                    lv_expression_4_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEmitRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_4_0,
                      							"de.cau.cs.kieler.esterel.Esterel.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,26,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getEmitAccess().getRightParenthesisKeyword_3_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEmit"


    // $ANTLR start "entryRuleSustain"
    // InternalSCEst.g:4285:1: entryRuleSustain returns [EObject current=null] : iv_ruleSustain= ruleSustain EOF ;
    public final EObject entryRuleSustain() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSustain = null;


        try {
            // InternalSCEst.g:4285:48: (iv_ruleSustain= ruleSustain EOF )
            // InternalSCEst.g:4286:2: iv_ruleSustain= ruleSustain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSustainRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSustain=ruleSustain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSustain; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSustain"


    // $ANTLR start "ruleSustain"
    // InternalSCEst.g:4292:1: ruleSustain returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'sustain' ( (otherlv_2= RULE_ID ) ) (otherlv_3= '(' ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= ')' )? ) ;
    public final EObject ruleSustain() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_expression_4_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:4298:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'sustain' ( (otherlv_2= RULE_ID ) ) (otherlv_3= '(' ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= ')' )? ) )
            // InternalSCEst.g:4299:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'sustain' ( (otherlv_2= RULE_ID ) ) (otherlv_3= '(' ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= ')' )? )
            {
            // InternalSCEst.g:4299:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'sustain' ( (otherlv_2= RULE_ID ) ) (otherlv_3= '(' ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= ')' )? )
            // InternalSCEst.g:4300:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'sustain' ( (otherlv_2= RULE_ID ) ) (otherlv_3= '(' ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= ')' )?
            {
            // InternalSCEst.g:4300:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop80:
            do {
                int alt80=2;
                int LA80_0 = input.LA(1);

                if ( (LA80_0==RULE_COMMENT_ANNOTATION||LA80_0==128) ) {
                    alt80=1;
                }


                switch (alt80) {
            	case 1 :
            	    // InternalSCEst.g:4301:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:4301:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCEst.g:4302:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSustainAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_57);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSustainRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop80;
                }
            } while (true);

            otherlv_1=(Token)match(input,52,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSustainAccess().getSustainKeyword_1());
              		
            }
            // InternalSCEst.g:4323:3: ( (otherlv_2= RULE_ID ) )
            // InternalSCEst.g:4324:4: (otherlv_2= RULE_ID )
            {
            // InternalSCEst.g:4324:4: (otherlv_2= RULE_ID )
            // InternalSCEst.g:4325:5: otherlv_2= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSustainRule());
              					}
              				
            }
            otherlv_2=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_56); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_2, grammarAccess.getSustainAccess().getSignalSignalCrossReference_2_0());
              				
            }

            }


            }

            // InternalSCEst.g:4339:3: (otherlv_3= '(' ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= ')' )?
            int alt81=2;
            int LA81_0 = input.LA(1);

            if ( (LA81_0==25) ) {
                alt81=1;
            }
            switch (alt81) {
                case 1 :
                    // InternalSCEst.g:4340:4: otherlv_3= '(' ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= ')'
                    {
                    otherlv_3=(Token)match(input,25,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getSustainAccess().getLeftParenthesisKeyword_3_0());
                      			
                    }
                    // InternalSCEst.g:4344:4: ( (lv_expression_4_0= ruleExpression ) )
                    // InternalSCEst.g:4345:5: (lv_expression_4_0= ruleExpression )
                    {
                    // InternalSCEst.g:4345:5: (lv_expression_4_0= ruleExpression )
                    // InternalSCEst.g:4346:6: lv_expression_4_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSustainAccess().getExpressionExpressionParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_20);
                    lv_expression_4_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSustainRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_4_0,
                      							"de.cau.cs.kieler.esterel.Esterel.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,26,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getSustainAccess().getRightParenthesisKeyword_3_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSustain"


    // $ANTLR start "entryRuleVariableReference"
    // InternalSCEst.g:4372:1: entryRuleVariableReference returns [EObject current=null] : iv_ruleVariableReference= ruleVariableReference EOF ;
    public final EObject entryRuleVariableReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVariableReference = null;


        try {
            // InternalSCEst.g:4372:58: (iv_ruleVariableReference= ruleVariableReference EOF )
            // InternalSCEst.g:4373:2: iv_ruleVariableReference= ruleVariableReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVariableReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleVariableReference=ruleVariableReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVariableReference; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVariableReference"


    // $ANTLR start "ruleVariableReference"
    // InternalSCEst.g:4379:1: ruleVariableReference returns [EObject current=null] : ( () ( (otherlv_1= RULE_ID ) ) ) ;
    public final EObject ruleVariableReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;


        	enterRule();

        try {
            // InternalSCEst.g:4385:2: ( ( () ( (otherlv_1= RULE_ID ) ) ) )
            // InternalSCEst.g:4386:2: ( () ( (otherlv_1= RULE_ID ) ) )
            {
            // InternalSCEst.g:4386:2: ( () ( (otherlv_1= RULE_ID ) ) )
            // InternalSCEst.g:4387:3: () ( (otherlv_1= RULE_ID ) )
            {
            // InternalSCEst.g:4387:3: ()
            // InternalSCEst.g:4388:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getVariableReferenceAccess().getVariableReferenceAction_0(),
              					current);
              			
            }

            }

            // InternalSCEst.g:4397:3: ( (otherlv_1= RULE_ID ) )
            // InternalSCEst.g:4398:4: (otherlv_1= RULE_ID )
            {
            // InternalSCEst.g:4398:4: (otherlv_1= RULE_ID )
            // InternalSCEst.g:4399:5: otherlv_1= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getVariableReferenceRule());
              					}
              				
            }
            otherlv_1=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getVariableReferenceAccess().getValuedObjectVariableCrossReference_1_0());
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVariableReference"


    // $ANTLR start "entryRuleProcedureCall"
    // InternalSCEst.g:4417:1: entryRuleProcedureCall returns [EObject current=null] : iv_ruleProcedureCall= ruleProcedureCall EOF ;
    public final EObject entryRuleProcedureCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleProcedureCall = null;


        try {
            // InternalSCEst.g:4417:54: (iv_ruleProcedureCall= ruleProcedureCall EOF )
            // InternalSCEst.g:4418:2: iv_ruleProcedureCall= ruleProcedureCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getProcedureCallRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleProcedureCall=ruleProcedureCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleProcedureCall; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleProcedureCall"


    // $ANTLR start "ruleProcedureCall"
    // InternalSCEst.g:4424:1: ruleProcedureCall returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'call' ( (otherlv_2= RULE_ID ) ) ( (otherlv_3= '(' ( ( (otherlv_4= RULE_ID ) ) (otherlv_5= ',' ( (otherlv_6= RULE_ID ) ) )* )? otherlv_7= ')' ) | otherlv_8= '()' ) ( (otherlv_9= '(' ( ( (lv_valueArguments_10_0= ruleExpression ) ) (otherlv_11= ',' ( (lv_valueArguments_12_0= ruleExpression ) ) )* )? otherlv_13= ')' ) | otherlv_14= '()' ) ) ;
    public final EObject ruleProcedureCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_valueArguments_10_0 = null;

        EObject lv_valueArguments_12_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:4430:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'call' ( (otherlv_2= RULE_ID ) ) ( (otherlv_3= '(' ( ( (otherlv_4= RULE_ID ) ) (otherlv_5= ',' ( (otherlv_6= RULE_ID ) ) )* )? otherlv_7= ')' ) | otherlv_8= '()' ) ( (otherlv_9= '(' ( ( (lv_valueArguments_10_0= ruleExpression ) ) (otherlv_11= ',' ( (lv_valueArguments_12_0= ruleExpression ) ) )* )? otherlv_13= ')' ) | otherlv_14= '()' ) ) )
            // InternalSCEst.g:4431:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'call' ( (otherlv_2= RULE_ID ) ) ( (otherlv_3= '(' ( ( (otherlv_4= RULE_ID ) ) (otherlv_5= ',' ( (otherlv_6= RULE_ID ) ) )* )? otherlv_7= ')' ) | otherlv_8= '()' ) ( (otherlv_9= '(' ( ( (lv_valueArguments_10_0= ruleExpression ) ) (otherlv_11= ',' ( (lv_valueArguments_12_0= ruleExpression ) ) )* )? otherlv_13= ')' ) | otherlv_14= '()' ) )
            {
            // InternalSCEst.g:4431:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'call' ( (otherlv_2= RULE_ID ) ) ( (otherlv_3= '(' ( ( (otherlv_4= RULE_ID ) ) (otherlv_5= ',' ( (otherlv_6= RULE_ID ) ) )* )? otherlv_7= ')' ) | otherlv_8= '()' ) ( (otherlv_9= '(' ( ( (lv_valueArguments_10_0= ruleExpression ) ) (otherlv_11= ',' ( (lv_valueArguments_12_0= ruleExpression ) ) )* )? otherlv_13= ')' ) | otherlv_14= '()' ) )
            // InternalSCEst.g:4432:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'call' ( (otherlv_2= RULE_ID ) ) ( (otherlv_3= '(' ( ( (otherlv_4= RULE_ID ) ) (otherlv_5= ',' ( (otherlv_6= RULE_ID ) ) )* )? otherlv_7= ')' ) | otherlv_8= '()' ) ( (otherlv_9= '(' ( ( (lv_valueArguments_10_0= ruleExpression ) ) (otherlv_11= ',' ( (lv_valueArguments_12_0= ruleExpression ) ) )* )? otherlv_13= ')' ) | otherlv_14= '()' )
            {
            // InternalSCEst.g:4432:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop82:
            do {
                int alt82=2;
                int LA82_0 = input.LA(1);

                if ( (LA82_0==RULE_COMMENT_ANNOTATION||LA82_0==128) ) {
                    alt82=1;
                }


                switch (alt82) {
            	case 1 :
            	    // InternalSCEst.g:4433:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:4433:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCEst.g:4434:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getProcedureCallAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_58);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getProcedureCallRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop82;
                }
            } while (true);

            otherlv_1=(Token)match(input,53,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getProcedureCallAccess().getCallKeyword_1());
              		
            }
            // InternalSCEst.g:4455:3: ( (otherlv_2= RULE_ID ) )
            // InternalSCEst.g:4456:4: (otherlv_2= RULE_ID )
            {
            // InternalSCEst.g:4456:4: (otherlv_2= RULE_ID )
            // InternalSCEst.g:4457:5: otherlv_2= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getProcedureCallRule());
              					}
              				
            }
            otherlv_2=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_2, grammarAccess.getProcedureCallAccess().getProcedureProcedureCrossReference_2_0());
              				
            }

            }


            }

            // InternalSCEst.g:4471:3: ( (otherlv_3= '(' ( ( (otherlv_4= RULE_ID ) ) (otherlv_5= ',' ( (otherlv_6= RULE_ID ) ) )* )? otherlv_7= ')' ) | otherlv_8= '()' )
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( (LA85_0==25) ) {
                alt85=1;
            }
            else if ( (LA85_0==34) ) {
                alt85=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 85, 0, input);

                throw nvae;
            }
            switch (alt85) {
                case 1 :
                    // InternalSCEst.g:4472:4: (otherlv_3= '(' ( ( (otherlv_4= RULE_ID ) ) (otherlv_5= ',' ( (otherlv_6= RULE_ID ) ) )* )? otherlv_7= ')' )
                    {
                    // InternalSCEst.g:4472:4: (otherlv_3= '(' ( ( (otherlv_4= RULE_ID ) ) (otherlv_5= ',' ( (otherlv_6= RULE_ID ) ) )* )? otherlv_7= ')' )
                    // InternalSCEst.g:4473:5: otherlv_3= '(' ( ( (otherlv_4= RULE_ID ) ) (otherlv_5= ',' ( (otherlv_6= RULE_ID ) ) )* )? otherlv_7= ')'
                    {
                    otherlv_3=(Token)match(input,25,FollowSets000.FOLLOW_59); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getProcedureCallAccess().getLeftParenthesisKeyword_3_0_0());
                      				
                    }
                    // InternalSCEst.g:4477:5: ( ( (otherlv_4= RULE_ID ) ) (otherlv_5= ',' ( (otherlv_6= RULE_ID ) ) )* )?
                    int alt84=2;
                    int LA84_0 = input.LA(1);

                    if ( (LA84_0==RULE_ID) ) {
                        alt84=1;
                    }
                    switch (alt84) {
                        case 1 :
                            // InternalSCEst.g:4478:6: ( (otherlv_4= RULE_ID ) ) (otherlv_5= ',' ( (otherlv_6= RULE_ID ) ) )*
                            {
                            // InternalSCEst.g:4478:6: ( (otherlv_4= RULE_ID ) )
                            // InternalSCEst.g:4479:7: (otherlv_4= RULE_ID )
                            {
                            // InternalSCEst.g:4479:7: (otherlv_4= RULE_ID )
                            // InternalSCEst.g:4480:8: otherlv_4= RULE_ID
                            {
                            if ( state.backtracking==0 ) {

                              								/* */
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getProcedureCallRule());
                              								}
                              							
                            }
                            otherlv_4=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_33); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(otherlv_4, grammarAccess.getProcedureCallAccess().getReferenceArgumentsVariableCrossReference_3_0_1_0_0());
                              							
                            }

                            }


                            }

                            // InternalSCEst.g:4494:6: (otherlv_5= ',' ( (otherlv_6= RULE_ID ) ) )*
                            loop83:
                            do {
                                int alt83=2;
                                int LA83_0 = input.LA(1);

                                if ( (LA83_0==30) ) {
                                    alt83=1;
                                }


                                switch (alt83) {
                            	case 1 :
                            	    // InternalSCEst.g:4495:7: otherlv_5= ',' ( (otherlv_6= RULE_ID ) )
                            	    {
                            	    otherlv_5=(Token)match(input,30,FollowSets000.FOLLOW_6); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_5, grammarAccess.getProcedureCallAccess().getCommaKeyword_3_0_1_1_0());
                            	      						
                            	    }
                            	    // InternalSCEst.g:4499:7: ( (otherlv_6= RULE_ID ) )
                            	    // InternalSCEst.g:4500:8: (otherlv_6= RULE_ID )
                            	    {
                            	    // InternalSCEst.g:4500:8: (otherlv_6= RULE_ID )
                            	    // InternalSCEst.g:4501:9: otherlv_6= RULE_ID
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									/* */
                            	      								
                            	    }
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElement(grammarAccess.getProcedureCallRule());
                            	      									}
                            	      								
                            	    }
                            	    otherlv_6=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_33); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									newLeafNode(otherlv_6, grammarAccess.getProcedureCallAccess().getReferenceArgumentsVariableCrossReference_3_0_1_1_1_0());
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop83;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_7=(Token)match(input,26,FollowSets000.FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getProcedureCallAccess().getRightParenthesisKeyword_3_0_2());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCEst.g:4523:4: otherlv_8= '()'
                    {
                    otherlv_8=(Token)match(input,34,FollowSets000.FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getProcedureCallAccess().getLeftParenthesisRightParenthesisKeyword_3_1());
                      			
                    }

                    }
                    break;

            }

            // InternalSCEst.g:4528:3: ( (otherlv_9= '(' ( ( (lv_valueArguments_10_0= ruleExpression ) ) (otherlv_11= ',' ( (lv_valueArguments_12_0= ruleExpression ) ) )* )? otherlv_13= ')' ) | otherlv_14= '()' )
            int alt88=2;
            int LA88_0 = input.LA(1);

            if ( (LA88_0==25) ) {
                alt88=1;
            }
            else if ( (LA88_0==34) ) {
                alt88=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 88, 0, input);

                throw nvae;
            }
            switch (alt88) {
                case 1 :
                    // InternalSCEst.g:4529:4: (otherlv_9= '(' ( ( (lv_valueArguments_10_0= ruleExpression ) ) (otherlv_11= ',' ( (lv_valueArguments_12_0= ruleExpression ) ) )* )? otherlv_13= ')' )
                    {
                    // InternalSCEst.g:4529:4: (otherlv_9= '(' ( ( (lv_valueArguments_10_0= ruleExpression ) ) (otherlv_11= ',' ( (lv_valueArguments_12_0= ruleExpression ) ) )* )? otherlv_13= ')' )
                    // InternalSCEst.g:4530:5: otherlv_9= '(' ( ( (lv_valueArguments_10_0= ruleExpression ) ) (otherlv_11= ',' ( (lv_valueArguments_12_0= ruleExpression ) ) )* )? otherlv_13= ')'
                    {
                    otherlv_9=(Token)match(input,25,FollowSets000.FOLLOW_60); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_9, grammarAccess.getProcedureCallAccess().getLeftParenthesisKeyword_4_0_0());
                      				
                    }
                    // InternalSCEst.g:4534:5: ( ( (lv_valueArguments_10_0= ruleExpression ) ) (otherlv_11= ',' ( (lv_valueArguments_12_0= ruleExpression ) ) )* )?
                    int alt87=2;
                    int LA87_0 = input.LA(1);

                    if ( ((LA87_0>=RULE_ID && LA87_0<=RULE_COMMENT_ANNOTATION)||LA87_0==25||LA87_0==84||LA87_0==91||(LA87_0>=97 && LA87_0<=98)||LA87_0==117||(LA87_0>=128 && LA87_0<=130)) ) {
                        alt87=1;
                    }
                    switch (alt87) {
                        case 1 :
                            // InternalSCEst.g:4535:6: ( (lv_valueArguments_10_0= ruleExpression ) ) (otherlv_11= ',' ( (lv_valueArguments_12_0= ruleExpression ) ) )*
                            {
                            // InternalSCEst.g:4535:6: ( (lv_valueArguments_10_0= ruleExpression ) )
                            // InternalSCEst.g:4536:7: (lv_valueArguments_10_0= ruleExpression )
                            {
                            // InternalSCEst.g:4536:7: (lv_valueArguments_10_0= ruleExpression )
                            // InternalSCEst.g:4537:8: lv_valueArguments_10_0= ruleExpression
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getProcedureCallAccess().getValueArgumentsExpressionParserRuleCall_4_0_1_0_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_33);
                            lv_valueArguments_10_0=ruleExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getProcedureCallRule());
                              								}
                              								add(
                              									current,
                              									"valueArguments",
                              									lv_valueArguments_10_0,
                              									"de.cau.cs.kieler.esterel.Esterel.Expression");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalSCEst.g:4554:6: (otherlv_11= ',' ( (lv_valueArguments_12_0= ruleExpression ) ) )*
                            loop86:
                            do {
                                int alt86=2;
                                int LA86_0 = input.LA(1);

                                if ( (LA86_0==30) ) {
                                    alt86=1;
                                }


                                switch (alt86) {
                            	case 1 :
                            	    // InternalSCEst.g:4555:7: otherlv_11= ',' ( (lv_valueArguments_12_0= ruleExpression ) )
                            	    {
                            	    otherlv_11=(Token)match(input,30,FollowSets000.FOLLOW_16); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_11, grammarAccess.getProcedureCallAccess().getCommaKeyword_4_0_1_1_0());
                            	      						
                            	    }
                            	    // InternalSCEst.g:4559:7: ( (lv_valueArguments_12_0= ruleExpression ) )
                            	    // InternalSCEst.g:4560:8: (lv_valueArguments_12_0= ruleExpression )
                            	    {
                            	    // InternalSCEst.g:4560:8: (lv_valueArguments_12_0= ruleExpression )
                            	    // InternalSCEst.g:4561:9: lv_valueArguments_12_0= ruleExpression
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getProcedureCallAccess().getValueArgumentsExpressionParserRuleCall_4_0_1_1_1_0());
                            	      								
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_33);
                            	    lv_valueArguments_12_0=ruleExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getProcedureCallRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"valueArguments",
                            	      										lv_valueArguments_12_0,
                            	      										"de.cau.cs.kieler.esterel.Esterel.Expression");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop86;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_13=(Token)match(input,26,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_13, grammarAccess.getProcedureCallAccess().getRightParenthesisKeyword_4_0_2());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCEst.g:4586:4: otherlv_14= '()'
                    {
                    otherlv_14=(Token)match(input,34,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_14, grammarAccess.getProcedureCallAccess().getLeftParenthesisRightParenthesisKeyword_4_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleProcedureCall"


    // $ANTLR start "entryRulePresent"
    // InternalSCEst.g:4595:1: entryRulePresent returns [EObject current=null] : iv_rulePresent= rulePresent EOF ;
    public final EObject entryRulePresent() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePresent = null;


        try {
            // InternalSCEst.g:4595:48: (iv_rulePresent= rulePresent EOF )
            // InternalSCEst.g:4596:2: iv_rulePresent= rulePresent EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPresentRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePresent=rulePresent();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePresent; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePresent"


    // $ANTLR start "rulePresent"
    // InternalSCEst.g:4602:1: rulePresent returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'present' ( ( ( ( (lv_expression_2_0= ruleSignalExpression ) ) | (otherlv_3= '[' ( (lv_expression_4_0= ruleSignalExpression ) ) otherlv_5= ']' ) ) ( ( (lv_annotations_6_0= ruleAnnotation ) )* otherlv_7= 'then' ( (lv_statements_8_0= ruleEsterelParallel ) ) )? ) | ( (lv_cases_9_0= rulePresentCase ) )+ ) (otherlv_10= 'else' ( (lv_elseStatements_11_0= ruleEsterelParallel ) ) )? otherlv_12= 'end' (otherlv_13= 'present' )? ) ;
    public final EObject rulePresent() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_expression_2_0 = null;

        EObject lv_expression_4_0 = null;

        EObject lv_annotations_6_0 = null;

        EObject lv_statements_8_0 = null;

        EObject lv_cases_9_0 = null;

        EObject lv_elseStatements_11_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:4608:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'present' ( ( ( ( (lv_expression_2_0= ruleSignalExpression ) ) | (otherlv_3= '[' ( (lv_expression_4_0= ruleSignalExpression ) ) otherlv_5= ']' ) ) ( ( (lv_annotations_6_0= ruleAnnotation ) )* otherlv_7= 'then' ( (lv_statements_8_0= ruleEsterelParallel ) ) )? ) | ( (lv_cases_9_0= rulePresentCase ) )+ ) (otherlv_10= 'else' ( (lv_elseStatements_11_0= ruleEsterelParallel ) ) )? otherlv_12= 'end' (otherlv_13= 'present' )? ) )
            // InternalSCEst.g:4609:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'present' ( ( ( ( (lv_expression_2_0= ruleSignalExpression ) ) | (otherlv_3= '[' ( (lv_expression_4_0= ruleSignalExpression ) ) otherlv_5= ']' ) ) ( ( (lv_annotations_6_0= ruleAnnotation ) )* otherlv_7= 'then' ( (lv_statements_8_0= ruleEsterelParallel ) ) )? ) | ( (lv_cases_9_0= rulePresentCase ) )+ ) (otherlv_10= 'else' ( (lv_elseStatements_11_0= ruleEsterelParallel ) ) )? otherlv_12= 'end' (otherlv_13= 'present' )? )
            {
            // InternalSCEst.g:4609:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'present' ( ( ( ( (lv_expression_2_0= ruleSignalExpression ) ) | (otherlv_3= '[' ( (lv_expression_4_0= ruleSignalExpression ) ) otherlv_5= ']' ) ) ( ( (lv_annotations_6_0= ruleAnnotation ) )* otherlv_7= 'then' ( (lv_statements_8_0= ruleEsterelParallel ) ) )? ) | ( (lv_cases_9_0= rulePresentCase ) )+ ) (otherlv_10= 'else' ( (lv_elseStatements_11_0= ruleEsterelParallel ) ) )? otherlv_12= 'end' (otherlv_13= 'present' )? )
            // InternalSCEst.g:4610:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'present' ( ( ( ( (lv_expression_2_0= ruleSignalExpression ) ) | (otherlv_3= '[' ( (lv_expression_4_0= ruleSignalExpression ) ) otherlv_5= ']' ) ) ( ( (lv_annotations_6_0= ruleAnnotation ) )* otherlv_7= 'then' ( (lv_statements_8_0= ruleEsterelParallel ) ) )? ) | ( (lv_cases_9_0= rulePresentCase ) )+ ) (otherlv_10= 'else' ( (lv_elseStatements_11_0= ruleEsterelParallel ) ) )? otherlv_12= 'end' (otherlv_13= 'present' )?
            {
            // InternalSCEst.g:4610:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop89:
            do {
                int alt89=2;
                int LA89_0 = input.LA(1);

                if ( (LA89_0==RULE_COMMENT_ANNOTATION||LA89_0==128) ) {
                    alt89=1;
                }


                switch (alt89) {
            	case 1 :
            	    // InternalSCEst.g:4611:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:4611:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCEst.g:4612:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getPresentAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_61);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getPresentRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop89;
                }
            } while (true);

            otherlv_1=(Token)match(input,54,FollowSets000.FOLLOW_62); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getPresentAccess().getPresentKeyword_1());
              		
            }
            // InternalSCEst.g:4633:3: ( ( ( ( (lv_expression_2_0= ruleSignalExpression ) ) | (otherlv_3= '[' ( (lv_expression_4_0= ruleSignalExpression ) ) otherlv_5= ']' ) ) ( ( (lv_annotations_6_0= ruleAnnotation ) )* otherlv_7= 'then' ( (lv_statements_8_0= ruleEsterelParallel ) ) )? ) | ( (lv_cases_9_0= rulePresentCase ) )+ )
            int alt94=2;
            int LA94_0 = input.LA(1);

            if ( (LA94_0==RULE_ID||LA94_0==25||LA94_0==49||LA94_0==91||LA94_0==98||LA94_0==129) ) {
                alt94=1;
            }
            else if ( (LA94_0==RULE_COMMENT_ANNOTATION||LA94_0==57||LA94_0==128) ) {
                alt94=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 94, 0, input);

                throw nvae;
            }
            switch (alt94) {
                case 1 :
                    // InternalSCEst.g:4634:4: ( ( ( (lv_expression_2_0= ruleSignalExpression ) ) | (otherlv_3= '[' ( (lv_expression_4_0= ruleSignalExpression ) ) otherlv_5= ']' ) ) ( ( (lv_annotations_6_0= ruleAnnotation ) )* otherlv_7= 'then' ( (lv_statements_8_0= ruleEsterelParallel ) ) )? )
                    {
                    // InternalSCEst.g:4634:4: ( ( ( (lv_expression_2_0= ruleSignalExpression ) ) | (otherlv_3= '[' ( (lv_expression_4_0= ruleSignalExpression ) ) otherlv_5= ']' ) ) ( ( (lv_annotations_6_0= ruleAnnotation ) )* otherlv_7= 'then' ( (lv_statements_8_0= ruleEsterelParallel ) ) )? )
                    // InternalSCEst.g:4635:5: ( ( (lv_expression_2_0= ruleSignalExpression ) ) | (otherlv_3= '[' ( (lv_expression_4_0= ruleSignalExpression ) ) otherlv_5= ']' ) ) ( ( (lv_annotations_6_0= ruleAnnotation ) )* otherlv_7= 'then' ( (lv_statements_8_0= ruleEsterelParallel ) ) )?
                    {
                    // InternalSCEst.g:4635:5: ( ( (lv_expression_2_0= ruleSignalExpression ) ) | (otherlv_3= '[' ( (lv_expression_4_0= ruleSignalExpression ) ) otherlv_5= ']' ) )
                    int alt90=2;
                    int LA90_0 = input.LA(1);

                    if ( (LA90_0==RULE_ID||LA90_0==25||LA90_0==91||LA90_0==98||LA90_0==129) ) {
                        alt90=1;
                    }
                    else if ( (LA90_0==49) ) {
                        alt90=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 90, 0, input);

                        throw nvae;
                    }
                    switch (alt90) {
                        case 1 :
                            // InternalSCEst.g:4636:6: ( (lv_expression_2_0= ruleSignalExpression ) )
                            {
                            // InternalSCEst.g:4636:6: ( (lv_expression_2_0= ruleSignalExpression ) )
                            // InternalSCEst.g:4637:7: (lv_expression_2_0= ruleSignalExpression )
                            {
                            // InternalSCEst.g:4637:7: (lv_expression_2_0= ruleSignalExpression )
                            // InternalSCEst.g:4638:8: lv_expression_2_0= ruleSignalExpression
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getPresentAccess().getExpressionSignalExpressionParserRuleCall_2_0_0_0_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_63);
                            lv_expression_2_0=ruleSignalExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getPresentRule());
                              								}
                              								set(
                              									current,
                              									"expression",
                              									lv_expression_2_0,
                              									"de.cau.cs.kieler.esterel.Esterel.SignalExpression");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalSCEst.g:4656:6: (otherlv_3= '[' ( (lv_expression_4_0= ruleSignalExpression ) ) otherlv_5= ']' )
                            {
                            // InternalSCEst.g:4656:6: (otherlv_3= '[' ( (lv_expression_4_0= ruleSignalExpression ) ) otherlv_5= ']' )
                            // InternalSCEst.g:4657:7: otherlv_3= '[' ( (lv_expression_4_0= ruleSignalExpression ) ) otherlv_5= ']'
                            {
                            otherlv_3=(Token)match(input,49,FollowSets000.FOLLOW_64); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_3, grammarAccess.getPresentAccess().getLeftSquareBracketKeyword_2_0_0_1_0());
                              						
                            }
                            // InternalSCEst.g:4661:7: ( (lv_expression_4_0= ruleSignalExpression ) )
                            // InternalSCEst.g:4662:8: (lv_expression_4_0= ruleSignalExpression )
                            {
                            // InternalSCEst.g:4662:8: (lv_expression_4_0= ruleSignalExpression )
                            // InternalSCEst.g:4663:9: lv_expression_4_0= ruleSignalExpression
                            {
                            if ( state.backtracking==0 ) {

                              									newCompositeNode(grammarAccess.getPresentAccess().getExpressionSignalExpressionParserRuleCall_2_0_0_1_1_0());
                              								
                            }
                            pushFollow(FollowSets000.FOLLOW_54);
                            lv_expression_4_0=ruleSignalExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElementForParent(grammarAccess.getPresentRule());
                              									}
                              									set(
                              										current,
                              										"expression",
                              										lv_expression_4_0,
                              										"de.cau.cs.kieler.esterel.Esterel.SignalExpression");
                              									afterParserOrEnumRuleCall();
                              								
                            }

                            }


                            }

                            otherlv_5=(Token)match(input,50,FollowSets000.FOLLOW_63); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_5, grammarAccess.getPresentAccess().getRightSquareBracketKeyword_2_0_0_1_2());
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalSCEst.g:4686:5: ( ( (lv_annotations_6_0= ruleAnnotation ) )* otherlv_7= 'then' ( (lv_statements_8_0= ruleEsterelParallel ) ) )?
                    int alt92=2;
                    int LA92_0 = input.LA(1);

                    if ( (LA92_0==RULE_COMMENT_ANNOTATION||LA92_0==55||LA92_0==128) ) {
                        alt92=1;
                    }
                    switch (alt92) {
                        case 1 :
                            // InternalSCEst.g:4687:6: ( (lv_annotations_6_0= ruleAnnotation ) )* otherlv_7= 'then' ( (lv_statements_8_0= ruleEsterelParallel ) )
                            {
                            // InternalSCEst.g:4687:6: ( (lv_annotations_6_0= ruleAnnotation ) )*
                            loop91:
                            do {
                                int alt91=2;
                                int LA91_0 = input.LA(1);

                                if ( (LA91_0==RULE_COMMENT_ANNOTATION||LA91_0==128) ) {
                                    alt91=1;
                                }


                                switch (alt91) {
                            	case 1 :
                            	    // InternalSCEst.g:4688:7: (lv_annotations_6_0= ruleAnnotation )
                            	    {
                            	    // InternalSCEst.g:4688:7: (lv_annotations_6_0= ruleAnnotation )
                            	    // InternalSCEst.g:4689:8: lv_annotations_6_0= ruleAnnotation
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getPresentAccess().getAnnotationsAnnotationParserRuleCall_2_0_1_0_0());
                            	      							
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_65);
                            	    lv_annotations_6_0=ruleAnnotation();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getPresentRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"annotations",
                            	      									lv_annotations_6_0,
                            	      									"de.cau.cs.kieler.annotations.Annotations.Annotation");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop91;
                                }
                            } while (true);

                            otherlv_7=(Token)match(input,55,FollowSets000.FOLLOW_12); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_7, grammarAccess.getPresentAccess().getThenKeyword_2_0_1_1());
                              					
                            }
                            // InternalSCEst.g:4710:6: ( (lv_statements_8_0= ruleEsterelParallel ) )
                            // InternalSCEst.g:4711:7: (lv_statements_8_0= ruleEsterelParallel )
                            {
                            // InternalSCEst.g:4711:7: (lv_statements_8_0= ruleEsterelParallel )
                            // InternalSCEst.g:4712:8: lv_statements_8_0= ruleEsterelParallel
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getPresentAccess().getStatementsEsterelParallelParserRuleCall_2_0_1_2_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_66);
                            lv_statements_8_0=ruleEsterelParallel();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getPresentRule());
                              								}
                              								add(
                              									current,
                              									"statements",
                              									lv_statements_8_0,
                              									"de.cau.cs.kieler.esterel.Esterel.EsterelParallel");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCEst.g:4732:4: ( (lv_cases_9_0= rulePresentCase ) )+
                    {
                    // InternalSCEst.g:4732:4: ( (lv_cases_9_0= rulePresentCase ) )+
                    int cnt93=0;
                    loop93:
                    do {
                        int alt93=2;
                        int LA93_0 = input.LA(1);

                        if ( (LA93_0==RULE_COMMENT_ANNOTATION||LA93_0==57||LA93_0==128) ) {
                            alt93=1;
                        }


                        switch (alt93) {
                    	case 1 :
                    	    // InternalSCEst.g:4733:5: (lv_cases_9_0= rulePresentCase )
                    	    {
                    	    // InternalSCEst.g:4733:5: (lv_cases_9_0= rulePresentCase )
                    	    // InternalSCEst.g:4734:6: lv_cases_9_0= rulePresentCase
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getPresentAccess().getCasesPresentCaseParserRuleCall_2_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_67);
                    	    lv_cases_9_0=rulePresentCase();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getPresentRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"cases",
                    	      							lv_cases_9_0,
                    	      							"de.cau.cs.kieler.esterel.Esterel.PresentCase");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt93 >= 1 ) break loop93;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(93, input);
                                throw eee;
                        }
                        cnt93++;
                    } while (true);


                    }
                    break;

            }

            // InternalSCEst.g:4752:3: (otherlv_10= 'else' ( (lv_elseStatements_11_0= ruleEsterelParallel ) ) )?
            int alt95=2;
            int LA95_0 = input.LA(1);

            if ( (LA95_0==56) ) {
                alt95=1;
            }
            switch (alt95) {
                case 1 :
                    // InternalSCEst.g:4753:4: otherlv_10= 'else' ( (lv_elseStatements_11_0= ruleEsterelParallel ) )
                    {
                    otherlv_10=(Token)match(input,56,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getPresentAccess().getElseKeyword_3_0());
                      			
                    }
                    // InternalSCEst.g:4757:4: ( (lv_elseStatements_11_0= ruleEsterelParallel ) )
                    // InternalSCEst.g:4758:5: (lv_elseStatements_11_0= ruleEsterelParallel )
                    {
                    // InternalSCEst.g:4758:5: (lv_elseStatements_11_0= ruleEsterelParallel )
                    // InternalSCEst.g:4759:6: lv_elseStatements_11_0= ruleEsterelParallel
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPresentAccess().getElseStatementsEsterelParallelParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_68);
                    lv_elseStatements_11_0=ruleEsterelParallel();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPresentRule());
                      						}
                      						add(
                      							current,
                      							"elseStatements",
                      							lv_elseStatements_11_0,
                      							"de.cau.cs.kieler.esterel.Esterel.EsterelParallel");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_12=(Token)match(input,19,FollowSets000.FOLLOW_69); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_12, grammarAccess.getPresentAccess().getEndKeyword_4());
              		
            }
            // InternalSCEst.g:4781:3: (otherlv_13= 'present' )?
            int alt96=2;
            int LA96_0 = input.LA(1);

            if ( (LA96_0==54) ) {
                int LA96_1 = input.LA(2);

                if ( (synpred153_InternalSCEst()) ) {
                    alt96=1;
                }
            }
            switch (alt96) {
                case 1 :
                    // InternalSCEst.g:4782:4: otherlv_13= 'present'
                    {
                    otherlv_13=(Token)match(input,54,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getPresentAccess().getPresentKeyword_5());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePresent"


    // $ANTLR start "entryRulePresentCase"
    // InternalSCEst.g:4791:1: entryRulePresentCase returns [EObject current=null] : iv_rulePresentCase= rulePresentCase EOF ;
    public final EObject entryRulePresentCase() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePresentCase = null;


        try {
            // InternalSCEst.g:4791:52: (iv_rulePresentCase= rulePresentCase EOF )
            // InternalSCEst.g:4792:2: iv_rulePresentCase= rulePresentCase EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPresentCaseRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePresentCase=rulePresentCase();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePresentCase; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePresentCase"


    // $ANTLR start "rulePresentCase"
    // InternalSCEst.g:4798:1: rulePresentCase returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'case' ( ( (lv_expression_2_0= ruleSignalExpression ) ) | (otherlv_3= '[' ( (lv_expression_4_0= ruleSignalExpression ) ) otherlv_5= ']' ) ) (otherlv_6= 'do' ( (lv_statements_7_0= ruleEsterelParallel ) ) )? ) ;
    public final EObject rulePresentCase() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_expression_2_0 = null;

        EObject lv_expression_4_0 = null;

        EObject lv_statements_7_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:4804:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'case' ( ( (lv_expression_2_0= ruleSignalExpression ) ) | (otherlv_3= '[' ( (lv_expression_4_0= ruleSignalExpression ) ) otherlv_5= ']' ) ) (otherlv_6= 'do' ( (lv_statements_7_0= ruleEsterelParallel ) ) )? ) )
            // InternalSCEst.g:4805:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'case' ( ( (lv_expression_2_0= ruleSignalExpression ) ) | (otherlv_3= '[' ( (lv_expression_4_0= ruleSignalExpression ) ) otherlv_5= ']' ) ) (otherlv_6= 'do' ( (lv_statements_7_0= ruleEsterelParallel ) ) )? )
            {
            // InternalSCEst.g:4805:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'case' ( ( (lv_expression_2_0= ruleSignalExpression ) ) | (otherlv_3= '[' ( (lv_expression_4_0= ruleSignalExpression ) ) otherlv_5= ']' ) ) (otherlv_6= 'do' ( (lv_statements_7_0= ruleEsterelParallel ) ) )? )
            // InternalSCEst.g:4806:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'case' ( ( (lv_expression_2_0= ruleSignalExpression ) ) | (otherlv_3= '[' ( (lv_expression_4_0= ruleSignalExpression ) ) otherlv_5= ']' ) ) (otherlv_6= 'do' ( (lv_statements_7_0= ruleEsterelParallel ) ) )?
            {
            // InternalSCEst.g:4806:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop97:
            do {
                int alt97=2;
                int LA97_0 = input.LA(1);

                if ( (LA97_0==RULE_COMMENT_ANNOTATION||LA97_0==128) ) {
                    alt97=1;
                }


                switch (alt97) {
            	case 1 :
            	    // InternalSCEst.g:4807:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:4807:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCEst.g:4808:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getPresentCaseAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_70);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getPresentCaseRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop97;
                }
            } while (true);

            otherlv_1=(Token)match(input,57,FollowSets000.FOLLOW_71); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getPresentCaseAccess().getCaseKeyword_1());
              		
            }
            // InternalSCEst.g:4829:3: ( ( (lv_expression_2_0= ruleSignalExpression ) ) | (otherlv_3= '[' ( (lv_expression_4_0= ruleSignalExpression ) ) otherlv_5= ']' ) )
            int alt98=2;
            int LA98_0 = input.LA(1);

            if ( (LA98_0==RULE_ID||LA98_0==25||LA98_0==91||LA98_0==98||LA98_0==129) ) {
                alt98=1;
            }
            else if ( (LA98_0==49) ) {
                alt98=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 98, 0, input);

                throw nvae;
            }
            switch (alt98) {
                case 1 :
                    // InternalSCEst.g:4830:4: ( (lv_expression_2_0= ruleSignalExpression ) )
                    {
                    // InternalSCEst.g:4830:4: ( (lv_expression_2_0= ruleSignalExpression ) )
                    // InternalSCEst.g:4831:5: (lv_expression_2_0= ruleSignalExpression )
                    {
                    // InternalSCEst.g:4831:5: (lv_expression_2_0= ruleSignalExpression )
                    // InternalSCEst.g:4832:6: lv_expression_2_0= ruleSignalExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPresentCaseAccess().getExpressionSignalExpressionParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_72);
                    lv_expression_2_0=ruleSignalExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPresentCaseRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_2_0,
                      							"de.cau.cs.kieler.esterel.Esterel.SignalExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCEst.g:4850:4: (otherlv_3= '[' ( (lv_expression_4_0= ruleSignalExpression ) ) otherlv_5= ']' )
                    {
                    // InternalSCEst.g:4850:4: (otherlv_3= '[' ( (lv_expression_4_0= ruleSignalExpression ) ) otherlv_5= ']' )
                    // InternalSCEst.g:4851:5: otherlv_3= '[' ( (lv_expression_4_0= ruleSignalExpression ) ) otherlv_5= ']'
                    {
                    otherlv_3=(Token)match(input,49,FollowSets000.FOLLOW_64); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getPresentCaseAccess().getLeftSquareBracketKeyword_2_1_0());
                      				
                    }
                    // InternalSCEst.g:4855:5: ( (lv_expression_4_0= ruleSignalExpression ) )
                    // InternalSCEst.g:4856:6: (lv_expression_4_0= ruleSignalExpression )
                    {
                    // InternalSCEst.g:4856:6: (lv_expression_4_0= ruleSignalExpression )
                    // InternalSCEst.g:4857:7: lv_expression_4_0= ruleSignalExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getPresentCaseAccess().getExpressionSignalExpressionParserRuleCall_2_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_54);
                    lv_expression_4_0=ruleSignalExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getPresentCaseRule());
                      							}
                      							set(
                      								current,
                      								"expression",
                      								lv_expression_4_0,
                      								"de.cau.cs.kieler.esterel.Esterel.SignalExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,50,FollowSets000.FOLLOW_72); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getPresentCaseAccess().getRightSquareBracketKeyword_2_1_2());
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCEst.g:4880:3: (otherlv_6= 'do' ( (lv_statements_7_0= ruleEsterelParallel ) ) )?
            int alt99=2;
            int LA99_0 = input.LA(1);

            if ( (LA99_0==58) ) {
                alt99=1;
            }
            switch (alt99) {
                case 1 :
                    // InternalSCEst.g:4881:4: otherlv_6= 'do' ( (lv_statements_7_0= ruleEsterelParallel ) )
                    {
                    otherlv_6=(Token)match(input,58,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getPresentCaseAccess().getDoKeyword_3_0());
                      			
                    }
                    // InternalSCEst.g:4885:4: ( (lv_statements_7_0= ruleEsterelParallel ) )
                    // InternalSCEst.g:4886:5: (lv_statements_7_0= ruleEsterelParallel )
                    {
                    // InternalSCEst.g:4886:5: (lv_statements_7_0= ruleEsterelParallel )
                    // InternalSCEst.g:4887:6: lv_statements_7_0= ruleEsterelParallel
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPresentCaseAccess().getStatementsEsterelParallelParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_statements_7_0=ruleEsterelParallel();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPresentCaseRule());
                      						}
                      						add(
                      							current,
                      							"statements",
                      							lv_statements_7_0,
                      							"de.cau.cs.kieler.esterel.Esterel.EsterelParallel");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePresentCase"


    // $ANTLR start "entryRuleIfTest"
    // InternalSCEst.g:4909:1: entryRuleIfTest returns [EObject current=null] : iv_ruleIfTest= ruleIfTest EOF ;
    public final EObject entryRuleIfTest() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIfTest = null;


        try {
            // InternalSCEst.g:4909:47: (iv_ruleIfTest= ruleIfTest EOF )
            // InternalSCEst.g:4910:2: iv_ruleIfTest= ruleIfTest EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIfTestRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleIfTest=ruleIfTest();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIfTest; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIfTest"


    // $ANTLR start "ruleIfTest"
    // InternalSCEst.g:4916:1: ruleIfTest returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'if' ( (lv_expression_2_0= ruleExpression ) ) ( ( (lv_annotations_3_0= ruleAnnotation ) )* otherlv_4= 'then' ( (lv_statements_5_0= ruleEsterelParallel ) ) )? ( (lv_elseif_6_0= ruleElsIf ) )* (otherlv_7= 'else' ( (lv_elseStatements_8_0= ruleEsterelParallel ) ) )? otherlv_9= 'end' (otherlv_10= 'if' )? ) ;
    public final EObject ruleIfTest() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_expression_2_0 = null;

        EObject lv_annotations_3_0 = null;

        EObject lv_statements_5_0 = null;

        EObject lv_elseif_6_0 = null;

        EObject lv_elseStatements_8_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:4922:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'if' ( (lv_expression_2_0= ruleExpression ) ) ( ( (lv_annotations_3_0= ruleAnnotation ) )* otherlv_4= 'then' ( (lv_statements_5_0= ruleEsterelParallel ) ) )? ( (lv_elseif_6_0= ruleElsIf ) )* (otherlv_7= 'else' ( (lv_elseStatements_8_0= ruleEsterelParallel ) ) )? otherlv_9= 'end' (otherlv_10= 'if' )? ) )
            // InternalSCEst.g:4923:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'if' ( (lv_expression_2_0= ruleExpression ) ) ( ( (lv_annotations_3_0= ruleAnnotation ) )* otherlv_4= 'then' ( (lv_statements_5_0= ruleEsterelParallel ) ) )? ( (lv_elseif_6_0= ruleElsIf ) )* (otherlv_7= 'else' ( (lv_elseStatements_8_0= ruleEsterelParallel ) ) )? otherlv_9= 'end' (otherlv_10= 'if' )? )
            {
            // InternalSCEst.g:4923:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'if' ( (lv_expression_2_0= ruleExpression ) ) ( ( (lv_annotations_3_0= ruleAnnotation ) )* otherlv_4= 'then' ( (lv_statements_5_0= ruleEsterelParallel ) ) )? ( (lv_elseif_6_0= ruleElsIf ) )* (otherlv_7= 'else' ( (lv_elseStatements_8_0= ruleEsterelParallel ) ) )? otherlv_9= 'end' (otherlv_10= 'if' )? )
            // InternalSCEst.g:4924:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'if' ( (lv_expression_2_0= ruleExpression ) ) ( ( (lv_annotations_3_0= ruleAnnotation ) )* otherlv_4= 'then' ( (lv_statements_5_0= ruleEsterelParallel ) ) )? ( (lv_elseif_6_0= ruleElsIf ) )* (otherlv_7= 'else' ( (lv_elseStatements_8_0= ruleEsterelParallel ) ) )? otherlv_9= 'end' (otherlv_10= 'if' )?
            {
            // InternalSCEst.g:4924:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop100:
            do {
                int alt100=2;
                int LA100_0 = input.LA(1);

                if ( (LA100_0==RULE_COMMENT_ANNOTATION||LA100_0==128) ) {
                    alt100=1;
                }


                switch (alt100) {
            	case 1 :
            	    // InternalSCEst.g:4925:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:4925:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCEst.g:4926:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getIfTestAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_73);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getIfTestRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop100;
                }
            } while (true);

            otherlv_1=(Token)match(input,59,FollowSets000.FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getIfTestAccess().getIfKeyword_1());
              		
            }
            // InternalSCEst.g:4947:3: ( (lv_expression_2_0= ruleExpression ) )
            // InternalSCEst.g:4948:4: (lv_expression_2_0= ruleExpression )
            {
            // InternalSCEst.g:4948:4: (lv_expression_2_0= ruleExpression )
            // InternalSCEst.g:4949:5: lv_expression_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getIfTestAccess().getExpressionExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_74);
            lv_expression_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getIfTestRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"de.cau.cs.kieler.esterel.Esterel.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCEst.g:4966:3: ( ( (lv_annotations_3_0= ruleAnnotation ) )* otherlv_4= 'then' ( (lv_statements_5_0= ruleEsterelParallel ) ) )?
            int alt102=2;
            alt102 = dfa102.predict(input);
            switch (alt102) {
                case 1 :
                    // InternalSCEst.g:4967:4: ( (lv_annotations_3_0= ruleAnnotation ) )* otherlv_4= 'then' ( (lv_statements_5_0= ruleEsterelParallel ) )
                    {
                    // InternalSCEst.g:4967:4: ( (lv_annotations_3_0= ruleAnnotation ) )*
                    loop101:
                    do {
                        int alt101=2;
                        int LA101_0 = input.LA(1);

                        if ( (LA101_0==RULE_COMMENT_ANNOTATION||LA101_0==128) ) {
                            alt101=1;
                        }


                        switch (alt101) {
                    	case 1 :
                    	    // InternalSCEst.g:4968:5: (lv_annotations_3_0= ruleAnnotation )
                    	    {
                    	    // InternalSCEst.g:4968:5: (lv_annotations_3_0= ruleAnnotation )
                    	    // InternalSCEst.g:4969:6: lv_annotations_3_0= ruleAnnotation
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getIfTestAccess().getAnnotationsAnnotationParserRuleCall_3_0_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_65);
                    	    lv_annotations_3_0=ruleAnnotation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getIfTestRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"annotations",
                    	      							lv_annotations_3_0,
                    	      							"de.cau.cs.kieler.annotations.Annotations.Annotation");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop101;
                        }
                    } while (true);

                    otherlv_4=(Token)match(input,55,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getIfTestAccess().getThenKeyword_3_1());
                      			
                    }
                    // InternalSCEst.g:4990:4: ( (lv_statements_5_0= ruleEsterelParallel ) )
                    // InternalSCEst.g:4991:5: (lv_statements_5_0= ruleEsterelParallel )
                    {
                    // InternalSCEst.g:4991:5: (lv_statements_5_0= ruleEsterelParallel )
                    // InternalSCEst.g:4992:6: lv_statements_5_0= ruleEsterelParallel
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIfTestAccess().getStatementsEsterelParallelParserRuleCall_3_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_75);
                    lv_statements_5_0=ruleEsterelParallel();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIfTestRule());
                      						}
                      						add(
                      							current,
                      							"statements",
                      							lv_statements_5_0,
                      							"de.cau.cs.kieler.esterel.Esterel.EsterelParallel");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCEst.g:5010:3: ( (lv_elseif_6_0= ruleElsIf ) )*
            loop103:
            do {
                int alt103=2;
                int LA103_0 = input.LA(1);

                if ( (LA103_0==RULE_COMMENT_ANNOTATION||LA103_0==60||LA103_0==128) ) {
                    alt103=1;
                }


                switch (alt103) {
            	case 1 :
            	    // InternalSCEst.g:5011:4: (lv_elseif_6_0= ruleElsIf )
            	    {
            	    // InternalSCEst.g:5011:4: (lv_elseif_6_0= ruleElsIf )
            	    // InternalSCEst.g:5012:5: lv_elseif_6_0= ruleElsIf
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getIfTestAccess().getElseifElsIfParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_75);
            	    lv_elseif_6_0=ruleElsIf();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getIfTestRule());
            	      					}
            	      					add(
            	      						current,
            	      						"elseif",
            	      						lv_elseif_6_0,
            	      						"de.cau.cs.kieler.esterel.Esterel.ElsIf");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop103;
                }
            } while (true);

            // InternalSCEst.g:5029:3: (otherlv_7= 'else' ( (lv_elseStatements_8_0= ruleEsterelParallel ) ) )?
            int alt104=2;
            int LA104_0 = input.LA(1);

            if ( (LA104_0==56) ) {
                alt104=1;
            }
            switch (alt104) {
                case 1 :
                    // InternalSCEst.g:5030:4: otherlv_7= 'else' ( (lv_elseStatements_8_0= ruleEsterelParallel ) )
                    {
                    otherlv_7=(Token)match(input,56,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getIfTestAccess().getElseKeyword_5_0());
                      			
                    }
                    // InternalSCEst.g:5034:4: ( (lv_elseStatements_8_0= ruleEsterelParallel ) )
                    // InternalSCEst.g:5035:5: (lv_elseStatements_8_0= ruleEsterelParallel )
                    {
                    // InternalSCEst.g:5035:5: (lv_elseStatements_8_0= ruleEsterelParallel )
                    // InternalSCEst.g:5036:6: lv_elseStatements_8_0= ruleEsterelParallel
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIfTestAccess().getElseStatementsEsterelParallelParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_68);
                    lv_elseStatements_8_0=ruleEsterelParallel();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIfTestRule());
                      						}
                      						add(
                      							current,
                      							"elseStatements",
                      							lv_elseStatements_8_0,
                      							"de.cau.cs.kieler.esterel.Esterel.EsterelParallel");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_9=(Token)match(input,19,FollowSets000.FOLLOW_76); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_9, grammarAccess.getIfTestAccess().getEndKeyword_6());
              		
            }
            // InternalSCEst.g:5058:3: (otherlv_10= 'if' )?
            int alt105=2;
            alt105 = dfa105.predict(input);
            switch (alt105) {
                case 1 :
                    // InternalSCEst.g:5059:4: otherlv_10= 'if'
                    {
                    otherlv_10=(Token)match(input,59,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getIfTestAccess().getIfKeyword_7());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIfTest"


    // $ANTLR start "entryRuleElsIf"
    // InternalSCEst.g:5068:1: entryRuleElsIf returns [EObject current=null] : iv_ruleElsIf= ruleElsIf EOF ;
    public final EObject entryRuleElsIf() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleElsIf = null;


        try {
            // InternalSCEst.g:5068:46: (iv_ruleElsIf= ruleElsIf EOF )
            // InternalSCEst.g:5069:2: iv_ruleElsIf= ruleElsIf EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElsIfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleElsIf=ruleElsIf();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleElsIf; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleElsIf"


    // $ANTLR start "ruleElsIf"
    // InternalSCEst.g:5075:1: ruleElsIf returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'elsif' ( (lv_expression_2_0= ruleExpression ) ) (otherlv_3= 'then' ( (lv_statements_4_0= ruleEsterelParallel ) ) )? ) ;
    public final EObject ruleElsIf() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_expression_2_0 = null;

        EObject lv_statements_4_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:5081:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'elsif' ( (lv_expression_2_0= ruleExpression ) ) (otherlv_3= 'then' ( (lv_statements_4_0= ruleEsterelParallel ) ) )? ) )
            // InternalSCEst.g:5082:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'elsif' ( (lv_expression_2_0= ruleExpression ) ) (otherlv_3= 'then' ( (lv_statements_4_0= ruleEsterelParallel ) ) )? )
            {
            // InternalSCEst.g:5082:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'elsif' ( (lv_expression_2_0= ruleExpression ) ) (otherlv_3= 'then' ( (lv_statements_4_0= ruleEsterelParallel ) ) )? )
            // InternalSCEst.g:5083:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'elsif' ( (lv_expression_2_0= ruleExpression ) ) (otherlv_3= 'then' ( (lv_statements_4_0= ruleEsterelParallel ) ) )?
            {
            // InternalSCEst.g:5083:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop106:
            do {
                int alt106=2;
                int LA106_0 = input.LA(1);

                if ( (LA106_0==RULE_COMMENT_ANNOTATION||LA106_0==128) ) {
                    alt106=1;
                }


                switch (alt106) {
            	case 1 :
            	    // InternalSCEst.g:5084:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:5084:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCEst.g:5085:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getElsIfAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_77);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getElsIfRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop106;
                }
            } while (true);

            otherlv_1=(Token)match(input,60,FollowSets000.FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getElsIfAccess().getElsifKeyword_1());
              		
            }
            // InternalSCEst.g:5106:3: ( (lv_expression_2_0= ruleExpression ) )
            // InternalSCEst.g:5107:4: (lv_expression_2_0= ruleExpression )
            {
            // InternalSCEst.g:5107:4: (lv_expression_2_0= ruleExpression )
            // InternalSCEst.g:5108:5: lv_expression_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getElsIfAccess().getExpressionExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_78);
            lv_expression_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getElsIfRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"de.cau.cs.kieler.esterel.Esterel.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCEst.g:5125:3: (otherlv_3= 'then' ( (lv_statements_4_0= ruleEsterelParallel ) ) )?
            int alt107=2;
            int LA107_0 = input.LA(1);

            if ( (LA107_0==55) ) {
                alt107=1;
            }
            switch (alt107) {
                case 1 :
                    // InternalSCEst.g:5126:4: otherlv_3= 'then' ( (lv_statements_4_0= ruleEsterelParallel ) )
                    {
                    otherlv_3=(Token)match(input,55,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getElsIfAccess().getThenKeyword_3_0());
                      			
                    }
                    // InternalSCEst.g:5130:4: ( (lv_statements_4_0= ruleEsterelParallel ) )
                    // InternalSCEst.g:5131:5: (lv_statements_4_0= ruleEsterelParallel )
                    {
                    // InternalSCEst.g:5131:5: (lv_statements_4_0= ruleEsterelParallel )
                    // InternalSCEst.g:5132:6: lv_statements_4_0= ruleEsterelParallel
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getElsIfAccess().getStatementsEsterelParallelParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_statements_4_0=ruleEsterelParallel();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getElsIfRule());
                      						}
                      						add(
                      							current,
                      							"statements",
                      							lv_statements_4_0,
                      							"de.cau.cs.kieler.esterel.Esterel.EsterelParallel");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleElsIf"


    // $ANTLR start "entryRuleLoop"
    // InternalSCEst.g:5154:1: entryRuleLoop returns [EObject current=null] : iv_ruleLoop= ruleLoop EOF ;
    public final EObject entryRuleLoop() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLoop = null;


        try {
            // InternalSCEst.g:5154:45: (iv_ruleLoop= ruleLoop EOF )
            // InternalSCEst.g:5155:2: iv_ruleLoop= ruleLoop EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLoopRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLoop=ruleLoop();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLoop; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLoop"


    // $ANTLR start "ruleLoop"
    // InternalSCEst.g:5161:1: ruleLoop returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'loop' ( (lv_statements_3_0= ruleEsterelParallel ) ) ( (otherlv_4= 'end' (otherlv_5= 'loop' )? ) | (otherlv_6= 'each' ( (lv_delay_7_0= ruleDelayExpression ) ) ) ) ) ;
    public final EObject ruleLoop() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject lv_annotations_1_0 = null;

        EObject lv_statements_3_0 = null;

        EObject lv_delay_7_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:5167:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'loop' ( (lv_statements_3_0= ruleEsterelParallel ) ) ( (otherlv_4= 'end' (otherlv_5= 'loop' )? ) | (otherlv_6= 'each' ( (lv_delay_7_0= ruleDelayExpression ) ) ) ) ) )
            // InternalSCEst.g:5168:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'loop' ( (lv_statements_3_0= ruleEsterelParallel ) ) ( (otherlv_4= 'end' (otherlv_5= 'loop' )? ) | (otherlv_6= 'each' ( (lv_delay_7_0= ruleDelayExpression ) ) ) ) )
            {
            // InternalSCEst.g:5168:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'loop' ( (lv_statements_3_0= ruleEsterelParallel ) ) ( (otherlv_4= 'end' (otherlv_5= 'loop' )? ) | (otherlv_6= 'each' ( (lv_delay_7_0= ruleDelayExpression ) ) ) ) )
            // InternalSCEst.g:5169:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'loop' ( (lv_statements_3_0= ruleEsterelParallel ) ) ( (otherlv_4= 'end' (otherlv_5= 'loop' )? ) | (otherlv_6= 'each' ( (lv_delay_7_0= ruleDelayExpression ) ) ) )
            {
            // InternalSCEst.g:5169:3: ()
            // InternalSCEst.g:5170:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getLoopAccess().getLoopAction_0(),
              					current);
              			
            }

            }

            // InternalSCEst.g:5179:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop108:
            do {
                int alt108=2;
                int LA108_0 = input.LA(1);

                if ( (LA108_0==RULE_COMMENT_ANNOTATION||LA108_0==128) ) {
                    alt108=1;
                }


                switch (alt108) {
            	case 1 :
            	    // InternalSCEst.g:5180:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:5180:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCEst.g:5181:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getLoopAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_79);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getLoopRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop108;
                }
            } while (true);

            otherlv_2=(Token)match(input,61,FollowSets000.FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getLoopAccess().getLoopKeyword_2());
              		
            }
            // InternalSCEst.g:5202:3: ( (lv_statements_3_0= ruleEsterelParallel ) )
            // InternalSCEst.g:5203:4: (lv_statements_3_0= ruleEsterelParallel )
            {
            // InternalSCEst.g:5203:4: (lv_statements_3_0= ruleEsterelParallel )
            // InternalSCEst.g:5204:5: lv_statements_3_0= ruleEsterelParallel
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLoopAccess().getStatementsEsterelParallelParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_80);
            lv_statements_3_0=ruleEsterelParallel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLoopRule());
              					}
              					add(
              						current,
              						"statements",
              						lv_statements_3_0,
              						"de.cau.cs.kieler.esterel.Esterel.EsterelParallel");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCEst.g:5221:3: ( (otherlv_4= 'end' (otherlv_5= 'loop' )? ) | (otherlv_6= 'each' ( (lv_delay_7_0= ruleDelayExpression ) ) ) )
            int alt110=2;
            int LA110_0 = input.LA(1);

            if ( (LA110_0==19) ) {
                alt110=1;
            }
            else if ( (LA110_0==62) ) {
                alt110=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 110, 0, input);

                throw nvae;
            }
            switch (alt110) {
                case 1 :
                    // InternalSCEst.g:5222:4: (otherlv_4= 'end' (otherlv_5= 'loop' )? )
                    {
                    // InternalSCEst.g:5222:4: (otherlv_4= 'end' (otherlv_5= 'loop' )? )
                    // InternalSCEst.g:5223:5: otherlv_4= 'end' (otherlv_5= 'loop' )?
                    {
                    otherlv_4=(Token)match(input,19,FollowSets000.FOLLOW_81); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_4, grammarAccess.getLoopAccess().getEndKeyword_4_0_0());
                      				
                    }
                    // InternalSCEst.g:5227:5: (otherlv_5= 'loop' )?
                    int alt109=2;
                    alt109 = dfa109.predict(input);
                    switch (alt109) {
                        case 1 :
                            // InternalSCEst.g:5228:6: otherlv_5= 'loop'
                            {
                            otherlv_5=(Token)match(input,61,FollowSets000.FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_5, grammarAccess.getLoopAccess().getLoopKeyword_4_0_1());
                              					
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCEst.g:5235:4: (otherlv_6= 'each' ( (lv_delay_7_0= ruleDelayExpression ) ) )
                    {
                    // InternalSCEst.g:5235:4: (otherlv_6= 'each' ( (lv_delay_7_0= ruleDelayExpression ) ) )
                    // InternalSCEst.g:5236:5: otherlv_6= 'each' ( (lv_delay_7_0= ruleDelayExpression ) )
                    {
                    otherlv_6=(Token)match(input,62,FollowSets000.FOLLOW_82); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getLoopAccess().getEachKeyword_4_1_0());
                      				
                    }
                    // InternalSCEst.g:5240:5: ( (lv_delay_7_0= ruleDelayExpression ) )
                    // InternalSCEst.g:5241:6: (lv_delay_7_0= ruleDelayExpression )
                    {
                    // InternalSCEst.g:5241:6: (lv_delay_7_0= ruleDelayExpression )
                    // InternalSCEst.g:5242:7: lv_delay_7_0= ruleDelayExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLoopAccess().getDelayDelayExpressionParserRuleCall_4_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_delay_7_0=ruleDelayExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLoopRule());
                      							}
                      							set(
                      								current,
                      								"delay",
                      								lv_delay_7_0,
                      								"de.cau.cs.kieler.esterel.Esterel.DelayExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLoop"


    // $ANTLR start "entryRuleRepeat"
    // InternalSCEst.g:5265:1: entryRuleRepeat returns [EObject current=null] : iv_ruleRepeat= ruleRepeat EOF ;
    public final EObject entryRuleRepeat() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRepeat = null;


        try {
            // InternalSCEst.g:5265:47: (iv_ruleRepeat= ruleRepeat EOF )
            // InternalSCEst.g:5266:2: iv_ruleRepeat= ruleRepeat EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRepeatRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRepeat=ruleRepeat();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRepeat; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRepeat"


    // $ANTLR start "ruleRepeat"
    // InternalSCEst.g:5272:1: ruleRepeat returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_positive_1_0= 'positive' ) )? otherlv_2= 'repeat' ( (lv_expression_3_0= ruleExpression ) ) otherlv_4= 'times' ( (lv_statements_5_0= ruleEsterelParallel ) ) otherlv_6= 'end' (otherlv_7= 'repeat' )? ) ;
    public final EObject ruleRepeat() throws RecognitionException {
        EObject current = null;

        Token lv_positive_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_expression_3_0 = null;

        EObject lv_statements_5_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:5278:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_positive_1_0= 'positive' ) )? otherlv_2= 'repeat' ( (lv_expression_3_0= ruleExpression ) ) otherlv_4= 'times' ( (lv_statements_5_0= ruleEsterelParallel ) ) otherlv_6= 'end' (otherlv_7= 'repeat' )? ) )
            // InternalSCEst.g:5279:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_positive_1_0= 'positive' ) )? otherlv_2= 'repeat' ( (lv_expression_3_0= ruleExpression ) ) otherlv_4= 'times' ( (lv_statements_5_0= ruleEsterelParallel ) ) otherlv_6= 'end' (otherlv_7= 'repeat' )? )
            {
            // InternalSCEst.g:5279:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_positive_1_0= 'positive' ) )? otherlv_2= 'repeat' ( (lv_expression_3_0= ruleExpression ) ) otherlv_4= 'times' ( (lv_statements_5_0= ruleEsterelParallel ) ) otherlv_6= 'end' (otherlv_7= 'repeat' )? )
            // InternalSCEst.g:5280:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_positive_1_0= 'positive' ) )? otherlv_2= 'repeat' ( (lv_expression_3_0= ruleExpression ) ) otherlv_4= 'times' ( (lv_statements_5_0= ruleEsterelParallel ) ) otherlv_6= 'end' (otherlv_7= 'repeat' )?
            {
            // InternalSCEst.g:5280:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop111:
            do {
                int alt111=2;
                int LA111_0 = input.LA(1);

                if ( (LA111_0==RULE_COMMENT_ANNOTATION||LA111_0==128) ) {
                    alt111=1;
                }


                switch (alt111) {
            	case 1 :
            	    // InternalSCEst.g:5281:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:5281:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCEst.g:5282:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getRepeatAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_83);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getRepeatRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop111;
                }
            } while (true);

            // InternalSCEst.g:5299:3: ( (lv_positive_1_0= 'positive' ) )?
            int alt112=2;
            int LA112_0 = input.LA(1);

            if ( (LA112_0==63) ) {
                alt112=1;
            }
            switch (alt112) {
                case 1 :
                    // InternalSCEst.g:5300:4: (lv_positive_1_0= 'positive' )
                    {
                    // InternalSCEst.g:5300:4: (lv_positive_1_0= 'positive' )
                    // InternalSCEst.g:5301:5: lv_positive_1_0= 'positive'
                    {
                    lv_positive_1_0=(Token)match(input,63,FollowSets000.FOLLOW_84); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_positive_1_0, grammarAccess.getRepeatAccess().getPositivePositiveKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getRepeatRule());
                      					}
                      					setWithLastConsumed(current, "positive", true, "positive");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,64,FollowSets000.FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getRepeatAccess().getRepeatKeyword_2());
              		
            }
            // InternalSCEst.g:5317:3: ( (lv_expression_3_0= ruleExpression ) )
            // InternalSCEst.g:5318:4: (lv_expression_3_0= ruleExpression )
            {
            // InternalSCEst.g:5318:4: (lv_expression_3_0= ruleExpression )
            // InternalSCEst.g:5319:5: lv_expression_3_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRepeatAccess().getExpressionExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_85);
            lv_expression_3_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRepeatRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_3_0,
              						"de.cau.cs.kieler.esterel.Esterel.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,65,FollowSets000.FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getRepeatAccess().getTimesKeyword_4());
              		
            }
            // InternalSCEst.g:5340:3: ( (lv_statements_5_0= ruleEsterelParallel ) )
            // InternalSCEst.g:5341:4: (lv_statements_5_0= ruleEsterelParallel )
            {
            // InternalSCEst.g:5341:4: (lv_statements_5_0= ruleEsterelParallel )
            // InternalSCEst.g:5342:5: lv_statements_5_0= ruleEsterelParallel
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRepeatAccess().getStatementsEsterelParallelParserRuleCall_5_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_68);
            lv_statements_5_0=ruleEsterelParallel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRepeatRule());
              					}
              					add(
              						current,
              						"statements",
              						lv_statements_5_0,
              						"de.cau.cs.kieler.esterel.Esterel.EsterelParallel");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_6=(Token)match(input,19,FollowSets000.FOLLOW_86); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getRepeatAccess().getEndKeyword_6());
              		
            }
            // InternalSCEst.g:5363:3: (otherlv_7= 'repeat' )?
            int alt113=2;
            alt113 = dfa113.predict(input);
            switch (alt113) {
                case 1 :
                    // InternalSCEst.g:5364:4: otherlv_7= 'repeat'
                    {
                    otherlv_7=(Token)match(input,64,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getRepeatAccess().getRepeatKeyword_7());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRepeat"


    // $ANTLR start "entryRuleAbort"
    // InternalSCEst.g:5373:1: entryRuleAbort returns [EObject current=null] : iv_ruleAbort= ruleAbort EOF ;
    public final EObject entryRuleAbort() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAbort = null;


        try {
            // InternalSCEst.g:5373:46: (iv_ruleAbort= ruleAbort EOF )
            // InternalSCEst.g:5374:2: iv_ruleAbort= ruleAbort EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAbortRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAbort=ruleAbort();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAbort; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAbort"


    // $ANTLR start "ruleAbort"
    // InternalSCEst.g:5380:1: ruleAbort returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( (lv_weak_1_0= 'weak' ) )? otherlv_2= 'abort' ) ( (lv_statements_3_0= ruleEsterelParallel ) ) otherlv_4= 'when' ( ( ( (lv_delay_5_0= ruleDelayExpression ) ) (otherlv_6= 'do' ( (lv_doStatements_7_0= ruleEsterelParallel ) ) otherlv_8= 'end' (otherlv_9= 'weak' )? (otherlv_10= 'abort' )? )? ) | ( ( (lv_cases_11_0= ruleCase ) )+ otherlv_12= 'end' (otherlv_13= 'weak' )? (otherlv_14= 'abort' )? ) ) ) ;
    public final EObject ruleAbort() throws RecognitionException {
        EObject current = null;

        Token lv_weak_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_statements_3_0 = null;

        EObject lv_delay_5_0 = null;

        EObject lv_doStatements_7_0 = null;

        EObject lv_cases_11_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:5386:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( (lv_weak_1_0= 'weak' ) )? otherlv_2= 'abort' ) ( (lv_statements_3_0= ruleEsterelParallel ) ) otherlv_4= 'when' ( ( ( (lv_delay_5_0= ruleDelayExpression ) ) (otherlv_6= 'do' ( (lv_doStatements_7_0= ruleEsterelParallel ) ) otherlv_8= 'end' (otherlv_9= 'weak' )? (otherlv_10= 'abort' )? )? ) | ( ( (lv_cases_11_0= ruleCase ) )+ otherlv_12= 'end' (otherlv_13= 'weak' )? (otherlv_14= 'abort' )? ) ) ) )
            // InternalSCEst.g:5387:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( (lv_weak_1_0= 'weak' ) )? otherlv_2= 'abort' ) ( (lv_statements_3_0= ruleEsterelParallel ) ) otherlv_4= 'when' ( ( ( (lv_delay_5_0= ruleDelayExpression ) ) (otherlv_6= 'do' ( (lv_doStatements_7_0= ruleEsterelParallel ) ) otherlv_8= 'end' (otherlv_9= 'weak' )? (otherlv_10= 'abort' )? )? ) | ( ( (lv_cases_11_0= ruleCase ) )+ otherlv_12= 'end' (otherlv_13= 'weak' )? (otherlv_14= 'abort' )? ) ) )
            {
            // InternalSCEst.g:5387:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( (lv_weak_1_0= 'weak' ) )? otherlv_2= 'abort' ) ( (lv_statements_3_0= ruleEsterelParallel ) ) otherlv_4= 'when' ( ( ( (lv_delay_5_0= ruleDelayExpression ) ) (otherlv_6= 'do' ( (lv_doStatements_7_0= ruleEsterelParallel ) ) otherlv_8= 'end' (otherlv_9= 'weak' )? (otherlv_10= 'abort' )? )? ) | ( ( (lv_cases_11_0= ruleCase ) )+ otherlv_12= 'end' (otherlv_13= 'weak' )? (otherlv_14= 'abort' )? ) ) )
            // InternalSCEst.g:5388:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( (lv_weak_1_0= 'weak' ) )? otherlv_2= 'abort' ) ( (lv_statements_3_0= ruleEsterelParallel ) ) otherlv_4= 'when' ( ( ( (lv_delay_5_0= ruleDelayExpression ) ) (otherlv_6= 'do' ( (lv_doStatements_7_0= ruleEsterelParallel ) ) otherlv_8= 'end' (otherlv_9= 'weak' )? (otherlv_10= 'abort' )? )? ) | ( ( (lv_cases_11_0= ruleCase ) )+ otherlv_12= 'end' (otherlv_13= 'weak' )? (otherlv_14= 'abort' )? ) )
            {
            // InternalSCEst.g:5388:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop114:
            do {
                int alt114=2;
                int LA114_0 = input.LA(1);

                if ( (LA114_0==RULE_COMMENT_ANNOTATION||LA114_0==128) ) {
                    alt114=1;
                }


                switch (alt114) {
            	case 1 :
            	    // InternalSCEst.g:5389:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:5389:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCEst.g:5390:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAbortAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_87);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAbortRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop114;
                }
            } while (true);

            // InternalSCEst.g:5407:3: ( ( (lv_weak_1_0= 'weak' ) )? otherlv_2= 'abort' )
            // InternalSCEst.g:5408:4: ( (lv_weak_1_0= 'weak' ) )? otherlv_2= 'abort'
            {
            // InternalSCEst.g:5408:4: ( (lv_weak_1_0= 'weak' ) )?
            int alt115=2;
            int LA115_0 = input.LA(1);

            if ( (LA115_0==66) ) {
                alt115=1;
            }
            switch (alt115) {
                case 1 :
                    // InternalSCEst.g:5409:5: (lv_weak_1_0= 'weak' )
                    {
                    // InternalSCEst.g:5409:5: (lv_weak_1_0= 'weak' )
                    // InternalSCEst.g:5410:6: lv_weak_1_0= 'weak'
                    {
                    lv_weak_1_0=(Token)match(input,66,FollowSets000.FOLLOW_88); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_weak_1_0, grammarAccess.getAbortAccess().getWeakWeakKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getAbortRule());
                      						}
                      						setWithLastConsumed(current, "weak", true, "weak");
                      					
                    }

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,67,FollowSets000.FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_2, grammarAccess.getAbortAccess().getAbortKeyword_1_1());
              			
            }

            }

            // InternalSCEst.g:5427:3: ( (lv_statements_3_0= ruleEsterelParallel ) )
            // InternalSCEst.g:5428:4: (lv_statements_3_0= ruleEsterelParallel )
            {
            // InternalSCEst.g:5428:4: (lv_statements_3_0= ruleEsterelParallel )
            // InternalSCEst.g:5429:5: lv_statements_3_0= ruleEsterelParallel
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAbortAccess().getStatementsEsterelParallelParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_89);
            lv_statements_3_0=ruleEsterelParallel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAbortRule());
              					}
              					add(
              						current,
              						"statements",
              						lv_statements_3_0,
              						"de.cau.cs.kieler.esterel.Esterel.EsterelParallel");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,68,FollowSets000.FOLLOW_90); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getAbortAccess().getWhenKeyword_3());
              		
            }
            // InternalSCEst.g:5450:3: ( ( ( (lv_delay_5_0= ruleDelayExpression ) ) (otherlv_6= 'do' ( (lv_doStatements_7_0= ruleEsterelParallel ) ) otherlv_8= 'end' (otherlv_9= 'weak' )? (otherlv_10= 'abort' )? )? ) | ( ( (lv_cases_11_0= ruleCase ) )+ otherlv_12= 'end' (otherlv_13= 'weak' )? (otherlv_14= 'abort' )? ) )
            int alt122=2;
            alt122 = dfa122.predict(input);
            switch (alt122) {
                case 1 :
                    // InternalSCEst.g:5451:4: ( ( (lv_delay_5_0= ruleDelayExpression ) ) (otherlv_6= 'do' ( (lv_doStatements_7_0= ruleEsterelParallel ) ) otherlv_8= 'end' (otherlv_9= 'weak' )? (otherlv_10= 'abort' )? )? )
                    {
                    // InternalSCEst.g:5451:4: ( ( (lv_delay_5_0= ruleDelayExpression ) ) (otherlv_6= 'do' ( (lv_doStatements_7_0= ruleEsterelParallel ) ) otherlv_8= 'end' (otherlv_9= 'weak' )? (otherlv_10= 'abort' )? )? )
                    // InternalSCEst.g:5452:5: ( (lv_delay_5_0= ruleDelayExpression ) ) (otherlv_6= 'do' ( (lv_doStatements_7_0= ruleEsterelParallel ) ) otherlv_8= 'end' (otherlv_9= 'weak' )? (otherlv_10= 'abort' )? )?
                    {
                    // InternalSCEst.g:5452:5: ( (lv_delay_5_0= ruleDelayExpression ) )
                    // InternalSCEst.g:5453:6: (lv_delay_5_0= ruleDelayExpression )
                    {
                    // InternalSCEst.g:5453:6: (lv_delay_5_0= ruleDelayExpression )
                    // InternalSCEst.g:5454:7: lv_delay_5_0= ruleDelayExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getAbortAccess().getDelayDelayExpressionParserRuleCall_4_0_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_72);
                    lv_delay_5_0=ruleDelayExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getAbortRule());
                      							}
                      							set(
                      								current,
                      								"delay",
                      								lv_delay_5_0,
                      								"de.cau.cs.kieler.esterel.Esterel.DelayExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCEst.g:5471:5: (otherlv_6= 'do' ( (lv_doStatements_7_0= ruleEsterelParallel ) ) otherlv_8= 'end' (otherlv_9= 'weak' )? (otherlv_10= 'abort' )? )?
                    int alt118=2;
                    alt118 = dfa118.predict(input);
                    switch (alt118) {
                        case 1 :
                            // InternalSCEst.g:5472:6: otherlv_6= 'do' ( (lv_doStatements_7_0= ruleEsterelParallel ) ) otherlv_8= 'end' (otherlv_9= 'weak' )? (otherlv_10= 'abort' )?
                            {
                            otherlv_6=(Token)match(input,58,FollowSets000.FOLLOW_12); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_6, grammarAccess.getAbortAccess().getDoKeyword_4_0_1_0());
                              					
                            }
                            // InternalSCEst.g:5476:6: ( (lv_doStatements_7_0= ruleEsterelParallel ) )
                            // InternalSCEst.g:5477:7: (lv_doStatements_7_0= ruleEsterelParallel )
                            {
                            // InternalSCEst.g:5477:7: (lv_doStatements_7_0= ruleEsterelParallel )
                            // InternalSCEst.g:5478:8: lv_doStatements_7_0= ruleEsterelParallel
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getAbortAccess().getDoStatementsEsterelParallelParserRuleCall_4_0_1_1_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_68);
                            lv_doStatements_7_0=ruleEsterelParallel();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getAbortRule());
                              								}
                              								add(
                              									current,
                              									"doStatements",
                              									lv_doStatements_7_0,
                              									"de.cau.cs.kieler.esterel.Esterel.EsterelParallel");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_8=(Token)match(input,19,FollowSets000.FOLLOW_91); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_8, grammarAccess.getAbortAccess().getEndKeyword_4_0_1_2());
                              					
                            }
                            // InternalSCEst.g:5499:6: (otherlv_9= 'weak' )?
                            int alt116=2;
                            int LA116_0 = input.LA(1);

                            if ( (LA116_0==66) ) {
                                int LA116_1 = input.LA(2);

                                if ( (synpred173_InternalSCEst()) ) {
                                    alt116=1;
                                }
                            }
                            switch (alt116) {
                                case 1 :
                                    // InternalSCEst.g:5500:7: otherlv_9= 'weak'
                                    {
                                    otherlv_9=(Token)match(input,66,FollowSets000.FOLLOW_92); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_9, grammarAccess.getAbortAccess().getWeakKeyword_4_0_1_3());
                                      						
                                    }

                                    }
                                    break;

                            }

                            // InternalSCEst.g:5505:6: (otherlv_10= 'abort' )?
                            int alt117=2;
                            alt117 = dfa117.predict(input);
                            switch (alt117) {
                                case 1 :
                                    // InternalSCEst.g:5506:7: otherlv_10= 'abort'
                                    {
                                    otherlv_10=(Token)match(input,67,FollowSets000.FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_10, grammarAccess.getAbortAccess().getAbortKeyword_4_0_1_4());
                                      						
                                    }

                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCEst.g:5514:4: ( ( (lv_cases_11_0= ruleCase ) )+ otherlv_12= 'end' (otherlv_13= 'weak' )? (otherlv_14= 'abort' )? )
                    {
                    // InternalSCEst.g:5514:4: ( ( (lv_cases_11_0= ruleCase ) )+ otherlv_12= 'end' (otherlv_13= 'weak' )? (otherlv_14= 'abort' )? )
                    // InternalSCEst.g:5515:5: ( (lv_cases_11_0= ruleCase ) )+ otherlv_12= 'end' (otherlv_13= 'weak' )? (otherlv_14= 'abort' )?
                    {
                    // InternalSCEst.g:5515:5: ( (lv_cases_11_0= ruleCase ) )+
                    int cnt119=0;
                    loop119:
                    do {
                        int alt119=2;
                        int LA119_0 = input.LA(1);

                        if ( (LA119_0==RULE_COMMENT_ANNOTATION||LA119_0==57||LA119_0==128) ) {
                            alt119=1;
                        }


                        switch (alt119) {
                    	case 1 :
                    	    // InternalSCEst.g:5516:6: (lv_cases_11_0= ruleCase )
                    	    {
                    	    // InternalSCEst.g:5516:6: (lv_cases_11_0= ruleCase )
                    	    // InternalSCEst.g:5517:7: lv_cases_11_0= ruleCase
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAbortAccess().getCasesCaseParserRuleCall_4_1_0_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_93);
                    	    lv_cases_11_0=ruleCase();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAbortRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"cases",
                    	      								lv_cases_11_0,
                    	      								"de.cau.cs.kieler.esterel.Esterel.Case");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt119 >= 1 ) break loop119;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(119, input);
                                throw eee;
                        }
                        cnt119++;
                    } while (true);

                    otherlv_12=(Token)match(input,19,FollowSets000.FOLLOW_91); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_12, grammarAccess.getAbortAccess().getEndKeyword_4_1_1());
                      				
                    }
                    // InternalSCEst.g:5538:5: (otherlv_13= 'weak' )?
                    int alt120=2;
                    int LA120_0 = input.LA(1);

                    if ( (LA120_0==66) ) {
                        int LA120_1 = input.LA(2);

                        if ( (synpred178_InternalSCEst()) ) {
                            alt120=1;
                        }
                    }
                    switch (alt120) {
                        case 1 :
                            // InternalSCEst.g:5539:6: otherlv_13= 'weak'
                            {
                            otherlv_13=(Token)match(input,66,FollowSets000.FOLLOW_92); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_13, grammarAccess.getAbortAccess().getWeakKeyword_4_1_2());
                              					
                            }

                            }
                            break;

                    }

                    // InternalSCEst.g:5544:5: (otherlv_14= 'abort' )?
                    int alt121=2;
                    alt121 = dfa121.predict(input);
                    switch (alt121) {
                        case 1 :
                            // InternalSCEst.g:5545:6: otherlv_14= 'abort'
                            {
                            otherlv_14=(Token)match(input,67,FollowSets000.FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_14, grammarAccess.getAbortAccess().getAbortKeyword_4_1_3());
                              					
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAbort"


    // $ANTLR start "entryRuleCase"
    // InternalSCEst.g:5556:1: entryRuleCase returns [EObject current=null] : iv_ruleCase= ruleCase EOF ;
    public final EObject entryRuleCase() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCase = null;


        try {
            // InternalSCEst.g:5556:45: (iv_ruleCase= ruleCase EOF )
            // InternalSCEst.g:5557:2: iv_ruleCase= ruleCase EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCaseRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCase=ruleCase();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCase; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCase"


    // $ANTLR start "ruleCase"
    // InternalSCEst.g:5563:1: ruleCase returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'case' ( (lv_delay_2_0= ruleDelayExpression ) ) (otherlv_3= 'do' ( (lv_statements_4_0= ruleEsterelParallel ) ) )? ) ;
    public final EObject ruleCase() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_delay_2_0 = null;

        EObject lv_statements_4_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:5569:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'case' ( (lv_delay_2_0= ruleDelayExpression ) ) (otherlv_3= 'do' ( (lv_statements_4_0= ruleEsterelParallel ) ) )? ) )
            // InternalSCEst.g:5570:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'case' ( (lv_delay_2_0= ruleDelayExpression ) ) (otherlv_3= 'do' ( (lv_statements_4_0= ruleEsterelParallel ) ) )? )
            {
            // InternalSCEst.g:5570:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'case' ( (lv_delay_2_0= ruleDelayExpression ) ) (otherlv_3= 'do' ( (lv_statements_4_0= ruleEsterelParallel ) ) )? )
            // InternalSCEst.g:5571:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'case' ( (lv_delay_2_0= ruleDelayExpression ) ) (otherlv_3= 'do' ( (lv_statements_4_0= ruleEsterelParallel ) ) )?
            {
            // InternalSCEst.g:5571:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop123:
            do {
                int alt123=2;
                int LA123_0 = input.LA(1);

                if ( (LA123_0==RULE_COMMENT_ANNOTATION||LA123_0==128) ) {
                    alt123=1;
                }


                switch (alt123) {
            	case 1 :
            	    // InternalSCEst.g:5572:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:5572:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCEst.g:5573:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getCaseAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_70);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getCaseRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop123;
                }
            } while (true);

            otherlv_1=(Token)match(input,57,FollowSets000.FOLLOW_82); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getCaseAccess().getCaseKeyword_1());
              		
            }
            // InternalSCEst.g:5594:3: ( (lv_delay_2_0= ruleDelayExpression ) )
            // InternalSCEst.g:5595:4: (lv_delay_2_0= ruleDelayExpression )
            {
            // InternalSCEst.g:5595:4: (lv_delay_2_0= ruleDelayExpression )
            // InternalSCEst.g:5596:5: lv_delay_2_0= ruleDelayExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getCaseAccess().getDelayDelayExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_72);
            lv_delay_2_0=ruleDelayExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getCaseRule());
              					}
              					set(
              						current,
              						"delay",
              						lv_delay_2_0,
              						"de.cau.cs.kieler.esterel.Esterel.DelayExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCEst.g:5613:3: (otherlv_3= 'do' ( (lv_statements_4_0= ruleEsterelParallel ) ) )?
            int alt124=2;
            int LA124_0 = input.LA(1);

            if ( (LA124_0==58) ) {
                alt124=1;
            }
            switch (alt124) {
                case 1 :
                    // InternalSCEst.g:5614:4: otherlv_3= 'do' ( (lv_statements_4_0= ruleEsterelParallel ) )
                    {
                    otherlv_3=(Token)match(input,58,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getCaseAccess().getDoKeyword_3_0());
                      			
                    }
                    // InternalSCEst.g:5618:4: ( (lv_statements_4_0= ruleEsterelParallel ) )
                    // InternalSCEst.g:5619:5: (lv_statements_4_0= ruleEsterelParallel )
                    {
                    // InternalSCEst.g:5619:5: (lv_statements_4_0= ruleEsterelParallel )
                    // InternalSCEst.g:5620:6: lv_statements_4_0= ruleEsterelParallel
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getCaseAccess().getStatementsEsterelParallelParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_statements_4_0=ruleEsterelParallel();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getCaseRule());
                      						}
                      						add(
                      							current,
                      							"statements",
                      							lv_statements_4_0,
                      							"de.cau.cs.kieler.esterel.Esterel.EsterelParallel");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCase"


    // $ANTLR start "entryRuleAwait"
    // InternalSCEst.g:5642:1: entryRuleAwait returns [EObject current=null] : iv_ruleAwait= ruleAwait EOF ;
    public final EObject entryRuleAwait() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAwait = null;


        try {
            // InternalSCEst.g:5642:46: (iv_ruleAwait= ruleAwait EOF )
            // InternalSCEst.g:5643:2: iv_ruleAwait= ruleAwait EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAwaitRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAwait=ruleAwait();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAwait; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAwait"


    // $ANTLR start "ruleAwait"
    // InternalSCEst.g:5649:1: ruleAwait returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'await' ( ( ( (lv_delay_2_0= ruleDelayExpression ) ) (otherlv_3= 'do' ( (lv_statements_4_0= ruleEsterelParallel ) ) otherlv_5= 'end' (otherlv_6= 'await' )? )? ) | ( ( (lv_cases_7_0= ruleCase ) )+ otherlv_8= 'end' (otherlv_9= 'await' )? ) ) ) ;
    public final EObject ruleAwait() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_delay_2_0 = null;

        EObject lv_statements_4_0 = null;

        EObject lv_cases_7_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:5655:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'await' ( ( ( (lv_delay_2_0= ruleDelayExpression ) ) (otherlv_3= 'do' ( (lv_statements_4_0= ruleEsterelParallel ) ) otherlv_5= 'end' (otherlv_6= 'await' )? )? ) | ( ( (lv_cases_7_0= ruleCase ) )+ otherlv_8= 'end' (otherlv_9= 'await' )? ) ) ) )
            // InternalSCEst.g:5656:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'await' ( ( ( (lv_delay_2_0= ruleDelayExpression ) ) (otherlv_3= 'do' ( (lv_statements_4_0= ruleEsterelParallel ) ) otherlv_5= 'end' (otherlv_6= 'await' )? )? ) | ( ( (lv_cases_7_0= ruleCase ) )+ otherlv_8= 'end' (otherlv_9= 'await' )? ) ) )
            {
            // InternalSCEst.g:5656:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'await' ( ( ( (lv_delay_2_0= ruleDelayExpression ) ) (otherlv_3= 'do' ( (lv_statements_4_0= ruleEsterelParallel ) ) otherlv_5= 'end' (otherlv_6= 'await' )? )? ) | ( ( (lv_cases_7_0= ruleCase ) )+ otherlv_8= 'end' (otherlv_9= 'await' )? ) ) )
            // InternalSCEst.g:5657:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'await' ( ( ( (lv_delay_2_0= ruleDelayExpression ) ) (otherlv_3= 'do' ( (lv_statements_4_0= ruleEsterelParallel ) ) otherlv_5= 'end' (otherlv_6= 'await' )? )? ) | ( ( (lv_cases_7_0= ruleCase ) )+ otherlv_8= 'end' (otherlv_9= 'await' )? ) )
            {
            // InternalSCEst.g:5657:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop125:
            do {
                int alt125=2;
                int LA125_0 = input.LA(1);

                if ( (LA125_0==RULE_COMMENT_ANNOTATION||LA125_0==128) ) {
                    alt125=1;
                }


                switch (alt125) {
            	case 1 :
            	    // InternalSCEst.g:5658:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:5658:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCEst.g:5659:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAwaitAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_94);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAwaitRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop125;
                }
            } while (true);

            otherlv_1=(Token)match(input,69,FollowSets000.FOLLOW_90); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAwaitAccess().getAwaitKeyword_1());
              		
            }
            // InternalSCEst.g:5680:3: ( ( ( (lv_delay_2_0= ruleDelayExpression ) ) (otherlv_3= 'do' ( (lv_statements_4_0= ruleEsterelParallel ) ) otherlv_5= 'end' (otherlv_6= 'await' )? )? ) | ( ( (lv_cases_7_0= ruleCase ) )+ otherlv_8= 'end' (otherlv_9= 'await' )? ) )
            int alt130=2;
            alt130 = dfa130.predict(input);
            switch (alt130) {
                case 1 :
                    // InternalSCEst.g:5681:4: ( ( (lv_delay_2_0= ruleDelayExpression ) ) (otherlv_3= 'do' ( (lv_statements_4_0= ruleEsterelParallel ) ) otherlv_5= 'end' (otherlv_6= 'await' )? )? )
                    {
                    // InternalSCEst.g:5681:4: ( ( (lv_delay_2_0= ruleDelayExpression ) ) (otherlv_3= 'do' ( (lv_statements_4_0= ruleEsterelParallel ) ) otherlv_5= 'end' (otherlv_6= 'await' )? )? )
                    // InternalSCEst.g:5682:5: ( (lv_delay_2_0= ruleDelayExpression ) ) (otherlv_3= 'do' ( (lv_statements_4_0= ruleEsterelParallel ) ) otherlv_5= 'end' (otherlv_6= 'await' )? )?
                    {
                    // InternalSCEst.g:5682:5: ( (lv_delay_2_0= ruleDelayExpression ) )
                    // InternalSCEst.g:5683:6: (lv_delay_2_0= ruleDelayExpression )
                    {
                    // InternalSCEst.g:5683:6: (lv_delay_2_0= ruleDelayExpression )
                    // InternalSCEst.g:5684:7: lv_delay_2_0= ruleDelayExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getAwaitAccess().getDelayDelayExpressionParserRuleCall_2_0_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_72);
                    lv_delay_2_0=ruleDelayExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getAwaitRule());
                      							}
                      							set(
                      								current,
                      								"delay",
                      								lv_delay_2_0,
                      								"de.cau.cs.kieler.esterel.Esterel.DelayExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCEst.g:5701:5: (otherlv_3= 'do' ( (lv_statements_4_0= ruleEsterelParallel ) ) otherlv_5= 'end' (otherlv_6= 'await' )? )?
                    int alt127=2;
                    alt127 = dfa127.predict(input);
                    switch (alt127) {
                        case 1 :
                            // InternalSCEst.g:5702:6: otherlv_3= 'do' ( (lv_statements_4_0= ruleEsterelParallel ) ) otherlv_5= 'end' (otherlv_6= 'await' )?
                            {
                            otherlv_3=(Token)match(input,58,FollowSets000.FOLLOW_12); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_3, grammarAccess.getAwaitAccess().getDoKeyword_2_0_1_0());
                              					
                            }
                            // InternalSCEst.g:5706:6: ( (lv_statements_4_0= ruleEsterelParallel ) )
                            // InternalSCEst.g:5707:7: (lv_statements_4_0= ruleEsterelParallel )
                            {
                            // InternalSCEst.g:5707:7: (lv_statements_4_0= ruleEsterelParallel )
                            // InternalSCEst.g:5708:8: lv_statements_4_0= ruleEsterelParallel
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getAwaitAccess().getStatementsEsterelParallelParserRuleCall_2_0_1_1_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_68);
                            lv_statements_4_0=ruleEsterelParallel();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getAwaitRule());
                              								}
                              								add(
                              									current,
                              									"statements",
                              									lv_statements_4_0,
                              									"de.cau.cs.kieler.esterel.Esterel.EsterelParallel");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_5=(Token)match(input,19,FollowSets000.FOLLOW_95); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_5, grammarAccess.getAwaitAccess().getEndKeyword_2_0_1_2());
                              					
                            }
                            // InternalSCEst.g:5729:6: (otherlv_6= 'await' )?
                            int alt126=2;
                            int LA126_0 = input.LA(1);

                            if ( (LA126_0==69) ) {
                                int LA126_1 = input.LA(2);

                                if ( (synpred183_InternalSCEst()) ) {
                                    alt126=1;
                                }
                            }
                            switch (alt126) {
                                case 1 :
                                    // InternalSCEst.g:5730:7: otherlv_6= 'await'
                                    {
                                    otherlv_6=(Token)match(input,69,FollowSets000.FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_6, grammarAccess.getAwaitAccess().getAwaitKeyword_2_0_1_3());
                                      						
                                    }

                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCEst.g:5738:4: ( ( (lv_cases_7_0= ruleCase ) )+ otherlv_8= 'end' (otherlv_9= 'await' )? )
                    {
                    // InternalSCEst.g:5738:4: ( ( (lv_cases_7_0= ruleCase ) )+ otherlv_8= 'end' (otherlv_9= 'await' )? )
                    // InternalSCEst.g:5739:5: ( (lv_cases_7_0= ruleCase ) )+ otherlv_8= 'end' (otherlv_9= 'await' )?
                    {
                    // InternalSCEst.g:5739:5: ( (lv_cases_7_0= ruleCase ) )+
                    int cnt128=0;
                    loop128:
                    do {
                        int alt128=2;
                        int LA128_0 = input.LA(1);

                        if ( (LA128_0==RULE_COMMENT_ANNOTATION||LA128_0==57||LA128_0==128) ) {
                            alt128=1;
                        }


                        switch (alt128) {
                    	case 1 :
                    	    // InternalSCEst.g:5740:6: (lv_cases_7_0= ruleCase )
                    	    {
                    	    // InternalSCEst.g:5740:6: (lv_cases_7_0= ruleCase )
                    	    // InternalSCEst.g:5741:7: lv_cases_7_0= ruleCase
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAwaitAccess().getCasesCaseParserRuleCall_2_1_0_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_93);
                    	    lv_cases_7_0=ruleCase();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAwaitRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"cases",
                    	      								lv_cases_7_0,
                    	      								"de.cau.cs.kieler.esterel.Esterel.Case");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt128 >= 1 ) break loop128;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(128, input);
                                throw eee;
                        }
                        cnt128++;
                    } while (true);

                    otherlv_8=(Token)match(input,19,FollowSets000.FOLLOW_95); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_8, grammarAccess.getAwaitAccess().getEndKeyword_2_1_1());
                      				
                    }
                    // InternalSCEst.g:5762:5: (otherlv_9= 'await' )?
                    int alt129=2;
                    int LA129_0 = input.LA(1);

                    if ( (LA129_0==69) ) {
                        int LA129_1 = input.LA(2);

                        if ( (synpred187_InternalSCEst()) ) {
                            alt129=1;
                        }
                    }
                    switch (alt129) {
                        case 1 :
                            // InternalSCEst.g:5763:6: otherlv_9= 'await'
                            {
                            otherlv_9=(Token)match(input,69,FollowSets000.FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_9, grammarAccess.getAwaitAccess().getAwaitKeyword_2_1_2());
                              					
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAwait"


    // $ANTLR start "entryRuleEveryDo"
    // InternalSCEst.g:5774:1: entryRuleEveryDo returns [EObject current=null] : iv_ruleEveryDo= ruleEveryDo EOF ;
    public final EObject entryRuleEveryDo() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEveryDo = null;


        try {
            // InternalSCEst.g:5774:48: (iv_ruleEveryDo= ruleEveryDo EOF )
            // InternalSCEst.g:5775:2: iv_ruleEveryDo= ruleEveryDo EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEveryDoRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEveryDo=ruleEveryDo();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEveryDo; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEveryDo"


    // $ANTLR start "ruleEveryDo"
    // InternalSCEst.g:5781:1: ruleEveryDo returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'every' ( (lv_delay_2_0= ruleDelayExpression ) ) otherlv_3= 'do' ( (lv_statements_4_0= ruleEsterelParallel ) ) otherlv_5= 'end' (otherlv_6= 'every' )? ) ;
    public final EObject ruleEveryDo() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_delay_2_0 = null;

        EObject lv_statements_4_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:5787:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'every' ( (lv_delay_2_0= ruleDelayExpression ) ) otherlv_3= 'do' ( (lv_statements_4_0= ruleEsterelParallel ) ) otherlv_5= 'end' (otherlv_6= 'every' )? ) )
            // InternalSCEst.g:5788:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'every' ( (lv_delay_2_0= ruleDelayExpression ) ) otherlv_3= 'do' ( (lv_statements_4_0= ruleEsterelParallel ) ) otherlv_5= 'end' (otherlv_6= 'every' )? )
            {
            // InternalSCEst.g:5788:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'every' ( (lv_delay_2_0= ruleDelayExpression ) ) otherlv_3= 'do' ( (lv_statements_4_0= ruleEsterelParallel ) ) otherlv_5= 'end' (otherlv_6= 'every' )? )
            // InternalSCEst.g:5789:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'every' ( (lv_delay_2_0= ruleDelayExpression ) ) otherlv_3= 'do' ( (lv_statements_4_0= ruleEsterelParallel ) ) otherlv_5= 'end' (otherlv_6= 'every' )?
            {
            // InternalSCEst.g:5789:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop131:
            do {
                int alt131=2;
                int LA131_0 = input.LA(1);

                if ( (LA131_0==RULE_COMMENT_ANNOTATION||LA131_0==128) ) {
                    alt131=1;
                }


                switch (alt131) {
            	case 1 :
            	    // InternalSCEst.g:5790:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:5790:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCEst.g:5791:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getEveryDoAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_96);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getEveryDoRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop131;
                }
            } while (true);

            otherlv_1=(Token)match(input,70,FollowSets000.FOLLOW_82); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getEveryDoAccess().getEveryKeyword_1());
              		
            }
            // InternalSCEst.g:5812:3: ( (lv_delay_2_0= ruleDelayExpression ) )
            // InternalSCEst.g:5813:4: (lv_delay_2_0= ruleDelayExpression )
            {
            // InternalSCEst.g:5813:4: (lv_delay_2_0= ruleDelayExpression )
            // InternalSCEst.g:5814:5: lv_delay_2_0= ruleDelayExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEveryDoAccess().getDelayDelayExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_97);
            lv_delay_2_0=ruleDelayExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEveryDoRule());
              					}
              					set(
              						current,
              						"delay",
              						lv_delay_2_0,
              						"de.cau.cs.kieler.esterel.Esterel.DelayExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,58,FollowSets000.FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getEveryDoAccess().getDoKeyword_3());
              		
            }
            // InternalSCEst.g:5835:3: ( (lv_statements_4_0= ruleEsterelParallel ) )
            // InternalSCEst.g:5836:4: (lv_statements_4_0= ruleEsterelParallel )
            {
            // InternalSCEst.g:5836:4: (lv_statements_4_0= ruleEsterelParallel )
            // InternalSCEst.g:5837:5: lv_statements_4_0= ruleEsterelParallel
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEveryDoAccess().getStatementsEsterelParallelParserRuleCall_4_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_68);
            lv_statements_4_0=ruleEsterelParallel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEveryDoRule());
              					}
              					add(
              						current,
              						"statements",
              						lv_statements_4_0,
              						"de.cau.cs.kieler.esterel.Esterel.EsterelParallel");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_5=(Token)match(input,19,FollowSets000.FOLLOW_98); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getEveryDoAccess().getEndKeyword_5());
              		
            }
            // InternalSCEst.g:5858:3: (otherlv_6= 'every' )?
            int alt132=2;
            alt132 = dfa132.predict(input);
            switch (alt132) {
                case 1 :
                    // InternalSCEst.g:5859:4: otherlv_6= 'every'
                    {
                    otherlv_6=(Token)match(input,70,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getEveryDoAccess().getEveryKeyword_6());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEveryDo"


    // $ANTLR start "entryRuleSuspend"
    // InternalSCEst.g:5868:1: entryRuleSuspend returns [EObject current=null] : iv_ruleSuspend= ruleSuspend EOF ;
    public final EObject entryRuleSuspend() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSuspend = null;


        try {
            // InternalSCEst.g:5868:48: (iv_ruleSuspend= ruleSuspend EOF )
            // InternalSCEst.g:5869:2: iv_ruleSuspend= ruleSuspend EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSuspendRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSuspend=ruleSuspend();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSuspend; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSuspend"


    // $ANTLR start "ruleSuspend"
    // InternalSCEst.g:5875:1: ruleSuspend returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( (lv_weak_1_0= 'weak' ) )? otherlv_2= 'suspend' ) ( (lv_statements_3_0= ruleEsterelParallel ) ) otherlv_4= 'when' ( (lv_delay_5_0= ruleDelayExpression ) ) ) ;
    public final EObject ruleSuspend() throws RecognitionException {
        EObject current = null;

        Token lv_weak_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_statements_3_0 = null;

        EObject lv_delay_5_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:5881:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( (lv_weak_1_0= 'weak' ) )? otherlv_2= 'suspend' ) ( (lv_statements_3_0= ruleEsterelParallel ) ) otherlv_4= 'when' ( (lv_delay_5_0= ruleDelayExpression ) ) ) )
            // InternalSCEst.g:5882:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( (lv_weak_1_0= 'weak' ) )? otherlv_2= 'suspend' ) ( (lv_statements_3_0= ruleEsterelParallel ) ) otherlv_4= 'when' ( (lv_delay_5_0= ruleDelayExpression ) ) )
            {
            // InternalSCEst.g:5882:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( (lv_weak_1_0= 'weak' ) )? otherlv_2= 'suspend' ) ( (lv_statements_3_0= ruleEsterelParallel ) ) otherlv_4= 'when' ( (lv_delay_5_0= ruleDelayExpression ) ) )
            // InternalSCEst.g:5883:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( (lv_weak_1_0= 'weak' ) )? otherlv_2= 'suspend' ) ( (lv_statements_3_0= ruleEsterelParallel ) ) otherlv_4= 'when' ( (lv_delay_5_0= ruleDelayExpression ) )
            {
            // InternalSCEst.g:5883:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop133:
            do {
                int alt133=2;
                int LA133_0 = input.LA(1);

                if ( (LA133_0==RULE_COMMENT_ANNOTATION||LA133_0==128) ) {
                    alt133=1;
                }


                switch (alt133) {
            	case 1 :
            	    // InternalSCEst.g:5884:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:5884:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCEst.g:5885:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSuspendAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_99);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSuspendRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop133;
                }
            } while (true);

            // InternalSCEst.g:5902:3: ( ( (lv_weak_1_0= 'weak' ) )? otherlv_2= 'suspend' )
            // InternalSCEst.g:5903:4: ( (lv_weak_1_0= 'weak' ) )? otherlv_2= 'suspend'
            {
            // InternalSCEst.g:5903:4: ( (lv_weak_1_0= 'weak' ) )?
            int alt134=2;
            int LA134_0 = input.LA(1);

            if ( (LA134_0==66) ) {
                alt134=1;
            }
            switch (alt134) {
                case 1 :
                    // InternalSCEst.g:5904:5: (lv_weak_1_0= 'weak' )
                    {
                    // InternalSCEst.g:5904:5: (lv_weak_1_0= 'weak' )
                    // InternalSCEst.g:5905:6: lv_weak_1_0= 'weak'
                    {
                    lv_weak_1_0=(Token)match(input,66,FollowSets000.FOLLOW_100); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_weak_1_0, grammarAccess.getSuspendAccess().getWeakWeakKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSuspendRule());
                      						}
                      						setWithLastConsumed(current, "weak", true, "weak");
                      					
                    }

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,71,FollowSets000.FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_2, grammarAccess.getSuspendAccess().getSuspendKeyword_1_1());
              			
            }

            }

            // InternalSCEst.g:5922:3: ( (lv_statements_3_0= ruleEsterelParallel ) )
            // InternalSCEst.g:5923:4: (lv_statements_3_0= ruleEsterelParallel )
            {
            // InternalSCEst.g:5923:4: (lv_statements_3_0= ruleEsterelParallel )
            // InternalSCEst.g:5924:5: lv_statements_3_0= ruleEsterelParallel
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSuspendAccess().getStatementsEsterelParallelParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_89);
            lv_statements_3_0=ruleEsterelParallel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSuspendRule());
              					}
              					add(
              						current,
              						"statements",
              						lv_statements_3_0,
              						"de.cau.cs.kieler.esterel.Esterel.EsterelParallel");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,68,FollowSets000.FOLLOW_82); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getSuspendAccess().getWhenKeyword_3());
              		
            }
            // InternalSCEst.g:5945:3: ( (lv_delay_5_0= ruleDelayExpression ) )
            // InternalSCEst.g:5946:4: (lv_delay_5_0= ruleDelayExpression )
            {
            // InternalSCEst.g:5946:4: (lv_delay_5_0= ruleDelayExpression )
            // InternalSCEst.g:5947:5: lv_delay_5_0= ruleDelayExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSuspendAccess().getDelayDelayExpressionParserRuleCall_4_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_delay_5_0=ruleDelayExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSuspendRule());
              					}
              					set(
              						current,
              						"delay",
              						lv_delay_5_0,
              						"de.cau.cs.kieler.esterel.Esterel.DelayExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSuspend"


    // $ANTLR start "entryRuleTrap"
    // InternalSCEst.g:5968:1: entryRuleTrap returns [EObject current=null] : iv_ruleTrap= ruleTrap EOF ;
    public final EObject entryRuleTrap() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTrap = null;


        try {
            // InternalSCEst.g:5968:45: (iv_ruleTrap= ruleTrap EOF )
            // InternalSCEst.g:5969:2: iv_ruleTrap= ruleTrap EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTrapRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTrap=ruleTrap();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTrap; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTrap"


    // $ANTLR start "ruleTrap"
    // InternalSCEst.g:5975:1: ruleTrap returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'trap' ( (lv_trapSignals_2_0= ruleTrapSignal ) ) (otherlv_3= ',' ( (lv_trapSignals_4_0= ruleTrapSignal ) ) )* otherlv_5= 'in' ( (lv_statements_6_0= ruleEsterelParallel ) ) ( (lv_trapHandler_7_0= ruleTrapHandler ) )* otherlv_8= 'end' (otherlv_9= 'trap' )? ) ;
    public final EObject ruleTrap() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_trapSignals_2_0 = null;

        EObject lv_trapSignals_4_0 = null;

        EObject lv_statements_6_0 = null;

        EObject lv_trapHandler_7_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:5981:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'trap' ( (lv_trapSignals_2_0= ruleTrapSignal ) ) (otherlv_3= ',' ( (lv_trapSignals_4_0= ruleTrapSignal ) ) )* otherlv_5= 'in' ( (lv_statements_6_0= ruleEsterelParallel ) ) ( (lv_trapHandler_7_0= ruleTrapHandler ) )* otherlv_8= 'end' (otherlv_9= 'trap' )? ) )
            // InternalSCEst.g:5982:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'trap' ( (lv_trapSignals_2_0= ruleTrapSignal ) ) (otherlv_3= ',' ( (lv_trapSignals_4_0= ruleTrapSignal ) ) )* otherlv_5= 'in' ( (lv_statements_6_0= ruleEsterelParallel ) ) ( (lv_trapHandler_7_0= ruleTrapHandler ) )* otherlv_8= 'end' (otherlv_9= 'trap' )? )
            {
            // InternalSCEst.g:5982:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'trap' ( (lv_trapSignals_2_0= ruleTrapSignal ) ) (otherlv_3= ',' ( (lv_trapSignals_4_0= ruleTrapSignal ) ) )* otherlv_5= 'in' ( (lv_statements_6_0= ruleEsterelParallel ) ) ( (lv_trapHandler_7_0= ruleTrapHandler ) )* otherlv_8= 'end' (otherlv_9= 'trap' )? )
            // InternalSCEst.g:5983:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'trap' ( (lv_trapSignals_2_0= ruleTrapSignal ) ) (otherlv_3= ',' ( (lv_trapSignals_4_0= ruleTrapSignal ) ) )* otherlv_5= 'in' ( (lv_statements_6_0= ruleEsterelParallel ) ) ( (lv_trapHandler_7_0= ruleTrapHandler ) )* otherlv_8= 'end' (otherlv_9= 'trap' )?
            {
            // InternalSCEst.g:5983:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop135:
            do {
                int alt135=2;
                int LA135_0 = input.LA(1);

                if ( (LA135_0==RULE_COMMENT_ANNOTATION||LA135_0==128) ) {
                    alt135=1;
                }


                switch (alt135) {
            	case 1 :
            	    // InternalSCEst.g:5984:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:5984:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCEst.g:5985:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getTrapAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_101);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getTrapRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop135;
                }
            } while (true);

            otherlv_1=(Token)match(input,72,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getTrapAccess().getTrapKeyword_1());
              		
            }
            // InternalSCEst.g:6006:3: ( (lv_trapSignals_2_0= ruleTrapSignal ) )
            // InternalSCEst.g:6007:4: (lv_trapSignals_2_0= ruleTrapSignal )
            {
            // InternalSCEst.g:6007:4: (lv_trapSignals_2_0= ruleTrapSignal )
            // InternalSCEst.g:6008:5: lv_trapSignals_2_0= ruleTrapSignal
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTrapAccess().getTrapSignalsTrapSignalParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_102);
            lv_trapSignals_2_0=ruleTrapSignal();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTrapRule());
              					}
              					add(
              						current,
              						"trapSignals",
              						lv_trapSignals_2_0,
              						"de.cau.cs.kieler.esterel.Esterel.TrapSignal");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCEst.g:6025:3: (otherlv_3= ',' ( (lv_trapSignals_4_0= ruleTrapSignal ) ) )*
            loop136:
            do {
                int alt136=2;
                int LA136_0 = input.LA(1);

                if ( (LA136_0==30) ) {
                    alt136=1;
                }


                switch (alt136) {
            	case 1 :
            	    // InternalSCEst.g:6026:4: otherlv_3= ',' ( (lv_trapSignals_4_0= ruleTrapSignal ) )
            	    {
            	    otherlv_3=(Token)match(input,30,FollowSets000.FOLLOW_6); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getTrapAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalSCEst.g:6030:4: ( (lv_trapSignals_4_0= ruleTrapSignal ) )
            	    // InternalSCEst.g:6031:5: (lv_trapSignals_4_0= ruleTrapSignal )
            	    {
            	    // InternalSCEst.g:6031:5: (lv_trapSignals_4_0= ruleTrapSignal )
            	    // InternalSCEst.g:6032:6: lv_trapSignals_4_0= ruleTrapSignal
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTrapAccess().getTrapSignalsTrapSignalParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_102);
            	    lv_trapSignals_4_0=ruleTrapSignal();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTrapRule());
            	      						}
            	      						add(
            	      							current,
            	      							"trapSignals",
            	      							lv_trapSignals_4_0,
            	      							"de.cau.cs.kieler.esterel.Esterel.TrapSignal");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop136;
                }
            } while (true);

            otherlv_5=(Token)match(input,73,FollowSets000.FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getTrapAccess().getInKeyword_4());
              		
            }
            // InternalSCEst.g:6054:3: ( (lv_statements_6_0= ruleEsterelParallel ) )
            // InternalSCEst.g:6055:4: (lv_statements_6_0= ruleEsterelParallel )
            {
            // InternalSCEst.g:6055:4: (lv_statements_6_0= ruleEsterelParallel )
            // InternalSCEst.g:6056:5: lv_statements_6_0= ruleEsterelParallel
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTrapAccess().getStatementsEsterelParallelParserRuleCall_5_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_103);
            lv_statements_6_0=ruleEsterelParallel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTrapRule());
              					}
              					add(
              						current,
              						"statements",
              						lv_statements_6_0,
              						"de.cau.cs.kieler.esterel.Esterel.EsterelParallel");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCEst.g:6073:3: ( (lv_trapHandler_7_0= ruleTrapHandler ) )*
            loop137:
            do {
                int alt137=2;
                int LA137_0 = input.LA(1);

                if ( (LA137_0==RULE_COMMENT_ANNOTATION||LA137_0==74||LA137_0==128) ) {
                    alt137=1;
                }


                switch (alt137) {
            	case 1 :
            	    // InternalSCEst.g:6074:4: (lv_trapHandler_7_0= ruleTrapHandler )
            	    {
            	    // InternalSCEst.g:6074:4: (lv_trapHandler_7_0= ruleTrapHandler )
            	    // InternalSCEst.g:6075:5: lv_trapHandler_7_0= ruleTrapHandler
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getTrapAccess().getTrapHandlerTrapHandlerParserRuleCall_6_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_103);
            	    lv_trapHandler_7_0=ruleTrapHandler();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getTrapRule());
            	      					}
            	      					add(
            	      						current,
            	      						"trapHandler",
            	      						lv_trapHandler_7_0,
            	      						"de.cau.cs.kieler.esterel.Esterel.TrapHandler");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop137;
                }
            } while (true);

            otherlv_8=(Token)match(input,19,FollowSets000.FOLLOW_104); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getTrapAccess().getEndKeyword_7());
              		
            }
            // InternalSCEst.g:6096:3: (otherlv_9= 'trap' )?
            int alt138=2;
            alt138 = dfa138.predict(input);
            switch (alt138) {
                case 1 :
                    // InternalSCEst.g:6097:4: otherlv_9= 'trap'
                    {
                    otherlv_9=(Token)match(input,72,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getTrapAccess().getTrapKeyword_8());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTrap"


    // $ANTLR start "entryRuleTrapSignal"
    // InternalSCEst.g:6106:1: entryRuleTrapSignal returns [EObject current=null] : iv_ruleTrapSignal= ruleTrapSignal EOF ;
    public final EObject entryRuleTrapSignal() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTrapSignal = null;


        try {
            // InternalSCEst.g:6106:51: (iv_ruleTrapSignal= ruleTrapSignal EOF )
            // InternalSCEst.g:6107:2: iv_ruleTrapSignal= ruleTrapSignal EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTrapSignalRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTrapSignal=ruleTrapSignal();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTrapSignal; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTrapSignal"


    // $ANTLR start "ruleTrapSignal"
    // InternalSCEst.g:6113:1: ruleTrapSignal returns [EObject current=null] : ( () ( (lv_name_1_0= RULE_ID ) ) ( (otherlv_2= ':=' ( (lv_initialValue_3_0= ruleExpression ) ) otherlv_4= ':' ( ( (lv_type_5_0= ruleEsterelValueType ) ) | ( (lv_idType_6_0= RULE_ID ) ) | (otherlv_7= 'combine' ( ( (lv_type_8_0= ruleEsterelValueType ) ) | ( (lv_idType_9_0= RULE_ID ) ) ) otherlv_10= 'with' ( ( (otherlv_11= RULE_ID ) ) | ( (lv_combineOperator_12_0= ruleEsterelCombineOperator ) ) ) ) ) ) | (otherlv_13= ':' ( ( (lv_type_14_0= ruleEsterelValueType ) ) | ( (lv_idType_15_0= RULE_ID ) ) | (otherlv_16= 'combine' ( ( (lv_type_17_0= ruleEsterelValueType ) ) | ( (lv_idType_18_0= RULE_ID ) ) ) otherlv_19= 'with' ( ( (otherlv_20= RULE_ID ) ) | ( (lv_combineOperator_21_0= ruleEsterelCombineOperator ) ) ) ) ) ) )? ) ;
    public final EObject ruleTrapSignal() throws RecognitionException {
        EObject current = null;

        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_idType_6_0=null;
        Token otherlv_7=null;
        Token lv_idType_9_0=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token lv_idType_15_0=null;
        Token otherlv_16=null;
        Token lv_idType_18_0=null;
        Token otherlv_19=null;
        Token otherlv_20=null;
        EObject lv_initialValue_3_0 = null;

        Enumerator lv_type_5_0 = null;

        Enumerator lv_type_8_0 = null;

        Enumerator lv_combineOperator_12_0 = null;

        Enumerator lv_type_14_0 = null;

        Enumerator lv_type_17_0 = null;

        Enumerator lv_combineOperator_21_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:6119:2: ( ( () ( (lv_name_1_0= RULE_ID ) ) ( (otherlv_2= ':=' ( (lv_initialValue_3_0= ruleExpression ) ) otherlv_4= ':' ( ( (lv_type_5_0= ruleEsterelValueType ) ) | ( (lv_idType_6_0= RULE_ID ) ) | (otherlv_7= 'combine' ( ( (lv_type_8_0= ruleEsterelValueType ) ) | ( (lv_idType_9_0= RULE_ID ) ) ) otherlv_10= 'with' ( ( (otherlv_11= RULE_ID ) ) | ( (lv_combineOperator_12_0= ruleEsterelCombineOperator ) ) ) ) ) ) | (otherlv_13= ':' ( ( (lv_type_14_0= ruleEsterelValueType ) ) | ( (lv_idType_15_0= RULE_ID ) ) | (otherlv_16= 'combine' ( ( (lv_type_17_0= ruleEsterelValueType ) ) | ( (lv_idType_18_0= RULE_ID ) ) ) otherlv_19= 'with' ( ( (otherlv_20= RULE_ID ) ) | ( (lv_combineOperator_21_0= ruleEsterelCombineOperator ) ) ) ) ) ) )? ) )
            // InternalSCEst.g:6120:2: ( () ( (lv_name_1_0= RULE_ID ) ) ( (otherlv_2= ':=' ( (lv_initialValue_3_0= ruleExpression ) ) otherlv_4= ':' ( ( (lv_type_5_0= ruleEsterelValueType ) ) | ( (lv_idType_6_0= RULE_ID ) ) | (otherlv_7= 'combine' ( ( (lv_type_8_0= ruleEsterelValueType ) ) | ( (lv_idType_9_0= RULE_ID ) ) ) otherlv_10= 'with' ( ( (otherlv_11= RULE_ID ) ) | ( (lv_combineOperator_12_0= ruleEsterelCombineOperator ) ) ) ) ) ) | (otherlv_13= ':' ( ( (lv_type_14_0= ruleEsterelValueType ) ) | ( (lv_idType_15_0= RULE_ID ) ) | (otherlv_16= 'combine' ( ( (lv_type_17_0= ruleEsterelValueType ) ) | ( (lv_idType_18_0= RULE_ID ) ) ) otherlv_19= 'with' ( ( (otherlv_20= RULE_ID ) ) | ( (lv_combineOperator_21_0= ruleEsterelCombineOperator ) ) ) ) ) ) )? )
            {
            // InternalSCEst.g:6120:2: ( () ( (lv_name_1_0= RULE_ID ) ) ( (otherlv_2= ':=' ( (lv_initialValue_3_0= ruleExpression ) ) otherlv_4= ':' ( ( (lv_type_5_0= ruleEsterelValueType ) ) | ( (lv_idType_6_0= RULE_ID ) ) | (otherlv_7= 'combine' ( ( (lv_type_8_0= ruleEsterelValueType ) ) | ( (lv_idType_9_0= RULE_ID ) ) ) otherlv_10= 'with' ( ( (otherlv_11= RULE_ID ) ) | ( (lv_combineOperator_12_0= ruleEsterelCombineOperator ) ) ) ) ) ) | (otherlv_13= ':' ( ( (lv_type_14_0= ruleEsterelValueType ) ) | ( (lv_idType_15_0= RULE_ID ) ) | (otherlv_16= 'combine' ( ( (lv_type_17_0= ruleEsterelValueType ) ) | ( (lv_idType_18_0= RULE_ID ) ) ) otherlv_19= 'with' ( ( (otherlv_20= RULE_ID ) ) | ( (lv_combineOperator_21_0= ruleEsterelCombineOperator ) ) ) ) ) ) )? )
            // InternalSCEst.g:6121:3: () ( (lv_name_1_0= RULE_ID ) ) ( (otherlv_2= ':=' ( (lv_initialValue_3_0= ruleExpression ) ) otherlv_4= ':' ( ( (lv_type_5_0= ruleEsterelValueType ) ) | ( (lv_idType_6_0= RULE_ID ) ) | (otherlv_7= 'combine' ( ( (lv_type_8_0= ruleEsterelValueType ) ) | ( (lv_idType_9_0= RULE_ID ) ) ) otherlv_10= 'with' ( ( (otherlv_11= RULE_ID ) ) | ( (lv_combineOperator_12_0= ruleEsterelCombineOperator ) ) ) ) ) ) | (otherlv_13= ':' ( ( (lv_type_14_0= ruleEsterelValueType ) ) | ( (lv_idType_15_0= RULE_ID ) ) | (otherlv_16= 'combine' ( ( (lv_type_17_0= ruleEsterelValueType ) ) | ( (lv_idType_18_0= RULE_ID ) ) ) otherlv_19= 'with' ( ( (otherlv_20= RULE_ID ) ) | ( (lv_combineOperator_21_0= ruleEsterelCombineOperator ) ) ) ) ) ) )?
            {
            // InternalSCEst.g:6121:3: ()
            // InternalSCEst.g:6122:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getTrapSignalAccess().getTrapSignalAction_0(),
              					current);
              			
            }

            }

            // InternalSCEst.g:6131:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalSCEst.g:6132:4: (lv_name_1_0= RULE_ID )
            {
            // InternalSCEst.g:6132:4: (lv_name_1_0= RULE_ID )
            // InternalSCEst.g:6133:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_105); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getTrapSignalAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getTrapSignalRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ID");
              				
            }

            }


            }

            // InternalSCEst.g:6149:3: ( (otherlv_2= ':=' ( (lv_initialValue_3_0= ruleExpression ) ) otherlv_4= ':' ( ( (lv_type_5_0= ruleEsterelValueType ) ) | ( (lv_idType_6_0= RULE_ID ) ) | (otherlv_7= 'combine' ( ( (lv_type_8_0= ruleEsterelValueType ) ) | ( (lv_idType_9_0= RULE_ID ) ) ) otherlv_10= 'with' ( ( (otherlv_11= RULE_ID ) ) | ( (lv_combineOperator_12_0= ruleEsterelCombineOperator ) ) ) ) ) ) | (otherlv_13= ':' ( ( (lv_type_14_0= ruleEsterelValueType ) ) | ( (lv_idType_15_0= RULE_ID ) ) | (otherlv_16= 'combine' ( ( (lv_type_17_0= ruleEsterelValueType ) ) | ( (lv_idType_18_0= RULE_ID ) ) ) otherlv_19= 'with' ( ( (otherlv_20= RULE_ID ) ) | ( (lv_combineOperator_21_0= ruleEsterelCombineOperator ) ) ) ) ) ) )?
            int alt145=3;
            int LA145_0 = input.LA(1);

            if ( (LA145_0==22) ) {
                alt145=1;
            }
            else if ( (LA145_0==18) ) {
                alt145=2;
            }
            switch (alt145) {
                case 1 :
                    // InternalSCEst.g:6150:4: (otherlv_2= ':=' ( (lv_initialValue_3_0= ruleExpression ) ) otherlv_4= ':' ( ( (lv_type_5_0= ruleEsterelValueType ) ) | ( (lv_idType_6_0= RULE_ID ) ) | (otherlv_7= 'combine' ( ( (lv_type_8_0= ruleEsterelValueType ) ) | ( (lv_idType_9_0= RULE_ID ) ) ) otherlv_10= 'with' ( ( (otherlv_11= RULE_ID ) ) | ( (lv_combineOperator_12_0= ruleEsterelCombineOperator ) ) ) ) ) )
                    {
                    // InternalSCEst.g:6150:4: (otherlv_2= ':=' ( (lv_initialValue_3_0= ruleExpression ) ) otherlv_4= ':' ( ( (lv_type_5_0= ruleEsterelValueType ) ) | ( (lv_idType_6_0= RULE_ID ) ) | (otherlv_7= 'combine' ( ( (lv_type_8_0= ruleEsterelValueType ) ) | ( (lv_idType_9_0= RULE_ID ) ) ) otherlv_10= 'with' ( ( (otherlv_11= RULE_ID ) ) | ( (lv_combineOperator_12_0= ruleEsterelCombineOperator ) ) ) ) ) )
                    // InternalSCEst.g:6151:5: otherlv_2= ':=' ( (lv_initialValue_3_0= ruleExpression ) ) otherlv_4= ':' ( ( (lv_type_5_0= ruleEsterelValueType ) ) | ( (lv_idType_6_0= RULE_ID ) ) | (otherlv_7= 'combine' ( ( (lv_type_8_0= ruleEsterelValueType ) ) | ( (lv_idType_9_0= RULE_ID ) ) ) otherlv_10= 'with' ( ( (otherlv_11= RULE_ID ) ) | ( (lv_combineOperator_12_0= ruleEsterelCombineOperator ) ) ) ) )
                    {
                    otherlv_2=(Token)match(input,22,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getTrapSignalAccess().getColonEqualsSignKeyword_2_0_0());
                      				
                    }
                    // InternalSCEst.g:6155:5: ( (lv_initialValue_3_0= ruleExpression ) )
                    // InternalSCEst.g:6156:6: (lv_initialValue_3_0= ruleExpression )
                    {
                    // InternalSCEst.g:6156:6: (lv_initialValue_3_0= ruleExpression )
                    // InternalSCEst.g:6157:7: lv_initialValue_3_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getTrapSignalAccess().getInitialValueExpressionParserRuleCall_2_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_7);
                    lv_initialValue_3_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getTrapSignalRule());
                      							}
                      							set(
                      								current,
                      								"initialValue",
                      								lv_initialValue_3_0,
                      								"de.cau.cs.kieler.esterel.Esterel.Expression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,18,FollowSets000.FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_4, grammarAccess.getTrapSignalAccess().getColonKeyword_2_0_2());
                      				
                    }
                    // InternalSCEst.g:6178:5: ( ( (lv_type_5_0= ruleEsterelValueType ) ) | ( (lv_idType_6_0= RULE_ID ) ) | (otherlv_7= 'combine' ( ( (lv_type_8_0= ruleEsterelValueType ) ) | ( (lv_idType_9_0= RULE_ID ) ) ) otherlv_10= 'with' ( ( (otherlv_11= RULE_ID ) ) | ( (lv_combineOperator_12_0= ruleEsterelCombineOperator ) ) ) ) )
                    int alt141=3;
                    switch ( input.LA(1) ) {
                    case 131:
                    case 132:
                    case 133:
                    case 134:
                    case 135:
                    case 136:
                    case 137:
                    case 138:
                        {
                        alt141=1;
                        }
                        break;
                    case RULE_ID:
                        {
                        alt141=2;
                        }
                        break;
                    case 27:
                        {
                        alt141=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 141, 0, input);

                        throw nvae;
                    }

                    switch (alt141) {
                        case 1 :
                            // InternalSCEst.g:6179:6: ( (lv_type_5_0= ruleEsterelValueType ) )
                            {
                            // InternalSCEst.g:6179:6: ( (lv_type_5_0= ruleEsterelValueType ) )
                            // InternalSCEst.g:6180:7: (lv_type_5_0= ruleEsterelValueType )
                            {
                            // InternalSCEst.g:6180:7: (lv_type_5_0= ruleEsterelValueType )
                            // InternalSCEst.g:6181:8: lv_type_5_0= ruleEsterelValueType
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getTrapSignalAccess().getTypeEsterelValueTypeEnumRuleCall_2_0_3_0_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_type_5_0=ruleEsterelValueType();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getTrapSignalRule());
                              								}
                              								set(
                              									current,
                              									"type",
                              									lv_type_5_0,
                              									"de.cau.cs.kieler.esterel.Esterel.EsterelValueType");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalSCEst.g:6199:6: ( (lv_idType_6_0= RULE_ID ) )
                            {
                            // InternalSCEst.g:6199:6: ( (lv_idType_6_0= RULE_ID ) )
                            // InternalSCEst.g:6200:7: (lv_idType_6_0= RULE_ID )
                            {
                            // InternalSCEst.g:6200:7: (lv_idType_6_0= RULE_ID )
                            // InternalSCEst.g:6201:8: lv_idType_6_0= RULE_ID
                            {
                            lv_idType_6_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_idType_6_0, grammarAccess.getTrapSignalAccess().getIdTypeIDTerminalRuleCall_2_0_3_1_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getTrapSignalRule());
                              								}
                              								setWithLastConsumed(
                              									current,
                              									"idType",
                              									lv_idType_6_0,
                              									"de.cau.cs.kieler.annotations.Annotations.ID");
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalSCEst.g:6218:6: (otherlv_7= 'combine' ( ( (lv_type_8_0= ruleEsterelValueType ) ) | ( (lv_idType_9_0= RULE_ID ) ) ) otherlv_10= 'with' ( ( (otherlv_11= RULE_ID ) ) | ( (lv_combineOperator_12_0= ruleEsterelCombineOperator ) ) ) )
                            {
                            // InternalSCEst.g:6218:6: (otherlv_7= 'combine' ( ( (lv_type_8_0= ruleEsterelValueType ) ) | ( (lv_idType_9_0= RULE_ID ) ) ) otherlv_10= 'with' ( ( (otherlv_11= RULE_ID ) ) | ( (lv_combineOperator_12_0= ruleEsterelCombineOperator ) ) ) )
                            // InternalSCEst.g:6219:7: otherlv_7= 'combine' ( ( (lv_type_8_0= ruleEsterelValueType ) ) | ( (lv_idType_9_0= RULE_ID ) ) ) otherlv_10= 'with' ( ( (otherlv_11= RULE_ID ) ) | ( (lv_combineOperator_12_0= ruleEsterelCombineOperator ) ) )
                            {
                            otherlv_7=(Token)match(input,27,FollowSets000.FOLLOW_22); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_7, grammarAccess.getTrapSignalAccess().getCombineKeyword_2_0_3_2_0());
                              						
                            }
                            // InternalSCEst.g:6223:7: ( ( (lv_type_8_0= ruleEsterelValueType ) ) | ( (lv_idType_9_0= RULE_ID ) ) )
                            int alt139=2;
                            int LA139_0 = input.LA(1);

                            if ( ((LA139_0>=131 && LA139_0<=138)) ) {
                                alt139=1;
                            }
                            else if ( (LA139_0==RULE_ID) ) {
                                alt139=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 139, 0, input);

                                throw nvae;
                            }
                            switch (alt139) {
                                case 1 :
                                    // InternalSCEst.g:6224:8: ( (lv_type_8_0= ruleEsterelValueType ) )
                                    {
                                    // InternalSCEst.g:6224:8: ( (lv_type_8_0= ruleEsterelValueType ) )
                                    // InternalSCEst.g:6225:9: (lv_type_8_0= ruleEsterelValueType )
                                    {
                                    // InternalSCEst.g:6225:9: (lv_type_8_0= ruleEsterelValueType )
                                    // InternalSCEst.g:6226:10: lv_type_8_0= ruleEsterelValueType
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getTrapSignalAccess().getTypeEsterelValueTypeEnumRuleCall_2_0_3_2_1_0_0());
                                      									
                                    }
                                    pushFollow(FollowSets000.FOLLOW_23);
                                    lv_type_8_0=ruleEsterelValueType();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getTrapSignalRule());
                                      										}
                                      										set(
                                      											current,
                                      											"type",
                                      											lv_type_8_0,
                                      											"de.cau.cs.kieler.esterel.Esterel.EsterelValueType");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalSCEst.g:6244:8: ( (lv_idType_9_0= RULE_ID ) )
                                    {
                                    // InternalSCEst.g:6244:8: ( (lv_idType_9_0= RULE_ID ) )
                                    // InternalSCEst.g:6245:9: (lv_idType_9_0= RULE_ID )
                                    {
                                    // InternalSCEst.g:6245:9: (lv_idType_9_0= RULE_ID )
                                    // InternalSCEst.g:6246:10: lv_idType_9_0= RULE_ID
                                    {
                                    lv_idType_9_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_23); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_idType_9_0, grammarAccess.getTrapSignalAccess().getIdTypeIDTerminalRuleCall_2_0_3_2_1_1_0());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getTrapSignalRule());
                                      										}
                                      										setWithLastConsumed(
                                      											current,
                                      											"idType",
                                      											lv_idType_9_0,
                                      											"de.cau.cs.kieler.annotations.Annotations.ID");
                                      									
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }

                            otherlv_10=(Token)match(input,28,FollowSets000.FOLLOW_41); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_10, grammarAccess.getTrapSignalAccess().getWithKeyword_2_0_3_2_2());
                              						
                            }
                            // InternalSCEst.g:6267:7: ( ( (otherlv_11= RULE_ID ) ) | ( (lv_combineOperator_12_0= ruleEsterelCombineOperator ) ) )
                            int alt140=2;
                            int LA140_0 = input.LA(1);

                            if ( (LA140_0==RULE_ID) ) {
                                alt140=1;
                            }
                            else if ( ((LA140_0>=82 && LA140_0<=83)||(LA140_0>=92 && LA140_0<=93)||(LA140_0>=138 && LA140_0<=141)) ) {
                                alt140=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 140, 0, input);

                                throw nvae;
                            }
                            switch (alt140) {
                                case 1 :
                                    // InternalSCEst.g:6268:8: ( (otherlv_11= RULE_ID ) )
                                    {
                                    // InternalSCEst.g:6268:8: ( (otherlv_11= RULE_ID ) )
                                    // InternalSCEst.g:6269:9: (otherlv_11= RULE_ID )
                                    {
                                    // InternalSCEst.g:6269:9: (otherlv_11= RULE_ID )
                                    // InternalSCEst.g:6270:10: otherlv_11= RULE_ID
                                    {
                                    if ( state.backtracking==0 ) {

                                      										/* */
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getTrapSignalRule());
                                      										}
                                      									
                                    }
                                    otherlv_11=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(otherlv_11, grammarAccess.getTrapSignalAccess().getCombineFunctionFunctionCrossReference_2_0_3_2_3_0_0());
                                      									
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalSCEst.g:6285:8: ( (lv_combineOperator_12_0= ruleEsterelCombineOperator ) )
                                    {
                                    // InternalSCEst.g:6285:8: ( (lv_combineOperator_12_0= ruleEsterelCombineOperator ) )
                                    // InternalSCEst.g:6286:9: (lv_combineOperator_12_0= ruleEsterelCombineOperator )
                                    {
                                    // InternalSCEst.g:6286:9: (lv_combineOperator_12_0= ruleEsterelCombineOperator )
                                    // InternalSCEst.g:6287:10: lv_combineOperator_12_0= ruleEsterelCombineOperator
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getTrapSignalAccess().getCombineOperatorEsterelCombineOperatorEnumRuleCall_2_0_3_2_3_1_0());
                                      									
                                    }
                                    pushFollow(FollowSets000.FOLLOW_2);
                                    lv_combineOperator_12_0=ruleEsterelCombineOperator();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getTrapSignalRule());
                                      										}
                                      										set(
                                      											current,
                                      											"combineOperator",
                                      											lv_combineOperator_12_0,
                                      											"de.cau.cs.kieler.esterel.Esterel.EsterelCombineOperator");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCEst.g:6309:4: (otherlv_13= ':' ( ( (lv_type_14_0= ruleEsterelValueType ) ) | ( (lv_idType_15_0= RULE_ID ) ) | (otherlv_16= 'combine' ( ( (lv_type_17_0= ruleEsterelValueType ) ) | ( (lv_idType_18_0= RULE_ID ) ) ) otherlv_19= 'with' ( ( (otherlv_20= RULE_ID ) ) | ( (lv_combineOperator_21_0= ruleEsterelCombineOperator ) ) ) ) ) )
                    {
                    // InternalSCEst.g:6309:4: (otherlv_13= ':' ( ( (lv_type_14_0= ruleEsterelValueType ) ) | ( (lv_idType_15_0= RULE_ID ) ) | (otherlv_16= 'combine' ( ( (lv_type_17_0= ruleEsterelValueType ) ) | ( (lv_idType_18_0= RULE_ID ) ) ) otherlv_19= 'with' ( ( (otherlv_20= RULE_ID ) ) | ( (lv_combineOperator_21_0= ruleEsterelCombineOperator ) ) ) ) ) )
                    // InternalSCEst.g:6310:5: otherlv_13= ':' ( ( (lv_type_14_0= ruleEsterelValueType ) ) | ( (lv_idType_15_0= RULE_ID ) ) | (otherlv_16= 'combine' ( ( (lv_type_17_0= ruleEsterelValueType ) ) | ( (lv_idType_18_0= RULE_ID ) ) ) otherlv_19= 'with' ( ( (otherlv_20= RULE_ID ) ) | ( (lv_combineOperator_21_0= ruleEsterelCombineOperator ) ) ) ) )
                    {
                    otherlv_13=(Token)match(input,18,FollowSets000.FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_13, grammarAccess.getTrapSignalAccess().getColonKeyword_2_1_0());
                      				
                    }
                    // InternalSCEst.g:6314:5: ( ( (lv_type_14_0= ruleEsterelValueType ) ) | ( (lv_idType_15_0= RULE_ID ) ) | (otherlv_16= 'combine' ( ( (lv_type_17_0= ruleEsterelValueType ) ) | ( (lv_idType_18_0= RULE_ID ) ) ) otherlv_19= 'with' ( ( (otherlv_20= RULE_ID ) ) | ( (lv_combineOperator_21_0= ruleEsterelCombineOperator ) ) ) ) )
                    int alt144=3;
                    switch ( input.LA(1) ) {
                    case 131:
                    case 132:
                    case 133:
                    case 134:
                    case 135:
                    case 136:
                    case 137:
                    case 138:
                        {
                        alt144=1;
                        }
                        break;
                    case RULE_ID:
                        {
                        alt144=2;
                        }
                        break;
                    case 27:
                        {
                        alt144=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 144, 0, input);

                        throw nvae;
                    }

                    switch (alt144) {
                        case 1 :
                            // InternalSCEst.g:6315:6: ( (lv_type_14_0= ruleEsterelValueType ) )
                            {
                            // InternalSCEst.g:6315:6: ( (lv_type_14_0= ruleEsterelValueType ) )
                            // InternalSCEst.g:6316:7: (lv_type_14_0= ruleEsterelValueType )
                            {
                            // InternalSCEst.g:6316:7: (lv_type_14_0= ruleEsterelValueType )
                            // InternalSCEst.g:6317:8: lv_type_14_0= ruleEsterelValueType
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getTrapSignalAccess().getTypeEsterelValueTypeEnumRuleCall_2_1_1_0_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_type_14_0=ruleEsterelValueType();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getTrapSignalRule());
                              								}
                              								set(
                              									current,
                              									"type",
                              									lv_type_14_0,
                              									"de.cau.cs.kieler.esterel.Esterel.EsterelValueType");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalSCEst.g:6335:6: ( (lv_idType_15_0= RULE_ID ) )
                            {
                            // InternalSCEst.g:6335:6: ( (lv_idType_15_0= RULE_ID ) )
                            // InternalSCEst.g:6336:7: (lv_idType_15_0= RULE_ID )
                            {
                            // InternalSCEst.g:6336:7: (lv_idType_15_0= RULE_ID )
                            // InternalSCEst.g:6337:8: lv_idType_15_0= RULE_ID
                            {
                            lv_idType_15_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_idType_15_0, grammarAccess.getTrapSignalAccess().getIdTypeIDTerminalRuleCall_2_1_1_1_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getTrapSignalRule());
                              								}
                              								setWithLastConsumed(
                              									current,
                              									"idType",
                              									lv_idType_15_0,
                              									"de.cau.cs.kieler.annotations.Annotations.ID");
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalSCEst.g:6354:6: (otherlv_16= 'combine' ( ( (lv_type_17_0= ruleEsterelValueType ) ) | ( (lv_idType_18_0= RULE_ID ) ) ) otherlv_19= 'with' ( ( (otherlv_20= RULE_ID ) ) | ( (lv_combineOperator_21_0= ruleEsterelCombineOperator ) ) ) )
                            {
                            // InternalSCEst.g:6354:6: (otherlv_16= 'combine' ( ( (lv_type_17_0= ruleEsterelValueType ) ) | ( (lv_idType_18_0= RULE_ID ) ) ) otherlv_19= 'with' ( ( (otherlv_20= RULE_ID ) ) | ( (lv_combineOperator_21_0= ruleEsterelCombineOperator ) ) ) )
                            // InternalSCEst.g:6355:7: otherlv_16= 'combine' ( ( (lv_type_17_0= ruleEsterelValueType ) ) | ( (lv_idType_18_0= RULE_ID ) ) ) otherlv_19= 'with' ( ( (otherlv_20= RULE_ID ) ) | ( (lv_combineOperator_21_0= ruleEsterelCombineOperator ) ) )
                            {
                            otherlv_16=(Token)match(input,27,FollowSets000.FOLLOW_22); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_16, grammarAccess.getTrapSignalAccess().getCombineKeyword_2_1_1_2_0());
                              						
                            }
                            // InternalSCEst.g:6359:7: ( ( (lv_type_17_0= ruleEsterelValueType ) ) | ( (lv_idType_18_0= RULE_ID ) ) )
                            int alt142=2;
                            int LA142_0 = input.LA(1);

                            if ( ((LA142_0>=131 && LA142_0<=138)) ) {
                                alt142=1;
                            }
                            else if ( (LA142_0==RULE_ID) ) {
                                alt142=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 142, 0, input);

                                throw nvae;
                            }
                            switch (alt142) {
                                case 1 :
                                    // InternalSCEst.g:6360:8: ( (lv_type_17_0= ruleEsterelValueType ) )
                                    {
                                    // InternalSCEst.g:6360:8: ( (lv_type_17_0= ruleEsterelValueType ) )
                                    // InternalSCEst.g:6361:9: (lv_type_17_0= ruleEsterelValueType )
                                    {
                                    // InternalSCEst.g:6361:9: (lv_type_17_0= ruleEsterelValueType )
                                    // InternalSCEst.g:6362:10: lv_type_17_0= ruleEsterelValueType
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getTrapSignalAccess().getTypeEsterelValueTypeEnumRuleCall_2_1_1_2_1_0_0());
                                      									
                                    }
                                    pushFollow(FollowSets000.FOLLOW_23);
                                    lv_type_17_0=ruleEsterelValueType();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getTrapSignalRule());
                                      										}
                                      										set(
                                      											current,
                                      											"type",
                                      											lv_type_17_0,
                                      											"de.cau.cs.kieler.esterel.Esterel.EsterelValueType");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalSCEst.g:6380:8: ( (lv_idType_18_0= RULE_ID ) )
                                    {
                                    // InternalSCEst.g:6380:8: ( (lv_idType_18_0= RULE_ID ) )
                                    // InternalSCEst.g:6381:9: (lv_idType_18_0= RULE_ID )
                                    {
                                    // InternalSCEst.g:6381:9: (lv_idType_18_0= RULE_ID )
                                    // InternalSCEst.g:6382:10: lv_idType_18_0= RULE_ID
                                    {
                                    lv_idType_18_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_23); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_idType_18_0, grammarAccess.getTrapSignalAccess().getIdTypeIDTerminalRuleCall_2_1_1_2_1_1_0());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getTrapSignalRule());
                                      										}
                                      										setWithLastConsumed(
                                      											current,
                                      											"idType",
                                      											lv_idType_18_0,
                                      											"de.cau.cs.kieler.annotations.Annotations.ID");
                                      									
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }

                            otherlv_19=(Token)match(input,28,FollowSets000.FOLLOW_41); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_19, grammarAccess.getTrapSignalAccess().getWithKeyword_2_1_1_2_2());
                              						
                            }
                            // InternalSCEst.g:6403:7: ( ( (otherlv_20= RULE_ID ) ) | ( (lv_combineOperator_21_0= ruleEsterelCombineOperator ) ) )
                            int alt143=2;
                            int LA143_0 = input.LA(1);

                            if ( (LA143_0==RULE_ID) ) {
                                alt143=1;
                            }
                            else if ( ((LA143_0>=82 && LA143_0<=83)||(LA143_0>=92 && LA143_0<=93)||(LA143_0>=138 && LA143_0<=141)) ) {
                                alt143=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 143, 0, input);

                                throw nvae;
                            }
                            switch (alt143) {
                                case 1 :
                                    // InternalSCEst.g:6404:8: ( (otherlv_20= RULE_ID ) )
                                    {
                                    // InternalSCEst.g:6404:8: ( (otherlv_20= RULE_ID ) )
                                    // InternalSCEst.g:6405:9: (otherlv_20= RULE_ID )
                                    {
                                    // InternalSCEst.g:6405:9: (otherlv_20= RULE_ID )
                                    // InternalSCEst.g:6406:10: otherlv_20= RULE_ID
                                    {
                                    if ( state.backtracking==0 ) {

                                      										/* */
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getTrapSignalRule());
                                      										}
                                      									
                                    }
                                    otherlv_20=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(otherlv_20, grammarAccess.getTrapSignalAccess().getCombineFunctionFunctionCrossReference_2_1_1_2_3_0_0());
                                      									
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalSCEst.g:6421:8: ( (lv_combineOperator_21_0= ruleEsterelCombineOperator ) )
                                    {
                                    // InternalSCEst.g:6421:8: ( (lv_combineOperator_21_0= ruleEsterelCombineOperator ) )
                                    // InternalSCEst.g:6422:9: (lv_combineOperator_21_0= ruleEsterelCombineOperator )
                                    {
                                    // InternalSCEst.g:6422:9: (lv_combineOperator_21_0= ruleEsterelCombineOperator )
                                    // InternalSCEst.g:6423:10: lv_combineOperator_21_0= ruleEsterelCombineOperator
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getTrapSignalAccess().getCombineOperatorEsterelCombineOperatorEnumRuleCall_2_1_1_2_3_1_0());
                                      									
                                    }
                                    pushFollow(FollowSets000.FOLLOW_2);
                                    lv_combineOperator_21_0=ruleEsterelCombineOperator();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getTrapSignalRule());
                                      										}
                                      										set(
                                      											current,
                                      											"combineOperator",
                                      											lv_combineOperator_21_0,
                                      											"de.cau.cs.kieler.esterel.Esterel.EsterelCombineOperator");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTrapSignal"


    // $ANTLR start "entryRuleTrapHandler"
    // InternalSCEst.g:6449:1: entryRuleTrapHandler returns [EObject current=null] : iv_ruleTrapHandler= ruleTrapHandler EOF ;
    public final EObject entryRuleTrapHandler() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTrapHandler = null;


        try {
            // InternalSCEst.g:6449:52: (iv_ruleTrapHandler= ruleTrapHandler EOF )
            // InternalSCEst.g:6450:2: iv_ruleTrapHandler= ruleTrapHandler EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTrapHandlerRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTrapHandler=ruleTrapHandler();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTrapHandler; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTrapHandler"


    // $ANTLR start "ruleTrapHandler"
    // InternalSCEst.g:6456:1: ruleTrapHandler returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'handle' ( (lv_expression_2_0= ruleTrapExpr ) ) otherlv_3= 'do' ( (lv_statements_4_0= ruleEsterelParallel ) ) ) ;
    public final EObject ruleTrapHandler() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_expression_2_0 = null;

        EObject lv_statements_4_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:6462:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'handle' ( (lv_expression_2_0= ruleTrapExpr ) ) otherlv_3= 'do' ( (lv_statements_4_0= ruleEsterelParallel ) ) ) )
            // InternalSCEst.g:6463:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'handle' ( (lv_expression_2_0= ruleTrapExpr ) ) otherlv_3= 'do' ( (lv_statements_4_0= ruleEsterelParallel ) ) )
            {
            // InternalSCEst.g:6463:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'handle' ( (lv_expression_2_0= ruleTrapExpr ) ) otherlv_3= 'do' ( (lv_statements_4_0= ruleEsterelParallel ) ) )
            // InternalSCEst.g:6464:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'handle' ( (lv_expression_2_0= ruleTrapExpr ) ) otherlv_3= 'do' ( (lv_statements_4_0= ruleEsterelParallel ) )
            {
            // InternalSCEst.g:6464:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop146:
            do {
                int alt146=2;
                int LA146_0 = input.LA(1);

                if ( (LA146_0==RULE_COMMENT_ANNOTATION||LA146_0==128) ) {
                    alt146=1;
                }


                switch (alt146) {
            	case 1 :
            	    // InternalSCEst.g:6465:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:6465:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCEst.g:6466:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getTrapHandlerAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_106);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getTrapHandlerRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop146;
                }
            } while (true);

            otherlv_1=(Token)match(input,74,FollowSets000.FOLLOW_107); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getTrapHandlerAccess().getHandleKeyword_1());
              		
            }
            // InternalSCEst.g:6487:3: ( (lv_expression_2_0= ruleTrapExpr ) )
            // InternalSCEst.g:6488:4: (lv_expression_2_0= ruleTrapExpr )
            {
            // InternalSCEst.g:6488:4: (lv_expression_2_0= ruleTrapExpr )
            // InternalSCEst.g:6489:5: lv_expression_2_0= ruleTrapExpr
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTrapHandlerAccess().getExpressionTrapExprParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_97);
            lv_expression_2_0=ruleTrapExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTrapHandlerRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"de.cau.cs.kieler.esterel.Esterel.TrapExpr");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,58,FollowSets000.FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getTrapHandlerAccess().getDoKeyword_3());
              		
            }
            // InternalSCEst.g:6510:3: ( (lv_statements_4_0= ruleEsterelParallel ) )
            // InternalSCEst.g:6511:4: (lv_statements_4_0= ruleEsterelParallel )
            {
            // InternalSCEst.g:6511:4: (lv_statements_4_0= ruleEsterelParallel )
            // InternalSCEst.g:6512:5: lv_statements_4_0= ruleEsterelParallel
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTrapHandlerAccess().getStatementsEsterelParallelParserRuleCall_4_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_statements_4_0=ruleEsterelParallel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTrapHandlerRule());
              					}
              					add(
              						current,
              						"statements",
              						lv_statements_4_0,
              						"de.cau.cs.kieler.esterel.Esterel.EsterelParallel");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTrapHandler"


    // $ANTLR start "entryRuleExit"
    // InternalSCEst.g:6533:1: entryRuleExit returns [EObject current=null] : iv_ruleExit= ruleExit EOF ;
    public final EObject entryRuleExit() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExit = null;


        try {
            // InternalSCEst.g:6533:45: (iv_ruleExit= ruleExit EOF )
            // InternalSCEst.g:6534:2: iv_ruleExit= ruleExit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExitRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleExit=ruleExit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExit; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExit"


    // $ANTLR start "ruleExit"
    // InternalSCEst.g:6540:1: ruleExit returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'exit' ( (otherlv_2= RULE_ID ) ) (otherlv_3= '(' ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= ')' )? ) ;
    public final EObject ruleExit() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_expression_4_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:6546:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'exit' ( (otherlv_2= RULE_ID ) ) (otherlv_3= '(' ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= ')' )? ) )
            // InternalSCEst.g:6547:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'exit' ( (otherlv_2= RULE_ID ) ) (otherlv_3= '(' ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= ')' )? )
            {
            // InternalSCEst.g:6547:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'exit' ( (otherlv_2= RULE_ID ) ) (otherlv_3= '(' ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= ')' )? )
            // InternalSCEst.g:6548:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'exit' ( (otherlv_2= RULE_ID ) ) (otherlv_3= '(' ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= ')' )?
            {
            // InternalSCEst.g:6548:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop147:
            do {
                int alt147=2;
                int LA147_0 = input.LA(1);

                if ( (LA147_0==RULE_COMMENT_ANNOTATION||LA147_0==128) ) {
                    alt147=1;
                }


                switch (alt147) {
            	case 1 :
            	    // InternalSCEst.g:6549:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:6549:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCEst.g:6550:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getExitAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_108);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getExitRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop147;
                }
            } while (true);

            otherlv_1=(Token)match(input,75,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getExitAccess().getExitKeyword_1());
              		
            }
            // InternalSCEst.g:6571:3: ( (otherlv_2= RULE_ID ) )
            // InternalSCEst.g:6572:4: (otherlv_2= RULE_ID )
            {
            // InternalSCEst.g:6572:4: (otherlv_2= RULE_ID )
            // InternalSCEst.g:6573:5: otherlv_2= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getExitRule());
              					}
              				
            }
            otherlv_2=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_56); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_2, grammarAccess.getExitAccess().getTrapTrapSignalCrossReference_2_0());
              				
            }

            }


            }

            // InternalSCEst.g:6587:3: (otherlv_3= '(' ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= ')' )?
            int alt148=2;
            int LA148_0 = input.LA(1);

            if ( (LA148_0==25) ) {
                alt148=1;
            }
            switch (alt148) {
                case 1 :
                    // InternalSCEst.g:6588:4: otherlv_3= '(' ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= ')'
                    {
                    otherlv_3=(Token)match(input,25,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getExitAccess().getLeftParenthesisKeyword_3_0());
                      			
                    }
                    // InternalSCEst.g:6592:4: ( (lv_expression_4_0= ruleExpression ) )
                    // InternalSCEst.g:6593:5: (lv_expression_4_0= ruleExpression )
                    {
                    // InternalSCEst.g:6593:5: (lv_expression_4_0= ruleExpression )
                    // InternalSCEst.g:6594:6: lv_expression_4_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExitAccess().getExpressionExpressionParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_20);
                    lv_expression_4_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExitRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_4_0,
                      							"de.cau.cs.kieler.esterel.Esterel.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,26,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getExitAccess().getRightParenthesisKeyword_3_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExit"


    // $ANTLR start "entryRuleExec"
    // InternalSCEst.g:6620:1: entryRuleExec returns [EObject current=null] : iv_ruleExec= ruleExec EOF ;
    public final EObject entryRuleExec() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExec = null;


        try {
            // InternalSCEst.g:6620:45: (iv_ruleExec= ruleExec EOF )
            // InternalSCEst.g:6621:2: iv_ruleExec= ruleExec EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExecRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleExec=ruleExec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExec; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExec"


    // $ANTLR start "ruleExec"
    // InternalSCEst.g:6627:1: ruleExec returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'exec' ( ( ( (otherlv_2= RULE_ID ) ) ( (otherlv_3= '(' ( ( (otherlv_4= RULE_ID ) ) (otherlv_5= ',' ( (otherlv_6= RULE_ID ) ) )* )? otherlv_7= ')' ) | otherlv_8= '()' ) ( (otherlv_9= '(' ( ( (lv_valueParameters_10_0= ruleExpression ) ) (otherlv_11= ',' ( (lv_valueParameters_12_0= ruleExpression ) ) )* )? otherlv_13= ')' ) | otherlv_14= '()' ) otherlv_15= 'return' ( (otherlv_16= RULE_ID ) ) (otherlv_17= 'do' ( (lv_statements_18_0= ruleEsterelParallel ) ) otherlv_19= 'end' (otherlv_20= 'exec' )? )? ) | ( ( (lv_execCaseList_21_0= ruleExecCase ) )+ otherlv_22= 'end' (otherlv_23= 'exec' )? ) ) ) ;
    public final EObject ruleExec() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_valueParameters_10_0 = null;

        EObject lv_valueParameters_12_0 = null;

        EObject lv_statements_18_0 = null;

        EObject lv_execCaseList_21_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:6633:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'exec' ( ( ( (otherlv_2= RULE_ID ) ) ( (otherlv_3= '(' ( ( (otherlv_4= RULE_ID ) ) (otherlv_5= ',' ( (otherlv_6= RULE_ID ) ) )* )? otherlv_7= ')' ) | otherlv_8= '()' ) ( (otherlv_9= '(' ( ( (lv_valueParameters_10_0= ruleExpression ) ) (otherlv_11= ',' ( (lv_valueParameters_12_0= ruleExpression ) ) )* )? otherlv_13= ')' ) | otherlv_14= '()' ) otherlv_15= 'return' ( (otherlv_16= RULE_ID ) ) (otherlv_17= 'do' ( (lv_statements_18_0= ruleEsterelParallel ) ) otherlv_19= 'end' (otherlv_20= 'exec' )? )? ) | ( ( (lv_execCaseList_21_0= ruleExecCase ) )+ otherlv_22= 'end' (otherlv_23= 'exec' )? ) ) ) )
            // InternalSCEst.g:6634:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'exec' ( ( ( (otherlv_2= RULE_ID ) ) ( (otherlv_3= '(' ( ( (otherlv_4= RULE_ID ) ) (otherlv_5= ',' ( (otherlv_6= RULE_ID ) ) )* )? otherlv_7= ')' ) | otherlv_8= '()' ) ( (otherlv_9= '(' ( ( (lv_valueParameters_10_0= ruleExpression ) ) (otherlv_11= ',' ( (lv_valueParameters_12_0= ruleExpression ) ) )* )? otherlv_13= ')' ) | otherlv_14= '()' ) otherlv_15= 'return' ( (otherlv_16= RULE_ID ) ) (otherlv_17= 'do' ( (lv_statements_18_0= ruleEsterelParallel ) ) otherlv_19= 'end' (otherlv_20= 'exec' )? )? ) | ( ( (lv_execCaseList_21_0= ruleExecCase ) )+ otherlv_22= 'end' (otherlv_23= 'exec' )? ) ) )
            {
            // InternalSCEst.g:6634:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'exec' ( ( ( (otherlv_2= RULE_ID ) ) ( (otherlv_3= '(' ( ( (otherlv_4= RULE_ID ) ) (otherlv_5= ',' ( (otherlv_6= RULE_ID ) ) )* )? otherlv_7= ')' ) | otherlv_8= '()' ) ( (otherlv_9= '(' ( ( (lv_valueParameters_10_0= ruleExpression ) ) (otherlv_11= ',' ( (lv_valueParameters_12_0= ruleExpression ) ) )* )? otherlv_13= ')' ) | otherlv_14= '()' ) otherlv_15= 'return' ( (otherlv_16= RULE_ID ) ) (otherlv_17= 'do' ( (lv_statements_18_0= ruleEsterelParallel ) ) otherlv_19= 'end' (otherlv_20= 'exec' )? )? ) | ( ( (lv_execCaseList_21_0= ruleExecCase ) )+ otherlv_22= 'end' (otherlv_23= 'exec' )? ) ) )
            // InternalSCEst.g:6635:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'exec' ( ( ( (otherlv_2= RULE_ID ) ) ( (otherlv_3= '(' ( ( (otherlv_4= RULE_ID ) ) (otherlv_5= ',' ( (otherlv_6= RULE_ID ) ) )* )? otherlv_7= ')' ) | otherlv_8= '()' ) ( (otherlv_9= '(' ( ( (lv_valueParameters_10_0= ruleExpression ) ) (otherlv_11= ',' ( (lv_valueParameters_12_0= ruleExpression ) ) )* )? otherlv_13= ')' ) | otherlv_14= '()' ) otherlv_15= 'return' ( (otherlv_16= RULE_ID ) ) (otherlv_17= 'do' ( (lv_statements_18_0= ruleEsterelParallel ) ) otherlv_19= 'end' (otherlv_20= 'exec' )? )? ) | ( ( (lv_execCaseList_21_0= ruleExecCase ) )+ otherlv_22= 'end' (otherlv_23= 'exec' )? ) )
            {
            // InternalSCEst.g:6635:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop149:
            do {
                int alt149=2;
                int LA149_0 = input.LA(1);

                if ( (LA149_0==RULE_COMMENT_ANNOTATION||LA149_0==128) ) {
                    alt149=1;
                }


                switch (alt149) {
            	case 1 :
            	    // InternalSCEst.g:6636:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:6636:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCEst.g:6637:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getExecAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_109);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getExecRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop149;
                }
            } while (true);

            otherlv_1=(Token)match(input,76,FollowSets000.FOLLOW_110); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getExecAccess().getExecKeyword_1());
              		
            }
            // InternalSCEst.g:6658:3: ( ( ( (otherlv_2= RULE_ID ) ) ( (otherlv_3= '(' ( ( (otherlv_4= RULE_ID ) ) (otherlv_5= ',' ( (otherlv_6= RULE_ID ) ) )* )? otherlv_7= ')' ) | otherlv_8= '()' ) ( (otherlv_9= '(' ( ( (lv_valueParameters_10_0= ruleExpression ) ) (otherlv_11= ',' ( (lv_valueParameters_12_0= ruleExpression ) ) )* )? otherlv_13= ')' ) | otherlv_14= '()' ) otherlv_15= 'return' ( (otherlv_16= RULE_ID ) ) (otherlv_17= 'do' ( (lv_statements_18_0= ruleEsterelParallel ) ) otherlv_19= 'end' (otherlv_20= 'exec' )? )? ) | ( ( (lv_execCaseList_21_0= ruleExecCase ) )+ otherlv_22= 'end' (otherlv_23= 'exec' )? ) )
            int alt160=2;
            int LA160_0 = input.LA(1);

            if ( (LA160_0==RULE_ID) ) {
                alt160=1;
            }
            else if ( (LA160_0==RULE_COMMENT_ANNOTATION||LA160_0==57||LA160_0==128) ) {
                alt160=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 160, 0, input);

                throw nvae;
            }
            switch (alt160) {
                case 1 :
                    // InternalSCEst.g:6659:4: ( ( (otherlv_2= RULE_ID ) ) ( (otherlv_3= '(' ( ( (otherlv_4= RULE_ID ) ) (otherlv_5= ',' ( (otherlv_6= RULE_ID ) ) )* )? otherlv_7= ')' ) | otherlv_8= '()' ) ( (otherlv_9= '(' ( ( (lv_valueParameters_10_0= ruleExpression ) ) (otherlv_11= ',' ( (lv_valueParameters_12_0= ruleExpression ) ) )* )? otherlv_13= ')' ) | otherlv_14= '()' ) otherlv_15= 'return' ( (otherlv_16= RULE_ID ) ) (otherlv_17= 'do' ( (lv_statements_18_0= ruleEsterelParallel ) ) otherlv_19= 'end' (otherlv_20= 'exec' )? )? )
                    {
                    // InternalSCEst.g:6659:4: ( ( (otherlv_2= RULE_ID ) ) ( (otherlv_3= '(' ( ( (otherlv_4= RULE_ID ) ) (otherlv_5= ',' ( (otherlv_6= RULE_ID ) ) )* )? otherlv_7= ')' ) | otherlv_8= '()' ) ( (otherlv_9= '(' ( ( (lv_valueParameters_10_0= ruleExpression ) ) (otherlv_11= ',' ( (lv_valueParameters_12_0= ruleExpression ) ) )* )? otherlv_13= ')' ) | otherlv_14= '()' ) otherlv_15= 'return' ( (otherlv_16= RULE_ID ) ) (otherlv_17= 'do' ( (lv_statements_18_0= ruleEsterelParallel ) ) otherlv_19= 'end' (otherlv_20= 'exec' )? )? )
                    // InternalSCEst.g:6660:5: ( (otherlv_2= RULE_ID ) ) ( (otherlv_3= '(' ( ( (otherlv_4= RULE_ID ) ) (otherlv_5= ',' ( (otherlv_6= RULE_ID ) ) )* )? otherlv_7= ')' ) | otherlv_8= '()' ) ( (otherlv_9= '(' ( ( (lv_valueParameters_10_0= ruleExpression ) ) (otherlv_11= ',' ( (lv_valueParameters_12_0= ruleExpression ) ) )* )? otherlv_13= ')' ) | otherlv_14= '()' ) otherlv_15= 'return' ( (otherlv_16= RULE_ID ) ) (otherlv_17= 'do' ( (lv_statements_18_0= ruleEsterelParallel ) ) otherlv_19= 'end' (otherlv_20= 'exec' )? )?
                    {
                    // InternalSCEst.g:6660:5: ( (otherlv_2= RULE_ID ) )
                    // InternalSCEst.g:6661:6: (otherlv_2= RULE_ID )
                    {
                    // InternalSCEst.g:6661:6: (otherlv_2= RULE_ID )
                    // InternalSCEst.g:6662:7: otherlv_2= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      							/* */
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getExecRule());
                      							}
                      						
                    }
                    otherlv_2=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(otherlv_2, grammarAccess.getExecAccess().getTaskTaskCrossReference_2_0_0_0());
                      						
                    }

                    }


                    }

                    // InternalSCEst.g:6676:5: ( (otherlv_3= '(' ( ( (otherlv_4= RULE_ID ) ) (otherlv_5= ',' ( (otherlv_6= RULE_ID ) ) )* )? otherlv_7= ')' ) | otherlv_8= '()' )
                    int alt152=2;
                    int LA152_0 = input.LA(1);

                    if ( (LA152_0==25) ) {
                        alt152=1;
                    }
                    else if ( (LA152_0==34) ) {
                        alt152=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 152, 0, input);

                        throw nvae;
                    }
                    switch (alt152) {
                        case 1 :
                            // InternalSCEst.g:6677:6: (otherlv_3= '(' ( ( (otherlv_4= RULE_ID ) ) (otherlv_5= ',' ( (otherlv_6= RULE_ID ) ) )* )? otherlv_7= ')' )
                            {
                            // InternalSCEst.g:6677:6: (otherlv_3= '(' ( ( (otherlv_4= RULE_ID ) ) (otherlv_5= ',' ( (otherlv_6= RULE_ID ) ) )* )? otherlv_7= ')' )
                            // InternalSCEst.g:6678:7: otherlv_3= '(' ( ( (otherlv_4= RULE_ID ) ) (otherlv_5= ',' ( (otherlv_6= RULE_ID ) ) )* )? otherlv_7= ')'
                            {
                            otherlv_3=(Token)match(input,25,FollowSets000.FOLLOW_59); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_3, grammarAccess.getExecAccess().getLeftParenthesisKeyword_2_0_1_0_0());
                              						
                            }
                            // InternalSCEst.g:6682:7: ( ( (otherlv_4= RULE_ID ) ) (otherlv_5= ',' ( (otherlv_6= RULE_ID ) ) )* )?
                            int alt151=2;
                            int LA151_0 = input.LA(1);

                            if ( (LA151_0==RULE_ID) ) {
                                alt151=1;
                            }
                            switch (alt151) {
                                case 1 :
                                    // InternalSCEst.g:6683:8: ( (otherlv_4= RULE_ID ) ) (otherlv_5= ',' ( (otherlv_6= RULE_ID ) ) )*
                                    {
                                    // InternalSCEst.g:6683:8: ( (otherlv_4= RULE_ID ) )
                                    // InternalSCEst.g:6684:9: (otherlv_4= RULE_ID )
                                    {
                                    // InternalSCEst.g:6684:9: (otherlv_4= RULE_ID )
                                    // InternalSCEst.g:6685:10: otherlv_4= RULE_ID
                                    {
                                    if ( state.backtracking==0 ) {

                                      										/* */
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getExecRule());
                                      										}
                                      									
                                    }
                                    otherlv_4=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_33); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(otherlv_4, grammarAccess.getExecAccess().getReferenceParametersVariableCrossReference_2_0_1_0_1_0_0());
                                      									
                                    }

                                    }


                                    }

                                    // InternalSCEst.g:6699:8: (otherlv_5= ',' ( (otherlv_6= RULE_ID ) ) )*
                                    loop150:
                                    do {
                                        int alt150=2;
                                        int LA150_0 = input.LA(1);

                                        if ( (LA150_0==30) ) {
                                            alt150=1;
                                        }


                                        switch (alt150) {
                                    	case 1 :
                                    	    // InternalSCEst.g:6700:9: otherlv_5= ',' ( (otherlv_6= RULE_ID ) )
                                    	    {
                                    	    otherlv_5=(Token)match(input,30,FollowSets000.FOLLOW_6); if (state.failed) return current;
                                    	    if ( state.backtracking==0 ) {

                                    	      									newLeafNode(otherlv_5, grammarAccess.getExecAccess().getCommaKeyword_2_0_1_0_1_1_0());
                                    	      								
                                    	    }
                                    	    // InternalSCEst.g:6704:9: ( (otherlv_6= RULE_ID ) )
                                    	    // InternalSCEst.g:6705:10: (otherlv_6= RULE_ID )
                                    	    {
                                    	    // InternalSCEst.g:6705:10: (otherlv_6= RULE_ID )
                                    	    // InternalSCEst.g:6706:11: otherlv_6= RULE_ID
                                    	    {
                                    	    if ( state.backtracking==0 ) {

                                    	      											/* */
                                    	      										
                                    	    }
                                    	    if ( state.backtracking==0 ) {

                                    	      											if (current==null) {
                                    	      												current = createModelElement(grammarAccess.getExecRule());
                                    	      											}
                                    	      										
                                    	    }
                                    	    otherlv_6=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_33); if (state.failed) return current;
                                    	    if ( state.backtracking==0 ) {

                                    	      											newLeafNode(otherlv_6, grammarAccess.getExecAccess().getReferenceParametersVariableCrossReference_2_0_1_0_1_1_1_0());
                                    	      										
                                    	    }

                                    	    }


                                    	    }


                                    	    }
                                    	    break;

                                    	default :
                                    	    break loop150;
                                        }
                                    } while (true);


                                    }
                                    break;

                            }

                            otherlv_7=(Token)match(input,26,FollowSets000.FOLLOW_31); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_7, grammarAccess.getExecAccess().getRightParenthesisKeyword_2_0_1_0_2());
                              						
                            }

                            }


                            }
                            break;
                        case 2 :
                            // InternalSCEst.g:6728:6: otherlv_8= '()'
                            {
                            otherlv_8=(Token)match(input,34,FollowSets000.FOLLOW_31); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_8, grammarAccess.getExecAccess().getLeftParenthesisRightParenthesisKeyword_2_0_1_1());
                              					
                            }

                            }
                            break;

                    }

                    // InternalSCEst.g:6733:5: ( (otherlv_9= '(' ( ( (lv_valueParameters_10_0= ruleExpression ) ) (otherlv_11= ',' ( (lv_valueParameters_12_0= ruleExpression ) ) )* )? otherlv_13= ')' ) | otherlv_14= '()' )
                    int alt155=2;
                    int LA155_0 = input.LA(1);

                    if ( (LA155_0==25) ) {
                        alt155=1;
                    }
                    else if ( (LA155_0==34) ) {
                        alt155=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 155, 0, input);

                        throw nvae;
                    }
                    switch (alt155) {
                        case 1 :
                            // InternalSCEst.g:6734:6: (otherlv_9= '(' ( ( (lv_valueParameters_10_0= ruleExpression ) ) (otherlv_11= ',' ( (lv_valueParameters_12_0= ruleExpression ) ) )* )? otherlv_13= ')' )
                            {
                            // InternalSCEst.g:6734:6: (otherlv_9= '(' ( ( (lv_valueParameters_10_0= ruleExpression ) ) (otherlv_11= ',' ( (lv_valueParameters_12_0= ruleExpression ) ) )* )? otherlv_13= ')' )
                            // InternalSCEst.g:6735:7: otherlv_9= '(' ( ( (lv_valueParameters_10_0= ruleExpression ) ) (otherlv_11= ',' ( (lv_valueParameters_12_0= ruleExpression ) ) )* )? otherlv_13= ')'
                            {
                            otherlv_9=(Token)match(input,25,FollowSets000.FOLLOW_60); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_9, grammarAccess.getExecAccess().getLeftParenthesisKeyword_2_0_2_0_0());
                              						
                            }
                            // InternalSCEst.g:6739:7: ( ( (lv_valueParameters_10_0= ruleExpression ) ) (otherlv_11= ',' ( (lv_valueParameters_12_0= ruleExpression ) ) )* )?
                            int alt154=2;
                            int LA154_0 = input.LA(1);

                            if ( ((LA154_0>=RULE_ID && LA154_0<=RULE_COMMENT_ANNOTATION)||LA154_0==25||LA154_0==84||LA154_0==91||(LA154_0>=97 && LA154_0<=98)||LA154_0==117||(LA154_0>=128 && LA154_0<=130)) ) {
                                alt154=1;
                            }
                            switch (alt154) {
                                case 1 :
                                    // InternalSCEst.g:6740:8: ( (lv_valueParameters_10_0= ruleExpression ) ) (otherlv_11= ',' ( (lv_valueParameters_12_0= ruleExpression ) ) )*
                                    {
                                    // InternalSCEst.g:6740:8: ( (lv_valueParameters_10_0= ruleExpression ) )
                                    // InternalSCEst.g:6741:9: (lv_valueParameters_10_0= ruleExpression )
                                    {
                                    // InternalSCEst.g:6741:9: (lv_valueParameters_10_0= ruleExpression )
                                    // InternalSCEst.g:6742:10: lv_valueParameters_10_0= ruleExpression
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getExecAccess().getValueParametersExpressionParserRuleCall_2_0_2_0_1_0_0());
                                      									
                                    }
                                    pushFollow(FollowSets000.FOLLOW_33);
                                    lv_valueParameters_10_0=ruleExpression();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getExecRule());
                                      										}
                                      										add(
                                      											current,
                                      											"valueParameters",
                                      											lv_valueParameters_10_0,
                                      											"de.cau.cs.kieler.esterel.Esterel.Expression");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }

                                    // InternalSCEst.g:6759:8: (otherlv_11= ',' ( (lv_valueParameters_12_0= ruleExpression ) ) )*
                                    loop153:
                                    do {
                                        int alt153=2;
                                        int LA153_0 = input.LA(1);

                                        if ( (LA153_0==30) ) {
                                            alt153=1;
                                        }


                                        switch (alt153) {
                                    	case 1 :
                                    	    // InternalSCEst.g:6760:9: otherlv_11= ',' ( (lv_valueParameters_12_0= ruleExpression ) )
                                    	    {
                                    	    otherlv_11=(Token)match(input,30,FollowSets000.FOLLOW_16); if (state.failed) return current;
                                    	    if ( state.backtracking==0 ) {

                                    	      									newLeafNode(otherlv_11, grammarAccess.getExecAccess().getCommaKeyword_2_0_2_0_1_1_0());
                                    	      								
                                    	    }
                                    	    // InternalSCEst.g:6764:9: ( (lv_valueParameters_12_0= ruleExpression ) )
                                    	    // InternalSCEst.g:6765:10: (lv_valueParameters_12_0= ruleExpression )
                                    	    {
                                    	    // InternalSCEst.g:6765:10: (lv_valueParameters_12_0= ruleExpression )
                                    	    // InternalSCEst.g:6766:11: lv_valueParameters_12_0= ruleExpression
                                    	    {
                                    	    if ( state.backtracking==0 ) {

                                    	      											newCompositeNode(grammarAccess.getExecAccess().getValueParametersExpressionParserRuleCall_2_0_2_0_1_1_1_0());
                                    	      										
                                    	    }
                                    	    pushFollow(FollowSets000.FOLLOW_33);
                                    	    lv_valueParameters_12_0=ruleExpression();

                                    	    state._fsp--;
                                    	    if (state.failed) return current;
                                    	    if ( state.backtracking==0 ) {

                                    	      											if (current==null) {
                                    	      												current = createModelElementForParent(grammarAccess.getExecRule());
                                    	      											}
                                    	      											add(
                                    	      												current,
                                    	      												"valueParameters",
                                    	      												lv_valueParameters_12_0,
                                    	      												"de.cau.cs.kieler.esterel.Esterel.Expression");
                                    	      											afterParserOrEnumRuleCall();
                                    	      										
                                    	    }

                                    	    }


                                    	    }


                                    	    }
                                    	    break;

                                    	default :
                                    	    break loop153;
                                        }
                                    } while (true);


                                    }
                                    break;

                            }

                            otherlv_13=(Token)match(input,26,FollowSets000.FOLLOW_111); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_13, grammarAccess.getExecAccess().getRightParenthesisKeyword_2_0_2_0_2());
                              						
                            }

                            }


                            }
                            break;
                        case 2 :
                            // InternalSCEst.g:6791:6: otherlv_14= '()'
                            {
                            otherlv_14=(Token)match(input,34,FollowSets000.FOLLOW_111); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_14, grammarAccess.getExecAccess().getLeftParenthesisRightParenthesisKeyword_2_0_2_1());
                              					
                            }

                            }
                            break;

                    }

                    otherlv_15=(Token)match(input,40,FollowSets000.FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_15, grammarAccess.getExecAccess().getReturnKeyword_2_0_3());
                      				
                    }
                    // InternalSCEst.g:6800:5: ( (otherlv_16= RULE_ID ) )
                    // InternalSCEst.g:6801:6: (otherlv_16= RULE_ID )
                    {
                    // InternalSCEst.g:6801:6: (otherlv_16= RULE_ID )
                    // InternalSCEst.g:6802:7: otherlv_16= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      							/* */
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getExecRule());
                      							}
                      						
                    }
                    otherlv_16=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_72); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(otherlv_16, grammarAccess.getExecAccess().getReturnSignalSignalCrossReference_2_0_4_0());
                      						
                    }

                    }


                    }

                    // InternalSCEst.g:6816:5: (otherlv_17= 'do' ( (lv_statements_18_0= ruleEsterelParallel ) ) otherlv_19= 'end' (otherlv_20= 'exec' )? )?
                    int alt157=2;
                    alt157 = dfa157.predict(input);
                    switch (alt157) {
                        case 1 :
                            // InternalSCEst.g:6817:6: otherlv_17= 'do' ( (lv_statements_18_0= ruleEsterelParallel ) ) otherlv_19= 'end' (otherlv_20= 'exec' )?
                            {
                            otherlv_17=(Token)match(input,58,FollowSets000.FOLLOW_12); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_17, grammarAccess.getExecAccess().getDoKeyword_2_0_5_0());
                              					
                            }
                            // InternalSCEst.g:6821:6: ( (lv_statements_18_0= ruleEsterelParallel ) )
                            // InternalSCEst.g:6822:7: (lv_statements_18_0= ruleEsterelParallel )
                            {
                            // InternalSCEst.g:6822:7: (lv_statements_18_0= ruleEsterelParallel )
                            // InternalSCEst.g:6823:8: lv_statements_18_0= ruleEsterelParallel
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getExecAccess().getStatementsEsterelParallelParserRuleCall_2_0_5_1_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_68);
                            lv_statements_18_0=ruleEsterelParallel();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getExecRule());
                              								}
                              								add(
                              									current,
                              									"statements",
                              									lv_statements_18_0,
                              									"de.cau.cs.kieler.esterel.Esterel.EsterelParallel");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_19=(Token)match(input,19,FollowSets000.FOLLOW_112); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_19, grammarAccess.getExecAccess().getEndKeyword_2_0_5_2());
                              					
                            }
                            // InternalSCEst.g:6844:6: (otherlv_20= 'exec' )?
                            int alt156=2;
                            int LA156_0 = input.LA(1);

                            if ( (LA156_0==76) ) {
                                int LA156_1 = input.LA(2);

                                if ( (synpred216_InternalSCEst()) ) {
                                    alt156=1;
                                }
                            }
                            switch (alt156) {
                                case 1 :
                                    // InternalSCEst.g:6845:7: otherlv_20= 'exec'
                                    {
                                    otherlv_20=(Token)match(input,76,FollowSets000.FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_20, grammarAccess.getExecAccess().getExecKeyword_2_0_5_3());
                                      						
                                    }

                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCEst.g:6853:4: ( ( (lv_execCaseList_21_0= ruleExecCase ) )+ otherlv_22= 'end' (otherlv_23= 'exec' )? )
                    {
                    // InternalSCEst.g:6853:4: ( ( (lv_execCaseList_21_0= ruleExecCase ) )+ otherlv_22= 'end' (otherlv_23= 'exec' )? )
                    // InternalSCEst.g:6854:5: ( (lv_execCaseList_21_0= ruleExecCase ) )+ otherlv_22= 'end' (otherlv_23= 'exec' )?
                    {
                    // InternalSCEst.g:6854:5: ( (lv_execCaseList_21_0= ruleExecCase ) )+
                    int cnt158=0;
                    loop158:
                    do {
                        int alt158=2;
                        int LA158_0 = input.LA(1);

                        if ( (LA158_0==RULE_COMMENT_ANNOTATION||LA158_0==57||LA158_0==128) ) {
                            alt158=1;
                        }


                        switch (alt158) {
                    	case 1 :
                    	    // InternalSCEst.g:6855:6: (lv_execCaseList_21_0= ruleExecCase )
                    	    {
                    	    // InternalSCEst.g:6855:6: (lv_execCaseList_21_0= ruleExecCase )
                    	    // InternalSCEst.g:6856:7: lv_execCaseList_21_0= ruleExecCase
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getExecAccess().getExecCaseListExecCaseParserRuleCall_2_1_0_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_113);
                    	    lv_execCaseList_21_0=ruleExecCase();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getExecRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"execCaseList",
                    	      								lv_execCaseList_21_0,
                    	      								"de.cau.cs.kieler.esterel.Esterel.ExecCase");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt158 >= 1 ) break loop158;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(158, input);
                                throw eee;
                        }
                        cnt158++;
                    } while (true);

                    otherlv_22=(Token)match(input,19,FollowSets000.FOLLOW_112); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_22, grammarAccess.getExecAccess().getEndKeyword_2_1_1());
                      				
                    }
                    // InternalSCEst.g:6877:5: (otherlv_23= 'exec' )?
                    int alt159=2;
                    int LA159_0 = input.LA(1);

                    if ( (LA159_0==76) ) {
                        int LA159_1 = input.LA(2);

                        if ( (synpred220_InternalSCEst()) ) {
                            alt159=1;
                        }
                    }
                    switch (alt159) {
                        case 1 :
                            // InternalSCEst.g:6878:6: otherlv_23= 'exec'
                            {
                            otherlv_23=(Token)match(input,76,FollowSets000.FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_23, grammarAccess.getExecAccess().getExecKeyword_2_1_2());
                              					
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExec"


    // $ANTLR start "entryRuleExecCase"
    // InternalSCEst.g:6889:1: entryRuleExecCase returns [EObject current=null] : iv_ruleExecCase= ruleExecCase EOF ;
    public final EObject entryRuleExecCase() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExecCase = null;


        try {
            // InternalSCEst.g:6889:49: (iv_ruleExecCase= ruleExecCase EOF )
            // InternalSCEst.g:6890:2: iv_ruleExecCase= ruleExecCase EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExecCaseRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleExecCase=ruleExecCase();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExecCase; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExecCase"


    // $ANTLR start "ruleExecCase"
    // InternalSCEst.g:6896:1: ruleExecCase returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'case' ( (otherlv_2= RULE_ID ) ) ( (otherlv_3= '(' ( ( (otherlv_4= RULE_ID ) ) (otherlv_5= ',' ( (otherlv_6= RULE_ID ) ) )* )? otherlv_7= ')' ) | otherlv_8= '()' ) ( (otherlv_9= '(' ( ( (lv_valueParameters_10_0= ruleExpression ) ) (otherlv_11= ',' ( (lv_valueParameters_12_0= ruleExpression ) ) )* )? otherlv_13= ')' ) | otherlv_14= '()' ) otherlv_15= 'return' ( (otherlv_16= RULE_ID ) ) (otherlv_17= 'do' ( (lv_statements_18_0= ruleEsterelParallel ) ) )? ) ;
    public final EObject ruleExecCase() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_valueParameters_10_0 = null;

        EObject lv_valueParameters_12_0 = null;

        EObject lv_statements_18_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:6902:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'case' ( (otherlv_2= RULE_ID ) ) ( (otherlv_3= '(' ( ( (otherlv_4= RULE_ID ) ) (otherlv_5= ',' ( (otherlv_6= RULE_ID ) ) )* )? otherlv_7= ')' ) | otherlv_8= '()' ) ( (otherlv_9= '(' ( ( (lv_valueParameters_10_0= ruleExpression ) ) (otherlv_11= ',' ( (lv_valueParameters_12_0= ruleExpression ) ) )* )? otherlv_13= ')' ) | otherlv_14= '()' ) otherlv_15= 'return' ( (otherlv_16= RULE_ID ) ) (otherlv_17= 'do' ( (lv_statements_18_0= ruleEsterelParallel ) ) )? ) )
            // InternalSCEst.g:6903:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'case' ( (otherlv_2= RULE_ID ) ) ( (otherlv_3= '(' ( ( (otherlv_4= RULE_ID ) ) (otherlv_5= ',' ( (otherlv_6= RULE_ID ) ) )* )? otherlv_7= ')' ) | otherlv_8= '()' ) ( (otherlv_9= '(' ( ( (lv_valueParameters_10_0= ruleExpression ) ) (otherlv_11= ',' ( (lv_valueParameters_12_0= ruleExpression ) ) )* )? otherlv_13= ')' ) | otherlv_14= '()' ) otherlv_15= 'return' ( (otherlv_16= RULE_ID ) ) (otherlv_17= 'do' ( (lv_statements_18_0= ruleEsterelParallel ) ) )? )
            {
            // InternalSCEst.g:6903:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'case' ( (otherlv_2= RULE_ID ) ) ( (otherlv_3= '(' ( ( (otherlv_4= RULE_ID ) ) (otherlv_5= ',' ( (otherlv_6= RULE_ID ) ) )* )? otherlv_7= ')' ) | otherlv_8= '()' ) ( (otherlv_9= '(' ( ( (lv_valueParameters_10_0= ruleExpression ) ) (otherlv_11= ',' ( (lv_valueParameters_12_0= ruleExpression ) ) )* )? otherlv_13= ')' ) | otherlv_14= '()' ) otherlv_15= 'return' ( (otherlv_16= RULE_ID ) ) (otherlv_17= 'do' ( (lv_statements_18_0= ruleEsterelParallel ) ) )? )
            // InternalSCEst.g:6904:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'case' ( (otherlv_2= RULE_ID ) ) ( (otherlv_3= '(' ( ( (otherlv_4= RULE_ID ) ) (otherlv_5= ',' ( (otherlv_6= RULE_ID ) ) )* )? otherlv_7= ')' ) | otherlv_8= '()' ) ( (otherlv_9= '(' ( ( (lv_valueParameters_10_0= ruleExpression ) ) (otherlv_11= ',' ( (lv_valueParameters_12_0= ruleExpression ) ) )* )? otherlv_13= ')' ) | otherlv_14= '()' ) otherlv_15= 'return' ( (otherlv_16= RULE_ID ) ) (otherlv_17= 'do' ( (lv_statements_18_0= ruleEsterelParallel ) ) )?
            {
            // InternalSCEst.g:6904:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop161:
            do {
                int alt161=2;
                int LA161_0 = input.LA(1);

                if ( (LA161_0==RULE_COMMENT_ANNOTATION||LA161_0==128) ) {
                    alt161=1;
                }


                switch (alt161) {
            	case 1 :
            	    // InternalSCEst.g:6905:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:6905:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCEst.g:6906:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getExecCaseAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_70);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getExecCaseRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop161;
                }
            } while (true);

            otherlv_1=(Token)match(input,57,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getExecCaseAccess().getCaseKeyword_1());
              		
            }
            // InternalSCEst.g:6927:3: ( (otherlv_2= RULE_ID ) )
            // InternalSCEst.g:6928:4: (otherlv_2= RULE_ID )
            {
            // InternalSCEst.g:6928:4: (otherlv_2= RULE_ID )
            // InternalSCEst.g:6929:5: otherlv_2= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getExecCaseRule());
              					}
              				
            }
            otherlv_2=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_2, grammarAccess.getExecCaseAccess().getTaskTaskCrossReference_2_0());
              				
            }

            }


            }

            // InternalSCEst.g:6943:3: ( (otherlv_3= '(' ( ( (otherlv_4= RULE_ID ) ) (otherlv_5= ',' ( (otherlv_6= RULE_ID ) ) )* )? otherlv_7= ')' ) | otherlv_8= '()' )
            int alt164=2;
            int LA164_0 = input.LA(1);

            if ( (LA164_0==25) ) {
                alt164=1;
            }
            else if ( (LA164_0==34) ) {
                alt164=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 164, 0, input);

                throw nvae;
            }
            switch (alt164) {
                case 1 :
                    // InternalSCEst.g:6944:4: (otherlv_3= '(' ( ( (otherlv_4= RULE_ID ) ) (otherlv_5= ',' ( (otherlv_6= RULE_ID ) ) )* )? otherlv_7= ')' )
                    {
                    // InternalSCEst.g:6944:4: (otherlv_3= '(' ( ( (otherlv_4= RULE_ID ) ) (otherlv_5= ',' ( (otherlv_6= RULE_ID ) ) )* )? otherlv_7= ')' )
                    // InternalSCEst.g:6945:5: otherlv_3= '(' ( ( (otherlv_4= RULE_ID ) ) (otherlv_5= ',' ( (otherlv_6= RULE_ID ) ) )* )? otherlv_7= ')'
                    {
                    otherlv_3=(Token)match(input,25,FollowSets000.FOLLOW_59); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getExecCaseAccess().getLeftParenthesisKeyword_3_0_0());
                      				
                    }
                    // InternalSCEst.g:6949:5: ( ( (otherlv_4= RULE_ID ) ) (otherlv_5= ',' ( (otherlv_6= RULE_ID ) ) )* )?
                    int alt163=2;
                    int LA163_0 = input.LA(1);

                    if ( (LA163_0==RULE_ID) ) {
                        alt163=1;
                    }
                    switch (alt163) {
                        case 1 :
                            // InternalSCEst.g:6950:6: ( (otherlv_4= RULE_ID ) ) (otherlv_5= ',' ( (otherlv_6= RULE_ID ) ) )*
                            {
                            // InternalSCEst.g:6950:6: ( (otherlv_4= RULE_ID ) )
                            // InternalSCEst.g:6951:7: (otherlv_4= RULE_ID )
                            {
                            // InternalSCEst.g:6951:7: (otherlv_4= RULE_ID )
                            // InternalSCEst.g:6952:8: otherlv_4= RULE_ID
                            {
                            if ( state.backtracking==0 ) {

                              								/* */
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getExecCaseRule());
                              								}
                              							
                            }
                            otherlv_4=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_33); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(otherlv_4, grammarAccess.getExecCaseAccess().getReferenceParametersVariableCrossReference_3_0_1_0_0());
                              							
                            }

                            }


                            }

                            // InternalSCEst.g:6966:6: (otherlv_5= ',' ( (otherlv_6= RULE_ID ) ) )*
                            loop162:
                            do {
                                int alt162=2;
                                int LA162_0 = input.LA(1);

                                if ( (LA162_0==30) ) {
                                    alt162=1;
                                }


                                switch (alt162) {
                            	case 1 :
                            	    // InternalSCEst.g:6967:7: otherlv_5= ',' ( (otherlv_6= RULE_ID ) )
                            	    {
                            	    otherlv_5=(Token)match(input,30,FollowSets000.FOLLOW_6); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_5, grammarAccess.getExecCaseAccess().getCommaKeyword_3_0_1_1_0());
                            	      						
                            	    }
                            	    // InternalSCEst.g:6971:7: ( (otherlv_6= RULE_ID ) )
                            	    // InternalSCEst.g:6972:8: (otherlv_6= RULE_ID )
                            	    {
                            	    // InternalSCEst.g:6972:8: (otherlv_6= RULE_ID )
                            	    // InternalSCEst.g:6973:9: otherlv_6= RULE_ID
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									/* */
                            	      								
                            	    }
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElement(grammarAccess.getExecCaseRule());
                            	      									}
                            	      								
                            	    }
                            	    otherlv_6=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_33); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									newLeafNode(otherlv_6, grammarAccess.getExecCaseAccess().getReferenceParametersVariableCrossReference_3_0_1_1_1_0());
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop162;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_7=(Token)match(input,26,FollowSets000.FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getExecCaseAccess().getRightParenthesisKeyword_3_0_2());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCEst.g:6995:4: otherlv_8= '()'
                    {
                    otherlv_8=(Token)match(input,34,FollowSets000.FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getExecCaseAccess().getLeftParenthesisRightParenthesisKeyword_3_1());
                      			
                    }

                    }
                    break;

            }

            // InternalSCEst.g:7000:3: ( (otherlv_9= '(' ( ( (lv_valueParameters_10_0= ruleExpression ) ) (otherlv_11= ',' ( (lv_valueParameters_12_0= ruleExpression ) ) )* )? otherlv_13= ')' ) | otherlv_14= '()' )
            int alt167=2;
            int LA167_0 = input.LA(1);

            if ( (LA167_0==25) ) {
                alt167=1;
            }
            else if ( (LA167_0==34) ) {
                alt167=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 167, 0, input);

                throw nvae;
            }
            switch (alt167) {
                case 1 :
                    // InternalSCEst.g:7001:4: (otherlv_9= '(' ( ( (lv_valueParameters_10_0= ruleExpression ) ) (otherlv_11= ',' ( (lv_valueParameters_12_0= ruleExpression ) ) )* )? otherlv_13= ')' )
                    {
                    // InternalSCEst.g:7001:4: (otherlv_9= '(' ( ( (lv_valueParameters_10_0= ruleExpression ) ) (otherlv_11= ',' ( (lv_valueParameters_12_0= ruleExpression ) ) )* )? otherlv_13= ')' )
                    // InternalSCEst.g:7002:5: otherlv_9= '(' ( ( (lv_valueParameters_10_0= ruleExpression ) ) (otherlv_11= ',' ( (lv_valueParameters_12_0= ruleExpression ) ) )* )? otherlv_13= ')'
                    {
                    otherlv_9=(Token)match(input,25,FollowSets000.FOLLOW_60); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_9, grammarAccess.getExecCaseAccess().getLeftParenthesisKeyword_4_0_0());
                      				
                    }
                    // InternalSCEst.g:7006:5: ( ( (lv_valueParameters_10_0= ruleExpression ) ) (otherlv_11= ',' ( (lv_valueParameters_12_0= ruleExpression ) ) )* )?
                    int alt166=2;
                    int LA166_0 = input.LA(1);

                    if ( ((LA166_0>=RULE_ID && LA166_0<=RULE_COMMENT_ANNOTATION)||LA166_0==25||LA166_0==84||LA166_0==91||(LA166_0>=97 && LA166_0<=98)||LA166_0==117||(LA166_0>=128 && LA166_0<=130)) ) {
                        alt166=1;
                    }
                    switch (alt166) {
                        case 1 :
                            // InternalSCEst.g:7007:6: ( (lv_valueParameters_10_0= ruleExpression ) ) (otherlv_11= ',' ( (lv_valueParameters_12_0= ruleExpression ) ) )*
                            {
                            // InternalSCEst.g:7007:6: ( (lv_valueParameters_10_0= ruleExpression ) )
                            // InternalSCEst.g:7008:7: (lv_valueParameters_10_0= ruleExpression )
                            {
                            // InternalSCEst.g:7008:7: (lv_valueParameters_10_0= ruleExpression )
                            // InternalSCEst.g:7009:8: lv_valueParameters_10_0= ruleExpression
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getExecCaseAccess().getValueParametersExpressionParserRuleCall_4_0_1_0_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_33);
                            lv_valueParameters_10_0=ruleExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getExecCaseRule());
                              								}
                              								add(
                              									current,
                              									"valueParameters",
                              									lv_valueParameters_10_0,
                              									"de.cau.cs.kieler.esterel.Esterel.Expression");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalSCEst.g:7026:6: (otherlv_11= ',' ( (lv_valueParameters_12_0= ruleExpression ) ) )*
                            loop165:
                            do {
                                int alt165=2;
                                int LA165_0 = input.LA(1);

                                if ( (LA165_0==30) ) {
                                    alt165=1;
                                }


                                switch (alt165) {
                            	case 1 :
                            	    // InternalSCEst.g:7027:7: otherlv_11= ',' ( (lv_valueParameters_12_0= ruleExpression ) )
                            	    {
                            	    otherlv_11=(Token)match(input,30,FollowSets000.FOLLOW_16); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_11, grammarAccess.getExecCaseAccess().getCommaKeyword_4_0_1_1_0());
                            	      						
                            	    }
                            	    // InternalSCEst.g:7031:7: ( (lv_valueParameters_12_0= ruleExpression ) )
                            	    // InternalSCEst.g:7032:8: (lv_valueParameters_12_0= ruleExpression )
                            	    {
                            	    // InternalSCEst.g:7032:8: (lv_valueParameters_12_0= ruleExpression )
                            	    // InternalSCEst.g:7033:9: lv_valueParameters_12_0= ruleExpression
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getExecCaseAccess().getValueParametersExpressionParserRuleCall_4_0_1_1_1_0());
                            	      								
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_33);
                            	    lv_valueParameters_12_0=ruleExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getExecCaseRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"valueParameters",
                            	      										lv_valueParameters_12_0,
                            	      										"de.cau.cs.kieler.esterel.Esterel.Expression");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop165;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_13=(Token)match(input,26,FollowSets000.FOLLOW_111); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_13, grammarAccess.getExecCaseAccess().getRightParenthesisKeyword_4_0_2());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCEst.g:7058:4: otherlv_14= '()'
                    {
                    otherlv_14=(Token)match(input,34,FollowSets000.FOLLOW_111); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_14, grammarAccess.getExecCaseAccess().getLeftParenthesisRightParenthesisKeyword_4_1());
                      			
                    }

                    }
                    break;

            }

            otherlv_15=(Token)match(input,40,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_15, grammarAccess.getExecCaseAccess().getReturnKeyword_5());
              		
            }
            // InternalSCEst.g:7067:3: ( (otherlv_16= RULE_ID ) )
            // InternalSCEst.g:7068:4: (otherlv_16= RULE_ID )
            {
            // InternalSCEst.g:7068:4: (otherlv_16= RULE_ID )
            // InternalSCEst.g:7069:5: otherlv_16= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getExecCaseRule());
              					}
              				
            }
            otherlv_16=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_72); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_16, grammarAccess.getExecCaseAccess().getReturnSignalSignalCrossReference_6_0());
              				
            }

            }


            }

            // InternalSCEst.g:7083:3: (otherlv_17= 'do' ( (lv_statements_18_0= ruleEsterelParallel ) ) )?
            int alt168=2;
            int LA168_0 = input.LA(1);

            if ( (LA168_0==58) ) {
                alt168=1;
            }
            switch (alt168) {
                case 1 :
                    // InternalSCEst.g:7084:4: otherlv_17= 'do' ( (lv_statements_18_0= ruleEsterelParallel ) )
                    {
                    otherlv_17=(Token)match(input,58,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_17, grammarAccess.getExecCaseAccess().getDoKeyword_7_0());
                      			
                    }
                    // InternalSCEst.g:7088:4: ( (lv_statements_18_0= ruleEsterelParallel ) )
                    // InternalSCEst.g:7089:5: (lv_statements_18_0= ruleEsterelParallel )
                    {
                    // InternalSCEst.g:7089:5: (lv_statements_18_0= ruleEsterelParallel )
                    // InternalSCEst.g:7090:6: lv_statements_18_0= ruleEsterelParallel
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExecCaseAccess().getStatementsEsterelParallelParserRuleCall_7_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_statements_18_0=ruleEsterelParallel();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExecCaseRule());
                      						}
                      						add(
                      							current,
                      							"statements",
                      							lv_statements_18_0,
                      							"de.cau.cs.kieler.esterel.Esterel.EsterelParallel");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExecCase"


    // $ANTLR start "entryRuleLocalSignalDeclaration"
    // InternalSCEst.g:7112:1: entryRuleLocalSignalDeclaration returns [EObject current=null] : iv_ruleLocalSignalDeclaration= ruleLocalSignalDeclaration EOF ;
    public final EObject entryRuleLocalSignalDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLocalSignalDeclaration = null;


        try {
            // InternalSCEst.g:7112:63: (iv_ruleLocalSignalDeclaration= ruleLocalSignalDeclaration EOF )
            // InternalSCEst.g:7113:2: iv_ruleLocalSignalDeclaration= ruleLocalSignalDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLocalSignalDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLocalSignalDeclaration=ruleLocalSignalDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLocalSignalDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLocalSignalDeclaration"


    // $ANTLR start "ruleLocalSignalDeclaration"
    // InternalSCEst.g:7119:1: ruleLocalSignalDeclaration returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'signal' ( (lv_valuedObjects_2_0= ruleSignal ) ) (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleSignal ) ) )* otherlv_5= 'in' ( (lv_statements_6_0= ruleEsterelParallel ) ) otherlv_7= 'end' (otherlv_8= 'signal' )? ) ;
    public final EObject ruleLocalSignalDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_valuedObjects_2_0 = null;

        EObject lv_valuedObjects_4_0 = null;

        EObject lv_statements_6_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:7125:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'signal' ( (lv_valuedObjects_2_0= ruleSignal ) ) (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleSignal ) ) )* otherlv_5= 'in' ( (lv_statements_6_0= ruleEsterelParallel ) ) otherlv_7= 'end' (otherlv_8= 'signal' )? ) )
            // InternalSCEst.g:7126:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'signal' ( (lv_valuedObjects_2_0= ruleSignal ) ) (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleSignal ) ) )* otherlv_5= 'in' ( (lv_statements_6_0= ruleEsterelParallel ) ) otherlv_7= 'end' (otherlv_8= 'signal' )? )
            {
            // InternalSCEst.g:7126:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'signal' ( (lv_valuedObjects_2_0= ruleSignal ) ) (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleSignal ) ) )* otherlv_5= 'in' ( (lv_statements_6_0= ruleEsterelParallel ) ) otherlv_7= 'end' (otherlv_8= 'signal' )? )
            // InternalSCEst.g:7127:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'signal' ( (lv_valuedObjects_2_0= ruleSignal ) ) (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleSignal ) ) )* otherlv_5= 'in' ( (lv_statements_6_0= ruleEsterelParallel ) ) otherlv_7= 'end' (otherlv_8= 'signal' )?
            {
            // InternalSCEst.g:7127:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop169:
            do {
                int alt169=2;
                int LA169_0 = input.LA(1);

                if ( (LA169_0==RULE_COMMENT_ANNOTATION||LA169_0==128) ) {
                    alt169=1;
                }


                switch (alt169) {
            	case 1 :
            	    // InternalSCEst.g:7128:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:7128:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCEst.g:7129:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getLocalSignalDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_114);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getLocalSignalDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop169;
                }
            } while (true);

            otherlv_1=(Token)match(input,77,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getLocalSignalDeclarationAccess().getSignalKeyword_1());
              		
            }
            // InternalSCEst.g:7150:3: ( (lv_valuedObjects_2_0= ruleSignal ) )
            // InternalSCEst.g:7151:4: (lv_valuedObjects_2_0= ruleSignal )
            {
            // InternalSCEst.g:7151:4: (lv_valuedObjects_2_0= ruleSignal )
            // InternalSCEst.g:7152:5: lv_valuedObjects_2_0= ruleSignal
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLocalSignalDeclarationAccess().getValuedObjectsSignalParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_102);
            lv_valuedObjects_2_0=ruleSignal();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLocalSignalDeclarationRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_2_0,
              						"de.cau.cs.kieler.esterel.Esterel.Signal");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCEst.g:7169:3: (otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleSignal ) ) )*
            loop170:
            do {
                int alt170=2;
                int LA170_0 = input.LA(1);

                if ( (LA170_0==30) ) {
                    alt170=1;
                }


                switch (alt170) {
            	case 1 :
            	    // InternalSCEst.g:7170:4: otherlv_3= ',' ( (lv_valuedObjects_4_0= ruleSignal ) )
            	    {
            	    otherlv_3=(Token)match(input,30,FollowSets000.FOLLOW_6); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getLocalSignalDeclarationAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalSCEst.g:7174:4: ( (lv_valuedObjects_4_0= ruleSignal ) )
            	    // InternalSCEst.g:7175:5: (lv_valuedObjects_4_0= ruleSignal )
            	    {
            	    // InternalSCEst.g:7175:5: (lv_valuedObjects_4_0= ruleSignal )
            	    // InternalSCEst.g:7176:6: lv_valuedObjects_4_0= ruleSignal
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getLocalSignalDeclarationAccess().getValuedObjectsSignalParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_102);
            	    lv_valuedObjects_4_0=ruleSignal();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getLocalSignalDeclarationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"valuedObjects",
            	      							lv_valuedObjects_4_0,
            	      							"de.cau.cs.kieler.esterel.Esterel.Signal");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop170;
                }
            } while (true);

            otherlv_5=(Token)match(input,73,FollowSets000.FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getLocalSignalDeclarationAccess().getInKeyword_4());
              		
            }
            // InternalSCEst.g:7198:3: ( (lv_statements_6_0= ruleEsterelParallel ) )
            // InternalSCEst.g:7199:4: (lv_statements_6_0= ruleEsterelParallel )
            {
            // InternalSCEst.g:7199:4: (lv_statements_6_0= ruleEsterelParallel )
            // InternalSCEst.g:7200:5: lv_statements_6_0= ruleEsterelParallel
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLocalSignalDeclarationAccess().getStatementsEsterelParallelParserRuleCall_5_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_68);
            lv_statements_6_0=ruleEsterelParallel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLocalSignalDeclarationRule());
              					}
              					add(
              						current,
              						"statements",
              						lv_statements_6_0,
              						"de.cau.cs.kieler.esterel.Esterel.EsterelParallel");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_7=(Token)match(input,19,FollowSets000.FOLLOW_115); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getLocalSignalDeclarationAccess().getEndKeyword_6());
              		
            }
            // InternalSCEst.g:7221:3: (otherlv_8= 'signal' )?
            int alt171=2;
            alt171 = dfa171.predict(input);
            switch (alt171) {
                case 1 :
                    // InternalSCEst.g:7222:4: otherlv_8= 'signal'
                    {
                    otherlv_8=(Token)match(input,77,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getLocalSignalDeclarationAccess().getSignalKeyword_7());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLocalSignalDeclaration"


    // $ANTLR start "entryRuleLocalVariableDeclaration"
    // InternalSCEst.g:7231:1: entryRuleLocalVariableDeclaration returns [EObject current=null] : iv_ruleLocalVariableDeclaration= ruleLocalVariableDeclaration EOF ;
    public final EObject entryRuleLocalVariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLocalVariableDeclaration = null;


        try {
            // InternalSCEst.g:7231:65: (iv_ruleLocalVariableDeclaration= ruleLocalVariableDeclaration EOF )
            // InternalSCEst.g:7232:2: iv_ruleLocalVariableDeclaration= ruleLocalVariableDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLocalVariableDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLocalVariableDeclaration=ruleLocalVariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLocalVariableDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLocalVariableDeclaration"


    // $ANTLR start "ruleLocalVariableDeclaration"
    // InternalSCEst.g:7238:1: ruleLocalVariableDeclaration returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'var' ( (lv_declarations_2_0= ruleEsterelVariableDeclaration ) ) (otherlv_3= ',' ( (lv_declarations_4_0= ruleEsterelVariableDeclaration ) ) )* otherlv_5= 'in' ( (lv_statements_6_0= ruleEsterelParallel ) ) otherlv_7= 'end' (otherlv_8= 'var' )? ) ;
    public final EObject ruleLocalVariableDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_declarations_2_0 = null;

        EObject lv_declarations_4_0 = null;

        EObject lv_statements_6_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:7244:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'var' ( (lv_declarations_2_0= ruleEsterelVariableDeclaration ) ) (otherlv_3= ',' ( (lv_declarations_4_0= ruleEsterelVariableDeclaration ) ) )* otherlv_5= 'in' ( (lv_statements_6_0= ruleEsterelParallel ) ) otherlv_7= 'end' (otherlv_8= 'var' )? ) )
            // InternalSCEst.g:7245:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'var' ( (lv_declarations_2_0= ruleEsterelVariableDeclaration ) ) (otherlv_3= ',' ( (lv_declarations_4_0= ruleEsterelVariableDeclaration ) ) )* otherlv_5= 'in' ( (lv_statements_6_0= ruleEsterelParallel ) ) otherlv_7= 'end' (otherlv_8= 'var' )? )
            {
            // InternalSCEst.g:7245:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'var' ( (lv_declarations_2_0= ruleEsterelVariableDeclaration ) ) (otherlv_3= ',' ( (lv_declarations_4_0= ruleEsterelVariableDeclaration ) ) )* otherlv_5= 'in' ( (lv_statements_6_0= ruleEsterelParallel ) ) otherlv_7= 'end' (otherlv_8= 'var' )? )
            // InternalSCEst.g:7246:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'var' ( (lv_declarations_2_0= ruleEsterelVariableDeclaration ) ) (otherlv_3= ',' ( (lv_declarations_4_0= ruleEsterelVariableDeclaration ) ) )* otherlv_5= 'in' ( (lv_statements_6_0= ruleEsterelParallel ) ) otherlv_7= 'end' (otherlv_8= 'var' )?
            {
            // InternalSCEst.g:7246:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop172:
            do {
                int alt172=2;
                int LA172_0 = input.LA(1);

                if ( (LA172_0==RULE_COMMENT_ANNOTATION||LA172_0==128) ) {
                    alt172=1;
                }


                switch (alt172) {
            	case 1 :
            	    // InternalSCEst.g:7247:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:7247:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCEst.g:7248:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getLocalVariableDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_116);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getLocalVariableDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop172;
                }
            } while (true);

            otherlv_1=(Token)match(input,78,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getLocalVariableDeclarationAccess().getVarKeyword_1());
              		
            }
            // InternalSCEst.g:7269:3: ( (lv_declarations_2_0= ruleEsterelVariableDeclaration ) )
            // InternalSCEst.g:7270:4: (lv_declarations_2_0= ruleEsterelVariableDeclaration )
            {
            // InternalSCEst.g:7270:4: (lv_declarations_2_0= ruleEsterelVariableDeclaration )
            // InternalSCEst.g:7271:5: lv_declarations_2_0= ruleEsterelVariableDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLocalVariableDeclarationAccess().getDeclarationsEsterelVariableDeclarationParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_102);
            lv_declarations_2_0=ruleEsterelVariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLocalVariableDeclarationRule());
              					}
              					add(
              						current,
              						"declarations",
              						lv_declarations_2_0,
              						"de.cau.cs.kieler.esterel.Esterel.EsterelVariableDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCEst.g:7288:3: (otherlv_3= ',' ( (lv_declarations_4_0= ruleEsterelVariableDeclaration ) ) )*
            loop173:
            do {
                int alt173=2;
                int LA173_0 = input.LA(1);

                if ( (LA173_0==30) ) {
                    alt173=1;
                }


                switch (alt173) {
            	case 1 :
            	    // InternalSCEst.g:7289:4: otherlv_3= ',' ( (lv_declarations_4_0= ruleEsterelVariableDeclaration ) )
            	    {
            	    otherlv_3=(Token)match(input,30,FollowSets000.FOLLOW_6); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getLocalVariableDeclarationAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalSCEst.g:7293:4: ( (lv_declarations_4_0= ruleEsterelVariableDeclaration ) )
            	    // InternalSCEst.g:7294:5: (lv_declarations_4_0= ruleEsterelVariableDeclaration )
            	    {
            	    // InternalSCEst.g:7294:5: (lv_declarations_4_0= ruleEsterelVariableDeclaration )
            	    // InternalSCEst.g:7295:6: lv_declarations_4_0= ruleEsterelVariableDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getLocalVariableDeclarationAccess().getDeclarationsEsterelVariableDeclarationParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_102);
            	    lv_declarations_4_0=ruleEsterelVariableDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getLocalVariableDeclarationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"declarations",
            	      							lv_declarations_4_0,
            	      							"de.cau.cs.kieler.esterel.Esterel.EsterelVariableDeclaration");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop173;
                }
            } while (true);

            otherlv_5=(Token)match(input,73,FollowSets000.FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getLocalVariableDeclarationAccess().getInKeyword_4());
              		
            }
            // InternalSCEst.g:7317:3: ( (lv_statements_6_0= ruleEsterelParallel ) )
            // InternalSCEst.g:7318:4: (lv_statements_6_0= ruleEsterelParallel )
            {
            // InternalSCEst.g:7318:4: (lv_statements_6_0= ruleEsterelParallel )
            // InternalSCEst.g:7319:5: lv_statements_6_0= ruleEsterelParallel
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLocalVariableDeclarationAccess().getStatementsEsterelParallelParserRuleCall_5_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_68);
            lv_statements_6_0=ruleEsterelParallel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLocalVariableDeclarationRule());
              					}
              					add(
              						current,
              						"statements",
              						lv_statements_6_0,
              						"de.cau.cs.kieler.esterel.Esterel.EsterelParallel");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_7=(Token)match(input,19,FollowSets000.FOLLOW_117); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getLocalVariableDeclarationAccess().getEndKeyword_6());
              		
            }
            // InternalSCEst.g:7340:3: (otherlv_8= 'var' )?
            int alt174=2;
            alt174 = dfa174.predict(input);
            switch (alt174) {
                case 1 :
                    // InternalSCEst.g:7341:4: otherlv_8= 'var'
                    {
                    otherlv_8=(Token)match(input,78,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getLocalVariableDeclarationAccess().getVarKeyword_7());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLocalVariableDeclaration"


    // $ANTLR start "entryRuleEsterelVariableDeclaration"
    // InternalSCEst.g:7350:1: entryRuleEsterelVariableDeclaration returns [EObject current=null] : iv_ruleEsterelVariableDeclaration= ruleEsterelVariableDeclaration EOF ;
    public final EObject entryRuleEsterelVariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEsterelVariableDeclaration = null;


        try {
            // InternalSCEst.g:7350:67: (iv_ruleEsterelVariableDeclaration= ruleEsterelVariableDeclaration EOF )
            // InternalSCEst.g:7351:2: iv_ruleEsterelVariableDeclaration= ruleEsterelVariableDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEsterelVariableDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEsterelVariableDeclaration=ruleEsterelVariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEsterelVariableDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEsterelVariableDeclaration"


    // $ANTLR start "ruleEsterelVariableDeclaration"
    // InternalSCEst.g:7357:1: ruleEsterelVariableDeclaration returns [EObject current=null] : ( ( (lv_valuedObjects_0_0= ruleVariable ) ) (otherlv_1= ',' ( (lv_valuedObjects_2_0= ruleVariable ) ) )* otherlv_3= ':' ( (lv_type_4_0= ruleTypeIdentifier ) ) ) ;
    public final EObject ruleEsterelVariableDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_valuedObjects_0_0 = null;

        EObject lv_valuedObjects_2_0 = null;

        EObject lv_type_4_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:7363:2: ( ( ( (lv_valuedObjects_0_0= ruleVariable ) ) (otherlv_1= ',' ( (lv_valuedObjects_2_0= ruleVariable ) ) )* otherlv_3= ':' ( (lv_type_4_0= ruleTypeIdentifier ) ) ) )
            // InternalSCEst.g:7364:2: ( ( (lv_valuedObjects_0_0= ruleVariable ) ) (otherlv_1= ',' ( (lv_valuedObjects_2_0= ruleVariable ) ) )* otherlv_3= ':' ( (lv_type_4_0= ruleTypeIdentifier ) ) )
            {
            // InternalSCEst.g:7364:2: ( ( (lv_valuedObjects_0_0= ruleVariable ) ) (otherlv_1= ',' ( (lv_valuedObjects_2_0= ruleVariable ) ) )* otherlv_3= ':' ( (lv_type_4_0= ruleTypeIdentifier ) ) )
            // InternalSCEst.g:7365:3: ( (lv_valuedObjects_0_0= ruleVariable ) ) (otherlv_1= ',' ( (lv_valuedObjects_2_0= ruleVariable ) ) )* otherlv_3= ':' ( (lv_type_4_0= ruleTypeIdentifier ) )
            {
            // InternalSCEst.g:7365:3: ( (lv_valuedObjects_0_0= ruleVariable ) )
            // InternalSCEst.g:7366:4: (lv_valuedObjects_0_0= ruleVariable )
            {
            // InternalSCEst.g:7366:4: (lv_valuedObjects_0_0= ruleVariable )
            // InternalSCEst.g:7367:5: lv_valuedObjects_0_0= ruleVariable
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEsterelVariableDeclarationAccess().getValuedObjectsVariableParserRuleCall_0_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_118);
            lv_valuedObjects_0_0=ruleVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEsterelVariableDeclarationRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_0_0,
              						"de.cau.cs.kieler.esterel.Esterel.Variable");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCEst.g:7384:3: (otherlv_1= ',' ( (lv_valuedObjects_2_0= ruleVariable ) ) )*
            loop175:
            do {
                int alt175=2;
                int LA175_0 = input.LA(1);

                if ( (LA175_0==30) ) {
                    alt175=1;
                }


                switch (alt175) {
            	case 1 :
            	    // InternalSCEst.g:7385:4: otherlv_1= ',' ( (lv_valuedObjects_2_0= ruleVariable ) )
            	    {
            	    otherlv_1=(Token)match(input,30,FollowSets000.FOLLOW_6); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getEsterelVariableDeclarationAccess().getCommaKeyword_1_0());
            	      			
            	    }
            	    // InternalSCEst.g:7389:4: ( (lv_valuedObjects_2_0= ruleVariable ) )
            	    // InternalSCEst.g:7390:5: (lv_valuedObjects_2_0= ruleVariable )
            	    {
            	    // InternalSCEst.g:7390:5: (lv_valuedObjects_2_0= ruleVariable )
            	    // InternalSCEst.g:7391:6: lv_valuedObjects_2_0= ruleVariable
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getEsterelVariableDeclarationAccess().getValuedObjectsVariableParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_118);
            	    lv_valuedObjects_2_0=ruleVariable();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getEsterelVariableDeclarationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"valuedObjects",
            	      							lv_valuedObjects_2_0,
            	      							"de.cau.cs.kieler.esterel.Esterel.Variable");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop175;
                }
            } while (true);

            otherlv_3=(Token)match(input,18,FollowSets000.FOLLOW_29); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getEsterelVariableDeclarationAccess().getColonKeyword_2());
              		
            }
            // InternalSCEst.g:7413:3: ( (lv_type_4_0= ruleTypeIdentifier ) )
            // InternalSCEst.g:7414:4: (lv_type_4_0= ruleTypeIdentifier )
            {
            // InternalSCEst.g:7414:4: (lv_type_4_0= ruleTypeIdentifier )
            // InternalSCEst.g:7415:5: lv_type_4_0= ruleTypeIdentifier
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEsterelVariableDeclarationAccess().getTypeTypeIdentifierParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_type_4_0=ruleTypeIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEsterelVariableDeclarationRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_4_0,
              						"de.cau.cs.kieler.esterel.Esterel.TypeIdentifier");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEsterelVariableDeclaration"


    // $ANTLR start "entryRuleVariable"
    // InternalSCEst.g:7436:1: entryRuleVariable returns [EObject current=null] : iv_ruleVariable= ruleVariable EOF ;
    public final EObject entryRuleVariable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVariable = null;


        try {
            // InternalSCEst.g:7436:49: (iv_ruleVariable= ruleVariable EOF )
            // InternalSCEst.g:7437:2: iv_ruleVariable= ruleVariable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVariableRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleVariable=ruleVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVariable; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVariable"


    // $ANTLR start "ruleVariable"
    // InternalSCEst.g:7443:1: ruleVariable returns [EObject current=null] : ( ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= ':=' ( (lv_initialValue_2_0= ruleExpression ) ) )? ) ;
    public final EObject ruleVariable() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        EObject lv_initialValue_2_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:7449:2: ( ( ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= ':=' ( (lv_initialValue_2_0= ruleExpression ) ) )? ) )
            // InternalSCEst.g:7450:2: ( ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= ':=' ( (lv_initialValue_2_0= ruleExpression ) ) )? )
            {
            // InternalSCEst.g:7450:2: ( ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= ':=' ( (lv_initialValue_2_0= ruleExpression ) ) )? )
            // InternalSCEst.g:7451:3: ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= ':=' ( (lv_initialValue_2_0= ruleExpression ) ) )?
            {
            // InternalSCEst.g:7451:3: ( (lv_name_0_0= RULE_ID ) )
            // InternalSCEst.g:7452:4: (lv_name_0_0= RULE_ID )
            {
            // InternalSCEst.g:7452:4: (lv_name_0_0= RULE_ID )
            // InternalSCEst.g:7453:5: lv_name_0_0= RULE_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_119); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getVariableRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_0_0,
              						"de.cau.cs.kieler.annotations.Annotations.ID");
              				
            }

            }


            }

            // InternalSCEst.g:7469:3: (otherlv_1= ':=' ( (lv_initialValue_2_0= ruleExpression ) ) )?
            int alt176=2;
            int LA176_0 = input.LA(1);

            if ( (LA176_0==22) ) {
                alt176=1;
            }
            switch (alt176) {
                case 1 :
                    // InternalSCEst.g:7470:4: otherlv_1= ':=' ( (lv_initialValue_2_0= ruleExpression ) )
                    {
                    otherlv_1=(Token)match(input,22,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getVariableAccess().getColonEqualsSignKeyword_1_0());
                      			
                    }
                    // InternalSCEst.g:7474:4: ( (lv_initialValue_2_0= ruleExpression ) )
                    // InternalSCEst.g:7475:5: (lv_initialValue_2_0= ruleExpression )
                    {
                    // InternalSCEst.g:7475:5: (lv_initialValue_2_0= ruleExpression )
                    // InternalSCEst.g:7476:6: lv_initialValue_2_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getVariableAccess().getInitialValueExpressionParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_initialValue_2_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getVariableRule());
                      						}
                      						set(
                      							current,
                      							"initialValue",
                      							lv_initialValue_2_0,
                      							"de.cau.cs.kieler.esterel.Esterel.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVariable"


    // $ANTLR start "entryRuleRun"
    // InternalSCEst.g:7498:1: entryRuleRun returns [EObject current=null] : iv_ruleRun= ruleRun EOF ;
    public final EObject entryRuleRun() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRun = null;


        try {
            // InternalSCEst.g:7498:44: (iv_ruleRun= ruleRun EOF )
            // InternalSCEst.g:7499:2: iv_ruleRun= ruleRun EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRunRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRun=ruleRun();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRun; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRun"


    // $ANTLR start "ruleRun"
    // InternalSCEst.g:7505:1: ruleRun returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (otherlv_1= 'run' ( (lv_module_2_0= ruleModuleRenaming ) ) (otherlv_3= '[' ( (lv_renamings_4_0= ruleRenamings ) ) (otherlv_5= ';' ( (lv_renamings_6_0= ruleRenamings ) ) )* otherlv_7= ']' )? ) | (otherlv_8= 'copymodule' ( (lv_module_9_0= ruleModuleRenaming ) ) (otherlv_10= '[' ( (lv_renamings_11_0= ruleRenamings ) ) (otherlv_12= ';' ( (lv_renamings_13_0= ruleRenamings ) ) )* otherlv_14= ']' )? ) ) ) ;
    public final EObject ruleRun() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_module_2_0 = null;

        EObject lv_renamings_4_0 = null;

        EObject lv_renamings_6_0 = null;

        EObject lv_module_9_0 = null;

        EObject lv_renamings_11_0 = null;

        EObject lv_renamings_13_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:7511:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (otherlv_1= 'run' ( (lv_module_2_0= ruleModuleRenaming ) ) (otherlv_3= '[' ( (lv_renamings_4_0= ruleRenamings ) ) (otherlv_5= ';' ( (lv_renamings_6_0= ruleRenamings ) ) )* otherlv_7= ']' )? ) | (otherlv_8= 'copymodule' ( (lv_module_9_0= ruleModuleRenaming ) ) (otherlv_10= '[' ( (lv_renamings_11_0= ruleRenamings ) ) (otherlv_12= ';' ( (lv_renamings_13_0= ruleRenamings ) ) )* otherlv_14= ']' )? ) ) ) )
            // InternalSCEst.g:7512:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (otherlv_1= 'run' ( (lv_module_2_0= ruleModuleRenaming ) ) (otherlv_3= '[' ( (lv_renamings_4_0= ruleRenamings ) ) (otherlv_5= ';' ( (lv_renamings_6_0= ruleRenamings ) ) )* otherlv_7= ']' )? ) | (otherlv_8= 'copymodule' ( (lv_module_9_0= ruleModuleRenaming ) ) (otherlv_10= '[' ( (lv_renamings_11_0= ruleRenamings ) ) (otherlv_12= ';' ( (lv_renamings_13_0= ruleRenamings ) ) )* otherlv_14= ']' )? ) ) )
            {
            // InternalSCEst.g:7512:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (otherlv_1= 'run' ( (lv_module_2_0= ruleModuleRenaming ) ) (otherlv_3= '[' ( (lv_renamings_4_0= ruleRenamings ) ) (otherlv_5= ';' ( (lv_renamings_6_0= ruleRenamings ) ) )* otherlv_7= ']' )? ) | (otherlv_8= 'copymodule' ( (lv_module_9_0= ruleModuleRenaming ) ) (otherlv_10= '[' ( (lv_renamings_11_0= ruleRenamings ) ) (otherlv_12= ';' ( (lv_renamings_13_0= ruleRenamings ) ) )* otherlv_14= ']' )? ) ) )
            // InternalSCEst.g:7513:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (otherlv_1= 'run' ( (lv_module_2_0= ruleModuleRenaming ) ) (otherlv_3= '[' ( (lv_renamings_4_0= ruleRenamings ) ) (otherlv_5= ';' ( (lv_renamings_6_0= ruleRenamings ) ) )* otherlv_7= ']' )? ) | (otherlv_8= 'copymodule' ( (lv_module_9_0= ruleModuleRenaming ) ) (otherlv_10= '[' ( (lv_renamings_11_0= ruleRenamings ) ) (otherlv_12= ';' ( (lv_renamings_13_0= ruleRenamings ) ) )* otherlv_14= ']' )? ) )
            {
            // InternalSCEst.g:7513:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop177:
            do {
                int alt177=2;
                int LA177_0 = input.LA(1);

                if ( (LA177_0==RULE_COMMENT_ANNOTATION||LA177_0==128) ) {
                    alt177=1;
                }


                switch (alt177) {
            	case 1 :
            	    // InternalSCEst.g:7514:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:7514:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCEst.g:7515:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getRunAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_120);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getRunRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop177;
                }
            } while (true);

            // InternalSCEst.g:7532:3: ( (otherlv_1= 'run' ( (lv_module_2_0= ruleModuleRenaming ) ) (otherlv_3= '[' ( (lv_renamings_4_0= ruleRenamings ) ) (otherlv_5= ';' ( (lv_renamings_6_0= ruleRenamings ) ) )* otherlv_7= ']' )? ) | (otherlv_8= 'copymodule' ( (lv_module_9_0= ruleModuleRenaming ) ) (otherlv_10= '[' ( (lv_renamings_11_0= ruleRenamings ) ) (otherlv_12= ';' ( (lv_renamings_13_0= ruleRenamings ) ) )* otherlv_14= ']' )? ) )
            int alt182=2;
            int LA182_0 = input.LA(1);

            if ( (LA182_0==79) ) {
                alt182=1;
            }
            else if ( (LA182_0==80) ) {
                alt182=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 182, 0, input);

                throw nvae;
            }
            switch (alt182) {
                case 1 :
                    // InternalSCEst.g:7533:4: (otherlv_1= 'run' ( (lv_module_2_0= ruleModuleRenaming ) ) (otherlv_3= '[' ( (lv_renamings_4_0= ruleRenamings ) ) (otherlv_5= ';' ( (lv_renamings_6_0= ruleRenamings ) ) )* otherlv_7= ']' )? )
                    {
                    // InternalSCEst.g:7533:4: (otherlv_1= 'run' ( (lv_module_2_0= ruleModuleRenaming ) ) (otherlv_3= '[' ( (lv_renamings_4_0= ruleRenamings ) ) (otherlv_5= ';' ( (lv_renamings_6_0= ruleRenamings ) ) )* otherlv_7= ']' )? )
                    // InternalSCEst.g:7534:5: otherlv_1= 'run' ( (lv_module_2_0= ruleModuleRenaming ) ) (otherlv_3= '[' ( (lv_renamings_4_0= ruleRenamings ) ) (otherlv_5= ';' ( (lv_renamings_6_0= ruleRenamings ) ) )* otherlv_7= ']' )?
                    {
                    otherlv_1=(Token)match(input,79,FollowSets000.FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getRunAccess().getRunKeyword_1_0_0());
                      				
                    }
                    // InternalSCEst.g:7538:5: ( (lv_module_2_0= ruleModuleRenaming ) )
                    // InternalSCEst.g:7539:6: (lv_module_2_0= ruleModuleRenaming )
                    {
                    // InternalSCEst.g:7539:6: (lv_module_2_0= ruleModuleRenaming )
                    // InternalSCEst.g:7540:7: lv_module_2_0= ruleModuleRenaming
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRunAccess().getModuleModuleRenamingParserRuleCall_1_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_121);
                    lv_module_2_0=ruleModuleRenaming();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRunRule());
                      							}
                      							set(
                      								current,
                      								"module",
                      								lv_module_2_0,
                      								"de.cau.cs.kieler.esterel.Esterel.ModuleRenaming");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCEst.g:7557:5: (otherlv_3= '[' ( (lv_renamings_4_0= ruleRenamings ) ) (otherlv_5= ';' ( (lv_renamings_6_0= ruleRenamings ) ) )* otherlv_7= ']' )?
                    int alt179=2;
                    alt179 = dfa179.predict(input);
                    switch (alt179) {
                        case 1 :
                            // InternalSCEst.g:7558:6: otherlv_3= '[' ( (lv_renamings_4_0= ruleRenamings ) ) (otherlv_5= ';' ( (lv_renamings_6_0= ruleRenamings ) ) )* otherlv_7= ']'
                            {
                            otherlv_3=(Token)match(input,49,FollowSets000.FOLLOW_122); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_3, grammarAccess.getRunAccess().getLeftSquareBracketKeyword_1_0_2_0());
                              					
                            }
                            // InternalSCEst.g:7562:6: ( (lv_renamings_4_0= ruleRenamings ) )
                            // InternalSCEst.g:7563:7: (lv_renamings_4_0= ruleRenamings )
                            {
                            // InternalSCEst.g:7563:7: (lv_renamings_4_0= ruleRenamings )
                            // InternalSCEst.g:7564:8: lv_renamings_4_0= ruleRenamings
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getRunAccess().getRenamingsRenamingsParserRuleCall_1_0_2_1_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_123);
                            lv_renamings_4_0=ruleRenamings();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getRunRule());
                              								}
                              								add(
                              									current,
                              									"renamings",
                              									lv_renamings_4_0,
                              									"de.cau.cs.kieler.esterel.Esterel.Renamings");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalSCEst.g:7581:6: (otherlv_5= ';' ( (lv_renamings_6_0= ruleRenamings ) ) )*
                            loop178:
                            do {
                                int alt178=2;
                                int LA178_0 = input.LA(1);

                                if ( (LA178_0==21) ) {
                                    alt178=1;
                                }


                                switch (alt178) {
                            	case 1 :
                            	    // InternalSCEst.g:7582:7: otherlv_5= ';' ( (lv_renamings_6_0= ruleRenamings ) )
                            	    {
                            	    otherlv_5=(Token)match(input,21,FollowSets000.FOLLOW_122); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_5, grammarAccess.getRunAccess().getSemicolonKeyword_1_0_2_2_0());
                            	      						
                            	    }
                            	    // InternalSCEst.g:7586:7: ( (lv_renamings_6_0= ruleRenamings ) )
                            	    // InternalSCEst.g:7587:8: (lv_renamings_6_0= ruleRenamings )
                            	    {
                            	    // InternalSCEst.g:7587:8: (lv_renamings_6_0= ruleRenamings )
                            	    // InternalSCEst.g:7588:9: lv_renamings_6_0= ruleRenamings
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getRunAccess().getRenamingsRenamingsParserRuleCall_1_0_2_2_1_0());
                            	      								
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_123);
                            	    lv_renamings_6_0=ruleRenamings();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getRunRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"renamings",
                            	      										lv_renamings_6_0,
                            	      										"de.cau.cs.kieler.esterel.Esterel.Renamings");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop178;
                                }
                            } while (true);

                            otherlv_7=(Token)match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_7, grammarAccess.getRunAccess().getRightSquareBracketKeyword_1_0_2_3());
                              					
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCEst.g:7613:4: (otherlv_8= 'copymodule' ( (lv_module_9_0= ruleModuleRenaming ) ) (otherlv_10= '[' ( (lv_renamings_11_0= ruleRenamings ) ) (otherlv_12= ';' ( (lv_renamings_13_0= ruleRenamings ) ) )* otherlv_14= ']' )? )
                    {
                    // InternalSCEst.g:7613:4: (otherlv_8= 'copymodule' ( (lv_module_9_0= ruleModuleRenaming ) ) (otherlv_10= '[' ( (lv_renamings_11_0= ruleRenamings ) ) (otherlv_12= ';' ( (lv_renamings_13_0= ruleRenamings ) ) )* otherlv_14= ']' )? )
                    // InternalSCEst.g:7614:5: otherlv_8= 'copymodule' ( (lv_module_9_0= ruleModuleRenaming ) ) (otherlv_10= '[' ( (lv_renamings_11_0= ruleRenamings ) ) (otherlv_12= ';' ( (lv_renamings_13_0= ruleRenamings ) ) )* otherlv_14= ']' )?
                    {
                    otherlv_8=(Token)match(input,80,FollowSets000.FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_8, grammarAccess.getRunAccess().getCopymoduleKeyword_1_1_0());
                      				
                    }
                    // InternalSCEst.g:7618:5: ( (lv_module_9_0= ruleModuleRenaming ) )
                    // InternalSCEst.g:7619:6: (lv_module_9_0= ruleModuleRenaming )
                    {
                    // InternalSCEst.g:7619:6: (lv_module_9_0= ruleModuleRenaming )
                    // InternalSCEst.g:7620:7: lv_module_9_0= ruleModuleRenaming
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRunAccess().getModuleModuleRenamingParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_121);
                    lv_module_9_0=ruleModuleRenaming();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRunRule());
                      							}
                      							set(
                      								current,
                      								"module",
                      								lv_module_9_0,
                      								"de.cau.cs.kieler.esterel.Esterel.ModuleRenaming");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCEst.g:7637:5: (otherlv_10= '[' ( (lv_renamings_11_0= ruleRenamings ) ) (otherlv_12= ';' ( (lv_renamings_13_0= ruleRenamings ) ) )* otherlv_14= ']' )?
                    int alt181=2;
                    alt181 = dfa181.predict(input);
                    switch (alt181) {
                        case 1 :
                            // InternalSCEst.g:7638:6: otherlv_10= '[' ( (lv_renamings_11_0= ruleRenamings ) ) (otherlv_12= ';' ( (lv_renamings_13_0= ruleRenamings ) ) )* otherlv_14= ']'
                            {
                            otherlv_10=(Token)match(input,49,FollowSets000.FOLLOW_122); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_10, grammarAccess.getRunAccess().getLeftSquareBracketKeyword_1_1_2_0());
                              					
                            }
                            // InternalSCEst.g:7642:6: ( (lv_renamings_11_0= ruleRenamings ) )
                            // InternalSCEst.g:7643:7: (lv_renamings_11_0= ruleRenamings )
                            {
                            // InternalSCEst.g:7643:7: (lv_renamings_11_0= ruleRenamings )
                            // InternalSCEst.g:7644:8: lv_renamings_11_0= ruleRenamings
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getRunAccess().getRenamingsRenamingsParserRuleCall_1_1_2_1_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_123);
                            lv_renamings_11_0=ruleRenamings();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getRunRule());
                              								}
                              								add(
                              									current,
                              									"renamings",
                              									lv_renamings_11_0,
                              									"de.cau.cs.kieler.esterel.Esterel.Renamings");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalSCEst.g:7661:6: (otherlv_12= ';' ( (lv_renamings_13_0= ruleRenamings ) ) )*
                            loop180:
                            do {
                                int alt180=2;
                                int LA180_0 = input.LA(1);

                                if ( (LA180_0==21) ) {
                                    alt180=1;
                                }


                                switch (alt180) {
                            	case 1 :
                            	    // InternalSCEst.g:7662:7: otherlv_12= ';' ( (lv_renamings_13_0= ruleRenamings ) )
                            	    {
                            	    otherlv_12=(Token)match(input,21,FollowSets000.FOLLOW_122); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_12, grammarAccess.getRunAccess().getSemicolonKeyword_1_1_2_2_0());
                            	      						
                            	    }
                            	    // InternalSCEst.g:7666:7: ( (lv_renamings_13_0= ruleRenamings ) )
                            	    // InternalSCEst.g:7667:8: (lv_renamings_13_0= ruleRenamings )
                            	    {
                            	    // InternalSCEst.g:7667:8: (lv_renamings_13_0= ruleRenamings )
                            	    // InternalSCEst.g:7668:9: lv_renamings_13_0= ruleRenamings
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getRunAccess().getRenamingsRenamingsParserRuleCall_1_1_2_2_1_0());
                            	      								
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_123);
                            	    lv_renamings_13_0=ruleRenamings();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getRunRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"renamings",
                            	      										lv_renamings_13_0,
                            	      										"de.cau.cs.kieler.esterel.Esterel.Renamings");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop180;
                                }
                            } while (true);

                            otherlv_14=(Token)match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_14, grammarAccess.getRunAccess().getRightSquareBracketKeyword_1_1_2_3());
                              					
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRun"


    // $ANTLR start "entryRuleModuleRenaming"
    // InternalSCEst.g:7697:1: entryRuleModuleRenaming returns [EObject current=null] : iv_ruleModuleRenaming= ruleModuleRenaming EOF ;
    public final EObject entryRuleModuleRenaming() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModuleRenaming = null;


        try {
            // InternalSCEst.g:7697:55: (iv_ruleModuleRenaming= ruleModuleRenaming EOF )
            // InternalSCEst.g:7698:2: iv_ruleModuleRenaming= ruleModuleRenaming EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModuleRenamingRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleModuleRenaming=ruleModuleRenaming();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModuleRenaming; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModuleRenaming"


    // $ANTLR start "ruleModuleRenaming"
    // InternalSCEst.g:7704:1: ruleModuleRenaming returns [EObject current=null] : ( ( (otherlv_0= RULE_ID ) ) | ( ( (lv_newName_1_0= RULE_ID ) ) otherlv_2= '/' ( (otherlv_3= RULE_ID ) ) ) ) ;
    public final EObject ruleModuleRenaming() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_newName_1_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;


        	enterRule();

        try {
            // InternalSCEst.g:7710:2: ( ( ( (otherlv_0= RULE_ID ) ) | ( ( (lv_newName_1_0= RULE_ID ) ) otherlv_2= '/' ( (otherlv_3= RULE_ID ) ) ) ) )
            // InternalSCEst.g:7711:2: ( ( (otherlv_0= RULE_ID ) ) | ( ( (lv_newName_1_0= RULE_ID ) ) otherlv_2= '/' ( (otherlv_3= RULE_ID ) ) ) )
            {
            // InternalSCEst.g:7711:2: ( ( (otherlv_0= RULE_ID ) ) | ( ( (lv_newName_1_0= RULE_ID ) ) otherlv_2= '/' ( (otherlv_3= RULE_ID ) ) ) )
            int alt183=2;
            int LA183_0 = input.LA(1);

            if ( (LA183_0==RULE_ID) ) {
                int LA183_1 = input.LA(2);

                if ( (LA183_1==81) ) {
                    alt183=2;
                }
                else if ( (LA183_1==EOF||LA183_1==RULE_ID||LA183_1==RULE_COMMENT_ANNOTATION||(LA183_1>=19 && LA183_1<=21)||(LA183_1>=23 && LA183_1<=24)||(LA183_1>=45 && LA183_1<=54)||(LA183_1>=56 && LA183_1<=64)||(LA183_1>=66 && LA183_1<=72)||(LA183_1>=74 && LA183_1<=80)||(LA183_1>=94 && LA183_1<=95)||LA183_1==100||(LA183_1>=102 && LA183_1<=106)||LA183_1==128) ) {
                    alt183=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 183, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 183, 0, input);

                throw nvae;
            }
            switch (alt183) {
                case 1 :
                    // InternalSCEst.g:7712:3: ( (otherlv_0= RULE_ID ) )
                    {
                    // InternalSCEst.g:7712:3: ( (otherlv_0= RULE_ID ) )
                    // InternalSCEst.g:7713:4: (otherlv_0= RULE_ID )
                    {
                    // InternalSCEst.g:7713:4: (otherlv_0= RULE_ID )
                    // InternalSCEst.g:7714:5: otherlv_0= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getModuleRenamingRule());
                      					}
                      				
                    }
                    otherlv_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_0, grammarAccess.getModuleRenamingAccess().getModuleModuleCrossReference_0_0());
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCEst.g:7729:3: ( ( (lv_newName_1_0= RULE_ID ) ) otherlv_2= '/' ( (otherlv_3= RULE_ID ) ) )
                    {
                    // InternalSCEst.g:7729:3: ( ( (lv_newName_1_0= RULE_ID ) ) otherlv_2= '/' ( (otherlv_3= RULE_ID ) ) )
                    // InternalSCEst.g:7730:4: ( (lv_newName_1_0= RULE_ID ) ) otherlv_2= '/' ( (otherlv_3= RULE_ID ) )
                    {
                    // InternalSCEst.g:7730:4: ( (lv_newName_1_0= RULE_ID ) )
                    // InternalSCEst.g:7731:5: (lv_newName_1_0= RULE_ID )
                    {
                    // InternalSCEst.g:7731:5: (lv_newName_1_0= RULE_ID )
                    // InternalSCEst.g:7732:6: lv_newName_1_0= RULE_ID
                    {
                    lv_newName_1_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_124); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_newName_1_0, grammarAccess.getModuleRenamingAccess().getNewNameIDTerminalRuleCall_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getModuleRenamingRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"newName",
                      							lv_newName_1_0,
                      							"de.cau.cs.kieler.annotations.Annotations.ID");
                      					
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,81,FollowSets000.FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getModuleRenamingAccess().getSolidusKeyword_1_1());
                      			
                    }
                    // InternalSCEst.g:7752:4: ( (otherlv_3= RULE_ID ) )
                    // InternalSCEst.g:7753:5: (otherlv_3= RULE_ID )
                    {
                    // InternalSCEst.g:7753:5: (otherlv_3= RULE_ID )
                    // InternalSCEst.g:7754:6: otherlv_3= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      						/* */
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getModuleRenamingRule());
                      						}
                      					
                    }
                    otherlv_3=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_3, grammarAccess.getModuleRenamingAccess().getModuleModuleCrossReference_1_2_0());
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModuleRenaming"


    // $ANTLR start "entryRuleRenamings"
    // InternalSCEst.g:7773:1: entryRuleRenamings returns [EObject current=null] : iv_ruleRenamings= ruleRenamings EOF ;
    public final EObject entryRuleRenamings() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRenamings = null;


        try {
            // InternalSCEst.g:7773:50: (iv_ruleRenamings= ruleRenamings EOF )
            // InternalSCEst.g:7774:2: iv_ruleRenamings= ruleRenamings EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRenamingsRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRenamings=ruleRenamings();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRenamings; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRenamings"


    // $ANTLR start "ruleRenamings"
    // InternalSCEst.g:7780:1: ruleRenamings returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (otherlv_1= 'type' ( (lv_renamings_2_0= ruleTypeRenaming ) ) (otherlv_3= ',' ( (lv_renamings_4_0= ruleTypeRenaming ) ) )* ) | (otherlv_5= 'constant' ( (lv_renamings_6_0= ruleConstantRenaming ) ) (otherlv_7= ',' ( (lv_renamings_8_0= ruleConstantRenaming ) ) )* ) | (otherlv_9= 'function' ( (lv_renamings_10_0= ruleFunctionRenaming ) ) (otherlv_11= ',' ( (lv_renamings_12_0= ruleFunctionRenaming ) ) )* ) | (otherlv_13= 'procedure' ( (lv_renamings_14_0= ruleProcedureRenaming ) ) (otherlv_15= ',' ( (lv_renamings_16_0= ruleProcedureRenaming ) ) )* ) | (otherlv_17= 'task' ( (lv_renamings_18_0= ruleTaskRenaming ) ) (otherlv_19= ',' ( (lv_renamings_20_0= ruleTaskRenaming ) ) )* ) | (otherlv_21= 'signal' ( (lv_renamings_22_0= ruleSignalRenaming ) ) (otherlv_23= ',' ( (lv_renamings_24_0= ruleSignalRenaming ) ) )* ) ) ) ;
    public final EObject ruleRenamings() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_renamings_2_0 = null;

        EObject lv_renamings_4_0 = null;

        EObject lv_renamings_6_0 = null;

        EObject lv_renamings_8_0 = null;

        EObject lv_renamings_10_0 = null;

        EObject lv_renamings_12_0 = null;

        EObject lv_renamings_14_0 = null;

        EObject lv_renamings_16_0 = null;

        EObject lv_renamings_18_0 = null;

        EObject lv_renamings_20_0 = null;

        EObject lv_renamings_22_0 = null;

        EObject lv_renamings_24_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:7786:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (otherlv_1= 'type' ( (lv_renamings_2_0= ruleTypeRenaming ) ) (otherlv_3= ',' ( (lv_renamings_4_0= ruleTypeRenaming ) ) )* ) | (otherlv_5= 'constant' ( (lv_renamings_6_0= ruleConstantRenaming ) ) (otherlv_7= ',' ( (lv_renamings_8_0= ruleConstantRenaming ) ) )* ) | (otherlv_9= 'function' ( (lv_renamings_10_0= ruleFunctionRenaming ) ) (otherlv_11= ',' ( (lv_renamings_12_0= ruleFunctionRenaming ) ) )* ) | (otherlv_13= 'procedure' ( (lv_renamings_14_0= ruleProcedureRenaming ) ) (otherlv_15= ',' ( (lv_renamings_16_0= ruleProcedureRenaming ) ) )* ) | (otherlv_17= 'task' ( (lv_renamings_18_0= ruleTaskRenaming ) ) (otherlv_19= ',' ( (lv_renamings_20_0= ruleTaskRenaming ) ) )* ) | (otherlv_21= 'signal' ( (lv_renamings_22_0= ruleSignalRenaming ) ) (otherlv_23= ',' ( (lv_renamings_24_0= ruleSignalRenaming ) ) )* ) ) ) )
            // InternalSCEst.g:7787:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (otherlv_1= 'type' ( (lv_renamings_2_0= ruleTypeRenaming ) ) (otherlv_3= ',' ( (lv_renamings_4_0= ruleTypeRenaming ) ) )* ) | (otherlv_5= 'constant' ( (lv_renamings_6_0= ruleConstantRenaming ) ) (otherlv_7= ',' ( (lv_renamings_8_0= ruleConstantRenaming ) ) )* ) | (otherlv_9= 'function' ( (lv_renamings_10_0= ruleFunctionRenaming ) ) (otherlv_11= ',' ( (lv_renamings_12_0= ruleFunctionRenaming ) ) )* ) | (otherlv_13= 'procedure' ( (lv_renamings_14_0= ruleProcedureRenaming ) ) (otherlv_15= ',' ( (lv_renamings_16_0= ruleProcedureRenaming ) ) )* ) | (otherlv_17= 'task' ( (lv_renamings_18_0= ruleTaskRenaming ) ) (otherlv_19= ',' ( (lv_renamings_20_0= ruleTaskRenaming ) ) )* ) | (otherlv_21= 'signal' ( (lv_renamings_22_0= ruleSignalRenaming ) ) (otherlv_23= ',' ( (lv_renamings_24_0= ruleSignalRenaming ) ) )* ) ) )
            {
            // InternalSCEst.g:7787:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (otherlv_1= 'type' ( (lv_renamings_2_0= ruleTypeRenaming ) ) (otherlv_3= ',' ( (lv_renamings_4_0= ruleTypeRenaming ) ) )* ) | (otherlv_5= 'constant' ( (lv_renamings_6_0= ruleConstantRenaming ) ) (otherlv_7= ',' ( (lv_renamings_8_0= ruleConstantRenaming ) ) )* ) | (otherlv_9= 'function' ( (lv_renamings_10_0= ruleFunctionRenaming ) ) (otherlv_11= ',' ( (lv_renamings_12_0= ruleFunctionRenaming ) ) )* ) | (otherlv_13= 'procedure' ( (lv_renamings_14_0= ruleProcedureRenaming ) ) (otherlv_15= ',' ( (lv_renamings_16_0= ruleProcedureRenaming ) ) )* ) | (otherlv_17= 'task' ( (lv_renamings_18_0= ruleTaskRenaming ) ) (otherlv_19= ',' ( (lv_renamings_20_0= ruleTaskRenaming ) ) )* ) | (otherlv_21= 'signal' ( (lv_renamings_22_0= ruleSignalRenaming ) ) (otherlv_23= ',' ( (lv_renamings_24_0= ruleSignalRenaming ) ) )* ) ) )
            // InternalSCEst.g:7788:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (otherlv_1= 'type' ( (lv_renamings_2_0= ruleTypeRenaming ) ) (otherlv_3= ',' ( (lv_renamings_4_0= ruleTypeRenaming ) ) )* ) | (otherlv_5= 'constant' ( (lv_renamings_6_0= ruleConstantRenaming ) ) (otherlv_7= ',' ( (lv_renamings_8_0= ruleConstantRenaming ) ) )* ) | (otherlv_9= 'function' ( (lv_renamings_10_0= ruleFunctionRenaming ) ) (otherlv_11= ',' ( (lv_renamings_12_0= ruleFunctionRenaming ) ) )* ) | (otherlv_13= 'procedure' ( (lv_renamings_14_0= ruleProcedureRenaming ) ) (otherlv_15= ',' ( (lv_renamings_16_0= ruleProcedureRenaming ) ) )* ) | (otherlv_17= 'task' ( (lv_renamings_18_0= ruleTaskRenaming ) ) (otherlv_19= ',' ( (lv_renamings_20_0= ruleTaskRenaming ) ) )* ) | (otherlv_21= 'signal' ( (lv_renamings_22_0= ruleSignalRenaming ) ) (otherlv_23= ',' ( (lv_renamings_24_0= ruleSignalRenaming ) ) )* ) )
            {
            // InternalSCEst.g:7788:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop184:
            do {
                int alt184=2;
                int LA184_0 = input.LA(1);

                if ( (LA184_0==RULE_COMMENT_ANNOTATION||LA184_0==128) ) {
                    alt184=1;
                }


                switch (alt184) {
            	case 1 :
            	    // InternalSCEst.g:7789:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:7789:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCEst.g:7790:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getRenamingsAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_122);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getRenamingsRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop184;
                }
            } while (true);

            // InternalSCEst.g:7807:3: ( (otherlv_1= 'type' ( (lv_renamings_2_0= ruleTypeRenaming ) ) (otherlv_3= ',' ( (lv_renamings_4_0= ruleTypeRenaming ) ) )* ) | (otherlv_5= 'constant' ( (lv_renamings_6_0= ruleConstantRenaming ) ) (otherlv_7= ',' ( (lv_renamings_8_0= ruleConstantRenaming ) ) )* ) | (otherlv_9= 'function' ( (lv_renamings_10_0= ruleFunctionRenaming ) ) (otherlv_11= ',' ( (lv_renamings_12_0= ruleFunctionRenaming ) ) )* ) | (otherlv_13= 'procedure' ( (lv_renamings_14_0= ruleProcedureRenaming ) ) (otherlv_15= ',' ( (lv_renamings_16_0= ruleProcedureRenaming ) ) )* ) | (otherlv_17= 'task' ( (lv_renamings_18_0= ruleTaskRenaming ) ) (otherlv_19= ',' ( (lv_renamings_20_0= ruleTaskRenaming ) ) )* ) | (otherlv_21= 'signal' ( (lv_renamings_22_0= ruleSignalRenaming ) ) (otherlv_23= ',' ( (lv_renamings_24_0= ruleSignalRenaming ) ) )* ) )
            int alt191=6;
            switch ( input.LA(1) ) {
            case 29:
                {
                alt191=1;
                }
                break;
            case 31:
                {
                alt191=2;
                }
                break;
            case 33:
                {
                alt191=3;
                }
                break;
            case 35:
                {
                alt191=4;
                }
                break;
            case 36:
                {
                alt191=5;
                }
                break;
            case 77:
                {
                alt191=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 191, 0, input);

                throw nvae;
            }

            switch (alt191) {
                case 1 :
                    // InternalSCEst.g:7808:4: (otherlv_1= 'type' ( (lv_renamings_2_0= ruleTypeRenaming ) ) (otherlv_3= ',' ( (lv_renamings_4_0= ruleTypeRenaming ) ) )* )
                    {
                    // InternalSCEst.g:7808:4: (otherlv_1= 'type' ( (lv_renamings_2_0= ruleTypeRenaming ) ) (otherlv_3= ',' ( (lv_renamings_4_0= ruleTypeRenaming ) ) )* )
                    // InternalSCEst.g:7809:5: otherlv_1= 'type' ( (lv_renamings_2_0= ruleTypeRenaming ) ) (otherlv_3= ',' ( (lv_renamings_4_0= ruleTypeRenaming ) ) )*
                    {
                    otherlv_1=(Token)match(input,29,FollowSets000.FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getRenamingsAccess().getTypeKeyword_1_0_0());
                      				
                    }
                    // InternalSCEst.g:7813:5: ( (lv_renamings_2_0= ruleTypeRenaming ) )
                    // InternalSCEst.g:7814:6: (lv_renamings_2_0= ruleTypeRenaming )
                    {
                    // InternalSCEst.g:7814:6: (lv_renamings_2_0= ruleTypeRenaming )
                    // InternalSCEst.g:7815:7: lv_renamings_2_0= ruleTypeRenaming
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRenamingsAccess().getRenamingsTypeRenamingParserRuleCall_1_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_125);
                    lv_renamings_2_0=ruleTypeRenaming();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRenamingsRule());
                      							}
                      							add(
                      								current,
                      								"renamings",
                      								lv_renamings_2_0,
                      								"de.cau.cs.kieler.esterel.Esterel.TypeRenaming");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCEst.g:7832:5: (otherlv_3= ',' ( (lv_renamings_4_0= ruleTypeRenaming ) ) )*
                    loop185:
                    do {
                        int alt185=2;
                        int LA185_0 = input.LA(1);

                        if ( (LA185_0==30) ) {
                            alt185=1;
                        }


                        switch (alt185) {
                    	case 1 :
                    	    // InternalSCEst.g:7833:6: otherlv_3= ',' ( (lv_renamings_4_0= ruleTypeRenaming ) )
                    	    {
                    	    otherlv_3=(Token)match(input,30,FollowSets000.FOLLOW_22); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_3, grammarAccess.getRenamingsAccess().getCommaKeyword_1_0_2_0());
                    	      					
                    	    }
                    	    // InternalSCEst.g:7837:6: ( (lv_renamings_4_0= ruleTypeRenaming ) )
                    	    // InternalSCEst.g:7838:7: (lv_renamings_4_0= ruleTypeRenaming )
                    	    {
                    	    // InternalSCEst.g:7838:7: (lv_renamings_4_0= ruleTypeRenaming )
                    	    // InternalSCEst.g:7839:8: lv_renamings_4_0= ruleTypeRenaming
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getRenamingsAccess().getRenamingsTypeRenamingParserRuleCall_1_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_125);
                    	    lv_renamings_4_0=ruleTypeRenaming();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getRenamingsRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"renamings",
                    	      									lv_renamings_4_0,
                    	      									"de.cau.cs.kieler.esterel.Esterel.TypeRenaming");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop185;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalSCEst.g:7859:4: (otherlv_5= 'constant' ( (lv_renamings_6_0= ruleConstantRenaming ) ) (otherlv_7= ',' ( (lv_renamings_8_0= ruleConstantRenaming ) ) )* )
                    {
                    // InternalSCEst.g:7859:4: (otherlv_5= 'constant' ( (lv_renamings_6_0= ruleConstantRenaming ) ) (otherlv_7= ',' ( (lv_renamings_8_0= ruleConstantRenaming ) ) )* )
                    // InternalSCEst.g:7860:5: otherlv_5= 'constant' ( (lv_renamings_6_0= ruleConstantRenaming ) ) (otherlv_7= ',' ( (lv_renamings_8_0= ruleConstantRenaming ) ) )*
                    {
                    otherlv_5=(Token)match(input,31,FollowSets000.FOLLOW_126); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getRenamingsAccess().getConstantKeyword_1_1_0());
                      				
                    }
                    // InternalSCEst.g:7864:5: ( (lv_renamings_6_0= ruleConstantRenaming ) )
                    // InternalSCEst.g:7865:6: (lv_renamings_6_0= ruleConstantRenaming )
                    {
                    // InternalSCEst.g:7865:6: (lv_renamings_6_0= ruleConstantRenaming )
                    // InternalSCEst.g:7866:7: lv_renamings_6_0= ruleConstantRenaming
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRenamingsAccess().getRenamingsConstantRenamingParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_125);
                    lv_renamings_6_0=ruleConstantRenaming();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRenamingsRule());
                      							}
                      							add(
                      								current,
                      								"renamings",
                      								lv_renamings_6_0,
                      								"de.cau.cs.kieler.esterel.Esterel.ConstantRenaming");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCEst.g:7883:5: (otherlv_7= ',' ( (lv_renamings_8_0= ruleConstantRenaming ) ) )*
                    loop186:
                    do {
                        int alt186=2;
                        int LA186_0 = input.LA(1);

                        if ( (LA186_0==30) ) {
                            alt186=1;
                        }


                        switch (alt186) {
                    	case 1 :
                    	    // InternalSCEst.g:7884:6: otherlv_7= ',' ( (lv_renamings_8_0= ruleConstantRenaming ) )
                    	    {
                    	    otherlv_7=(Token)match(input,30,FollowSets000.FOLLOW_126); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_7, grammarAccess.getRenamingsAccess().getCommaKeyword_1_1_2_0());
                    	      					
                    	    }
                    	    // InternalSCEst.g:7888:6: ( (lv_renamings_8_0= ruleConstantRenaming ) )
                    	    // InternalSCEst.g:7889:7: (lv_renamings_8_0= ruleConstantRenaming )
                    	    {
                    	    // InternalSCEst.g:7889:7: (lv_renamings_8_0= ruleConstantRenaming )
                    	    // InternalSCEst.g:7890:8: lv_renamings_8_0= ruleConstantRenaming
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getRenamingsAccess().getRenamingsConstantRenamingParserRuleCall_1_1_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_125);
                    	    lv_renamings_8_0=ruleConstantRenaming();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getRenamingsRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"renamings",
                    	      									lv_renamings_8_0,
                    	      									"de.cau.cs.kieler.esterel.Esterel.ConstantRenaming");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop186;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 3 :
                    // InternalSCEst.g:7910:4: (otherlv_9= 'function' ( (lv_renamings_10_0= ruleFunctionRenaming ) ) (otherlv_11= ',' ( (lv_renamings_12_0= ruleFunctionRenaming ) ) )* )
                    {
                    // InternalSCEst.g:7910:4: (otherlv_9= 'function' ( (lv_renamings_10_0= ruleFunctionRenaming ) ) (otherlv_11= ',' ( (lv_renamings_12_0= ruleFunctionRenaming ) ) )* )
                    // InternalSCEst.g:7911:5: otherlv_9= 'function' ( (lv_renamings_10_0= ruleFunctionRenaming ) ) (otherlv_11= ',' ( (lv_renamings_12_0= ruleFunctionRenaming ) ) )*
                    {
                    otherlv_9=(Token)match(input,33,FollowSets000.FOLLOW_127); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_9, grammarAccess.getRenamingsAccess().getFunctionKeyword_1_2_0());
                      				
                    }
                    // InternalSCEst.g:7915:5: ( (lv_renamings_10_0= ruleFunctionRenaming ) )
                    // InternalSCEst.g:7916:6: (lv_renamings_10_0= ruleFunctionRenaming )
                    {
                    // InternalSCEst.g:7916:6: (lv_renamings_10_0= ruleFunctionRenaming )
                    // InternalSCEst.g:7917:7: lv_renamings_10_0= ruleFunctionRenaming
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRenamingsAccess().getRenamingsFunctionRenamingParserRuleCall_1_2_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_125);
                    lv_renamings_10_0=ruleFunctionRenaming();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRenamingsRule());
                      							}
                      							add(
                      								current,
                      								"renamings",
                      								lv_renamings_10_0,
                      								"de.cau.cs.kieler.esterel.Esterel.FunctionRenaming");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCEst.g:7934:5: (otherlv_11= ',' ( (lv_renamings_12_0= ruleFunctionRenaming ) ) )*
                    loop187:
                    do {
                        int alt187=2;
                        int LA187_0 = input.LA(1);

                        if ( (LA187_0==30) ) {
                            alt187=1;
                        }


                        switch (alt187) {
                    	case 1 :
                    	    // InternalSCEst.g:7935:6: otherlv_11= ',' ( (lv_renamings_12_0= ruleFunctionRenaming ) )
                    	    {
                    	    otherlv_11=(Token)match(input,30,FollowSets000.FOLLOW_127); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_11, grammarAccess.getRenamingsAccess().getCommaKeyword_1_2_2_0());
                    	      					
                    	    }
                    	    // InternalSCEst.g:7939:6: ( (lv_renamings_12_0= ruleFunctionRenaming ) )
                    	    // InternalSCEst.g:7940:7: (lv_renamings_12_0= ruleFunctionRenaming )
                    	    {
                    	    // InternalSCEst.g:7940:7: (lv_renamings_12_0= ruleFunctionRenaming )
                    	    // InternalSCEst.g:7941:8: lv_renamings_12_0= ruleFunctionRenaming
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getRenamingsAccess().getRenamingsFunctionRenamingParserRuleCall_1_2_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_125);
                    	    lv_renamings_12_0=ruleFunctionRenaming();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getRenamingsRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"renamings",
                    	      									lv_renamings_12_0,
                    	      									"de.cau.cs.kieler.esterel.Esterel.FunctionRenaming");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop187;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 4 :
                    // InternalSCEst.g:7961:4: (otherlv_13= 'procedure' ( (lv_renamings_14_0= ruleProcedureRenaming ) ) (otherlv_15= ',' ( (lv_renamings_16_0= ruleProcedureRenaming ) ) )* )
                    {
                    // InternalSCEst.g:7961:4: (otherlv_13= 'procedure' ( (lv_renamings_14_0= ruleProcedureRenaming ) ) (otherlv_15= ',' ( (lv_renamings_16_0= ruleProcedureRenaming ) ) )* )
                    // InternalSCEst.g:7962:5: otherlv_13= 'procedure' ( (lv_renamings_14_0= ruleProcedureRenaming ) ) (otherlv_15= ',' ( (lv_renamings_16_0= ruleProcedureRenaming ) ) )*
                    {
                    otherlv_13=(Token)match(input,35,FollowSets000.FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_13, grammarAccess.getRenamingsAccess().getProcedureKeyword_1_3_0());
                      				
                    }
                    // InternalSCEst.g:7966:5: ( (lv_renamings_14_0= ruleProcedureRenaming ) )
                    // InternalSCEst.g:7967:6: (lv_renamings_14_0= ruleProcedureRenaming )
                    {
                    // InternalSCEst.g:7967:6: (lv_renamings_14_0= ruleProcedureRenaming )
                    // InternalSCEst.g:7968:7: lv_renamings_14_0= ruleProcedureRenaming
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRenamingsAccess().getRenamingsProcedureRenamingParserRuleCall_1_3_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_125);
                    lv_renamings_14_0=ruleProcedureRenaming();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRenamingsRule());
                      							}
                      							add(
                      								current,
                      								"renamings",
                      								lv_renamings_14_0,
                      								"de.cau.cs.kieler.esterel.Esterel.ProcedureRenaming");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCEst.g:7985:5: (otherlv_15= ',' ( (lv_renamings_16_0= ruleProcedureRenaming ) ) )*
                    loop188:
                    do {
                        int alt188=2;
                        int LA188_0 = input.LA(1);

                        if ( (LA188_0==30) ) {
                            alt188=1;
                        }


                        switch (alt188) {
                    	case 1 :
                    	    // InternalSCEst.g:7986:6: otherlv_15= ',' ( (lv_renamings_16_0= ruleProcedureRenaming ) )
                    	    {
                    	    otherlv_15=(Token)match(input,30,FollowSets000.FOLLOW_6); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_15, grammarAccess.getRenamingsAccess().getCommaKeyword_1_3_2_0());
                    	      					
                    	    }
                    	    // InternalSCEst.g:7990:6: ( (lv_renamings_16_0= ruleProcedureRenaming ) )
                    	    // InternalSCEst.g:7991:7: (lv_renamings_16_0= ruleProcedureRenaming )
                    	    {
                    	    // InternalSCEst.g:7991:7: (lv_renamings_16_0= ruleProcedureRenaming )
                    	    // InternalSCEst.g:7992:8: lv_renamings_16_0= ruleProcedureRenaming
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getRenamingsAccess().getRenamingsProcedureRenamingParserRuleCall_1_3_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_125);
                    	    lv_renamings_16_0=ruleProcedureRenaming();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getRenamingsRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"renamings",
                    	      									lv_renamings_16_0,
                    	      									"de.cau.cs.kieler.esterel.Esterel.ProcedureRenaming");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop188;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 5 :
                    // InternalSCEst.g:8012:4: (otherlv_17= 'task' ( (lv_renamings_18_0= ruleTaskRenaming ) ) (otherlv_19= ',' ( (lv_renamings_20_0= ruleTaskRenaming ) ) )* )
                    {
                    // InternalSCEst.g:8012:4: (otherlv_17= 'task' ( (lv_renamings_18_0= ruleTaskRenaming ) ) (otherlv_19= ',' ( (lv_renamings_20_0= ruleTaskRenaming ) ) )* )
                    // InternalSCEst.g:8013:5: otherlv_17= 'task' ( (lv_renamings_18_0= ruleTaskRenaming ) ) (otherlv_19= ',' ( (lv_renamings_20_0= ruleTaskRenaming ) ) )*
                    {
                    otherlv_17=(Token)match(input,36,FollowSets000.FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_17, grammarAccess.getRenamingsAccess().getTaskKeyword_1_4_0());
                      				
                    }
                    // InternalSCEst.g:8017:5: ( (lv_renamings_18_0= ruleTaskRenaming ) )
                    // InternalSCEst.g:8018:6: (lv_renamings_18_0= ruleTaskRenaming )
                    {
                    // InternalSCEst.g:8018:6: (lv_renamings_18_0= ruleTaskRenaming )
                    // InternalSCEst.g:8019:7: lv_renamings_18_0= ruleTaskRenaming
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRenamingsAccess().getRenamingsTaskRenamingParserRuleCall_1_4_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_125);
                    lv_renamings_18_0=ruleTaskRenaming();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRenamingsRule());
                      							}
                      							add(
                      								current,
                      								"renamings",
                      								lv_renamings_18_0,
                      								"de.cau.cs.kieler.esterel.Esterel.TaskRenaming");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCEst.g:8036:5: (otherlv_19= ',' ( (lv_renamings_20_0= ruleTaskRenaming ) ) )*
                    loop189:
                    do {
                        int alt189=2;
                        int LA189_0 = input.LA(1);

                        if ( (LA189_0==30) ) {
                            alt189=1;
                        }


                        switch (alt189) {
                    	case 1 :
                    	    // InternalSCEst.g:8037:6: otherlv_19= ',' ( (lv_renamings_20_0= ruleTaskRenaming ) )
                    	    {
                    	    otherlv_19=(Token)match(input,30,FollowSets000.FOLLOW_6); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_19, grammarAccess.getRenamingsAccess().getCommaKeyword_1_4_2_0());
                    	      					
                    	    }
                    	    // InternalSCEst.g:8041:6: ( (lv_renamings_20_0= ruleTaskRenaming ) )
                    	    // InternalSCEst.g:8042:7: (lv_renamings_20_0= ruleTaskRenaming )
                    	    {
                    	    // InternalSCEst.g:8042:7: (lv_renamings_20_0= ruleTaskRenaming )
                    	    // InternalSCEst.g:8043:8: lv_renamings_20_0= ruleTaskRenaming
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getRenamingsAccess().getRenamingsTaskRenamingParserRuleCall_1_4_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_125);
                    	    lv_renamings_20_0=ruleTaskRenaming();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getRenamingsRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"renamings",
                    	      									lv_renamings_20_0,
                    	      									"de.cau.cs.kieler.esterel.Esterel.TaskRenaming");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop189;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 6 :
                    // InternalSCEst.g:8063:4: (otherlv_21= 'signal' ( (lv_renamings_22_0= ruleSignalRenaming ) ) (otherlv_23= ',' ( (lv_renamings_24_0= ruleSignalRenaming ) ) )* )
                    {
                    // InternalSCEst.g:8063:4: (otherlv_21= 'signal' ( (lv_renamings_22_0= ruleSignalRenaming ) ) (otherlv_23= ',' ( (lv_renamings_24_0= ruleSignalRenaming ) ) )* )
                    // InternalSCEst.g:8064:5: otherlv_21= 'signal' ( (lv_renamings_22_0= ruleSignalRenaming ) ) (otherlv_23= ',' ( (lv_renamings_24_0= ruleSignalRenaming ) ) )*
                    {
                    otherlv_21=(Token)match(input,77,FollowSets000.FOLLOW_128); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_21, grammarAccess.getRenamingsAccess().getSignalKeyword_1_5_0());
                      				
                    }
                    // InternalSCEst.g:8068:5: ( (lv_renamings_22_0= ruleSignalRenaming ) )
                    // InternalSCEst.g:8069:6: (lv_renamings_22_0= ruleSignalRenaming )
                    {
                    // InternalSCEst.g:8069:6: (lv_renamings_22_0= ruleSignalRenaming )
                    // InternalSCEst.g:8070:7: lv_renamings_22_0= ruleSignalRenaming
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRenamingsAccess().getRenamingsSignalRenamingParserRuleCall_1_5_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_125);
                    lv_renamings_22_0=ruleSignalRenaming();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRenamingsRule());
                      							}
                      							add(
                      								current,
                      								"renamings",
                      								lv_renamings_22_0,
                      								"de.cau.cs.kieler.esterel.Esterel.SignalRenaming");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCEst.g:8087:5: (otherlv_23= ',' ( (lv_renamings_24_0= ruleSignalRenaming ) ) )*
                    loop190:
                    do {
                        int alt190=2;
                        int LA190_0 = input.LA(1);

                        if ( (LA190_0==30) ) {
                            alt190=1;
                        }


                        switch (alt190) {
                    	case 1 :
                    	    // InternalSCEst.g:8088:6: otherlv_23= ',' ( (lv_renamings_24_0= ruleSignalRenaming ) )
                    	    {
                    	    otherlv_23=(Token)match(input,30,FollowSets000.FOLLOW_128); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_23, grammarAccess.getRenamingsAccess().getCommaKeyword_1_5_2_0());
                    	      					
                    	    }
                    	    // InternalSCEst.g:8092:6: ( (lv_renamings_24_0= ruleSignalRenaming ) )
                    	    // InternalSCEst.g:8093:7: (lv_renamings_24_0= ruleSignalRenaming )
                    	    {
                    	    // InternalSCEst.g:8093:7: (lv_renamings_24_0= ruleSignalRenaming )
                    	    // InternalSCEst.g:8094:8: lv_renamings_24_0= ruleSignalRenaming
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getRenamingsAccess().getRenamingsSignalRenamingParserRuleCall_1_5_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_125);
                    	    lv_renamings_24_0=ruleSignalRenaming();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getRenamingsRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"renamings",
                    	      									lv_renamings_24_0,
                    	      									"de.cau.cs.kieler.esterel.Esterel.SignalRenaming");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop190;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRenamings"


    // $ANTLR start "entryRuleTypeRenaming"
    // InternalSCEst.g:8118:1: entryRuleTypeRenaming returns [EObject current=null] : iv_ruleTypeRenaming= ruleTypeRenaming EOF ;
    public final EObject entryRuleTypeRenaming() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeRenaming = null;


        try {
            // InternalSCEst.g:8118:53: (iv_ruleTypeRenaming= ruleTypeRenaming EOF )
            // InternalSCEst.g:8119:2: iv_ruleTypeRenaming= ruleTypeRenaming EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeRenamingRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypeRenaming=ruleTypeRenaming();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeRenaming; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeRenaming"


    // $ANTLR start "ruleTypeRenaming"
    // InternalSCEst.g:8125:1: ruleTypeRenaming returns [EObject current=null] : ( ( ( (otherlv_0= RULE_ID ) ) | ( (lv_newType_1_0= ruleEsterelValueType ) ) ) otherlv_2= '/' ( (otherlv_3= RULE_ID ) ) ) ;
    public final EObject ruleTypeRenaming() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Enumerator lv_newType_1_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:8131:2: ( ( ( ( (otherlv_0= RULE_ID ) ) | ( (lv_newType_1_0= ruleEsterelValueType ) ) ) otherlv_2= '/' ( (otherlv_3= RULE_ID ) ) ) )
            // InternalSCEst.g:8132:2: ( ( ( (otherlv_0= RULE_ID ) ) | ( (lv_newType_1_0= ruleEsterelValueType ) ) ) otherlv_2= '/' ( (otherlv_3= RULE_ID ) ) )
            {
            // InternalSCEst.g:8132:2: ( ( ( (otherlv_0= RULE_ID ) ) | ( (lv_newType_1_0= ruleEsterelValueType ) ) ) otherlv_2= '/' ( (otherlv_3= RULE_ID ) ) )
            // InternalSCEst.g:8133:3: ( ( (otherlv_0= RULE_ID ) ) | ( (lv_newType_1_0= ruleEsterelValueType ) ) ) otherlv_2= '/' ( (otherlv_3= RULE_ID ) )
            {
            // InternalSCEst.g:8133:3: ( ( (otherlv_0= RULE_ID ) ) | ( (lv_newType_1_0= ruleEsterelValueType ) ) )
            int alt192=2;
            int LA192_0 = input.LA(1);

            if ( (LA192_0==RULE_ID) ) {
                alt192=1;
            }
            else if ( ((LA192_0>=131 && LA192_0<=138)) ) {
                alt192=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 192, 0, input);

                throw nvae;
            }
            switch (alt192) {
                case 1 :
                    // InternalSCEst.g:8134:4: ( (otherlv_0= RULE_ID ) )
                    {
                    // InternalSCEst.g:8134:4: ( (otherlv_0= RULE_ID ) )
                    // InternalSCEst.g:8135:5: (otherlv_0= RULE_ID )
                    {
                    // InternalSCEst.g:8135:5: (otherlv_0= RULE_ID )
                    // InternalSCEst.g:8136:6: otherlv_0= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      						/* */
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getTypeRenamingRule());
                      						}
                      					
                    }
                    otherlv_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_124); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_0, grammarAccess.getTypeRenamingAccess().getNewNameTypeDefinitionCrossReference_0_0_0());
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCEst.g:8151:4: ( (lv_newType_1_0= ruleEsterelValueType ) )
                    {
                    // InternalSCEst.g:8151:4: ( (lv_newType_1_0= ruleEsterelValueType ) )
                    // InternalSCEst.g:8152:5: (lv_newType_1_0= ruleEsterelValueType )
                    {
                    // InternalSCEst.g:8152:5: (lv_newType_1_0= ruleEsterelValueType )
                    // InternalSCEst.g:8153:6: lv_newType_1_0= ruleEsterelValueType
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeRenamingAccess().getNewTypeEsterelValueTypeEnumRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_124);
                    lv_newType_1_0=ruleEsterelValueType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeRenamingRule());
                      						}
                      						set(
                      							current,
                      							"newType",
                      							lv_newType_1_0,
                      							"de.cau.cs.kieler.esterel.Esterel.EsterelValueType");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,81,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getTypeRenamingAccess().getSolidusKeyword_1());
              		
            }
            // InternalSCEst.g:8175:3: ( (otherlv_3= RULE_ID ) )
            // InternalSCEst.g:8176:4: (otherlv_3= RULE_ID )
            {
            // InternalSCEst.g:8176:4: (otherlv_3= RULE_ID )
            // InternalSCEst.g:8177:5: otherlv_3= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getTypeRenamingRule());
              					}
              				
            }
            otherlv_3=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_3, grammarAccess.getTypeRenamingAccess().getOldNameTypeDefinitionCrossReference_2_0());
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeRenaming"


    // $ANTLR start "entryRuleConstantRenaming"
    // InternalSCEst.g:8195:1: entryRuleConstantRenaming returns [EObject current=null] : iv_ruleConstantRenaming= ruleConstantRenaming EOF ;
    public final EObject entryRuleConstantRenaming() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConstantRenaming = null;


        try {
            // InternalSCEst.g:8195:57: (iv_ruleConstantRenaming= ruleConstantRenaming EOF )
            // InternalSCEst.g:8196:2: iv_ruleConstantRenaming= ruleConstantRenaming EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConstantRenamingRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleConstantRenaming=ruleConstantRenaming();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConstantRenaming; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConstantRenaming"


    // $ANTLR start "ruleConstantRenaming"
    // InternalSCEst.g:8202:1: ruleConstantRenaming returns [EObject current=null] : ( ( ( (otherlv_0= RULE_ID ) ) | ( (lv_newValue_1_0= ruleAnyValue ) ) ) otherlv_2= '/' ( (otherlv_3= RULE_ID ) ) ) ;
    public final EObject ruleConstantRenaming() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        EObject lv_newValue_1_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:8208:2: ( ( ( ( (otherlv_0= RULE_ID ) ) | ( (lv_newValue_1_0= ruleAnyValue ) ) ) otherlv_2= '/' ( (otherlv_3= RULE_ID ) ) ) )
            // InternalSCEst.g:8209:2: ( ( ( (otherlv_0= RULE_ID ) ) | ( (lv_newValue_1_0= ruleAnyValue ) ) ) otherlv_2= '/' ( (otherlv_3= RULE_ID ) ) )
            {
            // InternalSCEst.g:8209:2: ( ( ( (otherlv_0= RULE_ID ) ) | ( (lv_newValue_1_0= ruleAnyValue ) ) ) otherlv_2= '/' ( (otherlv_3= RULE_ID ) ) )
            // InternalSCEst.g:8210:3: ( ( (otherlv_0= RULE_ID ) ) | ( (lv_newValue_1_0= ruleAnyValue ) ) ) otherlv_2= '/' ( (otherlv_3= RULE_ID ) )
            {
            // InternalSCEst.g:8210:3: ( ( (otherlv_0= RULE_ID ) ) | ( (lv_newValue_1_0= ruleAnyValue ) ) )
            int alt193=2;
            int LA193_0 = input.LA(1);

            if ( (LA193_0==RULE_ID) ) {
                alt193=1;
            }
            else if ( (LA193_0==RULE_STRING||(LA193_0>=RULE_INT && LA193_0<=RULE_BOOLEAN)) ) {
                alt193=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 193, 0, input);

                throw nvae;
            }
            switch (alt193) {
                case 1 :
                    // InternalSCEst.g:8211:4: ( (otherlv_0= RULE_ID ) )
                    {
                    // InternalSCEst.g:8211:4: ( (otherlv_0= RULE_ID ) )
                    // InternalSCEst.g:8212:5: (otherlv_0= RULE_ID )
                    {
                    // InternalSCEst.g:8212:5: (otherlv_0= RULE_ID )
                    // InternalSCEst.g:8213:6: otherlv_0= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      						/* */
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConstantRenamingRule());
                      						}
                      					
                    }
                    otherlv_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_124); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_0, grammarAccess.getConstantRenamingAccess().getNewNameConstantCrossReference_0_0_0());
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCEst.g:8228:4: ( (lv_newValue_1_0= ruleAnyValue ) )
                    {
                    // InternalSCEst.g:8228:4: ( (lv_newValue_1_0= ruleAnyValue ) )
                    // InternalSCEst.g:8229:5: (lv_newValue_1_0= ruleAnyValue )
                    {
                    // InternalSCEst.g:8229:5: (lv_newValue_1_0= ruleAnyValue )
                    // InternalSCEst.g:8230:6: lv_newValue_1_0= ruleAnyValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConstantRenamingAccess().getNewValueAnyValueParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_124);
                    lv_newValue_1_0=ruleAnyValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConstantRenamingRule());
                      						}
                      						set(
                      							current,
                      							"newValue",
                      							lv_newValue_1_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.AnyValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,81,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getConstantRenamingAccess().getSolidusKeyword_1());
              		
            }
            // InternalSCEst.g:8252:3: ( (otherlv_3= RULE_ID ) )
            // InternalSCEst.g:8253:4: (otherlv_3= RULE_ID )
            {
            // InternalSCEst.g:8253:4: (otherlv_3= RULE_ID )
            // InternalSCEst.g:8254:5: otherlv_3= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getConstantRenamingRule());
              					}
              				
            }
            otherlv_3=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_3, grammarAccess.getConstantRenamingAccess().getOldNameConstantCrossReference_2_0());
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConstantRenaming"


    // $ANTLR start "entryRuleFunctionRenaming"
    // InternalSCEst.g:8272:1: entryRuleFunctionRenaming returns [EObject current=null] : iv_ruleFunctionRenaming= ruleFunctionRenaming EOF ;
    public final EObject entryRuleFunctionRenaming() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionRenaming = null;


        try {
            // InternalSCEst.g:8272:57: (iv_ruleFunctionRenaming= ruleFunctionRenaming EOF )
            // InternalSCEst.g:8273:2: iv_ruleFunctionRenaming= ruleFunctionRenaming EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionRenamingRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFunctionRenaming=ruleFunctionRenaming();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionRenaming; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionRenaming"


    // $ANTLR start "ruleFunctionRenaming"
    // InternalSCEst.g:8279:1: ruleFunctionRenaming returns [EObject current=null] : ( ( ( (otherlv_0= RULE_ID ) ) | ( (lv_newFunc_1_0= ruleBuildInFunction ) ) ) otherlv_2= '/' ( (otherlv_3= RULE_ID ) ) ) ;
    public final EObject ruleFunctionRenaming() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_newFunc_1_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:8285:2: ( ( ( ( (otherlv_0= RULE_ID ) ) | ( (lv_newFunc_1_0= ruleBuildInFunction ) ) ) otherlv_2= '/' ( (otherlv_3= RULE_ID ) ) ) )
            // InternalSCEst.g:8286:2: ( ( ( (otherlv_0= RULE_ID ) ) | ( (lv_newFunc_1_0= ruleBuildInFunction ) ) ) otherlv_2= '/' ( (otherlv_3= RULE_ID ) ) )
            {
            // InternalSCEst.g:8286:2: ( ( ( (otherlv_0= RULE_ID ) ) | ( (lv_newFunc_1_0= ruleBuildInFunction ) ) ) otherlv_2= '/' ( (otherlv_3= RULE_ID ) ) )
            // InternalSCEst.g:8287:3: ( ( (otherlv_0= RULE_ID ) ) | ( (lv_newFunc_1_0= ruleBuildInFunction ) ) ) otherlv_2= '/' ( (otherlv_3= RULE_ID ) )
            {
            // InternalSCEst.g:8287:3: ( ( (otherlv_0= RULE_ID ) ) | ( (lv_newFunc_1_0= ruleBuildInFunction ) ) )
            int alt194=2;
            int LA194_0 = input.LA(1);

            if ( (LA194_0==RULE_ID) ) {
                alt194=1;
            }
            else if ( (LA194_0==32||(LA194_0>=81 && LA194_0<=93)) ) {
                alt194=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 194, 0, input);

                throw nvae;
            }
            switch (alt194) {
                case 1 :
                    // InternalSCEst.g:8288:4: ( (otherlv_0= RULE_ID ) )
                    {
                    // InternalSCEst.g:8288:4: ( (otherlv_0= RULE_ID ) )
                    // InternalSCEst.g:8289:5: (otherlv_0= RULE_ID )
                    {
                    // InternalSCEst.g:8289:5: (otherlv_0= RULE_ID )
                    // InternalSCEst.g:8290:6: otherlv_0= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      						/* */
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFunctionRenamingRule());
                      						}
                      					
                    }
                    otherlv_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_124); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_0, grammarAccess.getFunctionRenamingAccess().getNewNameFunctionCrossReference_0_0_0());
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCEst.g:8305:4: ( (lv_newFunc_1_0= ruleBuildInFunction ) )
                    {
                    // InternalSCEst.g:8305:4: ( (lv_newFunc_1_0= ruleBuildInFunction ) )
                    // InternalSCEst.g:8306:5: (lv_newFunc_1_0= ruleBuildInFunction )
                    {
                    // InternalSCEst.g:8306:5: (lv_newFunc_1_0= ruleBuildInFunction )
                    // InternalSCEst.g:8307:6: lv_newFunc_1_0= ruleBuildInFunction
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFunctionRenamingAccess().getNewFuncBuildInFunctionParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_124);
                    lv_newFunc_1_0=ruleBuildInFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFunctionRenamingRule());
                      						}
                      						set(
                      							current,
                      							"newFunc",
                      							lv_newFunc_1_0,
                      							"de.cau.cs.kieler.esterel.Esterel.BuildInFunction");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,81,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getFunctionRenamingAccess().getSolidusKeyword_1());
              		
            }
            // InternalSCEst.g:8329:3: ( (otherlv_3= RULE_ID ) )
            // InternalSCEst.g:8330:4: (otherlv_3= RULE_ID )
            {
            // InternalSCEst.g:8330:4: (otherlv_3= RULE_ID )
            // InternalSCEst.g:8331:5: otherlv_3= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getFunctionRenamingRule());
              					}
              				
            }
            otherlv_3=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_3, grammarAccess.getFunctionRenamingAccess().getOldNameFunctionCrossReference_2_0());
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionRenaming"


    // $ANTLR start "entryRuleProcedureRenaming"
    // InternalSCEst.g:8349:1: entryRuleProcedureRenaming returns [EObject current=null] : iv_ruleProcedureRenaming= ruleProcedureRenaming EOF ;
    public final EObject entryRuleProcedureRenaming() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleProcedureRenaming = null;


        try {
            // InternalSCEst.g:8349:58: (iv_ruleProcedureRenaming= ruleProcedureRenaming EOF )
            // InternalSCEst.g:8350:2: iv_ruleProcedureRenaming= ruleProcedureRenaming EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getProcedureRenamingRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleProcedureRenaming=ruleProcedureRenaming();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleProcedureRenaming; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleProcedureRenaming"


    // $ANTLR start "ruleProcedureRenaming"
    // InternalSCEst.g:8356:1: ruleProcedureRenaming returns [EObject current=null] : ( ( (otherlv_0= RULE_ID ) ) otherlv_1= '/' ( (otherlv_2= RULE_ID ) ) ) ;
    public final EObject ruleProcedureRenaming() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;


        	enterRule();

        try {
            // InternalSCEst.g:8362:2: ( ( ( (otherlv_0= RULE_ID ) ) otherlv_1= '/' ( (otherlv_2= RULE_ID ) ) ) )
            // InternalSCEst.g:8363:2: ( ( (otherlv_0= RULE_ID ) ) otherlv_1= '/' ( (otherlv_2= RULE_ID ) ) )
            {
            // InternalSCEst.g:8363:2: ( ( (otherlv_0= RULE_ID ) ) otherlv_1= '/' ( (otherlv_2= RULE_ID ) ) )
            // InternalSCEst.g:8364:3: ( (otherlv_0= RULE_ID ) ) otherlv_1= '/' ( (otherlv_2= RULE_ID ) )
            {
            // InternalSCEst.g:8364:3: ( (otherlv_0= RULE_ID ) )
            // InternalSCEst.g:8365:4: (otherlv_0= RULE_ID )
            {
            // InternalSCEst.g:8365:4: (otherlv_0= RULE_ID )
            // InternalSCEst.g:8366:5: otherlv_0= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getProcedureRenamingRule());
              					}
              				
            }
            otherlv_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_124); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_0, grammarAccess.getProcedureRenamingAccess().getNewNameProcedureCrossReference_0_0());
              				
            }

            }


            }

            otherlv_1=(Token)match(input,81,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getProcedureRenamingAccess().getSolidusKeyword_1());
              		
            }
            // InternalSCEst.g:8384:3: ( (otherlv_2= RULE_ID ) )
            // InternalSCEst.g:8385:4: (otherlv_2= RULE_ID )
            {
            // InternalSCEst.g:8385:4: (otherlv_2= RULE_ID )
            // InternalSCEst.g:8386:5: otherlv_2= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getProcedureRenamingRule());
              					}
              				
            }
            otherlv_2=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_2, grammarAccess.getProcedureRenamingAccess().getOldNameProcedureCrossReference_2_0());
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleProcedureRenaming"


    // $ANTLR start "entryRuleTaskRenaming"
    // InternalSCEst.g:8404:1: entryRuleTaskRenaming returns [EObject current=null] : iv_ruleTaskRenaming= ruleTaskRenaming EOF ;
    public final EObject entryRuleTaskRenaming() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTaskRenaming = null;


        try {
            // InternalSCEst.g:8404:53: (iv_ruleTaskRenaming= ruleTaskRenaming EOF )
            // InternalSCEst.g:8405:2: iv_ruleTaskRenaming= ruleTaskRenaming EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTaskRenamingRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTaskRenaming=ruleTaskRenaming();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTaskRenaming; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTaskRenaming"


    // $ANTLR start "ruleTaskRenaming"
    // InternalSCEst.g:8411:1: ruleTaskRenaming returns [EObject current=null] : ( ( (otherlv_0= RULE_ID ) ) otherlv_1= '/' ( (otherlv_2= RULE_ID ) ) ) ;
    public final EObject ruleTaskRenaming() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;


        	enterRule();

        try {
            // InternalSCEst.g:8417:2: ( ( ( (otherlv_0= RULE_ID ) ) otherlv_1= '/' ( (otherlv_2= RULE_ID ) ) ) )
            // InternalSCEst.g:8418:2: ( ( (otherlv_0= RULE_ID ) ) otherlv_1= '/' ( (otherlv_2= RULE_ID ) ) )
            {
            // InternalSCEst.g:8418:2: ( ( (otherlv_0= RULE_ID ) ) otherlv_1= '/' ( (otherlv_2= RULE_ID ) ) )
            // InternalSCEst.g:8419:3: ( (otherlv_0= RULE_ID ) ) otherlv_1= '/' ( (otherlv_2= RULE_ID ) )
            {
            // InternalSCEst.g:8419:3: ( (otherlv_0= RULE_ID ) )
            // InternalSCEst.g:8420:4: (otherlv_0= RULE_ID )
            {
            // InternalSCEst.g:8420:4: (otherlv_0= RULE_ID )
            // InternalSCEst.g:8421:5: otherlv_0= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getTaskRenamingRule());
              					}
              				
            }
            otherlv_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_124); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_0, grammarAccess.getTaskRenamingAccess().getNewNameTaskCrossReference_0_0());
              				
            }

            }


            }

            otherlv_1=(Token)match(input,81,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getTaskRenamingAccess().getSolidusKeyword_1());
              		
            }
            // InternalSCEst.g:8439:3: ( (otherlv_2= RULE_ID ) )
            // InternalSCEst.g:8440:4: (otherlv_2= RULE_ID )
            {
            // InternalSCEst.g:8440:4: (otherlv_2= RULE_ID )
            // InternalSCEst.g:8441:5: otherlv_2= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getTaskRenamingRule());
              					}
              				
            }
            otherlv_2=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_2, grammarAccess.getTaskRenamingAccess().getOldNameTaskCrossReference_2_0());
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTaskRenaming"


    // $ANTLR start "entryRuleSignalRenaming"
    // InternalSCEst.g:8459:1: entryRuleSignalRenaming returns [EObject current=null] : iv_ruleSignalRenaming= ruleSignalRenaming EOF ;
    public final EObject entryRuleSignalRenaming() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSignalRenaming = null;


        try {
            // InternalSCEst.g:8459:55: (iv_ruleSignalRenaming= ruleSignalRenaming EOF )
            // InternalSCEst.g:8460:2: iv_ruleSignalRenaming= ruleSignalRenaming EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSignalRenamingRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSignalRenaming=ruleSignalRenaming();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSignalRenaming; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSignalRenaming"


    // $ANTLR start "ruleSignalRenaming"
    // InternalSCEst.g:8466:1: ruleSignalRenaming returns [EObject current=null] : ( ( (lv_newName_0_0= ruleSignalOrTickReferenceExpression ) ) otherlv_1= '/' ( (lv_oldName_2_0= ruleSignalOrTickReferenceExpression ) ) ) ;
    public final EObject ruleSignalRenaming() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_newName_0_0 = null;

        EObject lv_oldName_2_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:8472:2: ( ( ( (lv_newName_0_0= ruleSignalOrTickReferenceExpression ) ) otherlv_1= '/' ( (lv_oldName_2_0= ruleSignalOrTickReferenceExpression ) ) ) )
            // InternalSCEst.g:8473:2: ( ( (lv_newName_0_0= ruleSignalOrTickReferenceExpression ) ) otherlv_1= '/' ( (lv_oldName_2_0= ruleSignalOrTickReferenceExpression ) ) )
            {
            // InternalSCEst.g:8473:2: ( ( (lv_newName_0_0= ruleSignalOrTickReferenceExpression ) ) otherlv_1= '/' ( (lv_oldName_2_0= ruleSignalOrTickReferenceExpression ) ) )
            // InternalSCEst.g:8474:3: ( (lv_newName_0_0= ruleSignalOrTickReferenceExpression ) ) otherlv_1= '/' ( (lv_oldName_2_0= ruleSignalOrTickReferenceExpression ) )
            {
            // InternalSCEst.g:8474:3: ( (lv_newName_0_0= ruleSignalOrTickReferenceExpression ) )
            // InternalSCEst.g:8475:4: (lv_newName_0_0= ruleSignalOrTickReferenceExpression )
            {
            // InternalSCEst.g:8475:4: (lv_newName_0_0= ruleSignalOrTickReferenceExpression )
            // InternalSCEst.g:8476:5: lv_newName_0_0= ruleSignalOrTickReferenceExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSignalRenamingAccess().getNewNameSignalOrTickReferenceExpressionParserRuleCall_0_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_124);
            lv_newName_0_0=ruleSignalOrTickReferenceExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSignalRenamingRule());
              					}
              					set(
              						current,
              						"newName",
              						lv_newName_0_0,
              						"de.cau.cs.kieler.esterel.Esterel.SignalOrTickReferenceExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,81,FollowSets000.FOLLOW_128); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSignalRenamingAccess().getSolidusKeyword_1());
              		
            }
            // InternalSCEst.g:8497:3: ( (lv_oldName_2_0= ruleSignalOrTickReferenceExpression ) )
            // InternalSCEst.g:8498:4: (lv_oldName_2_0= ruleSignalOrTickReferenceExpression )
            {
            // InternalSCEst.g:8498:4: (lv_oldName_2_0= ruleSignalOrTickReferenceExpression )
            // InternalSCEst.g:8499:5: lv_oldName_2_0= ruleSignalOrTickReferenceExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSignalRenamingAccess().getOldNameSignalOrTickReferenceExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_oldName_2_0=ruleSignalOrTickReferenceExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSignalRenamingRule());
              					}
              					set(
              						current,
              						"oldName",
              						lv_oldName_2_0,
              						"de.cau.cs.kieler.esterel.Esterel.SignalOrTickReferenceExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSignalRenaming"


    // $ANTLR start "entryRuleBuildInFunction"
    // InternalSCEst.g:8520:1: entryRuleBuildInFunction returns [String current=null] : iv_ruleBuildInFunction= ruleBuildInFunction EOF ;
    public final String entryRuleBuildInFunction() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleBuildInFunction = null;


        try {
            // InternalSCEst.g:8520:55: (iv_ruleBuildInFunction= ruleBuildInFunction EOF )
            // InternalSCEst.g:8521:2: iv_ruleBuildInFunction= ruleBuildInFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBuildInFunctionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBuildInFunction=ruleBuildInFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBuildInFunction.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBuildInFunction"


    // $ANTLR start "ruleBuildInFunction"
    // InternalSCEst.g:8527:1: ruleBuildInFunction returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '*' | kw= '/' | kw= '+' | kw= '-' | kw= 'mod' | kw= '=' | kw= '<>' | kw= '>' | kw= '<' | kw= '<=' | kw= '>=' | kw= 'not' | kw= 'and' | kw= 'or' ) ;
    public final AntlrDatatypeRuleToken ruleBuildInFunction() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalSCEst.g:8533:2: ( (kw= '*' | kw= '/' | kw= '+' | kw= '-' | kw= 'mod' | kw= '=' | kw= '<>' | kw= '>' | kw= '<' | kw= '<=' | kw= '>=' | kw= 'not' | kw= 'and' | kw= 'or' ) )
            // InternalSCEst.g:8534:2: (kw= '*' | kw= '/' | kw= '+' | kw= '-' | kw= 'mod' | kw= '=' | kw= '<>' | kw= '>' | kw= '<' | kw= '<=' | kw= '>=' | kw= 'not' | kw= 'and' | kw= 'or' )
            {
            // InternalSCEst.g:8534:2: (kw= '*' | kw= '/' | kw= '+' | kw= '-' | kw= 'mod' | kw= '=' | kw= '<>' | kw= '>' | kw= '<' | kw= '<=' | kw= '>=' | kw= 'not' | kw= 'and' | kw= 'or' )
            int alt195=14;
            switch ( input.LA(1) ) {
            case 82:
                {
                alt195=1;
                }
                break;
            case 81:
                {
                alt195=2;
                }
                break;
            case 83:
                {
                alt195=3;
                }
                break;
            case 84:
                {
                alt195=4;
                }
                break;
            case 85:
                {
                alt195=5;
                }
                break;
            case 32:
                {
                alt195=6;
                }
                break;
            case 86:
                {
                alt195=7;
                }
                break;
            case 87:
                {
                alt195=8;
                }
                break;
            case 88:
                {
                alt195=9;
                }
                break;
            case 89:
                {
                alt195=10;
                }
                break;
            case 90:
                {
                alt195=11;
                }
                break;
            case 91:
                {
                alt195=12;
                }
                break;
            case 92:
                {
                alt195=13;
                }
                break;
            case 93:
                {
                alt195=14;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 195, 0, input);

                throw nvae;
            }

            switch (alt195) {
                case 1 :
                    // InternalSCEst.g:8535:3: kw= '*'
                    {
                    kw=(Token)match(input,82,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getBuildInFunctionAccess().getAsteriskKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCEst.g:8541:3: kw= '/'
                    {
                    kw=(Token)match(input,81,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getBuildInFunctionAccess().getSolidusKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCEst.g:8547:3: kw= '+'
                    {
                    kw=(Token)match(input,83,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getBuildInFunctionAccess().getPlusSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSCEst.g:8553:3: kw= '-'
                    {
                    kw=(Token)match(input,84,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getBuildInFunctionAccess().getHyphenMinusKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalSCEst.g:8559:3: kw= 'mod'
                    {
                    kw=(Token)match(input,85,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getBuildInFunctionAccess().getModKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalSCEst.g:8565:3: kw= '='
                    {
                    kw=(Token)match(input,32,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getBuildInFunctionAccess().getEqualsSignKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalSCEst.g:8571:3: kw= '<>'
                    {
                    kw=(Token)match(input,86,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getBuildInFunctionAccess().getLessThanSignGreaterThanSignKeyword_6());
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalSCEst.g:8577:3: kw= '>'
                    {
                    kw=(Token)match(input,87,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getBuildInFunctionAccess().getGreaterThanSignKeyword_7());
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalSCEst.g:8583:3: kw= '<'
                    {
                    kw=(Token)match(input,88,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getBuildInFunctionAccess().getLessThanSignKeyword_8());
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalSCEst.g:8589:3: kw= '<='
                    {
                    kw=(Token)match(input,89,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getBuildInFunctionAccess().getLessThanSignEqualsSignKeyword_9());
                      		
                    }

                    }
                    break;
                case 11 :
                    // InternalSCEst.g:8595:3: kw= '>='
                    {
                    kw=(Token)match(input,90,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getBuildInFunctionAccess().getGreaterThanSignEqualsSignKeyword_10());
                      		
                    }

                    }
                    break;
                case 12 :
                    // InternalSCEst.g:8601:3: kw= 'not'
                    {
                    kw=(Token)match(input,91,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getBuildInFunctionAccess().getNotKeyword_11());
                      		
                    }

                    }
                    break;
                case 13 :
                    // InternalSCEst.g:8607:3: kw= 'and'
                    {
                    kw=(Token)match(input,92,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getBuildInFunctionAccess().getAndKeyword_12());
                      		
                    }

                    }
                    break;
                case 14 :
                    // InternalSCEst.g:8613:3: kw= 'or'
                    {
                    kw=(Token)match(input,93,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getBuildInFunctionAccess().getOrKeyword_13());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBuildInFunction"


    // $ANTLR start "entryRuleLegacyDo"
    // InternalSCEst.g:8622:1: entryRuleLegacyDo returns [EObject current=null] : iv_ruleLegacyDo= ruleLegacyDo EOF ;
    public final EObject entryRuleLegacyDo() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLegacyDo = null;


        try {
            // InternalSCEst.g:8622:49: (iv_ruleLegacyDo= ruleLegacyDo EOF )
            // InternalSCEst.g:8623:2: iv_ruleLegacyDo= ruleLegacyDo EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLegacyDoRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLegacyDo=ruleLegacyDo();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLegacyDo; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLegacyDo"


    // $ANTLR start "ruleLegacyDo"
    // InternalSCEst.g:8629:1: ruleLegacyDo returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'do' ( (lv_statements_2_0= ruleEsterelParallel ) ) ( (otherlv_3= 'upto' ( (lv_delay_4_0= ruleDelayExpression ) ) ) | (otherlv_5= 'watching' ( (lv_watching_6_0= ruleDelayExpression ) ) (otherlv_7= 'timeout' ( (lv_watchingStatements_8_0= ruleEsterelParallel ) ) otherlv_9= 'end' (otherlv_10= 'timeout' )? )? ) ) ) ;
    public final EObject ruleLegacyDo() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_statements_2_0 = null;

        EObject lv_delay_4_0 = null;

        EObject lv_watching_6_0 = null;

        EObject lv_watchingStatements_8_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:8635:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'do' ( (lv_statements_2_0= ruleEsterelParallel ) ) ( (otherlv_3= 'upto' ( (lv_delay_4_0= ruleDelayExpression ) ) ) | (otherlv_5= 'watching' ( (lv_watching_6_0= ruleDelayExpression ) ) (otherlv_7= 'timeout' ( (lv_watchingStatements_8_0= ruleEsterelParallel ) ) otherlv_9= 'end' (otherlv_10= 'timeout' )? )? ) ) ) )
            // InternalSCEst.g:8636:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'do' ( (lv_statements_2_0= ruleEsterelParallel ) ) ( (otherlv_3= 'upto' ( (lv_delay_4_0= ruleDelayExpression ) ) ) | (otherlv_5= 'watching' ( (lv_watching_6_0= ruleDelayExpression ) ) (otherlv_7= 'timeout' ( (lv_watchingStatements_8_0= ruleEsterelParallel ) ) otherlv_9= 'end' (otherlv_10= 'timeout' )? )? ) ) )
            {
            // InternalSCEst.g:8636:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'do' ( (lv_statements_2_0= ruleEsterelParallel ) ) ( (otherlv_3= 'upto' ( (lv_delay_4_0= ruleDelayExpression ) ) ) | (otherlv_5= 'watching' ( (lv_watching_6_0= ruleDelayExpression ) ) (otherlv_7= 'timeout' ( (lv_watchingStatements_8_0= ruleEsterelParallel ) ) otherlv_9= 'end' (otherlv_10= 'timeout' )? )? ) ) )
            // InternalSCEst.g:8637:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'do' ( (lv_statements_2_0= ruleEsterelParallel ) ) ( (otherlv_3= 'upto' ( (lv_delay_4_0= ruleDelayExpression ) ) ) | (otherlv_5= 'watching' ( (lv_watching_6_0= ruleDelayExpression ) ) (otherlv_7= 'timeout' ( (lv_watchingStatements_8_0= ruleEsterelParallel ) ) otherlv_9= 'end' (otherlv_10= 'timeout' )? )? ) )
            {
            // InternalSCEst.g:8637:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop196:
            do {
                int alt196=2;
                int LA196_0 = input.LA(1);

                if ( (LA196_0==RULE_COMMENT_ANNOTATION||LA196_0==128) ) {
                    alt196=1;
                }


                switch (alt196) {
            	case 1 :
            	    // InternalSCEst.g:8638:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:8638:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCEst.g:8639:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getLegacyDoAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_129);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getLegacyDoRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop196;
                }
            } while (true);

            otherlv_1=(Token)match(input,58,FollowSets000.FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getLegacyDoAccess().getDoKeyword_1());
              		
            }
            // InternalSCEst.g:8660:3: ( (lv_statements_2_0= ruleEsterelParallel ) )
            // InternalSCEst.g:8661:4: (lv_statements_2_0= ruleEsterelParallel )
            {
            // InternalSCEst.g:8661:4: (lv_statements_2_0= ruleEsterelParallel )
            // InternalSCEst.g:8662:5: lv_statements_2_0= ruleEsterelParallel
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLegacyDoAccess().getStatementsEsterelParallelParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_130);
            lv_statements_2_0=ruleEsterelParallel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLegacyDoRule());
              					}
              					add(
              						current,
              						"statements",
              						lv_statements_2_0,
              						"de.cau.cs.kieler.esterel.Esterel.EsterelParallel");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCEst.g:8679:3: ( (otherlv_3= 'upto' ( (lv_delay_4_0= ruleDelayExpression ) ) ) | (otherlv_5= 'watching' ( (lv_watching_6_0= ruleDelayExpression ) ) (otherlv_7= 'timeout' ( (lv_watchingStatements_8_0= ruleEsterelParallel ) ) otherlv_9= 'end' (otherlv_10= 'timeout' )? )? ) )
            int alt199=2;
            int LA199_0 = input.LA(1);

            if ( (LA199_0==94) ) {
                alt199=1;
            }
            else if ( (LA199_0==95) ) {
                alt199=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 199, 0, input);

                throw nvae;
            }
            switch (alt199) {
                case 1 :
                    // InternalSCEst.g:8680:4: (otherlv_3= 'upto' ( (lv_delay_4_0= ruleDelayExpression ) ) )
                    {
                    // InternalSCEst.g:8680:4: (otherlv_3= 'upto' ( (lv_delay_4_0= ruleDelayExpression ) ) )
                    // InternalSCEst.g:8681:5: otherlv_3= 'upto' ( (lv_delay_4_0= ruleDelayExpression ) )
                    {
                    otherlv_3=(Token)match(input,94,FollowSets000.FOLLOW_82); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getLegacyDoAccess().getUptoKeyword_3_0_0());
                      				
                    }
                    // InternalSCEst.g:8685:5: ( (lv_delay_4_0= ruleDelayExpression ) )
                    // InternalSCEst.g:8686:6: (lv_delay_4_0= ruleDelayExpression )
                    {
                    // InternalSCEst.g:8686:6: (lv_delay_4_0= ruleDelayExpression )
                    // InternalSCEst.g:8687:7: lv_delay_4_0= ruleDelayExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLegacyDoAccess().getDelayDelayExpressionParserRuleCall_3_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_delay_4_0=ruleDelayExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLegacyDoRule());
                      							}
                      							set(
                      								current,
                      								"delay",
                      								lv_delay_4_0,
                      								"de.cau.cs.kieler.esterel.Esterel.DelayExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCEst.g:8706:4: (otherlv_5= 'watching' ( (lv_watching_6_0= ruleDelayExpression ) ) (otherlv_7= 'timeout' ( (lv_watchingStatements_8_0= ruleEsterelParallel ) ) otherlv_9= 'end' (otherlv_10= 'timeout' )? )? )
                    {
                    // InternalSCEst.g:8706:4: (otherlv_5= 'watching' ( (lv_watching_6_0= ruleDelayExpression ) ) (otherlv_7= 'timeout' ( (lv_watchingStatements_8_0= ruleEsterelParallel ) ) otherlv_9= 'end' (otherlv_10= 'timeout' )? )? )
                    // InternalSCEst.g:8707:5: otherlv_5= 'watching' ( (lv_watching_6_0= ruleDelayExpression ) ) (otherlv_7= 'timeout' ( (lv_watchingStatements_8_0= ruleEsterelParallel ) ) otherlv_9= 'end' (otherlv_10= 'timeout' )? )?
                    {
                    otherlv_5=(Token)match(input,95,FollowSets000.FOLLOW_82); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getLegacyDoAccess().getWatchingKeyword_3_1_0());
                      				
                    }
                    // InternalSCEst.g:8711:5: ( (lv_watching_6_0= ruleDelayExpression ) )
                    // InternalSCEst.g:8712:6: (lv_watching_6_0= ruleDelayExpression )
                    {
                    // InternalSCEst.g:8712:6: (lv_watching_6_0= ruleDelayExpression )
                    // InternalSCEst.g:8713:7: lv_watching_6_0= ruleDelayExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLegacyDoAccess().getWatchingDelayExpressionParserRuleCall_3_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_131);
                    lv_watching_6_0=ruleDelayExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLegacyDoRule());
                      							}
                      							set(
                      								current,
                      								"watching",
                      								lv_watching_6_0,
                      								"de.cau.cs.kieler.esterel.Esterel.DelayExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCEst.g:8730:5: (otherlv_7= 'timeout' ( (lv_watchingStatements_8_0= ruleEsterelParallel ) ) otherlv_9= 'end' (otherlv_10= 'timeout' )? )?
                    int alt198=2;
                    int LA198_0 = input.LA(1);

                    if ( (LA198_0==96) ) {
                        alt198=1;
                    }
                    switch (alt198) {
                        case 1 :
                            // InternalSCEst.g:8731:6: otherlv_7= 'timeout' ( (lv_watchingStatements_8_0= ruleEsterelParallel ) ) otherlv_9= 'end' (otherlv_10= 'timeout' )?
                            {
                            otherlv_7=(Token)match(input,96,FollowSets000.FOLLOW_12); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_7, grammarAccess.getLegacyDoAccess().getTimeoutKeyword_3_1_2_0());
                              					
                            }
                            // InternalSCEst.g:8735:6: ( (lv_watchingStatements_8_0= ruleEsterelParallel ) )
                            // InternalSCEst.g:8736:7: (lv_watchingStatements_8_0= ruleEsterelParallel )
                            {
                            // InternalSCEst.g:8736:7: (lv_watchingStatements_8_0= ruleEsterelParallel )
                            // InternalSCEst.g:8737:8: lv_watchingStatements_8_0= ruleEsterelParallel
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getLegacyDoAccess().getWatchingStatementsEsterelParallelParserRuleCall_3_1_2_1_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_68);
                            lv_watchingStatements_8_0=ruleEsterelParallel();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getLegacyDoRule());
                              								}
                              								add(
                              									current,
                              									"watchingStatements",
                              									lv_watchingStatements_8_0,
                              									"de.cau.cs.kieler.esterel.Esterel.EsterelParallel");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_9=(Token)match(input,19,FollowSets000.FOLLOW_131); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_9, grammarAccess.getLegacyDoAccess().getEndKeyword_3_1_2_2());
                              					
                            }
                            // InternalSCEst.g:8758:6: (otherlv_10= 'timeout' )?
                            int alt197=2;
                            int LA197_0 = input.LA(1);

                            if ( (LA197_0==96) ) {
                                alt197=1;
                            }
                            switch (alt197) {
                                case 1 :
                                    // InternalSCEst.g:8759:7: otherlv_10= 'timeout'
                                    {
                                    otherlv_10=(Token)match(input,96,FollowSets000.FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_10, grammarAccess.getLegacyDoAccess().getTimeoutKeyword_3_1_2_3());
                                      						
                                    }

                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLegacyDo"


    // $ANTLR start "entryRuleTrapExpression"
    // InternalSCEst.g:8771:1: entryRuleTrapExpression returns [EObject current=null] : iv_ruleTrapExpression= ruleTrapExpression EOF ;
    public final EObject entryRuleTrapExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTrapExpression = null;


        try {
            // InternalSCEst.g:8771:55: (iv_ruleTrapExpression= ruleTrapExpression EOF )
            // InternalSCEst.g:8772:2: iv_ruleTrapExpression= ruleTrapExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTrapExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTrapExpression=ruleTrapExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTrapExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTrapExpression"


    // $ANTLR start "ruleTrapExpression"
    // InternalSCEst.g:8778:1: ruleTrapExpression returns [EObject current=null] : ( () otherlv_1= '??' ( (otherlv_2= RULE_ID ) ) ) ;
    public final EObject ruleTrapExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;


        	enterRule();

        try {
            // InternalSCEst.g:8784:2: ( ( () otherlv_1= '??' ( (otherlv_2= RULE_ID ) ) ) )
            // InternalSCEst.g:8785:2: ( () otherlv_1= '??' ( (otherlv_2= RULE_ID ) ) )
            {
            // InternalSCEst.g:8785:2: ( () otherlv_1= '??' ( (otherlv_2= RULE_ID ) ) )
            // InternalSCEst.g:8786:3: () otherlv_1= '??' ( (otherlv_2= RULE_ID ) )
            {
            // InternalSCEst.g:8786:3: ()
            // InternalSCEst.g:8787:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getTrapExpressionAccess().getTrapExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,97,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getTrapExpressionAccess().getQuestionMarkQuestionMarkKeyword_1());
              		
            }
            // InternalSCEst.g:8800:3: ( (otherlv_2= RULE_ID ) )
            // InternalSCEst.g:8801:4: (otherlv_2= RULE_ID )
            {
            // InternalSCEst.g:8801:4: (otherlv_2= RULE_ID )
            // InternalSCEst.g:8802:5: otherlv_2= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getTrapExpressionRule());
              					}
              				
            }
            otherlv_2=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_2, grammarAccess.getTrapExpressionAccess().getTrapTrapSignalCrossReference_2_0());
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTrapExpression"


    // $ANTLR start "entryRuleEsterelFunctionCall"
    // InternalSCEst.g:8820:1: entryRuleEsterelFunctionCall returns [EObject current=null] : iv_ruleEsterelFunctionCall= ruleEsterelFunctionCall EOF ;
    public final EObject entryRuleEsterelFunctionCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEsterelFunctionCall = null;


        try {
            // InternalSCEst.g:8820:60: (iv_ruleEsterelFunctionCall= ruleEsterelFunctionCall EOF )
            // InternalSCEst.g:8821:2: iv_ruleEsterelFunctionCall= ruleEsterelFunctionCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEsterelFunctionCallRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEsterelFunctionCall=ruleEsterelFunctionCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEsterelFunctionCall; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEsterelFunctionCall"


    // $ANTLR start "ruleEsterelFunctionCall"
    // InternalSCEst.g:8827:1: ruleEsterelFunctionCall returns [EObject current=null] : ( ( (otherlv_0= RULE_ID ) ) ( (otherlv_1= '(' ( ( (lv_parameter_2_0= ruleExpression ) ) (otherlv_3= ',' ( (lv_parameter_4_0= ruleExpression ) ) )* )? otherlv_5= ')' ) | otherlv_6= '()' ) ) ;
    public final EObject ruleEsterelFunctionCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject lv_parameter_2_0 = null;

        EObject lv_parameter_4_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:8833:2: ( ( ( (otherlv_0= RULE_ID ) ) ( (otherlv_1= '(' ( ( (lv_parameter_2_0= ruleExpression ) ) (otherlv_3= ',' ( (lv_parameter_4_0= ruleExpression ) ) )* )? otherlv_5= ')' ) | otherlv_6= '()' ) ) )
            // InternalSCEst.g:8834:2: ( ( (otherlv_0= RULE_ID ) ) ( (otherlv_1= '(' ( ( (lv_parameter_2_0= ruleExpression ) ) (otherlv_3= ',' ( (lv_parameter_4_0= ruleExpression ) ) )* )? otherlv_5= ')' ) | otherlv_6= '()' ) )
            {
            // InternalSCEst.g:8834:2: ( ( (otherlv_0= RULE_ID ) ) ( (otherlv_1= '(' ( ( (lv_parameter_2_0= ruleExpression ) ) (otherlv_3= ',' ( (lv_parameter_4_0= ruleExpression ) ) )* )? otherlv_5= ')' ) | otherlv_6= '()' ) )
            // InternalSCEst.g:8835:3: ( (otherlv_0= RULE_ID ) ) ( (otherlv_1= '(' ( ( (lv_parameter_2_0= ruleExpression ) ) (otherlv_3= ',' ( (lv_parameter_4_0= ruleExpression ) ) )* )? otherlv_5= ')' ) | otherlv_6= '()' )
            {
            // InternalSCEst.g:8835:3: ( (otherlv_0= RULE_ID ) )
            // InternalSCEst.g:8836:4: (otherlv_0= RULE_ID )
            {
            // InternalSCEst.g:8836:4: (otherlv_0= RULE_ID )
            // InternalSCEst.g:8837:5: otherlv_0= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getEsterelFunctionCallRule());
              					}
              				
            }
            otherlv_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_0, grammarAccess.getEsterelFunctionCallAccess().getFunctionFunctionCrossReference_0_0());
              				
            }

            }


            }

            // InternalSCEst.g:8851:3: ( (otherlv_1= '(' ( ( (lv_parameter_2_0= ruleExpression ) ) (otherlv_3= ',' ( (lv_parameter_4_0= ruleExpression ) ) )* )? otherlv_5= ')' ) | otherlv_6= '()' )
            int alt202=2;
            int LA202_0 = input.LA(1);

            if ( (LA202_0==25) ) {
                alt202=1;
            }
            else if ( (LA202_0==34) ) {
                alt202=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 202, 0, input);

                throw nvae;
            }
            switch (alt202) {
                case 1 :
                    // InternalSCEst.g:8852:4: (otherlv_1= '(' ( ( (lv_parameter_2_0= ruleExpression ) ) (otherlv_3= ',' ( (lv_parameter_4_0= ruleExpression ) ) )* )? otherlv_5= ')' )
                    {
                    // InternalSCEst.g:8852:4: (otherlv_1= '(' ( ( (lv_parameter_2_0= ruleExpression ) ) (otherlv_3= ',' ( (lv_parameter_4_0= ruleExpression ) ) )* )? otherlv_5= ')' )
                    // InternalSCEst.g:8853:5: otherlv_1= '(' ( ( (lv_parameter_2_0= ruleExpression ) ) (otherlv_3= ',' ( (lv_parameter_4_0= ruleExpression ) ) )* )? otherlv_5= ')'
                    {
                    otherlv_1=(Token)match(input,25,FollowSets000.FOLLOW_60); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getEsterelFunctionCallAccess().getLeftParenthesisKeyword_1_0_0());
                      				
                    }
                    // InternalSCEst.g:8857:5: ( ( (lv_parameter_2_0= ruleExpression ) ) (otherlv_3= ',' ( (lv_parameter_4_0= ruleExpression ) ) )* )?
                    int alt201=2;
                    int LA201_0 = input.LA(1);

                    if ( ((LA201_0>=RULE_ID && LA201_0<=RULE_COMMENT_ANNOTATION)||LA201_0==25||LA201_0==84||LA201_0==91||(LA201_0>=97 && LA201_0<=98)||LA201_0==117||(LA201_0>=128 && LA201_0<=130)) ) {
                        alt201=1;
                    }
                    switch (alt201) {
                        case 1 :
                            // InternalSCEst.g:8858:6: ( (lv_parameter_2_0= ruleExpression ) ) (otherlv_3= ',' ( (lv_parameter_4_0= ruleExpression ) ) )*
                            {
                            // InternalSCEst.g:8858:6: ( (lv_parameter_2_0= ruleExpression ) )
                            // InternalSCEst.g:8859:7: (lv_parameter_2_0= ruleExpression )
                            {
                            // InternalSCEst.g:8859:7: (lv_parameter_2_0= ruleExpression )
                            // InternalSCEst.g:8860:8: lv_parameter_2_0= ruleExpression
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getEsterelFunctionCallAccess().getParameterExpressionParserRuleCall_1_0_1_0_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_33);
                            lv_parameter_2_0=ruleExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getEsterelFunctionCallRule());
                              								}
                              								add(
                              									current,
                              									"parameter",
                              									lv_parameter_2_0,
                              									"de.cau.cs.kieler.esterel.Esterel.Expression");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalSCEst.g:8877:6: (otherlv_3= ',' ( (lv_parameter_4_0= ruleExpression ) ) )*
                            loop200:
                            do {
                                int alt200=2;
                                int LA200_0 = input.LA(1);

                                if ( (LA200_0==30) ) {
                                    alt200=1;
                                }


                                switch (alt200) {
                            	case 1 :
                            	    // InternalSCEst.g:8878:7: otherlv_3= ',' ( (lv_parameter_4_0= ruleExpression ) )
                            	    {
                            	    otherlv_3=(Token)match(input,30,FollowSets000.FOLLOW_16); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_3, grammarAccess.getEsterelFunctionCallAccess().getCommaKeyword_1_0_1_1_0());
                            	      						
                            	    }
                            	    // InternalSCEst.g:8882:7: ( (lv_parameter_4_0= ruleExpression ) )
                            	    // InternalSCEst.g:8883:8: (lv_parameter_4_0= ruleExpression )
                            	    {
                            	    // InternalSCEst.g:8883:8: (lv_parameter_4_0= ruleExpression )
                            	    // InternalSCEst.g:8884:9: lv_parameter_4_0= ruleExpression
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getEsterelFunctionCallAccess().getParameterExpressionParserRuleCall_1_0_1_1_1_0());
                            	      								
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_33);
                            	    lv_parameter_4_0=ruleExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getEsterelFunctionCallRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"parameter",
                            	      										lv_parameter_4_0,
                            	      										"de.cau.cs.kieler.esterel.Esterel.Expression");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop200;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_5=(Token)match(input,26,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getEsterelFunctionCallAccess().getRightParenthesisKeyword_1_0_2());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCEst.g:8909:4: otherlv_6= '()'
                    {
                    otherlv_6=(Token)match(input,34,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getEsterelFunctionCallAccess().getLeftParenthesisRightParenthesisKeyword_1_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEsterelFunctionCall"


    // $ANTLR start "entryRuleConstantExpression"
    // InternalSCEst.g:8918:1: entryRuleConstantExpression returns [EObject current=null] : iv_ruleConstantExpression= ruleConstantExpression EOF ;
    public final EObject entryRuleConstantExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConstantExpression = null;


        try {
            // InternalSCEst.g:8918:59: (iv_ruleConstantExpression= ruleConstantExpression EOF )
            // InternalSCEst.g:8919:2: iv_ruleConstantExpression= ruleConstantExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConstantExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleConstantExpression=ruleConstantExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConstantExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConstantExpression"


    // $ANTLR start "ruleConstantExpression"
    // InternalSCEst.g:8925:1: ruleConstantExpression returns [EObject current=null] : ( () ( ( (otherlv_1= RULE_ID ) ) | ( (lv_value_2_0= ruleAnyValue ) ) ) ) ;
    public final EObject ruleConstantExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_value_2_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:8931:2: ( ( () ( ( (otherlv_1= RULE_ID ) ) | ( (lv_value_2_0= ruleAnyValue ) ) ) ) )
            // InternalSCEst.g:8932:2: ( () ( ( (otherlv_1= RULE_ID ) ) | ( (lv_value_2_0= ruleAnyValue ) ) ) )
            {
            // InternalSCEst.g:8932:2: ( () ( ( (otherlv_1= RULE_ID ) ) | ( (lv_value_2_0= ruleAnyValue ) ) ) )
            // InternalSCEst.g:8933:3: () ( ( (otherlv_1= RULE_ID ) ) | ( (lv_value_2_0= ruleAnyValue ) ) )
            {
            // InternalSCEst.g:8933:3: ()
            // InternalSCEst.g:8934:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getConstantExpressionAccess().getConstantExpressionAction_0(),
              					current);
              			
            }

            }

            // InternalSCEst.g:8943:3: ( ( (otherlv_1= RULE_ID ) ) | ( (lv_value_2_0= ruleAnyValue ) ) )
            int alt203=2;
            int LA203_0 = input.LA(1);

            if ( (LA203_0==RULE_ID) ) {
                alt203=1;
            }
            else if ( (LA203_0==RULE_STRING||(LA203_0>=RULE_INT && LA203_0<=RULE_BOOLEAN)) ) {
                alt203=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 203, 0, input);

                throw nvae;
            }
            switch (alt203) {
                case 1 :
                    // InternalSCEst.g:8944:4: ( (otherlv_1= RULE_ID ) )
                    {
                    // InternalSCEst.g:8944:4: ( (otherlv_1= RULE_ID ) )
                    // InternalSCEst.g:8945:5: (otherlv_1= RULE_ID )
                    {
                    // InternalSCEst.g:8945:5: (otherlv_1= RULE_ID )
                    // InternalSCEst.g:8946:6: otherlv_1= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      						/* */
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConstantExpressionRule());
                      						}
                      					
                    }
                    otherlv_1=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_1, grammarAccess.getConstantExpressionAccess().getConstantConstantCrossReference_1_0_0());
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCEst.g:8961:4: ( (lv_value_2_0= ruleAnyValue ) )
                    {
                    // InternalSCEst.g:8961:4: ( (lv_value_2_0= ruleAnyValue ) )
                    // InternalSCEst.g:8962:5: (lv_value_2_0= ruleAnyValue )
                    {
                    // InternalSCEst.g:8962:5: (lv_value_2_0= ruleAnyValue )
                    // InternalSCEst.g:8963:6: lv_value_2_0= ruleAnyValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConstantExpressionAccess().getValueAnyValueParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_value_2_0=ruleAnyValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConstantExpressionRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_2_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.AnyValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConstantExpression"


    // $ANTLR start "entryRuleTrapExpr"
    // InternalSCEst.g:8985:1: entryRuleTrapExpr returns [EObject current=null] : iv_ruleTrapExpr= ruleTrapExpr EOF ;
    public final EObject entryRuleTrapExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTrapExpr = null;


        try {
            // InternalSCEst.g:8985:49: (iv_ruleTrapExpr= ruleTrapExpr EOF )
            // InternalSCEst.g:8986:2: iv_ruleTrapExpr= ruleTrapExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTrapExprRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTrapExpr=ruleTrapExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTrapExpr; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTrapExpr"


    // $ANTLR start "ruleTrapExpr"
    // InternalSCEst.g:8992:1: ruleTrapExpr returns [EObject current=null] : (this_TrapAndExpression_0= ruleTrapAndExpression ( () ( ( (lv_operator_2_0= ruleEsterelOrOperator ) ) ( (lv_subExpressions_3_0= ruleTrapAndExpression ) ) )+ )? ) ;
    public final EObject ruleTrapExpr() throws RecognitionException {
        EObject current = null;

        EObject this_TrapAndExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:8998:2: ( (this_TrapAndExpression_0= ruleTrapAndExpression ( () ( ( (lv_operator_2_0= ruleEsterelOrOperator ) ) ( (lv_subExpressions_3_0= ruleTrapAndExpression ) ) )+ )? ) )
            // InternalSCEst.g:8999:2: (this_TrapAndExpression_0= ruleTrapAndExpression ( () ( ( (lv_operator_2_0= ruleEsterelOrOperator ) ) ( (lv_subExpressions_3_0= ruleTrapAndExpression ) ) )+ )? )
            {
            // InternalSCEst.g:8999:2: (this_TrapAndExpression_0= ruleTrapAndExpression ( () ( ( (lv_operator_2_0= ruleEsterelOrOperator ) ) ( (lv_subExpressions_3_0= ruleTrapAndExpression ) ) )+ )? )
            // InternalSCEst.g:9000:3: this_TrapAndExpression_0= ruleTrapAndExpression ( () ( ( (lv_operator_2_0= ruleEsterelOrOperator ) ) ( (lv_subExpressions_3_0= ruleTrapAndExpression ) ) )+ )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getTrapExprAccess().getTrapAndExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_132);
            this_TrapAndExpression_0=ruleTrapAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TrapAndExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCEst.g:9011:3: ( () ( ( (lv_operator_2_0= ruleEsterelOrOperator ) ) ( (lv_subExpressions_3_0= ruleTrapAndExpression ) ) )+ )?
            int alt205=2;
            int LA205_0 = input.LA(1);

            if ( (LA205_0==93) ) {
                alt205=1;
            }
            switch (alt205) {
                case 1 :
                    // InternalSCEst.g:9012:4: () ( ( (lv_operator_2_0= ruleEsterelOrOperator ) ) ( (lv_subExpressions_3_0= ruleTrapAndExpression ) ) )+
                    {
                    // InternalSCEst.g:9012:4: ()
                    // InternalSCEst.g:9013:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getTrapExprAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCEst.g:9022:4: ( ( (lv_operator_2_0= ruleEsterelOrOperator ) ) ( (lv_subExpressions_3_0= ruleTrapAndExpression ) ) )+
                    int cnt204=0;
                    loop204:
                    do {
                        int alt204=2;
                        int LA204_0 = input.LA(1);

                        if ( (LA204_0==93) ) {
                            alt204=1;
                        }


                        switch (alt204) {
                    	case 1 :
                    	    // InternalSCEst.g:9023:5: ( (lv_operator_2_0= ruleEsterelOrOperator ) ) ( (lv_subExpressions_3_0= ruleTrapAndExpression ) )
                    	    {
                    	    // InternalSCEst.g:9023:5: ( (lv_operator_2_0= ruleEsterelOrOperator ) )
                    	    // InternalSCEst.g:9024:6: (lv_operator_2_0= ruleEsterelOrOperator )
                    	    {
                    	    // InternalSCEst.g:9024:6: (lv_operator_2_0= ruleEsterelOrOperator )
                    	    // InternalSCEst.g:9025:7: lv_operator_2_0= ruleEsterelOrOperator
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getTrapExprAccess().getOperatorEsterelOrOperatorEnumRuleCall_1_1_0_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_107);
                    	    lv_operator_2_0=ruleEsterelOrOperator();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getTrapExprRule());
                    	      							}
                    	      							set(
                    	      								current,
                    	      								"operator",
                    	      								lv_operator_2_0,
                    	      								"de.cau.cs.kieler.esterel.Esterel.EsterelOrOperator");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }

                    	    // InternalSCEst.g:9042:5: ( (lv_subExpressions_3_0= ruleTrapAndExpression ) )
                    	    // InternalSCEst.g:9043:6: (lv_subExpressions_3_0= ruleTrapAndExpression )
                    	    {
                    	    // InternalSCEst.g:9043:6: (lv_subExpressions_3_0= ruleTrapAndExpression )
                    	    // InternalSCEst.g:9044:7: lv_subExpressions_3_0= ruleTrapAndExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getTrapExprAccess().getSubExpressionsTrapAndExpressionParserRuleCall_1_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_132);
                    	    lv_subExpressions_3_0=ruleTrapAndExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getTrapExprRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_3_0,
                    	      								"de.cau.cs.kieler.esterel.Esterel.TrapAndExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt204 >= 1 ) break loop204;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(204, input);
                                throw eee;
                        }
                        cnt204++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTrapExpr"


    // $ANTLR start "entryRuleTrapAndExpression"
    // InternalSCEst.g:9067:1: entryRuleTrapAndExpression returns [EObject current=null] : iv_ruleTrapAndExpression= ruleTrapAndExpression EOF ;
    public final EObject entryRuleTrapAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTrapAndExpression = null;


        try {
            // InternalSCEst.g:9067:58: (iv_ruleTrapAndExpression= ruleTrapAndExpression EOF )
            // InternalSCEst.g:9068:2: iv_ruleTrapAndExpression= ruleTrapAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTrapAndExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTrapAndExpression=ruleTrapAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTrapAndExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTrapAndExpression"


    // $ANTLR start "ruleTrapAndExpression"
    // InternalSCEst.g:9074:1: ruleTrapAndExpression returns [EObject current=null] : (this_TrapNotExpression_0= ruleTrapNotExpression ( () ( ( (lv_operator_2_0= ruleEsterelAndOperator ) ) ( (lv_subExpressions_3_0= ruleTrapNotExpression ) ) )+ )? ) ;
    public final EObject ruleTrapAndExpression() throws RecognitionException {
        EObject current = null;

        EObject this_TrapNotExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:9080:2: ( (this_TrapNotExpression_0= ruleTrapNotExpression ( () ( ( (lv_operator_2_0= ruleEsterelAndOperator ) ) ( (lv_subExpressions_3_0= ruleTrapNotExpression ) ) )+ )? ) )
            // InternalSCEst.g:9081:2: (this_TrapNotExpression_0= ruleTrapNotExpression ( () ( ( (lv_operator_2_0= ruleEsterelAndOperator ) ) ( (lv_subExpressions_3_0= ruleTrapNotExpression ) ) )+ )? )
            {
            // InternalSCEst.g:9081:2: (this_TrapNotExpression_0= ruleTrapNotExpression ( () ( ( (lv_operator_2_0= ruleEsterelAndOperator ) ) ( (lv_subExpressions_3_0= ruleTrapNotExpression ) ) )+ )? )
            // InternalSCEst.g:9082:3: this_TrapNotExpression_0= ruleTrapNotExpression ( () ( ( (lv_operator_2_0= ruleEsterelAndOperator ) ) ( (lv_subExpressions_3_0= ruleTrapNotExpression ) ) )+ )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getTrapAndExpressionAccess().getTrapNotExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_133);
            this_TrapNotExpression_0=ruleTrapNotExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TrapNotExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCEst.g:9093:3: ( () ( ( (lv_operator_2_0= ruleEsterelAndOperator ) ) ( (lv_subExpressions_3_0= ruleTrapNotExpression ) ) )+ )?
            int alt207=2;
            int LA207_0 = input.LA(1);

            if ( (LA207_0==92) ) {
                alt207=1;
            }
            switch (alt207) {
                case 1 :
                    // InternalSCEst.g:9094:4: () ( ( (lv_operator_2_0= ruleEsterelAndOperator ) ) ( (lv_subExpressions_3_0= ruleTrapNotExpression ) ) )+
                    {
                    // InternalSCEst.g:9094:4: ()
                    // InternalSCEst.g:9095:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getTrapAndExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCEst.g:9104:4: ( ( (lv_operator_2_0= ruleEsterelAndOperator ) ) ( (lv_subExpressions_3_0= ruleTrapNotExpression ) ) )+
                    int cnt206=0;
                    loop206:
                    do {
                        int alt206=2;
                        int LA206_0 = input.LA(1);

                        if ( (LA206_0==92) ) {
                            alt206=1;
                        }


                        switch (alt206) {
                    	case 1 :
                    	    // InternalSCEst.g:9105:5: ( (lv_operator_2_0= ruleEsterelAndOperator ) ) ( (lv_subExpressions_3_0= ruleTrapNotExpression ) )
                    	    {
                    	    // InternalSCEst.g:9105:5: ( (lv_operator_2_0= ruleEsterelAndOperator ) )
                    	    // InternalSCEst.g:9106:6: (lv_operator_2_0= ruleEsterelAndOperator )
                    	    {
                    	    // InternalSCEst.g:9106:6: (lv_operator_2_0= ruleEsterelAndOperator )
                    	    // InternalSCEst.g:9107:7: lv_operator_2_0= ruleEsterelAndOperator
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getTrapAndExpressionAccess().getOperatorEsterelAndOperatorEnumRuleCall_1_1_0_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_107);
                    	    lv_operator_2_0=ruleEsterelAndOperator();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getTrapAndExpressionRule());
                    	      							}
                    	      							set(
                    	      								current,
                    	      								"operator",
                    	      								lv_operator_2_0,
                    	      								"de.cau.cs.kieler.esterel.Esterel.EsterelAndOperator");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }

                    	    // InternalSCEst.g:9124:5: ( (lv_subExpressions_3_0= ruleTrapNotExpression ) )
                    	    // InternalSCEst.g:9125:6: (lv_subExpressions_3_0= ruleTrapNotExpression )
                    	    {
                    	    // InternalSCEst.g:9125:6: (lv_subExpressions_3_0= ruleTrapNotExpression )
                    	    // InternalSCEst.g:9126:7: lv_subExpressions_3_0= ruleTrapNotExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getTrapAndExpressionAccess().getSubExpressionsTrapNotExpressionParserRuleCall_1_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_133);
                    	    lv_subExpressions_3_0=ruleTrapNotExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getTrapAndExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_3_0,
                    	      								"de.cau.cs.kieler.esterel.Esterel.TrapNotExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt206 >= 1 ) break loop206;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(206, input);
                                throw eee;
                        }
                        cnt206++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTrapAndExpression"


    // $ANTLR start "entryRuleTrapNotExpression"
    // InternalSCEst.g:9149:1: entryRuleTrapNotExpression returns [EObject current=null] : iv_ruleTrapNotExpression= ruleTrapNotExpression EOF ;
    public final EObject entryRuleTrapNotExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTrapNotExpression = null;


        try {
            // InternalSCEst.g:9149:58: (iv_ruleTrapNotExpression= ruleTrapNotExpression EOF )
            // InternalSCEst.g:9150:2: iv_ruleTrapNotExpression= ruleTrapNotExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTrapNotExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTrapNotExpression=ruleTrapNotExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTrapNotExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTrapNotExpression"


    // $ANTLR start "ruleTrapNotExpression"
    // InternalSCEst.g:9156:1: ruleTrapNotExpression returns [EObject current=null] : ( ( () ( (lv_operator_1_0= ruleEsterelNotOperator ) ) ( (lv_subExpressions_2_0= ruleTrapNotExpression ) ) ) | this_TrapAtomicExpression_3= ruleTrapAtomicExpression ) ;
    public final EObject ruleTrapNotExpression() throws RecognitionException {
        EObject current = null;

        Enumerator lv_operator_1_0 = null;

        EObject lv_subExpressions_2_0 = null;

        EObject this_TrapAtomicExpression_3 = null;



        	enterRule();

        try {
            // InternalSCEst.g:9162:2: ( ( ( () ( (lv_operator_1_0= ruleEsterelNotOperator ) ) ( (lv_subExpressions_2_0= ruleTrapNotExpression ) ) ) | this_TrapAtomicExpression_3= ruleTrapAtomicExpression ) )
            // InternalSCEst.g:9163:2: ( ( () ( (lv_operator_1_0= ruleEsterelNotOperator ) ) ( (lv_subExpressions_2_0= ruleTrapNotExpression ) ) ) | this_TrapAtomicExpression_3= ruleTrapAtomicExpression )
            {
            // InternalSCEst.g:9163:2: ( ( () ( (lv_operator_1_0= ruleEsterelNotOperator ) ) ( (lv_subExpressions_2_0= ruleTrapNotExpression ) ) ) | this_TrapAtomicExpression_3= ruleTrapAtomicExpression )
            int alt208=2;
            int LA208_0 = input.LA(1);

            if ( (LA208_0==91) ) {
                alt208=1;
            }
            else if ( (LA208_0==RULE_ID||LA208_0==25) ) {
                alt208=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 208, 0, input);

                throw nvae;
            }
            switch (alt208) {
                case 1 :
                    // InternalSCEst.g:9164:3: ( () ( (lv_operator_1_0= ruleEsterelNotOperator ) ) ( (lv_subExpressions_2_0= ruleTrapNotExpression ) ) )
                    {
                    // InternalSCEst.g:9164:3: ( () ( (lv_operator_1_0= ruleEsterelNotOperator ) ) ( (lv_subExpressions_2_0= ruleTrapNotExpression ) ) )
                    // InternalSCEst.g:9165:4: () ( (lv_operator_1_0= ruleEsterelNotOperator ) ) ( (lv_subExpressions_2_0= ruleTrapNotExpression ) )
                    {
                    // InternalSCEst.g:9165:4: ()
                    // InternalSCEst.g:9166:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getTrapNotExpressionAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCEst.g:9175:4: ( (lv_operator_1_0= ruleEsterelNotOperator ) )
                    // InternalSCEst.g:9176:5: (lv_operator_1_0= ruleEsterelNotOperator )
                    {
                    // InternalSCEst.g:9176:5: (lv_operator_1_0= ruleEsterelNotOperator )
                    // InternalSCEst.g:9177:6: lv_operator_1_0= ruleEsterelNotOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTrapNotExpressionAccess().getOperatorEsterelNotOperatorEnumRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_107);
                    lv_operator_1_0=ruleEsterelNotOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTrapNotExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_1_0,
                      							"de.cau.cs.kieler.esterel.Esterel.EsterelNotOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCEst.g:9194:4: ( (lv_subExpressions_2_0= ruleTrapNotExpression ) )
                    // InternalSCEst.g:9195:5: (lv_subExpressions_2_0= ruleTrapNotExpression )
                    {
                    // InternalSCEst.g:9195:5: (lv_subExpressions_2_0= ruleTrapNotExpression )
                    // InternalSCEst.g:9196:6: lv_subExpressions_2_0= ruleTrapNotExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTrapNotExpressionAccess().getSubExpressionsTrapNotExpressionParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_2_0=ruleTrapNotExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTrapNotExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_2_0,
                      							"de.cau.cs.kieler.esterel.Esterel.TrapNotExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCEst.g:9215:3: this_TrapAtomicExpression_3= ruleTrapAtomicExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTrapNotExpressionAccess().getTrapAtomicExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TrapAtomicExpression_3=ruleTrapAtomicExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TrapAtomicExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTrapNotExpression"


    // $ANTLR start "entryRuleTrapAtomicExpression"
    // InternalSCEst.g:9230:1: entryRuleTrapAtomicExpression returns [EObject current=null] : iv_ruleTrapAtomicExpression= ruleTrapAtomicExpression EOF ;
    public final EObject entryRuleTrapAtomicExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTrapAtomicExpression = null;


        try {
            // InternalSCEst.g:9230:61: (iv_ruleTrapAtomicExpression= ruleTrapAtomicExpression EOF )
            // InternalSCEst.g:9231:2: iv_ruleTrapAtomicExpression= ruleTrapAtomicExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTrapAtomicExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTrapAtomicExpression=ruleTrapAtomicExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTrapAtomicExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTrapAtomicExpression"


    // $ANTLR start "ruleTrapAtomicExpression"
    // InternalSCEst.g:9237:1: ruleTrapAtomicExpression returns [EObject current=null] : (this_TrapReferenceExpr_0= ruleTrapReferenceExpr | (otherlv_1= '(' this_TrapExpression_2= ruleTrapExpression otherlv_3= ')' ) ) ;
    public final EObject ruleTrapAtomicExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject this_TrapReferenceExpr_0 = null;

        EObject this_TrapExpression_2 = null;



        	enterRule();

        try {
            // InternalSCEst.g:9243:2: ( (this_TrapReferenceExpr_0= ruleTrapReferenceExpr | (otherlv_1= '(' this_TrapExpression_2= ruleTrapExpression otherlv_3= ')' ) ) )
            // InternalSCEst.g:9244:2: (this_TrapReferenceExpr_0= ruleTrapReferenceExpr | (otherlv_1= '(' this_TrapExpression_2= ruleTrapExpression otherlv_3= ')' ) )
            {
            // InternalSCEst.g:9244:2: (this_TrapReferenceExpr_0= ruleTrapReferenceExpr | (otherlv_1= '(' this_TrapExpression_2= ruleTrapExpression otherlv_3= ')' ) )
            int alt209=2;
            int LA209_0 = input.LA(1);

            if ( (LA209_0==RULE_ID) ) {
                alt209=1;
            }
            else if ( (LA209_0==25) ) {
                alt209=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 209, 0, input);

                throw nvae;
            }
            switch (alt209) {
                case 1 :
                    // InternalSCEst.g:9245:3: this_TrapReferenceExpr_0= ruleTrapReferenceExpr
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTrapAtomicExpressionAccess().getTrapReferenceExprParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TrapReferenceExpr_0=ruleTrapReferenceExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TrapReferenceExpr_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCEst.g:9257:3: (otherlv_1= '(' this_TrapExpression_2= ruleTrapExpression otherlv_3= ')' )
                    {
                    // InternalSCEst.g:9257:3: (otherlv_1= '(' this_TrapExpression_2= ruleTrapExpression otherlv_3= ')' )
                    // InternalSCEst.g:9258:4: otherlv_1= '(' this_TrapExpression_2= ruleTrapExpression otherlv_3= ')'
                    {
                    otherlv_1=(Token)match(input,25,FollowSets000.FOLLOW_134); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getTrapAtomicExpressionAccess().getLeftParenthesisKeyword_1_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getTrapAtomicExpressionAccess().getTrapExpressionParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_20);
                    this_TrapExpression_2=ruleTrapExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_TrapExpression_2;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_3=(Token)match(input,26,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getTrapAtomicExpressionAccess().getRightParenthesisKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTrapAtomicExpression"


    // $ANTLR start "entryRuleTrapReferenceExpr"
    // InternalSCEst.g:9282:1: entryRuleTrapReferenceExpr returns [EObject current=null] : iv_ruleTrapReferenceExpr= ruleTrapReferenceExpr EOF ;
    public final EObject entryRuleTrapReferenceExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTrapReferenceExpr = null;


        try {
            // InternalSCEst.g:9282:58: (iv_ruleTrapReferenceExpr= ruleTrapReferenceExpr EOF )
            // InternalSCEst.g:9283:2: iv_ruleTrapReferenceExpr= ruleTrapReferenceExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTrapReferenceExprRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTrapReferenceExpr=ruleTrapReferenceExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTrapReferenceExpr; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTrapReferenceExpr"


    // $ANTLR start "ruleTrapReferenceExpr"
    // InternalSCEst.g:9289:1: ruleTrapReferenceExpr returns [EObject current=null] : ( () ( (otherlv_1= RULE_ID ) ) ) ;
    public final EObject ruleTrapReferenceExpr() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;


        	enterRule();

        try {
            // InternalSCEst.g:9295:2: ( ( () ( (otherlv_1= RULE_ID ) ) ) )
            // InternalSCEst.g:9296:2: ( () ( (otherlv_1= RULE_ID ) ) )
            {
            // InternalSCEst.g:9296:2: ( () ( (otherlv_1= RULE_ID ) ) )
            // InternalSCEst.g:9297:3: () ( (otherlv_1= RULE_ID ) )
            {
            // InternalSCEst.g:9297:3: ()
            // InternalSCEst.g:9298:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getTrapReferenceExprAccess().getTrapReferenceAction_0(),
              					current);
              			
            }

            }

            // InternalSCEst.g:9307:3: ( (otherlv_1= RULE_ID ) )
            // InternalSCEst.g:9308:4: (otherlv_1= RULE_ID )
            {
            // InternalSCEst.g:9308:4: (otherlv_1= RULE_ID )
            // InternalSCEst.g:9309:5: otherlv_1= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getTrapReferenceExprRule());
              					}
              				
            }
            otherlv_1=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getTrapReferenceExprAccess().getValuedObjectTrapSignalCrossReference_1_0());
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTrapReferenceExpr"


    // $ANTLR start "entryRuleSignalExpression"
    // InternalSCEst.g:9327:1: entryRuleSignalExpression returns [EObject current=null] : iv_ruleSignalExpression= ruleSignalExpression EOF ;
    public final EObject entryRuleSignalExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSignalExpression = null;


        try {
            // InternalSCEst.g:9327:57: (iv_ruleSignalExpression= ruleSignalExpression EOF )
            // InternalSCEst.g:9328:2: iv_ruleSignalExpression= ruleSignalExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSignalExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSignalExpression=ruleSignalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSignalExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSignalExpression"


    // $ANTLR start "ruleSignalExpression"
    // InternalSCEst.g:9334:1: ruleSignalExpression returns [EObject current=null] : (this_SignalAndExpression_0= ruleSignalAndExpression ( () ( ( (lv_operator_2_0= ruleEsterelOrOperator ) ) ( (lv_subExpressions_3_0= ruleSignalAndExpression ) ) )+ )? ) ;
    public final EObject ruleSignalExpression() throws RecognitionException {
        EObject current = null;

        EObject this_SignalAndExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:9340:2: ( (this_SignalAndExpression_0= ruleSignalAndExpression ( () ( ( (lv_operator_2_0= ruleEsterelOrOperator ) ) ( (lv_subExpressions_3_0= ruleSignalAndExpression ) ) )+ )? ) )
            // InternalSCEst.g:9341:2: (this_SignalAndExpression_0= ruleSignalAndExpression ( () ( ( (lv_operator_2_0= ruleEsterelOrOperator ) ) ( (lv_subExpressions_3_0= ruleSignalAndExpression ) ) )+ )? )
            {
            // InternalSCEst.g:9341:2: (this_SignalAndExpression_0= ruleSignalAndExpression ( () ( ( (lv_operator_2_0= ruleEsterelOrOperator ) ) ( (lv_subExpressions_3_0= ruleSignalAndExpression ) ) )+ )? )
            // InternalSCEst.g:9342:3: this_SignalAndExpression_0= ruleSignalAndExpression ( () ( ( (lv_operator_2_0= ruleEsterelOrOperator ) ) ( (lv_subExpressions_3_0= ruleSignalAndExpression ) ) )+ )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getSignalExpressionAccess().getSignalAndExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_132);
            this_SignalAndExpression_0=ruleSignalAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_SignalAndExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCEst.g:9353:3: ( () ( ( (lv_operator_2_0= ruleEsterelOrOperator ) ) ( (lv_subExpressions_3_0= ruleSignalAndExpression ) ) )+ )?
            int alt211=2;
            int LA211_0 = input.LA(1);

            if ( (LA211_0==93) ) {
                alt211=1;
            }
            switch (alt211) {
                case 1 :
                    // InternalSCEst.g:9354:4: () ( ( (lv_operator_2_0= ruleEsterelOrOperator ) ) ( (lv_subExpressions_3_0= ruleSignalAndExpression ) ) )+
                    {
                    // InternalSCEst.g:9354:4: ()
                    // InternalSCEst.g:9355:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getSignalExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCEst.g:9364:4: ( ( (lv_operator_2_0= ruleEsterelOrOperator ) ) ( (lv_subExpressions_3_0= ruleSignalAndExpression ) ) )+
                    int cnt210=0;
                    loop210:
                    do {
                        int alt210=2;
                        int LA210_0 = input.LA(1);

                        if ( (LA210_0==93) ) {
                            alt210=1;
                        }


                        switch (alt210) {
                    	case 1 :
                    	    // InternalSCEst.g:9365:5: ( (lv_operator_2_0= ruleEsterelOrOperator ) ) ( (lv_subExpressions_3_0= ruleSignalAndExpression ) )
                    	    {
                    	    // InternalSCEst.g:9365:5: ( (lv_operator_2_0= ruleEsterelOrOperator ) )
                    	    // InternalSCEst.g:9366:6: (lv_operator_2_0= ruleEsterelOrOperator )
                    	    {
                    	    // InternalSCEst.g:9366:6: (lv_operator_2_0= ruleEsterelOrOperator )
                    	    // InternalSCEst.g:9367:7: lv_operator_2_0= ruleEsterelOrOperator
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getSignalExpressionAccess().getOperatorEsterelOrOperatorEnumRuleCall_1_1_0_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_64);
                    	    lv_operator_2_0=ruleEsterelOrOperator();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getSignalExpressionRule());
                    	      							}
                    	      							set(
                    	      								current,
                    	      								"operator",
                    	      								lv_operator_2_0,
                    	      								"de.cau.cs.kieler.esterel.Esterel.EsterelOrOperator");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }

                    	    // InternalSCEst.g:9384:5: ( (lv_subExpressions_3_0= ruleSignalAndExpression ) )
                    	    // InternalSCEst.g:9385:6: (lv_subExpressions_3_0= ruleSignalAndExpression )
                    	    {
                    	    // InternalSCEst.g:9385:6: (lv_subExpressions_3_0= ruleSignalAndExpression )
                    	    // InternalSCEst.g:9386:7: lv_subExpressions_3_0= ruleSignalAndExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getSignalExpressionAccess().getSubExpressionsSignalAndExpressionParserRuleCall_1_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_132);
                    	    lv_subExpressions_3_0=ruleSignalAndExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getSignalExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_3_0,
                    	      								"de.cau.cs.kieler.esterel.Esterel.SignalAndExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt210 >= 1 ) break loop210;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(210, input);
                                throw eee;
                        }
                        cnt210++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSignalExpression"


    // $ANTLR start "entryRuleSignalAndExpression"
    // InternalSCEst.g:9409:1: entryRuleSignalAndExpression returns [EObject current=null] : iv_ruleSignalAndExpression= ruleSignalAndExpression EOF ;
    public final EObject entryRuleSignalAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSignalAndExpression = null;


        try {
            // InternalSCEst.g:9409:60: (iv_ruleSignalAndExpression= ruleSignalAndExpression EOF )
            // InternalSCEst.g:9410:2: iv_ruleSignalAndExpression= ruleSignalAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSignalAndExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSignalAndExpression=ruleSignalAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSignalAndExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSignalAndExpression"


    // $ANTLR start "ruleSignalAndExpression"
    // InternalSCEst.g:9416:1: ruleSignalAndExpression returns [EObject current=null] : (this_SignalNotExpression_0= ruleSignalNotExpression ( () ( ( (lv_operator_2_0= ruleEsterelAndOperator ) ) ( (lv_subExpressions_3_0= ruleSignalNotExpression ) ) )+ )? ) ;
    public final EObject ruleSignalAndExpression() throws RecognitionException {
        EObject current = null;

        EObject this_SignalNotExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:9422:2: ( (this_SignalNotExpression_0= ruleSignalNotExpression ( () ( ( (lv_operator_2_0= ruleEsterelAndOperator ) ) ( (lv_subExpressions_3_0= ruleSignalNotExpression ) ) )+ )? ) )
            // InternalSCEst.g:9423:2: (this_SignalNotExpression_0= ruleSignalNotExpression ( () ( ( (lv_operator_2_0= ruleEsterelAndOperator ) ) ( (lv_subExpressions_3_0= ruleSignalNotExpression ) ) )+ )? )
            {
            // InternalSCEst.g:9423:2: (this_SignalNotExpression_0= ruleSignalNotExpression ( () ( ( (lv_operator_2_0= ruleEsterelAndOperator ) ) ( (lv_subExpressions_3_0= ruleSignalNotExpression ) ) )+ )? )
            // InternalSCEst.g:9424:3: this_SignalNotExpression_0= ruleSignalNotExpression ( () ( ( (lv_operator_2_0= ruleEsterelAndOperator ) ) ( (lv_subExpressions_3_0= ruleSignalNotExpression ) ) )+ )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getSignalAndExpressionAccess().getSignalNotExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_133);
            this_SignalNotExpression_0=ruleSignalNotExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_SignalNotExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCEst.g:9435:3: ( () ( ( (lv_operator_2_0= ruleEsterelAndOperator ) ) ( (lv_subExpressions_3_0= ruleSignalNotExpression ) ) )+ )?
            int alt213=2;
            int LA213_0 = input.LA(1);

            if ( (LA213_0==92) ) {
                alt213=1;
            }
            switch (alt213) {
                case 1 :
                    // InternalSCEst.g:9436:4: () ( ( (lv_operator_2_0= ruleEsterelAndOperator ) ) ( (lv_subExpressions_3_0= ruleSignalNotExpression ) ) )+
                    {
                    // InternalSCEst.g:9436:4: ()
                    // InternalSCEst.g:9437:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getSignalAndExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCEst.g:9446:4: ( ( (lv_operator_2_0= ruleEsterelAndOperator ) ) ( (lv_subExpressions_3_0= ruleSignalNotExpression ) ) )+
                    int cnt212=0;
                    loop212:
                    do {
                        int alt212=2;
                        int LA212_0 = input.LA(1);

                        if ( (LA212_0==92) ) {
                            alt212=1;
                        }


                        switch (alt212) {
                    	case 1 :
                    	    // InternalSCEst.g:9447:5: ( (lv_operator_2_0= ruleEsterelAndOperator ) ) ( (lv_subExpressions_3_0= ruleSignalNotExpression ) )
                    	    {
                    	    // InternalSCEst.g:9447:5: ( (lv_operator_2_0= ruleEsterelAndOperator ) )
                    	    // InternalSCEst.g:9448:6: (lv_operator_2_0= ruleEsterelAndOperator )
                    	    {
                    	    // InternalSCEst.g:9448:6: (lv_operator_2_0= ruleEsterelAndOperator )
                    	    // InternalSCEst.g:9449:7: lv_operator_2_0= ruleEsterelAndOperator
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getSignalAndExpressionAccess().getOperatorEsterelAndOperatorEnumRuleCall_1_1_0_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_64);
                    	    lv_operator_2_0=ruleEsterelAndOperator();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getSignalAndExpressionRule());
                    	      							}
                    	      							set(
                    	      								current,
                    	      								"operator",
                    	      								lv_operator_2_0,
                    	      								"de.cau.cs.kieler.esterel.Esterel.EsterelAndOperator");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }

                    	    // InternalSCEst.g:9466:5: ( (lv_subExpressions_3_0= ruleSignalNotExpression ) )
                    	    // InternalSCEst.g:9467:6: (lv_subExpressions_3_0= ruleSignalNotExpression )
                    	    {
                    	    // InternalSCEst.g:9467:6: (lv_subExpressions_3_0= ruleSignalNotExpression )
                    	    // InternalSCEst.g:9468:7: lv_subExpressions_3_0= ruleSignalNotExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getSignalAndExpressionAccess().getSubExpressionsSignalNotExpressionParserRuleCall_1_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_133);
                    	    lv_subExpressions_3_0=ruleSignalNotExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getSignalAndExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_3_0,
                    	      								"de.cau.cs.kieler.esterel.Esterel.SignalNotExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt212 >= 1 ) break loop212;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(212, input);
                                throw eee;
                        }
                        cnt212++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSignalAndExpression"


    // $ANTLR start "entryRuleSignalNotExpression"
    // InternalSCEst.g:9491:1: entryRuleSignalNotExpression returns [EObject current=null] : iv_ruleSignalNotExpression= ruleSignalNotExpression EOF ;
    public final EObject entryRuleSignalNotExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSignalNotExpression = null;


        try {
            // InternalSCEst.g:9491:60: (iv_ruleSignalNotExpression= ruleSignalNotExpression EOF )
            // InternalSCEst.g:9492:2: iv_ruleSignalNotExpression= ruleSignalNotExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSignalNotExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSignalNotExpression=ruleSignalNotExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSignalNotExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSignalNotExpression"


    // $ANTLR start "ruleSignalNotExpression"
    // InternalSCEst.g:9498:1: ruleSignalNotExpression returns [EObject current=null] : ( ( () ( (lv_operator_1_0= ruleEsterelNotOperator ) ) ( (lv_subExpressions_2_0= ruleSignalNotExpression ) ) ) | this_SignalAtomicExpression_3= ruleSignalAtomicExpression ) ;
    public final EObject ruleSignalNotExpression() throws RecognitionException {
        EObject current = null;

        Enumerator lv_operator_1_0 = null;

        EObject lv_subExpressions_2_0 = null;

        EObject this_SignalAtomicExpression_3 = null;



        	enterRule();

        try {
            // InternalSCEst.g:9504:2: ( ( ( () ( (lv_operator_1_0= ruleEsterelNotOperator ) ) ( (lv_subExpressions_2_0= ruleSignalNotExpression ) ) ) | this_SignalAtomicExpression_3= ruleSignalAtomicExpression ) )
            // InternalSCEst.g:9505:2: ( ( () ( (lv_operator_1_0= ruleEsterelNotOperator ) ) ( (lv_subExpressions_2_0= ruleSignalNotExpression ) ) ) | this_SignalAtomicExpression_3= ruleSignalAtomicExpression )
            {
            // InternalSCEst.g:9505:2: ( ( () ( (lv_operator_1_0= ruleEsterelNotOperator ) ) ( (lv_subExpressions_2_0= ruleSignalNotExpression ) ) ) | this_SignalAtomicExpression_3= ruleSignalAtomicExpression )
            int alt214=2;
            int LA214_0 = input.LA(1);

            if ( (LA214_0==91) ) {
                alt214=1;
            }
            else if ( (LA214_0==RULE_ID||LA214_0==25||LA214_0==98||LA214_0==129) ) {
                alt214=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 214, 0, input);

                throw nvae;
            }
            switch (alt214) {
                case 1 :
                    // InternalSCEst.g:9506:3: ( () ( (lv_operator_1_0= ruleEsterelNotOperator ) ) ( (lv_subExpressions_2_0= ruleSignalNotExpression ) ) )
                    {
                    // InternalSCEst.g:9506:3: ( () ( (lv_operator_1_0= ruleEsterelNotOperator ) ) ( (lv_subExpressions_2_0= ruleSignalNotExpression ) ) )
                    // InternalSCEst.g:9507:4: () ( (lv_operator_1_0= ruleEsterelNotOperator ) ) ( (lv_subExpressions_2_0= ruleSignalNotExpression ) )
                    {
                    // InternalSCEst.g:9507:4: ()
                    // InternalSCEst.g:9508:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSignalNotExpressionAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCEst.g:9517:4: ( (lv_operator_1_0= ruleEsterelNotOperator ) )
                    // InternalSCEst.g:9518:5: (lv_operator_1_0= ruleEsterelNotOperator )
                    {
                    // InternalSCEst.g:9518:5: (lv_operator_1_0= ruleEsterelNotOperator )
                    // InternalSCEst.g:9519:6: lv_operator_1_0= ruleEsterelNotOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSignalNotExpressionAccess().getOperatorEsterelNotOperatorEnumRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_64);
                    lv_operator_1_0=ruleEsterelNotOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSignalNotExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_1_0,
                      							"de.cau.cs.kieler.esterel.Esterel.EsterelNotOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCEst.g:9536:4: ( (lv_subExpressions_2_0= ruleSignalNotExpression ) )
                    // InternalSCEst.g:9537:5: (lv_subExpressions_2_0= ruleSignalNotExpression )
                    {
                    // InternalSCEst.g:9537:5: (lv_subExpressions_2_0= ruleSignalNotExpression )
                    // InternalSCEst.g:9538:6: lv_subExpressions_2_0= ruleSignalNotExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSignalNotExpressionAccess().getSubExpressionsSignalNotExpressionParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_2_0=ruleSignalNotExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSignalNotExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_2_0,
                      							"de.cau.cs.kieler.esterel.Esterel.SignalNotExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCEst.g:9557:3: this_SignalAtomicExpression_3= ruleSignalAtomicExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSignalNotExpressionAccess().getSignalAtomicExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_SignalAtomicExpression_3=ruleSignalAtomicExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SignalAtomicExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSignalNotExpression"


    // $ANTLR start "entryRuleSignalAtomicExpression"
    // InternalSCEst.g:9572:1: entryRuleSignalAtomicExpression returns [EObject current=null] : iv_ruleSignalAtomicExpression= ruleSignalAtomicExpression EOF ;
    public final EObject entryRuleSignalAtomicExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSignalAtomicExpression = null;


        try {
            // InternalSCEst.g:9572:63: (iv_ruleSignalAtomicExpression= ruleSignalAtomicExpression EOF )
            // InternalSCEst.g:9573:2: iv_ruleSignalAtomicExpression= ruleSignalAtomicExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSignalAtomicExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSignalAtomicExpression=ruleSignalAtomicExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSignalAtomicExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSignalAtomicExpression"


    // $ANTLR start "ruleSignalAtomicExpression"
    // InternalSCEst.g:9579:1: ruleSignalAtomicExpression returns [EObject current=null] : ( (otherlv_0= '(' this_SignalExpression_1= ruleSignalExpression otherlv_2= ')' ) | this_SignalPreExpression_3= ruleSignalPreExpression | this_SignalOrTickReferenceExpression_4= ruleSignalOrTickReferenceExpression ) ;
    public final EObject ruleSignalAtomicExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject this_SignalExpression_1 = null;

        EObject this_SignalPreExpression_3 = null;

        EObject this_SignalOrTickReferenceExpression_4 = null;



        	enterRule();

        try {
            // InternalSCEst.g:9585:2: ( ( (otherlv_0= '(' this_SignalExpression_1= ruleSignalExpression otherlv_2= ')' ) | this_SignalPreExpression_3= ruleSignalPreExpression | this_SignalOrTickReferenceExpression_4= ruleSignalOrTickReferenceExpression ) )
            // InternalSCEst.g:9586:2: ( (otherlv_0= '(' this_SignalExpression_1= ruleSignalExpression otherlv_2= ')' ) | this_SignalPreExpression_3= ruleSignalPreExpression | this_SignalOrTickReferenceExpression_4= ruleSignalOrTickReferenceExpression )
            {
            // InternalSCEst.g:9586:2: ( (otherlv_0= '(' this_SignalExpression_1= ruleSignalExpression otherlv_2= ')' ) | this_SignalPreExpression_3= ruleSignalPreExpression | this_SignalOrTickReferenceExpression_4= ruleSignalOrTickReferenceExpression )
            int alt215=3;
            switch ( input.LA(1) ) {
            case 25:
                {
                alt215=1;
                }
                break;
            case 129:
                {
                alt215=2;
                }
                break;
            case RULE_ID:
            case 98:
                {
                alt215=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 215, 0, input);

                throw nvae;
            }

            switch (alt215) {
                case 1 :
                    // InternalSCEst.g:9587:3: (otherlv_0= '(' this_SignalExpression_1= ruleSignalExpression otherlv_2= ')' )
                    {
                    // InternalSCEst.g:9587:3: (otherlv_0= '(' this_SignalExpression_1= ruleSignalExpression otherlv_2= ')' )
                    // InternalSCEst.g:9588:4: otherlv_0= '(' this_SignalExpression_1= ruleSignalExpression otherlv_2= ')'
                    {
                    otherlv_0=(Token)match(input,25,FollowSets000.FOLLOW_64); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getSignalAtomicExpressionAccess().getLeftParenthesisKeyword_0_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSignalAtomicExpressionAccess().getSignalExpressionParserRuleCall_0_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_20);
                    this_SignalExpression_1=ruleSignalExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_SignalExpression_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_2=(Token)match(input,26,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getSignalAtomicExpressionAccess().getRightParenthesisKeyword_0_2());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCEst.g:9609:3: this_SignalPreExpression_3= ruleSignalPreExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSignalAtomicExpressionAccess().getSignalPreExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_SignalPreExpression_3=ruleSignalPreExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SignalPreExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCEst.g:9621:3: this_SignalOrTickReferenceExpression_4= ruleSignalOrTickReferenceExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSignalAtomicExpressionAccess().getSignalOrTickReferenceExpressionParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_SignalOrTickReferenceExpression_4=ruleSignalOrTickReferenceExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SignalOrTickReferenceExpression_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSignalAtomicExpression"


    // $ANTLR start "entryRuleSignalOrTickReferenceExpression"
    // InternalSCEst.g:9636:1: entryRuleSignalOrTickReferenceExpression returns [EObject current=null] : iv_ruleSignalOrTickReferenceExpression= ruleSignalOrTickReferenceExpression EOF ;
    public final EObject entryRuleSignalOrTickReferenceExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSignalOrTickReferenceExpression = null;


        try {
            // InternalSCEst.g:9636:72: (iv_ruleSignalOrTickReferenceExpression= ruleSignalOrTickReferenceExpression EOF )
            // InternalSCEst.g:9637:2: iv_ruleSignalOrTickReferenceExpression= ruleSignalOrTickReferenceExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSignalOrTickReferenceExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSignalOrTickReferenceExpression=ruleSignalOrTickReferenceExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSignalOrTickReferenceExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSignalOrTickReferenceExpression"


    // $ANTLR start "ruleSignalOrTickReferenceExpression"
    // InternalSCEst.g:9643:1: ruleSignalOrTickReferenceExpression returns [EObject current=null] : (this_SignalReferenceExpression_0= ruleSignalReferenceExpression | this_TickSignalExpression_1= ruleTickSignalExpression ) ;
    public final EObject ruleSignalOrTickReferenceExpression() throws RecognitionException {
        EObject current = null;

        EObject this_SignalReferenceExpression_0 = null;

        EObject this_TickSignalExpression_1 = null;



        	enterRule();

        try {
            // InternalSCEst.g:9649:2: ( (this_SignalReferenceExpression_0= ruleSignalReferenceExpression | this_TickSignalExpression_1= ruleTickSignalExpression ) )
            // InternalSCEst.g:9650:2: (this_SignalReferenceExpression_0= ruleSignalReferenceExpression | this_TickSignalExpression_1= ruleTickSignalExpression )
            {
            // InternalSCEst.g:9650:2: (this_SignalReferenceExpression_0= ruleSignalReferenceExpression | this_TickSignalExpression_1= ruleTickSignalExpression )
            int alt216=2;
            int LA216_0 = input.LA(1);

            if ( (LA216_0==RULE_ID) ) {
                alt216=1;
            }
            else if ( (LA216_0==98) ) {
                alt216=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 216, 0, input);

                throw nvae;
            }
            switch (alt216) {
                case 1 :
                    // InternalSCEst.g:9651:3: this_SignalReferenceExpression_0= ruleSignalReferenceExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSignalOrTickReferenceExpressionAccess().getSignalReferenceExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_SignalReferenceExpression_0=ruleSignalReferenceExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SignalReferenceExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCEst.g:9663:3: this_TickSignalExpression_1= ruleTickSignalExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSignalOrTickReferenceExpressionAccess().getTickSignalExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TickSignalExpression_1=ruleTickSignalExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TickSignalExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSignalOrTickReferenceExpression"


    // $ANTLR start "entryRuleSignalReferenceExpression"
    // InternalSCEst.g:9678:1: entryRuleSignalReferenceExpression returns [EObject current=null] : iv_ruleSignalReferenceExpression= ruleSignalReferenceExpression EOF ;
    public final EObject entryRuleSignalReferenceExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSignalReferenceExpression = null;


        try {
            // InternalSCEst.g:9678:66: (iv_ruleSignalReferenceExpression= ruleSignalReferenceExpression EOF )
            // InternalSCEst.g:9679:2: iv_ruleSignalReferenceExpression= ruleSignalReferenceExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSignalReferenceExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSignalReferenceExpression=ruleSignalReferenceExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSignalReferenceExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSignalReferenceExpression"


    // $ANTLR start "ruleSignalReferenceExpression"
    // InternalSCEst.g:9685:1: ruleSignalReferenceExpression returns [EObject current=null] : ( () ( (otherlv_1= RULE_ID ) ) ) ;
    public final EObject ruleSignalReferenceExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;


        	enterRule();

        try {
            // InternalSCEst.g:9691:2: ( ( () ( (otherlv_1= RULE_ID ) ) ) )
            // InternalSCEst.g:9692:2: ( () ( (otherlv_1= RULE_ID ) ) )
            {
            // InternalSCEst.g:9692:2: ( () ( (otherlv_1= RULE_ID ) ) )
            // InternalSCEst.g:9693:3: () ( (otherlv_1= RULE_ID ) )
            {
            // InternalSCEst.g:9693:3: ()
            // InternalSCEst.g:9694:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getSignalReferenceExpressionAccess().getSignalReferenceAction_0(),
              					current);
              			
            }

            }

            // InternalSCEst.g:9703:3: ( (otherlv_1= RULE_ID ) )
            // InternalSCEst.g:9704:4: (otherlv_1= RULE_ID )
            {
            // InternalSCEst.g:9704:4: (otherlv_1= RULE_ID )
            // InternalSCEst.g:9705:5: otherlv_1= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSignalReferenceExpressionRule());
              					}
              				
            }
            otherlv_1=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getSignalReferenceExpressionAccess().getValuedObjectSignalCrossReference_1_0());
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSignalReferenceExpression"


    // $ANTLR start "entryRuleTickSignalExpression"
    // InternalSCEst.g:9723:1: entryRuleTickSignalExpression returns [EObject current=null] : iv_ruleTickSignalExpression= ruleTickSignalExpression EOF ;
    public final EObject entryRuleTickSignalExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTickSignalExpression = null;


        try {
            // InternalSCEst.g:9723:61: (iv_ruleTickSignalExpression= ruleTickSignalExpression EOF )
            // InternalSCEst.g:9724:2: iv_ruleTickSignalExpression= ruleTickSignalExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTickSignalExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTickSignalExpression=ruleTickSignalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTickSignalExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTickSignalExpression"


    // $ANTLR start "ruleTickSignalExpression"
    // InternalSCEst.g:9730:1: ruleTickSignalExpression returns [EObject current=null] : ( () otherlv_1= 'tick' ) ;
    public final EObject ruleTickSignalExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;


        	enterRule();

        try {
            // InternalSCEst.g:9736:2: ( ( () otherlv_1= 'tick' ) )
            // InternalSCEst.g:9737:2: ( () otherlv_1= 'tick' )
            {
            // InternalSCEst.g:9737:2: ( () otherlv_1= 'tick' )
            // InternalSCEst.g:9738:3: () otherlv_1= 'tick'
            {
            // InternalSCEst.g:9738:3: ()
            // InternalSCEst.g:9739:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getTickSignalExpressionAccess().getTickReferenceAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,98,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getTickSignalExpressionAccess().getTickKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTickSignalExpression"


    // $ANTLR start "entryRuleSignalPreExpression"
    // InternalSCEst.g:9756:1: entryRuleSignalPreExpression returns [EObject current=null] : iv_ruleSignalPreExpression= ruleSignalPreExpression EOF ;
    public final EObject entryRuleSignalPreExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSignalPreExpression = null;


        try {
            // InternalSCEst.g:9756:60: (iv_ruleSignalPreExpression= ruleSignalPreExpression EOF )
            // InternalSCEst.g:9757:2: iv_ruleSignalPreExpression= ruleSignalPreExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSignalPreExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSignalPreExpression=ruleSignalPreExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSignalPreExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSignalPreExpression"


    // $ANTLR start "ruleSignalPreExpression"
    // InternalSCEst.g:9763:1: ruleSignalPreExpression returns [EObject current=null] : ( () ( (lv_operator_1_0= ruleEsterelPreOperator ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleSignalOrTickReferenceExpression ) ) otherlv_4= ')' ) ;
    public final EObject ruleSignalPreExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Enumerator lv_operator_1_0 = null;

        EObject lv_subExpressions_3_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:9769:2: ( ( () ( (lv_operator_1_0= ruleEsterelPreOperator ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleSignalOrTickReferenceExpression ) ) otherlv_4= ')' ) )
            // InternalSCEst.g:9770:2: ( () ( (lv_operator_1_0= ruleEsterelPreOperator ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleSignalOrTickReferenceExpression ) ) otherlv_4= ')' )
            {
            // InternalSCEst.g:9770:2: ( () ( (lv_operator_1_0= ruleEsterelPreOperator ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleSignalOrTickReferenceExpression ) ) otherlv_4= ')' )
            // InternalSCEst.g:9771:3: () ( (lv_operator_1_0= ruleEsterelPreOperator ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleSignalOrTickReferenceExpression ) ) otherlv_4= ')'
            {
            // InternalSCEst.g:9771:3: ()
            // InternalSCEst.g:9772:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getSignalPreExpressionAccess().getOperatorExpressionAction_0(),
              					current);
              			
            }

            }

            // InternalSCEst.g:9781:3: ( (lv_operator_1_0= ruleEsterelPreOperator ) )
            // InternalSCEst.g:9782:4: (lv_operator_1_0= ruleEsterelPreOperator )
            {
            // InternalSCEst.g:9782:4: (lv_operator_1_0= ruleEsterelPreOperator )
            // InternalSCEst.g:9783:5: lv_operator_1_0= ruleEsterelPreOperator
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSignalPreExpressionAccess().getOperatorEsterelPreOperatorEnumRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_19);
            lv_operator_1_0=ruleEsterelPreOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSignalPreExpressionRule());
              					}
              					set(
              						current,
              						"operator",
              						lv_operator_1_0,
              						"de.cau.cs.kieler.esterel.Esterel.EsterelPreOperator");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,25,FollowSets000.FOLLOW_128); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getSignalPreExpressionAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalSCEst.g:9804:3: ( (lv_subExpressions_3_0= ruleSignalOrTickReferenceExpression ) )
            // InternalSCEst.g:9805:4: (lv_subExpressions_3_0= ruleSignalOrTickReferenceExpression )
            {
            // InternalSCEst.g:9805:4: (lv_subExpressions_3_0= ruleSignalOrTickReferenceExpression )
            // InternalSCEst.g:9806:5: lv_subExpressions_3_0= ruleSignalOrTickReferenceExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSignalPreExpressionAccess().getSubExpressionsSignalOrTickReferenceExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_20);
            lv_subExpressions_3_0=ruleSignalOrTickReferenceExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSignalPreExpressionRule());
              					}
              					add(
              						current,
              						"subExpressions",
              						lv_subExpressions_3_0,
              						"de.cau.cs.kieler.esterel.Esterel.SignalOrTickReferenceExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,26,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getSignalPreExpressionAccess().getRightParenthesisKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSignalPreExpression"


    // $ANTLR start "entryRuleDelayExpression"
    // InternalSCEst.g:9831:1: entryRuleDelayExpression returns [EObject current=null] : iv_ruleDelayExpression= ruleDelayExpression EOF ;
    public final EObject entryRuleDelayExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDelayExpression = null;


        try {
            // InternalSCEst.g:9831:56: (iv_ruleDelayExpression= ruleDelayExpression EOF )
            // InternalSCEst.g:9832:2: iv_ruleDelayExpression= ruleDelayExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDelayExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDelayExpression=ruleDelayExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDelayExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDelayExpression"


    // $ANTLR start "ruleDelayExpression"
    // InternalSCEst.g:9838:1: ruleDelayExpression returns [EObject current=null] : ( ( ( (lv_delay_0_0= ruleExpression ) ) ( ( (lv_expression_1_0= ruleSignalOrTickReferenceExpression ) ) | ( (lv_expression_2_0= ruleSignalPreExpression ) ) | (otherlv_3= '[' ( (lv_expression_4_0= ruleSignalExpression ) ) otherlv_5= ']' ) ) ) | ( ( (lv_immediate_6_0= 'immediate' ) )? ( ( (lv_expression_7_0= ruleSignalOrTickReferenceExpression ) ) | ( (lv_expression_8_0= ruleSignalPreExpression ) ) | (otherlv_9= '[' ( (lv_expression_10_0= ruleSignalExpression ) ) otherlv_11= ']' ) ) ) ) ;
    public final EObject ruleDelayExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        Token otherlv_5=null;
        Token lv_immediate_6_0=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        EObject lv_delay_0_0 = null;

        EObject lv_expression_1_0 = null;

        EObject lv_expression_2_0 = null;

        EObject lv_expression_4_0 = null;

        EObject lv_expression_7_0 = null;

        EObject lv_expression_8_0 = null;

        EObject lv_expression_10_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:9844:2: ( ( ( ( (lv_delay_0_0= ruleExpression ) ) ( ( (lv_expression_1_0= ruleSignalOrTickReferenceExpression ) ) | ( (lv_expression_2_0= ruleSignalPreExpression ) ) | (otherlv_3= '[' ( (lv_expression_4_0= ruleSignalExpression ) ) otherlv_5= ']' ) ) ) | ( ( (lv_immediate_6_0= 'immediate' ) )? ( ( (lv_expression_7_0= ruleSignalOrTickReferenceExpression ) ) | ( (lv_expression_8_0= ruleSignalPreExpression ) ) | (otherlv_9= '[' ( (lv_expression_10_0= ruleSignalExpression ) ) otherlv_11= ']' ) ) ) ) )
            // InternalSCEst.g:9845:2: ( ( ( (lv_delay_0_0= ruleExpression ) ) ( ( (lv_expression_1_0= ruleSignalOrTickReferenceExpression ) ) | ( (lv_expression_2_0= ruleSignalPreExpression ) ) | (otherlv_3= '[' ( (lv_expression_4_0= ruleSignalExpression ) ) otherlv_5= ']' ) ) ) | ( ( (lv_immediate_6_0= 'immediate' ) )? ( ( (lv_expression_7_0= ruleSignalOrTickReferenceExpression ) ) | ( (lv_expression_8_0= ruleSignalPreExpression ) ) | (otherlv_9= '[' ( (lv_expression_10_0= ruleSignalExpression ) ) otherlv_11= ']' ) ) ) )
            {
            // InternalSCEst.g:9845:2: ( ( ( (lv_delay_0_0= ruleExpression ) ) ( ( (lv_expression_1_0= ruleSignalOrTickReferenceExpression ) ) | ( (lv_expression_2_0= ruleSignalPreExpression ) ) | (otherlv_3= '[' ( (lv_expression_4_0= ruleSignalExpression ) ) otherlv_5= ']' ) ) ) | ( ( (lv_immediate_6_0= 'immediate' ) )? ( ( (lv_expression_7_0= ruleSignalOrTickReferenceExpression ) ) | ( (lv_expression_8_0= ruleSignalPreExpression ) ) | (otherlv_9= '[' ( (lv_expression_10_0= ruleSignalExpression ) ) otherlv_11= ']' ) ) ) )
            int alt220=2;
            alt220 = dfa220.predict(input);
            switch (alt220) {
                case 1 :
                    // InternalSCEst.g:9846:3: ( ( (lv_delay_0_0= ruleExpression ) ) ( ( (lv_expression_1_0= ruleSignalOrTickReferenceExpression ) ) | ( (lv_expression_2_0= ruleSignalPreExpression ) ) | (otherlv_3= '[' ( (lv_expression_4_0= ruleSignalExpression ) ) otherlv_5= ']' ) ) )
                    {
                    // InternalSCEst.g:9846:3: ( ( (lv_delay_0_0= ruleExpression ) ) ( ( (lv_expression_1_0= ruleSignalOrTickReferenceExpression ) ) | ( (lv_expression_2_0= ruleSignalPreExpression ) ) | (otherlv_3= '[' ( (lv_expression_4_0= ruleSignalExpression ) ) otherlv_5= ']' ) ) )
                    // InternalSCEst.g:9847:4: ( (lv_delay_0_0= ruleExpression ) ) ( ( (lv_expression_1_0= ruleSignalOrTickReferenceExpression ) ) | ( (lv_expression_2_0= ruleSignalPreExpression ) ) | (otherlv_3= '[' ( (lv_expression_4_0= ruleSignalExpression ) ) otherlv_5= ']' ) )
                    {
                    // InternalSCEst.g:9847:4: ( (lv_delay_0_0= ruleExpression ) )
                    // InternalSCEst.g:9848:5: (lv_delay_0_0= ruleExpression )
                    {
                    // InternalSCEst.g:9848:5: (lv_delay_0_0= ruleExpression )
                    // InternalSCEst.g:9849:6: lv_delay_0_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDelayExpressionAccess().getDelayExpressionParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_135);
                    lv_delay_0_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDelayExpressionRule());
                      						}
                      						set(
                      							current,
                      							"delay",
                      							lv_delay_0_0,
                      							"de.cau.cs.kieler.esterel.Esterel.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCEst.g:9866:4: ( ( (lv_expression_1_0= ruleSignalOrTickReferenceExpression ) ) | ( (lv_expression_2_0= ruleSignalPreExpression ) ) | (otherlv_3= '[' ( (lv_expression_4_0= ruleSignalExpression ) ) otherlv_5= ']' ) )
                    int alt217=3;
                    switch ( input.LA(1) ) {
                    case RULE_ID:
                    case 98:
                        {
                        alt217=1;
                        }
                        break;
                    case 129:
                        {
                        alt217=2;
                        }
                        break;
                    case 49:
                        {
                        alt217=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 217, 0, input);

                        throw nvae;
                    }

                    switch (alt217) {
                        case 1 :
                            // InternalSCEst.g:9867:5: ( (lv_expression_1_0= ruleSignalOrTickReferenceExpression ) )
                            {
                            // InternalSCEst.g:9867:5: ( (lv_expression_1_0= ruleSignalOrTickReferenceExpression ) )
                            // InternalSCEst.g:9868:6: (lv_expression_1_0= ruleSignalOrTickReferenceExpression )
                            {
                            // InternalSCEst.g:9868:6: (lv_expression_1_0= ruleSignalOrTickReferenceExpression )
                            // InternalSCEst.g:9869:7: lv_expression_1_0= ruleSignalOrTickReferenceExpression
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getDelayExpressionAccess().getExpressionSignalOrTickReferenceExpressionParserRuleCall_0_1_0_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_expression_1_0=ruleSignalOrTickReferenceExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getDelayExpressionRule());
                              							}
                              							set(
                              								current,
                              								"expression",
                              								lv_expression_1_0,
                              								"de.cau.cs.kieler.esterel.Esterel.SignalOrTickReferenceExpression");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalSCEst.g:9887:5: ( (lv_expression_2_0= ruleSignalPreExpression ) )
                            {
                            // InternalSCEst.g:9887:5: ( (lv_expression_2_0= ruleSignalPreExpression ) )
                            // InternalSCEst.g:9888:6: (lv_expression_2_0= ruleSignalPreExpression )
                            {
                            // InternalSCEst.g:9888:6: (lv_expression_2_0= ruleSignalPreExpression )
                            // InternalSCEst.g:9889:7: lv_expression_2_0= ruleSignalPreExpression
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getDelayExpressionAccess().getExpressionSignalPreExpressionParserRuleCall_0_1_1_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_expression_2_0=ruleSignalPreExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getDelayExpressionRule());
                              							}
                              							set(
                              								current,
                              								"expression",
                              								lv_expression_2_0,
                              								"de.cau.cs.kieler.esterel.Esterel.SignalPreExpression");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalSCEst.g:9907:5: (otherlv_3= '[' ( (lv_expression_4_0= ruleSignalExpression ) ) otherlv_5= ']' )
                            {
                            // InternalSCEst.g:9907:5: (otherlv_3= '[' ( (lv_expression_4_0= ruleSignalExpression ) ) otherlv_5= ']' )
                            // InternalSCEst.g:9908:6: otherlv_3= '[' ( (lv_expression_4_0= ruleSignalExpression ) ) otherlv_5= ']'
                            {
                            otherlv_3=(Token)match(input,49,FollowSets000.FOLLOW_64); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_3, grammarAccess.getDelayExpressionAccess().getLeftSquareBracketKeyword_0_1_2_0());
                              					
                            }
                            // InternalSCEst.g:9912:6: ( (lv_expression_4_0= ruleSignalExpression ) )
                            // InternalSCEst.g:9913:7: (lv_expression_4_0= ruleSignalExpression )
                            {
                            // InternalSCEst.g:9913:7: (lv_expression_4_0= ruleSignalExpression )
                            // InternalSCEst.g:9914:8: lv_expression_4_0= ruleSignalExpression
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getDelayExpressionAccess().getExpressionSignalExpressionParserRuleCall_0_1_2_1_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_54);
                            lv_expression_4_0=ruleSignalExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getDelayExpressionRule());
                              								}
                              								set(
                              									current,
                              									"expression",
                              									lv_expression_4_0,
                              									"de.cau.cs.kieler.esterel.Esterel.SignalExpression");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_5=(Token)match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_5, grammarAccess.getDelayExpressionAccess().getRightSquareBracketKeyword_0_1_2_2());
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCEst.g:9939:3: ( ( (lv_immediate_6_0= 'immediate' ) )? ( ( (lv_expression_7_0= ruleSignalOrTickReferenceExpression ) ) | ( (lv_expression_8_0= ruleSignalPreExpression ) ) | (otherlv_9= '[' ( (lv_expression_10_0= ruleSignalExpression ) ) otherlv_11= ']' ) ) )
                    {
                    // InternalSCEst.g:9939:3: ( ( (lv_immediate_6_0= 'immediate' ) )? ( ( (lv_expression_7_0= ruleSignalOrTickReferenceExpression ) ) | ( (lv_expression_8_0= ruleSignalPreExpression ) ) | (otherlv_9= '[' ( (lv_expression_10_0= ruleSignalExpression ) ) otherlv_11= ']' ) ) )
                    // InternalSCEst.g:9940:4: ( (lv_immediate_6_0= 'immediate' ) )? ( ( (lv_expression_7_0= ruleSignalOrTickReferenceExpression ) ) | ( (lv_expression_8_0= ruleSignalPreExpression ) ) | (otherlv_9= '[' ( (lv_expression_10_0= ruleSignalExpression ) ) otherlv_11= ']' ) )
                    {
                    // InternalSCEst.g:9940:4: ( (lv_immediate_6_0= 'immediate' ) )?
                    int alt218=2;
                    int LA218_0 = input.LA(1);

                    if ( (LA218_0==99) ) {
                        alt218=1;
                    }
                    switch (alt218) {
                        case 1 :
                            // InternalSCEst.g:9941:5: (lv_immediate_6_0= 'immediate' )
                            {
                            // InternalSCEst.g:9941:5: (lv_immediate_6_0= 'immediate' )
                            // InternalSCEst.g:9942:6: lv_immediate_6_0= 'immediate'
                            {
                            lv_immediate_6_0=(Token)match(input,99,FollowSets000.FOLLOW_135); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_immediate_6_0, grammarAccess.getDelayExpressionAccess().getImmediateImmediateKeyword_1_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getDelayExpressionRule());
                              						}
                              						setWithLastConsumed(current, "immediate", true, "immediate");
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSCEst.g:9954:4: ( ( (lv_expression_7_0= ruleSignalOrTickReferenceExpression ) ) | ( (lv_expression_8_0= ruleSignalPreExpression ) ) | (otherlv_9= '[' ( (lv_expression_10_0= ruleSignalExpression ) ) otherlv_11= ']' ) )
                    int alt219=3;
                    switch ( input.LA(1) ) {
                    case RULE_ID:
                    case 98:
                        {
                        alt219=1;
                        }
                        break;
                    case 129:
                        {
                        alt219=2;
                        }
                        break;
                    case 49:
                        {
                        alt219=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 219, 0, input);

                        throw nvae;
                    }

                    switch (alt219) {
                        case 1 :
                            // InternalSCEst.g:9955:5: ( (lv_expression_7_0= ruleSignalOrTickReferenceExpression ) )
                            {
                            // InternalSCEst.g:9955:5: ( (lv_expression_7_0= ruleSignalOrTickReferenceExpression ) )
                            // InternalSCEst.g:9956:6: (lv_expression_7_0= ruleSignalOrTickReferenceExpression )
                            {
                            // InternalSCEst.g:9956:6: (lv_expression_7_0= ruleSignalOrTickReferenceExpression )
                            // InternalSCEst.g:9957:7: lv_expression_7_0= ruleSignalOrTickReferenceExpression
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getDelayExpressionAccess().getExpressionSignalOrTickReferenceExpressionParserRuleCall_1_1_0_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_expression_7_0=ruleSignalOrTickReferenceExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getDelayExpressionRule());
                              							}
                              							set(
                              								current,
                              								"expression",
                              								lv_expression_7_0,
                              								"de.cau.cs.kieler.esterel.Esterel.SignalOrTickReferenceExpression");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalSCEst.g:9975:5: ( (lv_expression_8_0= ruleSignalPreExpression ) )
                            {
                            // InternalSCEst.g:9975:5: ( (lv_expression_8_0= ruleSignalPreExpression ) )
                            // InternalSCEst.g:9976:6: (lv_expression_8_0= ruleSignalPreExpression )
                            {
                            // InternalSCEst.g:9976:6: (lv_expression_8_0= ruleSignalPreExpression )
                            // InternalSCEst.g:9977:7: lv_expression_8_0= ruleSignalPreExpression
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getDelayExpressionAccess().getExpressionSignalPreExpressionParserRuleCall_1_1_1_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_expression_8_0=ruleSignalPreExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getDelayExpressionRule());
                              							}
                              							set(
                              								current,
                              								"expression",
                              								lv_expression_8_0,
                              								"de.cau.cs.kieler.esterel.Esterel.SignalPreExpression");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalSCEst.g:9995:5: (otherlv_9= '[' ( (lv_expression_10_0= ruleSignalExpression ) ) otherlv_11= ']' )
                            {
                            // InternalSCEst.g:9995:5: (otherlv_9= '[' ( (lv_expression_10_0= ruleSignalExpression ) ) otherlv_11= ']' )
                            // InternalSCEst.g:9996:6: otherlv_9= '[' ( (lv_expression_10_0= ruleSignalExpression ) ) otherlv_11= ']'
                            {
                            otherlv_9=(Token)match(input,49,FollowSets000.FOLLOW_64); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_9, grammarAccess.getDelayExpressionAccess().getLeftSquareBracketKeyword_1_1_2_0());
                              					
                            }
                            // InternalSCEst.g:10000:6: ( (lv_expression_10_0= ruleSignalExpression ) )
                            // InternalSCEst.g:10001:7: (lv_expression_10_0= ruleSignalExpression )
                            {
                            // InternalSCEst.g:10001:7: (lv_expression_10_0= ruleSignalExpression )
                            // InternalSCEst.g:10002:8: lv_expression_10_0= ruleSignalExpression
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getDelayExpressionAccess().getExpressionSignalExpressionParserRuleCall_1_1_2_1_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_54);
                            lv_expression_10_0=ruleSignalExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getDelayExpressionRule());
                              								}
                              								set(
                              									current,
                              									"expression",
                              									lv_expression_10_0,
                              									"de.cau.cs.kieler.esterel.Esterel.SignalExpression");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_11=(Token)match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_11, grammarAccess.getDelayExpressionAccess().getRightSquareBracketKeyword_1_1_2_2());
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDelayExpression"


    // $ANTLR start "entryRuleExpression"
    // InternalSCEst.g:10030:1: entryRuleExpression returns [EObject current=null] : iv_ruleExpression= ruleExpression EOF ;
    public final EObject entryRuleExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpression = null;


        try {
            // InternalSCEst.g:10030:51: (iv_ruleExpression= ruleExpression EOF )
            // InternalSCEst.g:10031:2: iv_ruleExpression= ruleExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleExpression=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpression"


    // $ANTLR start "ruleExpression"
    // InternalSCEst.g:10037:1: ruleExpression returns [EObject current=null] : (this_BooleanExpression_0= ruleBooleanExpression | this_ValuedExpression_1= ruleValuedExpression ) ;
    public final EObject ruleExpression() throws RecognitionException {
        EObject current = null;

        EObject this_BooleanExpression_0 = null;

        EObject this_ValuedExpression_1 = null;



        	enterRule();

        try {
            // InternalSCEst.g:10043:2: ( (this_BooleanExpression_0= ruleBooleanExpression | this_ValuedExpression_1= ruleValuedExpression ) )
            // InternalSCEst.g:10044:2: (this_BooleanExpression_0= ruleBooleanExpression | this_ValuedExpression_1= ruleValuedExpression )
            {
            // InternalSCEst.g:10044:2: (this_BooleanExpression_0= ruleBooleanExpression | this_ValuedExpression_1= ruleValuedExpression )
            int alt221=2;
            alt221 = dfa221.predict(input);
            switch (alt221) {
                case 1 :
                    // InternalSCEst.g:10045:3: this_BooleanExpression_0= ruleBooleanExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getExpressionAccess().getBooleanExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_BooleanExpression_0=ruleBooleanExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BooleanExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCEst.g:10057:3: this_ValuedExpression_1= ruleValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getExpressionAccess().getValuedExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedExpression_1=ruleValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ValuedExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpression"


    // $ANTLR start "entryRuleBooleanExpression"
    // InternalSCEst.g:10072:1: entryRuleBooleanExpression returns [EObject current=null] : iv_ruleBooleanExpression= ruleBooleanExpression EOF ;
    public final EObject entryRuleBooleanExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBooleanExpression = null;


        try {
            // InternalSCEst.g:10072:58: (iv_ruleBooleanExpression= ruleBooleanExpression EOF )
            // InternalSCEst.g:10073:2: iv_ruleBooleanExpression= ruleBooleanExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBooleanExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBooleanExpression=ruleBooleanExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBooleanExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBooleanExpression"


    // $ANTLR start "ruleBooleanExpression"
    // InternalSCEst.g:10079:1: ruleBooleanExpression returns [EObject current=null] : this_OrExpression_0= ruleOrExpression ;
    public final EObject ruleBooleanExpression() throws RecognitionException {
        EObject current = null;

        EObject this_OrExpression_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:10085:2: (this_OrExpression_0= ruleOrExpression )
            // InternalSCEst.g:10086:2: this_OrExpression_0= ruleOrExpression
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getBooleanExpressionAccess().getOrExpressionParserRuleCall());
              	
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_OrExpression_0=ruleOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_OrExpression_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBooleanExpression"


    // $ANTLR start "entryRuleOrExpression"
    // InternalSCEst.g:10100:1: entryRuleOrExpression returns [EObject current=null] : iv_ruleOrExpression= ruleOrExpression EOF ;
    public final EObject entryRuleOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOrExpression = null;


        try {
            // InternalSCEst.g:10100:53: (iv_ruleOrExpression= ruleOrExpression EOF )
            // InternalSCEst.g:10101:2: iv_ruleOrExpression= ruleOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOrExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleOrExpression=ruleOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOrExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOrExpression"


    // $ANTLR start "ruleOrExpression"
    // InternalSCEst.g:10107:1: ruleOrExpression returns [EObject current=null] : (this_AndExpression_0= ruleAndExpression ( () ( ( (lv_operator_2_0= ruleEsterelOrOperator ) ) ( (lv_subExpressions_3_0= ruleAndExpression ) ) )+ )? ) ;
    public final EObject ruleOrExpression() throws RecognitionException {
        EObject current = null;

        EObject this_AndExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:10113:2: ( (this_AndExpression_0= ruleAndExpression ( () ( ( (lv_operator_2_0= ruleEsterelOrOperator ) ) ( (lv_subExpressions_3_0= ruleAndExpression ) ) )+ )? ) )
            // InternalSCEst.g:10114:2: (this_AndExpression_0= ruleAndExpression ( () ( ( (lv_operator_2_0= ruleEsterelOrOperator ) ) ( (lv_subExpressions_3_0= ruleAndExpression ) ) )+ )? )
            {
            // InternalSCEst.g:10114:2: (this_AndExpression_0= ruleAndExpression ( () ( ( (lv_operator_2_0= ruleEsterelOrOperator ) ) ( (lv_subExpressions_3_0= ruleAndExpression ) ) )+ )? )
            // InternalSCEst.g:10115:3: this_AndExpression_0= ruleAndExpression ( () ( ( (lv_operator_2_0= ruleEsterelOrOperator ) ) ( (lv_subExpressions_3_0= ruleAndExpression ) ) )+ )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_132);
            this_AndExpression_0=ruleAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AndExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCEst.g:10126:3: ( () ( ( (lv_operator_2_0= ruleEsterelOrOperator ) ) ( (lv_subExpressions_3_0= ruleAndExpression ) ) )+ )?
            int alt223=2;
            int LA223_0 = input.LA(1);

            if ( (LA223_0==93) ) {
                alt223=1;
            }
            switch (alt223) {
                case 1 :
                    // InternalSCEst.g:10127:4: () ( ( (lv_operator_2_0= ruleEsterelOrOperator ) ) ( (lv_subExpressions_3_0= ruleAndExpression ) ) )+
                    {
                    // InternalSCEst.g:10127:4: ()
                    // InternalSCEst.g:10128:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getOrExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCEst.g:10137:4: ( ( (lv_operator_2_0= ruleEsterelOrOperator ) ) ( (lv_subExpressions_3_0= ruleAndExpression ) ) )+
                    int cnt222=0;
                    loop222:
                    do {
                        int alt222=2;
                        int LA222_0 = input.LA(1);

                        if ( (LA222_0==93) ) {
                            alt222=1;
                        }


                        switch (alt222) {
                    	case 1 :
                    	    // InternalSCEst.g:10138:5: ( (lv_operator_2_0= ruleEsterelOrOperator ) ) ( (lv_subExpressions_3_0= ruleAndExpression ) )
                    	    {
                    	    // InternalSCEst.g:10138:5: ( (lv_operator_2_0= ruleEsterelOrOperator ) )
                    	    // InternalSCEst.g:10139:6: (lv_operator_2_0= ruleEsterelOrOperator )
                    	    {
                    	    // InternalSCEst.g:10139:6: (lv_operator_2_0= ruleEsterelOrOperator )
                    	    // InternalSCEst.g:10140:7: lv_operator_2_0= ruleEsterelOrOperator
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getOrExpressionAccess().getOperatorEsterelOrOperatorEnumRuleCall_1_1_0_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_16);
                    	    lv_operator_2_0=ruleEsterelOrOperator();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getOrExpressionRule());
                    	      							}
                    	      							set(
                    	      								current,
                    	      								"operator",
                    	      								lv_operator_2_0,
                    	      								"de.cau.cs.kieler.esterel.Esterel.EsterelOrOperator");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }

                    	    // InternalSCEst.g:10157:5: ( (lv_subExpressions_3_0= ruleAndExpression ) )
                    	    // InternalSCEst.g:10158:6: (lv_subExpressions_3_0= ruleAndExpression )
                    	    {
                    	    // InternalSCEst.g:10158:6: (lv_subExpressions_3_0= ruleAndExpression )
                    	    // InternalSCEst.g:10159:7: lv_subExpressions_3_0= ruleAndExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getOrExpressionAccess().getSubExpressionsAndExpressionParserRuleCall_1_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_132);
                    	    lv_subExpressions_3_0=ruleAndExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getOrExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_3_0,
                    	      								"de.cau.cs.kieler.esterel.Esterel.AndExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt222 >= 1 ) break loop222;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(222, input);
                                throw eee;
                        }
                        cnt222++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOrExpression"


    // $ANTLR start "entryRuleAndExpression"
    // InternalSCEst.g:10182:1: entryRuleAndExpression returns [EObject current=null] : iv_ruleAndExpression= ruleAndExpression EOF ;
    public final EObject entryRuleAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAndExpression = null;


        try {
            // InternalSCEst.g:10182:54: (iv_ruleAndExpression= ruleAndExpression EOF )
            // InternalSCEst.g:10183:2: iv_ruleAndExpression= ruleAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAndExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAndExpression=ruleAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAndExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAndExpression"


    // $ANTLR start "ruleAndExpression"
    // InternalSCEst.g:10189:1: ruleAndExpression returns [EObject current=null] : (this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleEsterelAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) )+ )? ) ;
    public final EObject ruleAndExpression() throws RecognitionException {
        EObject current = null;

        EObject this_CompareOperation_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:10195:2: ( (this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleEsterelAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) )+ )? ) )
            // InternalSCEst.g:10196:2: (this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleEsterelAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) )+ )? )
            {
            // InternalSCEst.g:10196:2: (this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleEsterelAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) )+ )? )
            // InternalSCEst.g:10197:3: this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleEsterelAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) )+ )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAndExpressionAccess().getCompareOperationParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_133);
            this_CompareOperation_0=ruleCompareOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_CompareOperation_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCEst.g:10208:3: ( () ( ( (lv_operator_2_0= ruleEsterelAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) )+ )?
            int alt225=2;
            int LA225_0 = input.LA(1);

            if ( (LA225_0==92) ) {
                alt225=1;
            }
            switch (alt225) {
                case 1 :
                    // InternalSCEst.g:10209:4: () ( ( (lv_operator_2_0= ruleEsterelAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) )+
                    {
                    // InternalSCEst.g:10209:4: ()
                    // InternalSCEst.g:10210:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getAndExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCEst.g:10219:4: ( ( (lv_operator_2_0= ruleEsterelAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) )+
                    int cnt224=0;
                    loop224:
                    do {
                        int alt224=2;
                        int LA224_0 = input.LA(1);

                        if ( (LA224_0==92) ) {
                            alt224=1;
                        }


                        switch (alt224) {
                    	case 1 :
                    	    // InternalSCEst.g:10220:5: ( (lv_operator_2_0= ruleEsterelAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) )
                    	    {
                    	    // InternalSCEst.g:10220:5: ( (lv_operator_2_0= ruleEsterelAndOperator ) )
                    	    // InternalSCEst.g:10221:6: (lv_operator_2_0= ruleEsterelAndOperator )
                    	    {
                    	    // InternalSCEst.g:10221:6: (lv_operator_2_0= ruleEsterelAndOperator )
                    	    // InternalSCEst.g:10222:7: lv_operator_2_0= ruleEsterelAndOperator
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAndExpressionAccess().getOperatorEsterelAndOperatorEnumRuleCall_1_1_0_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_16);
                    	    lv_operator_2_0=ruleEsterelAndOperator();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAndExpressionRule());
                    	      							}
                    	      							set(
                    	      								current,
                    	      								"operator",
                    	      								lv_operator_2_0,
                    	      								"de.cau.cs.kieler.esterel.Esterel.EsterelAndOperator");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }

                    	    // InternalSCEst.g:10239:5: ( (lv_subExpressions_3_0= ruleCompareOperation ) )
                    	    // InternalSCEst.g:10240:6: (lv_subExpressions_3_0= ruleCompareOperation )
                    	    {
                    	    // InternalSCEst.g:10240:6: (lv_subExpressions_3_0= ruleCompareOperation )
                    	    // InternalSCEst.g:10241:7: lv_subExpressions_3_0= ruleCompareOperation
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAndExpressionAccess().getSubExpressionsCompareOperationParserRuleCall_1_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_133);
                    	    lv_subExpressions_3_0=ruleCompareOperation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAndExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_3_0,
                    	      								"de.cau.cs.kieler.esterel.Esterel.CompareOperation");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt224 >= 1 ) break loop224;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(224, input);
                                throw eee;
                        }
                        cnt224++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAndExpression"


    // $ANTLR start "entryRuleCompareOperation"
    // InternalSCEst.g:10264:1: entryRuleCompareOperation returns [EObject current=null] : iv_ruleCompareOperation= ruleCompareOperation EOF ;
    public final EObject entryRuleCompareOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCompareOperation = null;


        try {
            // InternalSCEst.g:10264:57: (iv_ruleCompareOperation= ruleCompareOperation EOF )
            // InternalSCEst.g:10265:2: iv_ruleCompareOperation= ruleCompareOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCompareOperationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCompareOperation=ruleCompareOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCompareOperation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCompareOperation"


    // $ANTLR start "ruleCompareOperation"
    // InternalSCEst.g:10271:1: ruleCompareOperation returns [EObject current=null] : (this_NotOrValuedExpression_0= ruleNotOrValuedExpression ( () ( (lv_operator_2_0= ruleEsterelCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )? ) ;
    public final EObject ruleCompareOperation() throws RecognitionException {
        EObject current = null;

        EObject this_NotOrValuedExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:10277:2: ( (this_NotOrValuedExpression_0= ruleNotOrValuedExpression ( () ( (lv_operator_2_0= ruleEsterelCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )? ) )
            // InternalSCEst.g:10278:2: (this_NotOrValuedExpression_0= ruleNotOrValuedExpression ( () ( (lv_operator_2_0= ruleEsterelCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )? )
            {
            // InternalSCEst.g:10278:2: (this_NotOrValuedExpression_0= ruleNotOrValuedExpression ( () ( (lv_operator_2_0= ruleEsterelCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )? )
            // InternalSCEst.g:10279:3: this_NotOrValuedExpression_0= ruleNotOrValuedExpression ( () ( (lv_operator_2_0= ruleEsterelCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getCompareOperationAccess().getNotOrValuedExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_136);
            this_NotOrValuedExpression_0=ruleNotOrValuedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_NotOrValuedExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCEst.g:10290:3: ( () ( (lv_operator_2_0= ruleEsterelCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )?
            int alt226=2;
            int LA226_0 = input.LA(1);

            if ( (LA226_0==32||(LA226_0>=86 && LA226_0<=90)) ) {
                alt226=1;
            }
            switch (alt226) {
                case 1 :
                    // InternalSCEst.g:10291:4: () ( (lv_operator_2_0= ruleEsterelCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) )
                    {
                    // InternalSCEst.g:10291:4: ()
                    // InternalSCEst.g:10292:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getCompareOperationAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCEst.g:10301:4: ( (lv_operator_2_0= ruleEsterelCompareOperator ) )
                    // InternalSCEst.g:10302:5: (lv_operator_2_0= ruleEsterelCompareOperator )
                    {
                    // InternalSCEst.g:10302:5: (lv_operator_2_0= ruleEsterelCompareOperator )
                    // InternalSCEst.g:10303:6: lv_operator_2_0= ruleEsterelCompareOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getCompareOperationAccess().getOperatorEsterelCompareOperatorEnumRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_16);
                    lv_operator_2_0=ruleEsterelCompareOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getCompareOperationRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_2_0,
                      							"de.cau.cs.kieler.esterel.Esterel.EsterelCompareOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCEst.g:10320:4: ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) )
                    // InternalSCEst.g:10321:5: (lv_subExpressions_3_0= ruleNotOrValuedExpression )
                    {
                    // InternalSCEst.g:10321:5: (lv_subExpressions_3_0= ruleNotOrValuedExpression )
                    // InternalSCEst.g:10322:6: lv_subExpressions_3_0= ruleNotOrValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getCompareOperationAccess().getSubExpressionsNotOrValuedExpressionParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_3_0=ruleNotOrValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getCompareOperationRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_3_0,
                      							"de.cau.cs.kieler.esterel.Esterel.NotOrValuedExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCompareOperation"


    // $ANTLR start "entryRuleNotOrValuedExpression"
    // InternalSCEst.g:10344:1: entryRuleNotOrValuedExpression returns [EObject current=null] : iv_ruleNotOrValuedExpression= ruleNotOrValuedExpression EOF ;
    public final EObject entryRuleNotOrValuedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNotOrValuedExpression = null;


        try {
            // InternalSCEst.g:10344:62: (iv_ruleNotOrValuedExpression= ruleNotOrValuedExpression EOF )
            // InternalSCEst.g:10345:2: iv_ruleNotOrValuedExpression= ruleNotOrValuedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNotOrValuedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNotOrValuedExpression=ruleNotOrValuedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNotOrValuedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNotOrValuedExpression"


    // $ANTLR start "ruleNotOrValuedExpression"
    // InternalSCEst.g:10351:1: ruleNotOrValuedExpression returns [EObject current=null] : (this_ValuedExpression_0= ruleValuedExpression | this_NotExpression_1= ruleNotExpression ) ;
    public final EObject ruleNotOrValuedExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ValuedExpression_0 = null;

        EObject this_NotExpression_1 = null;



        	enterRule();

        try {
            // InternalSCEst.g:10357:2: ( (this_ValuedExpression_0= ruleValuedExpression | this_NotExpression_1= ruleNotExpression ) )
            // InternalSCEst.g:10358:2: (this_ValuedExpression_0= ruleValuedExpression | this_NotExpression_1= ruleNotExpression )
            {
            // InternalSCEst.g:10358:2: (this_ValuedExpression_0= ruleValuedExpression | this_NotExpression_1= ruleNotExpression )
            int alt227=2;
            alt227 = dfa227.predict(input);
            switch (alt227) {
                case 1 :
                    // InternalSCEst.g:10359:3: this_ValuedExpression_0= ruleValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNotOrValuedExpressionAccess().getValuedExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedExpression_0=ruleValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ValuedExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCEst.g:10371:3: this_NotExpression_1= ruleNotExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNotOrValuedExpressionAccess().getNotExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_NotExpression_1=ruleNotExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NotExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNotOrValuedExpression"


    // $ANTLR start "entryRuleNotExpression"
    // InternalSCEst.g:10386:1: entryRuleNotExpression returns [EObject current=null] : iv_ruleNotExpression= ruleNotExpression EOF ;
    public final EObject entryRuleNotExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNotExpression = null;


        try {
            // InternalSCEst.g:10386:54: (iv_ruleNotExpression= ruleNotExpression EOF )
            // InternalSCEst.g:10387:2: iv_ruleNotExpression= ruleNotExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNotExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNotExpression=ruleNotExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNotExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNotExpression"


    // $ANTLR start "ruleNotExpression"
    // InternalSCEst.g:10393:1: ruleNotExpression returns [EObject current=null] : ( ( () ( (lv_operator_1_0= ruleEsterelNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) ) | this_AtomicExpression_3= ruleAtomicExpression ) ;
    public final EObject ruleNotExpression() throws RecognitionException {
        EObject current = null;

        Enumerator lv_operator_1_0 = null;

        EObject lv_subExpressions_2_0 = null;

        EObject this_AtomicExpression_3 = null;



        	enterRule();

        try {
            // InternalSCEst.g:10399:2: ( ( ( () ( (lv_operator_1_0= ruleEsterelNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) ) | this_AtomicExpression_3= ruleAtomicExpression ) )
            // InternalSCEst.g:10400:2: ( ( () ( (lv_operator_1_0= ruleEsterelNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) ) | this_AtomicExpression_3= ruleAtomicExpression )
            {
            // InternalSCEst.g:10400:2: ( ( () ( (lv_operator_1_0= ruleEsterelNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) ) | this_AtomicExpression_3= ruleAtomicExpression )
            int alt228=2;
            int LA228_0 = input.LA(1);

            if ( (LA228_0==91) ) {
                alt228=1;
            }
            else if ( ((LA228_0>=RULE_ID && LA228_0<=RULE_COMMENT_ANNOTATION)||LA228_0==25||(LA228_0>=97 && LA228_0<=98)||LA228_0==117||(LA228_0>=128 && LA228_0<=130)) ) {
                alt228=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 228, 0, input);

                throw nvae;
            }
            switch (alt228) {
                case 1 :
                    // InternalSCEst.g:10401:3: ( () ( (lv_operator_1_0= ruleEsterelNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) )
                    {
                    // InternalSCEst.g:10401:3: ( () ( (lv_operator_1_0= ruleEsterelNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) )
                    // InternalSCEst.g:10402:4: () ( (lv_operator_1_0= ruleEsterelNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) )
                    {
                    // InternalSCEst.g:10402:4: ()
                    // InternalSCEst.g:10403:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getNotExpressionAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCEst.g:10412:4: ( (lv_operator_1_0= ruleEsterelNotOperator ) )
                    // InternalSCEst.g:10413:5: (lv_operator_1_0= ruleEsterelNotOperator )
                    {
                    // InternalSCEst.g:10413:5: (lv_operator_1_0= ruleEsterelNotOperator )
                    // InternalSCEst.g:10414:6: lv_operator_1_0= ruleEsterelNotOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNotExpressionAccess().getOperatorEsterelNotOperatorEnumRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_16);
                    lv_operator_1_0=ruleEsterelNotOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNotExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_1_0,
                      							"de.cau.cs.kieler.esterel.Esterel.EsterelNotOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCEst.g:10431:4: ( (lv_subExpressions_2_0= ruleNotExpression ) )
                    // InternalSCEst.g:10432:5: (lv_subExpressions_2_0= ruleNotExpression )
                    {
                    // InternalSCEst.g:10432:5: (lv_subExpressions_2_0= ruleNotExpression )
                    // InternalSCEst.g:10433:6: lv_subExpressions_2_0= ruleNotExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNotExpressionAccess().getSubExpressionsNotExpressionParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_2_0=ruleNotExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNotExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_2_0,
                      							"de.cau.cs.kieler.esterel.Esterel.NotExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCEst.g:10452:3: this_AtomicExpression_3= ruleAtomicExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNotExpressionAccess().getAtomicExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AtomicExpression_3=ruleAtomicExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AtomicExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNotExpression"


    // $ANTLR start "entryRuleValuedExpression"
    // InternalSCEst.g:10467:1: entryRuleValuedExpression returns [EObject current=null] : iv_ruleValuedExpression= ruleValuedExpression EOF ;
    public final EObject entryRuleValuedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValuedExpression = null;


        try {
            // InternalSCEst.g:10467:57: (iv_ruleValuedExpression= ruleValuedExpression EOF )
            // InternalSCEst.g:10468:2: iv_ruleValuedExpression= ruleValuedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValuedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleValuedExpression=ruleValuedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValuedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValuedExpression"


    // $ANTLR start "ruleValuedExpression"
    // InternalSCEst.g:10474:1: ruleValuedExpression returns [EObject current=null] : this_AddExpression_0= ruleAddExpression ;
    public final EObject ruleValuedExpression() throws RecognitionException {
        EObject current = null;

        EObject this_AddExpression_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:10480:2: (this_AddExpression_0= ruleAddExpression )
            // InternalSCEst.g:10481:2: this_AddExpression_0= ruleAddExpression
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getValuedExpressionAccess().getAddExpressionParserRuleCall());
              	
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_AddExpression_0=ruleAddExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_AddExpression_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValuedExpression"


    // $ANTLR start "entryRuleAddExpression"
    // InternalSCEst.g:10495:1: entryRuleAddExpression returns [EObject current=null] : iv_ruleAddExpression= ruleAddExpression EOF ;
    public final EObject entryRuleAddExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAddExpression = null;


        try {
            // InternalSCEst.g:10495:54: (iv_ruleAddExpression= ruleAddExpression EOF )
            // InternalSCEst.g:10496:2: iv_ruleAddExpression= ruleAddExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAddExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAddExpression=ruleAddExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAddExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAddExpression"


    // $ANTLR start "ruleAddExpression"
    // InternalSCEst.g:10502:1: ruleAddExpression returns [EObject current=null] : (this_SubExpression_0= ruleSubExpression ( () ( ( (lv_operator_2_0= ruleEsterelAddOperator ) ) ( (lv_subExpressions_3_0= ruleSubExpression ) ) )+ )? ) ;
    public final EObject ruleAddExpression() throws RecognitionException {
        EObject current = null;

        EObject this_SubExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:10508:2: ( (this_SubExpression_0= ruleSubExpression ( () ( ( (lv_operator_2_0= ruleEsterelAddOperator ) ) ( (lv_subExpressions_3_0= ruleSubExpression ) ) )+ )? ) )
            // InternalSCEst.g:10509:2: (this_SubExpression_0= ruleSubExpression ( () ( ( (lv_operator_2_0= ruleEsterelAddOperator ) ) ( (lv_subExpressions_3_0= ruleSubExpression ) ) )+ )? )
            {
            // InternalSCEst.g:10509:2: (this_SubExpression_0= ruleSubExpression ( () ( ( (lv_operator_2_0= ruleEsterelAddOperator ) ) ( (lv_subExpressions_3_0= ruleSubExpression ) ) )+ )? )
            // InternalSCEst.g:10510:3: this_SubExpression_0= ruleSubExpression ( () ( ( (lv_operator_2_0= ruleEsterelAddOperator ) ) ( (lv_subExpressions_3_0= ruleSubExpression ) ) )+ )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAddExpressionAccess().getSubExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_137);
            this_SubExpression_0=ruleSubExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_SubExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCEst.g:10521:3: ( () ( ( (lv_operator_2_0= ruleEsterelAddOperator ) ) ( (lv_subExpressions_3_0= ruleSubExpression ) ) )+ )?
            int alt230=2;
            int LA230_0 = input.LA(1);

            if ( (LA230_0==83) ) {
                alt230=1;
            }
            switch (alt230) {
                case 1 :
                    // InternalSCEst.g:10522:4: () ( ( (lv_operator_2_0= ruleEsterelAddOperator ) ) ( (lv_subExpressions_3_0= ruleSubExpression ) ) )+
                    {
                    // InternalSCEst.g:10522:4: ()
                    // InternalSCEst.g:10523:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getAddExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCEst.g:10532:4: ( ( (lv_operator_2_0= ruleEsterelAddOperator ) ) ( (lv_subExpressions_3_0= ruleSubExpression ) ) )+
                    int cnt229=0;
                    loop229:
                    do {
                        int alt229=2;
                        int LA229_0 = input.LA(1);

                        if ( (LA229_0==83) ) {
                            alt229=1;
                        }


                        switch (alt229) {
                    	case 1 :
                    	    // InternalSCEst.g:10533:5: ( (lv_operator_2_0= ruleEsterelAddOperator ) ) ( (lv_subExpressions_3_0= ruleSubExpression ) )
                    	    {
                    	    // InternalSCEst.g:10533:5: ( (lv_operator_2_0= ruleEsterelAddOperator ) )
                    	    // InternalSCEst.g:10534:6: (lv_operator_2_0= ruleEsterelAddOperator )
                    	    {
                    	    // InternalSCEst.g:10534:6: (lv_operator_2_0= ruleEsterelAddOperator )
                    	    // InternalSCEst.g:10535:7: lv_operator_2_0= ruleEsterelAddOperator
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAddExpressionAccess().getOperatorEsterelAddOperatorEnumRuleCall_1_1_0_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_21);
                    	    lv_operator_2_0=ruleEsterelAddOperator();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAddExpressionRule());
                    	      							}
                    	      							set(
                    	      								current,
                    	      								"operator",
                    	      								lv_operator_2_0,
                    	      								"de.cau.cs.kieler.esterel.Esterel.EsterelAddOperator");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }

                    	    // InternalSCEst.g:10552:5: ( (lv_subExpressions_3_0= ruleSubExpression ) )
                    	    // InternalSCEst.g:10553:6: (lv_subExpressions_3_0= ruleSubExpression )
                    	    {
                    	    // InternalSCEst.g:10553:6: (lv_subExpressions_3_0= ruleSubExpression )
                    	    // InternalSCEst.g:10554:7: lv_subExpressions_3_0= ruleSubExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAddExpressionAccess().getSubExpressionsSubExpressionParserRuleCall_1_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_137);
                    	    lv_subExpressions_3_0=ruleSubExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAddExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_3_0,
                    	      								"de.cau.cs.kieler.esterel.Esterel.SubExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt229 >= 1 ) break loop229;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(229, input);
                                throw eee;
                        }
                        cnt229++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAddExpression"


    // $ANTLR start "entryRuleSubExpression"
    // InternalSCEst.g:10577:1: entryRuleSubExpression returns [EObject current=null] : iv_ruleSubExpression= ruleSubExpression EOF ;
    public final EObject entryRuleSubExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSubExpression = null;


        try {
            // InternalSCEst.g:10577:54: (iv_ruleSubExpression= ruleSubExpression EOF )
            // InternalSCEst.g:10578:2: iv_ruleSubExpression= ruleSubExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSubExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSubExpression=ruleSubExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSubExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSubExpression"


    // $ANTLR start "ruleSubExpression"
    // InternalSCEst.g:10584:1: ruleSubExpression returns [EObject current=null] : (this_MultExpression_0= ruleMultExpression ( () ( ( (lv_operator_2_0= ruleEsterelSubOperator ) ) ( (lv_subExpressions_3_0= ruleMultExpression ) ) )+ )? ) ;
    public final EObject ruleSubExpression() throws RecognitionException {
        EObject current = null;

        EObject this_MultExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:10590:2: ( (this_MultExpression_0= ruleMultExpression ( () ( ( (lv_operator_2_0= ruleEsterelSubOperator ) ) ( (lv_subExpressions_3_0= ruleMultExpression ) ) )+ )? ) )
            // InternalSCEst.g:10591:2: (this_MultExpression_0= ruleMultExpression ( () ( ( (lv_operator_2_0= ruleEsterelSubOperator ) ) ( (lv_subExpressions_3_0= ruleMultExpression ) ) )+ )? )
            {
            // InternalSCEst.g:10591:2: (this_MultExpression_0= ruleMultExpression ( () ( ( (lv_operator_2_0= ruleEsterelSubOperator ) ) ( (lv_subExpressions_3_0= ruleMultExpression ) ) )+ )? )
            // InternalSCEst.g:10592:3: this_MultExpression_0= ruleMultExpression ( () ( ( (lv_operator_2_0= ruleEsterelSubOperator ) ) ( (lv_subExpressions_3_0= ruleMultExpression ) ) )+ )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getSubExpressionAccess().getMultExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_138);
            this_MultExpression_0=ruleMultExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MultExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCEst.g:10603:3: ( () ( ( (lv_operator_2_0= ruleEsterelSubOperator ) ) ( (lv_subExpressions_3_0= ruleMultExpression ) ) )+ )?
            int alt232=2;
            int LA232_0 = input.LA(1);

            if ( (LA232_0==84) ) {
                alt232=1;
            }
            switch (alt232) {
                case 1 :
                    // InternalSCEst.g:10604:4: () ( ( (lv_operator_2_0= ruleEsterelSubOperator ) ) ( (lv_subExpressions_3_0= ruleMultExpression ) ) )+
                    {
                    // InternalSCEst.g:10604:4: ()
                    // InternalSCEst.g:10605:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getSubExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCEst.g:10614:4: ( ( (lv_operator_2_0= ruleEsterelSubOperator ) ) ( (lv_subExpressions_3_0= ruleMultExpression ) ) )+
                    int cnt231=0;
                    loop231:
                    do {
                        int alt231=2;
                        int LA231_0 = input.LA(1);

                        if ( (LA231_0==84) ) {
                            alt231=1;
                        }


                        switch (alt231) {
                    	case 1 :
                    	    // InternalSCEst.g:10615:5: ( (lv_operator_2_0= ruleEsterelSubOperator ) ) ( (lv_subExpressions_3_0= ruleMultExpression ) )
                    	    {
                    	    // InternalSCEst.g:10615:5: ( (lv_operator_2_0= ruleEsterelSubOperator ) )
                    	    // InternalSCEst.g:10616:6: (lv_operator_2_0= ruleEsterelSubOperator )
                    	    {
                    	    // InternalSCEst.g:10616:6: (lv_operator_2_0= ruleEsterelSubOperator )
                    	    // InternalSCEst.g:10617:7: lv_operator_2_0= ruleEsterelSubOperator
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getSubExpressionAccess().getOperatorEsterelSubOperatorEnumRuleCall_1_1_0_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_21);
                    	    lv_operator_2_0=ruleEsterelSubOperator();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getSubExpressionRule());
                    	      							}
                    	      							set(
                    	      								current,
                    	      								"operator",
                    	      								lv_operator_2_0,
                    	      								"de.cau.cs.kieler.esterel.Esterel.EsterelSubOperator");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }

                    	    // InternalSCEst.g:10634:5: ( (lv_subExpressions_3_0= ruleMultExpression ) )
                    	    // InternalSCEst.g:10635:6: (lv_subExpressions_3_0= ruleMultExpression )
                    	    {
                    	    // InternalSCEst.g:10635:6: (lv_subExpressions_3_0= ruleMultExpression )
                    	    // InternalSCEst.g:10636:7: lv_subExpressions_3_0= ruleMultExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getSubExpressionAccess().getSubExpressionsMultExpressionParserRuleCall_1_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_138);
                    	    lv_subExpressions_3_0=ruleMultExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getSubExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_3_0,
                    	      								"de.cau.cs.kieler.esterel.Esterel.MultExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt231 >= 1 ) break loop231;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(231, input);
                                throw eee;
                        }
                        cnt231++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSubExpression"


    // $ANTLR start "entryRuleMultExpression"
    // InternalSCEst.g:10659:1: entryRuleMultExpression returns [EObject current=null] : iv_ruleMultExpression= ruleMultExpression EOF ;
    public final EObject entryRuleMultExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMultExpression = null;


        try {
            // InternalSCEst.g:10659:55: (iv_ruleMultExpression= ruleMultExpression EOF )
            // InternalSCEst.g:10660:2: iv_ruleMultExpression= ruleMultExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMultExpression=ruleMultExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMultExpression"


    // $ANTLR start "ruleMultExpression"
    // InternalSCEst.g:10666:1: ruleMultExpression returns [EObject current=null] : (this_DivExpression_0= ruleDivExpression ( () ( ( (lv_operator_2_0= ruleEsterelMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivExpression ) ) )+ )? ) ;
    public final EObject ruleMultExpression() throws RecognitionException {
        EObject current = null;

        EObject this_DivExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:10672:2: ( (this_DivExpression_0= ruleDivExpression ( () ( ( (lv_operator_2_0= ruleEsterelMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivExpression ) ) )+ )? ) )
            // InternalSCEst.g:10673:2: (this_DivExpression_0= ruleDivExpression ( () ( ( (lv_operator_2_0= ruleEsterelMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivExpression ) ) )+ )? )
            {
            // InternalSCEst.g:10673:2: (this_DivExpression_0= ruleDivExpression ( () ( ( (lv_operator_2_0= ruleEsterelMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivExpression ) ) )+ )? )
            // InternalSCEst.g:10674:3: this_DivExpression_0= ruleDivExpression ( () ( ( (lv_operator_2_0= ruleEsterelMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivExpression ) ) )+ )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getMultExpressionAccess().getDivExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_139);
            this_DivExpression_0=ruleDivExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_DivExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCEst.g:10685:3: ( () ( ( (lv_operator_2_0= ruleEsterelMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivExpression ) ) )+ )?
            int alt234=2;
            int LA234_0 = input.LA(1);

            if ( (LA234_0==82) ) {
                alt234=1;
            }
            switch (alt234) {
                case 1 :
                    // InternalSCEst.g:10686:4: () ( ( (lv_operator_2_0= ruleEsterelMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivExpression ) ) )+
                    {
                    // InternalSCEst.g:10686:4: ()
                    // InternalSCEst.g:10687:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getMultExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCEst.g:10696:4: ( ( (lv_operator_2_0= ruleEsterelMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivExpression ) ) )+
                    int cnt233=0;
                    loop233:
                    do {
                        int alt233=2;
                        int LA233_0 = input.LA(1);

                        if ( (LA233_0==82) ) {
                            alt233=1;
                        }


                        switch (alt233) {
                    	case 1 :
                    	    // InternalSCEst.g:10697:5: ( (lv_operator_2_0= ruleEsterelMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivExpression ) )
                    	    {
                    	    // InternalSCEst.g:10697:5: ( (lv_operator_2_0= ruleEsterelMultOperator ) )
                    	    // InternalSCEst.g:10698:6: (lv_operator_2_0= ruleEsterelMultOperator )
                    	    {
                    	    // InternalSCEst.g:10698:6: (lv_operator_2_0= ruleEsterelMultOperator )
                    	    // InternalSCEst.g:10699:7: lv_operator_2_0= ruleEsterelMultOperator
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getMultExpressionAccess().getOperatorEsterelMultOperatorEnumRuleCall_1_1_0_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_21);
                    	    lv_operator_2_0=ruleEsterelMultOperator();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getMultExpressionRule());
                    	      							}
                    	      							set(
                    	      								current,
                    	      								"operator",
                    	      								lv_operator_2_0,
                    	      								"de.cau.cs.kieler.esterel.Esterel.EsterelMultOperator");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }

                    	    // InternalSCEst.g:10716:5: ( (lv_subExpressions_3_0= ruleDivExpression ) )
                    	    // InternalSCEst.g:10717:6: (lv_subExpressions_3_0= ruleDivExpression )
                    	    {
                    	    // InternalSCEst.g:10717:6: (lv_subExpressions_3_0= ruleDivExpression )
                    	    // InternalSCEst.g:10718:7: lv_subExpressions_3_0= ruleDivExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getMultExpressionAccess().getSubExpressionsDivExpressionParserRuleCall_1_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_139);
                    	    lv_subExpressions_3_0=ruleDivExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getMultExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_3_0,
                    	      								"de.cau.cs.kieler.esterel.Esterel.DivExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt233 >= 1 ) break loop233;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(233, input);
                                throw eee;
                        }
                        cnt233++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultExpression"


    // $ANTLR start "entryRuleDivExpression"
    // InternalSCEst.g:10741:1: entryRuleDivExpression returns [EObject current=null] : iv_ruleDivExpression= ruleDivExpression EOF ;
    public final EObject entryRuleDivExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDivExpression = null;


        try {
            // InternalSCEst.g:10741:54: (iv_ruleDivExpression= ruleDivExpression EOF )
            // InternalSCEst.g:10742:2: iv_ruleDivExpression= ruleDivExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDivExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDivExpression=ruleDivExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDivExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDivExpression"


    // $ANTLR start "ruleDivExpression"
    // InternalSCEst.g:10748:1: ruleDivExpression returns [EObject current=null] : (this_ModExpression_0= ruleModExpression ( () ( (lv_operator_2_0= ruleEsterelDivOperator ) ) ( (lv_subExpressions_3_0= ruleModExpression ) ) )? ) ;
    public final EObject ruleDivExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ModExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:10754:2: ( (this_ModExpression_0= ruleModExpression ( () ( (lv_operator_2_0= ruleEsterelDivOperator ) ) ( (lv_subExpressions_3_0= ruleModExpression ) ) )? ) )
            // InternalSCEst.g:10755:2: (this_ModExpression_0= ruleModExpression ( () ( (lv_operator_2_0= ruleEsterelDivOperator ) ) ( (lv_subExpressions_3_0= ruleModExpression ) ) )? )
            {
            // InternalSCEst.g:10755:2: (this_ModExpression_0= ruleModExpression ( () ( (lv_operator_2_0= ruleEsterelDivOperator ) ) ( (lv_subExpressions_3_0= ruleModExpression ) ) )? )
            // InternalSCEst.g:10756:3: this_ModExpression_0= ruleModExpression ( () ( (lv_operator_2_0= ruleEsterelDivOperator ) ) ( (lv_subExpressions_3_0= ruleModExpression ) ) )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getDivExpressionAccess().getModExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_140);
            this_ModExpression_0=ruleModExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ModExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCEst.g:10767:3: ( () ( (lv_operator_2_0= ruleEsterelDivOperator ) ) ( (lv_subExpressions_3_0= ruleModExpression ) ) )?
            int alt235=2;
            int LA235_0 = input.LA(1);

            if ( (LA235_0==81) ) {
                alt235=1;
            }
            switch (alt235) {
                case 1 :
                    // InternalSCEst.g:10768:4: () ( (lv_operator_2_0= ruleEsterelDivOperator ) ) ( (lv_subExpressions_3_0= ruleModExpression ) )
                    {
                    // InternalSCEst.g:10768:4: ()
                    // InternalSCEst.g:10769:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getDivExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCEst.g:10778:4: ( (lv_operator_2_0= ruleEsterelDivOperator ) )
                    // InternalSCEst.g:10779:5: (lv_operator_2_0= ruleEsterelDivOperator )
                    {
                    // InternalSCEst.g:10779:5: (lv_operator_2_0= ruleEsterelDivOperator )
                    // InternalSCEst.g:10780:6: lv_operator_2_0= ruleEsterelDivOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDivExpressionAccess().getOperatorEsterelDivOperatorEnumRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_21);
                    lv_operator_2_0=ruleEsterelDivOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDivExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_2_0,
                      							"de.cau.cs.kieler.esterel.Esterel.EsterelDivOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCEst.g:10797:4: ( (lv_subExpressions_3_0= ruleModExpression ) )
                    // InternalSCEst.g:10798:5: (lv_subExpressions_3_0= ruleModExpression )
                    {
                    // InternalSCEst.g:10798:5: (lv_subExpressions_3_0= ruleModExpression )
                    // InternalSCEst.g:10799:6: lv_subExpressions_3_0= ruleModExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDivExpressionAccess().getSubExpressionsModExpressionParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_3_0=ruleModExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDivExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_3_0,
                      							"de.cau.cs.kieler.esterel.Esterel.ModExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDivExpression"


    // $ANTLR start "entryRuleModExpression"
    // InternalSCEst.g:10821:1: entryRuleModExpression returns [EObject current=null] : iv_ruleModExpression= ruleModExpression EOF ;
    public final EObject entryRuleModExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModExpression = null;


        try {
            // InternalSCEst.g:10821:54: (iv_ruleModExpression= ruleModExpression EOF )
            // InternalSCEst.g:10822:2: iv_ruleModExpression= ruleModExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleModExpression=ruleModExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModExpression"


    // $ANTLR start "ruleModExpression"
    // InternalSCEst.g:10828:1: ruleModExpression returns [EObject current=null] : (this_NegExpression_0= ruleNegExpression ( () ( (lv_operator_2_0= ruleEsterelModOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) )? ) ;
    public final EObject ruleModExpression() throws RecognitionException {
        EObject current = null;

        EObject this_NegExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:10834:2: ( (this_NegExpression_0= ruleNegExpression ( () ( (lv_operator_2_0= ruleEsterelModOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) )? ) )
            // InternalSCEst.g:10835:2: (this_NegExpression_0= ruleNegExpression ( () ( (lv_operator_2_0= ruleEsterelModOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) )? )
            {
            // InternalSCEst.g:10835:2: (this_NegExpression_0= ruleNegExpression ( () ( (lv_operator_2_0= ruleEsterelModOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) )? )
            // InternalSCEst.g:10836:3: this_NegExpression_0= ruleNegExpression ( () ( (lv_operator_2_0= ruleEsterelModOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getModExpressionAccess().getNegExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_141);
            this_NegExpression_0=ruleNegExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_NegExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCEst.g:10847:3: ( () ( (lv_operator_2_0= ruleEsterelModOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) )?
            int alt236=2;
            int LA236_0 = input.LA(1);

            if ( (LA236_0==85) ) {
                alt236=1;
            }
            switch (alt236) {
                case 1 :
                    // InternalSCEst.g:10848:4: () ( (lv_operator_2_0= ruleEsterelModOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) )
                    {
                    // InternalSCEst.g:10848:4: ()
                    // InternalSCEst.g:10849:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getModExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCEst.g:10858:4: ( (lv_operator_2_0= ruleEsterelModOperator ) )
                    // InternalSCEst.g:10859:5: (lv_operator_2_0= ruleEsterelModOperator )
                    {
                    // InternalSCEst.g:10859:5: (lv_operator_2_0= ruleEsterelModOperator )
                    // InternalSCEst.g:10860:6: lv_operator_2_0= ruleEsterelModOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getModExpressionAccess().getOperatorEsterelModOperatorEnumRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_21);
                    lv_operator_2_0=ruleEsterelModOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getModExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_2_0,
                      							"de.cau.cs.kieler.esterel.Esterel.EsterelModOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCEst.g:10877:4: ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) )
                    // InternalSCEst.g:10878:5: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
                    {
                    // InternalSCEst.g:10878:5: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
                    // InternalSCEst.g:10879:6: lv_subExpressions_3_0= ruleAtomicValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getModExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_3_0=ruleAtomicValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getModExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_3_0,
                      							"de.cau.cs.kieler.esterel.scest.SCEst.AtomicValuedExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModExpression"


    // $ANTLR start "entryRuleNegExpression"
    // InternalSCEst.g:10901:1: entryRuleNegExpression returns [EObject current=null] : iv_ruleNegExpression= ruleNegExpression EOF ;
    public final EObject entryRuleNegExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNegExpression = null;


        try {
            // InternalSCEst.g:10901:54: (iv_ruleNegExpression= ruleNegExpression EOF )
            // InternalSCEst.g:10902:2: iv_ruleNegExpression= ruleNegExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNegExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNegExpression=ruleNegExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNegExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNegExpression"


    // $ANTLR start "ruleNegExpression"
    // InternalSCEst.g:10908:1: ruleNegExpression returns [EObject current=null] : ( ( () ( (lv_operator_1_0= ruleEsterelSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) ) | this_AtomicValuedExpression_3= ruleAtomicValuedExpression ) ;
    public final EObject ruleNegExpression() throws RecognitionException {
        EObject current = null;

        Enumerator lv_operator_1_0 = null;

        EObject lv_subExpressions_2_0 = null;

        EObject this_AtomicValuedExpression_3 = null;



        	enterRule();

        try {
            // InternalSCEst.g:10914:2: ( ( ( () ( (lv_operator_1_0= ruleEsterelSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) ) | this_AtomicValuedExpression_3= ruleAtomicValuedExpression ) )
            // InternalSCEst.g:10915:2: ( ( () ( (lv_operator_1_0= ruleEsterelSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) ) | this_AtomicValuedExpression_3= ruleAtomicValuedExpression )
            {
            // InternalSCEst.g:10915:2: ( ( () ( (lv_operator_1_0= ruleEsterelSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) ) | this_AtomicValuedExpression_3= ruleAtomicValuedExpression )
            int alt237=2;
            int LA237_0 = input.LA(1);

            if ( (LA237_0==84) ) {
                alt237=1;
            }
            else if ( ((LA237_0>=RULE_ID && LA237_0<=RULE_COMMENT_ANNOTATION)||LA237_0==25||(LA237_0>=97 && LA237_0<=98)||LA237_0==117||(LA237_0>=128 && LA237_0<=130)) ) {
                alt237=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 237, 0, input);

                throw nvae;
            }
            switch (alt237) {
                case 1 :
                    // InternalSCEst.g:10916:3: ( () ( (lv_operator_1_0= ruleEsterelSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) )
                    {
                    // InternalSCEst.g:10916:3: ( () ( (lv_operator_1_0= ruleEsterelSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) )
                    // InternalSCEst.g:10917:4: () ( (lv_operator_1_0= ruleEsterelSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) )
                    {
                    // InternalSCEst.g:10917:4: ()
                    // InternalSCEst.g:10918:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getNegExpressionAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCEst.g:10927:4: ( (lv_operator_1_0= ruleEsterelSubOperator ) )
                    // InternalSCEst.g:10928:5: (lv_operator_1_0= ruleEsterelSubOperator )
                    {
                    // InternalSCEst.g:10928:5: (lv_operator_1_0= ruleEsterelSubOperator )
                    // InternalSCEst.g:10929:6: lv_operator_1_0= ruleEsterelSubOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNegExpressionAccess().getOperatorEsterelSubOperatorEnumRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_21);
                    lv_operator_1_0=ruleEsterelSubOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNegExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_1_0,
                      							"de.cau.cs.kieler.esterel.Esterel.EsterelSubOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCEst.g:10946:4: ( (lv_subExpressions_2_0= ruleNegExpression ) )
                    // InternalSCEst.g:10947:5: (lv_subExpressions_2_0= ruleNegExpression )
                    {
                    // InternalSCEst.g:10947:5: (lv_subExpressions_2_0= ruleNegExpression )
                    // InternalSCEst.g:10948:6: lv_subExpressions_2_0= ruleNegExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNegExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_2_0=ruleNegExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNegExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_2_0,
                      							"de.cau.cs.kieler.esterel.Esterel.NegExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCEst.g:10967:3: this_AtomicValuedExpression_3= ruleAtomicValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNegExpressionAccess().getAtomicValuedExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AtomicValuedExpression_3=ruleAtomicValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AtomicValuedExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNegExpression"


    // $ANTLR start "entryRuleValuedObjectPreExpression"
    // InternalSCEst.g:10982:1: entryRuleValuedObjectPreExpression returns [EObject current=null] : iv_ruleValuedObjectPreExpression= ruleValuedObjectPreExpression EOF ;
    public final EObject entryRuleValuedObjectPreExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValuedObjectPreExpression = null;


        try {
            // InternalSCEst.g:10982:66: (iv_ruleValuedObjectPreExpression= ruleValuedObjectPreExpression EOF )
            // InternalSCEst.g:10983:2: iv_ruleValuedObjectPreExpression= ruleValuedObjectPreExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValuedObjectPreExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleValuedObjectPreExpression=ruleValuedObjectPreExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValuedObjectPreExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValuedObjectPreExpression"


    // $ANTLR start "ruleValuedObjectPreExpression"
    // InternalSCEst.g:10989:1: ruleValuedObjectPreExpression returns [EObject current=null] : ( ( () ( (lv_operator_1_0= ruleEsterelPreOperator ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectPreExpression ) ) otherlv_4= ')' ) | ( () ( (lv_operator_6_0= ruleEsterelValueTestOperator ) ) ( (lv_subExpressions_7_0= ruleSignalReferenceExpression ) ) ) | this_ValuedObjectReference_8= ruleValuedObjectReference ) ;
    public final EObject ruleValuedObjectPreExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Enumerator lv_operator_1_0 = null;

        EObject lv_subExpressions_3_0 = null;

        Enumerator lv_operator_6_0 = null;

        EObject lv_subExpressions_7_0 = null;

        EObject this_ValuedObjectReference_8 = null;



        	enterRule();

        try {
            // InternalSCEst.g:10995:2: ( ( ( () ( (lv_operator_1_0= ruleEsterelPreOperator ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectPreExpression ) ) otherlv_4= ')' ) | ( () ( (lv_operator_6_0= ruleEsterelValueTestOperator ) ) ( (lv_subExpressions_7_0= ruleSignalReferenceExpression ) ) ) | this_ValuedObjectReference_8= ruleValuedObjectReference ) )
            // InternalSCEst.g:10996:2: ( ( () ( (lv_operator_1_0= ruleEsterelPreOperator ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectPreExpression ) ) otherlv_4= ')' ) | ( () ( (lv_operator_6_0= ruleEsterelValueTestOperator ) ) ( (lv_subExpressions_7_0= ruleSignalReferenceExpression ) ) ) | this_ValuedObjectReference_8= ruleValuedObjectReference )
            {
            // InternalSCEst.g:10996:2: ( ( () ( (lv_operator_1_0= ruleEsterelPreOperator ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectPreExpression ) ) otherlv_4= ')' ) | ( () ( (lv_operator_6_0= ruleEsterelValueTestOperator ) ) ( (lv_subExpressions_7_0= ruleSignalReferenceExpression ) ) ) | this_ValuedObjectReference_8= ruleValuedObjectReference )
            int alt238=3;
            switch ( input.LA(1) ) {
            case 129:
                {
                alt238=1;
                }
                break;
            case 130:
                {
                alt238=2;
                }
                break;
            case RULE_ID:
                {
                alt238=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 238, 0, input);

                throw nvae;
            }

            switch (alt238) {
                case 1 :
                    // InternalSCEst.g:10997:3: ( () ( (lv_operator_1_0= ruleEsterelPreOperator ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectPreExpression ) ) otherlv_4= ')' )
                    {
                    // InternalSCEst.g:10997:3: ( () ( (lv_operator_1_0= ruleEsterelPreOperator ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectPreExpression ) ) otherlv_4= ')' )
                    // InternalSCEst.g:10998:4: () ( (lv_operator_1_0= ruleEsterelPreOperator ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectPreExpression ) ) otherlv_4= ')'
                    {
                    // InternalSCEst.g:10998:4: ()
                    // InternalSCEst.g:10999:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getValuedObjectPreExpressionAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCEst.g:11008:4: ( (lv_operator_1_0= ruleEsterelPreOperator ) )
                    // InternalSCEst.g:11009:5: (lv_operator_1_0= ruleEsterelPreOperator )
                    {
                    // InternalSCEst.g:11009:5: (lv_operator_1_0= ruleEsterelPreOperator )
                    // InternalSCEst.g:11010:6: lv_operator_1_0= ruleEsterelPreOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getValuedObjectPreExpressionAccess().getOperatorEsterelPreOperatorEnumRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_19);
                    lv_operator_1_0=ruleEsterelPreOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getValuedObjectPreExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_1_0,
                      							"de.cau.cs.kieler.esterel.Esterel.EsterelPreOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,25,FollowSets000.FOLLOW_142); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getValuedObjectPreExpressionAccess().getLeftParenthesisKeyword_0_2());
                      			
                    }
                    // InternalSCEst.g:11031:4: ( (lv_subExpressions_3_0= ruleValuedObjectPreExpression ) )
                    // InternalSCEst.g:11032:5: (lv_subExpressions_3_0= ruleValuedObjectPreExpression )
                    {
                    // InternalSCEst.g:11032:5: (lv_subExpressions_3_0= ruleValuedObjectPreExpression )
                    // InternalSCEst.g:11033:6: lv_subExpressions_3_0= ruleValuedObjectPreExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getValuedObjectPreExpressionAccess().getSubExpressionsValuedObjectPreExpressionParserRuleCall_0_3_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_20);
                    lv_subExpressions_3_0=ruleValuedObjectPreExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getValuedObjectPreExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_3_0,
                      							"de.cau.cs.kieler.esterel.Esterel.ValuedObjectPreExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,26,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getValuedObjectPreExpressionAccess().getRightParenthesisKeyword_0_4());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCEst.g:11056:3: ( () ( (lv_operator_6_0= ruleEsterelValueTestOperator ) ) ( (lv_subExpressions_7_0= ruleSignalReferenceExpression ) ) )
                    {
                    // InternalSCEst.g:11056:3: ( () ( (lv_operator_6_0= ruleEsterelValueTestOperator ) ) ( (lv_subExpressions_7_0= ruleSignalReferenceExpression ) ) )
                    // InternalSCEst.g:11057:4: () ( (lv_operator_6_0= ruleEsterelValueTestOperator ) ) ( (lv_subExpressions_7_0= ruleSignalReferenceExpression ) )
                    {
                    // InternalSCEst.g:11057:4: ()
                    // InternalSCEst.g:11058:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getValuedObjectPreExpressionAccess().getOperatorExpressionAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCEst.g:11067:4: ( (lv_operator_6_0= ruleEsterelValueTestOperator ) )
                    // InternalSCEst.g:11068:5: (lv_operator_6_0= ruleEsterelValueTestOperator )
                    {
                    // InternalSCEst.g:11068:5: (lv_operator_6_0= ruleEsterelValueTestOperator )
                    // InternalSCEst.g:11069:6: lv_operator_6_0= ruleEsterelValueTestOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getValuedObjectPreExpressionAccess().getOperatorEsterelValueTestOperatorEnumRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_6);
                    lv_operator_6_0=ruleEsterelValueTestOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getValuedObjectPreExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_6_0,
                      							"de.cau.cs.kieler.esterel.Esterel.EsterelValueTestOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCEst.g:11086:4: ( (lv_subExpressions_7_0= ruleSignalReferenceExpression ) )
                    // InternalSCEst.g:11087:5: (lv_subExpressions_7_0= ruleSignalReferenceExpression )
                    {
                    // InternalSCEst.g:11087:5: (lv_subExpressions_7_0= ruleSignalReferenceExpression )
                    // InternalSCEst.g:11088:6: lv_subExpressions_7_0= ruleSignalReferenceExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getValuedObjectPreExpressionAccess().getSubExpressionsSignalReferenceExpressionParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_7_0=ruleSignalReferenceExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getValuedObjectPreExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_7_0,
                      							"de.cau.cs.kieler.esterel.Esterel.SignalReferenceExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSCEst.g:11107:3: this_ValuedObjectReference_8= ruleValuedObjectReference
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getValuedObjectPreExpressionAccess().getValuedObjectReferenceParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedObjectReference_8=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ValuedObjectReference_8;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValuedObjectPreExpression"


    // $ANTLR start "entryRuleModule"
    // InternalSCEst.g:11122:1: entryRuleModule returns [EObject current=null] : iv_ruleModule= ruleModule EOF ;
    public final EObject entryRuleModule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModule = null;


        try {
            // InternalSCEst.g:11122:47: (iv_ruleModule= ruleModule EOF )
            // InternalSCEst.g:11123:2: iv_ruleModule= ruleModule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModuleRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleModule=ruleModule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModule; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModule"


    // $ANTLR start "ruleModule"
    // InternalSCEst.g:11129:1: ruleModule returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'module' ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= ':' )? ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* ) ;
    public final EObject ruleModule() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_name_2_0=null;
        Token otherlv_3=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_declarations_4_0 = null;

        EObject lv_statements_5_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:11135:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'module' ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= ':' )? ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* ) )
            // InternalSCEst.g:11136:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'module' ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= ':' )? ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* )
            {
            // InternalSCEst.g:11136:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'module' ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= ':' )? ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* )
            // InternalSCEst.g:11137:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'module' ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= ':' )? ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )*
            {
            // InternalSCEst.g:11137:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop239:
            do {
                int alt239=2;
                int LA239_0 = input.LA(1);

                if ( (LA239_0==RULE_COMMENT_ANNOTATION||LA239_0==128) ) {
                    alt239=1;
                }


                switch (alt239) {
            	case 1 :
            	    // InternalSCEst.g:11138:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:11138:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCEst.g:11139:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getModuleAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_5);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getModuleRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop239;
                }
            } while (true);

            otherlv_1=(Token)match(input,17,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getModuleAccess().getModuleKeyword_1());
              		
            }
            // InternalSCEst.g:11160:3: ( (lv_name_2_0= RULE_ID ) )
            // InternalSCEst.g:11161:4: (lv_name_2_0= RULE_ID )
            {
            // InternalSCEst.g:11161:4: (lv_name_2_0= RULE_ID )
            // InternalSCEst.g:11162:5: lv_name_2_0= RULE_ID
            {
            lv_name_2_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_143); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_2_0, grammarAccess.getModuleAccess().getNameIDTerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getModuleRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_2_0,
              						"de.cau.cs.kieler.annotations.Annotations.ID");
              				
            }

            }


            }

            // InternalSCEst.g:11178:3: (otherlv_3= ':' )?
            int alt240=2;
            int LA240_0 = input.LA(1);

            if ( (LA240_0==18) ) {
                alt240=1;
            }
            switch (alt240) {
                case 1 :
                    // InternalSCEst.g:11179:4: otherlv_3= ':'
                    {
                    otherlv_3=(Token)match(input,18,FollowSets000.FOLLOW_144); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getModuleAccess().getColonKeyword_3());
                      			
                    }

                    }
                    break;

            }

            // InternalSCEst.g:11184:3: ( (lv_declarations_4_0= ruleDeclaration ) )*
            loop241:
            do {
                int alt241=2;
                alt241 = dfa241.predict(input);
                switch (alt241) {
            	case 1 :
            	    // InternalSCEst.g:11185:4: (lv_declarations_4_0= ruleDeclaration )
            	    {
            	    // InternalSCEst.g:11185:4: (lv_declarations_4_0= ruleDeclaration )
            	    // InternalSCEst.g:11186:5: lv_declarations_4_0= ruleDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getModuleAccess().getDeclarationsDeclarationParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_144);
            	    lv_declarations_4_0=ruleDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getModuleRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_4_0,
            	      						"de.cau.cs.kieler.kexpressions.kext.KExt.Declaration");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop241;
                }
            } while (true);

            // InternalSCEst.g:11203:3: ( (lv_statements_5_0= ruleStatement ) )*
            loop242:
            do {
                int alt242=2;
                int LA242_0 = input.LA(1);

                if ( (LA242_0==RULE_ID||LA242_0==RULE_COMMENT_ANNOTATION||(LA242_0>=23 && LA242_0<=24)||(LA242_0>=46 && LA242_0<=49)||(LA242_0>=51 && LA242_0<=54)||(LA242_0>=58 && LA242_0<=59)||LA242_0==61||(LA242_0>=63 && LA242_0<=64)||(LA242_0>=66 && LA242_0<=67)||(LA242_0>=69 && LA242_0<=72)||(LA242_0>=75 && LA242_0<=80)||LA242_0==100||LA242_0==102||LA242_0==104||LA242_0==128) ) {
                    alt242=1;
                }


                switch (alt242) {
            	case 1 :
            	    // InternalSCEst.g:11204:4: (lv_statements_5_0= ruleStatement )
            	    {
            	    // InternalSCEst.g:11204:4: (lv_statements_5_0= ruleStatement )
            	    // InternalSCEst.g:11205:5: lv_statements_5_0= ruleStatement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getModuleAccess().getStatementsStatementParserRuleCall_5_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_13);
            	    lv_statements_5_0=ruleStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getModuleRule());
            	      					}
            	      					add(
            	      						current,
            	      						"statements",
            	      						lv_statements_5_0,
            	      						"de.cau.cs.kieler.esterel.scest.SCEst.Statement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop242;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModule"


    // $ANTLR start "entryRuleLabel"
    // InternalSCEst.g:11226:1: entryRuleLabel returns [EObject current=null] : iv_ruleLabel= ruleLabel EOF ;
    public final EObject entryRuleLabel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLabel = null;


        try {
            // InternalSCEst.g:11226:46: (iv_ruleLabel= ruleLabel EOF )
            // InternalSCEst.g:11227:2: iv_ruleLabel= ruleLabel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLabelRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLabel=ruleLabel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLabel; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLabel"


    // $ANTLR start "ruleLabel"
    // InternalSCEst.g:11233:1: ruleLabel returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':' ) ;
    public final EObject ruleLabel() throws RecognitionException {
        EObject current = null;

        Token lv_name_1_0=null;
        Token otherlv_2=null;
        EObject lv_annotations_0_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:11239:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':' ) )
            // InternalSCEst.g:11240:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':' )
            {
            // InternalSCEst.g:11240:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':' )
            // InternalSCEst.g:11241:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':'
            {
            // InternalSCEst.g:11241:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop243:
            do {
                int alt243=2;
                int LA243_0 = input.LA(1);

                if ( (LA243_0==RULE_COMMENT_ANNOTATION||LA243_0==128) ) {
                    alt243=1;
                }


                switch (alt243) {
            	case 1 :
            	    // InternalSCEst.g:11242:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:11242:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCEst.g:11243:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getLabelAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_14);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getLabelRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop243;
                }
            } while (true);

            // InternalSCEst.g:11260:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalSCEst.g:11261:4: (lv_name_1_0= RULE_ID )
            {
            // InternalSCEst.g:11261:4: (lv_name_1_0= RULE_ID )
            // InternalSCEst.g:11262:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getLabelAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getLabelRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ID");
              				
            }

            }


            }

            otherlv_2=(Token)match(input,18,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getLabelAccess().getColonKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLabel"


    // $ANTLR start "entryRuleGoto"
    // InternalSCEst.g:11286:1: entryRuleGoto returns [EObject current=null] : iv_ruleGoto= ruleGoto EOF ;
    public final EObject entryRuleGoto() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGoto = null;


        try {
            // InternalSCEst.g:11286:45: (iv_ruleGoto= ruleGoto EOF )
            // InternalSCEst.g:11287:2: iv_ruleGoto= ruleGoto EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGotoRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleGoto=ruleGoto();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGoto; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGoto"


    // $ANTLR start "ruleGoto"
    // InternalSCEst.g:11293:1: ruleGoto returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'goto' ( (otherlv_2= RULE_ID ) ) ( (lv_semicolon_3_0= ';' ) )? ) ;
    public final EObject ruleGoto() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_semicolon_3_0=null;
        EObject lv_annotations_0_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:11299:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'goto' ( (otherlv_2= RULE_ID ) ) ( (lv_semicolon_3_0= ';' ) )? ) )
            // InternalSCEst.g:11300:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'goto' ( (otherlv_2= RULE_ID ) ) ( (lv_semicolon_3_0= ';' ) )? )
            {
            // InternalSCEst.g:11300:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'goto' ( (otherlv_2= RULE_ID ) ) ( (lv_semicolon_3_0= ';' ) )? )
            // InternalSCEst.g:11301:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'goto' ( (otherlv_2= RULE_ID ) ) ( (lv_semicolon_3_0= ';' ) )?
            {
            // InternalSCEst.g:11301:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop244:
            do {
                int alt244=2;
                int LA244_0 = input.LA(1);

                if ( (LA244_0==RULE_COMMENT_ANNOTATION||LA244_0==128) ) {
                    alt244=1;
                }


                switch (alt244) {
            	case 1 :
            	    // InternalSCEst.g:11302:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:11302:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCEst.g:11303:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getGotoAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_145);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getGotoRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop244;
                }
            } while (true);

            otherlv_1=(Token)match(input,100,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getGotoAccess().getGotoKeyword_1());
              		
            }
            // InternalSCEst.g:11324:3: ( (otherlv_2= RULE_ID ) )
            // InternalSCEst.g:11325:4: (otherlv_2= RULE_ID )
            {
            // InternalSCEst.g:11325:4: (otherlv_2= RULE_ID )
            // InternalSCEst.g:11326:5: otherlv_2= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getGotoRule());
              					}
              				
            }
            otherlv_2=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_2, grammarAccess.getGotoAccess().getTargetLabelCrossReference_2_0());
              				
            }

            }


            }

            // InternalSCEst.g:11340:3: ( (lv_semicolon_3_0= ';' ) )?
            int alt245=2;
            int LA245_0 = input.LA(1);

            if ( (LA245_0==21) ) {
                alt245=1;
            }
            switch (alt245) {
                case 1 :
                    // InternalSCEst.g:11341:4: (lv_semicolon_3_0= ';' )
                    {
                    // InternalSCEst.g:11341:4: (lv_semicolon_3_0= ';' )
                    // InternalSCEst.g:11342:5: lv_semicolon_3_0= ';'
                    {
                    lv_semicolon_3_0=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_semicolon_3_0, grammarAccess.getGotoAccess().getSemicolonSemicolonKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getGotoRule());
                      					}
                      					setWithLastConsumed(current, "semicolon", true, ";");
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGoto"


    // $ANTLR start "entryRuleAssignment"
    // InternalSCEst.g:11358:1: entryRuleAssignment returns [EObject current=null] : iv_ruleAssignment= ruleAssignment EOF ;
    public final EObject entryRuleAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAssignment = null;


        try {
            // InternalSCEst.g:11358:51: (iv_ruleAssignment= ruleAssignment EOF )
            // InternalSCEst.g:11359:2: iv_ruleAssignment= ruleAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAssignmentRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAssignment=ruleAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAssignment; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAssignment"


    // $ANTLR start "ruleAssignment"
    // InternalSCEst.g:11365:1: ruleAssignment returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? ( (lv_semicolon_6_0= ';' ) )? ) ;
    public final EObject ruleAssignment() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        Token lv_semicolon_6_0=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_reference_1_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_expression_3_0 = null;

        EObject lv_schedule_5_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:11371:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? ( (lv_semicolon_6_0= ';' ) )? ) )
            // InternalSCEst.g:11372:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? ( (lv_semicolon_6_0= ';' ) )? )
            {
            // InternalSCEst.g:11372:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? ( (lv_semicolon_6_0= ';' ) )? )
            // InternalSCEst.g:11373:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? ( (lv_semicolon_6_0= ';' ) )?
            {
            // InternalSCEst.g:11373:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop246:
            do {
                int alt246=2;
                int LA246_0 = input.LA(1);

                if ( (LA246_0==RULE_COMMENT_ANNOTATION||LA246_0==128) ) {
                    alt246=1;
                }


                switch (alt246) {
            	case 1 :
            	    // InternalSCEst.g:11374:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:11374:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCEst.g:11375:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAssignmentAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_14);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAssignmentRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop246;
                }
            } while (true);

            // InternalSCEst.g:11392:3: ( (lv_reference_1_0= ruleValuedObjectReference ) )
            // InternalSCEst.g:11393:4: (lv_reference_1_0= ruleValuedObjectReference )
            {
            // InternalSCEst.g:11393:4: (lv_reference_1_0= ruleValuedObjectReference )
            // InternalSCEst.g:11394:5: lv_reference_1_0= ruleValuedObjectReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAssignmentAccess().getReferenceValuedObjectReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_146);
            lv_reference_1_0=ruleValuedObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAssignmentRule());
              					}
              					set(
              						current,
              						"reference",
              						lv_reference_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCEst.g:11411:3: ( (lv_operator_2_0= ruleAssignOperator ) )
            // InternalSCEst.g:11412:4: (lv_operator_2_0= ruleAssignOperator )
            {
            // InternalSCEst.g:11412:4: (lv_operator_2_0= ruleAssignOperator )
            // InternalSCEst.g:11413:5: lv_operator_2_0= ruleAssignOperator
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAssignmentAccess().getOperatorAssignOperatorEnumRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_16);
            lv_operator_2_0=ruleAssignOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAssignmentRule());
              					}
              					set(
              						current,
              						"operator",
              						lv_operator_2_0,
              						"de.cau.cs.kieler.kexpressions.keffects.KEffects.AssignOperator");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCEst.g:11430:3: ( (lv_expression_3_0= ruleExpression ) )
            // InternalSCEst.g:11431:4: (lv_expression_3_0= ruleExpression )
            {
            // InternalSCEst.g:11431:4: (lv_expression_3_0= ruleExpression )
            // InternalSCEst.g:11432:5: lv_expression_3_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAssignmentAccess().getExpressionExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_147);
            lv_expression_3_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAssignmentRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_3_0,
              						"de.cau.cs.kieler.esterel.Esterel.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCEst.g:11449:3: (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )?
            int alt248=2;
            int LA248_0 = input.LA(1);

            if ( (LA248_0==101) ) {
                alt248=1;
            }
            switch (alt248) {
                case 1 :
                    // InternalSCEst.g:11450:4: otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_4=(Token)match(input,101,FollowSets000.FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getAssignmentAccess().getScheduleKeyword_4_0());
                      			
                    }
                    // InternalSCEst.g:11454:4: ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+
                    int cnt247=0;
                    loop247:
                    do {
                        int alt247=2;
                        alt247 = dfa247.predict(input);
                        switch (alt247) {
                    	case 1 :
                    	    // InternalSCEst.g:11455:5: (lv_schedule_5_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCEst.g:11455:5: (lv_schedule_5_0= ruleScheduleObjectReference )
                    	    // InternalSCEst.g:11456:6: lv_schedule_5_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getAssignmentAccess().getScheduleScheduleObjectReferenceParserRuleCall_4_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_148);
                    	    lv_schedule_5_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getAssignmentRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_5_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt247 >= 1 ) break loop247;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(247, input);
                                throw eee;
                        }
                        cnt247++;
                    } while (true);


                    }
                    break;

            }

            // InternalSCEst.g:11474:3: ( (lv_semicolon_6_0= ';' ) )?
            int alt249=2;
            int LA249_0 = input.LA(1);

            if ( (LA249_0==21) ) {
                alt249=1;
            }
            switch (alt249) {
                case 1 :
                    // InternalSCEst.g:11475:4: (lv_semicolon_6_0= ';' )
                    {
                    // InternalSCEst.g:11475:4: (lv_semicolon_6_0= ';' )
                    // InternalSCEst.g:11476:5: lv_semicolon_6_0= ';'
                    {
                    lv_semicolon_6_0=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_semicolon_6_0, grammarAccess.getAssignmentAccess().getSemicolonSemicolonKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getAssignmentRule());
                      					}
                      					setWithLastConsumed(current, "semicolon", true, ";");
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAssignment"


    // $ANTLR start "entryRuleConditional"
    // InternalSCEst.g:11492:1: entryRuleConditional returns [EObject current=null] : iv_ruleConditional= ruleConditional EOF ;
    public final EObject entryRuleConditional() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConditional = null;


        try {
            // InternalSCEst.g:11492:52: (iv_ruleConditional= ruleConditional EOF )
            // InternalSCEst.g:11493:2: iv_ruleConditional= ruleConditional EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConditionalRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleConditional=ruleConditional();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConditional; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConditional"


    // $ANTLR start "ruleConditional"
    // InternalSCEst.g:11499:1: ruleConditional returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'if' ( (lv_expression_2_0= ruleBoolExpression ) ) otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* otherlv_6= '}' ( ( (lv_else_7_0= ruleElseScope ) ) | ( (lv_semicolon_8_0= ';' ) ) )? ) ;
    public final EObject ruleConditional() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_6=null;
        Token lv_semicolon_8_0=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_expression_2_0 = null;

        EObject lv_declarations_4_0 = null;

        EObject lv_statements_5_0 = null;

        EObject lv_else_7_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:11505:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'if' ( (lv_expression_2_0= ruleBoolExpression ) ) otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* otherlv_6= '}' ( ( (lv_else_7_0= ruleElseScope ) ) | ( (lv_semicolon_8_0= ';' ) ) )? ) )
            // InternalSCEst.g:11506:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'if' ( (lv_expression_2_0= ruleBoolExpression ) ) otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* otherlv_6= '}' ( ( (lv_else_7_0= ruleElseScope ) ) | ( (lv_semicolon_8_0= ';' ) ) )? )
            {
            // InternalSCEst.g:11506:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'if' ( (lv_expression_2_0= ruleBoolExpression ) ) otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* otherlv_6= '}' ( ( (lv_else_7_0= ruleElseScope ) ) | ( (lv_semicolon_8_0= ';' ) ) )? )
            // InternalSCEst.g:11507:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'if' ( (lv_expression_2_0= ruleBoolExpression ) ) otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* otherlv_6= '}' ( ( (lv_else_7_0= ruleElseScope ) ) | ( (lv_semicolon_8_0= ';' ) ) )?
            {
            // InternalSCEst.g:11507:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop250:
            do {
                int alt250=2;
                int LA250_0 = input.LA(1);

                if ( (LA250_0==RULE_COMMENT_ANNOTATION||LA250_0==128) ) {
                    alt250=1;
                }


                switch (alt250) {
            	case 1 :
            	    // InternalSCEst.g:11508:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:11508:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCEst.g:11509:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getConditionalAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_73);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getConditionalRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop250;
                }
            } while (true);

            otherlv_1=(Token)match(input,59,FollowSets000.FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getConditionalAccess().getIfKeyword_1());
              		
            }
            // InternalSCEst.g:11530:3: ( (lv_expression_2_0= ruleBoolExpression ) )
            // InternalSCEst.g:11531:4: (lv_expression_2_0= ruleBoolExpression )
            {
            // InternalSCEst.g:11531:4: (lv_expression_2_0= ruleBoolExpression )
            // InternalSCEst.g:11532:5: lv_expression_2_0= ruleBoolExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConditionalAccess().getExpressionBoolExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_149);
            lv_expression_2_0=ruleBoolExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConditionalRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.BoolExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,102,FollowSets000.FOLLOW_150); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getConditionalAccess().getLeftCurlyBracketKeyword_3());
              		
            }
            // InternalSCEst.g:11553:3: ( (lv_declarations_4_0= ruleDeclaration ) )*
            loop251:
            do {
                int alt251=2;
                alt251 = dfa251.predict(input);
                switch (alt251) {
            	case 1 :
            	    // InternalSCEst.g:11554:4: (lv_declarations_4_0= ruleDeclaration )
            	    {
            	    // InternalSCEst.g:11554:4: (lv_declarations_4_0= ruleDeclaration )
            	    // InternalSCEst.g:11555:5: lv_declarations_4_0= ruleDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getConditionalAccess().getDeclarationsDeclarationParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_150);
            	    lv_declarations_4_0=ruleDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getConditionalRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_4_0,
            	      						"de.cau.cs.kieler.kexpressions.kext.KExt.Declaration");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop251;
                }
            } while (true);

            // InternalSCEst.g:11572:3: ( (lv_statements_5_0= ruleStatement ) )*
            loop252:
            do {
                int alt252=2;
                int LA252_0 = input.LA(1);

                if ( (LA252_0==RULE_ID||LA252_0==RULE_COMMENT_ANNOTATION||(LA252_0>=23 && LA252_0<=24)||(LA252_0>=46 && LA252_0<=49)||(LA252_0>=51 && LA252_0<=54)||(LA252_0>=58 && LA252_0<=59)||LA252_0==61||(LA252_0>=63 && LA252_0<=64)||(LA252_0>=66 && LA252_0<=67)||(LA252_0>=69 && LA252_0<=72)||(LA252_0>=75 && LA252_0<=80)||LA252_0==100||LA252_0==102||LA252_0==104||LA252_0==128) ) {
                    alt252=1;
                }


                switch (alt252) {
            	case 1 :
            	    // InternalSCEst.g:11573:4: (lv_statements_5_0= ruleStatement )
            	    {
            	    // InternalSCEst.g:11573:4: (lv_statements_5_0= ruleStatement )
            	    // InternalSCEst.g:11574:5: lv_statements_5_0= ruleStatement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getConditionalAccess().getStatementsStatementParserRuleCall_5_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_151);
            	    lv_statements_5_0=ruleStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getConditionalRule());
            	      					}
            	      					add(
            	      						current,
            	      						"statements",
            	      						lv_statements_5_0,
            	      						"de.cau.cs.kieler.esterel.scest.SCEst.Statement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop252;
                }
            } while (true);

            otherlv_6=(Token)match(input,103,FollowSets000.FOLLOW_152); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getConditionalAccess().getRightCurlyBracketKeyword_6());
              		
            }
            // InternalSCEst.g:11595:3: ( ( (lv_else_7_0= ruleElseScope ) ) | ( (lv_semicolon_8_0= ';' ) ) )?
            int alt253=3;
            alt253 = dfa253.predict(input);
            switch (alt253) {
                case 1 :
                    // InternalSCEst.g:11596:4: ( (lv_else_7_0= ruleElseScope ) )
                    {
                    // InternalSCEst.g:11596:4: ( (lv_else_7_0= ruleElseScope ) )
                    // InternalSCEst.g:11597:5: (lv_else_7_0= ruleElseScope )
                    {
                    // InternalSCEst.g:11597:5: (lv_else_7_0= ruleElseScope )
                    // InternalSCEst.g:11598:6: lv_else_7_0= ruleElseScope
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConditionalAccess().getElseElseScopeParserRuleCall_7_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_else_7_0=ruleElseScope();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConditionalRule());
                      						}
                      						set(
                      							current,
                      							"else",
                      							lv_else_7_0,
                      							"de.cau.cs.kieler.scl.SCL.ElseScope");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCEst.g:11616:4: ( (lv_semicolon_8_0= ';' ) )
                    {
                    // InternalSCEst.g:11616:4: ( (lv_semicolon_8_0= ';' ) )
                    // InternalSCEst.g:11617:5: (lv_semicolon_8_0= ';' )
                    {
                    // InternalSCEst.g:11617:5: (lv_semicolon_8_0= ';' )
                    // InternalSCEst.g:11618:6: lv_semicolon_8_0= ';'
                    {
                    lv_semicolon_8_0=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_semicolon_8_0, grammarAccess.getConditionalAccess().getSemicolonSemicolonKeyword_7_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConditionalRule());
                      						}
                      						setWithLastConsumed(current, "semicolon", true, ";");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConditional"


    // $ANTLR start "entryRuleElseScope"
    // InternalSCEst.g:11635:1: entryRuleElseScope returns [EObject current=null] : iv_ruleElseScope= ruleElseScope EOF ;
    public final EObject entryRuleElseScope() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleElseScope = null;


        try {
            // InternalSCEst.g:11635:50: (iv_ruleElseScope= ruleElseScope EOF )
            // InternalSCEst.g:11636:2: iv_ruleElseScope= ruleElseScope EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElseScopeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleElseScope=ruleElseScope();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleElseScope; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleElseScope"


    // $ANTLR start "ruleElseScope"
    // InternalSCEst.g:11642:1: ruleElseScope returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'else' otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* otherlv_6= '}' ( (lv_semicolon_7_0= ';' ) )? ) ;
    public final EObject ruleElseScope() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_6=null;
        Token lv_semicolon_7_0=null;
        EObject lv_annotations_1_0 = null;

        EObject lv_declarations_4_0 = null;

        EObject lv_statements_5_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:11648:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'else' otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* otherlv_6= '}' ( (lv_semicolon_7_0= ';' ) )? ) )
            // InternalSCEst.g:11649:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'else' otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* otherlv_6= '}' ( (lv_semicolon_7_0= ';' ) )? )
            {
            // InternalSCEst.g:11649:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'else' otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* otherlv_6= '}' ( (lv_semicolon_7_0= ';' ) )? )
            // InternalSCEst.g:11650:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'else' otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* otherlv_6= '}' ( (lv_semicolon_7_0= ';' ) )?
            {
            // InternalSCEst.g:11650:3: ()
            // InternalSCEst.g:11651:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getElseScopeAccess().getElseScopeAction_0(),
              					current);
              			
            }

            }

            // InternalSCEst.g:11660:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop254:
            do {
                int alt254=2;
                int LA254_0 = input.LA(1);

                if ( (LA254_0==RULE_COMMENT_ANNOTATION||LA254_0==128) ) {
                    alt254=1;
                }


                switch (alt254) {
            	case 1 :
            	    // InternalSCEst.g:11661:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:11661:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCEst.g:11662:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getElseScopeAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_153);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getElseScopeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop254;
                }
            } while (true);

            otherlv_2=(Token)match(input,56,FollowSets000.FOLLOW_149); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getElseScopeAccess().getElseKeyword_2());
              		
            }
            otherlv_3=(Token)match(input,102,FollowSets000.FOLLOW_150); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getElseScopeAccess().getLeftCurlyBracketKeyword_3());
              		
            }
            // InternalSCEst.g:11687:3: ( (lv_declarations_4_0= ruleDeclaration ) )*
            loop255:
            do {
                int alt255=2;
                alt255 = dfa255.predict(input);
                switch (alt255) {
            	case 1 :
            	    // InternalSCEst.g:11688:4: (lv_declarations_4_0= ruleDeclaration )
            	    {
            	    // InternalSCEst.g:11688:4: (lv_declarations_4_0= ruleDeclaration )
            	    // InternalSCEst.g:11689:5: lv_declarations_4_0= ruleDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getElseScopeAccess().getDeclarationsDeclarationParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_150);
            	    lv_declarations_4_0=ruleDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getElseScopeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_4_0,
            	      						"de.cau.cs.kieler.kexpressions.kext.KExt.Declaration");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop255;
                }
            } while (true);

            // InternalSCEst.g:11706:3: ( (lv_statements_5_0= ruleStatement ) )*
            loop256:
            do {
                int alt256=2;
                int LA256_0 = input.LA(1);

                if ( (LA256_0==RULE_ID||LA256_0==RULE_COMMENT_ANNOTATION||(LA256_0>=23 && LA256_0<=24)||(LA256_0>=46 && LA256_0<=49)||(LA256_0>=51 && LA256_0<=54)||(LA256_0>=58 && LA256_0<=59)||LA256_0==61||(LA256_0>=63 && LA256_0<=64)||(LA256_0>=66 && LA256_0<=67)||(LA256_0>=69 && LA256_0<=72)||(LA256_0>=75 && LA256_0<=80)||LA256_0==100||LA256_0==102||LA256_0==104||LA256_0==128) ) {
                    alt256=1;
                }


                switch (alt256) {
            	case 1 :
            	    // InternalSCEst.g:11707:4: (lv_statements_5_0= ruleStatement )
            	    {
            	    // InternalSCEst.g:11707:4: (lv_statements_5_0= ruleStatement )
            	    // InternalSCEst.g:11708:5: lv_statements_5_0= ruleStatement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getElseScopeAccess().getStatementsStatementParserRuleCall_5_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_151);
            	    lv_statements_5_0=ruleStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getElseScopeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"statements",
            	      						lv_statements_5_0,
            	      						"de.cau.cs.kieler.esterel.scest.SCEst.Statement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop256;
                }
            } while (true);

            otherlv_6=(Token)match(input,103,FollowSets000.FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getElseScopeAccess().getRightCurlyBracketKeyword_6());
              		
            }
            // InternalSCEst.g:11729:3: ( (lv_semicolon_7_0= ';' ) )?
            int alt257=2;
            int LA257_0 = input.LA(1);

            if ( (LA257_0==21) ) {
                alt257=1;
            }
            switch (alt257) {
                case 1 :
                    // InternalSCEst.g:11730:4: (lv_semicolon_7_0= ';' )
                    {
                    // InternalSCEst.g:11730:4: (lv_semicolon_7_0= ';' )
                    // InternalSCEst.g:11731:5: lv_semicolon_7_0= ';'
                    {
                    lv_semicolon_7_0=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_semicolon_7_0, grammarAccess.getElseScopeAccess().getSemicolonSemicolonKeyword_7_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElseScopeRule());
                      					}
                      					setWithLastConsumed(current, "semicolon", true, ";");
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleElseScope"


    // $ANTLR start "entryRuleLegacyConditional"
    // InternalSCEst.g:11747:1: entryRuleLegacyConditional returns [EObject current=null] : iv_ruleLegacyConditional= ruleLegacyConditional EOF ;
    public final EObject entryRuleLegacyConditional() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLegacyConditional = null;


        try {
            // InternalSCEst.g:11747:58: (iv_ruleLegacyConditional= ruleLegacyConditional EOF )
            // InternalSCEst.g:11748:2: iv_ruleLegacyConditional= ruleLegacyConditional EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLegacyConditionalRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLegacyConditional=ruleLegacyConditional();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLegacyConditional; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLegacyConditional"


    // $ANTLR start "ruleLegacyConditional"
    // InternalSCEst.g:11754:1: ruleLegacyConditional returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'if' ( (lv_expression_2_0= ruleBoolExpression ) ) otherlv_3= 'then' ( (lv_statements_4_0= ruleStatement ) )* ( (otherlv_5= 'end' ( (lv_semicolon_6_0= ';' ) )? ) | ( (lv_else_7_0= ruleLegacyElseScope ) ) ) ) ;
    public final EObject ruleLegacyConditional() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token lv_semicolon_6_0=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_expression_2_0 = null;

        EObject lv_statements_4_0 = null;

        EObject lv_else_7_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:11760:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'if' ( (lv_expression_2_0= ruleBoolExpression ) ) otherlv_3= 'then' ( (lv_statements_4_0= ruleStatement ) )* ( (otherlv_5= 'end' ( (lv_semicolon_6_0= ';' ) )? ) | ( (lv_else_7_0= ruleLegacyElseScope ) ) ) ) )
            // InternalSCEst.g:11761:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'if' ( (lv_expression_2_0= ruleBoolExpression ) ) otherlv_3= 'then' ( (lv_statements_4_0= ruleStatement ) )* ( (otherlv_5= 'end' ( (lv_semicolon_6_0= ';' ) )? ) | ( (lv_else_7_0= ruleLegacyElseScope ) ) ) )
            {
            // InternalSCEst.g:11761:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'if' ( (lv_expression_2_0= ruleBoolExpression ) ) otherlv_3= 'then' ( (lv_statements_4_0= ruleStatement ) )* ( (otherlv_5= 'end' ( (lv_semicolon_6_0= ';' ) )? ) | ( (lv_else_7_0= ruleLegacyElseScope ) ) ) )
            // InternalSCEst.g:11762:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'if' ( (lv_expression_2_0= ruleBoolExpression ) ) otherlv_3= 'then' ( (lv_statements_4_0= ruleStatement ) )* ( (otherlv_5= 'end' ( (lv_semicolon_6_0= ';' ) )? ) | ( (lv_else_7_0= ruleLegacyElseScope ) ) )
            {
            // InternalSCEst.g:11762:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop258:
            do {
                int alt258=2;
                int LA258_0 = input.LA(1);

                if ( (LA258_0==RULE_COMMENT_ANNOTATION||LA258_0==128) ) {
                    alt258=1;
                }


                switch (alt258) {
            	case 1 :
            	    // InternalSCEst.g:11763:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:11763:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCEst.g:11764:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getLegacyConditionalAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_73);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getLegacyConditionalRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop258;
                }
            } while (true);

            otherlv_1=(Token)match(input,59,FollowSets000.FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getLegacyConditionalAccess().getIfKeyword_1());
              		
            }
            // InternalSCEst.g:11785:3: ( (lv_expression_2_0= ruleBoolExpression ) )
            // InternalSCEst.g:11786:4: (lv_expression_2_0= ruleBoolExpression )
            {
            // InternalSCEst.g:11786:4: (lv_expression_2_0= ruleBoolExpression )
            // InternalSCEst.g:11787:5: lv_expression_2_0= ruleBoolExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLegacyConditionalAccess().getExpressionBoolExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_154);
            lv_expression_2_0=ruleBoolExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLegacyConditionalRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.BoolExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,55,FollowSets000.FOLLOW_155); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getLegacyConditionalAccess().getThenKeyword_3());
              		
            }
            // InternalSCEst.g:11808:3: ( (lv_statements_4_0= ruleStatement ) )*
            loop259:
            do {
                int alt259=2;
                alt259 = dfa259.predict(input);
                switch (alt259) {
            	case 1 :
            	    // InternalSCEst.g:11809:4: (lv_statements_4_0= ruleStatement )
            	    {
            	    // InternalSCEst.g:11809:4: (lv_statements_4_0= ruleStatement )
            	    // InternalSCEst.g:11810:5: lv_statements_4_0= ruleStatement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getLegacyConditionalAccess().getStatementsStatementParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_155);
            	    lv_statements_4_0=ruleStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getLegacyConditionalRule());
            	      					}
            	      					add(
            	      						current,
            	      						"statements",
            	      						lv_statements_4_0,
            	      						"de.cau.cs.kieler.esterel.scest.SCEst.Statement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop259;
                }
            } while (true);

            // InternalSCEst.g:11827:3: ( (otherlv_5= 'end' ( (lv_semicolon_6_0= ';' ) )? ) | ( (lv_else_7_0= ruleLegacyElseScope ) ) )
            int alt261=2;
            int LA261_0 = input.LA(1);

            if ( (LA261_0==19) ) {
                alt261=1;
            }
            else if ( (LA261_0==RULE_COMMENT_ANNOTATION||LA261_0==56||LA261_0==128) ) {
                alt261=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 261, 0, input);

                throw nvae;
            }
            switch (alt261) {
                case 1 :
                    // InternalSCEst.g:11828:4: (otherlv_5= 'end' ( (lv_semicolon_6_0= ';' ) )? )
                    {
                    // InternalSCEst.g:11828:4: (otherlv_5= 'end' ( (lv_semicolon_6_0= ';' ) )? )
                    // InternalSCEst.g:11829:5: otherlv_5= 'end' ( (lv_semicolon_6_0= ';' ) )?
                    {
                    otherlv_5=(Token)match(input,19,FollowSets000.FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getLegacyConditionalAccess().getEndKeyword_5_0_0());
                      				
                    }
                    // InternalSCEst.g:11833:5: ( (lv_semicolon_6_0= ';' ) )?
                    int alt260=2;
                    int LA260_0 = input.LA(1);

                    if ( (LA260_0==21) ) {
                        alt260=1;
                    }
                    switch (alt260) {
                        case 1 :
                            // InternalSCEst.g:11834:6: (lv_semicolon_6_0= ';' )
                            {
                            // InternalSCEst.g:11834:6: (lv_semicolon_6_0= ';' )
                            // InternalSCEst.g:11835:7: lv_semicolon_6_0= ';'
                            {
                            lv_semicolon_6_0=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_semicolon_6_0, grammarAccess.getLegacyConditionalAccess().getSemicolonSemicolonKeyword_5_0_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getLegacyConditionalRule());
                              							}
                              							setWithLastConsumed(current, "semicolon", true, ";");
                              						
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCEst.g:11849:4: ( (lv_else_7_0= ruleLegacyElseScope ) )
                    {
                    // InternalSCEst.g:11849:4: ( (lv_else_7_0= ruleLegacyElseScope ) )
                    // InternalSCEst.g:11850:5: (lv_else_7_0= ruleLegacyElseScope )
                    {
                    // InternalSCEst.g:11850:5: (lv_else_7_0= ruleLegacyElseScope )
                    // InternalSCEst.g:11851:6: lv_else_7_0= ruleLegacyElseScope
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLegacyConditionalAccess().getElseLegacyElseScopeParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_else_7_0=ruleLegacyElseScope();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLegacyConditionalRule());
                      						}
                      						set(
                      							current,
                      							"else",
                      							lv_else_7_0,
                      							"de.cau.cs.kieler.scl.SCL.LegacyElseScope");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLegacyConditional"


    // $ANTLR start "entryRuleLegacyElseScope"
    // InternalSCEst.g:11873:1: entryRuleLegacyElseScope returns [EObject current=null] : iv_ruleLegacyElseScope= ruleLegacyElseScope EOF ;
    public final EObject entryRuleLegacyElseScope() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLegacyElseScope = null;


        try {
            // InternalSCEst.g:11873:56: (iv_ruleLegacyElseScope= ruleLegacyElseScope EOF )
            // InternalSCEst.g:11874:2: iv_ruleLegacyElseScope= ruleLegacyElseScope EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLegacyElseScopeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLegacyElseScope=ruleLegacyElseScope();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLegacyElseScope; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLegacyElseScope"


    // $ANTLR start "ruleLegacyElseScope"
    // InternalSCEst.g:11880:1: ruleLegacyElseScope returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'else' ( (lv_statements_3_0= ruleStatement ) )* otherlv_4= 'end' ( (lv_semicolon_5_0= ';' ) )? ) ;
    public final EObject ruleLegacyElseScope() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_semicolon_5_0=null;
        EObject lv_annotations_1_0 = null;

        EObject lv_statements_3_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:11886:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'else' ( (lv_statements_3_0= ruleStatement ) )* otherlv_4= 'end' ( (lv_semicolon_5_0= ';' ) )? ) )
            // InternalSCEst.g:11887:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'else' ( (lv_statements_3_0= ruleStatement ) )* otherlv_4= 'end' ( (lv_semicolon_5_0= ';' ) )? )
            {
            // InternalSCEst.g:11887:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'else' ( (lv_statements_3_0= ruleStatement ) )* otherlv_4= 'end' ( (lv_semicolon_5_0= ';' ) )? )
            // InternalSCEst.g:11888:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'else' ( (lv_statements_3_0= ruleStatement ) )* otherlv_4= 'end' ( (lv_semicolon_5_0= ';' ) )?
            {
            // InternalSCEst.g:11888:3: ()
            // InternalSCEst.g:11889:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getLegacyElseScopeAccess().getElseScopeAction_0(),
              					current);
              			
            }

            }

            // InternalSCEst.g:11898:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop262:
            do {
                int alt262=2;
                int LA262_0 = input.LA(1);

                if ( (LA262_0==RULE_COMMENT_ANNOTATION||LA262_0==128) ) {
                    alt262=1;
                }


                switch (alt262) {
            	case 1 :
            	    // InternalSCEst.g:11899:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:11899:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCEst.g:11900:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getLegacyElseScopeAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_153);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getLegacyElseScopeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop262;
                }
            } while (true);

            otherlv_2=(Token)match(input,56,FollowSets000.FOLLOW_156); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getLegacyElseScopeAccess().getElseKeyword_2());
              		
            }
            // InternalSCEst.g:11921:3: ( (lv_statements_3_0= ruleStatement ) )*
            loop263:
            do {
                int alt263=2;
                int LA263_0 = input.LA(1);

                if ( (LA263_0==RULE_ID||LA263_0==RULE_COMMENT_ANNOTATION||(LA263_0>=23 && LA263_0<=24)||(LA263_0>=46 && LA263_0<=49)||(LA263_0>=51 && LA263_0<=54)||(LA263_0>=58 && LA263_0<=59)||LA263_0==61||(LA263_0>=63 && LA263_0<=64)||(LA263_0>=66 && LA263_0<=67)||(LA263_0>=69 && LA263_0<=72)||(LA263_0>=75 && LA263_0<=80)||LA263_0==100||LA263_0==102||LA263_0==104||LA263_0==128) ) {
                    alt263=1;
                }


                switch (alt263) {
            	case 1 :
            	    // InternalSCEst.g:11922:4: (lv_statements_3_0= ruleStatement )
            	    {
            	    // InternalSCEst.g:11922:4: (lv_statements_3_0= ruleStatement )
            	    // InternalSCEst.g:11923:5: lv_statements_3_0= ruleStatement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getLegacyElseScopeAccess().getStatementsStatementParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_156);
            	    lv_statements_3_0=ruleStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getLegacyElseScopeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"statements",
            	      						lv_statements_3_0,
            	      						"de.cau.cs.kieler.esterel.scest.SCEst.Statement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop263;
                }
            } while (true);

            otherlv_4=(Token)match(input,19,FollowSets000.FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getLegacyElseScopeAccess().getEndKeyword_4());
              		
            }
            // InternalSCEst.g:11944:3: ( (lv_semicolon_5_0= ';' ) )?
            int alt264=2;
            int LA264_0 = input.LA(1);

            if ( (LA264_0==21) ) {
                alt264=1;
            }
            switch (alt264) {
                case 1 :
                    // InternalSCEst.g:11945:4: (lv_semicolon_5_0= ';' )
                    {
                    // InternalSCEst.g:11945:4: (lv_semicolon_5_0= ';' )
                    // InternalSCEst.g:11946:5: lv_semicolon_5_0= ';'
                    {
                    lv_semicolon_5_0=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_semicolon_5_0, grammarAccess.getLegacyElseScopeAccess().getSemicolonSemicolonKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLegacyElseScopeRule());
                      					}
                      					setWithLastConsumed(current, "semicolon", true, ";");
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLegacyElseScope"


    // $ANTLR start "entryRuleThread"
    // InternalSCEst.g:11962:1: entryRuleThread returns [EObject current=null] : iv_ruleThread= ruleThread EOF ;
    public final EObject entryRuleThread() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleThread = null;


        try {
            // InternalSCEst.g:11962:47: (iv_ruleThread= ruleThread EOF )
            // InternalSCEst.g:11963:2: iv_ruleThread= ruleThread EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getThreadRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleThread=ruleThread();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleThread; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleThread"


    // $ANTLR start "ruleThread"
    // InternalSCEst.g:11969:1: ruleThread returns [EObject current=null] : ( () ( ( ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' ) | ( (lv_statements_6_0= ruleStatement ) )* ) ) ;
    public final EObject ruleThread() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_5=null;
        EObject lv_annotations_1_0 = null;

        EObject lv_declarations_3_0 = null;

        EObject lv_statements_4_0 = null;

        EObject lv_statements_6_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:11975:2: ( ( () ( ( ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' ) | ( (lv_statements_6_0= ruleStatement ) )* ) ) )
            // InternalSCEst.g:11976:2: ( () ( ( ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' ) | ( (lv_statements_6_0= ruleStatement ) )* ) )
            {
            // InternalSCEst.g:11976:2: ( () ( ( ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' ) | ( (lv_statements_6_0= ruleStatement ) )* ) )
            // InternalSCEst.g:11977:3: () ( ( ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' ) | ( (lv_statements_6_0= ruleStatement ) )* )
            {
            // InternalSCEst.g:11977:3: ()
            // InternalSCEst.g:11978:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getThreadAccess().getThreadAction_0(),
              					current);
              			
            }

            }

            // InternalSCEst.g:11987:3: ( ( ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' ) | ( (lv_statements_6_0= ruleStatement ) )* )
            int alt269=2;
            alt269 = dfa269.predict(input);
            switch (alt269) {
                case 1 :
                    // InternalSCEst.g:11988:4: ( ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' )
                    {
                    // InternalSCEst.g:11988:4: ( ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' )
                    // InternalSCEst.g:11989:5: ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}'
                    {
                    // InternalSCEst.g:11989:5: ( (lv_annotations_1_0= ruleAnnotation ) )*
                    loop265:
                    do {
                        int alt265=2;
                        int LA265_0 = input.LA(1);

                        if ( (LA265_0==RULE_COMMENT_ANNOTATION||LA265_0==128) ) {
                            alt265=1;
                        }


                        switch (alt265) {
                    	case 1 :
                    	    // InternalSCEst.g:11990:6: (lv_annotations_1_0= ruleAnnotation )
                    	    {
                    	    // InternalSCEst.g:11990:6: (lv_annotations_1_0= ruleAnnotation )
                    	    // InternalSCEst.g:11991:7: lv_annotations_1_0= ruleAnnotation
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getThreadAccess().getAnnotationsAnnotationParserRuleCall_1_0_0_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_157);
                    	    lv_annotations_1_0=ruleAnnotation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getThreadRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"annotations",
                    	      								lv_annotations_1_0,
                    	      								"de.cau.cs.kieler.annotations.Annotations.Annotation");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop265;
                        }
                    } while (true);

                    otherlv_2=(Token)match(input,102,FollowSets000.FOLLOW_150); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getThreadAccess().getLeftCurlyBracketKeyword_1_0_1());
                      				
                    }
                    // InternalSCEst.g:12012:5: ( (lv_declarations_3_0= ruleDeclaration ) )*
                    loop266:
                    do {
                        int alt266=2;
                        alt266 = dfa266.predict(input);
                        switch (alt266) {
                    	case 1 :
                    	    // InternalSCEst.g:12013:6: (lv_declarations_3_0= ruleDeclaration )
                    	    {
                    	    // InternalSCEst.g:12013:6: (lv_declarations_3_0= ruleDeclaration )
                    	    // InternalSCEst.g:12014:7: lv_declarations_3_0= ruleDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getThreadAccess().getDeclarationsDeclarationParserRuleCall_1_0_2_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_150);
                    	    lv_declarations_3_0=ruleDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getThreadRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"declarations",
                    	      								lv_declarations_3_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.Declaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop266;
                        }
                    } while (true);

                    // InternalSCEst.g:12031:5: ( (lv_statements_4_0= ruleStatement ) )*
                    loop267:
                    do {
                        int alt267=2;
                        int LA267_0 = input.LA(1);

                        if ( (LA267_0==RULE_ID||LA267_0==RULE_COMMENT_ANNOTATION||(LA267_0>=23 && LA267_0<=24)||(LA267_0>=46 && LA267_0<=49)||(LA267_0>=51 && LA267_0<=54)||(LA267_0>=58 && LA267_0<=59)||LA267_0==61||(LA267_0>=63 && LA267_0<=64)||(LA267_0>=66 && LA267_0<=67)||(LA267_0>=69 && LA267_0<=72)||(LA267_0>=75 && LA267_0<=80)||LA267_0==100||LA267_0==102||LA267_0==104||LA267_0==128) ) {
                            alt267=1;
                        }


                        switch (alt267) {
                    	case 1 :
                    	    // InternalSCEst.g:12032:6: (lv_statements_4_0= ruleStatement )
                    	    {
                    	    // InternalSCEst.g:12032:6: (lv_statements_4_0= ruleStatement )
                    	    // InternalSCEst.g:12033:7: lv_statements_4_0= ruleStatement
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getThreadAccess().getStatementsStatementParserRuleCall_1_0_3_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_151);
                    	    lv_statements_4_0=ruleStatement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getThreadRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"statements",
                    	      								lv_statements_4_0,
                    	      								"de.cau.cs.kieler.esterel.scest.SCEst.Statement");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop267;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,103,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getThreadAccess().getRightCurlyBracketKeyword_1_0_4());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCEst.g:12056:4: ( (lv_statements_6_0= ruleStatement ) )*
                    {
                    // InternalSCEst.g:12056:4: ( (lv_statements_6_0= ruleStatement ) )*
                    loop268:
                    do {
                        int alt268=2;
                        int LA268_0 = input.LA(1);

                        if ( (LA268_0==RULE_ID||LA268_0==RULE_COMMENT_ANNOTATION||(LA268_0>=23 && LA268_0<=24)||(LA268_0>=46 && LA268_0<=49)||(LA268_0>=51 && LA268_0<=54)||(LA268_0>=58 && LA268_0<=59)||LA268_0==61||(LA268_0>=63 && LA268_0<=64)||(LA268_0>=66 && LA268_0<=67)||(LA268_0>=69 && LA268_0<=72)||(LA268_0>=75 && LA268_0<=80)||LA268_0==100||LA268_0==102||LA268_0==104||LA268_0==128) ) {
                            alt268=1;
                        }


                        switch (alt268) {
                    	case 1 :
                    	    // InternalSCEst.g:12057:5: (lv_statements_6_0= ruleStatement )
                    	    {
                    	    // InternalSCEst.g:12057:5: (lv_statements_6_0= ruleStatement )
                    	    // InternalSCEst.g:12058:6: lv_statements_6_0= ruleStatement
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getThreadAccess().getStatementsStatementParserRuleCall_1_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_13);
                    	    lv_statements_6_0=ruleStatement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getThreadRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"statements",
                    	      							lv_statements_6_0,
                    	      							"de.cau.cs.kieler.esterel.scest.SCEst.Statement");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop268;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleThread"


    // $ANTLR start "entryRuleParallel"
    // InternalSCEst.g:12080:1: entryRuleParallel returns [EObject current=null] : iv_ruleParallel= ruleParallel EOF ;
    public final EObject entryRuleParallel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParallel = null;


        try {
            // InternalSCEst.g:12080:49: (iv_ruleParallel= ruleParallel EOF )
            // InternalSCEst.g:12081:2: iv_ruleParallel= ruleParallel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParallelRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleParallel=ruleParallel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParallel; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParallel"


    // $ANTLR start "ruleParallel"
    // InternalSCEst.g:12087:1: ruleParallel returns [EObject current=null] : (otherlv_0= 'fork' ( ( (lv_threads_1_0= ruleThread ) ) (otherlv_2= 'par' ( (lv_threads_3_0= ruleThread ) ) )* ) otherlv_4= 'join' ( (lv_semicolon_5_0= ';' ) )? ) ;
    public final EObject ruleParallel() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_semicolon_5_0=null;
        EObject lv_threads_1_0 = null;

        EObject lv_threads_3_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:12093:2: ( (otherlv_0= 'fork' ( ( (lv_threads_1_0= ruleThread ) ) (otherlv_2= 'par' ( (lv_threads_3_0= ruleThread ) ) )* ) otherlv_4= 'join' ( (lv_semicolon_5_0= ';' ) )? ) )
            // InternalSCEst.g:12094:2: (otherlv_0= 'fork' ( ( (lv_threads_1_0= ruleThread ) ) (otherlv_2= 'par' ( (lv_threads_3_0= ruleThread ) ) )* ) otherlv_4= 'join' ( (lv_semicolon_5_0= ';' ) )? )
            {
            // InternalSCEst.g:12094:2: (otherlv_0= 'fork' ( ( (lv_threads_1_0= ruleThread ) ) (otherlv_2= 'par' ( (lv_threads_3_0= ruleThread ) ) )* ) otherlv_4= 'join' ( (lv_semicolon_5_0= ';' ) )? )
            // InternalSCEst.g:12095:3: otherlv_0= 'fork' ( ( (lv_threads_1_0= ruleThread ) ) (otherlv_2= 'par' ( (lv_threads_3_0= ruleThread ) ) )* ) otherlv_4= 'join' ( (lv_semicolon_5_0= ';' ) )?
            {
            otherlv_0=(Token)match(input,104,FollowSets000.FOLLOW_158); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getParallelAccess().getForkKeyword_0());
              		
            }
            // InternalSCEst.g:12099:3: ( ( (lv_threads_1_0= ruleThread ) ) (otherlv_2= 'par' ( (lv_threads_3_0= ruleThread ) ) )* )
            // InternalSCEst.g:12100:4: ( (lv_threads_1_0= ruleThread ) ) (otherlv_2= 'par' ( (lv_threads_3_0= ruleThread ) ) )*
            {
            // InternalSCEst.g:12100:4: ( (lv_threads_1_0= ruleThread ) )
            // InternalSCEst.g:12101:5: (lv_threads_1_0= ruleThread )
            {
            // InternalSCEst.g:12101:5: (lv_threads_1_0= ruleThread )
            // InternalSCEst.g:12102:6: lv_threads_1_0= ruleThread
            {
            if ( state.backtracking==0 ) {

              						newCompositeNode(grammarAccess.getParallelAccess().getThreadsThreadParserRuleCall_1_0_0());
              					
            }
            pushFollow(FollowSets000.FOLLOW_159);
            lv_threads_1_0=ruleThread();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElementForParent(grammarAccess.getParallelRule());
              						}
              						add(
              							current,
              							"threads",
              							lv_threads_1_0,
              							"de.cau.cs.kieler.scl.SCL.Thread");
              						afterParserOrEnumRuleCall();
              					
            }

            }


            }

            // InternalSCEst.g:12119:4: (otherlv_2= 'par' ( (lv_threads_3_0= ruleThread ) ) )*
            loop270:
            do {
                int alt270=2;
                int LA270_0 = input.LA(1);

                if ( (LA270_0==105) ) {
                    alt270=1;
                }


                switch (alt270) {
            	case 1 :
            	    // InternalSCEst.g:12120:5: otherlv_2= 'par' ( (lv_threads_3_0= ruleThread ) )
            	    {
            	    otherlv_2=(Token)match(input,105,FollowSets000.FOLLOW_158); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_2, grammarAccess.getParallelAccess().getParKeyword_1_1_0());
            	      				
            	    }
            	    // InternalSCEst.g:12124:5: ( (lv_threads_3_0= ruleThread ) )
            	    // InternalSCEst.g:12125:6: (lv_threads_3_0= ruleThread )
            	    {
            	    // InternalSCEst.g:12125:6: (lv_threads_3_0= ruleThread )
            	    // InternalSCEst.g:12126:7: lv_threads_3_0= ruleThread
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getParallelAccess().getThreadsThreadParserRuleCall_1_1_1_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_159);
            	    lv_threads_3_0=ruleThread();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getParallelRule());
            	      							}
            	      							add(
            	      								current,
            	      								"threads",
            	      								lv_threads_3_0,
            	      								"de.cau.cs.kieler.scl.SCL.Thread");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop270;
                }
            } while (true);


            }

            otherlv_4=(Token)match(input,106,FollowSets000.FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getParallelAccess().getJoinKeyword_2());
              		
            }
            // InternalSCEst.g:12149:3: ( (lv_semicolon_5_0= ';' ) )?
            int alt271=2;
            int LA271_0 = input.LA(1);

            if ( (LA271_0==21) ) {
                alt271=1;
            }
            switch (alt271) {
                case 1 :
                    // InternalSCEst.g:12150:4: (lv_semicolon_5_0= ';' )
                    {
                    // InternalSCEst.g:12150:4: (lv_semicolon_5_0= ';' )
                    // InternalSCEst.g:12151:5: lv_semicolon_5_0= ';'
                    {
                    lv_semicolon_5_0=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_semicolon_5_0, grammarAccess.getParallelAccess().getSemicolonSemicolonKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getParallelRule());
                      					}
                      					setWithLastConsumed(current, "semicolon", true, ";");
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParallel"


    // $ANTLR start "entryRuleScopeStatement"
    // InternalSCEst.g:12167:1: entryRuleScopeStatement returns [EObject current=null] : iv_ruleScopeStatement= ruleScopeStatement EOF ;
    public final EObject entryRuleScopeStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScopeStatement = null;


        try {
            // InternalSCEst.g:12167:55: (iv_ruleScopeStatement= ruleScopeStatement EOF )
            // InternalSCEst.g:12168:2: iv_ruleScopeStatement= ruleScopeStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScopeStatementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScopeStatement=ruleScopeStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScopeStatement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScopeStatement"


    // $ANTLR start "ruleScopeStatement"
    // InternalSCEst.g:12174:1: ruleScopeStatement returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' ) ;
    public final EObject ruleScopeStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_5=null;
        EObject lv_annotations_1_0 = null;

        EObject lv_declarations_3_0 = null;

        EObject lv_statements_4_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:12180:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' ) )
            // InternalSCEst.g:12181:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' )
            {
            // InternalSCEst.g:12181:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' )
            // InternalSCEst.g:12182:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}'
            {
            // InternalSCEst.g:12182:3: ()
            // InternalSCEst.g:12183:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getScopeStatementAccess().getScopeStatementAction_0(),
              					current);
              			
            }

            }

            // InternalSCEst.g:12192:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop272:
            do {
                int alt272=2;
                int LA272_0 = input.LA(1);

                if ( (LA272_0==RULE_COMMENT_ANNOTATION||LA272_0==128) ) {
                    alt272=1;
                }


                switch (alt272) {
            	case 1 :
            	    // InternalSCEst.g:12193:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:12193:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCEst.g:12194:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getScopeStatementAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_157);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getScopeStatementRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop272;
                }
            } while (true);

            otherlv_2=(Token)match(input,102,FollowSets000.FOLLOW_150); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getScopeStatementAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalSCEst.g:12215:3: ( (lv_declarations_3_0= ruleDeclaration ) )*
            loop273:
            do {
                int alt273=2;
                alt273 = dfa273.predict(input);
                switch (alt273) {
            	case 1 :
            	    // InternalSCEst.g:12216:4: (lv_declarations_3_0= ruleDeclaration )
            	    {
            	    // InternalSCEst.g:12216:4: (lv_declarations_3_0= ruleDeclaration )
            	    // InternalSCEst.g:12217:5: lv_declarations_3_0= ruleDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getScopeStatementAccess().getDeclarationsDeclarationParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_150);
            	    lv_declarations_3_0=ruleDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getScopeStatementRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_3_0,
            	      						"de.cau.cs.kieler.kexpressions.kext.KExt.Declaration");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop273;
                }
            } while (true);

            // InternalSCEst.g:12234:3: ( (lv_statements_4_0= ruleStatement ) )*
            loop274:
            do {
                int alt274=2;
                int LA274_0 = input.LA(1);

                if ( (LA274_0==RULE_ID||LA274_0==RULE_COMMENT_ANNOTATION||(LA274_0>=23 && LA274_0<=24)||(LA274_0>=46 && LA274_0<=49)||(LA274_0>=51 && LA274_0<=54)||(LA274_0>=58 && LA274_0<=59)||LA274_0==61||(LA274_0>=63 && LA274_0<=64)||(LA274_0>=66 && LA274_0<=67)||(LA274_0>=69 && LA274_0<=72)||(LA274_0>=75 && LA274_0<=80)||LA274_0==100||LA274_0==102||LA274_0==104||LA274_0==128) ) {
                    alt274=1;
                }


                switch (alt274) {
            	case 1 :
            	    // InternalSCEst.g:12235:4: (lv_statements_4_0= ruleStatement )
            	    {
            	    // InternalSCEst.g:12235:4: (lv_statements_4_0= ruleStatement )
            	    // InternalSCEst.g:12236:5: lv_statements_4_0= ruleStatement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getScopeStatementAccess().getStatementsStatementParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_151);
            	    lv_statements_4_0=ruleStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getScopeStatementRule());
            	      					}
            	      					add(
            	      						current,
            	      						"statements",
            	      						lv_statements_4_0,
            	      						"de.cau.cs.kieler.esterel.scest.SCEst.Statement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop274;
                }
            } while (true);

            otherlv_5=(Token)match(input,103,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getScopeStatementAccess().getRightCurlyBracketKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScopeStatement"


    // $ANTLR start "entryRuleModuleCall"
    // InternalSCEst.g:12261:1: entryRuleModuleCall returns [EObject current=null] : iv_ruleModuleCall= ruleModuleCall EOF ;
    public final EObject entryRuleModuleCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModuleCall = null;


        try {
            // InternalSCEst.g:12261:51: (iv_ruleModuleCall= ruleModuleCall EOF )
            // InternalSCEst.g:12262:2: iv_ruleModuleCall= ruleModuleCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModuleCallRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleModuleCall=ruleModuleCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModuleCall; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModuleCall"


    // $ANTLR start "ruleModuleCall"
    // InternalSCEst.g:12268:1: ruleModuleCall returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'run' ( (otherlv_2= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' )? ( (lv_semicolon_9_0= ';' ) )? ) ;
    public final EObject ruleModuleCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token lv_semicolon_9_0=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_parameters_4_0 = null;

        EObject lv_parameters_6_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:12274:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'run' ( (otherlv_2= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' )? ( (lv_semicolon_9_0= ';' ) )? ) )
            // InternalSCEst.g:12275:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'run' ( (otherlv_2= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' )? ( (lv_semicolon_9_0= ';' ) )? )
            {
            // InternalSCEst.g:12275:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'run' ( (otherlv_2= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' )? ( (lv_semicolon_9_0= ';' ) )? )
            // InternalSCEst.g:12276:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'run' ( (otherlv_2= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' )? ( (lv_semicolon_9_0= ';' ) )?
            {
            // InternalSCEst.g:12276:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop275:
            do {
                int alt275=2;
                int LA275_0 = input.LA(1);

                if ( (LA275_0==RULE_COMMENT_ANNOTATION||LA275_0==128) ) {
                    alt275=1;
                }


                switch (alt275) {
            	case 1 :
            	    // InternalSCEst.g:12277:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:12277:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCEst.g:12278:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getModuleCallAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_160);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getModuleCallRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop275;
                }
            } while (true);

            otherlv_1=(Token)match(input,79,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getModuleCallAccess().getRunKeyword_1());
              		
            }
            // InternalSCEst.g:12299:3: ( (otherlv_2= RULE_ID ) )
            // InternalSCEst.g:12300:4: (otherlv_2= RULE_ID )
            {
            // InternalSCEst.g:12300:4: (otherlv_2= RULE_ID )
            // InternalSCEst.g:12301:5: otherlv_2= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getModuleCallRule());
              					}
              				
            }
            otherlv_2=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_161); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_2, grammarAccess.getModuleCallAccess().getModuleModuleCrossReference_2_0());
              				
            }

            }


            }

            // InternalSCEst.g:12315:3: ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' )?
            int alt277=3;
            int LA277_0 = input.LA(1);

            if ( (LA277_0==25) ) {
                alt277=1;
            }
            else if ( (LA277_0==34) ) {
                alt277=2;
            }
            switch (alt277) {
                case 1 :
                    // InternalSCEst.g:12316:4: (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' )
                    {
                    // InternalSCEst.g:12316:4: (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' )
                    // InternalSCEst.g:12317:5: otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')'
                    {
                    otherlv_3=(Token)match(input,25,FollowSets000.FOLLOW_162); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getModuleCallAccess().getLeftParenthesisKeyword_3_0_0());
                      				
                    }
                    // InternalSCEst.g:12321:5: ( (lv_parameters_4_0= ruleParameter ) )
                    // InternalSCEst.g:12322:6: (lv_parameters_4_0= ruleParameter )
                    {
                    // InternalSCEst.g:12322:6: (lv_parameters_4_0= ruleParameter )
                    // InternalSCEst.g:12323:7: lv_parameters_4_0= ruleParameter
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getModuleCallAccess().getParametersParameterParserRuleCall_3_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_33);
                    lv_parameters_4_0=ruleParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getModuleCallRule());
                      							}
                      							add(
                      								current,
                      								"parameters",
                      								lv_parameters_4_0,
                      								"de.cau.cs.kieler.scl.SCL.Parameter");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCEst.g:12340:5: (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )*
                    loop276:
                    do {
                        int alt276=2;
                        int LA276_0 = input.LA(1);

                        if ( (LA276_0==30) ) {
                            alt276=1;
                        }


                        switch (alt276) {
                    	case 1 :
                    	    // InternalSCEst.g:12341:6: otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) )
                    	    {
                    	    otherlv_5=(Token)match(input,30,FollowSets000.FOLLOW_162); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_5, grammarAccess.getModuleCallAccess().getCommaKeyword_3_0_2_0());
                    	      					
                    	    }
                    	    // InternalSCEst.g:12345:6: ( (lv_parameters_6_0= ruleParameter ) )
                    	    // InternalSCEst.g:12346:7: (lv_parameters_6_0= ruleParameter )
                    	    {
                    	    // InternalSCEst.g:12346:7: (lv_parameters_6_0= ruleParameter )
                    	    // InternalSCEst.g:12347:8: lv_parameters_6_0= ruleParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getModuleCallAccess().getParametersParameterParserRuleCall_3_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_33);
                    	    lv_parameters_6_0=ruleParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getModuleCallRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"parameters",
                    	      									lv_parameters_6_0,
                    	      									"de.cau.cs.kieler.scl.SCL.Parameter");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop276;
                        }
                    } while (true);

                    otherlv_7=(Token)match(input,26,FollowSets000.FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getModuleCallAccess().getRightParenthesisKeyword_3_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCEst.g:12371:4: otherlv_8= '()'
                    {
                    otherlv_8=(Token)match(input,34,FollowSets000.FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getModuleCallAccess().getLeftParenthesisRightParenthesisKeyword_3_1());
                      			
                    }

                    }
                    break;

            }

            // InternalSCEst.g:12376:3: ( (lv_semicolon_9_0= ';' ) )?
            int alt278=2;
            int LA278_0 = input.LA(1);

            if ( (LA278_0==21) ) {
                alt278=1;
            }
            switch (alt278) {
                case 1 :
                    // InternalSCEst.g:12377:4: (lv_semicolon_9_0= ';' )
                    {
                    // InternalSCEst.g:12377:4: (lv_semicolon_9_0= ';' )
                    // InternalSCEst.g:12378:5: lv_semicolon_9_0= ';'
                    {
                    lv_semicolon_9_0=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_semicolon_9_0, grammarAccess.getModuleCallAccess().getSemicolonSemicolonKeyword_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getModuleCallRule());
                      					}
                      					setWithLastConsumed(current, "semicolon", true, ";");
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModuleCall"


    // $ANTLR start "entryRuleParameter"
    // InternalSCEst.g:12394:1: entryRuleParameter returns [EObject current=null] : iv_ruleParameter= ruleParameter EOF ;
    public final EObject entryRuleParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameter = null;


        try {
            // InternalSCEst.g:12394:50: (iv_ruleParameter= ruleParameter EOF )
            // InternalSCEst.g:12395:2: iv_ruleParameter= ruleParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleParameter=ruleParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameter; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParameter"


    // $ANTLR start "ruleParameter"
    // InternalSCEst.g:12401:1: ruleParameter returns [EObject current=null] : ( ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )? ) ;
    public final EObject ruleParameter() throws RecognitionException {
        EObject current = null;

        Token lv_pureOutput_0_0=null;
        Token lv_callByReference_1_0=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_expression_2_0 = null;

        EObject lv_explicitBindingIndices_6_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:12407:2: ( ( ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )? ) )
            // InternalSCEst.g:12408:2: ( ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )? )
            {
            // InternalSCEst.g:12408:2: ( ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )? )
            // InternalSCEst.g:12409:3: ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )?
            {
            // InternalSCEst.g:12409:3: ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )?
            int alt280=2;
            int LA280_0 = input.LA(1);

            if ( ((LA280_0>=107 && LA280_0<=108)) ) {
                alt280=1;
            }
            switch (alt280) {
                case 1 :
                    // InternalSCEst.g:12410:4: ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) )
                    {
                    // InternalSCEst.g:12410:4: ( (lv_pureOutput_0_0= '!' ) )?
                    int alt279=2;
                    int LA279_0 = input.LA(1);

                    if ( (LA279_0==107) ) {
                        alt279=1;
                    }
                    switch (alt279) {
                        case 1 :
                            // InternalSCEst.g:12411:5: (lv_pureOutput_0_0= '!' )
                            {
                            // InternalSCEst.g:12411:5: (lv_pureOutput_0_0= '!' )
                            // InternalSCEst.g:12412:6: lv_pureOutput_0_0= '!'
                            {
                            lv_pureOutput_0_0=(Token)match(input,107,FollowSets000.FOLLOW_163); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_pureOutput_0_0, grammarAccess.getParameterAccess().getPureOutputExclamationMarkKeyword_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getParameterRule());
                              						}
                              						setWithLastConsumed(current, "pureOutput", true, "!");
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSCEst.g:12424:4: ( (lv_callByReference_1_0= '&' ) )
                    // InternalSCEst.g:12425:5: (lv_callByReference_1_0= '&' )
                    {
                    // InternalSCEst.g:12425:5: (lv_callByReference_1_0= '&' )
                    // InternalSCEst.g:12426:6: lv_callByReference_1_0= '&'
                    {
                    lv_callByReference_1_0=(Token)match(input,108,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_callByReference_1_0, grammarAccess.getParameterAccess().getCallByReferenceAmpersandKeyword_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getParameterRule());
                      						}
                      						setWithLastConsumed(current, "callByReference", true, "&");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCEst.g:12439:3: ( (lv_expression_2_0= ruleExpression ) )
            // InternalSCEst.g:12440:4: (lv_expression_2_0= ruleExpression )
            {
            // InternalSCEst.g:12440:4: (lv_expression_2_0= ruleExpression )
            // InternalSCEst.g:12441:5: lv_expression_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getParameterAccess().getExpressionExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_164);
            lv_expression_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getParameterRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"de.cau.cs.kieler.esterel.Esterel.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCEst.g:12458:3: (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )?
            int alt282=2;
            int LA282_0 = input.LA(1);

            if ( (LA282_0==109) ) {
                alt282=1;
            }
            switch (alt282) {
                case 1 :
                    // InternalSCEst.g:12459:4: otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )*
                    {
                    otherlv_3=(Token)match(input,109,FollowSets000.FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getParameterAccess().getToKeyword_2_0());
                      			
                    }
                    // InternalSCEst.g:12463:4: ( (otherlv_4= RULE_ID ) )
                    // InternalSCEst.g:12464:5: (otherlv_4= RULE_ID )
                    {
                    // InternalSCEst.g:12464:5: (otherlv_4= RULE_ID )
                    // InternalSCEst.g:12465:6: otherlv_4= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      						/* */
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getParameterRule());
                      						}
                      					
                    }
                    otherlv_4=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_4, grammarAccess.getParameterAccess().getExplicitBindingValuedObjectCrossReference_2_1_0());
                      					
                    }

                    }


                    }

                    // InternalSCEst.g:12479:4: (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )*
                    loop281:
                    do {
                        int alt281=2;
                        int LA281_0 = input.LA(1);

                        if ( (LA281_0==49) ) {
                            alt281=1;
                        }


                        switch (alt281) {
                    	case 1 :
                    	    // InternalSCEst.g:12480:5: otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']'
                    	    {
                    	    otherlv_5=(Token)match(input,49,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_5, grammarAccess.getParameterAccess().getLeftSquareBracketKeyword_2_2_0());
                    	      				
                    	    }
                    	    // InternalSCEst.g:12484:5: ( (lv_explicitBindingIndices_6_0= ruleExpression ) )
                    	    // InternalSCEst.g:12485:6: (lv_explicitBindingIndices_6_0= ruleExpression )
                    	    {
                    	    // InternalSCEst.g:12485:6: (lv_explicitBindingIndices_6_0= ruleExpression )
                    	    // InternalSCEst.g:12486:7: lv_explicitBindingIndices_6_0= ruleExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getParameterAccess().getExplicitBindingIndicesExpressionParserRuleCall_2_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_54);
                    	    lv_explicitBindingIndices_6_0=ruleExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getParameterRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"explicitBindingIndices",
                    	      								lv_explicitBindingIndices_6_0,
                    	      								"de.cau.cs.kieler.esterel.Esterel.Expression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }

                    	    otherlv_7=(Token)match(input,50,FollowSets000.FOLLOW_121); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_7, grammarAccess.getParameterAccess().getRightSquareBracketKeyword_2_2_2());
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop281;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameter"


    // $ANTLR start "entryRuleRootScope"
    // InternalSCEst.g:12513:1: entryRuleRootScope returns [EObject current=null] : iv_ruleRootScope= ruleRootScope EOF ;
    public final EObject entryRuleRootScope() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRootScope = null;


        try {
            // InternalSCEst.g:12513:50: (iv_ruleRootScope= ruleRootScope EOF )
            // InternalSCEst.g:12514:2: iv_ruleRootScope= ruleRootScope EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRootScopeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRootScope=ruleRootScope();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRootScope; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRootScope"


    // $ANTLR start "ruleRootScope"
    // InternalSCEst.g:12520:1: ruleRootScope returns [EObject current=null] : ( () ( (lv_declarations_1_0= ruleDeclaration ) )* ( (lv_entities_2_0= ruleTestEntity ) )* (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )* ) ;
    public final EObject ruleRootScope() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        EObject lv_declarations_1_0 = null;

        EObject lv_entities_2_0 = null;

        EObject lv_scopes_4_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:12526:2: ( ( () ( (lv_declarations_1_0= ruleDeclaration ) )* ( (lv_entities_2_0= ruleTestEntity ) )* (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )* ) )
            // InternalSCEst.g:12527:2: ( () ( (lv_declarations_1_0= ruleDeclaration ) )* ( (lv_entities_2_0= ruleTestEntity ) )* (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )* )
            {
            // InternalSCEst.g:12527:2: ( () ( (lv_declarations_1_0= ruleDeclaration ) )* ( (lv_entities_2_0= ruleTestEntity ) )* (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )* )
            // InternalSCEst.g:12528:3: () ( (lv_declarations_1_0= ruleDeclaration ) )* ( (lv_entities_2_0= ruleTestEntity ) )* (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )*
            {
            // InternalSCEst.g:12528:3: ()
            // InternalSCEst.g:12529:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getRootScopeAccess().getKExtScopeAction_0(),
              					current);
              			
            }

            }

            // InternalSCEst.g:12538:3: ( (lv_declarations_1_0= ruleDeclaration ) )*
            loop283:
            do {
                int alt283=2;
                alt283 = dfa283.predict(input);
                switch (alt283) {
            	case 1 :
            	    // InternalSCEst.g:12539:4: (lv_declarations_1_0= ruleDeclaration )
            	    {
            	    // InternalSCEst.g:12539:4: (lv_declarations_1_0= ruleDeclaration )
            	    // InternalSCEst.g:12540:5: lv_declarations_1_0= ruleDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getRootScopeAccess().getDeclarationsDeclarationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_165);
            	    lv_declarations_1_0=ruleDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getRootScopeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.kext.KExt.Declaration");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop283;
                }
            } while (true);

            // InternalSCEst.g:12557:3: ( (lv_entities_2_0= ruleTestEntity ) )*
            loop284:
            do {
                int alt284=2;
                int LA284_0 = input.LA(1);

                if ( (LA284_0==RULE_ID||LA284_0==RULE_HOSTCODE||LA284_0==RULE_COMMENT_ANNOTATION||LA284_0==53||LA284_0==111||(LA284_0>=117 && LA284_0<=119)||LA284_0==128) ) {
                    alt284=1;
                }


                switch (alt284) {
            	case 1 :
            	    // InternalSCEst.g:12558:4: (lv_entities_2_0= ruleTestEntity )
            	    {
            	    // InternalSCEst.g:12558:4: (lv_entities_2_0= ruleTestEntity )
            	    // InternalSCEst.g:12559:5: lv_entities_2_0= ruleTestEntity
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getRootScopeAccess().getEntitiesTestEntityParserRuleCall_2_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_166);
            	    lv_entities_2_0=ruleTestEntity();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getRootScopeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"entities",
            	      						lv_entities_2_0,
            	      						"de.cau.cs.kieler.kexpressions.kext.KExt.TestEntity");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop284;
                }
            } while (true);

            // InternalSCEst.g:12576:3: (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )*
            loop285:
            do {
                int alt285=2;
                int LA285_0 = input.LA(1);

                if ( (LA285_0==110) ) {
                    alt285=1;
                }


                switch (alt285) {
            	case 1 :
            	    // InternalSCEst.g:12577:4: otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) )
            	    {
            	    otherlv_3=(Token)match(input,110,FollowSets000.FOLLOW_167); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getRootScopeAccess().getScopeKeyword_3_0());
            	      			
            	    }
            	    // InternalSCEst.g:12581:4: ( (lv_scopes_4_0= ruleScope ) )
            	    // InternalSCEst.g:12582:5: (lv_scopes_4_0= ruleScope )
            	    {
            	    // InternalSCEst.g:12582:5: (lv_scopes_4_0= ruleScope )
            	    // InternalSCEst.g:12583:6: lv_scopes_4_0= ruleScope
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getRootScopeAccess().getScopesScopeParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_168);
            	    lv_scopes_4_0=ruleScope();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getRootScopeRule());
            	      						}
            	      						add(
            	      							current,
            	      							"scopes",
            	      							lv_scopes_4_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.Scope");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop285;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRootScope"


    // $ANTLR start "entryRuleScope"
    // InternalSCEst.g:12605:1: entryRuleScope returns [EObject current=null] : iv_ruleScope= ruleScope EOF ;
    public final EObject entryRuleScope() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScope = null;


        try {
            // InternalSCEst.g:12605:46: (iv_ruleScope= ruleScope EOF )
            // InternalSCEst.g:12606:2: iv_ruleScope= ruleScope EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScopeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScope=ruleScope();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScope; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScope"


    // $ANTLR start "ruleScope"
    // InternalSCEst.g:12612:1: ruleScope returns [EObject current=null] : ( () ( (lv_name_1_0= RULE_ID ) )? otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_entities_4_0= ruleTestEntity ) )* (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )* otherlv_7= '}' ) ;
    public final EObject ruleScope() throws RecognitionException {
        EObject current = null;

        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_declarations_3_0 = null;

        EObject lv_entities_4_0 = null;

        EObject lv_scopes_6_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:12618:2: ( ( () ( (lv_name_1_0= RULE_ID ) )? otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_entities_4_0= ruleTestEntity ) )* (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )* otherlv_7= '}' ) )
            // InternalSCEst.g:12619:2: ( () ( (lv_name_1_0= RULE_ID ) )? otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_entities_4_0= ruleTestEntity ) )* (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )* otherlv_7= '}' )
            {
            // InternalSCEst.g:12619:2: ( () ( (lv_name_1_0= RULE_ID ) )? otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_entities_4_0= ruleTestEntity ) )* (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )* otherlv_7= '}' )
            // InternalSCEst.g:12620:3: () ( (lv_name_1_0= RULE_ID ) )? otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_entities_4_0= ruleTestEntity ) )* (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )* otherlv_7= '}'
            {
            // InternalSCEst.g:12620:3: ()
            // InternalSCEst.g:12621:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getScopeAccess().getKExtScopeAction_0(),
              					current);
              			
            }

            }

            // InternalSCEst.g:12630:3: ( (lv_name_1_0= RULE_ID ) )?
            int alt286=2;
            int LA286_0 = input.LA(1);

            if ( (LA286_0==RULE_ID) ) {
                alt286=1;
            }
            switch (alt286) {
                case 1 :
                    // InternalSCEst.g:12631:4: (lv_name_1_0= RULE_ID )
                    {
                    // InternalSCEst.g:12631:4: (lv_name_1_0= RULE_ID )
                    // InternalSCEst.g:12632:5: lv_name_1_0= RULE_ID
                    {
                    lv_name_1_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_149); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_1_0, grammarAccess.getScopeAccess().getNameIDTerminalRuleCall_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getScopeRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_1_0,
                      						"de.cau.cs.kieler.annotations.Annotations.ID");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,102,FollowSets000.FOLLOW_169); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getScopeAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalSCEst.g:12652:3: ( (lv_declarations_3_0= ruleDeclaration ) )*
            loop287:
            do {
                int alt287=2;
                alt287 = dfa287.predict(input);
                switch (alt287) {
            	case 1 :
            	    // InternalSCEst.g:12653:4: (lv_declarations_3_0= ruleDeclaration )
            	    {
            	    // InternalSCEst.g:12653:4: (lv_declarations_3_0= ruleDeclaration )
            	    // InternalSCEst.g:12654:5: lv_declarations_3_0= ruleDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getScopeAccess().getDeclarationsDeclarationParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_169);
            	    lv_declarations_3_0=ruleDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getScopeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_3_0,
            	      						"de.cau.cs.kieler.kexpressions.kext.KExt.Declaration");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop287;
                }
            } while (true);

            // InternalSCEst.g:12671:3: ( (lv_entities_4_0= ruleTestEntity ) )*
            loop288:
            do {
                int alt288=2;
                int LA288_0 = input.LA(1);

                if ( (LA288_0==RULE_ID||LA288_0==RULE_HOSTCODE||LA288_0==RULE_COMMENT_ANNOTATION||LA288_0==53||LA288_0==111||(LA288_0>=117 && LA288_0<=119)||LA288_0==128) ) {
                    alt288=1;
                }


                switch (alt288) {
            	case 1 :
            	    // InternalSCEst.g:12672:4: (lv_entities_4_0= ruleTestEntity )
            	    {
            	    // InternalSCEst.g:12672:4: (lv_entities_4_0= ruleTestEntity )
            	    // InternalSCEst.g:12673:5: lv_entities_4_0= ruleTestEntity
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getScopeAccess().getEntitiesTestEntityParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_170);
            	    lv_entities_4_0=ruleTestEntity();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getScopeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"entities",
            	      						lv_entities_4_0,
            	      						"de.cau.cs.kieler.kexpressions.kext.KExt.TestEntity");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop288;
                }
            } while (true);

            // InternalSCEst.g:12690:3: (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )*
            loop289:
            do {
                int alt289=2;
                int LA289_0 = input.LA(1);

                if ( (LA289_0==110) ) {
                    alt289=1;
                }


                switch (alt289) {
            	case 1 :
            	    // InternalSCEst.g:12691:4: otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) )
            	    {
            	    otherlv_5=(Token)match(input,110,FollowSets000.FOLLOW_167); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_5, grammarAccess.getScopeAccess().getScopeKeyword_5_0());
            	      			
            	    }
            	    // InternalSCEst.g:12695:4: ( (lv_scopes_6_0= ruleScope ) )
            	    // InternalSCEst.g:12696:5: (lv_scopes_6_0= ruleScope )
            	    {
            	    // InternalSCEst.g:12696:5: (lv_scopes_6_0= ruleScope )
            	    // InternalSCEst.g:12697:6: lv_scopes_6_0= ruleScope
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getScopeAccess().getScopesScopeParserRuleCall_5_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_171);
            	    lv_scopes_6_0=ruleScope();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getScopeRule());
            	      						}
            	      						add(
            	      							current,
            	      							"scopes",
            	      							lv_scopes_6_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.Scope");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop289;
                }
            } while (true);

            otherlv_7=(Token)match(input,103,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getScopeAccess().getRightCurlyBracketKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScope"


    // $ANTLR start "entryRuleTestEntity"
    // InternalSCEst.g:12723:1: entryRuleTestEntity returns [EObject current=null] : iv_ruleTestEntity= ruleTestEntity EOF ;
    public final EObject entryRuleTestEntity() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTestEntity = null;


        try {
            // InternalSCEst.g:12723:51: (iv_ruleTestEntity= ruleTestEntity EOF )
            // InternalSCEst.g:12724:2: iv_ruleTestEntity= ruleTestEntity EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTestEntityRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTestEntity=ruleTestEntity();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTestEntity; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTestEntity"


    // $ANTLR start "ruleTestEntity"
    // InternalSCEst.g:12730:1: ruleTestEntity returns [EObject current=null] : ( ( (lv_expression_0_0= ruleAnnotatedExpression ) ) | ( (lv_effect_1_0= ruleEffect ) ) ) ;
    public final EObject ruleTestEntity() throws RecognitionException {
        EObject current = null;

        EObject lv_expression_0_0 = null;

        EObject lv_effect_1_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:12736:2: ( ( ( (lv_expression_0_0= ruleAnnotatedExpression ) ) | ( (lv_effect_1_0= ruleEffect ) ) ) )
            // InternalSCEst.g:12737:2: ( ( (lv_expression_0_0= ruleAnnotatedExpression ) ) | ( (lv_effect_1_0= ruleEffect ) ) )
            {
            // InternalSCEst.g:12737:2: ( ( (lv_expression_0_0= ruleAnnotatedExpression ) ) | ( (lv_effect_1_0= ruleEffect ) ) )
            int alt290=2;
            alt290 = dfa290.predict(input);
            switch (alt290) {
                case 1 :
                    // InternalSCEst.g:12738:3: ( (lv_expression_0_0= ruleAnnotatedExpression ) )
                    {
                    // InternalSCEst.g:12738:3: ( (lv_expression_0_0= ruleAnnotatedExpression ) )
                    // InternalSCEst.g:12739:4: (lv_expression_0_0= ruleAnnotatedExpression )
                    {
                    // InternalSCEst.g:12739:4: (lv_expression_0_0= ruleAnnotatedExpression )
                    // InternalSCEst.g:12740:5: lv_expression_0_0= ruleAnnotatedExpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTestEntityAccess().getExpressionAnnotatedExpressionParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_expression_0_0=ruleAnnotatedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTestEntityRule());
                      					}
                      					set(
                      						current,
                      						"expression",
                      						lv_expression_0_0,
                      						"de.cau.cs.kieler.kexpressions.kext.KExt.AnnotatedExpression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCEst.g:12758:3: ( (lv_effect_1_0= ruleEffect ) )
                    {
                    // InternalSCEst.g:12758:3: ( (lv_effect_1_0= ruleEffect ) )
                    // InternalSCEst.g:12759:4: (lv_effect_1_0= ruleEffect )
                    {
                    // InternalSCEst.g:12759:4: (lv_effect_1_0= ruleEffect )
                    // InternalSCEst.g:12760:5: lv_effect_1_0= ruleEffect
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTestEntityAccess().getEffectEffectParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_effect_1_0=ruleEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTestEntityRule());
                      					}
                      					set(
                      						current,
                      						"effect",
                      						lv_effect_1_0,
                      						"de.cau.cs.kieler.kexpressions.keffects.KEffects.Effect");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTestEntity"


    // $ANTLR start "entryRuleAnnotatedExpression"
    // InternalSCEst.g:12781:1: entryRuleAnnotatedExpression returns [EObject current=null] : iv_ruleAnnotatedExpression= ruleAnnotatedExpression EOF ;
    public final EObject entryRuleAnnotatedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotatedExpression = null;


        try {
            // InternalSCEst.g:12781:60: (iv_ruleAnnotatedExpression= ruleAnnotatedExpression EOF )
            // InternalSCEst.g:12782:2: iv_ruleAnnotatedExpression= ruleAnnotatedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotatedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAnnotatedExpression=ruleAnnotatedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotatedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotatedExpression"


    // $ANTLR start "ruleAnnotatedExpression"
    // InternalSCEst.g:12788:1: ruleAnnotatedExpression returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'expression' ( (lv_expression_2_0= ruleExpression ) ) ) ;
    public final EObject ruleAnnotatedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_expression_2_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:12794:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'expression' ( (lv_expression_2_0= ruleExpression ) ) ) )
            // InternalSCEst.g:12795:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'expression' ( (lv_expression_2_0= ruleExpression ) ) )
            {
            // InternalSCEst.g:12795:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'expression' ( (lv_expression_2_0= ruleExpression ) ) )
            // InternalSCEst.g:12796:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'expression' ( (lv_expression_2_0= ruleExpression ) )
            {
            // InternalSCEst.g:12796:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop291:
            do {
                int alt291=2;
                int LA291_0 = input.LA(1);

                if ( (LA291_0==RULE_COMMENT_ANNOTATION||LA291_0==128) ) {
                    alt291=1;
                }


                switch (alt291) {
            	case 1 :
            	    // InternalSCEst.g:12797:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:12797:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCEst.g:12798:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAnnotatedExpressionAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_172);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAnnotatedExpressionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop291;
                }
            } while (true);

            otherlv_1=(Token)match(input,111,FollowSets000.FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAnnotatedExpressionAccess().getExpressionKeyword_1());
              		
            }
            // InternalSCEst.g:12819:3: ( (lv_expression_2_0= ruleExpression ) )
            // InternalSCEst.g:12820:4: (lv_expression_2_0= ruleExpression )
            {
            // InternalSCEst.g:12820:4: (lv_expression_2_0= ruleExpression )
            // InternalSCEst.g:12821:5: lv_expression_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAnnotatedExpressionAccess().getExpressionExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_expression_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAnnotatedExpressionRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"de.cau.cs.kieler.esterel.Esterel.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnnotatedExpression"


    // $ANTLR start "entryRuleDeclaration"
    // InternalSCEst.g:12842:1: entryRuleDeclaration returns [EObject current=null] : iv_ruleDeclaration= ruleDeclaration EOF ;
    public final EObject entryRuleDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDeclaration = null;


        try {
            // InternalSCEst.g:12842:52: (iv_ruleDeclaration= ruleDeclaration EOF )
            // InternalSCEst.g:12843:2: iv_ruleDeclaration= ruleDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDeclaration=ruleDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDeclaration"


    // $ANTLR start "ruleDeclaration"
    // InternalSCEst.g:12849:1: ruleDeclaration returns [EObject current=null] : (this_VariableDeclaration_0= ruleVariableDeclaration | this_ReferenceDeclaration_1= ruleReferenceDeclaration | this_ScheduleDeclaration_2= ruleScheduleDeclaration | this_StructDeclaration_3= ruleStructDeclaration ) ;
    public final EObject ruleDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_VariableDeclaration_0 = null;

        EObject this_ReferenceDeclaration_1 = null;

        EObject this_ScheduleDeclaration_2 = null;

        EObject this_StructDeclaration_3 = null;



        	enterRule();

        try {
            // InternalSCEst.g:12855:2: ( (this_VariableDeclaration_0= ruleVariableDeclaration | this_ReferenceDeclaration_1= ruleReferenceDeclaration | this_ScheduleDeclaration_2= ruleScheduleDeclaration | this_StructDeclaration_3= ruleStructDeclaration ) )
            // InternalSCEst.g:12856:2: (this_VariableDeclaration_0= ruleVariableDeclaration | this_ReferenceDeclaration_1= ruleReferenceDeclaration | this_ScheduleDeclaration_2= ruleScheduleDeclaration | this_StructDeclaration_3= ruleStructDeclaration )
            {
            // InternalSCEst.g:12856:2: (this_VariableDeclaration_0= ruleVariableDeclaration | this_ReferenceDeclaration_1= ruleReferenceDeclaration | this_ScheduleDeclaration_2= ruleScheduleDeclaration | this_StructDeclaration_3= ruleStructDeclaration )
            int alt292=4;
            alt292 = dfa292.predict(input);
            switch (alt292) {
                case 1 :
                    // InternalSCEst.g:12857:3: this_VariableDeclaration_0= ruleVariableDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationAccess().getVariableDeclarationParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_VariableDeclaration_0=ruleVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_VariableDeclaration_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCEst.g:12869:3: this_ReferenceDeclaration_1= ruleReferenceDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationAccess().getReferenceDeclarationParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ReferenceDeclaration_1=ruleReferenceDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ReferenceDeclaration_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCEst.g:12881:3: this_ScheduleDeclaration_2= ruleScheduleDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationAccess().getScheduleDeclarationParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ScheduleDeclaration_2=ruleScheduleDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ScheduleDeclaration_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSCEst.g:12893:3: this_StructDeclaration_3= ruleStructDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationAccess().getStructDeclarationParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_StructDeclaration_3=ruleStructDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_StructDeclaration_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDeclaration"


    // $ANTLR start "entryRuleDeclarationWOSemicolon"
    // InternalSCEst.g:12908:1: entryRuleDeclarationWOSemicolon returns [EObject current=null] : iv_ruleDeclarationWOSemicolon= ruleDeclarationWOSemicolon EOF ;
    public final EObject entryRuleDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDeclarationWOSemicolon = null;


        try {
            // InternalSCEst.g:12908:63: (iv_ruleDeclarationWOSemicolon= ruleDeclarationWOSemicolon EOF )
            // InternalSCEst.g:12909:2: iv_ruleDeclarationWOSemicolon= ruleDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDeclarationWOSemicolon=ruleDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDeclarationWOSemicolon"


    // $ANTLR start "ruleDeclarationWOSemicolon"
    // InternalSCEst.g:12915:1: ruleDeclarationWOSemicolon returns [EObject current=null] : (this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon | this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon | this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon | this_StructDeclarationWOSemicolon_3= ruleStructDeclarationWOSemicolon ) ;
    public final EObject ruleDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject this_VariableDeclarationWOSemicolon_0 = null;

        EObject this_ReferenceDeclarationWOSemicolon_1 = null;

        EObject this_ScheduleDeclarationWOSemicolon_2 = null;

        EObject this_StructDeclarationWOSemicolon_3 = null;



        	enterRule();

        try {
            // InternalSCEst.g:12921:2: ( (this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon | this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon | this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon | this_StructDeclarationWOSemicolon_3= ruleStructDeclarationWOSemicolon ) )
            // InternalSCEst.g:12922:2: (this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon | this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon | this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon | this_StructDeclarationWOSemicolon_3= ruleStructDeclarationWOSemicolon )
            {
            // InternalSCEst.g:12922:2: (this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon | this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon | this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon | this_StructDeclarationWOSemicolon_3= ruleStructDeclarationWOSemicolon )
            int alt293=4;
            alt293 = dfa293.predict(input);
            switch (alt293) {
                case 1 :
                    // InternalSCEst.g:12923:3: this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationWOSemicolonAccess().getVariableDeclarationWOSemicolonParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_VariableDeclarationWOSemicolon_0=ruleVariableDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_VariableDeclarationWOSemicolon_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCEst.g:12935:3: this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationWOSemicolonAccess().getReferenceDeclarationWOSemicolonParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ReferenceDeclarationWOSemicolon_1=ruleReferenceDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ReferenceDeclarationWOSemicolon_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCEst.g:12947:3: this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationWOSemicolonAccess().getScheduleDeclarationWOSemicolonParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ScheduleDeclarationWOSemicolon_2=ruleScheduleDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ScheduleDeclarationWOSemicolon_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSCEst.g:12959:3: this_StructDeclarationWOSemicolon_3= ruleStructDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationWOSemicolonAccess().getStructDeclarationWOSemicolonParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_StructDeclarationWOSemicolon_3=ruleStructDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_StructDeclarationWOSemicolon_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDeclarationWOSemicolon"


    // $ANTLR start "entryRuleVariableDeclaration"
    // InternalSCEst.g:12974:1: entryRuleVariableDeclaration returns [EObject current=null] : iv_ruleVariableDeclaration= ruleVariableDeclaration EOF ;
    public final EObject entryRuleVariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVariableDeclaration = null;


        try {
            // InternalSCEst.g:12974:60: (iv_ruleVariableDeclaration= ruleVariableDeclaration EOF )
            // InternalSCEst.g:12975:2: iv_ruleVariableDeclaration= ruleVariableDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVariableDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleVariableDeclaration=ruleVariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVariableDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVariableDeclaration"


    // $ANTLR start "ruleVariableDeclaration"
    // InternalSCEst.g:12981:1: ruleVariableDeclaration returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_private_1_0= 'private' ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* otherlv_15= ';' ( (lv_annotations_16_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleVariableDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_private_1_0=null;
        Token lv_const_2_0=null;
        Token lv_input_3_0=null;
        Token lv_output_4_0=null;
        Token lv_global_5_0=null;
        Token lv_static_6_0=null;
        Token lv_signal_7_0=null;
        Token lv_signal_9_0=null;
        Token lv_hostType_11_0=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        EObject lv_annotations_0_0 = null;

        Enumerator lv_type_8_0 = null;

        Enumerator lv_type_10_0 = null;

        EObject lv_valuedObjects_12_0 = null;

        EObject lv_valuedObjects_14_0 = null;

        EObject lv_annotations_16_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:12987:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_private_1_0= 'private' ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* otherlv_15= ';' ( (lv_annotations_16_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalSCEst.g:12988:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_private_1_0= 'private' ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* otherlv_15= ';' ( (lv_annotations_16_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalSCEst.g:12988:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_private_1_0= 'private' ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* otherlv_15= ';' ( (lv_annotations_16_0= ruleCommentAnnotatonSL ) )? )
            // InternalSCEst.g:12989:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_private_1_0= 'private' ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* otherlv_15= ';' ( (lv_annotations_16_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalSCEst.g:12989:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop294:
            do {
                int alt294=2;
                int LA294_0 = input.LA(1);

                if ( (LA294_0==RULE_COMMENT_ANNOTATION||LA294_0==128) ) {
                    alt294=1;
                }


                switch (alt294) {
            	case 1 :
            	    // InternalSCEst.g:12990:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:12990:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCEst.g:12991:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getVariableDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_173);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop294;
                }
            } while (true);

            // InternalSCEst.g:13008:3: ( (lv_private_1_0= 'private' ) )?
            int alt295=2;
            int LA295_0 = input.LA(1);

            if ( (LA295_0==112) ) {
                alt295=1;
            }
            switch (alt295) {
                case 1 :
                    // InternalSCEst.g:13009:4: (lv_private_1_0= 'private' )
                    {
                    // InternalSCEst.g:13009:4: (lv_private_1_0= 'private' )
                    // InternalSCEst.g:13010:5: lv_private_1_0= 'private'
                    {
                    lv_private_1_0=(Token)match(input,112,FollowSets000.FOLLOW_173); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_private_1_0, grammarAccess.getVariableDeclarationAccess().getPrivatePrivateKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "private", true, "private");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCEst.g:13022:3: ( (lv_const_2_0= 'const' ) )?
            int alt296=2;
            int LA296_0 = input.LA(1);

            if ( (LA296_0==113) ) {
                alt296=1;
            }
            switch (alt296) {
                case 1 :
                    // InternalSCEst.g:13023:4: (lv_const_2_0= 'const' )
                    {
                    // InternalSCEst.g:13023:4: (lv_const_2_0= 'const' )
                    // InternalSCEst.g:13024:5: lv_const_2_0= 'const'
                    {
                    lv_const_2_0=(Token)match(input,113,FollowSets000.FOLLOW_173); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_const_2_0, grammarAccess.getVariableDeclarationAccess().getConstConstKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "const", true, "const");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCEst.g:13036:3: ( (lv_input_3_0= 'input' ) )?
            int alt297=2;
            int LA297_0 = input.LA(1);

            if ( (LA297_0==37) ) {
                alt297=1;
            }
            switch (alt297) {
                case 1 :
                    // InternalSCEst.g:13037:4: (lv_input_3_0= 'input' )
                    {
                    // InternalSCEst.g:13037:4: (lv_input_3_0= 'input' )
                    // InternalSCEst.g:13038:5: lv_input_3_0= 'input'
                    {
                    lv_input_3_0=(Token)match(input,37,FollowSets000.FOLLOW_173); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_input_3_0, grammarAccess.getVariableDeclarationAccess().getInputInputKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "input", true, "input");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCEst.g:13050:3: ( (lv_output_4_0= 'output' ) )?
            int alt298=2;
            int LA298_0 = input.LA(1);

            if ( (LA298_0==38) ) {
                alt298=1;
            }
            switch (alt298) {
                case 1 :
                    // InternalSCEst.g:13051:4: (lv_output_4_0= 'output' )
                    {
                    // InternalSCEst.g:13051:4: (lv_output_4_0= 'output' )
                    // InternalSCEst.g:13052:5: lv_output_4_0= 'output'
                    {
                    lv_output_4_0=(Token)match(input,38,FollowSets000.FOLLOW_173); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_output_4_0, grammarAccess.getVariableDeclarationAccess().getOutputOutputKeyword_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "output", true, "output");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCEst.g:13064:3: ( (lv_global_5_0= 'global' ) )?
            int alt299=2;
            int LA299_0 = input.LA(1);

            if ( (LA299_0==114) ) {
                alt299=1;
            }
            switch (alt299) {
                case 1 :
                    // InternalSCEst.g:13065:4: (lv_global_5_0= 'global' )
                    {
                    // InternalSCEst.g:13065:4: (lv_global_5_0= 'global' )
                    // InternalSCEst.g:13066:5: lv_global_5_0= 'global'
                    {
                    lv_global_5_0=(Token)match(input,114,FollowSets000.FOLLOW_173); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_global_5_0, grammarAccess.getVariableDeclarationAccess().getGlobalGlobalKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "global", true, "global");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCEst.g:13078:3: ( (lv_static_6_0= 'static' ) )?
            int alt300=2;
            int LA300_0 = input.LA(1);

            if ( (LA300_0==115) ) {
                alt300=1;
            }
            switch (alt300) {
                case 1 :
                    // InternalSCEst.g:13079:4: (lv_static_6_0= 'static' )
                    {
                    // InternalSCEst.g:13079:4: (lv_static_6_0= 'static' )
                    // InternalSCEst.g:13080:5: lv_static_6_0= 'static'
                    {
                    lv_static_6_0=(Token)match(input,115,FollowSets000.FOLLOW_173); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_static_6_0, grammarAccess.getVariableDeclarationAccess().getStaticStaticKeyword_6_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "static", true, "static");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCEst.g:13092:3: ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) )
            int alt302=3;
            switch ( input.LA(1) ) {
            case 77:
                {
                int LA302_1 = input.LA(2);

                if ( (LA302_1==131||LA302_1==133||LA302_1==135||LA302_1==137||(LA302_1>=163 && LA302_1<=164)) ) {
                    alt302=1;
                }
                else if ( (LA302_1==RULE_ID||LA302_1==RULE_COMMENT_ANNOTATION||LA302_1==128) ) {
                    alt302=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 302, 1, input);

                    throw nvae;
                }
                }
                break;
            case 131:
            case 133:
            case 135:
            case 137:
            case 163:
            case 164:
                {
                alt302=1;
                }
                break;
            case 138:
                {
                alt302=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 302, 0, input);

                throw nvae;
            }

            switch (alt302) {
                case 1 :
                    // InternalSCEst.g:13093:4: ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) )
                    {
                    // InternalSCEst.g:13093:4: ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) )
                    // InternalSCEst.g:13094:5: ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) )
                    {
                    // InternalSCEst.g:13094:5: ( (lv_signal_7_0= 'signal' ) )?
                    int alt301=2;
                    int LA301_0 = input.LA(1);

                    if ( (LA301_0==77) ) {
                        alt301=1;
                    }
                    switch (alt301) {
                        case 1 :
                            // InternalSCEst.g:13095:6: (lv_signal_7_0= 'signal' )
                            {
                            // InternalSCEst.g:13095:6: (lv_signal_7_0= 'signal' )
                            // InternalSCEst.g:13096:7: lv_signal_7_0= 'signal'
                            {
                            lv_signal_7_0=(Token)match(input,77,FollowSets000.FOLLOW_174); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_signal_7_0, grammarAccess.getVariableDeclarationAccess().getSignalSignalKeyword_7_0_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getVariableDeclarationRule());
                              							}
                              							setWithLastConsumed(current, "signal", true, "signal");
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalSCEst.g:13108:5: ( (lv_type_8_0= ruleValueType ) )
                    // InternalSCEst.g:13109:6: (lv_type_8_0= ruleValueType )
                    {
                    // InternalSCEst.g:13109:6: (lv_type_8_0= ruleValueType )
                    // InternalSCEst.g:13110:7: lv_type_8_0= ruleValueType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getVariableDeclarationAccess().getTypeValueTypeEnumRuleCall_7_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_14);
                    lv_type_8_0=ruleValueType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_8_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ValueType");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCEst.g:13129:4: ( (lv_signal_9_0= 'signal' ) )
                    {
                    // InternalSCEst.g:13129:4: ( (lv_signal_9_0= 'signal' ) )
                    // InternalSCEst.g:13130:5: (lv_signal_9_0= 'signal' )
                    {
                    // InternalSCEst.g:13130:5: (lv_signal_9_0= 'signal' )
                    // InternalSCEst.g:13131:6: lv_signal_9_0= 'signal'
                    {
                    lv_signal_9_0=(Token)match(input,77,FollowSets000.FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_signal_9_0, grammarAccess.getVariableDeclarationAccess().getSignalSignalKeyword_7_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      						}
                      						setWithLastConsumed(current, "signal", true, "signal");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSCEst.g:13144:4: ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) )
                    {
                    // InternalSCEst.g:13144:4: ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) )
                    // InternalSCEst.g:13145:5: ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) )
                    {
                    // InternalSCEst.g:13145:5: ( (lv_type_10_0= ruleHostType ) )
                    // InternalSCEst.g:13146:6: (lv_type_10_0= ruleHostType )
                    {
                    // InternalSCEst.g:13146:6: (lv_type_10_0= ruleHostType )
                    // InternalSCEst.g:13147:7: lv_type_10_0= ruleHostType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getVariableDeclarationAccess().getTypeHostTypeEnumRuleCall_7_2_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_175);
                    lv_type_10_0=ruleHostType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_10_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.HostType");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCEst.g:13164:5: ( (lv_hostType_11_0= RULE_STRING ) )
                    // InternalSCEst.g:13165:6: (lv_hostType_11_0= RULE_STRING )
                    {
                    // InternalSCEst.g:13165:6: (lv_hostType_11_0= RULE_STRING )
                    // InternalSCEst.g:13166:7: lv_hostType_11_0= RULE_STRING
                    {
                    lv_hostType_11_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_hostType_11_0, grammarAccess.getVariableDeclarationAccess().getHostTypeSTRINGTerminalRuleCall_7_2_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"hostType",
                      								lv_hostType_11_0,
                      								"de.cau.cs.kieler.esterel.Esterel.STRING");
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalSCEst.g:13184:3: ( (lv_valuedObjects_12_0= ruleValuedObject ) )
            // InternalSCEst.g:13185:4: (lv_valuedObjects_12_0= ruleValuedObject )
            {
            // InternalSCEst.g:13185:4: (lv_valuedObjects_12_0= ruleValuedObject )
            // InternalSCEst.g:13186:5: lv_valuedObjects_12_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getVariableDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_8_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_26);
            lv_valuedObjects_12_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_12_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCEst.g:13203:3: (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )*
            loop303:
            do {
                int alt303=2;
                int LA303_0 = input.LA(1);

                if ( (LA303_0==30) ) {
                    alt303=1;
                }


                switch (alt303) {
            	case 1 :
            	    // InternalSCEst.g:13204:4: otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) )
            	    {
            	    otherlv_13=(Token)match(input,30,FollowSets000.FOLLOW_14); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_13, grammarAccess.getVariableDeclarationAccess().getCommaKeyword_9_0());
            	      			
            	    }
            	    // InternalSCEst.g:13208:4: ( (lv_valuedObjects_14_0= ruleValuedObject ) )
            	    // InternalSCEst.g:13209:5: (lv_valuedObjects_14_0= ruleValuedObject )
            	    {
            	    // InternalSCEst.g:13209:5: (lv_valuedObjects_14_0= ruleValuedObject )
            	    // InternalSCEst.g:13210:6: lv_valuedObjects_14_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getVariableDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_9_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_26);
            	    lv_valuedObjects_14_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"valuedObjects",
            	      							lv_valuedObjects_14_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop303;
                }
            } while (true);

            otherlv_15=(Token)match(input,21,FollowSets000.FOLLOW_176); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_15, grammarAccess.getVariableDeclarationAccess().getSemicolonKeyword_10());
              		
            }
            // InternalSCEst.g:13232:3: ( (lv_annotations_16_0= ruleCommentAnnotatonSL ) )?
            int alt304=2;
            int LA304_0 = input.LA(1);

            if ( (LA304_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt304=1;
            }
            switch (alt304) {
                case 1 :
                    // InternalSCEst.g:13233:4: (lv_annotations_16_0= ruleCommentAnnotatonSL )
                    {
                    // InternalSCEst.g:13233:4: (lv_annotations_16_0= ruleCommentAnnotatonSL )
                    // InternalSCEst.g:13234:5: lv_annotations_16_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getVariableDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_11_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_16_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_16_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVariableDeclaration"


    // $ANTLR start "entryRuleVariableDeclarationWOSemicolon"
    // InternalSCEst.g:13255:1: entryRuleVariableDeclarationWOSemicolon returns [EObject current=null] : iv_ruleVariableDeclarationWOSemicolon= ruleVariableDeclarationWOSemicolon EOF ;
    public final EObject entryRuleVariableDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVariableDeclarationWOSemicolon = null;


        try {
            // InternalSCEst.g:13255:71: (iv_ruleVariableDeclarationWOSemicolon= ruleVariableDeclarationWOSemicolon EOF )
            // InternalSCEst.g:13256:2: iv_ruleVariableDeclarationWOSemicolon= ruleVariableDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleVariableDeclarationWOSemicolon=ruleVariableDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVariableDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVariableDeclarationWOSemicolon"


    // $ANTLR start "ruleVariableDeclarationWOSemicolon"
    // InternalSCEst.g:13262:1: ruleVariableDeclarationWOSemicolon returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_private_1_0= 'private' ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleVariableDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        Token lv_private_1_0=null;
        Token lv_const_2_0=null;
        Token lv_input_3_0=null;
        Token lv_output_4_0=null;
        Token lv_global_5_0=null;
        Token lv_static_6_0=null;
        Token lv_signal_7_0=null;
        Token lv_signal_9_0=null;
        Token lv_hostType_11_0=null;
        Token otherlv_13=null;
        EObject lv_annotations_0_0 = null;

        Enumerator lv_type_8_0 = null;

        Enumerator lv_type_10_0 = null;

        EObject lv_valuedObjects_12_0 = null;

        EObject lv_valuedObjects_14_0 = null;

        EObject lv_annotations_15_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:13268:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_private_1_0= 'private' ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalSCEst.g:13269:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_private_1_0= 'private' ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalSCEst.g:13269:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_private_1_0= 'private' ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? )
            // InternalSCEst.g:13270:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_private_1_0= 'private' ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalSCEst.g:13270:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop305:
            do {
                int alt305=2;
                int LA305_0 = input.LA(1);

                if ( (LA305_0==RULE_COMMENT_ANNOTATION||LA305_0==128) ) {
                    alt305=1;
                }


                switch (alt305) {
            	case 1 :
            	    // InternalSCEst.g:13271:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:13271:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCEst.g:13272:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_173);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop305;
                }
            } while (true);

            // InternalSCEst.g:13289:3: ( (lv_private_1_0= 'private' ) )?
            int alt306=2;
            int LA306_0 = input.LA(1);

            if ( (LA306_0==112) ) {
                alt306=1;
            }
            switch (alt306) {
                case 1 :
                    // InternalSCEst.g:13290:4: (lv_private_1_0= 'private' )
                    {
                    // InternalSCEst.g:13290:4: (lv_private_1_0= 'private' )
                    // InternalSCEst.g:13291:5: lv_private_1_0= 'private'
                    {
                    lv_private_1_0=(Token)match(input,112,FollowSets000.FOLLOW_173); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_private_1_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getPrivatePrivateKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "private", true, "private");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCEst.g:13303:3: ( (lv_const_2_0= 'const' ) )?
            int alt307=2;
            int LA307_0 = input.LA(1);

            if ( (LA307_0==113) ) {
                alt307=1;
            }
            switch (alt307) {
                case 1 :
                    // InternalSCEst.g:13304:4: (lv_const_2_0= 'const' )
                    {
                    // InternalSCEst.g:13304:4: (lv_const_2_0= 'const' )
                    // InternalSCEst.g:13305:5: lv_const_2_0= 'const'
                    {
                    lv_const_2_0=(Token)match(input,113,FollowSets000.FOLLOW_173); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_const_2_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getConstConstKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "const", true, "const");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCEst.g:13317:3: ( (lv_input_3_0= 'input' ) )?
            int alt308=2;
            int LA308_0 = input.LA(1);

            if ( (LA308_0==37) ) {
                alt308=1;
            }
            switch (alt308) {
                case 1 :
                    // InternalSCEst.g:13318:4: (lv_input_3_0= 'input' )
                    {
                    // InternalSCEst.g:13318:4: (lv_input_3_0= 'input' )
                    // InternalSCEst.g:13319:5: lv_input_3_0= 'input'
                    {
                    lv_input_3_0=(Token)match(input,37,FollowSets000.FOLLOW_173); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_input_3_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getInputInputKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "input", true, "input");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCEst.g:13331:3: ( (lv_output_4_0= 'output' ) )?
            int alt309=2;
            int LA309_0 = input.LA(1);

            if ( (LA309_0==38) ) {
                alt309=1;
            }
            switch (alt309) {
                case 1 :
                    // InternalSCEst.g:13332:4: (lv_output_4_0= 'output' )
                    {
                    // InternalSCEst.g:13332:4: (lv_output_4_0= 'output' )
                    // InternalSCEst.g:13333:5: lv_output_4_0= 'output'
                    {
                    lv_output_4_0=(Token)match(input,38,FollowSets000.FOLLOW_173); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_output_4_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getOutputOutputKeyword_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "output", true, "output");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCEst.g:13345:3: ( (lv_global_5_0= 'global' ) )?
            int alt310=2;
            int LA310_0 = input.LA(1);

            if ( (LA310_0==114) ) {
                alt310=1;
            }
            switch (alt310) {
                case 1 :
                    // InternalSCEst.g:13346:4: (lv_global_5_0= 'global' )
                    {
                    // InternalSCEst.g:13346:4: (lv_global_5_0= 'global' )
                    // InternalSCEst.g:13347:5: lv_global_5_0= 'global'
                    {
                    lv_global_5_0=(Token)match(input,114,FollowSets000.FOLLOW_173); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_global_5_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getGlobalGlobalKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "global", true, "global");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCEst.g:13359:3: ( (lv_static_6_0= 'static' ) )?
            int alt311=2;
            int LA311_0 = input.LA(1);

            if ( (LA311_0==115) ) {
                alt311=1;
            }
            switch (alt311) {
                case 1 :
                    // InternalSCEst.g:13360:4: (lv_static_6_0= 'static' )
                    {
                    // InternalSCEst.g:13360:4: (lv_static_6_0= 'static' )
                    // InternalSCEst.g:13361:5: lv_static_6_0= 'static'
                    {
                    lv_static_6_0=(Token)match(input,115,FollowSets000.FOLLOW_173); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_static_6_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getStaticStaticKeyword_6_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "static", true, "static");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCEst.g:13373:3: ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) )
            int alt313=3;
            switch ( input.LA(1) ) {
            case 77:
                {
                int LA313_1 = input.LA(2);

                if ( (LA313_1==131||LA313_1==133||LA313_1==135||LA313_1==137||(LA313_1>=163 && LA313_1<=164)) ) {
                    alt313=1;
                }
                else if ( (LA313_1==RULE_ID||LA313_1==RULE_COMMENT_ANNOTATION||LA313_1==128) ) {
                    alt313=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 313, 1, input);

                    throw nvae;
                }
                }
                break;
            case 131:
            case 133:
            case 135:
            case 137:
            case 163:
            case 164:
                {
                alt313=1;
                }
                break;
            case 138:
                {
                alt313=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 313, 0, input);

                throw nvae;
            }

            switch (alt313) {
                case 1 :
                    // InternalSCEst.g:13374:4: ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) )
                    {
                    // InternalSCEst.g:13374:4: ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) )
                    // InternalSCEst.g:13375:5: ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) )
                    {
                    // InternalSCEst.g:13375:5: ( (lv_signal_7_0= 'signal' ) )?
                    int alt312=2;
                    int LA312_0 = input.LA(1);

                    if ( (LA312_0==77) ) {
                        alt312=1;
                    }
                    switch (alt312) {
                        case 1 :
                            // InternalSCEst.g:13376:6: (lv_signal_7_0= 'signal' )
                            {
                            // InternalSCEst.g:13376:6: (lv_signal_7_0= 'signal' )
                            // InternalSCEst.g:13377:7: lv_signal_7_0= 'signal'
                            {
                            lv_signal_7_0=(Token)match(input,77,FollowSets000.FOLLOW_174); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_signal_7_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getSignalSignalKeyword_7_0_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                              							}
                              							setWithLastConsumed(current, "signal", true, "signal");
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalSCEst.g:13389:5: ( (lv_type_8_0= ruleValueType ) )
                    // InternalSCEst.g:13390:6: (lv_type_8_0= ruleValueType )
                    {
                    // InternalSCEst.g:13390:6: (lv_type_8_0= ruleValueType )
                    // InternalSCEst.g:13391:7: lv_type_8_0= ruleValueType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getTypeValueTypeEnumRuleCall_7_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_14);
                    lv_type_8_0=ruleValueType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_8_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ValueType");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCEst.g:13410:4: ( (lv_signal_9_0= 'signal' ) )
                    {
                    // InternalSCEst.g:13410:4: ( (lv_signal_9_0= 'signal' ) )
                    // InternalSCEst.g:13411:5: (lv_signal_9_0= 'signal' )
                    {
                    // InternalSCEst.g:13411:5: (lv_signal_9_0= 'signal' )
                    // InternalSCEst.g:13412:6: lv_signal_9_0= 'signal'
                    {
                    lv_signal_9_0=(Token)match(input,77,FollowSets000.FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_signal_9_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getSignalSignalKeyword_7_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      						}
                      						setWithLastConsumed(current, "signal", true, "signal");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSCEst.g:13425:4: ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) )
                    {
                    // InternalSCEst.g:13425:4: ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) )
                    // InternalSCEst.g:13426:5: ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) )
                    {
                    // InternalSCEst.g:13426:5: ( (lv_type_10_0= ruleHostType ) )
                    // InternalSCEst.g:13427:6: (lv_type_10_0= ruleHostType )
                    {
                    // InternalSCEst.g:13427:6: (lv_type_10_0= ruleHostType )
                    // InternalSCEst.g:13428:7: lv_type_10_0= ruleHostType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getTypeHostTypeEnumRuleCall_7_2_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_175);
                    lv_type_10_0=ruleHostType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_10_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.HostType");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCEst.g:13445:5: ( (lv_hostType_11_0= RULE_STRING ) )
                    // InternalSCEst.g:13446:6: (lv_hostType_11_0= RULE_STRING )
                    {
                    // InternalSCEst.g:13446:6: (lv_hostType_11_0= RULE_STRING )
                    // InternalSCEst.g:13447:7: lv_hostType_11_0= RULE_STRING
                    {
                    lv_hostType_11_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_hostType_11_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getHostTypeSTRINGTerminalRuleCall_7_2_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"hostType",
                      								lv_hostType_11_0,
                      								"de.cau.cs.kieler.esterel.Esterel.STRING");
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalSCEst.g:13465:3: ( (lv_valuedObjects_12_0= ruleValuedObject ) )
            // InternalSCEst.g:13466:4: (lv_valuedObjects_12_0= ruleValuedObject )
            {
            // InternalSCEst.g:13466:4: (lv_valuedObjects_12_0= ruleValuedObject )
            // InternalSCEst.g:13467:5: lv_valuedObjects_12_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_8_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_177);
            lv_valuedObjects_12_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_12_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCEst.g:13484:3: (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )*
            loop314:
            do {
                int alt314=2;
                int LA314_0 = input.LA(1);

                if ( (LA314_0==30) ) {
                    alt314=1;
                }


                switch (alt314) {
            	case 1 :
            	    // InternalSCEst.g:13485:4: otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) )
            	    {
            	    otherlv_13=(Token)match(input,30,FollowSets000.FOLLOW_14); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_13, grammarAccess.getVariableDeclarationWOSemicolonAccess().getCommaKeyword_9_0());
            	      			
            	    }
            	    // InternalSCEst.g:13489:4: ( (lv_valuedObjects_14_0= ruleValuedObject ) )
            	    // InternalSCEst.g:13490:5: (lv_valuedObjects_14_0= ruleValuedObject )
            	    {
            	    // InternalSCEst.g:13490:5: (lv_valuedObjects_14_0= ruleValuedObject )
            	    // InternalSCEst.g:13491:6: lv_valuedObjects_14_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_9_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_177);
            	    lv_valuedObjects_14_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
            	      						}
            	      						add(
            	      							current,
            	      							"valuedObjects",
            	      							lv_valuedObjects_14_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop314;
                }
            } while (true);

            // InternalSCEst.g:13509:3: ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )?
            int alt315=2;
            int LA315_0 = input.LA(1);

            if ( (LA315_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt315=1;
            }
            switch (alt315) {
                case 1 :
                    // InternalSCEst.g:13510:4: (lv_annotations_15_0= ruleCommentAnnotatonSL )
                    {
                    // InternalSCEst.g:13510:4: (lv_annotations_15_0= ruleCommentAnnotatonSL )
                    // InternalSCEst.g:13511:5: lv_annotations_15_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_10_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_15_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_15_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVariableDeclarationWOSemicolon"


    // $ANTLR start "entryRuleStructDeclaration"
    // InternalSCEst.g:13532:1: entryRuleStructDeclaration returns [EObject current=null] : iv_ruleStructDeclaration= ruleStructDeclaration EOF ;
    public final EObject entryRuleStructDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStructDeclaration = null;


        try {
            // InternalSCEst.g:13532:58: (iv_ruleStructDeclaration= ruleStructDeclaration EOF )
            // InternalSCEst.g:13533:2: iv_ruleStructDeclaration= ruleStructDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStructDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStructDeclaration=ruleStructDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStructDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStructDeclaration"


    // $ANTLR start "ruleStructDeclaration"
    // InternalSCEst.g:13539:1: ruleStructDeclaration returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_private_2_0= 'private' ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_type_8_0= ruleStructType ) ) ( (lv_name_9_0= RULE_ID ) )? otherlv_10= '{' ( (lv_declarations_11_0= ruleDeclaration ) )* otherlv_12= '}' ( ( (lv_valuedObjects_13_0= ruleValuedObject ) ) (otherlv_14= ',' ( (lv_valuedObjects_15_0= ruleValuedObject ) ) )* )? otherlv_16= ';' ( (lv_annotations_17_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleStructDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_private_2_0=null;
        Token lv_const_3_0=null;
        Token lv_input_4_0=null;
        Token lv_output_5_0=null;
        Token lv_global_6_0=null;
        Token lv_static_7_0=null;
        Token lv_name_9_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        EObject lv_annotations_1_0 = null;

        Enumerator lv_type_8_0 = null;

        EObject lv_declarations_11_0 = null;

        EObject lv_valuedObjects_13_0 = null;

        EObject lv_valuedObjects_15_0 = null;

        EObject lv_annotations_17_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:13545:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_private_2_0= 'private' ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_type_8_0= ruleStructType ) ) ( (lv_name_9_0= RULE_ID ) )? otherlv_10= '{' ( (lv_declarations_11_0= ruleDeclaration ) )* otherlv_12= '}' ( ( (lv_valuedObjects_13_0= ruleValuedObject ) ) (otherlv_14= ',' ( (lv_valuedObjects_15_0= ruleValuedObject ) ) )* )? otherlv_16= ';' ( (lv_annotations_17_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalSCEst.g:13546:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_private_2_0= 'private' ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_type_8_0= ruleStructType ) ) ( (lv_name_9_0= RULE_ID ) )? otherlv_10= '{' ( (lv_declarations_11_0= ruleDeclaration ) )* otherlv_12= '}' ( ( (lv_valuedObjects_13_0= ruleValuedObject ) ) (otherlv_14= ',' ( (lv_valuedObjects_15_0= ruleValuedObject ) ) )* )? otherlv_16= ';' ( (lv_annotations_17_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalSCEst.g:13546:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_private_2_0= 'private' ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_type_8_0= ruleStructType ) ) ( (lv_name_9_0= RULE_ID ) )? otherlv_10= '{' ( (lv_declarations_11_0= ruleDeclaration ) )* otherlv_12= '}' ( ( (lv_valuedObjects_13_0= ruleValuedObject ) ) (otherlv_14= ',' ( (lv_valuedObjects_15_0= ruleValuedObject ) ) )* )? otherlv_16= ';' ( (lv_annotations_17_0= ruleCommentAnnotatonSL ) )? )
            // InternalSCEst.g:13547:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_private_2_0= 'private' ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_type_8_0= ruleStructType ) ) ( (lv_name_9_0= RULE_ID ) )? otherlv_10= '{' ( (lv_declarations_11_0= ruleDeclaration ) )* otherlv_12= '}' ( ( (lv_valuedObjects_13_0= ruleValuedObject ) ) (otherlv_14= ',' ( (lv_valuedObjects_15_0= ruleValuedObject ) ) )* )? otherlv_16= ';' ( (lv_annotations_17_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalSCEst.g:13547:3: ()
            // InternalSCEst.g:13548:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getStructDeclarationAccess().getStructDeclarationAction_0(),
              					current);
              			
            }

            }

            // InternalSCEst.g:13557:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop316:
            do {
                int alt316=2;
                int LA316_0 = input.LA(1);

                if ( (LA316_0==RULE_COMMENT_ANNOTATION||LA316_0==128) ) {
                    alt316=1;
                }


                switch (alt316) {
            	case 1 :
            	    // InternalSCEst.g:13558:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:13558:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCEst.g:13559:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getStructDeclarationAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_178);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getStructDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop316;
                }
            } while (true);

            // InternalSCEst.g:13576:3: ( (lv_private_2_0= 'private' ) )?
            int alt317=2;
            int LA317_0 = input.LA(1);

            if ( (LA317_0==112) ) {
                alt317=1;
            }
            switch (alt317) {
                case 1 :
                    // InternalSCEst.g:13577:4: (lv_private_2_0= 'private' )
                    {
                    // InternalSCEst.g:13577:4: (lv_private_2_0= 'private' )
                    // InternalSCEst.g:13578:5: lv_private_2_0= 'private'
                    {
                    lv_private_2_0=(Token)match(input,112,FollowSets000.FOLLOW_178); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_private_2_0, grammarAccess.getStructDeclarationAccess().getPrivatePrivateKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStructDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "private", true, "private");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCEst.g:13590:3: ( (lv_const_3_0= 'const' ) )?
            int alt318=2;
            int LA318_0 = input.LA(1);

            if ( (LA318_0==113) ) {
                alt318=1;
            }
            switch (alt318) {
                case 1 :
                    // InternalSCEst.g:13591:4: (lv_const_3_0= 'const' )
                    {
                    // InternalSCEst.g:13591:4: (lv_const_3_0= 'const' )
                    // InternalSCEst.g:13592:5: lv_const_3_0= 'const'
                    {
                    lv_const_3_0=(Token)match(input,113,FollowSets000.FOLLOW_178); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_const_3_0, grammarAccess.getStructDeclarationAccess().getConstConstKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStructDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "const", true, "const");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCEst.g:13604:3: ( (lv_input_4_0= 'input' ) )?
            int alt319=2;
            int LA319_0 = input.LA(1);

            if ( (LA319_0==37) ) {
                alt319=1;
            }
            switch (alt319) {
                case 1 :
                    // InternalSCEst.g:13605:4: (lv_input_4_0= 'input' )
                    {
                    // InternalSCEst.g:13605:4: (lv_input_4_0= 'input' )
                    // InternalSCEst.g:13606:5: lv_input_4_0= 'input'
                    {
                    lv_input_4_0=(Token)match(input,37,FollowSets000.FOLLOW_178); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_input_4_0, grammarAccess.getStructDeclarationAccess().getInputInputKeyword_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStructDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "input", true, "input");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCEst.g:13618:3: ( (lv_output_5_0= 'output' ) )?
            int alt320=2;
            int LA320_0 = input.LA(1);

            if ( (LA320_0==38) ) {
                alt320=1;
            }
            switch (alt320) {
                case 1 :
                    // InternalSCEst.g:13619:4: (lv_output_5_0= 'output' )
                    {
                    // InternalSCEst.g:13619:4: (lv_output_5_0= 'output' )
                    // InternalSCEst.g:13620:5: lv_output_5_0= 'output'
                    {
                    lv_output_5_0=(Token)match(input,38,FollowSets000.FOLLOW_178); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_output_5_0, grammarAccess.getStructDeclarationAccess().getOutputOutputKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStructDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "output", true, "output");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCEst.g:13632:3: ( (lv_global_6_0= 'global' ) )?
            int alt321=2;
            int LA321_0 = input.LA(1);

            if ( (LA321_0==114) ) {
                alt321=1;
            }
            switch (alt321) {
                case 1 :
                    // InternalSCEst.g:13633:4: (lv_global_6_0= 'global' )
                    {
                    // InternalSCEst.g:13633:4: (lv_global_6_0= 'global' )
                    // InternalSCEst.g:13634:5: lv_global_6_0= 'global'
                    {
                    lv_global_6_0=(Token)match(input,114,FollowSets000.FOLLOW_178); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_global_6_0, grammarAccess.getStructDeclarationAccess().getGlobalGlobalKeyword_6_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStructDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "global", true, "global");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCEst.g:13646:3: ( (lv_static_7_0= 'static' ) )?
            int alt322=2;
            int LA322_0 = input.LA(1);

            if ( (LA322_0==115) ) {
                alt322=1;
            }
            switch (alt322) {
                case 1 :
                    // InternalSCEst.g:13647:4: (lv_static_7_0= 'static' )
                    {
                    // InternalSCEst.g:13647:4: (lv_static_7_0= 'static' )
                    // InternalSCEst.g:13648:5: lv_static_7_0= 'static'
                    {
                    lv_static_7_0=(Token)match(input,115,FollowSets000.FOLLOW_178); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_static_7_0, grammarAccess.getStructDeclarationAccess().getStaticStaticKeyword_7_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStructDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "static", true, "static");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCEst.g:13660:3: ( (lv_type_8_0= ruleStructType ) )
            // InternalSCEst.g:13661:4: (lv_type_8_0= ruleStructType )
            {
            // InternalSCEst.g:13661:4: (lv_type_8_0= ruleStructType )
            // InternalSCEst.g:13662:5: lv_type_8_0= ruleStructType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getStructDeclarationAccess().getTypeStructTypeEnumRuleCall_8_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_167);
            lv_type_8_0=ruleStructType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getStructDeclarationRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_8_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.StructType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCEst.g:13679:3: ( (lv_name_9_0= RULE_ID ) )?
            int alt323=2;
            int LA323_0 = input.LA(1);

            if ( (LA323_0==RULE_ID) ) {
                alt323=1;
            }
            switch (alt323) {
                case 1 :
                    // InternalSCEst.g:13680:4: (lv_name_9_0= RULE_ID )
                    {
                    // InternalSCEst.g:13680:4: (lv_name_9_0= RULE_ID )
                    // InternalSCEst.g:13681:5: lv_name_9_0= RULE_ID
                    {
                    lv_name_9_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_149); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_9_0, grammarAccess.getStructDeclarationAccess().getNameIDTerminalRuleCall_9_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStructDeclarationRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_9_0,
                      						"de.cau.cs.kieler.annotations.Annotations.ID");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_10=(Token)match(input,102,FollowSets000.FOLLOW_179); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getStructDeclarationAccess().getLeftCurlyBracketKeyword_10());
              		
            }
            // InternalSCEst.g:13701:3: ( (lv_declarations_11_0= ruleDeclaration ) )*
            loop324:
            do {
                int alt324=2;
                int LA324_0 = input.LA(1);

                if ( (LA324_0==RULE_COMMENT_ANNOTATION||(LA324_0>=37 && LA324_0<=38)||LA324_0==77||LA324_0==101||(LA324_0>=112 && LA324_0<=117)||LA324_0==128||LA324_0==131||LA324_0==133||LA324_0==135||(LA324_0>=137 && LA324_0<=138)||(LA324_0>=163 && LA324_0<=165)) ) {
                    alt324=1;
                }


                switch (alt324) {
            	case 1 :
            	    // InternalSCEst.g:13702:4: (lv_declarations_11_0= ruleDeclaration )
            	    {
            	    // InternalSCEst.g:13702:4: (lv_declarations_11_0= ruleDeclaration )
            	    // InternalSCEst.g:13703:5: lv_declarations_11_0= ruleDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getStructDeclarationAccess().getDeclarationsDeclarationParserRuleCall_11_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_179);
            	    lv_declarations_11_0=ruleDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getStructDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_11_0,
            	      						"de.cau.cs.kieler.kexpressions.kext.KExt.Declaration");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop324;
                }
            } while (true);

            otherlv_12=(Token)match(input,103,FollowSets000.FOLLOW_180); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_12, grammarAccess.getStructDeclarationAccess().getRightCurlyBracketKeyword_12());
              		
            }
            // InternalSCEst.g:13724:3: ( ( (lv_valuedObjects_13_0= ruleValuedObject ) ) (otherlv_14= ',' ( (lv_valuedObjects_15_0= ruleValuedObject ) ) )* )?
            int alt326=2;
            int LA326_0 = input.LA(1);

            if ( (LA326_0==RULE_ID||LA326_0==RULE_COMMENT_ANNOTATION||LA326_0==128) ) {
                alt326=1;
            }
            switch (alt326) {
                case 1 :
                    // InternalSCEst.g:13725:4: ( (lv_valuedObjects_13_0= ruleValuedObject ) ) (otherlv_14= ',' ( (lv_valuedObjects_15_0= ruleValuedObject ) ) )*
                    {
                    // InternalSCEst.g:13725:4: ( (lv_valuedObjects_13_0= ruleValuedObject ) )
                    // InternalSCEst.g:13726:5: (lv_valuedObjects_13_0= ruleValuedObject )
                    {
                    // InternalSCEst.g:13726:5: (lv_valuedObjects_13_0= ruleValuedObject )
                    // InternalSCEst.g:13727:6: lv_valuedObjects_13_0= ruleValuedObject
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStructDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_13_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_26);
                    lv_valuedObjects_13_0=ruleValuedObject();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStructDeclarationRule());
                      						}
                      						add(
                      							current,
                      							"valuedObjects",
                      							lv_valuedObjects_13_0,
                      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCEst.g:13744:4: (otherlv_14= ',' ( (lv_valuedObjects_15_0= ruleValuedObject ) ) )*
                    loop325:
                    do {
                        int alt325=2;
                        int LA325_0 = input.LA(1);

                        if ( (LA325_0==30) ) {
                            alt325=1;
                        }


                        switch (alt325) {
                    	case 1 :
                    	    // InternalSCEst.g:13745:5: otherlv_14= ',' ( (lv_valuedObjects_15_0= ruleValuedObject ) )
                    	    {
                    	    otherlv_14=(Token)match(input,30,FollowSets000.FOLLOW_14); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_14, grammarAccess.getStructDeclarationAccess().getCommaKeyword_13_1_0());
                    	      				
                    	    }
                    	    // InternalSCEst.g:13749:5: ( (lv_valuedObjects_15_0= ruleValuedObject ) )
                    	    // InternalSCEst.g:13750:6: (lv_valuedObjects_15_0= ruleValuedObject )
                    	    {
                    	    // InternalSCEst.g:13750:6: (lv_valuedObjects_15_0= ruleValuedObject )
                    	    // InternalSCEst.g:13751:7: lv_valuedObjects_15_0= ruleValuedObject
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getStructDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_13_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_26);
                    	    lv_valuedObjects_15_0=ruleValuedObject();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getStructDeclarationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"valuedObjects",
                    	      								lv_valuedObjects_15_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop325;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_16=(Token)match(input,21,FollowSets000.FOLLOW_176); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_16, grammarAccess.getStructDeclarationAccess().getSemicolonKeyword_14());
              		
            }
            // InternalSCEst.g:13774:3: ( (lv_annotations_17_0= ruleCommentAnnotatonSL ) )?
            int alt327=2;
            int LA327_0 = input.LA(1);

            if ( (LA327_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt327=1;
            }
            switch (alt327) {
                case 1 :
                    // InternalSCEst.g:13775:4: (lv_annotations_17_0= ruleCommentAnnotatonSL )
                    {
                    // InternalSCEst.g:13775:4: (lv_annotations_17_0= ruleCommentAnnotatonSL )
                    // InternalSCEst.g:13776:5: lv_annotations_17_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStructDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_15_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_17_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStructDeclarationRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_17_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStructDeclaration"


    // $ANTLR start "entryRuleStructDeclarationWOSemicolon"
    // InternalSCEst.g:13797:1: entryRuleStructDeclarationWOSemicolon returns [EObject current=null] : iv_ruleStructDeclarationWOSemicolon= ruleStructDeclarationWOSemicolon EOF ;
    public final EObject entryRuleStructDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStructDeclarationWOSemicolon = null;


        try {
            // InternalSCEst.g:13797:69: (iv_ruleStructDeclarationWOSemicolon= ruleStructDeclarationWOSemicolon EOF )
            // InternalSCEst.g:13798:2: iv_ruleStructDeclarationWOSemicolon= ruleStructDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStructDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStructDeclarationWOSemicolon=ruleStructDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStructDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStructDeclarationWOSemicolon"


    // $ANTLR start "ruleStructDeclarationWOSemicolon"
    // InternalSCEst.g:13804:1: ruleStructDeclarationWOSemicolon returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_private_2_0= 'private' ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_type_8_0= ruleStructType ) ) ( (lv_name_9_0= RULE_ID ) )? otherlv_10= '{' ( (lv_declarations_11_0= ruleDeclarationWOSemicolon ) )* otherlv_12= '}' ( ( (lv_valuedObjects_13_0= ruleValuedObject ) ) (otherlv_14= ',' ( (lv_valuedObjects_15_0= ruleValuedObject ) ) )* )? ( (lv_annotations_16_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleStructDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        Token lv_private_2_0=null;
        Token lv_const_3_0=null;
        Token lv_input_4_0=null;
        Token lv_output_5_0=null;
        Token lv_global_6_0=null;
        Token lv_static_7_0=null;
        Token lv_name_9_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        EObject lv_annotations_1_0 = null;

        Enumerator lv_type_8_0 = null;

        EObject lv_declarations_11_0 = null;

        EObject lv_valuedObjects_13_0 = null;

        EObject lv_valuedObjects_15_0 = null;

        EObject lv_annotations_16_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:13810:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_private_2_0= 'private' ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_type_8_0= ruleStructType ) ) ( (lv_name_9_0= RULE_ID ) )? otherlv_10= '{' ( (lv_declarations_11_0= ruleDeclarationWOSemicolon ) )* otherlv_12= '}' ( ( (lv_valuedObjects_13_0= ruleValuedObject ) ) (otherlv_14= ',' ( (lv_valuedObjects_15_0= ruleValuedObject ) ) )* )? ( (lv_annotations_16_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalSCEst.g:13811:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_private_2_0= 'private' ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_type_8_0= ruleStructType ) ) ( (lv_name_9_0= RULE_ID ) )? otherlv_10= '{' ( (lv_declarations_11_0= ruleDeclarationWOSemicolon ) )* otherlv_12= '}' ( ( (lv_valuedObjects_13_0= ruleValuedObject ) ) (otherlv_14= ',' ( (lv_valuedObjects_15_0= ruleValuedObject ) ) )* )? ( (lv_annotations_16_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalSCEst.g:13811:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_private_2_0= 'private' ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_type_8_0= ruleStructType ) ) ( (lv_name_9_0= RULE_ID ) )? otherlv_10= '{' ( (lv_declarations_11_0= ruleDeclarationWOSemicolon ) )* otherlv_12= '}' ( ( (lv_valuedObjects_13_0= ruleValuedObject ) ) (otherlv_14= ',' ( (lv_valuedObjects_15_0= ruleValuedObject ) ) )* )? ( (lv_annotations_16_0= ruleCommentAnnotatonSL ) )? )
            // InternalSCEst.g:13812:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_private_2_0= 'private' ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_type_8_0= ruleStructType ) ) ( (lv_name_9_0= RULE_ID ) )? otherlv_10= '{' ( (lv_declarations_11_0= ruleDeclarationWOSemicolon ) )* otherlv_12= '}' ( ( (lv_valuedObjects_13_0= ruleValuedObject ) ) (otherlv_14= ',' ( (lv_valuedObjects_15_0= ruleValuedObject ) ) )* )? ( (lv_annotations_16_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalSCEst.g:13812:3: ()
            // InternalSCEst.g:13813:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getStructDeclarationWOSemicolonAccess().getStructDeclarationAction_0(),
              					current);
              			
            }

            }

            // InternalSCEst.g:13822:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop328:
            do {
                int alt328=2;
                int LA328_0 = input.LA(1);

                if ( (LA328_0==RULE_COMMENT_ANNOTATION||LA328_0==128) ) {
                    alt328=1;
                }


                switch (alt328) {
            	case 1 :
            	    // InternalSCEst.g:13823:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:13823:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCEst.g:13824:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getStructDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_178);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getStructDeclarationWOSemicolonRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop328;
                }
            } while (true);

            // InternalSCEst.g:13841:3: ( (lv_private_2_0= 'private' ) )?
            int alt329=2;
            int LA329_0 = input.LA(1);

            if ( (LA329_0==112) ) {
                alt329=1;
            }
            switch (alt329) {
                case 1 :
                    // InternalSCEst.g:13842:4: (lv_private_2_0= 'private' )
                    {
                    // InternalSCEst.g:13842:4: (lv_private_2_0= 'private' )
                    // InternalSCEst.g:13843:5: lv_private_2_0= 'private'
                    {
                    lv_private_2_0=(Token)match(input,112,FollowSets000.FOLLOW_178); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_private_2_0, grammarAccess.getStructDeclarationWOSemicolonAccess().getPrivatePrivateKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStructDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "private", true, "private");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCEst.g:13855:3: ( (lv_const_3_0= 'const' ) )?
            int alt330=2;
            int LA330_0 = input.LA(1);

            if ( (LA330_0==113) ) {
                alt330=1;
            }
            switch (alt330) {
                case 1 :
                    // InternalSCEst.g:13856:4: (lv_const_3_0= 'const' )
                    {
                    // InternalSCEst.g:13856:4: (lv_const_3_0= 'const' )
                    // InternalSCEst.g:13857:5: lv_const_3_0= 'const'
                    {
                    lv_const_3_0=(Token)match(input,113,FollowSets000.FOLLOW_178); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_const_3_0, grammarAccess.getStructDeclarationWOSemicolonAccess().getConstConstKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStructDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "const", true, "const");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCEst.g:13869:3: ( (lv_input_4_0= 'input' ) )?
            int alt331=2;
            int LA331_0 = input.LA(1);

            if ( (LA331_0==37) ) {
                alt331=1;
            }
            switch (alt331) {
                case 1 :
                    // InternalSCEst.g:13870:4: (lv_input_4_0= 'input' )
                    {
                    // InternalSCEst.g:13870:4: (lv_input_4_0= 'input' )
                    // InternalSCEst.g:13871:5: lv_input_4_0= 'input'
                    {
                    lv_input_4_0=(Token)match(input,37,FollowSets000.FOLLOW_178); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_input_4_0, grammarAccess.getStructDeclarationWOSemicolonAccess().getInputInputKeyword_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStructDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "input", true, "input");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCEst.g:13883:3: ( (lv_output_5_0= 'output' ) )?
            int alt332=2;
            int LA332_0 = input.LA(1);

            if ( (LA332_0==38) ) {
                alt332=1;
            }
            switch (alt332) {
                case 1 :
                    // InternalSCEst.g:13884:4: (lv_output_5_0= 'output' )
                    {
                    // InternalSCEst.g:13884:4: (lv_output_5_0= 'output' )
                    // InternalSCEst.g:13885:5: lv_output_5_0= 'output'
                    {
                    lv_output_5_0=(Token)match(input,38,FollowSets000.FOLLOW_178); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_output_5_0, grammarAccess.getStructDeclarationWOSemicolonAccess().getOutputOutputKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStructDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "output", true, "output");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCEst.g:13897:3: ( (lv_global_6_0= 'global' ) )?
            int alt333=2;
            int LA333_0 = input.LA(1);

            if ( (LA333_0==114) ) {
                alt333=1;
            }
            switch (alt333) {
                case 1 :
                    // InternalSCEst.g:13898:4: (lv_global_6_0= 'global' )
                    {
                    // InternalSCEst.g:13898:4: (lv_global_6_0= 'global' )
                    // InternalSCEst.g:13899:5: lv_global_6_0= 'global'
                    {
                    lv_global_6_0=(Token)match(input,114,FollowSets000.FOLLOW_178); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_global_6_0, grammarAccess.getStructDeclarationWOSemicolonAccess().getGlobalGlobalKeyword_6_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStructDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "global", true, "global");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCEst.g:13911:3: ( (lv_static_7_0= 'static' ) )?
            int alt334=2;
            int LA334_0 = input.LA(1);

            if ( (LA334_0==115) ) {
                alt334=1;
            }
            switch (alt334) {
                case 1 :
                    // InternalSCEst.g:13912:4: (lv_static_7_0= 'static' )
                    {
                    // InternalSCEst.g:13912:4: (lv_static_7_0= 'static' )
                    // InternalSCEst.g:13913:5: lv_static_7_0= 'static'
                    {
                    lv_static_7_0=(Token)match(input,115,FollowSets000.FOLLOW_178); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_static_7_0, grammarAccess.getStructDeclarationWOSemicolonAccess().getStaticStaticKeyword_7_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStructDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "static", true, "static");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCEst.g:13925:3: ( (lv_type_8_0= ruleStructType ) )
            // InternalSCEst.g:13926:4: (lv_type_8_0= ruleStructType )
            {
            // InternalSCEst.g:13926:4: (lv_type_8_0= ruleStructType )
            // InternalSCEst.g:13927:5: lv_type_8_0= ruleStructType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getStructDeclarationWOSemicolonAccess().getTypeStructTypeEnumRuleCall_8_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_167);
            lv_type_8_0=ruleStructType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getStructDeclarationWOSemicolonRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_8_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.StructType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCEst.g:13944:3: ( (lv_name_9_0= RULE_ID ) )?
            int alt335=2;
            int LA335_0 = input.LA(1);

            if ( (LA335_0==RULE_ID) ) {
                alt335=1;
            }
            switch (alt335) {
                case 1 :
                    // InternalSCEst.g:13945:4: (lv_name_9_0= RULE_ID )
                    {
                    // InternalSCEst.g:13945:4: (lv_name_9_0= RULE_ID )
                    // InternalSCEst.g:13946:5: lv_name_9_0= RULE_ID
                    {
                    lv_name_9_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_149); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_9_0, grammarAccess.getStructDeclarationWOSemicolonAccess().getNameIDTerminalRuleCall_9_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStructDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_9_0,
                      						"de.cau.cs.kieler.annotations.Annotations.ID");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_10=(Token)match(input,102,FollowSets000.FOLLOW_179); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getStructDeclarationWOSemicolonAccess().getLeftCurlyBracketKeyword_10());
              		
            }
            // InternalSCEst.g:13966:3: ( (lv_declarations_11_0= ruleDeclarationWOSemicolon ) )*
            loop336:
            do {
                int alt336=2;
                int LA336_0 = input.LA(1);

                if ( (LA336_0==RULE_COMMENT_ANNOTATION||(LA336_0>=37 && LA336_0<=38)||LA336_0==77||LA336_0==101||(LA336_0>=112 && LA336_0<=117)||LA336_0==128||LA336_0==131||LA336_0==133||LA336_0==135||(LA336_0>=137 && LA336_0<=138)||(LA336_0>=163 && LA336_0<=165)) ) {
                    alt336=1;
                }


                switch (alt336) {
            	case 1 :
            	    // InternalSCEst.g:13967:4: (lv_declarations_11_0= ruleDeclarationWOSemicolon )
            	    {
            	    // InternalSCEst.g:13967:4: (lv_declarations_11_0= ruleDeclarationWOSemicolon )
            	    // InternalSCEst.g:13968:5: lv_declarations_11_0= ruleDeclarationWOSemicolon
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getStructDeclarationWOSemicolonAccess().getDeclarationsDeclarationWOSemicolonParserRuleCall_11_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_179);
            	    lv_declarations_11_0=ruleDeclarationWOSemicolon();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getStructDeclarationWOSemicolonRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_11_0,
            	      						"de.cau.cs.kieler.kexpressions.kext.KExt.DeclarationWOSemicolon");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop336;
                }
            } while (true);

            otherlv_12=(Token)match(input,103,FollowSets000.FOLLOW_181); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_12, grammarAccess.getStructDeclarationWOSemicolonAccess().getRightCurlyBracketKeyword_12());
              		
            }
            // InternalSCEst.g:13989:3: ( ( (lv_valuedObjects_13_0= ruleValuedObject ) ) (otherlv_14= ',' ( (lv_valuedObjects_15_0= ruleValuedObject ) ) )* )?
            int alt338=2;
            alt338 = dfa338.predict(input);
            switch (alt338) {
                case 1 :
                    // InternalSCEst.g:13990:4: ( (lv_valuedObjects_13_0= ruleValuedObject ) ) (otherlv_14= ',' ( (lv_valuedObjects_15_0= ruleValuedObject ) ) )*
                    {
                    // InternalSCEst.g:13990:4: ( (lv_valuedObjects_13_0= ruleValuedObject ) )
                    // InternalSCEst.g:13991:5: (lv_valuedObjects_13_0= ruleValuedObject )
                    {
                    // InternalSCEst.g:13991:5: (lv_valuedObjects_13_0= ruleValuedObject )
                    // InternalSCEst.g:13992:6: lv_valuedObjects_13_0= ruleValuedObject
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStructDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_13_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_177);
                    lv_valuedObjects_13_0=ruleValuedObject();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStructDeclarationWOSemicolonRule());
                      						}
                      						add(
                      							current,
                      							"valuedObjects",
                      							lv_valuedObjects_13_0,
                      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCEst.g:14009:4: (otherlv_14= ',' ( (lv_valuedObjects_15_0= ruleValuedObject ) ) )*
                    loop337:
                    do {
                        int alt337=2;
                        int LA337_0 = input.LA(1);

                        if ( (LA337_0==30) ) {
                            alt337=1;
                        }


                        switch (alt337) {
                    	case 1 :
                    	    // InternalSCEst.g:14010:5: otherlv_14= ',' ( (lv_valuedObjects_15_0= ruleValuedObject ) )
                    	    {
                    	    otherlv_14=(Token)match(input,30,FollowSets000.FOLLOW_14); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_14, grammarAccess.getStructDeclarationWOSemicolonAccess().getCommaKeyword_13_1_0());
                    	      				
                    	    }
                    	    // InternalSCEst.g:14014:5: ( (lv_valuedObjects_15_0= ruleValuedObject ) )
                    	    // InternalSCEst.g:14015:6: (lv_valuedObjects_15_0= ruleValuedObject )
                    	    {
                    	    // InternalSCEst.g:14015:6: (lv_valuedObjects_15_0= ruleValuedObject )
                    	    // InternalSCEst.g:14016:7: lv_valuedObjects_15_0= ruleValuedObject
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getStructDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_13_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_177);
                    	    lv_valuedObjects_15_0=ruleValuedObject();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getStructDeclarationWOSemicolonRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"valuedObjects",
                    	      								lv_valuedObjects_15_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop337;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalSCEst.g:14035:3: ( (lv_annotations_16_0= ruleCommentAnnotatonSL ) )?
            int alt339=2;
            int LA339_0 = input.LA(1);

            if ( (LA339_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt339=1;
            }
            switch (alt339) {
                case 1 :
                    // InternalSCEst.g:14036:4: (lv_annotations_16_0= ruleCommentAnnotatonSL )
                    {
                    // InternalSCEst.g:14036:4: (lv_annotations_16_0= ruleCommentAnnotatonSL )
                    // InternalSCEst.g:14037:5: lv_annotations_16_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStructDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_14_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_16_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStructDeclarationWOSemicolonRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_16_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStructDeclarationWOSemicolon"


    // $ANTLR start "entryRuleNamespaceID"
    // InternalSCEst.g:14058:1: entryRuleNamespaceID returns [String current=null] : iv_ruleNamespaceID= ruleNamespaceID EOF ;
    public final String entryRuleNamespaceID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNamespaceID = null;


        try {
            // InternalSCEst.g:14058:51: (iv_ruleNamespaceID= ruleNamespaceID EOF )
            // InternalSCEst.g:14059:2: iv_ruleNamespaceID= ruleNamespaceID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamespaceIDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNamespaceID=ruleNamespaceID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamespaceID.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNamespaceID"


    // $ANTLR start "ruleNamespaceID"
    // InternalSCEst.g:14065:1: ruleNamespaceID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ExtendedID_0= ruleExtendedID (kw= ':' this_PrimeID_2= rulePrimeID )* ) ;
    public final AntlrDatatypeRuleToken ruleNamespaceID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_ExtendedID_0 = null;

        AntlrDatatypeRuleToken this_PrimeID_2 = null;



        	enterRule();

        try {
            // InternalSCEst.g:14071:2: ( (this_ExtendedID_0= ruleExtendedID (kw= ':' this_PrimeID_2= rulePrimeID )* ) )
            // InternalSCEst.g:14072:2: (this_ExtendedID_0= ruleExtendedID (kw= ':' this_PrimeID_2= rulePrimeID )* )
            {
            // InternalSCEst.g:14072:2: (this_ExtendedID_0= ruleExtendedID (kw= ':' this_PrimeID_2= rulePrimeID )* )
            // InternalSCEst.g:14073:3: this_ExtendedID_0= ruleExtendedID (kw= ':' this_PrimeID_2= rulePrimeID )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getNamespaceIDAccess().getExtendedIDParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_182);
            this_ExtendedID_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_ExtendedID_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCEst.g:14083:3: (kw= ':' this_PrimeID_2= rulePrimeID )*
            loop340:
            do {
                int alt340=2;
                int LA340_0 = input.LA(1);

                if ( (LA340_0==18) ) {
                    alt340=1;
                }


                switch (alt340) {
            	case 1 :
            	    // InternalSCEst.g:14084:4: kw= ':' this_PrimeID_2= rulePrimeID
            	    {
            	    kw=(Token)match(input,18,FollowSets000.FOLLOW_6); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(kw);
            	      				newLeafNode(kw, grammarAccess.getNamespaceIDAccess().getColonKeyword_1_0());
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				newCompositeNode(grammarAccess.getNamespaceIDAccess().getPrimeIDParserRuleCall_1_1());
            	      			
            	    }
            	    pushFollow(FollowSets000.FOLLOW_182);
            	    this_PrimeID_2=rulePrimeID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(this_PrimeID_2);
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop340;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamespaceID"


    // $ANTLR start "entryRuleReferenceDeclaration"
    // InternalSCEst.g:14104:1: entryRuleReferenceDeclaration returns [EObject current=null] : iv_ruleReferenceDeclaration= ruleReferenceDeclaration EOF ;
    public final EObject entryRuleReferenceDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReferenceDeclaration = null;


        try {
            // InternalSCEst.g:14104:61: (iv_ruleReferenceDeclaration= ruleReferenceDeclaration EOF )
            // InternalSCEst.g:14105:2: iv_ruleReferenceDeclaration= ruleReferenceDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReferenceDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleReferenceDeclaration=ruleReferenceDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReferenceDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReferenceDeclaration"


    // $ANTLR start "ruleReferenceDeclaration"
    // InternalSCEst.g:14111:1: ruleReferenceDeclaration returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_private_1_0= 'private' ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* otherlv_11= ';' ( (lv_annotations_12_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleReferenceDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_private_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_extern_5_0 = null;

        EObject lv_extern_7_0 = null;

        EObject lv_valuedObjects_8_0 = null;

        EObject lv_valuedObjects_10_0 = null;

        EObject lv_annotations_12_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:14117:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_private_1_0= 'private' ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* otherlv_11= ';' ( (lv_annotations_12_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalSCEst.g:14118:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_private_1_0= 'private' ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* otherlv_11= ';' ( (lv_annotations_12_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalSCEst.g:14118:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_private_1_0= 'private' ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* otherlv_11= ';' ( (lv_annotations_12_0= ruleCommentAnnotatonSL ) )? )
            // InternalSCEst.g:14119:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_private_1_0= 'private' ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* otherlv_11= ';' ( (lv_annotations_12_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalSCEst.g:14119:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop341:
            do {
                int alt341=2;
                int LA341_0 = input.LA(1);

                if ( (LA341_0==RULE_COMMENT_ANNOTATION||LA341_0==128) ) {
                    alt341=1;
                }


                switch (alt341) {
            	case 1 :
            	    // InternalSCEst.g:14120:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:14120:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCEst.g:14121:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_183);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop341;
                }
            } while (true);

            // InternalSCEst.g:14138:3: ( (lv_private_1_0= 'private' ) )?
            int alt342=2;
            int LA342_0 = input.LA(1);

            if ( (LA342_0==112) ) {
                alt342=1;
            }
            switch (alt342) {
                case 1 :
                    // InternalSCEst.g:14139:4: (lv_private_1_0= 'private' )
                    {
                    // InternalSCEst.g:14139:4: (lv_private_1_0= 'private' )
                    // InternalSCEst.g:14140:5: lv_private_1_0= 'private'
                    {
                    lv_private_1_0=(Token)match(input,112,FollowSets000.FOLLOW_184); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_private_1_0, grammarAccess.getReferenceDeclarationAccess().getPrivatePrivateKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getReferenceDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "private", true, "private");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCEst.g:14152:3: ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) )
            int alt344=2;
            int LA344_0 = input.LA(1);

            if ( (LA344_0==116) ) {
                alt344=1;
            }
            else if ( (LA344_0==117) ) {
                alt344=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 344, 0, input);

                throw nvae;
            }
            switch (alt344) {
                case 1 :
                    // InternalSCEst.g:14153:4: (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) )
                    {
                    // InternalSCEst.g:14153:4: (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) )
                    // InternalSCEst.g:14154:5: otherlv_2= 'ref' ( ( ruleNamespaceID ) )
                    {
                    otherlv_2=(Token)match(input,116,FollowSets000.FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getReferenceDeclarationAccess().getRefKeyword_2_0_0());
                      				
                    }
                    // InternalSCEst.g:14158:5: ( ( ruleNamespaceID ) )
                    // InternalSCEst.g:14159:6: ( ruleNamespaceID )
                    {
                    // InternalSCEst.g:14159:6: ( ruleNamespaceID )
                    // InternalSCEst.g:14160:7: ruleNamespaceID
                    {
                    if ( state.backtracking==0 ) {

                      							/* */
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getReferenceDeclarationRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getReferenceNamedObjectCrossReference_2_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_14);
                    ruleNamespaceID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCEst.g:14179:4: (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* )
                    {
                    // InternalSCEst.g:14179:4: (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* )
                    // InternalSCEst.g:14180:5: otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )*
                    {
                    otherlv_4=(Token)match(input,117,FollowSets000.FOLLOW_185); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_4, grammarAccess.getReferenceDeclarationAccess().getExternKeyword_2_1_0());
                      				
                    }
                    // InternalSCEst.g:14184:5: ( (lv_extern_5_0= ruleExternString ) )
                    // InternalSCEst.g:14185:6: (lv_extern_5_0= ruleExternString )
                    {
                    // InternalSCEst.g:14185:6: (lv_extern_5_0= ruleExternString )
                    // InternalSCEst.g:14186:7: lv_extern_5_0= ruleExternString
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getExternExternStringParserRuleCall_2_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_186);
                    lv_extern_5_0=ruleExternString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
                      							}
                      							add(
                      								current,
                      								"extern",
                      								lv_extern_5_0,
                      								"de.cau.cs.kieler.kexpressions.kext.KExt.ExternString");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCEst.g:14203:5: (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )*
                    loop343:
                    do {
                        int alt343=2;
                        int LA343_0 = input.LA(1);

                        if ( (LA343_0==30) ) {
                            alt343=1;
                        }


                        switch (alt343) {
                    	case 1 :
                    	    // InternalSCEst.g:14204:6: otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,30,FollowSets000.FOLLOW_185); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_6, grammarAccess.getReferenceDeclarationAccess().getCommaKeyword_2_1_2_0());
                    	      					
                    	    }
                    	    // InternalSCEst.g:14208:6: ( (lv_extern_7_0= ruleExternString ) )
                    	    // InternalSCEst.g:14209:7: (lv_extern_7_0= ruleExternString )
                    	    {
                    	    // InternalSCEst.g:14209:7: (lv_extern_7_0= ruleExternString )
                    	    // InternalSCEst.g:14210:8: lv_extern_7_0= ruleExternString
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getExternExternStringParserRuleCall_2_1_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_186);
                    	    lv_extern_7_0=ruleExternString();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"extern",
                    	      									lv_extern_7_0,
                    	      									"de.cau.cs.kieler.kexpressions.kext.KExt.ExternString");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop343;
                        }
                    } while (true);


                    }


                    }
                    break;

            }

            // InternalSCEst.g:14230:3: ( (lv_valuedObjects_8_0= ruleValuedObject ) )
            // InternalSCEst.g:14231:4: (lv_valuedObjects_8_0= ruleValuedObject )
            {
            // InternalSCEst.g:14231:4: (lv_valuedObjects_8_0= ruleValuedObject )
            // InternalSCEst.g:14232:5: lv_valuedObjects_8_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_26);
            lv_valuedObjects_8_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_8_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCEst.g:14249:3: (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )*
            loop345:
            do {
                int alt345=2;
                int LA345_0 = input.LA(1);

                if ( (LA345_0==30) ) {
                    alt345=1;
                }


                switch (alt345) {
            	case 1 :
            	    // InternalSCEst.g:14250:4: otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) )
            	    {
            	    otherlv_9=(Token)match(input,30,FollowSets000.FOLLOW_14); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_9, grammarAccess.getReferenceDeclarationAccess().getCommaKeyword_4_0());
            	      			
            	    }
            	    // InternalSCEst.g:14254:4: ( (lv_valuedObjects_10_0= ruleValuedObject ) )
            	    // InternalSCEst.g:14255:5: (lv_valuedObjects_10_0= ruleValuedObject )
            	    {
            	    // InternalSCEst.g:14255:5: (lv_valuedObjects_10_0= ruleValuedObject )
            	    // InternalSCEst.g:14256:6: lv_valuedObjects_10_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_4_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_26);
            	    lv_valuedObjects_10_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"valuedObjects",
            	      							lv_valuedObjects_10_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop345;
                }
            } while (true);

            otherlv_11=(Token)match(input,21,FollowSets000.FOLLOW_176); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_11, grammarAccess.getReferenceDeclarationAccess().getSemicolonKeyword_5());
              		
            }
            // InternalSCEst.g:14278:3: ( (lv_annotations_12_0= ruleCommentAnnotatonSL ) )?
            int alt346=2;
            int LA346_0 = input.LA(1);

            if ( (LA346_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt346=1;
            }
            switch (alt346) {
                case 1 :
                    // InternalSCEst.g:14279:4: (lv_annotations_12_0= ruleCommentAnnotatonSL )
                    {
                    // InternalSCEst.g:14279:4: (lv_annotations_12_0= ruleCommentAnnotatonSL )
                    // InternalSCEst.g:14280:5: lv_annotations_12_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_6_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_12_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_12_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReferenceDeclaration"


    // $ANTLR start "entryRuleReferenceDeclarationWOSemicolon"
    // InternalSCEst.g:14301:1: entryRuleReferenceDeclarationWOSemicolon returns [EObject current=null] : iv_ruleReferenceDeclarationWOSemicolon= ruleReferenceDeclarationWOSemicolon EOF ;
    public final EObject entryRuleReferenceDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReferenceDeclarationWOSemicolon = null;


        try {
            // InternalSCEst.g:14301:72: (iv_ruleReferenceDeclarationWOSemicolon= ruleReferenceDeclarationWOSemicolon EOF )
            // InternalSCEst.g:14302:2: iv_ruleReferenceDeclarationWOSemicolon= ruleReferenceDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleReferenceDeclarationWOSemicolon=ruleReferenceDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReferenceDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReferenceDeclarationWOSemicolon"


    // $ANTLR start "ruleReferenceDeclarationWOSemicolon"
    // InternalSCEst.g:14308:1: ruleReferenceDeclarationWOSemicolon returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_private_1_0= 'private' ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* ( (lv_annotations_11_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleReferenceDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        Token lv_private_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_9=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_extern_5_0 = null;

        EObject lv_extern_7_0 = null;

        EObject lv_valuedObjects_8_0 = null;

        EObject lv_valuedObjects_10_0 = null;

        EObject lv_annotations_11_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:14314:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_private_1_0= 'private' ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* ( (lv_annotations_11_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalSCEst.g:14315:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_private_1_0= 'private' ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* ( (lv_annotations_11_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalSCEst.g:14315:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_private_1_0= 'private' ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* ( (lv_annotations_11_0= ruleCommentAnnotatonSL ) )? )
            // InternalSCEst.g:14316:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_private_1_0= 'private' ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* ( (lv_annotations_11_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalSCEst.g:14316:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop347:
            do {
                int alt347=2;
                int LA347_0 = input.LA(1);

                if ( (LA347_0==RULE_COMMENT_ANNOTATION||LA347_0==128) ) {
                    alt347=1;
                }


                switch (alt347) {
            	case 1 :
            	    // InternalSCEst.g:14317:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:14317:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCEst.g:14318:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_183);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop347;
                }
            } while (true);

            // InternalSCEst.g:14335:3: ( (lv_private_1_0= 'private' ) )?
            int alt348=2;
            int LA348_0 = input.LA(1);

            if ( (LA348_0==112) ) {
                alt348=1;
            }
            switch (alt348) {
                case 1 :
                    // InternalSCEst.g:14336:4: (lv_private_1_0= 'private' )
                    {
                    // InternalSCEst.g:14336:4: (lv_private_1_0= 'private' )
                    // InternalSCEst.g:14337:5: lv_private_1_0= 'private'
                    {
                    lv_private_1_0=(Token)match(input,112,FollowSets000.FOLLOW_184); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_private_1_0, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getPrivatePrivateKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getReferenceDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "private", true, "private");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCEst.g:14349:3: ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) )
            int alt350=2;
            int LA350_0 = input.LA(1);

            if ( (LA350_0==116) ) {
                alt350=1;
            }
            else if ( (LA350_0==117) ) {
                alt350=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 350, 0, input);

                throw nvae;
            }
            switch (alt350) {
                case 1 :
                    // InternalSCEst.g:14350:4: (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) )
                    {
                    // InternalSCEst.g:14350:4: (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) )
                    // InternalSCEst.g:14351:5: otherlv_2= 'ref' ( ( ruleNamespaceID ) )
                    {
                    otherlv_2=(Token)match(input,116,FollowSets000.FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getRefKeyword_2_0_0());
                      				
                    }
                    // InternalSCEst.g:14355:5: ( ( ruleNamespaceID ) )
                    // InternalSCEst.g:14356:6: ( ruleNamespaceID )
                    {
                    // InternalSCEst.g:14356:6: ( ruleNamespaceID )
                    // InternalSCEst.g:14357:7: ruleNamespaceID
                    {
                    if ( state.backtracking==0 ) {

                      							/* */
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getReferenceDeclarationWOSemicolonRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getReferenceNamedObjectCrossReference_2_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_14);
                    ruleNamespaceID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCEst.g:14376:4: (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* )
                    {
                    // InternalSCEst.g:14376:4: (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* )
                    // InternalSCEst.g:14377:5: otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )*
                    {
                    otherlv_4=(Token)match(input,117,FollowSets000.FOLLOW_185); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_4, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getExternKeyword_2_1_0());
                      				
                    }
                    // InternalSCEst.g:14381:5: ( (lv_extern_5_0= ruleExternString ) )
                    // InternalSCEst.g:14382:6: (lv_extern_5_0= ruleExternString )
                    {
                    // InternalSCEst.g:14382:6: (lv_extern_5_0= ruleExternString )
                    // InternalSCEst.g:14383:7: lv_extern_5_0= ruleExternString
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getExternExternStringParserRuleCall_2_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_186);
                    lv_extern_5_0=ruleExternString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
                      							}
                      							add(
                      								current,
                      								"extern",
                      								lv_extern_5_0,
                      								"de.cau.cs.kieler.kexpressions.kext.KExt.ExternString");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCEst.g:14400:5: (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )*
                    loop349:
                    do {
                        int alt349=2;
                        int LA349_0 = input.LA(1);

                        if ( (LA349_0==30) ) {
                            alt349=1;
                        }


                        switch (alt349) {
                    	case 1 :
                    	    // InternalSCEst.g:14401:6: otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,30,FollowSets000.FOLLOW_185); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_6, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getCommaKeyword_2_1_2_0());
                    	      					
                    	    }
                    	    // InternalSCEst.g:14405:6: ( (lv_extern_7_0= ruleExternString ) )
                    	    // InternalSCEst.g:14406:7: (lv_extern_7_0= ruleExternString )
                    	    {
                    	    // InternalSCEst.g:14406:7: (lv_extern_7_0= ruleExternString )
                    	    // InternalSCEst.g:14407:8: lv_extern_7_0= ruleExternString
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getExternExternStringParserRuleCall_2_1_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_186);
                    	    lv_extern_7_0=ruleExternString();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"extern",
                    	      									lv_extern_7_0,
                    	      									"de.cau.cs.kieler.kexpressions.kext.KExt.ExternString");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop349;
                        }
                    } while (true);


                    }


                    }
                    break;

            }

            // InternalSCEst.g:14427:3: ( (lv_valuedObjects_8_0= ruleValuedObject ) )
            // InternalSCEst.g:14428:4: (lv_valuedObjects_8_0= ruleValuedObject )
            {
            // InternalSCEst.g:14428:4: (lv_valuedObjects_8_0= ruleValuedObject )
            // InternalSCEst.g:14429:5: lv_valuedObjects_8_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_177);
            lv_valuedObjects_8_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_8_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCEst.g:14446:3: (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )*
            loop351:
            do {
                int alt351=2;
                int LA351_0 = input.LA(1);

                if ( (LA351_0==30) ) {
                    alt351=1;
                }


                switch (alt351) {
            	case 1 :
            	    // InternalSCEst.g:14447:4: otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) )
            	    {
            	    otherlv_9=(Token)match(input,30,FollowSets000.FOLLOW_14); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_9, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getCommaKeyword_4_0());
            	      			
            	    }
            	    // InternalSCEst.g:14451:4: ( (lv_valuedObjects_10_0= ruleValuedObject ) )
            	    // InternalSCEst.g:14452:5: (lv_valuedObjects_10_0= ruleValuedObject )
            	    {
            	    // InternalSCEst.g:14452:5: (lv_valuedObjects_10_0= ruleValuedObject )
            	    // InternalSCEst.g:14453:6: lv_valuedObjects_10_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_4_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_177);
            	    lv_valuedObjects_10_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
            	      						}
            	      						add(
            	      							current,
            	      							"valuedObjects",
            	      							lv_valuedObjects_10_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop351;
                }
            } while (true);

            // InternalSCEst.g:14471:3: ( (lv_annotations_11_0= ruleCommentAnnotatonSL ) )?
            int alt352=2;
            int LA352_0 = input.LA(1);

            if ( (LA352_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt352=1;
            }
            switch (alt352) {
                case 1 :
                    // InternalSCEst.g:14472:4: (lv_annotations_11_0= ruleCommentAnnotatonSL )
                    {
                    // InternalSCEst.g:14472:4: (lv_annotations_11_0= ruleCommentAnnotatonSL )
                    // InternalSCEst.g:14473:5: lv_annotations_11_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_11_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_11_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReferenceDeclarationWOSemicolon"


    // $ANTLR start "entryRuleExternString"
    // InternalSCEst.g:14494:1: entryRuleExternString returns [EObject current=null] : iv_ruleExternString= ruleExternString EOF ;
    public final EObject entryRuleExternString() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExternString = null;


        try {
            // InternalSCEst.g:14494:53: (iv_ruleExternString= ruleExternString EOF )
            // InternalSCEst.g:14495:2: iv_ruleExternString= ruleExternString EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExternStringRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleExternString=ruleExternString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExternString; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExternString"


    // $ANTLR start "ruleExternString"
    // InternalSCEst.g:14501:1: ruleExternString returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleTagAnnotation ) )* ( (lv_code_1_0= RULE_STRING ) ) ) ;
    public final EObject ruleExternString() throws RecognitionException {
        EObject current = null;

        Token lv_code_1_0=null;
        EObject lv_annotations_0_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:14507:2: ( ( ( (lv_annotations_0_0= ruleTagAnnotation ) )* ( (lv_code_1_0= RULE_STRING ) ) ) )
            // InternalSCEst.g:14508:2: ( ( (lv_annotations_0_0= ruleTagAnnotation ) )* ( (lv_code_1_0= RULE_STRING ) ) )
            {
            // InternalSCEst.g:14508:2: ( ( (lv_annotations_0_0= ruleTagAnnotation ) )* ( (lv_code_1_0= RULE_STRING ) ) )
            // InternalSCEst.g:14509:3: ( (lv_annotations_0_0= ruleTagAnnotation ) )* ( (lv_code_1_0= RULE_STRING ) )
            {
            // InternalSCEst.g:14509:3: ( (lv_annotations_0_0= ruleTagAnnotation ) )*
            loop353:
            do {
                int alt353=2;
                int LA353_0 = input.LA(1);

                if ( (LA353_0==128) ) {
                    alt353=1;
                }


                switch (alt353) {
            	case 1 :
            	    // InternalSCEst.g:14510:4: (lv_annotations_0_0= ruleTagAnnotation )
            	    {
            	    // InternalSCEst.g:14510:4: (lv_annotations_0_0= ruleTagAnnotation )
            	    // InternalSCEst.g:14511:5: lv_annotations_0_0= ruleTagAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getExternStringAccess().getAnnotationsTagAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_185);
            	    lv_annotations_0_0=ruleTagAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getExternStringRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.TagAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop353;
                }
            } while (true);

            // InternalSCEst.g:14528:3: ( (lv_code_1_0= RULE_STRING ) )
            // InternalSCEst.g:14529:4: (lv_code_1_0= RULE_STRING )
            {
            // InternalSCEst.g:14529:4: (lv_code_1_0= RULE_STRING )
            // InternalSCEst.g:14530:5: lv_code_1_0= RULE_STRING
            {
            lv_code_1_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_code_1_0, grammarAccess.getExternStringAccess().getCodeSTRINGTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getExternStringRule());
              					}
              					setWithLastConsumed(
              						current,
              						"code",
              						lv_code_1_0,
              						"de.cau.cs.kieler.esterel.Esterel.STRING");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExternString"


    // $ANTLR start "entryRuleScheduleDeclaration"
    // InternalSCEst.g:14550:1: entryRuleScheduleDeclaration returns [EObject current=null] : iv_ruleScheduleDeclaration= ruleScheduleDeclaration EOF ;
    public final EObject entryRuleScheduleDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScheduleDeclaration = null;


        try {
            // InternalSCEst.g:14550:60: (iv_ruleScheduleDeclaration= ruleScheduleDeclaration EOF )
            // InternalSCEst.g:14551:2: iv_ruleScheduleDeclaration= ruleScheduleDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScheduleDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScheduleDeclaration=ruleScheduleDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScheduleDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScheduleDeclaration"


    // $ANTLR start "ruleScheduleDeclaration"
    // InternalSCEst.g:14557:1: ruleScheduleDeclaration returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_private_1_0= 'private' ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* otherlv_14= ';' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleScheduleDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_private_1_0=null;
        Token otherlv_2=null;
        Token lv_name_3_0=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        EObject lv_annotations_0_0 = null;

        Enumerator lv_global_5_0 = null;

        Enumerator lv_priorities_7_0 = null;

        Enumerator lv_priorities_9_0 = null;

        EObject lv_valuedObjects_11_0 = null;

        EObject lv_valuedObjects_13_0 = null;

        EObject lv_annotations_15_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:14563:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_private_1_0= 'private' ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* otherlv_14= ';' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalSCEst.g:14564:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_private_1_0= 'private' ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* otherlv_14= ';' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalSCEst.g:14564:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_private_1_0= 'private' ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* otherlv_14= ';' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? )
            // InternalSCEst.g:14565:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_private_1_0= 'private' ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* otherlv_14= ';' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalSCEst.g:14565:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop354:
            do {
                int alt354=2;
                int LA354_0 = input.LA(1);

                if ( (LA354_0==RULE_COMMENT_ANNOTATION||LA354_0==128) ) {
                    alt354=1;
                }


                switch (alt354) {
            	case 1 :
            	    // InternalSCEst.g:14566:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:14566:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCEst.g:14567:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_187);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop354;
                }
            } while (true);

            // InternalSCEst.g:14584:3: ( (lv_private_1_0= 'private' ) )?
            int alt355=2;
            int LA355_0 = input.LA(1);

            if ( (LA355_0==112) ) {
                alt355=1;
            }
            switch (alt355) {
                case 1 :
                    // InternalSCEst.g:14585:4: (lv_private_1_0= 'private' )
                    {
                    // InternalSCEst.g:14585:4: (lv_private_1_0= 'private' )
                    // InternalSCEst.g:14586:5: lv_private_1_0= 'private'
                    {
                    lv_private_1_0=(Token)match(input,112,FollowSets000.FOLLOW_188); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_private_1_0, grammarAccess.getScheduleDeclarationAccess().getPrivatePrivateKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getScheduleDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "private", true, "private");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,101,FollowSets000.FOLLOW_189); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getScheduleDeclarationAccess().getScheduleKeyword_2());
              		
            }
            // InternalSCEst.g:14602:3: ( (lv_name_3_0= RULE_STRING ) )?
            int alt356=2;
            int LA356_0 = input.LA(1);

            if ( (LA356_0==RULE_STRING) ) {
                alt356=1;
            }
            switch (alt356) {
                case 1 :
                    // InternalSCEst.g:14603:4: (lv_name_3_0= RULE_STRING )
                    {
                    // InternalSCEst.g:14603:4: (lv_name_3_0= RULE_STRING )
                    // InternalSCEst.g:14604:5: lv_name_3_0= RULE_STRING
                    {
                    lv_name_3_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_190); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_3_0, grammarAccess.getScheduleDeclarationAccess().getNameSTRINGTerminalRuleCall_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getScheduleDeclarationRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_3_0,
                      						"de.cau.cs.kieler.esterel.Esterel.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCEst.g:14620:3: (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )?
            int alt357=2;
            int LA357_0 = input.LA(1);

            if ( (LA357_0==114) ) {
                alt357=1;
            }
            switch (alt357) {
                case 1 :
                    // InternalSCEst.g:14621:4: otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) )
                    {
                    otherlv_4=(Token)match(input,114,FollowSets000.FOLLOW_191); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getScheduleDeclarationAccess().getGlobalKeyword_4_0());
                      			
                    }
                    // InternalSCEst.g:14625:4: ( (lv_global_5_0= rulePriorityProtocol ) )
                    // InternalSCEst.g:14626:5: (lv_global_5_0= rulePriorityProtocol )
                    {
                    // InternalSCEst.g:14626:5: (lv_global_5_0= rulePriorityProtocol )
                    // InternalSCEst.g:14627:6: lv_global_5_0= rulePriorityProtocol
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getGlobalPriorityProtocolEnumRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_192);
                    lv_global_5_0=rulePriorityProtocol();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"global",
                      							lv_global_5_0,
                      							"de.cau.cs.kieler.kexpressions.kext.KExt.PriorityProtocol");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCEst.g:14645:3: (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )?
            int alt359=2;
            int LA359_0 = input.LA(1);

            if ( (LA359_0==102) ) {
                alt359=1;
            }
            switch (alt359) {
                case 1 :
                    // InternalSCEst.g:14646:4: otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}'
                    {
                    otherlv_6=(Token)match(input,102,FollowSets000.FOLLOW_191); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getScheduleDeclarationAccess().getLeftCurlyBracketKeyword_5_0());
                      			
                    }
                    // InternalSCEst.g:14650:4: ( (lv_priorities_7_0= rulePriorityProtocol ) )
                    // InternalSCEst.g:14651:5: (lv_priorities_7_0= rulePriorityProtocol )
                    {
                    // InternalSCEst.g:14651:5: (lv_priorities_7_0= rulePriorityProtocol )
                    // InternalSCEst.g:14652:6: lv_priorities_7_0= rulePriorityProtocol
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getPrioritiesPriorityProtocolEnumRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_193);
                    lv_priorities_7_0=rulePriorityProtocol();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
                      						}
                      						add(
                      							current,
                      							"priorities",
                      							lv_priorities_7_0,
                      							"de.cau.cs.kieler.kexpressions.kext.KExt.PriorityProtocol");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCEst.g:14669:4: (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )*
                    loop358:
                    do {
                        int alt358=2;
                        int LA358_0 = input.LA(1);

                        if ( (LA358_0==30) ) {
                            alt358=1;
                        }


                        switch (alt358) {
                    	case 1 :
                    	    // InternalSCEst.g:14670:5: otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) )
                    	    {
                    	    otherlv_8=(Token)match(input,30,FollowSets000.FOLLOW_191); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_8, grammarAccess.getScheduleDeclarationAccess().getCommaKeyword_5_2_0());
                    	      				
                    	    }
                    	    // InternalSCEst.g:14674:5: ( (lv_priorities_9_0= rulePriorityProtocol ) )
                    	    // InternalSCEst.g:14675:6: (lv_priorities_9_0= rulePriorityProtocol )
                    	    {
                    	    // InternalSCEst.g:14675:6: (lv_priorities_9_0= rulePriorityProtocol )
                    	    // InternalSCEst.g:14676:7: lv_priorities_9_0= rulePriorityProtocol
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getPrioritiesPriorityProtocolEnumRuleCall_5_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_193);
                    	    lv_priorities_9_0=rulePriorityProtocol();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"priorities",
                    	      								lv_priorities_9_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.PriorityProtocol");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop358;
                        }
                    } while (true);

                    otherlv_10=(Token)match(input,103,FollowSets000.FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getScheduleDeclarationAccess().getRightCurlyBracketKeyword_5_3());
                      			
                    }

                    }
                    break;

            }

            // InternalSCEst.g:14699:3: ( (lv_valuedObjects_11_0= ruleValuedObject ) )
            // InternalSCEst.g:14700:4: (lv_valuedObjects_11_0= ruleValuedObject )
            {
            // InternalSCEst.g:14700:4: (lv_valuedObjects_11_0= ruleValuedObject )
            // InternalSCEst.g:14701:5: lv_valuedObjects_11_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_6_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_26);
            lv_valuedObjects_11_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_11_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCEst.g:14718:3: (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )*
            loop360:
            do {
                int alt360=2;
                int LA360_0 = input.LA(1);

                if ( (LA360_0==30) ) {
                    alt360=1;
                }


                switch (alt360) {
            	case 1 :
            	    // InternalSCEst.g:14719:4: otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) )
            	    {
            	    otherlv_12=(Token)match(input,30,FollowSets000.FOLLOW_14); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_12, grammarAccess.getScheduleDeclarationAccess().getCommaKeyword_7_0());
            	      			
            	    }
            	    // InternalSCEst.g:14723:4: ( (lv_valuedObjects_13_0= ruleValuedObject ) )
            	    // InternalSCEst.g:14724:5: (lv_valuedObjects_13_0= ruleValuedObject )
            	    {
            	    // InternalSCEst.g:14724:5: (lv_valuedObjects_13_0= ruleValuedObject )
            	    // InternalSCEst.g:14725:6: lv_valuedObjects_13_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_7_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_26);
            	    lv_valuedObjects_13_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"valuedObjects",
            	      							lv_valuedObjects_13_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop360;
                }
            } while (true);

            otherlv_14=(Token)match(input,21,FollowSets000.FOLLOW_176); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_14, grammarAccess.getScheduleDeclarationAccess().getSemicolonKeyword_8());
              		
            }
            // InternalSCEst.g:14747:3: ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )?
            int alt361=2;
            int LA361_0 = input.LA(1);

            if ( (LA361_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt361=1;
            }
            switch (alt361) {
                case 1 :
                    // InternalSCEst.g:14748:4: (lv_annotations_15_0= ruleCommentAnnotatonSL )
                    {
                    // InternalSCEst.g:14748:4: (lv_annotations_15_0= ruleCommentAnnotatonSL )
                    // InternalSCEst.g:14749:5: lv_annotations_15_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_9_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_15_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_15_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScheduleDeclaration"


    // $ANTLR start "entryRuleScheduleDeclarationWOSemicolon"
    // InternalSCEst.g:14770:1: entryRuleScheduleDeclarationWOSemicolon returns [EObject current=null] : iv_ruleScheduleDeclarationWOSemicolon= ruleScheduleDeclarationWOSemicolon EOF ;
    public final EObject entryRuleScheduleDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScheduleDeclarationWOSemicolon = null;


        try {
            // InternalSCEst.g:14770:71: (iv_ruleScheduleDeclarationWOSemicolon= ruleScheduleDeclarationWOSemicolon EOF )
            // InternalSCEst.g:14771:2: iv_ruleScheduleDeclarationWOSemicolon= ruleScheduleDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScheduleDeclarationWOSemicolon=ruleScheduleDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScheduleDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScheduleDeclarationWOSemicolon"


    // $ANTLR start "ruleScheduleDeclarationWOSemicolon"
    // InternalSCEst.g:14777:1: ruleScheduleDeclarationWOSemicolon returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_private_1_0= 'private' ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleScheduleDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        Token lv_private_1_0=null;
        Token otherlv_2=null;
        Token lv_name_3_0=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_annotations_0_0 = null;

        Enumerator lv_global_5_0 = null;

        Enumerator lv_priorities_7_0 = null;

        Enumerator lv_priorities_9_0 = null;

        EObject lv_valuedObjects_11_0 = null;

        EObject lv_valuedObjects_13_0 = null;

        EObject lv_annotations_14_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:14783:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_private_1_0= 'private' ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalSCEst.g:14784:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_private_1_0= 'private' ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalSCEst.g:14784:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_private_1_0= 'private' ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? )
            // InternalSCEst.g:14785:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_private_1_0= 'private' ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalSCEst.g:14785:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop362:
            do {
                int alt362=2;
                int LA362_0 = input.LA(1);

                if ( (LA362_0==RULE_COMMENT_ANNOTATION||LA362_0==128) ) {
                    alt362=1;
                }


                switch (alt362) {
            	case 1 :
            	    // InternalSCEst.g:14786:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:14786:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCEst.g:14787:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_187);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop362;
                }
            } while (true);

            // InternalSCEst.g:14804:3: ( (lv_private_1_0= 'private' ) )?
            int alt363=2;
            int LA363_0 = input.LA(1);

            if ( (LA363_0==112) ) {
                alt363=1;
            }
            switch (alt363) {
                case 1 :
                    // InternalSCEst.g:14805:4: (lv_private_1_0= 'private' )
                    {
                    // InternalSCEst.g:14805:4: (lv_private_1_0= 'private' )
                    // InternalSCEst.g:14806:5: lv_private_1_0= 'private'
                    {
                    lv_private_1_0=(Token)match(input,112,FollowSets000.FOLLOW_188); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_private_1_0, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getPrivatePrivateKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getScheduleDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "private", true, "private");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,101,FollowSets000.FOLLOW_189); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getScheduleKeyword_2());
              		
            }
            // InternalSCEst.g:14822:3: ( (lv_name_3_0= RULE_STRING ) )?
            int alt364=2;
            int LA364_0 = input.LA(1);

            if ( (LA364_0==RULE_STRING) ) {
                alt364=1;
            }
            switch (alt364) {
                case 1 :
                    // InternalSCEst.g:14823:4: (lv_name_3_0= RULE_STRING )
                    {
                    // InternalSCEst.g:14823:4: (lv_name_3_0= RULE_STRING )
                    // InternalSCEst.g:14824:5: lv_name_3_0= RULE_STRING
                    {
                    lv_name_3_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_190); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_3_0, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getNameSTRINGTerminalRuleCall_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getScheduleDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_3_0,
                      						"de.cau.cs.kieler.esterel.Esterel.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCEst.g:14840:3: (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )?
            int alt365=2;
            int LA365_0 = input.LA(1);

            if ( (LA365_0==114) ) {
                alt365=1;
            }
            switch (alt365) {
                case 1 :
                    // InternalSCEst.g:14841:4: otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) )
                    {
                    otherlv_4=(Token)match(input,114,FollowSets000.FOLLOW_191); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getGlobalKeyword_4_0());
                      			
                    }
                    // InternalSCEst.g:14845:4: ( (lv_global_5_0= rulePriorityProtocol ) )
                    // InternalSCEst.g:14846:5: (lv_global_5_0= rulePriorityProtocol )
                    {
                    // InternalSCEst.g:14846:5: (lv_global_5_0= rulePriorityProtocol )
                    // InternalSCEst.g:14847:6: lv_global_5_0= rulePriorityProtocol
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getGlobalPriorityProtocolEnumRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_192);
                    lv_global_5_0=rulePriorityProtocol();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
                      						}
                      						set(
                      							current,
                      							"global",
                      							lv_global_5_0,
                      							"de.cau.cs.kieler.kexpressions.kext.KExt.PriorityProtocol");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCEst.g:14865:3: (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )?
            int alt367=2;
            int LA367_0 = input.LA(1);

            if ( (LA367_0==102) ) {
                alt367=1;
            }
            switch (alt367) {
                case 1 :
                    // InternalSCEst.g:14866:4: otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}'
                    {
                    otherlv_6=(Token)match(input,102,FollowSets000.FOLLOW_191); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getLeftCurlyBracketKeyword_5_0());
                      			
                    }
                    // InternalSCEst.g:14870:4: ( (lv_priorities_7_0= rulePriorityProtocol ) )
                    // InternalSCEst.g:14871:5: (lv_priorities_7_0= rulePriorityProtocol )
                    {
                    // InternalSCEst.g:14871:5: (lv_priorities_7_0= rulePriorityProtocol )
                    // InternalSCEst.g:14872:6: lv_priorities_7_0= rulePriorityProtocol
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getPrioritiesPriorityProtocolEnumRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_193);
                    lv_priorities_7_0=rulePriorityProtocol();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
                      						}
                      						add(
                      							current,
                      							"priorities",
                      							lv_priorities_7_0,
                      							"de.cau.cs.kieler.kexpressions.kext.KExt.PriorityProtocol");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCEst.g:14889:4: (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )*
                    loop366:
                    do {
                        int alt366=2;
                        int LA366_0 = input.LA(1);

                        if ( (LA366_0==30) ) {
                            alt366=1;
                        }


                        switch (alt366) {
                    	case 1 :
                    	    // InternalSCEst.g:14890:5: otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) )
                    	    {
                    	    otherlv_8=(Token)match(input,30,FollowSets000.FOLLOW_191); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_8, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getCommaKeyword_5_2_0());
                    	      				
                    	    }
                    	    // InternalSCEst.g:14894:5: ( (lv_priorities_9_0= rulePriorityProtocol ) )
                    	    // InternalSCEst.g:14895:6: (lv_priorities_9_0= rulePriorityProtocol )
                    	    {
                    	    // InternalSCEst.g:14895:6: (lv_priorities_9_0= rulePriorityProtocol )
                    	    // InternalSCEst.g:14896:7: lv_priorities_9_0= rulePriorityProtocol
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getPrioritiesPriorityProtocolEnumRuleCall_5_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_193);
                    	    lv_priorities_9_0=rulePriorityProtocol();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"priorities",
                    	      								lv_priorities_9_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.PriorityProtocol");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop366;
                        }
                    } while (true);

                    otherlv_10=(Token)match(input,103,FollowSets000.FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getRightCurlyBracketKeyword_5_3());
                      			
                    }

                    }
                    break;

            }

            // InternalSCEst.g:14919:3: ( (lv_valuedObjects_11_0= ruleValuedObject ) )
            // InternalSCEst.g:14920:4: (lv_valuedObjects_11_0= ruleValuedObject )
            {
            // InternalSCEst.g:14920:4: (lv_valuedObjects_11_0= ruleValuedObject )
            // InternalSCEst.g:14921:5: lv_valuedObjects_11_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_6_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_177);
            lv_valuedObjects_11_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_11_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCEst.g:14938:3: (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )*
            loop368:
            do {
                int alt368=2;
                int LA368_0 = input.LA(1);

                if ( (LA368_0==30) ) {
                    alt368=1;
                }


                switch (alt368) {
            	case 1 :
            	    // InternalSCEst.g:14939:4: otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) )
            	    {
            	    otherlv_12=(Token)match(input,30,FollowSets000.FOLLOW_14); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_12, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getCommaKeyword_7_0());
            	      			
            	    }
            	    // InternalSCEst.g:14943:4: ( (lv_valuedObjects_13_0= ruleValuedObject ) )
            	    // InternalSCEst.g:14944:5: (lv_valuedObjects_13_0= ruleValuedObject )
            	    {
            	    // InternalSCEst.g:14944:5: (lv_valuedObjects_13_0= ruleValuedObject )
            	    // InternalSCEst.g:14945:6: lv_valuedObjects_13_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_7_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_177);
            	    lv_valuedObjects_13_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
            	      						}
            	      						add(
            	      							current,
            	      							"valuedObjects",
            	      							lv_valuedObjects_13_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop368;
                }
            } while (true);

            // InternalSCEst.g:14963:3: ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )?
            int alt369=2;
            int LA369_0 = input.LA(1);

            if ( (LA369_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt369=1;
            }
            switch (alt369) {
                case 1 :
                    // InternalSCEst.g:14964:4: (lv_annotations_14_0= ruleCommentAnnotatonSL )
                    {
                    // InternalSCEst.g:14964:4: (lv_annotations_14_0= ruleCommentAnnotatonSL )
                    // InternalSCEst.g:14965:5: lv_annotations_14_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_8_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_14_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_14_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScheduleDeclarationWOSemicolon"


    // $ANTLR start "entryRuleValuedObject"
    // InternalSCEst.g:14986:1: entryRuleValuedObject returns [EObject current=null] : iv_ruleValuedObject= ruleValuedObject EOF ;
    public final EObject entryRuleValuedObject() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValuedObject = null;


        try {
            // InternalSCEst.g:14986:53: (iv_ruleValuedObject= ruleValuedObject EOF )
            // InternalSCEst.g:14987:2: iv_ruleValuedObject= ruleValuedObject EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValuedObjectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleValuedObject=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValuedObject; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValuedObject"


    // $ANTLR start "ruleValuedObject"
    // InternalSCEst.g:14993:1: ruleValuedObject returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )? (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )? ) ;
    public final EObject ruleValuedObject() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_cardinalities_3_0 = null;

        EObject lv_initialValue_6_0 = null;

        Enumerator lv_combineOperator_8_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:14999:2: ( ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )? (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )? ) )
            // InternalSCEst.g:15000:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )? (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )? )
            {
            // InternalSCEst.g:15000:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )? (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )? )
            // InternalSCEst.g:15001:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )? (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )?
            {
            // InternalSCEst.g:15001:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )*
            loop370:
            do {
                int alt370=2;
                int LA370_0 = input.LA(1);

                if ( (LA370_0==RULE_COMMENT_ANNOTATION||LA370_0==128) ) {
                    alt370=1;
                }


                switch (alt370) {
            	case 1 :
            	    // InternalSCEst.g:15002:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    {
            	    // InternalSCEst.g:15002:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    // InternalSCEst.g:15003:5: lv_annotations_0_0= ruleQuotedStringAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getValuedObjectAccess().getAnnotationsQuotedStringAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_14);
            	    lv_annotations_0_0=ruleQuotedStringAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getValuedObjectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.QuotedStringAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop370;
                }
            } while (true);

            // InternalSCEst.g:15020:3: ( (lv_name_1_0= rulePrimeID ) )
            // InternalSCEst.g:15021:4: (lv_name_1_0= rulePrimeID )
            {
            // InternalSCEst.g:15021:4: (lv_name_1_0= rulePrimeID )
            // InternalSCEst.g:15022:5: lv_name_1_0= rulePrimeID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getValuedObjectAccess().getNamePrimeIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_194);
            lv_name_1_0=rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getValuedObjectRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.PrimeID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCEst.g:15039:3: (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )*
            loop371:
            do {
                int alt371=2;
                int LA371_0 = input.LA(1);

                if ( (LA371_0==49) ) {
                    alt371=1;
                }


                switch (alt371) {
            	case 1 :
            	    // InternalSCEst.g:15040:4: otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']'
            	    {
            	    otherlv_2=(Token)match(input,49,FollowSets000.FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getValuedObjectAccess().getLeftSquareBracketKeyword_2_0());
            	      			
            	    }
            	    // InternalSCEst.g:15044:4: ( (lv_cardinalities_3_0= ruleExpression ) )
            	    // InternalSCEst.g:15045:5: (lv_cardinalities_3_0= ruleExpression )
            	    {
            	    // InternalSCEst.g:15045:5: (lv_cardinalities_3_0= ruleExpression )
            	    // InternalSCEst.g:15046:6: lv_cardinalities_3_0= ruleExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getValuedObjectAccess().getCardinalitiesExpressionParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_54);
            	    lv_cardinalities_3_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getValuedObjectRule());
            	      						}
            	      						add(
            	      							current,
            	      							"cardinalities",
            	      							lv_cardinalities_3_0,
            	      							"de.cau.cs.kieler.esterel.Esterel.Expression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_4=(Token)match(input,50,FollowSets000.FOLLOW_194); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_4, grammarAccess.getValuedObjectAccess().getRightSquareBracketKeyword_2_2());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop371;
                }
            } while (true);

            // InternalSCEst.g:15068:3: (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )?
            int alt372=2;
            int LA372_0 = input.LA(1);

            if ( (LA372_0==32) ) {
                alt372=1;
            }
            switch (alt372) {
                case 1 :
                    // InternalSCEst.g:15069:4: otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) )
                    {
                    otherlv_5=(Token)match(input,32,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getValuedObjectAccess().getEqualsSignKeyword_3_0());
                      			
                    }
                    // InternalSCEst.g:15073:4: ( (lv_initialValue_6_0= ruleExpression ) )
                    // InternalSCEst.g:15074:5: (lv_initialValue_6_0= ruleExpression )
                    {
                    // InternalSCEst.g:15074:5: (lv_initialValue_6_0= ruleExpression )
                    // InternalSCEst.g:15075:6: lv_initialValue_6_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getValuedObjectAccess().getInitialValueExpressionParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_195);
                    lv_initialValue_6_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getValuedObjectRule());
                      						}
                      						set(
                      							current,
                      							"initialValue",
                      							lv_initialValue_6_0,
                      							"de.cau.cs.kieler.esterel.Esterel.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCEst.g:15093:3: (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )?
            int alt373=2;
            int LA373_0 = input.LA(1);

            if ( (LA373_0==27) ) {
                alt373=1;
            }
            switch (alt373) {
                case 1 :
                    // InternalSCEst.g:15094:4: otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) )
                    {
                    otherlv_7=(Token)match(input,27,FollowSets000.FOLLOW_196); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getValuedObjectAccess().getCombineKeyword_4_0());
                      			
                    }
                    // InternalSCEst.g:15098:4: ( (lv_combineOperator_8_0= ruleCombineOperator ) )
                    // InternalSCEst.g:15099:5: (lv_combineOperator_8_0= ruleCombineOperator )
                    {
                    // InternalSCEst.g:15099:5: (lv_combineOperator_8_0= ruleCombineOperator )
                    // InternalSCEst.g:15100:6: lv_combineOperator_8_0= ruleCombineOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getValuedObjectAccess().getCombineOperatorCombineOperatorEnumRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_combineOperator_8_0=ruleCombineOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getValuedObjectRule());
                      						}
                      						set(
                      							current,
                      							"combineOperator",
                      							lv_combineOperator_8_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.CombineOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValuedObject"


    // $ANTLR start "entryRuleEffect"
    // InternalSCEst.g:15122:1: entryRuleEffect returns [EObject current=null] : iv_ruleEffect= ruleEffect EOF ;
    public final EObject entryRuleEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEffect = null;


        try {
            // InternalSCEst.g:15122:47: (iv_ruleEffect= ruleEffect EOF )
            // InternalSCEst.g:15123:2: iv_ruleEffect= ruleEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEffect=ruleEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEffect"


    // $ANTLR start "ruleEffect"
    // InternalSCEst.g:15129:1: ruleEffect returns [EObject current=null] : (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | this_Emission_2= ruleEmission | this_HostcodeEffect_3= ruleHostcodeEffect | this_ReferenceCallEffect_4= ruleReferenceCallEffect | this_FunctionCallEffect_5= ruleFunctionCallEffect | this_PrintCallEffect_6= rulePrintCallEffect | this_RandomizeCallEffect_7= ruleRandomizeCallEffect ) ;
    public final EObject ruleEffect() throws RecognitionException {
        EObject current = null;

        EObject this_Assignment_0 = null;

        EObject this_PostfixEffect_1 = null;

        EObject this_Emission_2 = null;

        EObject this_HostcodeEffect_3 = null;

        EObject this_ReferenceCallEffect_4 = null;

        EObject this_FunctionCallEffect_5 = null;

        EObject this_PrintCallEffect_6 = null;

        EObject this_RandomizeCallEffect_7 = null;



        	enterRule();

        try {
            // InternalSCEst.g:15135:2: ( (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | this_Emission_2= ruleEmission | this_HostcodeEffect_3= ruleHostcodeEffect | this_ReferenceCallEffect_4= ruleReferenceCallEffect | this_FunctionCallEffect_5= ruleFunctionCallEffect | this_PrintCallEffect_6= rulePrintCallEffect | this_RandomizeCallEffect_7= ruleRandomizeCallEffect ) )
            // InternalSCEst.g:15136:2: (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | this_Emission_2= ruleEmission | this_HostcodeEffect_3= ruleHostcodeEffect | this_ReferenceCallEffect_4= ruleReferenceCallEffect | this_FunctionCallEffect_5= ruleFunctionCallEffect | this_PrintCallEffect_6= rulePrintCallEffect | this_RandomizeCallEffect_7= ruleRandomizeCallEffect )
            {
            // InternalSCEst.g:15136:2: (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | this_Emission_2= ruleEmission | this_HostcodeEffect_3= ruleHostcodeEffect | this_ReferenceCallEffect_4= ruleReferenceCallEffect | this_FunctionCallEffect_5= ruleFunctionCallEffect | this_PrintCallEffect_6= rulePrintCallEffect | this_RandomizeCallEffect_7= ruleRandomizeCallEffect )
            int alt374=8;
            alt374 = dfa374.predict(input);
            switch (alt374) {
                case 1 :
                    // InternalSCEst.g:15137:3: this_Assignment_0= ruleAssignment
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEffectAccess().getAssignmentParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Assignment_0=ruleAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Assignment_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCEst.g:15149:3: this_PostfixEffect_1= rulePostfixEffect
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEffectAccess().getPostfixEffectParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PostfixEffect_1=rulePostfixEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PostfixEffect_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCEst.g:15161:3: this_Emission_2= ruleEmission
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEffectAccess().getEmissionParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Emission_2=ruleEmission();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Emission_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSCEst.g:15173:3: this_HostcodeEffect_3= ruleHostcodeEffect
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEffectAccess().getHostcodeEffectParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_HostcodeEffect_3=ruleHostcodeEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_HostcodeEffect_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalSCEst.g:15185:3: this_ReferenceCallEffect_4= ruleReferenceCallEffect
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEffectAccess().getReferenceCallEffectParserRuleCall_4());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ReferenceCallEffect_4=ruleReferenceCallEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ReferenceCallEffect_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalSCEst.g:15197:3: this_FunctionCallEffect_5= ruleFunctionCallEffect
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEffectAccess().getFunctionCallEffectParserRuleCall_5());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_FunctionCallEffect_5=ruleFunctionCallEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FunctionCallEffect_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalSCEst.g:15209:3: this_PrintCallEffect_6= rulePrintCallEffect
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEffectAccess().getPrintCallEffectParserRuleCall_6());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PrintCallEffect_6=rulePrintCallEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PrintCallEffect_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalSCEst.g:15221:3: this_RandomizeCallEffect_7= ruleRandomizeCallEffect
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEffectAccess().getRandomizeCallEffectParserRuleCall_7());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_RandomizeCallEffect_7=ruleRandomizeCallEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_RandomizeCallEffect_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEffect"


    // $ANTLR start "entryRuleEmission"
    // InternalSCEst.g:15236:1: entryRuleEmission returns [EObject current=null] : iv_ruleEmission= ruleEmission EOF ;
    public final EObject entryRuleEmission() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEmission = null;


        try {
            // InternalSCEst.g:15236:49: (iv_ruleEmission= ruleEmission EOF )
            // InternalSCEst.g:15237:2: iv_ruleEmission= ruleEmission EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEmissionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEmission=ruleEmission();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEmission; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEmission"


    // $ANTLR start "ruleEmission"
    // InternalSCEst.g:15243:1: ruleEmission returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) (otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' )? (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )? ) ;
    public final EObject ruleEmission() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_reference_1_0 = null;

        EObject lv_newValue_3_0 = null;

        EObject lv_schedule_6_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:15249:2: ( ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) (otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' )? (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )? ) )
            // InternalSCEst.g:15250:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) (otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' )? (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )? )
            {
            // InternalSCEst.g:15250:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) (otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' )? (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )? )
            // InternalSCEst.g:15251:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) (otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' )? (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )?
            {
            // InternalSCEst.g:15251:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )*
            loop375:
            do {
                int alt375=2;
                int LA375_0 = input.LA(1);

                if ( (LA375_0==RULE_COMMENT_ANNOTATION||LA375_0==128) ) {
                    alt375=1;
                }


                switch (alt375) {
            	case 1 :
            	    // InternalSCEst.g:15252:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    {
            	    // InternalSCEst.g:15252:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    // InternalSCEst.g:15253:5: lv_annotations_0_0= ruleQuotedStringAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getEmissionAccess().getAnnotationsQuotedStringAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_14);
            	    lv_annotations_0_0=ruleQuotedStringAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getEmissionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.QuotedStringAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop375;
                }
            } while (true);

            // InternalSCEst.g:15270:3: ( (lv_reference_1_0= ruleValuedObjectReference ) )
            // InternalSCEst.g:15271:4: (lv_reference_1_0= ruleValuedObjectReference )
            {
            // InternalSCEst.g:15271:4: (lv_reference_1_0= ruleValuedObjectReference )
            // InternalSCEst.g:15272:5: lv_reference_1_0= ruleValuedObjectReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEmissionAccess().getReferenceValuedObjectReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_197);
            lv_reference_1_0=ruleValuedObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEmissionRule());
              					}
              					set(
              						current,
              						"reference",
              						lv_reference_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCEst.g:15289:3: (otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' )?
            int alt376=2;
            int LA376_0 = input.LA(1);

            if ( (LA376_0==25) ) {
                alt376=1;
            }
            switch (alt376) {
                case 1 :
                    // InternalSCEst.g:15290:4: otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')'
                    {
                    otherlv_2=(Token)match(input,25,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getEmissionAccess().getLeftParenthesisKeyword_2_0());
                      			
                    }
                    // InternalSCEst.g:15294:4: ( (lv_newValue_3_0= ruleExpression ) )
                    // InternalSCEst.g:15295:5: (lv_newValue_3_0= ruleExpression )
                    {
                    // InternalSCEst.g:15295:5: (lv_newValue_3_0= ruleExpression )
                    // InternalSCEst.g:15296:6: lv_newValue_3_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEmissionAccess().getNewValueExpressionParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_20);
                    lv_newValue_3_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEmissionRule());
                      						}
                      						set(
                      							current,
                      							"newValue",
                      							lv_newValue_3_0,
                      							"de.cau.cs.kieler.esterel.Esterel.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,26,FollowSets000.FOLLOW_198); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getEmissionAccess().getRightParenthesisKeyword_2_2());
                      			
                    }

                    }
                    break;

            }

            // InternalSCEst.g:15318:3: (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )?
            int alt378=2;
            int LA378_0 = input.LA(1);

            if ( (LA378_0==101) ) {
                alt378=1;
            }
            switch (alt378) {
                case 1 :
                    // InternalSCEst.g:15319:4: otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_5=(Token)match(input,101,FollowSets000.FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getEmissionAccess().getScheduleKeyword_3_0());
                      			
                    }
                    // InternalSCEst.g:15323:4: ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+
                    int cnt377=0;
                    loop377:
                    do {
                        int alt377=2;
                        alt377 = dfa377.predict(input);
                        switch (alt377) {
                    	case 1 :
                    	    // InternalSCEst.g:15324:5: (lv_schedule_6_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCEst.g:15324:5: (lv_schedule_6_0= ruleScheduleObjectReference )
                    	    // InternalSCEst.g:15325:6: lv_schedule_6_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getEmissionAccess().getScheduleScheduleObjectReferenceParserRuleCall_3_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_199);
                    	    lv_schedule_6_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getEmissionRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_6_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt377 >= 1 ) break loop377;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(377, input);
                                throw eee;
                        }
                        cnt377++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEmission"


    // $ANTLR start "entryRulePostfixEffect"
    // InternalSCEst.g:15347:1: entryRulePostfixEffect returns [EObject current=null] : iv_rulePostfixEffect= rulePostfixEffect EOF ;
    public final EObject entryRulePostfixEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePostfixEffect = null;


        try {
            // InternalSCEst.g:15347:54: (iv_rulePostfixEffect= rulePostfixEffect EOF )
            // InternalSCEst.g:15348:2: iv_rulePostfixEffect= rulePostfixEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPostfixEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePostfixEffect=rulePostfixEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePostfixEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePostfixEffect"


    // $ANTLR start "rulePostfixEffect"
    // InternalSCEst.g:15354:1: rulePostfixEffect returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )? ) ;
    public final EObject rulePostfixEffect() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_reference_1_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_schedule_4_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:15360:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )? ) )
            // InternalSCEst.g:15361:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )? )
            {
            // InternalSCEst.g:15361:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )? )
            // InternalSCEst.g:15362:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )?
            {
            // InternalSCEst.g:15362:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop379:
            do {
                int alt379=2;
                int LA379_0 = input.LA(1);

                if ( (LA379_0==RULE_COMMENT_ANNOTATION||LA379_0==128) ) {
                    alt379=1;
                }


                switch (alt379) {
            	case 1 :
            	    // InternalSCEst.g:15363:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:15363:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCEst.g:15364:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getPostfixEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_14);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getPostfixEffectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop379;
                }
            } while (true);

            // InternalSCEst.g:15381:3: ( (lv_reference_1_0= ruleValuedObjectReference ) )
            // InternalSCEst.g:15382:4: (lv_reference_1_0= ruleValuedObjectReference )
            {
            // InternalSCEst.g:15382:4: (lv_reference_1_0= ruleValuedObjectReference )
            // InternalSCEst.g:15383:5: lv_reference_1_0= ruleValuedObjectReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPostfixEffectAccess().getReferenceValuedObjectReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_200);
            lv_reference_1_0=ruleValuedObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPostfixEffectRule());
              					}
              					set(
              						current,
              						"reference",
              						lv_reference_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCEst.g:15400:3: ( (lv_operator_2_0= rulePostfixOperator ) )
            // InternalSCEst.g:15401:4: (lv_operator_2_0= rulePostfixOperator )
            {
            // InternalSCEst.g:15401:4: (lv_operator_2_0= rulePostfixOperator )
            // InternalSCEst.g:15402:5: lv_operator_2_0= rulePostfixOperator
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPostfixEffectAccess().getOperatorPostfixOperatorEnumRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_198);
            lv_operator_2_0=rulePostfixOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPostfixEffectRule());
              					}
              					set(
              						current,
              						"operator",
              						lv_operator_2_0,
              						"de.cau.cs.kieler.kexpressions.keffects.KEffects.PostfixOperator");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCEst.g:15419:3: (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )?
            int alt381=2;
            int LA381_0 = input.LA(1);

            if ( (LA381_0==101) ) {
                alt381=1;
            }
            switch (alt381) {
                case 1 :
                    // InternalSCEst.g:15420:4: otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_3=(Token)match(input,101,FollowSets000.FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getPostfixEffectAccess().getScheduleKeyword_3_0());
                      			
                    }
                    // InternalSCEst.g:15424:4: ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+
                    int cnt380=0;
                    loop380:
                    do {
                        int alt380=2;
                        alt380 = dfa380.predict(input);
                        switch (alt380) {
                    	case 1 :
                    	    // InternalSCEst.g:15425:5: (lv_schedule_4_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCEst.g:15425:5: (lv_schedule_4_0= ruleScheduleObjectReference )
                    	    // InternalSCEst.g:15426:6: lv_schedule_4_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getPostfixEffectAccess().getScheduleScheduleObjectReferenceParserRuleCall_3_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_199);
                    	    lv_schedule_4_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getPostfixEffectRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_4_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt380 >= 1 ) break loop380;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(380, input);
                                throw eee;
                        }
                        cnt380++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePostfixEffect"


    // $ANTLR start "entryRuleHostcodeEffect"
    // InternalSCEst.g:15448:1: entryRuleHostcodeEffect returns [EObject current=null] : iv_ruleHostcodeEffect= ruleHostcodeEffect EOF ;
    public final EObject entryRuleHostcodeEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleHostcodeEffect = null;


        try {
            // InternalSCEst.g:15448:55: (iv_ruleHostcodeEffect= ruleHostcodeEffect EOF )
            // InternalSCEst.g:15449:2: iv_ruleHostcodeEffect= ruleHostcodeEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getHostcodeEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleHostcodeEffect=ruleHostcodeEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleHostcodeEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleHostcodeEffect"


    // $ANTLR start "ruleHostcodeEffect"
    // InternalSCEst.g:15455:1: ruleHostcodeEffect returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) ) ;
    public final EObject ruleHostcodeEffect() throws RecognitionException {
        EObject current = null;

        Token lv_text_1_0=null;
        EObject lv_annotations_0_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:15461:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) ) )
            // InternalSCEst.g:15462:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) )
            {
            // InternalSCEst.g:15462:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) )
            // InternalSCEst.g:15463:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) )
            {
            // InternalSCEst.g:15463:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop382:
            do {
                int alt382=2;
                int LA382_0 = input.LA(1);

                if ( (LA382_0==RULE_COMMENT_ANNOTATION||LA382_0==128) ) {
                    alt382=1;
                }


                switch (alt382) {
            	case 1 :
            	    // InternalSCEst.g:15464:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:15464:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCEst.g:15465:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getHostcodeEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_201);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getHostcodeEffectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop382;
                }
            } while (true);

            // InternalSCEst.g:15482:3: ( (lv_text_1_0= RULE_HOSTCODE ) )
            // InternalSCEst.g:15483:4: (lv_text_1_0= RULE_HOSTCODE )
            {
            // InternalSCEst.g:15483:4: (lv_text_1_0= RULE_HOSTCODE )
            // InternalSCEst.g:15484:5: lv_text_1_0= RULE_HOSTCODE
            {
            lv_text_1_0=(Token)match(input,RULE_HOSTCODE,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_text_1_0, grammarAccess.getHostcodeEffectAccess().getTextHOSTCODETerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getHostcodeEffectRule());
              					}
              					setWithLastConsumed(
              						current,
              						"text",
              						lv_text_1_0,
              						"de.cau.cs.kieler.esterel.Esterel.HOSTCODE");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleHostcodeEffect"


    // $ANTLR start "entryRuleReferenceCallEffect"
    // InternalSCEst.g:15504:1: entryRuleReferenceCallEffect returns [EObject current=null] : iv_ruleReferenceCallEffect= ruleReferenceCallEffect EOF ;
    public final EObject entryRuleReferenceCallEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReferenceCallEffect = null;


        try {
            // InternalSCEst.g:15504:60: (iv_ruleReferenceCallEffect= ruleReferenceCallEffect EOF )
            // InternalSCEst.g:15505:2: iv_ruleReferenceCallEffect= ruleReferenceCallEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReferenceCallEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleReferenceCallEffect=ruleReferenceCallEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReferenceCallEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReferenceCallEffect"


    // $ANTLR start "ruleReferenceCallEffect"
    // InternalSCEst.g:15511:1: ruleReferenceCallEffect returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'call' ( ( rulePrimeID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) ;
    public final EObject ruleReferenceCallEffect() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_parameters_4_0 = null;

        EObject lv_parameters_6_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:15517:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'call' ( ( rulePrimeID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) )
            // InternalSCEst.g:15518:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'call' ( ( rulePrimeID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) )
            {
            // InternalSCEst.g:15518:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'call' ( ( rulePrimeID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) )
            // InternalSCEst.g:15519:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'call' ( ( rulePrimeID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' )
            {
            // InternalSCEst.g:15519:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop383:
            do {
                int alt383=2;
                int LA383_0 = input.LA(1);

                if ( (LA383_0==RULE_COMMENT_ANNOTATION||LA383_0==128) ) {
                    alt383=1;
                }


                switch (alt383) {
            	case 1 :
            	    // InternalSCEst.g:15520:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:15520:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCEst.g:15521:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_58);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getReferenceCallEffectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop383;
                }
            } while (true);

            otherlv_1=(Token)match(input,53,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getReferenceCallEffectAccess().getCallKeyword_1());
              		
            }
            // InternalSCEst.g:15542:3: ( ( rulePrimeID ) )
            // InternalSCEst.g:15543:4: ( rulePrimeID )
            {
            // InternalSCEst.g:15543:4: ( rulePrimeID )
            // InternalSCEst.g:15544:5: rulePrimeID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getReferenceCallEffectRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getValuedObjectValuedObjectCrossReference_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_31);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCEst.g:15561:3: ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' )
            int alt385=2;
            int LA385_0 = input.LA(1);

            if ( (LA385_0==25) ) {
                alt385=1;
            }
            else if ( (LA385_0==34) ) {
                alt385=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 385, 0, input);

                throw nvae;
            }
            switch (alt385) {
                case 1 :
                    // InternalSCEst.g:15562:4: (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' )
                    {
                    // InternalSCEst.g:15562:4: (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' )
                    // InternalSCEst.g:15563:5: otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')'
                    {
                    otherlv_3=(Token)match(input,25,FollowSets000.FOLLOW_162); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getReferenceCallEffectAccess().getLeftParenthesisKeyword_3_0_0());
                      				
                    }
                    // InternalSCEst.g:15567:5: ( (lv_parameters_4_0= ruleParameter ) )
                    // InternalSCEst.g:15568:6: (lv_parameters_4_0= ruleParameter )
                    {
                    // InternalSCEst.g:15568:6: (lv_parameters_4_0= ruleParameter )
                    // InternalSCEst.g:15569:7: lv_parameters_4_0= ruleParameter
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getParametersParameterParserRuleCall_3_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_33);
                    lv_parameters_4_0=ruleParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getReferenceCallEffectRule());
                      							}
                      							add(
                      								current,
                      								"parameters",
                      								lv_parameters_4_0,
                      								"de.cau.cs.kieler.scl.SCL.Parameter");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCEst.g:15586:5: (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )*
                    loop384:
                    do {
                        int alt384=2;
                        int LA384_0 = input.LA(1);

                        if ( (LA384_0==30) ) {
                            alt384=1;
                        }


                        switch (alt384) {
                    	case 1 :
                    	    // InternalSCEst.g:15587:6: otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) )
                    	    {
                    	    otherlv_5=(Token)match(input,30,FollowSets000.FOLLOW_162); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_5, grammarAccess.getReferenceCallEffectAccess().getCommaKeyword_3_0_2_0());
                    	      					
                    	    }
                    	    // InternalSCEst.g:15591:6: ( (lv_parameters_6_0= ruleParameter ) )
                    	    // InternalSCEst.g:15592:7: (lv_parameters_6_0= ruleParameter )
                    	    {
                    	    // InternalSCEst.g:15592:7: (lv_parameters_6_0= ruleParameter )
                    	    // InternalSCEst.g:15593:8: lv_parameters_6_0= ruleParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getParametersParameterParserRuleCall_3_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_33);
                    	    lv_parameters_6_0=ruleParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getReferenceCallEffectRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"parameters",
                    	      									lv_parameters_6_0,
                    	      									"de.cau.cs.kieler.scl.SCL.Parameter");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop384;
                        }
                    } while (true);

                    otherlv_7=(Token)match(input,26,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getReferenceCallEffectAccess().getRightParenthesisKeyword_3_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCEst.g:15617:4: otherlv_8= '()'
                    {
                    otherlv_8=(Token)match(input,34,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getReferenceCallEffectAccess().getLeftParenthesisRightParenthesisKeyword_3_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReferenceCallEffect"


    // $ANTLR start "entryRuleFunctionCallEffect"
    // InternalSCEst.g:15626:1: entryRuleFunctionCallEffect returns [EObject current=null] : iv_ruleFunctionCallEffect= ruleFunctionCallEffect EOF ;
    public final EObject entryRuleFunctionCallEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionCallEffect = null;


        try {
            // InternalSCEst.g:15626:59: (iv_ruleFunctionCallEffect= ruleFunctionCallEffect EOF )
            // InternalSCEst.g:15627:2: iv_ruleFunctionCallEffect= ruleFunctionCallEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionCallEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFunctionCallEffect=ruleFunctionCallEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionCallEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionCallEffect"


    // $ANTLR start "ruleFunctionCallEffect"
    // InternalSCEst.g:15633:1: ruleFunctionCallEffect returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) ) ;
    public final EObject ruleFunctionCallEffect() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_functionName_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_parameters_4_0 = null;

        EObject lv_parameters_6_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:15639:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) ) )
            // InternalSCEst.g:15640:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) )
            {
            // InternalSCEst.g:15640:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) )
            // InternalSCEst.g:15641:3: ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) )
            {
            // InternalSCEst.g:15641:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop386:
            do {
                int alt386=2;
                int LA386_0 = input.LA(1);

                if ( (LA386_0==RULE_COMMENT_ANNOTATION||LA386_0==128) ) {
                    alt386=1;
                }


                switch (alt386) {
            	case 1 :
            	    // InternalSCEst.g:15642:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:15642:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCEst.g:15643:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getFunctionCallEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_202);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getFunctionCallEffectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop386;
                }
            } while (true);

            // InternalSCEst.g:15660:3: (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) )
            // InternalSCEst.g:15661:4: otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' )
            {
            otherlv_1=(Token)match(input,117,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_1, grammarAccess.getFunctionCallEffectAccess().getExternKeyword_1_0());
              			
            }
            // InternalSCEst.g:15665:4: ( (lv_functionName_2_0= RULE_ID ) )
            // InternalSCEst.g:15666:5: (lv_functionName_2_0= RULE_ID )
            {
            // InternalSCEst.g:15666:5: (lv_functionName_2_0= RULE_ID )
            // InternalSCEst.g:15667:6: lv_functionName_2_0= RULE_ID
            {
            lv_functionName_2_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						newLeafNode(lv_functionName_2_0, grammarAccess.getFunctionCallEffectAccess().getFunctionNameIDTerminalRuleCall_1_1_0());
              					
            }
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElement(grammarAccess.getFunctionCallEffectRule());
              						}
              						setWithLastConsumed(
              							current,
              							"functionName",
              							lv_functionName_2_0,
              							"de.cau.cs.kieler.annotations.Annotations.ID");
              					
            }

            }


            }

            // InternalSCEst.g:15683:4: ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' )
            int alt388=2;
            int LA388_0 = input.LA(1);

            if ( (LA388_0==25) ) {
                alt388=1;
            }
            else if ( (LA388_0==34) ) {
                alt388=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 388, 0, input);

                throw nvae;
            }
            switch (alt388) {
                case 1 :
                    // InternalSCEst.g:15684:5: (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' )
                    {
                    // InternalSCEst.g:15684:5: (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' )
                    // InternalSCEst.g:15685:6: otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')'
                    {
                    otherlv_3=(Token)match(input,25,FollowSets000.FOLLOW_162); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_3, grammarAccess.getFunctionCallEffectAccess().getLeftParenthesisKeyword_1_2_0_0());
                      					
                    }
                    // InternalSCEst.g:15689:6: ( (lv_parameters_4_0= ruleParameter ) )
                    // InternalSCEst.g:15690:7: (lv_parameters_4_0= ruleParameter )
                    {
                    // InternalSCEst.g:15690:7: (lv_parameters_4_0= ruleParameter )
                    // InternalSCEst.g:15691:8: lv_parameters_4_0= ruleParameter
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getFunctionCallEffectAccess().getParametersParameterParserRuleCall_1_2_0_1_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_33);
                    lv_parameters_4_0=ruleParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getFunctionCallEffectRule());
                      								}
                      								add(
                      									current,
                      									"parameters",
                      									lv_parameters_4_0,
                      									"de.cau.cs.kieler.scl.SCL.Parameter");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    // InternalSCEst.g:15708:6: (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )*
                    loop387:
                    do {
                        int alt387=2;
                        int LA387_0 = input.LA(1);

                        if ( (LA387_0==30) ) {
                            alt387=1;
                        }


                        switch (alt387) {
                    	case 1 :
                    	    // InternalSCEst.g:15709:7: otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) )
                    	    {
                    	    otherlv_5=(Token)match(input,30,FollowSets000.FOLLOW_162); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							newLeafNode(otherlv_5, grammarAccess.getFunctionCallEffectAccess().getCommaKeyword_1_2_0_2_0());
                    	      						
                    	    }
                    	    // InternalSCEst.g:15713:7: ( (lv_parameters_6_0= ruleParameter ) )
                    	    // InternalSCEst.g:15714:8: (lv_parameters_6_0= ruleParameter )
                    	    {
                    	    // InternalSCEst.g:15714:8: (lv_parameters_6_0= ruleParameter )
                    	    // InternalSCEst.g:15715:9: lv_parameters_6_0= ruleParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      									newCompositeNode(grammarAccess.getFunctionCallEffectAccess().getParametersParameterParserRuleCall_1_2_0_2_1_0());
                    	      								
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_33);
                    	    lv_parameters_6_0=ruleParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									if (current==null) {
                    	      										current = createModelElementForParent(grammarAccess.getFunctionCallEffectRule());
                    	      									}
                    	      									add(
                    	      										current,
                    	      										"parameters",
                    	      										lv_parameters_6_0,
                    	      										"de.cau.cs.kieler.scl.SCL.Parameter");
                    	      									afterParserOrEnumRuleCall();
                    	      								
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop387;
                        }
                    } while (true);

                    otherlv_7=(Token)match(input,26,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_7, grammarAccess.getFunctionCallEffectAccess().getRightParenthesisKeyword_1_2_0_3());
                      					
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCEst.g:15739:5: otherlv_8= '()'
                    {
                    otherlv_8=(Token)match(input,34,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_8, grammarAccess.getFunctionCallEffectAccess().getLeftParenthesisRightParenthesisKeyword_1_2_1());
                      				
                    }

                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionCallEffect"


    // $ANTLR start "entryRulePrintCallEffect"
    // InternalSCEst.g:15749:1: entryRulePrintCallEffect returns [EObject current=null] : iv_rulePrintCallEffect= rulePrintCallEffect EOF ;
    public final EObject entryRulePrintCallEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrintCallEffect = null;


        try {
            // InternalSCEst.g:15749:56: (iv_rulePrintCallEffect= rulePrintCallEffect EOF )
            // InternalSCEst.g:15750:2: iv_rulePrintCallEffect= rulePrintCallEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrintCallEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePrintCallEffect=rulePrintCallEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrintCallEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrintCallEffect"


    // $ANTLR start "rulePrintCallEffect"
    // InternalSCEst.g:15756:1: rulePrintCallEffect returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'print' (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) ) ;
    public final EObject rulePrintCallEffect() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_parameters_3_0 = null;

        EObject lv_parameters_5_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:15762:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'print' (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) ) )
            // InternalSCEst.g:15763:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'print' (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) )
            {
            // InternalSCEst.g:15763:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'print' (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) )
            // InternalSCEst.g:15764:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'print' (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' )
            {
            // InternalSCEst.g:15764:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop389:
            do {
                int alt389=2;
                int LA389_0 = input.LA(1);

                if ( (LA389_0==RULE_COMMENT_ANNOTATION||LA389_0==128) ) {
                    alt389=1;
                }


                switch (alt389) {
            	case 1 :
            	    // InternalSCEst.g:15765:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:15765:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCEst.g:15766:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getPrintCallEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_203);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getPrintCallEffectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop389;
                }
            } while (true);

            otherlv_1=(Token)match(input,118,FollowSets000.FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getPrintCallEffectAccess().getPrintKeyword_1());
              		
            }
            // InternalSCEst.g:15787:3: (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' )
            // InternalSCEst.g:15788:4: otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')'
            {
            otherlv_2=(Token)match(input,25,FollowSets000.FOLLOW_162); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_2, grammarAccess.getPrintCallEffectAccess().getLeftParenthesisKeyword_2_0());
              			
            }
            // InternalSCEst.g:15792:4: ( (lv_parameters_3_0= ruleParameter ) )
            // InternalSCEst.g:15793:5: (lv_parameters_3_0= ruleParameter )
            {
            // InternalSCEst.g:15793:5: (lv_parameters_3_0= ruleParameter )
            // InternalSCEst.g:15794:6: lv_parameters_3_0= ruleParameter
            {
            if ( state.backtracking==0 ) {

              						newCompositeNode(grammarAccess.getPrintCallEffectAccess().getParametersParameterParserRuleCall_2_1_0());
              					
            }
            pushFollow(FollowSets000.FOLLOW_33);
            lv_parameters_3_0=ruleParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElementForParent(grammarAccess.getPrintCallEffectRule());
              						}
              						add(
              							current,
              							"parameters",
              							lv_parameters_3_0,
              							"de.cau.cs.kieler.scl.SCL.Parameter");
              						afterParserOrEnumRuleCall();
              					
            }

            }


            }

            // InternalSCEst.g:15811:4: (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )*
            loop390:
            do {
                int alt390=2;
                int LA390_0 = input.LA(1);

                if ( (LA390_0==30) ) {
                    alt390=1;
                }


                switch (alt390) {
            	case 1 :
            	    // InternalSCEst.g:15812:5: otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) )
            	    {
            	    otherlv_4=(Token)match(input,30,FollowSets000.FOLLOW_162); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_4, grammarAccess.getPrintCallEffectAccess().getCommaKeyword_2_2_0());
            	      				
            	    }
            	    // InternalSCEst.g:15816:5: ( (lv_parameters_5_0= ruleParameter ) )
            	    // InternalSCEst.g:15817:6: (lv_parameters_5_0= ruleParameter )
            	    {
            	    // InternalSCEst.g:15817:6: (lv_parameters_5_0= ruleParameter )
            	    // InternalSCEst.g:15818:7: lv_parameters_5_0= ruleParameter
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getPrintCallEffectAccess().getParametersParameterParserRuleCall_2_2_1_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_33);
            	    lv_parameters_5_0=ruleParameter();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getPrintCallEffectRule());
            	      							}
            	      							add(
            	      								current,
            	      								"parameters",
            	      								lv_parameters_5_0,
            	      								"de.cau.cs.kieler.scl.SCL.Parameter");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop390;
                }
            } while (true);

            otherlv_6=(Token)match(input,26,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_6, grammarAccess.getPrintCallEffectAccess().getRightParenthesisKeyword_2_3());
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrintCallEffect"


    // $ANTLR start "entryRuleRandomizeCallEffect"
    // InternalSCEst.g:15845:1: entryRuleRandomizeCallEffect returns [EObject current=null] : iv_ruleRandomizeCallEffect= ruleRandomizeCallEffect EOF ;
    public final EObject entryRuleRandomizeCallEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRandomizeCallEffect = null;


        try {
            // InternalSCEst.g:15845:60: (iv_ruleRandomizeCallEffect= ruleRandomizeCallEffect EOF )
            // InternalSCEst.g:15846:2: iv_ruleRandomizeCallEffect= ruleRandomizeCallEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRandomizeCallEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRandomizeCallEffect=ruleRandomizeCallEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRandomizeCallEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRandomizeCallEffect"


    // $ANTLR start "ruleRandomizeCallEffect"
    // InternalSCEst.g:15852:1: ruleRandomizeCallEffect returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'randomize' ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) ;
    public final EObject ruleRandomizeCallEffect() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        EObject lv_annotations_1_0 = null;

        EObject lv_parameters_4_0 = null;

        EObject lv_parameters_6_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:15858:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'randomize' ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) )
            // InternalSCEst.g:15859:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'randomize' ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) )
            {
            // InternalSCEst.g:15859:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'randomize' ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) )
            // InternalSCEst.g:15860:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'randomize' ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' )
            {
            // InternalSCEst.g:15860:3: ()
            // InternalSCEst.g:15861:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getRandomizeCallEffectAccess().getRandomizeCallEffectAction_0(),
              					current);
              			
            }

            }

            // InternalSCEst.g:15870:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop391:
            do {
                int alt391=2;
                int LA391_0 = input.LA(1);

                if ( (LA391_0==RULE_COMMENT_ANNOTATION||LA391_0==128) ) {
                    alt391=1;
                }


                switch (alt391) {
            	case 1 :
            	    // InternalSCEst.g:15871:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:15871:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCEst.g:15872:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getRandomizeCallEffectAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_204);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getRandomizeCallEffectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop391;
                }
            } while (true);

            otherlv_2=(Token)match(input,119,FollowSets000.FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getRandomizeCallEffectAccess().getRandomizeKeyword_2());
              		
            }
            // InternalSCEst.g:15893:3: ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' )
            int alt393=2;
            int LA393_0 = input.LA(1);

            if ( (LA393_0==25) ) {
                alt393=1;
            }
            else if ( (LA393_0==34) ) {
                alt393=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 393, 0, input);

                throw nvae;
            }
            switch (alt393) {
                case 1 :
                    // InternalSCEst.g:15894:4: (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' )
                    {
                    // InternalSCEst.g:15894:4: (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' )
                    // InternalSCEst.g:15895:5: otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')'
                    {
                    otherlv_3=(Token)match(input,25,FollowSets000.FOLLOW_162); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getRandomizeCallEffectAccess().getLeftParenthesisKeyword_3_0_0());
                      				
                    }
                    // InternalSCEst.g:15899:5: ( (lv_parameters_4_0= ruleParameter ) )
                    // InternalSCEst.g:15900:6: (lv_parameters_4_0= ruleParameter )
                    {
                    // InternalSCEst.g:15900:6: (lv_parameters_4_0= ruleParameter )
                    // InternalSCEst.g:15901:7: lv_parameters_4_0= ruleParameter
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRandomizeCallEffectAccess().getParametersParameterParserRuleCall_3_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_33);
                    lv_parameters_4_0=ruleParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRandomizeCallEffectRule());
                      							}
                      							add(
                      								current,
                      								"parameters",
                      								lv_parameters_4_0,
                      								"de.cau.cs.kieler.scl.SCL.Parameter");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCEst.g:15918:5: (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )*
                    loop392:
                    do {
                        int alt392=2;
                        int LA392_0 = input.LA(1);

                        if ( (LA392_0==30) ) {
                            alt392=1;
                        }


                        switch (alt392) {
                    	case 1 :
                    	    // InternalSCEst.g:15919:6: otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) )
                    	    {
                    	    otherlv_5=(Token)match(input,30,FollowSets000.FOLLOW_162); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_5, grammarAccess.getRandomizeCallEffectAccess().getCommaKeyword_3_0_2_0());
                    	      					
                    	    }
                    	    // InternalSCEst.g:15923:6: ( (lv_parameters_6_0= ruleParameter ) )
                    	    // InternalSCEst.g:15924:7: (lv_parameters_6_0= ruleParameter )
                    	    {
                    	    // InternalSCEst.g:15924:7: (lv_parameters_6_0= ruleParameter )
                    	    // InternalSCEst.g:15925:8: lv_parameters_6_0= ruleParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getRandomizeCallEffectAccess().getParametersParameterParserRuleCall_3_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_33);
                    	    lv_parameters_6_0=ruleParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getRandomizeCallEffectRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"parameters",
                    	      									lv_parameters_6_0,
                    	      									"de.cau.cs.kieler.scl.SCL.Parameter");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop392;
                        }
                    } while (true);

                    otherlv_7=(Token)match(input,26,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getRandomizeCallEffectAccess().getRightParenthesisKeyword_3_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCEst.g:15949:4: otherlv_8= '()'
                    {
                    otherlv_8=(Token)match(input,34,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getRandomizeCallEffectAccess().getLeftParenthesisRightParenthesisKeyword_3_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRandomizeCallEffect"


    // $ANTLR start "entryRuleBoolExpression"
    // InternalSCEst.g:15958:1: entryRuleBoolExpression returns [EObject current=null] : iv_ruleBoolExpression= ruleBoolExpression EOF ;
    public final EObject entryRuleBoolExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBoolExpression = null;


        try {
            // InternalSCEst.g:15958:55: (iv_ruleBoolExpression= ruleBoolExpression EOF )
            // InternalSCEst.g:15959:2: iv_ruleBoolExpression= ruleBoolExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBoolExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBoolExpression=ruleBoolExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBoolExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBoolExpression"


    // $ANTLR start "ruleBoolExpression"
    // InternalSCEst.g:15965:1: ruleBoolExpression returns [EObject current=null] : this_LogicalOrExpression_0= ruleLogicalOrExpression ;
    public final EObject ruleBoolExpression() throws RecognitionException {
        EObject current = null;

        EObject this_LogicalOrExpression_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:15971:2: (this_LogicalOrExpression_0= ruleLogicalOrExpression )
            // InternalSCEst.g:15972:2: this_LogicalOrExpression_0= ruleLogicalOrExpression
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getBoolExpressionAccess().getLogicalOrExpressionParserRuleCall());
              	
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_LogicalOrExpression_0=ruleLogicalOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_LogicalOrExpression_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBoolExpression"


    // $ANTLR start "entryRuleLogicalOrExpression"
    // InternalSCEst.g:15986:1: entryRuleLogicalOrExpression returns [EObject current=null] : iv_ruleLogicalOrExpression= ruleLogicalOrExpression EOF ;
    public final EObject entryRuleLogicalOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLogicalOrExpression = null;


        try {
            // InternalSCEst.g:15986:60: (iv_ruleLogicalOrExpression= ruleLogicalOrExpression EOF )
            // InternalSCEst.g:15987:2: iv_ruleLogicalOrExpression= ruleLogicalOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLogicalOrExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLogicalOrExpression=ruleLogicalOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLogicalOrExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLogicalOrExpression"


    // $ANTLR start "ruleLogicalOrExpression"
    // InternalSCEst.g:15993:1: ruleLogicalOrExpression returns [EObject current=null] : (this_LogicalAndExpression_0= ruleLogicalAndExpression ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )? ) ;
    public final EObject ruleLogicalOrExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_LogicalAndExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:15999:2: ( (this_LogicalAndExpression_0= ruleLogicalAndExpression ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )? ) )
            // InternalSCEst.g:16000:2: (this_LogicalAndExpression_0= ruleLogicalAndExpression ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )? )
            {
            // InternalSCEst.g:16000:2: (this_LogicalAndExpression_0= ruleLogicalAndExpression ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )? )
            // InternalSCEst.g:16001:3: this_LogicalAndExpression_0= ruleLogicalAndExpression ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getLogicalOrExpressionAccess().getLogicalAndExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_49);
            this_LogicalAndExpression_0=ruleLogicalAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_LogicalAndExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCEst.g:16012:3: ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )?
            int alt395=2;
            int LA395_0 = input.LA(1);

            if ( (LA395_0==45) ) {
                alt395=1;
            }
            switch (alt395) {
                case 1 :
                    // InternalSCEst.g:16013:4: () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )*
                    {
                    // InternalSCEst.g:16013:4: ()
                    // InternalSCEst.g:16014:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getLogicalOrExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCEst.g:16023:4: ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) )
                    // InternalSCEst.g:16024:5: ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) )
                    {
                    // InternalSCEst.g:16024:5: ( (lv_operator_2_0= ruleLogicalOrOperator ) )
                    // InternalSCEst.g:16025:6: (lv_operator_2_0= ruleLogicalOrOperator )
                    {
                    // InternalSCEst.g:16025:6: (lv_operator_2_0= ruleLogicalOrOperator )
                    // InternalSCEst.g:16026:7: lv_operator_2_0= ruleLogicalOrOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalOrExpressionAccess().getOperatorLogicalOrOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_16);
                    lv_operator_2_0=ruleLogicalOrOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalOrExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.LogicalOrOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCEst.g:16043:5: ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) )
                    // InternalSCEst.g:16044:6: (lv_subExpressions_3_0= ruleLogicalAndExpression )
                    {
                    // InternalSCEst.g:16044:6: (lv_subExpressions_3_0= ruleLogicalAndExpression )
                    // InternalSCEst.g:16045:7: lv_subExpressions_3_0= ruleLogicalAndExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalOrExpressionAccess().getSubExpressionsLogicalAndExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_49);
                    lv_subExpressions_3_0=ruleLogicalAndExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalOrExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.LogicalAndExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalSCEst.g:16063:4: (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )*
                    loop394:
                    do {
                        int alt394=2;
                        int LA394_0 = input.LA(1);

                        if ( (LA394_0==45) ) {
                            alt394=1;
                        }


                        switch (alt394) {
                    	case 1 :
                    	    // InternalSCEst.g:16064:5: otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,45,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getLogicalOrExpressionAccess().getVerticalLineVerticalLineKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalSCEst.g:16068:5: ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) )
                    	    // InternalSCEst.g:16069:6: (lv_subExpressions_5_0= ruleLogicalAndExpression )
                    	    {
                    	    // InternalSCEst.g:16069:6: (lv_subExpressions_5_0= ruleLogicalAndExpression )
                    	    // InternalSCEst.g:16070:7: lv_subExpressions_5_0= ruleLogicalAndExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getLogicalOrExpressionAccess().getSubExpressionsLogicalAndExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_49);
                    	    lv_subExpressions_5_0=ruleLogicalAndExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getLogicalOrExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.LogicalAndExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop394;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalOrExpression"


    // $ANTLR start "entryRuleLogicalAndExpression"
    // InternalSCEst.g:16093:1: entryRuleLogicalAndExpression returns [EObject current=null] : iv_ruleLogicalAndExpression= ruleLogicalAndExpression EOF ;
    public final EObject entryRuleLogicalAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLogicalAndExpression = null;


        try {
            // InternalSCEst.g:16093:61: (iv_ruleLogicalAndExpression= ruleLogicalAndExpression EOF )
            // InternalSCEst.g:16094:2: iv_ruleLogicalAndExpression= ruleLogicalAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLogicalAndExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLogicalAndExpression=ruleLogicalAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLogicalAndExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLogicalAndExpression"


    // $ANTLR start "ruleLogicalAndExpression"
    // InternalSCEst.g:16100:1: ruleLogicalAndExpression returns [EObject current=null] : (this_BitwiseOrExpression_0= ruleBitwiseOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )* )? ) ;
    public final EObject ruleLogicalAndExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_BitwiseOrExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:16106:2: ( (this_BitwiseOrExpression_0= ruleBitwiseOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )* )? ) )
            // InternalSCEst.g:16107:2: (this_BitwiseOrExpression_0= ruleBitwiseOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )* )? )
            {
            // InternalSCEst.g:16107:2: (this_BitwiseOrExpression_0= ruleBitwiseOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )* )? )
            // InternalSCEst.g:16108:3: this_BitwiseOrExpression_0= ruleBitwiseOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getLogicalAndExpressionAccess().getBitwiseOrExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_205);
            this_BitwiseOrExpression_0=ruleBitwiseOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_BitwiseOrExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCEst.g:16119:3: ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )* )?
            int alt397=2;
            int LA397_0 = input.LA(1);

            if ( (LA397_0==120) ) {
                alt397=1;
            }
            switch (alt397) {
                case 1 :
                    // InternalSCEst.g:16120:4: () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )*
                    {
                    // InternalSCEst.g:16120:4: ()
                    // InternalSCEst.g:16121:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getLogicalAndExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCEst.g:16130:4: ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) )
                    // InternalSCEst.g:16131:5: ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) )
                    {
                    // InternalSCEst.g:16131:5: ( (lv_operator_2_0= ruleLogicalAndOperator ) )
                    // InternalSCEst.g:16132:6: (lv_operator_2_0= ruleLogicalAndOperator )
                    {
                    // InternalSCEst.g:16132:6: (lv_operator_2_0= ruleLogicalAndOperator )
                    // InternalSCEst.g:16133:7: lv_operator_2_0= ruleLogicalAndOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAndExpressionAccess().getOperatorLogicalAndOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_16);
                    lv_operator_2_0=ruleLogicalAndOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAndExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.LogicalAndOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCEst.g:16150:5: ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) )
                    // InternalSCEst.g:16151:6: (lv_subExpressions_3_0= ruleBitwiseOrExpression )
                    {
                    // InternalSCEst.g:16151:6: (lv_subExpressions_3_0= ruleBitwiseOrExpression )
                    // InternalSCEst.g:16152:7: lv_subExpressions_3_0= ruleBitwiseOrExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAndExpressionAccess().getSubExpressionsBitwiseOrExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_205);
                    lv_subExpressions_3_0=ruleBitwiseOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAndExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseOrExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalSCEst.g:16170:4: (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )*
                    loop396:
                    do {
                        int alt396=2;
                        int LA396_0 = input.LA(1);

                        if ( (LA396_0==120) ) {
                            alt396=1;
                        }


                        switch (alt396) {
                    	case 1 :
                    	    // InternalSCEst.g:16171:5: otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,120,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getLogicalAndExpressionAccess().getAmpersandAmpersandKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalSCEst.g:16175:5: ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) )
                    	    // InternalSCEst.g:16176:6: (lv_subExpressions_5_0= ruleBitwiseOrExpression )
                    	    {
                    	    // InternalSCEst.g:16176:6: (lv_subExpressions_5_0= ruleBitwiseOrExpression )
                    	    // InternalSCEst.g:16177:7: lv_subExpressions_5_0= ruleBitwiseOrExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getLogicalAndExpressionAccess().getSubExpressionsBitwiseOrExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_205);
                    	    lv_subExpressions_5_0=ruleBitwiseOrExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getLogicalAndExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseOrExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop396;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalAndExpression"


    // $ANTLR start "entryRuleBitwiseOrExpression"
    // InternalSCEst.g:16200:1: entryRuleBitwiseOrExpression returns [EObject current=null] : iv_ruleBitwiseOrExpression= ruleBitwiseOrExpression EOF ;
    public final EObject entryRuleBitwiseOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBitwiseOrExpression = null;


        try {
            // InternalSCEst.g:16200:60: (iv_ruleBitwiseOrExpression= ruleBitwiseOrExpression EOF )
            // InternalSCEst.g:16201:2: iv_ruleBitwiseOrExpression= ruleBitwiseOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBitwiseOrExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBitwiseOrExpression=ruleBitwiseOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBitwiseOrExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBitwiseOrExpression"


    // $ANTLR start "ruleBitwiseOrExpression"
    // InternalSCEst.g:16207:1: ruleBitwiseOrExpression returns [EObject current=null] : (this_BitwiseXOrExpression_0= ruleBitwiseXOrExpression ( () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) ) )* )? ) ;
    public final EObject ruleBitwiseOrExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_BitwiseXOrExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:16213:2: ( (this_BitwiseXOrExpression_0= ruleBitwiseXOrExpression ( () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) ) )* )? ) )
            // InternalSCEst.g:16214:2: (this_BitwiseXOrExpression_0= ruleBitwiseXOrExpression ( () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) ) )* )? )
            {
            // InternalSCEst.g:16214:2: (this_BitwiseXOrExpression_0= ruleBitwiseXOrExpression ( () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) ) )* )? )
            // InternalSCEst.g:16215:3: this_BitwiseXOrExpression_0= ruleBitwiseXOrExpression ( () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getBitwiseOrExpressionAccess().getBitwiseXOrExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_206);
            this_BitwiseXOrExpression_0=ruleBitwiseXOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_BitwiseXOrExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCEst.g:16226:3: ( () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) ) )* )?
            int alt399=2;
            int LA399_0 = input.LA(1);

            if ( (LA399_0==121) ) {
                alt399=1;
            }
            switch (alt399) {
                case 1 :
                    // InternalSCEst.g:16227:4: () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) ) )*
                    {
                    // InternalSCEst.g:16227:4: ()
                    // InternalSCEst.g:16228:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getBitwiseOrExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCEst.g:16237:4: ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) ) )
                    // InternalSCEst.g:16238:5: ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) )
                    {
                    // InternalSCEst.g:16238:5: ( (lv_operator_2_0= ruleBitwiseOrOperator ) )
                    // InternalSCEst.g:16239:6: (lv_operator_2_0= ruleBitwiseOrOperator )
                    {
                    // InternalSCEst.g:16239:6: (lv_operator_2_0= ruleBitwiseOrOperator )
                    // InternalSCEst.g:16240:7: lv_operator_2_0= ruleBitwiseOrOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getBitwiseOrExpressionAccess().getOperatorBitwiseOrOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_16);
                    lv_operator_2_0=ruleBitwiseOrOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getBitwiseOrExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseOrOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCEst.g:16257:5: ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) )
                    // InternalSCEst.g:16258:6: (lv_subExpressions_3_0= ruleBitwiseXOrExpression )
                    {
                    // InternalSCEst.g:16258:6: (lv_subExpressions_3_0= ruleBitwiseXOrExpression )
                    // InternalSCEst.g:16259:7: lv_subExpressions_3_0= ruleBitwiseXOrExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getBitwiseOrExpressionAccess().getSubExpressionsBitwiseXOrExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_206);
                    lv_subExpressions_3_0=ruleBitwiseXOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getBitwiseOrExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseXOrExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalSCEst.g:16277:4: (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) ) )*
                    loop398:
                    do {
                        int alt398=2;
                        int LA398_0 = input.LA(1);

                        if ( (LA398_0==121) ) {
                            alt398=1;
                        }


                        switch (alt398) {
                    	case 1 :
                    	    // InternalSCEst.g:16278:5: otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,121,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getBitwiseOrExpressionAccess().getVerticalLineKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalSCEst.g:16282:5: ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) )
                    	    // InternalSCEst.g:16283:6: (lv_subExpressions_5_0= ruleBitwiseXOrExpression )
                    	    {
                    	    // InternalSCEst.g:16283:6: (lv_subExpressions_5_0= ruleBitwiseXOrExpression )
                    	    // InternalSCEst.g:16284:7: lv_subExpressions_5_0= ruleBitwiseXOrExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getBitwiseOrExpressionAccess().getSubExpressionsBitwiseXOrExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_206);
                    	    lv_subExpressions_5_0=ruleBitwiseXOrExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getBitwiseOrExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseXOrExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop398;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseOrExpression"


    // $ANTLR start "entryRuleBitwiseXOrExpression"
    // InternalSCEst.g:16307:1: entryRuleBitwiseXOrExpression returns [EObject current=null] : iv_ruleBitwiseXOrExpression= ruleBitwiseXOrExpression EOF ;
    public final EObject entryRuleBitwiseXOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBitwiseXOrExpression = null;


        try {
            // InternalSCEst.g:16307:61: (iv_ruleBitwiseXOrExpression= ruleBitwiseXOrExpression EOF )
            // InternalSCEst.g:16308:2: iv_ruleBitwiseXOrExpression= ruleBitwiseXOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBitwiseXOrExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBitwiseXOrExpression=ruleBitwiseXOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBitwiseXOrExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBitwiseXOrExpression"


    // $ANTLR start "ruleBitwiseXOrExpression"
    // InternalSCEst.g:16314:1: ruleBitwiseXOrExpression returns [EObject current=null] : (this_BitwiseAndExpression_0= ruleBitwiseAndExpression ( () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )? ) ;
    public final EObject ruleBitwiseXOrExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_BitwiseAndExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:16320:2: ( (this_BitwiseAndExpression_0= ruleBitwiseAndExpression ( () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )? ) )
            // InternalSCEst.g:16321:2: (this_BitwiseAndExpression_0= ruleBitwiseAndExpression ( () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )? )
            {
            // InternalSCEst.g:16321:2: (this_BitwiseAndExpression_0= ruleBitwiseAndExpression ( () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )? )
            // InternalSCEst.g:16322:3: this_BitwiseAndExpression_0= ruleBitwiseAndExpression ( () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getBitwiseXOrExpressionAccess().getBitwiseAndExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_207);
            this_BitwiseAndExpression_0=ruleBitwiseAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_BitwiseAndExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCEst.g:16333:3: ( () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )?
            int alt401=2;
            int LA401_0 = input.LA(1);

            if ( (LA401_0==122) ) {
                alt401=1;
            }
            switch (alt401) {
                case 1 :
                    // InternalSCEst.g:16334:4: () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )*
                    {
                    // InternalSCEst.g:16334:4: ()
                    // InternalSCEst.g:16335:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getBitwiseXOrExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCEst.g:16344:4: ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) )
                    // InternalSCEst.g:16345:5: ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) )
                    {
                    // InternalSCEst.g:16345:5: ( (lv_operator_2_0= ruleBitwiseXOrOperator ) )
                    // InternalSCEst.g:16346:6: (lv_operator_2_0= ruleBitwiseXOrOperator )
                    {
                    // InternalSCEst.g:16346:6: (lv_operator_2_0= ruleBitwiseXOrOperator )
                    // InternalSCEst.g:16347:7: lv_operator_2_0= ruleBitwiseXOrOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getBitwiseXOrExpressionAccess().getOperatorBitwiseXOrOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_16);
                    lv_operator_2_0=ruleBitwiseXOrOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getBitwiseXOrExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseXOrOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCEst.g:16364:5: ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) )
                    // InternalSCEst.g:16365:6: (lv_subExpressions_3_0= ruleBitwiseAndExpression )
                    {
                    // InternalSCEst.g:16365:6: (lv_subExpressions_3_0= ruleBitwiseAndExpression )
                    // InternalSCEst.g:16366:7: lv_subExpressions_3_0= ruleBitwiseAndExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getBitwiseXOrExpressionAccess().getSubExpressionsBitwiseAndExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_207);
                    lv_subExpressions_3_0=ruleBitwiseAndExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getBitwiseXOrExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseAndExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalSCEst.g:16384:4: (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )*
                    loop400:
                    do {
                        int alt400=2;
                        int LA400_0 = input.LA(1);

                        if ( (LA400_0==122) ) {
                            alt400=1;
                        }


                        switch (alt400) {
                    	case 1 :
                    	    // InternalSCEst.g:16385:5: otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,122,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getBitwiseXOrExpressionAccess().getCircumflexAccentKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalSCEst.g:16389:5: ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) )
                    	    // InternalSCEst.g:16390:6: (lv_subExpressions_5_0= ruleBitwiseAndExpression )
                    	    {
                    	    // InternalSCEst.g:16390:6: (lv_subExpressions_5_0= ruleBitwiseAndExpression )
                    	    // InternalSCEst.g:16391:7: lv_subExpressions_5_0= ruleBitwiseAndExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getBitwiseXOrExpressionAccess().getSubExpressionsBitwiseAndExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_207);
                    	    lv_subExpressions_5_0=ruleBitwiseAndExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getBitwiseXOrExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseAndExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop400;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseXOrExpression"


    // $ANTLR start "entryRuleBitwiseAndExpression"
    // InternalSCEst.g:16414:1: entryRuleBitwiseAndExpression returns [EObject current=null] : iv_ruleBitwiseAndExpression= ruleBitwiseAndExpression EOF ;
    public final EObject entryRuleBitwiseAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBitwiseAndExpression = null;


        try {
            // InternalSCEst.g:16414:61: (iv_ruleBitwiseAndExpression= ruleBitwiseAndExpression EOF )
            // InternalSCEst.g:16415:2: iv_ruleBitwiseAndExpression= ruleBitwiseAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBitwiseAndExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBitwiseAndExpression=ruleBitwiseAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBitwiseAndExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBitwiseAndExpression"


    // $ANTLR start "ruleBitwiseAndExpression"
    // InternalSCEst.g:16421:1: ruleBitwiseAndExpression returns [EObject current=null] : (this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )? ) ;
    public final EObject ruleBitwiseAndExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_CompareOperation_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:16427:2: ( (this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )? ) )
            // InternalSCEst.g:16428:2: (this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )? )
            {
            // InternalSCEst.g:16428:2: (this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )? )
            // InternalSCEst.g:16429:3: this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getBitwiseAndExpressionAccess().getCompareOperationParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_208);
            this_CompareOperation_0=ruleCompareOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_CompareOperation_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCEst.g:16440:3: ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )?
            int alt403=2;
            int LA403_0 = input.LA(1);

            if ( (LA403_0==108) ) {
                alt403=1;
            }
            switch (alt403) {
                case 1 :
                    // InternalSCEst.g:16441:4: () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )*
                    {
                    // InternalSCEst.g:16441:4: ()
                    // InternalSCEst.g:16442:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getBitwiseAndExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCEst.g:16451:4: ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) )
                    // InternalSCEst.g:16452:5: ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) )
                    {
                    // InternalSCEst.g:16452:5: ( (lv_operator_2_0= ruleBitwiseAndOperator ) )
                    // InternalSCEst.g:16453:6: (lv_operator_2_0= ruleBitwiseAndOperator )
                    {
                    // InternalSCEst.g:16453:6: (lv_operator_2_0= ruleBitwiseAndOperator )
                    // InternalSCEst.g:16454:7: lv_operator_2_0= ruleBitwiseAndOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getBitwiseAndExpressionAccess().getOperatorBitwiseAndOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_16);
                    lv_operator_2_0=ruleBitwiseAndOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getBitwiseAndExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseAndOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCEst.g:16471:5: ( (lv_subExpressions_3_0= ruleCompareOperation ) )
                    // InternalSCEst.g:16472:6: (lv_subExpressions_3_0= ruleCompareOperation )
                    {
                    // InternalSCEst.g:16472:6: (lv_subExpressions_3_0= ruleCompareOperation )
                    // InternalSCEst.g:16473:7: lv_subExpressions_3_0= ruleCompareOperation
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getBitwiseAndExpressionAccess().getSubExpressionsCompareOperationParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_208);
                    lv_subExpressions_3_0=ruleCompareOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getBitwiseAndExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.esterel.Esterel.CompareOperation");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalSCEst.g:16491:4: (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )*
                    loop402:
                    do {
                        int alt402=2;
                        int LA402_0 = input.LA(1);

                        if ( (LA402_0==108) ) {
                            alt402=1;
                        }


                        switch (alt402) {
                    	case 1 :
                    	    // InternalSCEst.g:16492:5: otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) )
                    	    {
                    	    otherlv_4=(Token)match(input,108,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getBitwiseAndExpressionAccess().getAmpersandKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalSCEst.g:16496:5: ( (lv_subExpressions_5_0= ruleCompareOperation ) )
                    	    // InternalSCEst.g:16497:6: (lv_subExpressions_5_0= ruleCompareOperation )
                    	    {
                    	    // InternalSCEst.g:16497:6: (lv_subExpressions_5_0= ruleCompareOperation )
                    	    // InternalSCEst.g:16498:7: lv_subExpressions_5_0= ruleCompareOperation
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getBitwiseAndExpressionAccess().getSubExpressionsCompareOperationParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_208);
                    	    lv_subExpressions_5_0=ruleCompareOperation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getBitwiseAndExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.esterel.Esterel.CompareOperation");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop402;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseAndExpression"


    // $ANTLR start "entryRuleBitwiseNotExpression"
    // InternalSCEst.g:16521:1: entryRuleBitwiseNotExpression returns [EObject current=null] : iv_ruleBitwiseNotExpression= ruleBitwiseNotExpression EOF ;
    public final EObject entryRuleBitwiseNotExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBitwiseNotExpression = null;


        try {
            // InternalSCEst.g:16521:61: (iv_ruleBitwiseNotExpression= ruleBitwiseNotExpression EOF )
            // InternalSCEst.g:16522:2: iv_ruleBitwiseNotExpression= ruleBitwiseNotExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBitwiseNotExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBitwiseNotExpression=ruleBitwiseNotExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBitwiseNotExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBitwiseNotExpression"


    // $ANTLR start "ruleBitwiseNotExpression"
    // InternalSCEst.g:16528:1: ruleBitwiseNotExpression returns [EObject current=null] : ( ( () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) ) ) | this_AtomicExpression_3= ruleAtomicExpression ) ;
    public final EObject ruleBitwiseNotExpression() throws RecognitionException {
        EObject current = null;

        Enumerator lv_operator_1_0 = null;

        EObject lv_subExpressions_2_0 = null;

        EObject this_AtomicExpression_3 = null;



        	enterRule();

        try {
            // InternalSCEst.g:16534:2: ( ( ( () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) ) ) | this_AtomicExpression_3= ruleAtomicExpression ) )
            // InternalSCEst.g:16535:2: ( ( () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) ) ) | this_AtomicExpression_3= ruleAtomicExpression )
            {
            // InternalSCEst.g:16535:2: ( ( () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) ) ) | this_AtomicExpression_3= ruleAtomicExpression )
            int alt404=2;
            int LA404_0 = input.LA(1);

            if ( (LA404_0==159) ) {
                alt404=1;
            }
            else if ( ((LA404_0>=RULE_ID && LA404_0<=RULE_COMMENT_ANNOTATION)||LA404_0==25||(LA404_0>=97 && LA404_0<=98)||LA404_0==117||(LA404_0>=128 && LA404_0<=130)) ) {
                alt404=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 404, 0, input);

                throw nvae;
            }
            switch (alt404) {
                case 1 :
                    // InternalSCEst.g:16536:3: ( () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) ) )
                    {
                    // InternalSCEst.g:16536:3: ( () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) ) )
                    // InternalSCEst.g:16537:4: () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) )
                    {
                    // InternalSCEst.g:16537:4: ()
                    // InternalSCEst.g:16538:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getBitwiseNotExpressionAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCEst.g:16547:4: ( (lv_operator_1_0= ruleBitwiseNotOperator ) )
                    // InternalSCEst.g:16548:5: (lv_operator_1_0= ruleBitwiseNotOperator )
                    {
                    // InternalSCEst.g:16548:5: (lv_operator_1_0= ruleBitwiseNotOperator )
                    // InternalSCEst.g:16549:6: lv_operator_1_0= ruleBitwiseNotOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getBitwiseNotExpressionAccess().getOperatorBitwiseNotOperatorEnumRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_209);
                    lv_operator_1_0=ruleBitwiseNotOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getBitwiseNotExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_1_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseNotOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCEst.g:16566:4: ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) )
                    // InternalSCEst.g:16567:5: (lv_subExpressions_2_0= ruleBitwiseNotExpression )
                    {
                    // InternalSCEst.g:16567:5: (lv_subExpressions_2_0= ruleBitwiseNotExpression )
                    // InternalSCEst.g:16568:6: lv_subExpressions_2_0= ruleBitwiseNotExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getBitwiseNotExpressionAccess().getSubExpressionsBitwiseNotExpressionParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_2_0=ruleBitwiseNotExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getBitwiseNotExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_2_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseNotExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCEst.g:16587:3: this_AtomicExpression_3= ruleAtomicExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBitwiseNotExpressionAccess().getAtomicExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AtomicExpression_3=ruleAtomicExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AtomicExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseNotExpression"


    // $ANTLR start "entryRuleShiftRightExpression"
    // InternalSCEst.g:16602:1: entryRuleShiftRightExpression returns [EObject current=null] : iv_ruleShiftRightExpression= ruleShiftRightExpression EOF ;
    public final EObject entryRuleShiftRightExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleShiftRightExpression = null;


        try {
            // InternalSCEst.g:16602:61: (iv_ruleShiftRightExpression= ruleShiftRightExpression EOF )
            // InternalSCEst.g:16603:2: iv_ruleShiftRightExpression= ruleShiftRightExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getShiftRightExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleShiftRightExpression=ruleShiftRightExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleShiftRightExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleShiftRightExpression"


    // $ANTLR start "ruleShiftRightExpression"
    // InternalSCEst.g:16609:1: ruleShiftRightExpression returns [EObject current=null] : (this_ShiftRightUnsignedExpression_0= ruleShiftRightUnsignedExpression ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )* )? ) ;
    public final EObject ruleShiftRightExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_ShiftRightUnsignedExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:16615:2: ( (this_ShiftRightUnsignedExpression_0= ruleShiftRightUnsignedExpression ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )* )? ) )
            // InternalSCEst.g:16616:2: (this_ShiftRightUnsignedExpression_0= ruleShiftRightUnsignedExpression ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )* )? )
            {
            // InternalSCEst.g:16616:2: (this_ShiftRightUnsignedExpression_0= ruleShiftRightUnsignedExpression ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )* )? )
            // InternalSCEst.g:16617:3: this_ShiftRightUnsignedExpression_0= ruleShiftRightUnsignedExpression ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getShiftRightExpressionAccess().getShiftRightUnsignedExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_210);
            this_ShiftRightUnsignedExpression_0=ruleShiftRightUnsignedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ShiftRightUnsignedExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCEst.g:16628:3: ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )* )?
            int alt406=2;
            int LA406_0 = input.LA(1);

            if ( (LA406_0==123) ) {
                alt406=1;
            }
            switch (alt406) {
                case 1 :
                    // InternalSCEst.g:16629:4: () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )*
                    {
                    // InternalSCEst.g:16629:4: ()
                    // InternalSCEst.g:16630:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getShiftRightExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCEst.g:16639:4: ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) )
                    // InternalSCEst.g:16640:5: ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) )
                    {
                    // InternalSCEst.g:16640:5: ( (lv_operator_2_0= ruleShiftRightOperator ) )
                    // InternalSCEst.g:16641:6: (lv_operator_2_0= ruleShiftRightOperator )
                    {
                    // InternalSCEst.g:16641:6: (lv_operator_2_0= ruleShiftRightOperator )
                    // InternalSCEst.g:16642:7: lv_operator_2_0= ruleShiftRightOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getShiftRightExpressionAccess().getOperatorShiftRightOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_21);
                    lv_operator_2_0=ruleShiftRightOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getShiftRightExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ShiftRightOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCEst.g:16659:5: ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) )
                    // InternalSCEst.g:16660:6: (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression )
                    {
                    // InternalSCEst.g:16660:6: (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression )
                    // InternalSCEst.g:16661:7: lv_subExpressions_3_0= ruleShiftRightUnsignedExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getShiftRightExpressionAccess().getSubExpressionsShiftRightUnsignedExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_210);
                    lv_subExpressions_3_0=ruleShiftRightUnsignedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getShiftRightExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ShiftRightUnsignedExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalSCEst.g:16679:4: (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )*
                    loop405:
                    do {
                        int alt405=2;
                        int LA405_0 = input.LA(1);

                        if ( (LA405_0==123) ) {
                            alt405=1;
                        }


                        switch (alt405) {
                    	case 1 :
                    	    // InternalSCEst.g:16680:5: otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,123,FollowSets000.FOLLOW_21); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getShiftRightExpressionAccess().getGreaterThanSignGreaterThanSignKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalSCEst.g:16684:5: ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) )
                    	    // InternalSCEst.g:16685:6: (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression )
                    	    {
                    	    // InternalSCEst.g:16685:6: (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression )
                    	    // InternalSCEst.g:16686:7: lv_subExpressions_5_0= ruleShiftRightUnsignedExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getShiftRightExpressionAccess().getSubExpressionsShiftRightUnsignedExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_210);
                    	    lv_subExpressions_5_0=ruleShiftRightUnsignedExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getShiftRightExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.ShiftRightUnsignedExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop405;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShiftRightExpression"


    // $ANTLR start "entryRuleShiftRightUnsignedExpression"
    // InternalSCEst.g:16709:1: entryRuleShiftRightUnsignedExpression returns [EObject current=null] : iv_ruleShiftRightUnsignedExpression= ruleShiftRightUnsignedExpression EOF ;
    public final EObject entryRuleShiftRightUnsignedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleShiftRightUnsignedExpression = null;


        try {
            // InternalSCEst.g:16709:69: (iv_ruleShiftRightUnsignedExpression= ruleShiftRightUnsignedExpression EOF )
            // InternalSCEst.g:16710:2: iv_ruleShiftRightUnsignedExpression= ruleShiftRightUnsignedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getShiftRightUnsignedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleShiftRightUnsignedExpression=ruleShiftRightUnsignedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleShiftRightUnsignedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleShiftRightUnsignedExpression"


    // $ANTLR start "ruleShiftRightUnsignedExpression"
    // InternalSCEst.g:16716:1: ruleShiftRightUnsignedExpression returns [EObject current=null] : (this_AddExpression_0= ruleAddExpression ( () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleAddExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleAddExpression ) ) )* )? ) ;
    public final EObject ruleShiftRightUnsignedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_AddExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:16722:2: ( (this_AddExpression_0= ruleAddExpression ( () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleAddExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleAddExpression ) ) )* )? ) )
            // InternalSCEst.g:16723:2: (this_AddExpression_0= ruleAddExpression ( () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleAddExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleAddExpression ) ) )* )? )
            {
            // InternalSCEst.g:16723:2: (this_AddExpression_0= ruleAddExpression ( () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleAddExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleAddExpression ) ) )* )? )
            // InternalSCEst.g:16724:3: this_AddExpression_0= ruleAddExpression ( () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleAddExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleAddExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getShiftRightUnsignedExpressionAccess().getAddExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_211);
            this_AddExpression_0=ruleAddExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AddExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCEst.g:16735:3: ( () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleAddExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleAddExpression ) ) )* )?
            int alt408=2;
            int LA408_0 = input.LA(1);

            if ( (LA408_0==124) ) {
                alt408=1;
            }
            switch (alt408) {
                case 1 :
                    // InternalSCEst.g:16736:4: () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleAddExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleAddExpression ) ) )*
                    {
                    // InternalSCEst.g:16736:4: ()
                    // InternalSCEst.g:16737:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getShiftRightUnsignedExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCEst.g:16746:4: ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleAddExpression ) ) )
                    // InternalSCEst.g:16747:5: ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleAddExpression ) )
                    {
                    // InternalSCEst.g:16747:5: ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) )
                    // InternalSCEst.g:16748:6: (lv_operator_2_0= ruleShiftRightUnsignedOperator )
                    {
                    // InternalSCEst.g:16748:6: (lv_operator_2_0= ruleShiftRightUnsignedOperator )
                    // InternalSCEst.g:16749:7: lv_operator_2_0= ruleShiftRightUnsignedOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getShiftRightUnsignedExpressionAccess().getOperatorShiftRightUnsignedOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_21);
                    lv_operator_2_0=ruleShiftRightUnsignedOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getShiftRightUnsignedExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ShiftRightUnsignedOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCEst.g:16766:5: ( (lv_subExpressions_3_0= ruleAddExpression ) )
                    // InternalSCEst.g:16767:6: (lv_subExpressions_3_0= ruleAddExpression )
                    {
                    // InternalSCEst.g:16767:6: (lv_subExpressions_3_0= ruleAddExpression )
                    // InternalSCEst.g:16768:7: lv_subExpressions_3_0= ruleAddExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getShiftRightUnsignedExpressionAccess().getSubExpressionsAddExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_211);
                    lv_subExpressions_3_0=ruleAddExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getShiftRightUnsignedExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.esterel.Esterel.AddExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalSCEst.g:16786:4: (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleAddExpression ) ) )*
                    loop407:
                    do {
                        int alt407=2;
                        int LA407_0 = input.LA(1);

                        if ( (LA407_0==124) ) {
                            alt407=1;
                        }


                        switch (alt407) {
                    	case 1 :
                    	    // InternalSCEst.g:16787:5: otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleAddExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,124,FollowSets000.FOLLOW_21); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getShiftRightUnsignedExpressionAccess().getGreaterThanSignGreaterThanSignGreaterThanSignKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalSCEst.g:16791:5: ( (lv_subExpressions_5_0= ruleAddExpression ) )
                    	    // InternalSCEst.g:16792:6: (lv_subExpressions_5_0= ruleAddExpression )
                    	    {
                    	    // InternalSCEst.g:16792:6: (lv_subExpressions_5_0= ruleAddExpression )
                    	    // InternalSCEst.g:16793:7: lv_subExpressions_5_0= ruleAddExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getShiftRightUnsignedExpressionAccess().getSubExpressionsAddExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_211);
                    	    lv_subExpressions_5_0=ruleAddExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getShiftRightUnsignedExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.esterel.Esterel.AddExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop407;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShiftRightUnsignedExpression"


    // $ANTLR start "entryRuleFBYExpression"
    // InternalSCEst.g:16816:1: entryRuleFBYExpression returns [EObject current=null] : iv_ruleFBYExpression= ruleFBYExpression EOF ;
    public final EObject entryRuleFBYExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFBYExpression = null;


        try {
            // InternalSCEst.g:16816:54: (iv_ruleFBYExpression= ruleFBYExpression EOF )
            // InternalSCEst.g:16817:2: iv_ruleFBYExpression= ruleFBYExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFBYExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFBYExpression=ruleFBYExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFBYExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFBYExpression"


    // $ANTLR start "ruleFBYExpression"
    // InternalSCEst.g:16823:1: ruleFBYExpression returns [EObject current=null] : ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleFBYOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) | this_AtomicValuedExpression_4= ruleAtomicValuedExpression ) ;
    public final EObject ruleFBYExpression() throws RecognitionException {
        EObject current = null;

        EObject lv_subExpressions_1_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject this_AtomicValuedExpression_4 = null;



        	enterRule();

        try {
            // InternalSCEst.g:16829:2: ( ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleFBYOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) | this_AtomicValuedExpression_4= ruleAtomicValuedExpression ) )
            // InternalSCEst.g:16830:2: ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleFBYOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) | this_AtomicValuedExpression_4= ruleAtomicValuedExpression )
            {
            // InternalSCEst.g:16830:2: ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleFBYOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) | this_AtomicValuedExpression_4= ruleAtomicValuedExpression )
            int alt409=2;
            alt409 = dfa409.predict(input);
            switch (alt409) {
                case 1 :
                    // InternalSCEst.g:16831:3: ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleFBYOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) )
                    {
                    // InternalSCEst.g:16831:3: ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleFBYOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) )
                    // InternalSCEst.g:16832:4: () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleFBYOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) )
                    {
                    // InternalSCEst.g:16832:4: ()
                    // InternalSCEst.g:16833:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getFBYExpressionAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCEst.g:16842:4: ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) )
                    // InternalSCEst.g:16843:5: (lv_subExpressions_1_0= ruleAtomicValuedExpression )
                    {
                    // InternalSCEst.g:16843:5: (lv_subExpressions_1_0= ruleAtomicValuedExpression )
                    // InternalSCEst.g:16844:6: lv_subExpressions_1_0= ruleAtomicValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFBYExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_212);
                    lv_subExpressions_1_0=ruleAtomicValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFBYExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_1_0,
                      							"de.cau.cs.kieler.esterel.scest.SCEst.AtomicValuedExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCEst.g:16861:4: ( (lv_operator_2_0= ruleFBYOperator ) )
                    // InternalSCEst.g:16862:5: (lv_operator_2_0= ruleFBYOperator )
                    {
                    // InternalSCEst.g:16862:5: (lv_operator_2_0= ruleFBYOperator )
                    // InternalSCEst.g:16863:6: lv_operator_2_0= ruleFBYOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFBYExpressionAccess().getOperatorFBYOperatorEnumRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_21);
                    lv_operator_2_0=ruleFBYOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFBYExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_2_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.FBYOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCEst.g:16880:4: ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) )
                    // InternalSCEst.g:16881:5: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
                    {
                    // InternalSCEst.g:16881:5: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
                    // InternalSCEst.g:16882:6: lv_subExpressions_3_0= ruleAtomicValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFBYExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_3_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_3_0=ruleAtomicValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFBYExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_3_0,
                      							"de.cau.cs.kieler.esterel.scest.SCEst.AtomicValuedExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCEst.g:16901:3: this_AtomicValuedExpression_4= ruleAtomicValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFBYExpressionAccess().getAtomicValuedExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AtomicValuedExpression_4=ruleAtomicValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AtomicValuedExpression_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFBYExpression"


    // $ANTLR start "entryRuleValuedObjectTestExpression"
    // InternalSCEst.g:16916:1: entryRuleValuedObjectTestExpression returns [EObject current=null] : iv_ruleValuedObjectTestExpression= ruleValuedObjectTestExpression EOF ;
    public final EObject entryRuleValuedObjectTestExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValuedObjectTestExpression = null;


        try {
            // InternalSCEst.g:16916:67: (iv_ruleValuedObjectTestExpression= ruleValuedObjectTestExpression EOF )
            // InternalSCEst.g:16917:2: iv_ruleValuedObjectTestExpression= ruleValuedObjectTestExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValuedObjectTestExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleValuedObjectTestExpression=ruleValuedObjectTestExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValuedObjectTestExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValuedObjectTestExpression"


    // $ANTLR start "ruleValuedObjectTestExpression"
    // InternalSCEst.g:16923:1: ruleValuedObjectTestExpression returns [EObject current=null] : ( ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) otherlv_4= ')' ) | this_ValuedObjectReference_5= ruleValuedObjectReference ) ;
    public final EObject ruleValuedObjectTestExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Enumerator lv_operator_1_1 = null;

        Enumerator lv_operator_1_2 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject this_ValuedObjectReference_5 = null;



        	enterRule();

        try {
            // InternalSCEst.g:16929:2: ( ( ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) otherlv_4= ')' ) | this_ValuedObjectReference_5= ruleValuedObjectReference ) )
            // InternalSCEst.g:16930:2: ( ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) otherlv_4= ')' ) | this_ValuedObjectReference_5= ruleValuedObjectReference )
            {
            // InternalSCEst.g:16930:2: ( ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) otherlv_4= ')' ) | this_ValuedObjectReference_5= ruleValuedObjectReference )
            int alt411=2;
            int LA411_0 = input.LA(1);

            if ( (LA411_0==129||LA411_0==160) ) {
                alt411=1;
            }
            else if ( (LA411_0==RULE_ID) ) {
                alt411=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 411, 0, input);

                throw nvae;
            }
            switch (alt411) {
                case 1 :
                    // InternalSCEst.g:16931:3: ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) otherlv_4= ')' )
                    {
                    // InternalSCEst.g:16931:3: ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) otherlv_4= ')' )
                    // InternalSCEst.g:16932:4: () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) otherlv_4= ')'
                    {
                    // InternalSCEst.g:16932:4: ()
                    // InternalSCEst.g:16933:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getValuedObjectTestExpressionAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCEst.g:16942:4: ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) )
                    // InternalSCEst.g:16943:5: ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) )
                    {
                    // InternalSCEst.g:16943:5: ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) )
                    // InternalSCEst.g:16944:6: (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator )
                    {
                    // InternalSCEst.g:16944:6: (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator )
                    int alt410=2;
                    int LA410_0 = input.LA(1);

                    if ( (LA410_0==129) ) {
                        alt410=1;
                    }
                    else if ( (LA410_0==160) ) {
                        alt410=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 410, 0, input);

                        throw nvae;
                    }
                    switch (alt410) {
                        case 1 :
                            // InternalSCEst.g:16945:7: lv_operator_1_1= rulePreOperator
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorPreOperatorEnumRuleCall_0_1_0_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_19);
                            lv_operator_1_1=rulePreOperator();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getValuedObjectTestExpressionRule());
                              							}
                              							set(
                              								current,
                              								"operator",
                              								lv_operator_1_1,
                              								"de.cau.cs.kieler.kexpressions.KExpressions.PreOperator");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalSCEst.g:16961:7: lv_operator_1_2= ruleValOperator
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorValOperatorEnumRuleCall_0_1_0_1());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_19);
                            lv_operator_1_2=ruleValOperator();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getValuedObjectTestExpressionRule());
                              							}
                              							set(
                              								current,
                              								"operator",
                              								lv_operator_1_2,
                              								"de.cau.cs.kieler.kexpressions.KExpressions.ValOperator");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;

                    }


                    }


                    }

                    otherlv_2=(Token)match(input,25,FollowSets000.FOLLOW_213); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getValuedObjectTestExpressionAccess().getLeftParenthesisKeyword_0_2());
                      			
                    }
                    // InternalSCEst.g:16983:4: ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) )
                    // InternalSCEst.g:16984:5: (lv_subExpressions_3_0= ruleValuedObjectTestExpression )
                    {
                    // InternalSCEst.g:16984:5: (lv_subExpressions_3_0= ruleValuedObjectTestExpression )
                    // InternalSCEst.g:16985:6: lv_subExpressions_3_0= ruleValuedObjectTestExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsValuedObjectTestExpressionParserRuleCall_0_3_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_20);
                    lv_subExpressions_3_0=ruleValuedObjectTestExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getValuedObjectTestExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_3_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectTestExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,26,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getValuedObjectTestExpressionAccess().getRightParenthesisKeyword_0_4());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCEst.g:17008:3: this_ValuedObjectReference_5= ruleValuedObjectReference
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getValuedObjectTestExpressionAccess().getValuedObjectReferenceParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedObjectReference_5=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ValuedObjectReference_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValuedObjectTestExpression"


    // $ANTLR start "entryRulePrimeID"
    // InternalSCEst.g:17023:1: entryRulePrimeID returns [String current=null] : iv_rulePrimeID= rulePrimeID EOF ;
    public final String entryRulePrimeID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePrimeID = null;


        try {
            // InternalSCEst.g:17023:47: (iv_rulePrimeID= rulePrimeID EOF )
            // InternalSCEst.g:17024:2: iv_rulePrimeID= rulePrimeID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimeIDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePrimeID=rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimeID.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrimeID"


    // $ANTLR start "rulePrimeID"
    // InternalSCEst.g:17030:1: rulePrimeID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ID_0= RULE_ID (kw= '\\'' )* ) ;
    public final AntlrDatatypeRuleToken rulePrimeID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;
        Token kw=null;


        	enterRule();

        try {
            // InternalSCEst.g:17036:2: ( (this_ID_0= RULE_ID (kw= '\\'' )* ) )
            // InternalSCEst.g:17037:2: (this_ID_0= RULE_ID (kw= '\\'' )* )
            {
            // InternalSCEst.g:17037:2: (this_ID_0= RULE_ID (kw= '\\'' )* )
            // InternalSCEst.g:17038:3: this_ID_0= RULE_ID (kw= '\\'' )*
            {
            this_ID_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_214); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_ID_0);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_ID_0, grammarAccess.getPrimeIDAccess().getIDTerminalRuleCall_0());
              		
            }
            // InternalSCEst.g:17045:3: (kw= '\\'' )*
            loop412:
            do {
                int alt412=2;
                int LA412_0 = input.LA(1);

                if ( (LA412_0==125) ) {
                    alt412=1;
                }


                switch (alt412) {
            	case 1 :
            	    // InternalSCEst.g:17046:4: kw= '\\''
            	    {
            	    kw=(Token)match(input,125,FollowSets000.FOLLOW_214); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(kw);
            	      				newLeafNode(kw, grammarAccess.getPrimeIDAccess().getApostropheKeyword_1());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop412;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrimeID"


    // $ANTLR start "entryRuleValuedObjectReference"
    // InternalSCEst.g:17056:1: entryRuleValuedObjectReference returns [EObject current=null] : iv_ruleValuedObjectReference= ruleValuedObjectReference EOF ;
    public final EObject entryRuleValuedObjectReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValuedObjectReference = null;


        try {
            // InternalSCEst.g:17056:62: (iv_ruleValuedObjectReference= ruleValuedObjectReference EOF )
            // InternalSCEst.g:17057:2: iv_ruleValuedObjectReference= ruleValuedObjectReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValuedObjectReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleValuedObjectReference=ruleValuedObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValuedObjectReference; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValuedObjectReference"


    // $ANTLR start "ruleValuedObjectReference"
    // InternalSCEst.g:17063:1: ruleValuedObjectReference returns [EObject current=null] : ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? ) ;
    public final EObject ruleValuedObjectReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_indices_2_0 = null;

        EObject lv_subReference_5_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:17069:2: ( ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? ) )
            // InternalSCEst.g:17070:2: ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? )
            {
            // InternalSCEst.g:17070:2: ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? )
            // InternalSCEst.g:17071:3: ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )?
            {
            // InternalSCEst.g:17071:3: ( ( rulePrimeID ) )
            // InternalSCEst.g:17072:4: ( rulePrimeID )
            {
            // InternalSCEst.g:17072:4: ( rulePrimeID )
            // InternalSCEst.g:17073:5: rulePrimeID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getValuedObjectReferenceRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getValuedObjectReferenceAccess().getValuedObjectValuedObjectCrossReference_0_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_215);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCEst.g:17090:3: (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )*
            loop413:
            do {
                int alt413=2;
                alt413 = dfa413.predict(input);
                switch (alt413) {
            	case 1 :
            	    // InternalSCEst.g:17091:4: otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']'
            	    {
            	    otherlv_1=(Token)match(input,49,FollowSets000.FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getValuedObjectReferenceAccess().getLeftSquareBracketKeyword_1_0());
            	      			
            	    }
            	    // InternalSCEst.g:17095:4: ( (lv_indices_2_0= ruleExpression ) )
            	    // InternalSCEst.g:17096:5: (lv_indices_2_0= ruleExpression )
            	    {
            	    // InternalSCEst.g:17096:5: (lv_indices_2_0= ruleExpression )
            	    // InternalSCEst.g:17097:6: lv_indices_2_0= ruleExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getValuedObjectReferenceAccess().getIndicesExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_54);
            	    lv_indices_2_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getValuedObjectReferenceRule());
            	      						}
            	      						add(
            	      							current,
            	      							"indices",
            	      							lv_indices_2_0,
            	      							"de.cau.cs.kieler.esterel.Esterel.Expression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_3=(Token)match(input,50,FollowSets000.FOLLOW_215); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getValuedObjectReferenceAccess().getRightSquareBracketKeyword_1_2());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop413;
                }
            } while (true);

            // InternalSCEst.g:17119:3: (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )?
            int alt414=2;
            int LA414_0 = input.LA(1);

            if ( (LA414_0==20) ) {
                int LA414_1 = input.LA(2);

                if ( (LA414_1==RULE_ID) ) {
                    alt414=1;
                }
            }
            switch (alt414) {
                case 1 :
                    // InternalSCEst.g:17120:4: otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) )
                    {
                    otherlv_4=(Token)match(input,20,FollowSets000.FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getValuedObjectReferenceAccess().getFullStopKeyword_2_0());
                      			
                    }
                    // InternalSCEst.g:17124:4: ( (lv_subReference_5_0= ruleValuedObjectReference ) )
                    // InternalSCEst.g:17125:5: (lv_subReference_5_0= ruleValuedObjectReference )
                    {
                    // InternalSCEst.g:17125:5: (lv_subReference_5_0= ruleValuedObjectReference )
                    // InternalSCEst.g:17126:6: lv_subReference_5_0= ruleValuedObjectReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getValuedObjectReferenceAccess().getSubReferenceValuedObjectReferenceParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subReference_5_0=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getValuedObjectReferenceRule());
                      						}
                      						set(
                      							current,
                      							"subReference",
                      							lv_subReference_5_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValuedObjectReference"


    // $ANTLR start "entryRuleScheduleObjectReference"
    // InternalSCEst.g:17148:1: entryRuleScheduleObjectReference returns [EObject current=null] : iv_ruleScheduleObjectReference= ruleScheduleObjectReference EOF ;
    public final EObject entryRuleScheduleObjectReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScheduleObjectReference = null;


        try {
            // InternalSCEst.g:17148:64: (iv_ruleScheduleObjectReference= ruleScheduleObjectReference EOF )
            // InternalSCEst.g:17149:2: iv_ruleScheduleObjectReference= ruleScheduleObjectReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScheduleObjectReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScheduleObjectReference=ruleScheduleObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScheduleObjectReference; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScheduleObjectReference"


    // $ANTLR start "ruleScheduleObjectReference"
    // InternalSCEst.g:17155:1: ruleScheduleObjectReference returns [EObject current=null] : ( ( ( rulePrimeID ) ) ( (lv_priority_1_0= RULE_INT ) ) ) ;
    public final EObject ruleScheduleObjectReference() throws RecognitionException {
        EObject current = null;

        Token lv_priority_1_0=null;


        	enterRule();

        try {
            // InternalSCEst.g:17161:2: ( ( ( ( rulePrimeID ) ) ( (lv_priority_1_0= RULE_INT ) ) ) )
            // InternalSCEst.g:17162:2: ( ( ( rulePrimeID ) ) ( (lv_priority_1_0= RULE_INT ) ) )
            {
            // InternalSCEst.g:17162:2: ( ( ( rulePrimeID ) ) ( (lv_priority_1_0= RULE_INT ) ) )
            // InternalSCEst.g:17163:3: ( ( rulePrimeID ) ) ( (lv_priority_1_0= RULE_INT ) )
            {
            // InternalSCEst.g:17163:3: ( ( rulePrimeID ) )
            // InternalSCEst.g:17164:4: ( rulePrimeID )
            {
            // InternalSCEst.g:17164:4: ( rulePrimeID )
            // InternalSCEst.g:17165:5: rulePrimeID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getScheduleObjectReferenceRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getScheduleObjectReferenceAccess().getValuedObjectValuedObjectCrossReference_0_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_216);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCEst.g:17182:3: ( (lv_priority_1_0= RULE_INT ) )
            // InternalSCEst.g:17183:4: (lv_priority_1_0= RULE_INT )
            {
            // InternalSCEst.g:17183:4: (lv_priority_1_0= RULE_INT )
            // InternalSCEst.g:17184:5: lv_priority_1_0= RULE_INT
            {
            lv_priority_1_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_priority_1_0, grammarAccess.getScheduleObjectReferenceAccess().getPriorityINTTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getScheduleObjectReferenceRule());
              					}
              					setWithLastConsumed(
              						current,
              						"priority",
              						lv_priority_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.INT");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScheduleObjectReference"


    // $ANTLR start "entryRuleFunctionCall"
    // InternalSCEst.g:17204:1: entryRuleFunctionCall returns [EObject current=null] : iv_ruleFunctionCall= ruleFunctionCall EOF ;
    public final EObject entryRuleFunctionCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionCall = null;


        try {
            // InternalSCEst.g:17204:53: (iv_ruleFunctionCall= ruleFunctionCall EOF )
            // InternalSCEst.g:17205:2: iv_ruleFunctionCall= ruleFunctionCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionCallRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFunctionCall=ruleFunctionCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionCall; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionCall"


    // $ANTLR start "ruleFunctionCall"
    // InternalSCEst.g:17211:1: ruleFunctionCall returns [EObject current=null] : (otherlv_0= 'extern' ( (lv_functionName_1_0= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) ) ;
    public final EObject ruleFunctionCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_functionName_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        EObject lv_parameters_3_0 = null;

        EObject lv_parameters_5_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:17217:2: ( (otherlv_0= 'extern' ( (lv_functionName_1_0= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) ) )
            // InternalSCEst.g:17218:2: (otherlv_0= 'extern' ( (lv_functionName_1_0= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) )
            {
            // InternalSCEst.g:17218:2: (otherlv_0= 'extern' ( (lv_functionName_1_0= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) )
            // InternalSCEst.g:17219:3: otherlv_0= 'extern' ( (lv_functionName_1_0= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' )
            {
            otherlv_0=(Token)match(input,117,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getFunctionCallAccess().getExternKeyword_0());
              		
            }
            // InternalSCEst.g:17223:3: ( (lv_functionName_1_0= RULE_ID ) )
            // InternalSCEst.g:17224:4: (lv_functionName_1_0= RULE_ID )
            {
            // InternalSCEst.g:17224:4: (lv_functionName_1_0= RULE_ID )
            // InternalSCEst.g:17225:5: lv_functionName_1_0= RULE_ID
            {
            lv_functionName_1_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_functionName_1_0, grammarAccess.getFunctionCallAccess().getFunctionNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getFunctionCallRule());
              					}
              					setWithLastConsumed(
              						current,
              						"functionName",
              						lv_functionName_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ID");
              				
            }

            }


            }

            // InternalSCEst.g:17241:3: ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' )
            int alt416=2;
            int LA416_0 = input.LA(1);

            if ( (LA416_0==25) ) {
                alt416=1;
            }
            else if ( (LA416_0==34) ) {
                alt416=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 416, 0, input);

                throw nvae;
            }
            switch (alt416) {
                case 1 :
                    // InternalSCEst.g:17242:4: (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' )
                    {
                    // InternalSCEst.g:17242:4: (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' )
                    // InternalSCEst.g:17243:5: otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')'
                    {
                    otherlv_2=(Token)match(input,25,FollowSets000.FOLLOW_162); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_2_0_0());
                      				
                    }
                    // InternalSCEst.g:17247:5: ( (lv_parameters_3_0= ruleParameter ) )
                    // InternalSCEst.g:17248:6: (lv_parameters_3_0= ruleParameter )
                    {
                    // InternalSCEst.g:17248:6: (lv_parameters_3_0= ruleParameter )
                    // InternalSCEst.g:17249:7: lv_parameters_3_0= ruleParameter
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getFunctionCallAccess().getParametersParameterParserRuleCall_2_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_33);
                    lv_parameters_3_0=ruleParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getFunctionCallRule());
                      							}
                      							add(
                      								current,
                      								"parameters",
                      								lv_parameters_3_0,
                      								"de.cau.cs.kieler.scl.SCL.Parameter");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCEst.g:17266:5: (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )*
                    loop415:
                    do {
                        int alt415=2;
                        int LA415_0 = input.LA(1);

                        if ( (LA415_0==30) ) {
                            alt415=1;
                        }


                        switch (alt415) {
                    	case 1 :
                    	    // InternalSCEst.g:17267:6: otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) )
                    	    {
                    	    otherlv_4=(Token)match(input,30,FollowSets000.FOLLOW_162); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_4, grammarAccess.getFunctionCallAccess().getCommaKeyword_2_0_2_0());
                    	      					
                    	    }
                    	    // InternalSCEst.g:17271:6: ( (lv_parameters_5_0= ruleParameter ) )
                    	    // InternalSCEst.g:17272:7: (lv_parameters_5_0= ruleParameter )
                    	    {
                    	    // InternalSCEst.g:17272:7: (lv_parameters_5_0= ruleParameter )
                    	    // InternalSCEst.g:17273:8: lv_parameters_5_0= ruleParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getFunctionCallAccess().getParametersParameterParserRuleCall_2_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_33);
                    	    lv_parameters_5_0=ruleParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getFunctionCallRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"parameters",
                    	      									lv_parameters_5_0,
                    	      									"de.cau.cs.kieler.scl.SCL.Parameter");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop415;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,26,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_2_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCEst.g:17297:4: otherlv_7= '()'
                    {
                    otherlv_7=(Token)match(input,34,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getFunctionCallAccess().getLeftParenthesisRightParenthesisKeyword_2_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionCall"


    // $ANTLR start "entryRuleTextExpression"
    // InternalSCEst.g:17306:1: entryRuleTextExpression returns [EObject current=null] : iv_ruleTextExpression= ruleTextExpression EOF ;
    public final EObject entryRuleTextExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTextExpression = null;


        try {
            // InternalSCEst.g:17306:55: (iv_ruleTextExpression= ruleTextExpression EOF )
            // InternalSCEst.g:17307:2: iv_ruleTextExpression= ruleTextExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTextExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTextExpression=ruleTextExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTextExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTextExpression"


    // $ANTLR start "ruleTextExpression"
    // InternalSCEst.g:17313:1: ruleTextExpression returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) ) ;
    public final EObject ruleTextExpression() throws RecognitionException {
        EObject current = null;

        Token lv_text_1_0=null;
        EObject lv_annotations_0_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:17319:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) ) )
            // InternalSCEst.g:17320:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) )
            {
            // InternalSCEst.g:17320:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) )
            // InternalSCEst.g:17321:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) )
            {
            // InternalSCEst.g:17321:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop417:
            do {
                int alt417=2;
                int LA417_0 = input.LA(1);

                if ( (LA417_0==RULE_COMMENT_ANNOTATION||LA417_0==128) ) {
                    alt417=1;
                }


                switch (alt417) {
            	case 1 :
            	    // InternalSCEst.g:17322:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCEst.g:17322:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCEst.g:17323:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getTextExpressionAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_201);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getTextExpressionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop417;
                }
            } while (true);

            // InternalSCEst.g:17340:3: ( (lv_text_1_0= RULE_HOSTCODE ) )
            // InternalSCEst.g:17341:4: (lv_text_1_0= RULE_HOSTCODE )
            {
            // InternalSCEst.g:17341:4: (lv_text_1_0= RULE_HOSTCODE )
            // InternalSCEst.g:17342:5: lv_text_1_0= RULE_HOSTCODE
            {
            lv_text_1_0=(Token)match(input,RULE_HOSTCODE,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_text_1_0, grammarAccess.getTextExpressionAccess().getTextHOSTCODETerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getTextExpressionRule());
              					}
              					setWithLastConsumed(
              						current,
              						"text",
              						lv_text_1_0,
              						"de.cau.cs.kieler.esterel.Esterel.HOSTCODE");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTextExpression"


    // $ANTLR start "entryRuleIntValue"
    // InternalSCEst.g:17362:1: entryRuleIntValue returns [EObject current=null] : iv_ruleIntValue= ruleIntValue EOF ;
    public final EObject entryRuleIntValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIntValue = null;


        try {
            // InternalSCEst.g:17362:49: (iv_ruleIntValue= ruleIntValue EOF )
            // InternalSCEst.g:17363:2: iv_ruleIntValue= ruleIntValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIntValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleIntValue=ruleIntValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIntValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIntValue"


    // $ANTLR start "ruleIntValue"
    // InternalSCEst.g:17369:1: ruleIntValue returns [EObject current=null] : ( (lv_value_0_0= RULE_INT ) ) ;
    public final EObject ruleIntValue() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;


        	enterRule();

        try {
            // InternalSCEst.g:17375:2: ( ( (lv_value_0_0= RULE_INT ) ) )
            // InternalSCEst.g:17376:2: ( (lv_value_0_0= RULE_INT ) )
            {
            // InternalSCEst.g:17376:2: ( (lv_value_0_0= RULE_INT ) )
            // InternalSCEst.g:17377:3: (lv_value_0_0= RULE_INT )
            {
            // InternalSCEst.g:17377:3: (lv_value_0_0= RULE_INT )
            // InternalSCEst.g:17378:4: lv_value_0_0= RULE_INT
            {
            lv_value_0_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_value_0_0, grammarAccess.getIntValueAccess().getValueINTTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getIntValueRule());
              				}
              				setWithLastConsumed(
              					current,
              					"value",
              					lv_value_0_0,
              					"de.cau.cs.kieler.annotations.Annotations.INT");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIntValue"


    // $ANTLR start "entryRuleFloatValue"
    // InternalSCEst.g:17397:1: entryRuleFloatValue returns [EObject current=null] : iv_ruleFloatValue= ruleFloatValue EOF ;
    public final EObject entryRuleFloatValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFloatValue = null;


        try {
            // InternalSCEst.g:17397:51: (iv_ruleFloatValue= ruleFloatValue EOF )
            // InternalSCEst.g:17398:2: iv_ruleFloatValue= ruleFloatValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFloatValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFloatValue=ruleFloatValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFloatValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFloatValue"


    // $ANTLR start "ruleFloatValue"
    // InternalSCEst.g:17404:1: ruleFloatValue returns [EObject current=null] : ( (lv_value_0_0= RULE_FLOAT ) ) ;
    public final EObject ruleFloatValue() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;


        	enterRule();

        try {
            // InternalSCEst.g:17410:2: ( ( (lv_value_0_0= RULE_FLOAT ) ) )
            // InternalSCEst.g:17411:2: ( (lv_value_0_0= RULE_FLOAT ) )
            {
            // InternalSCEst.g:17411:2: ( (lv_value_0_0= RULE_FLOAT ) )
            // InternalSCEst.g:17412:3: (lv_value_0_0= RULE_FLOAT )
            {
            // InternalSCEst.g:17412:3: (lv_value_0_0= RULE_FLOAT )
            // InternalSCEst.g:17413:4: lv_value_0_0= RULE_FLOAT
            {
            lv_value_0_0=(Token)match(input,RULE_FLOAT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_value_0_0, grammarAccess.getFloatValueAccess().getValueFLOATTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getFloatValueRule());
              				}
              				setWithLastConsumed(
              					current,
              					"value",
              					lv_value_0_0,
              					"de.cau.cs.kieler.annotations.Annotations.FLOAT");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFloatValue"


    // $ANTLR start "entryRuleBoolValue"
    // InternalSCEst.g:17432:1: entryRuleBoolValue returns [EObject current=null] : iv_ruleBoolValue= ruleBoolValue EOF ;
    public final EObject entryRuleBoolValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBoolValue = null;


        try {
            // InternalSCEst.g:17432:50: (iv_ruleBoolValue= ruleBoolValue EOF )
            // InternalSCEst.g:17433:2: iv_ruleBoolValue= ruleBoolValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBoolValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBoolValue=ruleBoolValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBoolValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBoolValue"


    // $ANTLR start "ruleBoolValue"
    // InternalSCEst.g:17439:1: ruleBoolValue returns [EObject current=null] : ( (lv_value_0_0= RULE_BOOLEAN ) ) ;
    public final EObject ruleBoolValue() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;


        	enterRule();

        try {
            // InternalSCEst.g:17445:2: ( ( (lv_value_0_0= RULE_BOOLEAN ) ) )
            // InternalSCEst.g:17446:2: ( (lv_value_0_0= RULE_BOOLEAN ) )
            {
            // InternalSCEst.g:17446:2: ( (lv_value_0_0= RULE_BOOLEAN ) )
            // InternalSCEst.g:17447:3: (lv_value_0_0= RULE_BOOLEAN )
            {
            // InternalSCEst.g:17447:3: (lv_value_0_0= RULE_BOOLEAN )
            // InternalSCEst.g:17448:4: lv_value_0_0= RULE_BOOLEAN
            {
            lv_value_0_0=(Token)match(input,RULE_BOOLEAN,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_value_0_0, grammarAccess.getBoolValueAccess().getValueBOOLEANTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getBoolValueRule());
              				}
              				setWithLastConsumed(
              					current,
              					"value",
              					lv_value_0_0,
              					"de.cau.cs.kieler.annotations.Annotations.BOOLEAN");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBoolValue"


    // $ANTLR start "entryRuleStringValue"
    // InternalSCEst.g:17467:1: entryRuleStringValue returns [EObject current=null] : iv_ruleStringValue= ruleStringValue EOF ;
    public final EObject entryRuleStringValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStringValue = null;


        try {
            // InternalSCEst.g:17467:52: (iv_ruleStringValue= ruleStringValue EOF )
            // InternalSCEst.g:17468:2: iv_ruleStringValue= ruleStringValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStringValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStringValue=ruleStringValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStringValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStringValue"


    // $ANTLR start "ruleStringValue"
    // InternalSCEst.g:17474:1: ruleStringValue returns [EObject current=null] : ( (lv_value_0_0= RULE_STRING ) ) ;
    public final EObject ruleStringValue() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;


        	enterRule();

        try {
            // InternalSCEst.g:17480:2: ( ( (lv_value_0_0= RULE_STRING ) ) )
            // InternalSCEst.g:17481:2: ( (lv_value_0_0= RULE_STRING ) )
            {
            // InternalSCEst.g:17481:2: ( (lv_value_0_0= RULE_STRING ) )
            // InternalSCEst.g:17482:3: (lv_value_0_0= RULE_STRING )
            {
            // InternalSCEst.g:17482:3: (lv_value_0_0= RULE_STRING )
            // InternalSCEst.g:17483:4: lv_value_0_0= RULE_STRING
            {
            lv_value_0_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_value_0_0, grammarAccess.getStringValueAccess().getValueSTRINGTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getStringValueRule());
              				}
              				setWithLastConsumed(
              					current,
              					"value",
              					lv_value_0_0,
              					"de.cau.cs.kieler.esterel.Esterel.STRING");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStringValue"


    // $ANTLR start "entryRuleVectorValueMember"
    // InternalSCEst.g:17502:1: entryRuleVectorValueMember returns [EObject current=null] : iv_ruleVectorValueMember= ruleVectorValueMember EOF ;
    public final EObject entryRuleVectorValueMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVectorValueMember = null;


        try {
            // InternalSCEst.g:17502:58: (iv_ruleVectorValueMember= ruleVectorValueMember EOF )
            // InternalSCEst.g:17503:2: iv_ruleVectorValueMember= ruleVectorValueMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVectorValueMemberRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleVectorValueMember=ruleVectorValueMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVectorValueMember; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVectorValueMember"


    // $ANTLR start "ruleVectorValueMember"
    // InternalSCEst.g:17509:1: ruleVectorValueMember returns [EObject current=null] : (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression | this_IgnoreValue_2= ruleIgnoreValue ) ;
    public final EObject ruleVectorValueMember() throws RecognitionException {
        EObject current = null;

        EObject this_BoolExpression_0 = null;

        EObject this_ValuedExpression_1 = null;

        EObject this_IgnoreValue_2 = null;



        	enterRule();

        try {
            // InternalSCEst.g:17515:2: ( (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression | this_IgnoreValue_2= ruleIgnoreValue ) )
            // InternalSCEst.g:17516:2: (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression | this_IgnoreValue_2= ruleIgnoreValue )
            {
            // InternalSCEst.g:17516:2: (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression | this_IgnoreValue_2= ruleIgnoreValue )
            int alt418=3;
            alt418 = dfa418.predict(input);
            switch (alt418) {
                case 1 :
                    // InternalSCEst.g:17517:3: this_BoolExpression_0= ruleBoolExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getVectorValueMemberAccess().getBoolExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_BoolExpression_0=ruleBoolExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BoolExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCEst.g:17529:3: this_ValuedExpression_1= ruleValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getVectorValueMemberAccess().getValuedExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedExpression_1=ruleValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ValuedExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCEst.g:17541:3: this_IgnoreValue_2= ruleIgnoreValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getVectorValueMemberAccess().getIgnoreValueParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_IgnoreValue_2=ruleIgnoreValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_IgnoreValue_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVectorValueMember"


    // $ANTLR start "entryRuleIgnoreValue"
    // InternalSCEst.g:17556:1: entryRuleIgnoreValue returns [EObject current=null] : iv_ruleIgnoreValue= ruleIgnoreValue EOF ;
    public final EObject entryRuleIgnoreValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIgnoreValue = null;


        try {
            // InternalSCEst.g:17556:52: (iv_ruleIgnoreValue= ruleIgnoreValue EOF )
            // InternalSCEst.g:17557:2: iv_ruleIgnoreValue= ruleIgnoreValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIgnoreValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleIgnoreValue=ruleIgnoreValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIgnoreValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIgnoreValue"


    // $ANTLR start "ruleIgnoreValue"
    // InternalSCEst.g:17563:1: ruleIgnoreValue returns [EObject current=null] : ( () otherlv_1= '_' ) ;
    public final EObject ruleIgnoreValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;


        	enterRule();

        try {
            // InternalSCEst.g:17569:2: ( ( () otherlv_1= '_' ) )
            // InternalSCEst.g:17570:2: ( () otherlv_1= '_' )
            {
            // InternalSCEst.g:17570:2: ( () otherlv_1= '_' )
            // InternalSCEst.g:17571:3: () otherlv_1= '_'
            {
            // InternalSCEst.g:17571:3: ()
            // InternalSCEst.g:17572:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getIgnoreValueAccess().getIgnoreValueAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,126,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getIgnoreValueAccess().get_Keyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIgnoreValue"


    // $ANTLR start "entryRuleAnyValue"
    // InternalSCEst.g:17589:1: entryRuleAnyValue returns [EObject current=null] : iv_ruleAnyValue= ruleAnyValue EOF ;
    public final EObject entryRuleAnyValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnyValue = null;


        try {
            // InternalSCEst.g:17589:49: (iv_ruleAnyValue= ruleAnyValue EOF )
            // InternalSCEst.g:17590:2: iv_ruleAnyValue= ruleAnyValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnyValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAnyValue=ruleAnyValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnyValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnyValue"


    // $ANTLR start "ruleAnyValue"
    // InternalSCEst.g:17596:1: ruleAnyValue returns [EObject current=null] : (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_BoolValue_2= ruleBoolValue | this_StringValue_3= ruleStringValue ) ;
    public final EObject ruleAnyValue() throws RecognitionException {
        EObject current = null;

        EObject this_IntValue_0 = null;

        EObject this_FloatValue_1 = null;

        EObject this_BoolValue_2 = null;

        EObject this_StringValue_3 = null;



        	enterRule();

        try {
            // InternalSCEst.g:17602:2: ( (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_BoolValue_2= ruleBoolValue | this_StringValue_3= ruleStringValue ) )
            // InternalSCEst.g:17603:2: (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_BoolValue_2= ruleBoolValue | this_StringValue_3= ruleStringValue )
            {
            // InternalSCEst.g:17603:2: (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_BoolValue_2= ruleBoolValue | this_StringValue_3= ruleStringValue )
            int alt419=4;
            switch ( input.LA(1) ) {
            case RULE_INT:
                {
                alt419=1;
                }
                break;
            case RULE_FLOAT:
                {
                alt419=2;
                }
                break;
            case RULE_BOOLEAN:
                {
                alt419=3;
                }
                break;
            case RULE_STRING:
                {
                alt419=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 419, 0, input);

                throw nvae;
            }

            switch (alt419) {
                case 1 :
                    // InternalSCEst.g:17604:3: this_IntValue_0= ruleIntValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnyValueAccess().getIntValueParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_IntValue_0=ruleIntValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_IntValue_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCEst.g:17616:3: this_FloatValue_1= ruleFloatValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnyValueAccess().getFloatValueParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_FloatValue_1=ruleFloatValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FloatValue_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCEst.g:17628:3: this_BoolValue_2= ruleBoolValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnyValueAccess().getBoolValueParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_BoolValue_2=ruleBoolValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BoolValue_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSCEst.g:17640:3: this_StringValue_3= ruleStringValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnyValueAccess().getStringValueParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_StringValue_3=ruleStringValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_StringValue_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnyValue"


    // $ANTLR start "entryRuleJsonObjectValue"
    // InternalSCEst.g:17655:1: entryRuleJsonObjectValue returns [EObject current=null] : iv_ruleJsonObjectValue= ruleJsonObjectValue EOF ;
    public final EObject entryRuleJsonObjectValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJsonObjectValue = null;


        try {
            // InternalSCEst.g:17655:56: (iv_ruleJsonObjectValue= ruleJsonObjectValue EOF )
            // InternalSCEst.g:17656:2: iv_ruleJsonObjectValue= ruleJsonObjectValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJsonObjectValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleJsonObjectValue=ruleJsonObjectValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJsonObjectValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJsonObjectValue"


    // $ANTLR start "ruleJsonObjectValue"
    // InternalSCEst.g:17662:1: ruleJsonObjectValue returns [EObject current=null] : ( () otherlv_1= '{' ( ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )* )? otherlv_5= '}' ) ;
    public final EObject ruleJsonObjectValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_members_2_0 = null;

        EObject lv_members_4_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:17668:2: ( ( () otherlv_1= '{' ( ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )* )? otherlv_5= '}' ) )
            // InternalSCEst.g:17669:2: ( () otherlv_1= '{' ( ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )* )? otherlv_5= '}' )
            {
            // InternalSCEst.g:17669:2: ( () otherlv_1= '{' ( ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )* )? otherlv_5= '}' )
            // InternalSCEst.g:17670:3: () otherlv_1= '{' ( ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )* )? otherlv_5= '}'
            {
            // InternalSCEst.g:17670:3: ()
            // InternalSCEst.g:17671:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getJsonObjectValueAccess().getJsonObjectValueAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,102,FollowSets000.FOLLOW_217); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getJsonObjectValueAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalSCEst.g:17684:3: ( ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )* )?
            int alt421=2;
            int LA421_0 = input.LA(1);

            if ( (LA421_0==RULE_STRING) ) {
                alt421=1;
            }
            switch (alt421) {
                case 1 :
                    // InternalSCEst.g:17685:4: ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )*
                    {
                    // InternalSCEst.g:17685:4: ( (lv_members_2_0= ruleJsonObjectMember ) )
                    // InternalSCEst.g:17686:5: (lv_members_2_0= ruleJsonObjectMember )
                    {
                    // InternalSCEst.g:17686:5: (lv_members_2_0= ruleJsonObjectMember )
                    // InternalSCEst.g:17687:6: lv_members_2_0= ruleJsonObjectMember
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getJsonObjectValueAccess().getMembersJsonObjectMemberParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_193);
                    lv_members_2_0=ruleJsonObjectMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getJsonObjectValueRule());
                      						}
                      						add(
                      							current,
                      							"members",
                      							lv_members_2_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.JsonObjectMember");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCEst.g:17704:4: (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )*
                    loop420:
                    do {
                        int alt420=2;
                        int LA420_0 = input.LA(1);

                        if ( (LA420_0==30) ) {
                            alt420=1;
                        }


                        switch (alt420) {
                    	case 1 :
                    	    // InternalSCEst.g:17705:5: otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) )
                    	    {
                    	    otherlv_3=(Token)match(input,30,FollowSets000.FOLLOW_175); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getJsonObjectValueAccess().getCommaKeyword_2_1_0());
                    	      				
                    	    }
                    	    // InternalSCEst.g:17709:5: ( (lv_members_4_0= ruleJsonObjectMember ) )
                    	    // InternalSCEst.g:17710:6: (lv_members_4_0= ruleJsonObjectMember )
                    	    {
                    	    // InternalSCEst.g:17710:6: (lv_members_4_0= ruleJsonObjectMember )
                    	    // InternalSCEst.g:17711:7: lv_members_4_0= ruleJsonObjectMember
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJsonObjectValueAccess().getMembersJsonObjectMemberParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_193);
                    	    lv_members_4_0=ruleJsonObjectMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getJsonObjectValueRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"members",
                    	      								lv_members_4_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.JsonObjectMember");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop420;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,103,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getJsonObjectValueAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJsonObjectValue"


    // $ANTLR start "entryRuleJsonObjectMember"
    // InternalSCEst.g:17738:1: entryRuleJsonObjectMember returns [EObject current=null] : iv_ruleJsonObjectMember= ruleJsonObjectMember EOF ;
    public final EObject entryRuleJsonObjectMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJsonObjectMember = null;


        try {
            // InternalSCEst.g:17738:57: (iv_ruleJsonObjectMember= ruleJsonObjectMember EOF )
            // InternalSCEst.g:17739:2: iv_ruleJsonObjectMember= ruleJsonObjectMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJsonObjectMemberRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleJsonObjectMember=ruleJsonObjectMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJsonObjectMember; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJsonObjectMember"


    // $ANTLR start "ruleJsonObjectMember"
    // InternalSCEst.g:17745:1: ruleJsonObjectMember returns [EObject current=null] : ( ( (lv_key_0_0= RULE_STRING ) ) otherlv_1= ':' ( (lv_value_2_0= ruleJsonValue ) ) ) ;
    public final EObject ruleJsonObjectMember() throws RecognitionException {
        EObject current = null;

        Token lv_key_0_0=null;
        Token otherlv_1=null;
        EObject lv_value_2_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:17751:2: ( ( ( (lv_key_0_0= RULE_STRING ) ) otherlv_1= ':' ( (lv_value_2_0= ruleJsonValue ) ) ) )
            // InternalSCEst.g:17752:2: ( ( (lv_key_0_0= RULE_STRING ) ) otherlv_1= ':' ( (lv_value_2_0= ruleJsonValue ) ) )
            {
            // InternalSCEst.g:17752:2: ( ( (lv_key_0_0= RULE_STRING ) ) otherlv_1= ':' ( (lv_value_2_0= ruleJsonValue ) ) )
            // InternalSCEst.g:17753:3: ( (lv_key_0_0= RULE_STRING ) ) otherlv_1= ':' ( (lv_value_2_0= ruleJsonValue ) )
            {
            // InternalSCEst.g:17753:3: ( (lv_key_0_0= RULE_STRING ) )
            // InternalSCEst.g:17754:4: (lv_key_0_0= RULE_STRING )
            {
            // InternalSCEst.g:17754:4: (lv_key_0_0= RULE_STRING )
            // InternalSCEst.g:17755:5: lv_key_0_0= RULE_STRING
            {
            lv_key_0_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_key_0_0, grammarAccess.getJsonObjectMemberAccess().getKeySTRINGTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getJsonObjectMemberRule());
              					}
              					setWithLastConsumed(
              						current,
              						"key",
              						lv_key_0_0,
              						"de.cau.cs.kieler.esterel.Esterel.STRING");
              				
            }

            }


            }

            otherlv_1=(Token)match(input,18,FollowSets000.FOLLOW_218); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getJsonObjectMemberAccess().getColonKeyword_1());
              		
            }
            // InternalSCEst.g:17775:3: ( (lv_value_2_0= ruleJsonValue ) )
            // InternalSCEst.g:17776:4: (lv_value_2_0= ruleJsonValue )
            {
            // InternalSCEst.g:17776:4: (lv_value_2_0= ruleJsonValue )
            // InternalSCEst.g:17777:5: lv_value_2_0= ruleJsonValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJsonObjectMemberAccess().getValueJsonValueParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_value_2_0=ruleJsonValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJsonObjectMemberRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_2_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.JsonValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJsonObjectMember"


    // $ANTLR start "entryRuleJsonArrayValue"
    // InternalSCEst.g:17798:1: entryRuleJsonArrayValue returns [EObject current=null] : iv_ruleJsonArrayValue= ruleJsonArrayValue EOF ;
    public final EObject entryRuleJsonArrayValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJsonArrayValue = null;


        try {
            // InternalSCEst.g:17798:55: (iv_ruleJsonArrayValue= ruleJsonArrayValue EOF )
            // InternalSCEst.g:17799:2: iv_ruleJsonArrayValue= ruleJsonArrayValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJsonArrayValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleJsonArrayValue=ruleJsonArrayValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJsonArrayValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJsonArrayValue"


    // $ANTLR start "ruleJsonArrayValue"
    // InternalSCEst.g:17805:1: ruleJsonArrayValue returns [EObject current=null] : ( () otherlv_1= '[' ( ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )* )? otherlv_5= ']' ) ;
    public final EObject ruleJsonArrayValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_elements_2_0 = null;

        EObject lv_elements_4_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:17811:2: ( ( () otherlv_1= '[' ( ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )* )? otherlv_5= ']' ) )
            // InternalSCEst.g:17812:2: ( () otherlv_1= '[' ( ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )* )? otherlv_5= ']' )
            {
            // InternalSCEst.g:17812:2: ( () otherlv_1= '[' ( ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )* )? otherlv_5= ']' )
            // InternalSCEst.g:17813:3: () otherlv_1= '[' ( ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )* )? otherlv_5= ']'
            {
            // InternalSCEst.g:17813:3: ()
            // InternalSCEst.g:17814:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getJsonArrayValueAccess().getJsonArrayValueAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,49,FollowSets000.FOLLOW_219); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getJsonArrayValueAccess().getLeftSquareBracketKeyword_1());
              		
            }
            // InternalSCEst.g:17827:3: ( ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )* )?
            int alt423=2;
            int LA423_0 = input.LA(1);

            if ( (LA423_0==RULE_STRING||(LA423_0>=RULE_INT && LA423_0<=RULE_BOOLEAN)||LA423_0==49||LA423_0==102||LA423_0==127) ) {
                alt423=1;
            }
            switch (alt423) {
                case 1 :
                    // InternalSCEst.g:17828:4: ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )*
                    {
                    // InternalSCEst.g:17828:4: ( (lv_elements_2_0= ruleJsonValue ) )
                    // InternalSCEst.g:17829:5: (lv_elements_2_0= ruleJsonValue )
                    {
                    // InternalSCEst.g:17829:5: (lv_elements_2_0= ruleJsonValue )
                    // InternalSCEst.g:17830:6: lv_elements_2_0= ruleJsonValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getJsonArrayValueAccess().getElementsJsonValueParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_220);
                    lv_elements_2_0=ruleJsonValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getJsonArrayValueRule());
                      						}
                      						add(
                      							current,
                      							"elements",
                      							lv_elements_2_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.JsonValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCEst.g:17847:4: (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )*
                    loop422:
                    do {
                        int alt422=2;
                        int LA422_0 = input.LA(1);

                        if ( (LA422_0==30) ) {
                            alt422=1;
                        }


                        switch (alt422) {
                    	case 1 :
                    	    // InternalSCEst.g:17848:5: otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) )
                    	    {
                    	    otherlv_3=(Token)match(input,30,FollowSets000.FOLLOW_218); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getJsonArrayValueAccess().getCommaKeyword_2_1_0());
                    	      				
                    	    }
                    	    // InternalSCEst.g:17852:5: ( (lv_elements_4_0= ruleJsonValue ) )
                    	    // InternalSCEst.g:17853:6: (lv_elements_4_0= ruleJsonValue )
                    	    {
                    	    // InternalSCEst.g:17853:6: (lv_elements_4_0= ruleJsonValue )
                    	    // InternalSCEst.g:17854:7: lv_elements_4_0= ruleJsonValue
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJsonArrayValueAccess().getElementsJsonValueParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_220);
                    	    lv_elements_4_0=ruleJsonValue();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getJsonArrayValueRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"elements",
                    	      								lv_elements_4_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.JsonValue");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop422;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getJsonArrayValueAccess().getRightSquareBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJsonArrayValue"


    // $ANTLR start "entryRuleJsonValue"
    // InternalSCEst.g:17881:1: entryRuleJsonValue returns [EObject current=null] : iv_ruleJsonValue= ruleJsonValue EOF ;
    public final EObject entryRuleJsonValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJsonValue = null;


        try {
            // InternalSCEst.g:17881:50: (iv_ruleJsonValue= ruleJsonValue EOF )
            // InternalSCEst.g:17882:2: iv_ruleJsonValue= ruleJsonValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJsonValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleJsonValue=ruleJsonValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJsonValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJsonValue"


    // $ANTLR start "ruleJsonValue"
    // InternalSCEst.g:17888:1: ruleJsonValue returns [EObject current=null] : (this_JsonObjectValue_0= ruleJsonObjectValue | this_JsonArrayValue_1= ruleJsonArrayValue | this_NullValue_2= ruleNullValue | this_AnyValue_3= ruleAnyValue ) ;
    public final EObject ruleJsonValue() throws RecognitionException {
        EObject current = null;

        EObject this_JsonObjectValue_0 = null;

        EObject this_JsonArrayValue_1 = null;

        EObject this_NullValue_2 = null;

        EObject this_AnyValue_3 = null;



        	enterRule();

        try {
            // InternalSCEst.g:17894:2: ( (this_JsonObjectValue_0= ruleJsonObjectValue | this_JsonArrayValue_1= ruleJsonArrayValue | this_NullValue_2= ruleNullValue | this_AnyValue_3= ruleAnyValue ) )
            // InternalSCEst.g:17895:2: (this_JsonObjectValue_0= ruleJsonObjectValue | this_JsonArrayValue_1= ruleJsonArrayValue | this_NullValue_2= ruleNullValue | this_AnyValue_3= ruleAnyValue )
            {
            // InternalSCEst.g:17895:2: (this_JsonObjectValue_0= ruleJsonObjectValue | this_JsonArrayValue_1= ruleJsonArrayValue | this_NullValue_2= ruleNullValue | this_AnyValue_3= ruleAnyValue )
            int alt424=4;
            switch ( input.LA(1) ) {
            case 102:
                {
                alt424=1;
                }
                break;
            case 49:
                {
                alt424=2;
                }
                break;
            case 127:
                {
                alt424=3;
                }
                break;
            case RULE_STRING:
            case RULE_INT:
            case RULE_FLOAT:
            case RULE_BOOLEAN:
                {
                alt424=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 424, 0, input);

                throw nvae;
            }

            switch (alt424) {
                case 1 :
                    // InternalSCEst.g:17896:3: this_JsonObjectValue_0= ruleJsonObjectValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJsonValueAccess().getJsonObjectValueParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_JsonObjectValue_0=ruleJsonObjectValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JsonObjectValue_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCEst.g:17908:3: this_JsonArrayValue_1= ruleJsonArrayValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJsonValueAccess().getJsonArrayValueParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_JsonArrayValue_1=ruleJsonArrayValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JsonArrayValue_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCEst.g:17920:3: this_NullValue_2= ruleNullValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJsonValueAccess().getNullValueParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_NullValue_2=ruleNullValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NullValue_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSCEst.g:17932:3: this_AnyValue_3= ruleAnyValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJsonValueAccess().getAnyValueParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AnyValue_3=ruleAnyValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AnyValue_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJsonValue"


    // $ANTLR start "entryRuleNullValue"
    // InternalSCEst.g:17947:1: entryRuleNullValue returns [EObject current=null] : iv_ruleNullValue= ruleNullValue EOF ;
    public final EObject entryRuleNullValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNullValue = null;


        try {
            // InternalSCEst.g:17947:50: (iv_ruleNullValue= ruleNullValue EOF )
            // InternalSCEst.g:17948:2: iv_ruleNullValue= ruleNullValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNullValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNullValue=ruleNullValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNullValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNullValue"


    // $ANTLR start "ruleNullValue"
    // InternalSCEst.g:17954:1: ruleNullValue returns [EObject current=null] : ( () otherlv_1= 'null' ) ;
    public final EObject ruleNullValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;


        	enterRule();

        try {
            // InternalSCEst.g:17960:2: ( ( () otherlv_1= 'null' ) )
            // InternalSCEst.g:17961:2: ( () otherlv_1= 'null' )
            {
            // InternalSCEst.g:17961:2: ( () otherlv_1= 'null' )
            // InternalSCEst.g:17962:3: () otherlv_1= 'null'
            {
            // InternalSCEst.g:17962:3: ()
            // InternalSCEst.g:17963:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getNullValueAccess().getNullValueAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,127,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getNullValueAccess().getNullKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNullValue"


    // $ANTLR start "entryRuleAnnotation"
    // InternalSCEst.g:17980:1: entryRuleAnnotation returns [EObject current=null] : iv_ruleAnnotation= ruleAnnotation EOF ;
    public final EObject entryRuleAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotation = null;


        try {
            // InternalSCEst.g:17980:51: (iv_ruleAnnotation= ruleAnnotation EOF )
            // InternalSCEst.g:17981:2: iv_ruleAnnotation= ruleAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAnnotation=ruleAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotation"


    // $ANTLR start "ruleAnnotation"
    // InternalSCEst.g:17987:1: ruleAnnotation returns [EObject current=null] : (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) ;
    public final EObject ruleAnnotation() throws RecognitionException {
        EObject current = null;

        EObject this_CommentAnnotation_0 = null;

        EObject this_KeyStringValueAnnotation_1 = null;

        EObject this_TypedKeyStringValueAnnotation_2 = null;

        EObject this_TagAnnotation_3 = null;



        	enterRule();

        try {
            // InternalSCEst.g:17993:2: ( (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) )
            // InternalSCEst.g:17994:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            {
            // InternalSCEst.g:17994:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            int alt425=4;
            int LA425_0 = input.LA(1);

            if ( (LA425_0==RULE_COMMENT_ANNOTATION) ) {
                alt425=1;
            }
            else if ( (LA425_0==128) ) {
                int LA425_2 = input.LA(2);

                if ( (synpred525_InternalSCEst()) ) {
                    alt425=2;
                }
                else if ( (synpred526_InternalSCEst()) ) {
                    alt425=3;
                }
                else if ( (true) ) {
                    alt425=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 425, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 425, 0, input);

                throw nvae;
            }
            switch (alt425) {
                case 1 :
                    // InternalSCEst.g:17995:3: this_CommentAnnotation_0= ruleCommentAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationAccess().getCommentAnnotationParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CommentAnnotation_0=ruleCommentAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_CommentAnnotation_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCEst.g:18007:3: this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationAccess().getKeyStringValueAnnotationParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_KeyStringValueAnnotation_1=ruleKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_KeyStringValueAnnotation_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCEst.g:18019:3: this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationAccess().getTypedKeyStringValueAnnotationParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TypedKeyStringValueAnnotation_2=ruleTypedKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TypedKeyStringValueAnnotation_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSCEst.g:18031:3: this_TagAnnotation_3= ruleTagAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationAccess().getTagAnnotationParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TagAnnotation_3=ruleTagAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TagAnnotation_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnnotation"


    // $ANTLR start "entryRulePragma"
    // InternalSCEst.g:18046:1: entryRulePragma returns [EObject current=null] : iv_rulePragma= rulePragma EOF ;
    public final EObject entryRulePragma() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePragma = null;


        try {
            // InternalSCEst.g:18046:47: (iv_rulePragma= rulePragma EOF )
            // InternalSCEst.g:18047:2: iv_rulePragma= rulePragma EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPragmaRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePragma=rulePragma();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePragma; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePragma"


    // $ANTLR start "rulePragma"
    // InternalSCEst.g:18053:1: rulePragma returns [EObject current=null] : (this_StringPragma_0= ruleStringPragma | this_PragmaTag_1= rulePragmaTag ) ;
    public final EObject rulePragma() throws RecognitionException {
        EObject current = null;

        EObject this_StringPragma_0 = null;

        EObject this_PragmaTag_1 = null;



        	enterRule();

        try {
            // InternalSCEst.g:18059:2: ( (this_StringPragma_0= ruleStringPragma | this_PragmaTag_1= rulePragmaTag ) )
            // InternalSCEst.g:18060:2: (this_StringPragma_0= ruleStringPragma | this_PragmaTag_1= rulePragmaTag )
            {
            // InternalSCEst.g:18060:2: (this_StringPragma_0= ruleStringPragma | this_PragmaTag_1= rulePragmaTag )
            int alt426=2;
            alt426 = dfa426.predict(input);
            switch (alt426) {
                case 1 :
                    // InternalSCEst.g:18061:3: this_StringPragma_0= ruleStringPragma
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPragmaAccess().getStringPragmaParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_StringPragma_0=ruleStringPragma();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_StringPragma_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCEst.g:18073:3: this_PragmaTag_1= rulePragmaTag
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPragmaAccess().getPragmaTagParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PragmaTag_1=rulePragmaTag();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PragmaTag_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePragma"


    // $ANTLR start "entryRuleQuotedStringAnnotation"
    // InternalSCEst.g:18088:1: entryRuleQuotedStringAnnotation returns [EObject current=null] : iv_ruleQuotedStringAnnotation= ruleQuotedStringAnnotation EOF ;
    public final EObject entryRuleQuotedStringAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQuotedStringAnnotation = null;


        try {
            // InternalSCEst.g:18088:63: (iv_ruleQuotedStringAnnotation= ruleQuotedStringAnnotation EOF )
            // InternalSCEst.g:18089:2: iv_ruleQuotedStringAnnotation= ruleQuotedStringAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQuotedStringAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleQuotedStringAnnotation=ruleQuotedStringAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQuotedStringAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQuotedStringAnnotation"


    // $ANTLR start "ruleQuotedStringAnnotation"
    // InternalSCEst.g:18095:1: ruleQuotedStringAnnotation returns [EObject current=null] : (this_CommentAnnotation_0= ruleCommentAnnotation | this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation | this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) ;
    public final EObject ruleQuotedStringAnnotation() throws RecognitionException {
        EObject current = null;

        EObject this_CommentAnnotation_0 = null;

        EObject this_QuotedKeyStringValueAnnotation_1 = null;

        EObject this_QuotedTypedKeyStringValueAnnotation_2 = null;

        EObject this_TagAnnotation_3 = null;



        	enterRule();

        try {
            // InternalSCEst.g:18101:2: ( (this_CommentAnnotation_0= ruleCommentAnnotation | this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation | this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) )
            // InternalSCEst.g:18102:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation | this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            {
            // InternalSCEst.g:18102:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation | this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            int alt427=4;
            alt427 = dfa427.predict(input);
            switch (alt427) {
                case 1 :
                    // InternalSCEst.g:18103:3: this_CommentAnnotation_0= ruleCommentAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getQuotedStringAnnotationAccess().getCommentAnnotationParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CommentAnnotation_0=ruleCommentAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_CommentAnnotation_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCEst.g:18115:3: this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getQuotedStringAnnotationAccess().getQuotedKeyStringValueAnnotationParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_QuotedKeyStringValueAnnotation_1=ruleQuotedKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_QuotedKeyStringValueAnnotation_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCEst.g:18127:3: this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getQuotedStringAnnotationAccess().getQuotedTypedKeyStringValueAnnotationParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_QuotedTypedKeyStringValueAnnotation_2=ruleQuotedTypedKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_QuotedTypedKeyStringValueAnnotation_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSCEst.g:18139:3: this_TagAnnotation_3= ruleTagAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getQuotedStringAnnotationAccess().getTagAnnotationParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TagAnnotation_3=ruleTagAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TagAnnotation_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQuotedStringAnnotation"


    // $ANTLR start "entryRuleCommentAnnotation"
    // InternalSCEst.g:18154:1: entryRuleCommentAnnotation returns [EObject current=null] : iv_ruleCommentAnnotation= ruleCommentAnnotation EOF ;
    public final EObject entryRuleCommentAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCommentAnnotation = null;


        try {
            // InternalSCEst.g:18154:58: (iv_ruleCommentAnnotation= ruleCommentAnnotation EOF )
            // InternalSCEst.g:18155:2: iv_ruleCommentAnnotation= ruleCommentAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCommentAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCommentAnnotation=ruleCommentAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCommentAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCommentAnnotation"


    // $ANTLR start "ruleCommentAnnotation"
    // InternalSCEst.g:18161:1: ruleCommentAnnotation returns [EObject current=null] : ( (lv_values_0_0= RULE_COMMENT_ANNOTATION ) ) ;
    public final EObject ruleCommentAnnotation() throws RecognitionException {
        EObject current = null;

        Token lv_values_0_0=null;


        	enterRule();

        try {
            // InternalSCEst.g:18167:2: ( ( (lv_values_0_0= RULE_COMMENT_ANNOTATION ) ) )
            // InternalSCEst.g:18168:2: ( (lv_values_0_0= RULE_COMMENT_ANNOTATION ) )
            {
            // InternalSCEst.g:18168:2: ( (lv_values_0_0= RULE_COMMENT_ANNOTATION ) )
            // InternalSCEst.g:18169:3: (lv_values_0_0= RULE_COMMENT_ANNOTATION )
            {
            // InternalSCEst.g:18169:3: (lv_values_0_0= RULE_COMMENT_ANNOTATION )
            // InternalSCEst.g:18170:4: lv_values_0_0= RULE_COMMENT_ANNOTATION
            {
            lv_values_0_0=(Token)match(input,RULE_COMMENT_ANNOTATION,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_values_0_0, grammarAccess.getCommentAnnotationAccess().getValuesCOMMENT_ANNOTATIONTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getCommentAnnotationRule());
              				}
              				addWithLastConsumed(
              					current,
              					"values",
              					lv_values_0_0,
              					"de.cau.cs.kieler.annotations.Annotations.COMMENT_ANNOTATION");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCommentAnnotation"


    // $ANTLR start "entryRuleCommentAnnotatonSL"
    // InternalSCEst.g:18189:1: entryRuleCommentAnnotatonSL returns [EObject current=null] : iv_ruleCommentAnnotatonSL= ruleCommentAnnotatonSL EOF ;
    public final EObject entryRuleCommentAnnotatonSL() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCommentAnnotatonSL = null;


        try {
            // InternalSCEst.g:18189:59: (iv_ruleCommentAnnotatonSL= ruleCommentAnnotatonSL EOF )
            // InternalSCEst.g:18190:2: iv_ruleCommentAnnotatonSL= ruleCommentAnnotatonSL EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCommentAnnotatonSLRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCommentAnnotatonSL=ruleCommentAnnotatonSL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCommentAnnotatonSL; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCommentAnnotatonSL"


    // $ANTLR start "ruleCommentAnnotatonSL"
    // InternalSCEst.g:18196:1: ruleCommentAnnotatonSL returns [EObject current=null] : ( (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION ) ) ;
    public final EObject ruleCommentAnnotatonSL() throws RecognitionException {
        EObject current = null;

        Token lv_values_0_0=null;


        	enterRule();

        try {
            // InternalSCEst.g:18202:2: ( ( (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION ) ) )
            // InternalSCEst.g:18203:2: ( (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION ) )
            {
            // InternalSCEst.g:18203:2: ( (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION ) )
            // InternalSCEst.g:18204:3: (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION )
            {
            // InternalSCEst.g:18204:3: (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION )
            // InternalSCEst.g:18205:4: lv_values_0_0= RULE_SL_COMMENT_ANNOTATION
            {
            lv_values_0_0=(Token)match(input,RULE_SL_COMMENT_ANNOTATION,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_values_0_0, grammarAccess.getCommentAnnotatonSLAccess().getValuesSL_COMMENT_ANNOTATIONTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getCommentAnnotatonSLRule());
              				}
              				addWithLastConsumed(
              					current,
              					"values",
              					lv_values_0_0,
              					"de.cau.cs.kieler.annotations.Annotations.SL_COMMENT_ANNOTATION");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCommentAnnotatonSL"


    // $ANTLR start "entryRuleTagAnnotation"
    // InternalSCEst.g:18224:1: entryRuleTagAnnotation returns [EObject current=null] : iv_ruleTagAnnotation= ruleTagAnnotation EOF ;
    public final EObject entryRuleTagAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTagAnnotation = null;


        try {
            // InternalSCEst.g:18224:54: (iv_ruleTagAnnotation= ruleTagAnnotation EOF )
            // InternalSCEst.g:18225:2: iv_ruleTagAnnotation= ruleTagAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTagAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTagAnnotation=ruleTagAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTagAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTagAnnotation"


    // $ANTLR start "ruleTagAnnotation"
    // InternalSCEst.g:18231:1: ruleTagAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ) ;
    public final EObject ruleTagAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:18237:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ) )
            // InternalSCEst.g:18238:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) )
            {
            // InternalSCEst.g:18238:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) )
            // InternalSCEst.g:18239:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) )
            {
            otherlv_0=(Token)match(input,128,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getTagAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
            // InternalSCEst.g:18243:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCEst.g:18244:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCEst.g:18244:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCEst.g:18245:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTagAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTagAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTagAnnotation"


    // $ANTLR start "entryRulePragmaTag"
    // InternalSCEst.g:18266:1: entryRulePragmaTag returns [EObject current=null] : iv_rulePragmaTag= rulePragmaTag EOF ;
    public final EObject entryRulePragmaTag() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePragmaTag = null;


        try {
            // InternalSCEst.g:18266:50: (iv_rulePragmaTag= rulePragmaTag EOF )
            // InternalSCEst.g:18267:2: iv_rulePragmaTag= rulePragmaTag EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPragmaTagRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePragmaTag=rulePragmaTag();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePragmaTag; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePragmaTag"


    // $ANTLR start "rulePragmaTag"
    // InternalSCEst.g:18273:1: rulePragmaTag returns [EObject current=null] : (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ) ;
    public final EObject rulePragmaTag() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:18279:2: ( (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ) )
            // InternalSCEst.g:18280:2: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) )
            {
            // InternalSCEst.g:18280:2: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) )
            // InternalSCEst.g:18281:3: otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) )
            {
            otherlv_0=(Token)match(input,44,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getPragmaTagAccess().getNumberSignKeyword_0());
              		
            }
            // InternalSCEst.g:18285:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCEst.g:18286:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCEst.g:18286:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCEst.g:18287:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPragmaTagAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPragmaTagRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePragmaTag"


    // $ANTLR start "entryRuleKeyStringValueAnnotation"
    // InternalSCEst.g:18308:1: entryRuleKeyStringValueAnnotation returns [EObject current=null] : iv_ruleKeyStringValueAnnotation= ruleKeyStringValueAnnotation EOF ;
    public final EObject entryRuleKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleKeyStringValueAnnotation = null;


        try {
            // InternalSCEst.g:18308:65: (iv_ruleKeyStringValueAnnotation= ruleKeyStringValueAnnotation EOF )
            // InternalSCEst.g:18309:2: iv_ruleKeyStringValueAnnotation= ruleKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleKeyStringValueAnnotation=ruleKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleKeyStringValueAnnotation"


    // $ANTLR start "ruleKeyStringValueAnnotation"
    // InternalSCEst.g:18315:1: ruleKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* ) ;
    public final EObject ruleKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_values_2_0 = null;

        AntlrDatatypeRuleToken lv_values_4_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:18321:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* ) )
            // InternalSCEst.g:18322:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* )
            {
            // InternalSCEst.g:18322:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* )
            // InternalSCEst.g:18323:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )*
            {
            otherlv_0=(Token)match(input,128,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
            // InternalSCEst.g:18327:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCEst.g:18328:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCEst.g:18328:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCEst.g:18329:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_221);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCEst.g:18346:3: ( (lv_values_2_0= ruleEStringAllTypes ) )
            // InternalSCEst.g:18347:4: (lv_values_2_0= ruleEStringAllTypes )
            {
            // InternalSCEst.g:18347:4: (lv_values_2_0= ruleEStringAllTypes )
            // InternalSCEst.g:18348:5: lv_values_2_0= ruleEStringAllTypes
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_125);
            lv_values_2_0=ruleEStringAllTypes();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getKeyStringValueAnnotationRule());
              					}
              					add(
              						current,
              						"values",
              						lv_values_2_0,
              						"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCEst.g:18365:3: (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )*
            loop428:
            do {
                int alt428=2;
                int LA428_0 = input.LA(1);

                if ( (LA428_0==30) ) {
                    alt428=1;
                }


                switch (alt428) {
            	case 1 :
            	    // InternalSCEst.g:18366:4: otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) )
            	    {
            	    otherlv_3=(Token)match(input,30,FollowSets000.FOLLOW_221); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getKeyStringValueAnnotationAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalSCEst.g:18370:4: ( (lv_values_4_0= ruleEStringAllTypes ) )
            	    // InternalSCEst.g:18371:5: (lv_values_4_0= ruleEStringAllTypes )
            	    {
            	    // InternalSCEst.g:18371:5: (lv_values_4_0= ruleEStringAllTypes )
            	    // InternalSCEst.g:18372:6: lv_values_4_0= ruleEStringAllTypes
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_125);
            	    lv_values_4_0=ruleEStringAllTypes();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getKeyStringValueAnnotationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"values",
            	      							lv_values_4_0,
            	      							"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop428;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleKeyStringValueAnnotation"


    // $ANTLR start "entryRuleRestrictedKeyStringValueAnnotation"
    // InternalSCEst.g:18394:1: entryRuleRestrictedKeyStringValueAnnotation returns [EObject current=null] : iv_ruleRestrictedKeyStringValueAnnotation= ruleRestrictedKeyStringValueAnnotation EOF ;
    public final EObject entryRuleRestrictedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRestrictedKeyStringValueAnnotation = null;


        try {
            // InternalSCEst.g:18394:75: (iv_ruleRestrictedKeyStringValueAnnotation= ruleRestrictedKeyStringValueAnnotation EOF )
            // InternalSCEst.g:18395:2: iv_ruleRestrictedKeyStringValueAnnotation= ruleRestrictedKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRestrictedKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRestrictedKeyStringValueAnnotation=ruleRestrictedKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRestrictedKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRestrictedKeyStringValueAnnotation"


    // $ANTLR start "ruleRestrictedKeyStringValueAnnotation"
    // InternalSCEst.g:18401:1: ruleRestrictedKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringBoolean ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )* ) ;
    public final EObject ruleRestrictedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_values_2_0 = null;

        AntlrDatatypeRuleToken lv_values_4_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:18407:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringBoolean ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )* ) )
            // InternalSCEst.g:18408:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringBoolean ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )* )
            {
            // InternalSCEst.g:18408:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringBoolean ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )* )
            // InternalSCEst.g:18409:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringBoolean ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )*
            {
            otherlv_0=(Token)match(input,128,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
            // InternalSCEst.g:18413:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCEst.g:18414:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCEst.g:18414:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCEst.g:18415:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_222);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRestrictedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCEst.g:18432:3: ( (lv_values_2_0= ruleEStringBoolean ) )
            // InternalSCEst.g:18433:4: (lv_values_2_0= ruleEStringBoolean )
            {
            // InternalSCEst.g:18433:4: (lv_values_2_0= ruleEStringBoolean )
            // InternalSCEst.g:18434:5: lv_values_2_0= ruleEStringBoolean
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_125);
            lv_values_2_0=ruleEStringBoolean();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRestrictedKeyStringValueAnnotationRule());
              					}
              					add(
              						current,
              						"values",
              						lv_values_2_0,
              						"de.cau.cs.kieler.annotations.Annotations.EStringBoolean");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCEst.g:18451:3: (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )*
            loop429:
            do {
                int alt429=2;
                int LA429_0 = input.LA(1);

                if ( (LA429_0==30) ) {
                    alt429=1;
                }


                switch (alt429) {
            	case 1 :
            	    // InternalSCEst.g:18452:4: otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) )
            	    {
            	    otherlv_3=(Token)match(input,30,FollowSets000.FOLLOW_222); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalSCEst.g:18456:4: ( (lv_values_4_0= ruleEStringBoolean ) )
            	    // InternalSCEst.g:18457:5: (lv_values_4_0= ruleEStringBoolean )
            	    {
            	    // InternalSCEst.g:18457:5: (lv_values_4_0= ruleEStringBoolean )
            	    // InternalSCEst.g:18458:6: lv_values_4_0= ruleEStringBoolean
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_125);
            	    lv_values_4_0=ruleEStringBoolean();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getRestrictedKeyStringValueAnnotationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"values",
            	      							lv_values_4_0,
            	      							"de.cau.cs.kieler.annotations.Annotations.EStringBoolean");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop429;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRestrictedKeyStringValueAnnotation"


    // $ANTLR start "entryRuleStringPragma"
    // InternalSCEst.g:18480:1: entryRuleStringPragma returns [EObject current=null] : iv_ruleStringPragma= ruleStringPragma EOF ;
    public final EObject entryRuleStringPragma() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStringPragma = null;


        try {
            // InternalSCEst.g:18480:53: (iv_ruleStringPragma= ruleStringPragma EOF )
            // InternalSCEst.g:18481:2: iv_ruleStringPragma= ruleStringPragma EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStringPragmaRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStringPragma=ruleStringPragma();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStringPragma; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStringPragma"


    // $ANTLR start "ruleStringPragma"
    // InternalSCEst.g:18487:1: ruleStringPragma returns [EObject current=null] : (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* ) ;
    public final EObject ruleStringPragma() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_values_2_0 = null;

        AntlrDatatypeRuleToken lv_values_4_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:18493:2: ( (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* ) )
            // InternalSCEst.g:18494:2: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* )
            {
            // InternalSCEst.g:18494:2: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* )
            // InternalSCEst.g:18495:3: otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )*
            {
            otherlv_0=(Token)match(input,44,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getStringPragmaAccess().getNumberSignKeyword_0());
              		
            }
            // InternalSCEst.g:18499:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCEst.g:18500:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCEst.g:18500:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCEst.g:18501:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getStringPragmaAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_221);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getStringPragmaRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCEst.g:18518:3: ( (lv_values_2_0= ruleEStringAllTypes ) )
            // InternalSCEst.g:18519:4: (lv_values_2_0= ruleEStringAllTypes )
            {
            // InternalSCEst.g:18519:4: (lv_values_2_0= ruleEStringAllTypes )
            // InternalSCEst.g:18520:5: lv_values_2_0= ruleEStringAllTypes
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getStringPragmaAccess().getValuesEStringAllTypesParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_125);
            lv_values_2_0=ruleEStringAllTypes();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getStringPragmaRule());
              					}
              					add(
              						current,
              						"values",
              						lv_values_2_0,
              						"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCEst.g:18537:3: (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )*
            loop430:
            do {
                int alt430=2;
                int LA430_0 = input.LA(1);

                if ( (LA430_0==30) ) {
                    alt430=1;
                }


                switch (alt430) {
            	case 1 :
            	    // InternalSCEst.g:18538:4: otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) )
            	    {
            	    otherlv_3=(Token)match(input,30,FollowSets000.FOLLOW_221); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getStringPragmaAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalSCEst.g:18542:4: ( (lv_values_4_0= ruleEStringAllTypes ) )
            	    // InternalSCEst.g:18543:5: (lv_values_4_0= ruleEStringAllTypes )
            	    {
            	    // InternalSCEst.g:18543:5: (lv_values_4_0= ruleEStringAllTypes )
            	    // InternalSCEst.g:18544:6: lv_values_4_0= ruleEStringAllTypes
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getStringPragmaAccess().getValuesEStringAllTypesParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_125);
            	    lv_values_4_0=ruleEStringAllTypes();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getStringPragmaRule());
            	      						}
            	      						add(
            	      							current,
            	      							"values",
            	      							lv_values_4_0,
            	      							"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop430;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStringPragma"


    // $ANTLR start "entryRuleTypedKeyStringValueAnnotation"
    // InternalSCEst.g:18566:1: entryRuleTypedKeyStringValueAnnotation returns [EObject current=null] : iv_ruleTypedKeyStringValueAnnotation= ruleTypedKeyStringValueAnnotation EOF ;
    public final EObject entryRuleTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypedKeyStringValueAnnotation = null;


        try {
            // InternalSCEst.g:18566:70: (iv_ruleTypedKeyStringValueAnnotation= ruleTypedKeyStringValueAnnotation EOF )
            // InternalSCEst.g:18567:2: iv_ruleTypedKeyStringValueAnnotation= ruleTypedKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypedKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypedKeyStringValueAnnotation=ruleTypedKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypedKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypedKeyStringValueAnnotation"


    // $ANTLR start "ruleTypedKeyStringValueAnnotation"
    // InternalSCEst.g:18573:1: ruleTypedKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringAllTypes ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )* ) ;
    public final EObject ruleTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_type_3_0 = null;

        AntlrDatatypeRuleToken lv_values_5_0 = null;

        AntlrDatatypeRuleToken lv_values_7_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:18579:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringAllTypes ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )* ) )
            // InternalSCEst.g:18580:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringAllTypes ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )* )
            {
            // InternalSCEst.g:18580:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringAllTypes ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )* )
            // InternalSCEst.g:18581:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringAllTypes ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )*
            {
            otherlv_0=(Token)match(input,128,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getTypedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
            // InternalSCEst.g:18585:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCEst.g:18586:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCEst.g:18586:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCEst.g:18587:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_223);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,49,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getTypedKeyStringValueAnnotationAccess().getLeftSquareBracketKeyword_2());
              		
            }
            // InternalSCEst.g:18608:3: ( (lv_type_3_0= ruleExtendedID ) )
            // InternalSCEst.g:18609:4: (lv_type_3_0= ruleExtendedID )
            {
            // InternalSCEst.g:18609:4: (lv_type_3_0= ruleExtendedID )
            // InternalSCEst.g:18610:5: lv_type_3_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypedKeyStringValueAnnotationAccess().getTypeExtendedIDParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_54);
            lv_type_3_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_3_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,50,FollowSets000.FOLLOW_221); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getTypedKeyStringValueAnnotationAccess().getRightSquareBracketKeyword_4());
              		
            }
            // InternalSCEst.g:18631:3: ( (lv_values_5_0= ruleEStringAllTypes ) )
            // InternalSCEst.g:18632:4: (lv_values_5_0= ruleEStringAllTypes )
            {
            // InternalSCEst.g:18632:4: (lv_values_5_0= ruleEStringAllTypes )
            // InternalSCEst.g:18633:5: lv_values_5_0= ruleEStringAllTypes
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_5_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_125);
            lv_values_5_0=ruleEStringAllTypes();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypedKeyStringValueAnnotationRule());
              					}
              					add(
              						current,
              						"values",
              						lv_values_5_0,
              						"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCEst.g:18650:3: (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )*
            loop431:
            do {
                int alt431=2;
                int LA431_0 = input.LA(1);

                if ( (LA431_0==30) ) {
                    alt431=1;
                }


                switch (alt431) {
            	case 1 :
            	    // InternalSCEst.g:18651:4: otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) )
            	    {
            	    otherlv_6=(Token)match(input,30,FollowSets000.FOLLOW_221); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_6, grammarAccess.getTypedKeyStringValueAnnotationAccess().getCommaKeyword_6_0());
            	      			
            	    }
            	    // InternalSCEst.g:18655:4: ( (lv_values_7_0= ruleEStringAllTypes ) )
            	    // InternalSCEst.g:18656:5: (lv_values_7_0= ruleEStringAllTypes )
            	    {
            	    // InternalSCEst.g:18656:5: (lv_values_7_0= ruleEStringAllTypes )
            	    // InternalSCEst.g:18657:6: lv_values_7_0= ruleEStringAllTypes
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_6_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_125);
            	    lv_values_7_0=ruleEStringAllTypes();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTypedKeyStringValueAnnotationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"values",
            	      							lv_values_7_0,
            	      							"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop431;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypedKeyStringValueAnnotation"


    // $ANTLR start "entryRuleRestrictedTypedKeyStringValueAnnotation"
    // InternalSCEst.g:18679:1: entryRuleRestrictedTypedKeyStringValueAnnotation returns [EObject current=null] : iv_ruleRestrictedTypedKeyStringValueAnnotation= ruleRestrictedTypedKeyStringValueAnnotation EOF ;
    public final EObject entryRuleRestrictedTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRestrictedTypedKeyStringValueAnnotation = null;


        try {
            // InternalSCEst.g:18679:80: (iv_ruleRestrictedTypedKeyStringValueAnnotation= ruleRestrictedTypedKeyStringValueAnnotation EOF )
            // InternalSCEst.g:18680:2: iv_ruleRestrictedTypedKeyStringValueAnnotation= ruleRestrictedTypedKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRestrictedTypedKeyStringValueAnnotation=ruleRestrictedTypedKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRestrictedTypedKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRestrictedTypedKeyStringValueAnnotation"


    // $ANTLR start "ruleRestrictedTypedKeyStringValueAnnotation"
    // InternalSCEst.g:18686:1: ruleRestrictedTypedKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringBoolean ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )* ) ;
    public final EObject ruleRestrictedTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_type_3_0 = null;

        AntlrDatatypeRuleToken lv_values_5_0 = null;

        AntlrDatatypeRuleToken lv_values_7_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:18692:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringBoolean ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )* ) )
            // InternalSCEst.g:18693:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringBoolean ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )* )
            {
            // InternalSCEst.g:18693:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringBoolean ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )* )
            // InternalSCEst.g:18694:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringBoolean ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )*
            {
            otherlv_0=(Token)match(input,128,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
            // InternalSCEst.g:18698:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCEst.g:18699:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCEst.g:18699:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCEst.g:18700:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_223);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,49,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getLeftSquareBracketKeyword_2());
              		
            }
            // InternalSCEst.g:18721:3: ( (lv_type_3_0= ruleExtendedID ) )
            // InternalSCEst.g:18722:4: (lv_type_3_0= ruleExtendedID )
            {
            // InternalSCEst.g:18722:4: (lv_type_3_0= ruleExtendedID )
            // InternalSCEst.g:18723:5: lv_type_3_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getTypeExtendedIDParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_54);
            lv_type_3_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_3_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,50,FollowSets000.FOLLOW_222); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getRightSquareBracketKeyword_4());
              		
            }
            // InternalSCEst.g:18744:3: ( (lv_values_5_0= ruleEStringBoolean ) )
            // InternalSCEst.g:18745:4: (lv_values_5_0= ruleEStringBoolean )
            {
            // InternalSCEst.g:18745:4: (lv_values_5_0= ruleEStringBoolean )
            // InternalSCEst.g:18746:5: lv_values_5_0= ruleEStringBoolean
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_5_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_125);
            lv_values_5_0=ruleEStringBoolean();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule());
              					}
              					add(
              						current,
              						"values",
              						lv_values_5_0,
              						"de.cau.cs.kieler.annotations.Annotations.EStringBoolean");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCEst.g:18763:3: (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )*
            loop432:
            do {
                int alt432=2;
                int LA432_0 = input.LA(1);

                if ( (LA432_0==30) ) {
                    alt432=1;
                }


                switch (alt432) {
            	case 1 :
            	    // InternalSCEst.g:18764:4: otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) )
            	    {
            	    otherlv_6=(Token)match(input,30,FollowSets000.FOLLOW_222); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_6, grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getCommaKeyword_6_0());
            	      			
            	    }
            	    // InternalSCEst.g:18768:4: ( (lv_values_7_0= ruleEStringBoolean ) )
            	    // InternalSCEst.g:18769:5: (lv_values_7_0= ruleEStringBoolean )
            	    {
            	    // InternalSCEst.g:18769:5: (lv_values_7_0= ruleEStringBoolean )
            	    // InternalSCEst.g:18770:6: lv_values_7_0= ruleEStringBoolean
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_6_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_125);
            	    lv_values_7_0=ruleEStringBoolean();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"values",
            	      							lv_values_7_0,
            	      							"de.cau.cs.kieler.annotations.Annotations.EStringBoolean");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop432;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRestrictedTypedKeyStringValueAnnotation"


    // $ANTLR start "entryRuleQuotedKeyStringValueAnnotation"
    // InternalSCEst.g:18792:1: entryRuleQuotedKeyStringValueAnnotation returns [EObject current=null] : iv_ruleQuotedKeyStringValueAnnotation= ruleQuotedKeyStringValueAnnotation EOF ;
    public final EObject entryRuleQuotedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQuotedKeyStringValueAnnotation = null;


        try {
            // InternalSCEst.g:18792:71: (iv_ruleQuotedKeyStringValueAnnotation= ruleQuotedKeyStringValueAnnotation EOF )
            // InternalSCEst.g:18793:2: iv_ruleQuotedKeyStringValueAnnotation= ruleQuotedKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQuotedKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleQuotedKeyStringValueAnnotation=ruleQuotedKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQuotedKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQuotedKeyStringValueAnnotation"


    // $ANTLR start "ruleQuotedKeyStringValueAnnotation"
    // InternalSCEst.g:18799:1: ruleQuotedKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )* ) ;
    public final EObject ruleQuotedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_values_2_0=null;
        Token otherlv_3=null;
        Token lv_values_4_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:18805:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )* ) )
            // InternalSCEst.g:18806:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )* )
            {
            // InternalSCEst.g:18806:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )* )
            // InternalSCEst.g:18807:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )*
            {
            otherlv_0=(Token)match(input,128,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getQuotedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
            // InternalSCEst.g:18811:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCEst.g:18812:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCEst.g:18812:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCEst.g:18813:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_175);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getQuotedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCEst.g:18830:3: ( (lv_values_2_0= RULE_STRING ) )
            // InternalSCEst.g:18831:4: (lv_values_2_0= RULE_STRING )
            {
            // InternalSCEst.g:18831:4: (lv_values_2_0= RULE_STRING )
            // InternalSCEst.g:18832:5: lv_values_2_0= RULE_STRING
            {
            lv_values_2_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_125); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_values_2_0, grammarAccess.getQuotedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getQuotedKeyStringValueAnnotationRule());
              					}
              					addWithLastConsumed(
              						current,
              						"values",
              						lv_values_2_0,
              						"de.cau.cs.kieler.esterel.Esterel.STRING");
              				
            }

            }


            }

            // InternalSCEst.g:18848:3: (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )*
            loop433:
            do {
                int alt433=2;
                int LA433_0 = input.LA(1);

                if ( (LA433_0==30) ) {
                    alt433=1;
                }


                switch (alt433) {
            	case 1 :
            	    // InternalSCEst.g:18849:4: otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) )
            	    {
            	    otherlv_3=(Token)match(input,30,FollowSets000.FOLLOW_175); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getQuotedKeyStringValueAnnotationAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalSCEst.g:18853:4: ( (lv_values_4_0= RULE_STRING ) )
            	    // InternalSCEst.g:18854:5: (lv_values_4_0= RULE_STRING )
            	    {
            	    // InternalSCEst.g:18854:5: (lv_values_4_0= RULE_STRING )
            	    // InternalSCEst.g:18855:6: lv_values_4_0= RULE_STRING
            	    {
            	    lv_values_4_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_125); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_values_4_0, grammarAccess.getQuotedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_3_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getQuotedKeyStringValueAnnotationRule());
            	      						}
            	      						addWithLastConsumed(
            	      							current,
            	      							"values",
            	      							lv_values_4_0,
            	      							"de.cau.cs.kieler.esterel.Esterel.STRING");
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop433;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQuotedKeyStringValueAnnotation"


    // $ANTLR start "entryRuleQuotedTypedKeyStringValueAnnotation"
    // InternalSCEst.g:18876:1: entryRuleQuotedTypedKeyStringValueAnnotation returns [EObject current=null] : iv_ruleQuotedTypedKeyStringValueAnnotation= ruleQuotedTypedKeyStringValueAnnotation EOF ;
    public final EObject entryRuleQuotedTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQuotedTypedKeyStringValueAnnotation = null;


        try {
            // InternalSCEst.g:18876:76: (iv_ruleQuotedTypedKeyStringValueAnnotation= ruleQuotedTypedKeyStringValueAnnotation EOF )
            // InternalSCEst.g:18877:2: iv_ruleQuotedTypedKeyStringValueAnnotation= ruleQuotedTypedKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleQuotedTypedKeyStringValueAnnotation=ruleQuotedTypedKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQuotedTypedKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQuotedTypedKeyStringValueAnnotation"


    // $ANTLR start "ruleQuotedTypedKeyStringValueAnnotation"
    // InternalSCEst.g:18883:1: ruleQuotedTypedKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= RULE_STRING ) ) (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )* ) ;
    public final EObject ruleQuotedTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_values_5_0=null;
        Token otherlv_6=null;
        Token lv_values_7_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_type_3_0 = null;



        	enterRule();

        try {
            // InternalSCEst.g:18889:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= RULE_STRING ) ) (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )* ) )
            // InternalSCEst.g:18890:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= RULE_STRING ) ) (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )* )
            {
            // InternalSCEst.g:18890:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= RULE_STRING ) ) (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )* )
            // InternalSCEst.g:18891:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= RULE_STRING ) ) (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )*
            {
            otherlv_0=(Token)match(input,128,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
            // InternalSCEst.g:18895:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCEst.g:18896:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCEst.g:18896:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCEst.g:18897:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_223);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,49,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getLeftSquareBracketKeyword_2());
              		
            }
            // InternalSCEst.g:18918:3: ( (lv_type_3_0= ruleExtendedID ) )
            // InternalSCEst.g:18919:4: (lv_type_3_0= ruleExtendedID )
            {
            // InternalSCEst.g:18919:4: (lv_type_3_0= ruleExtendedID )
            // InternalSCEst.g:18920:5: lv_type_3_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getTypeExtendedIDParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_54);
            lv_type_3_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_3_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,50,FollowSets000.FOLLOW_175); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getRightSquareBracketKeyword_4());
              		
            }
            // InternalSCEst.g:18941:3: ( (lv_values_5_0= RULE_STRING ) )
            // InternalSCEst.g:18942:4: (lv_values_5_0= RULE_STRING )
            {
            // InternalSCEst.g:18942:4: (lv_values_5_0= RULE_STRING )
            // InternalSCEst.g:18943:5: lv_values_5_0= RULE_STRING
            {
            lv_values_5_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_125); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_values_5_0, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_5_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule());
              					}
              					addWithLastConsumed(
              						current,
              						"values",
              						lv_values_5_0,
              						"de.cau.cs.kieler.esterel.Esterel.STRING");
              				
            }

            }


            }

            // InternalSCEst.g:18959:3: (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )*
            loop434:
            do {
                int alt434=2;
                int LA434_0 = input.LA(1);

                if ( (LA434_0==30) ) {
                    alt434=1;
                }


                switch (alt434) {
            	case 1 :
            	    // InternalSCEst.g:18960:4: otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) )
            	    {
            	    otherlv_6=(Token)match(input,30,FollowSets000.FOLLOW_175); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_6, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getCommaKeyword_6_0());
            	      			
            	    }
            	    // InternalSCEst.g:18964:4: ( (lv_values_7_0= RULE_STRING ) )
            	    // InternalSCEst.g:18965:5: (lv_values_7_0= RULE_STRING )
            	    {
            	    // InternalSCEst.g:18965:5: (lv_values_7_0= RULE_STRING )
            	    // InternalSCEst.g:18966:6: lv_values_7_0= RULE_STRING
            	    {
            	    lv_values_7_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_125); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_values_7_0, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_6_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule());
            	      						}
            	      						addWithLastConsumed(
            	      							current,
            	      							"values",
            	      							lv_values_7_0,
            	      							"de.cau.cs.kieler.esterel.Esterel.STRING");
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop434;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQuotedTypedKeyStringValueAnnotation"


    // $ANTLR start "entryRuleEStringBoolean"
    // InternalSCEst.g:18987:1: entryRuleEStringBoolean returns [String current=null] : iv_ruleEStringBoolean= ruleEStringBoolean EOF ;
    public final String entryRuleEStringBoolean() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEStringBoolean = null;


        try {
            // InternalSCEst.g:18987:54: (iv_ruleEStringBoolean= ruleEStringBoolean EOF )
            // InternalSCEst.g:18988:2: iv_ruleEStringBoolean= ruleEStringBoolean EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEStringBooleanRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEStringBoolean=ruleEStringBoolean();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEStringBoolean.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEStringBoolean"


    // $ANTLR start "ruleEStringBoolean"
    // InternalSCEst.g:18994:1: ruleEStringBoolean returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN ) ;
    public final AntlrDatatypeRuleToken ruleEStringBoolean() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_0=null;
        Token this_BOOLEAN_2=null;
        AntlrDatatypeRuleToken this_ExtendedID_1 = null;



        	enterRule();

        try {
            // InternalSCEst.g:19000:2: ( (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN ) )
            // InternalSCEst.g:19001:2: (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN )
            {
            // InternalSCEst.g:19001:2: (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN )
            int alt435=3;
            switch ( input.LA(1) ) {
            case RULE_STRING:
                {
                alt435=1;
                }
                break;
            case RULE_ID:
                {
                alt435=2;
                }
                break;
            case RULE_BOOLEAN:
                {
                alt435=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 435, 0, input);

                throw nvae;
            }

            switch (alt435) {
                case 1 :
                    // InternalSCEst.g:19002:3: this_STRING_0= RULE_STRING
                    {
                    this_STRING_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_STRING_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_STRING_0, grammarAccess.getEStringBooleanAccess().getSTRINGTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCEst.g:19010:3: this_ExtendedID_1= ruleExtendedID
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEStringBooleanAccess().getExtendedIDParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ExtendedID_1=ruleExtendedID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ExtendedID_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCEst.g:19021:3: this_BOOLEAN_2= RULE_BOOLEAN
                    {
                    this_BOOLEAN_2=(Token)match(input,RULE_BOOLEAN,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_BOOLEAN_2);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_BOOLEAN_2, grammarAccess.getEStringBooleanAccess().getBOOLEANTerminalRuleCall_2());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEStringBoolean"


    // $ANTLR start "entryRuleEStringAllTypes"
    // InternalSCEst.g:19032:1: entryRuleEStringAllTypes returns [String current=null] : iv_ruleEStringAllTypes= ruleEStringAllTypes EOF ;
    public final String entryRuleEStringAllTypes() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEStringAllTypes = null;


        try {
            // InternalSCEst.g:19032:55: (iv_ruleEStringAllTypes= ruleEStringAllTypes EOF )
            // InternalSCEst.g:19033:2: iv_ruleEStringAllTypes= ruleEStringAllTypes EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEStringAllTypesRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEStringAllTypes=ruleEStringAllTypes();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEStringAllTypes.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEStringAllTypes"


    // $ANTLR start "ruleEStringAllTypes"
    // InternalSCEst.g:19039:1: ruleEStringAllTypes returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN | this_Integer_3= ruleInteger | this_Floateger_4= ruleFloateger ) ;
    public final AntlrDatatypeRuleToken ruleEStringAllTypes() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_0=null;
        Token this_BOOLEAN_2=null;
        AntlrDatatypeRuleToken this_ExtendedID_1 = null;

        AntlrDatatypeRuleToken this_Integer_3 = null;

        AntlrDatatypeRuleToken this_Floateger_4 = null;



        	enterRule();

        try {
            // InternalSCEst.g:19045:2: ( (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN | this_Integer_3= ruleInteger | this_Floateger_4= ruleFloateger ) )
            // InternalSCEst.g:19046:2: (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN | this_Integer_3= ruleInteger | this_Floateger_4= ruleFloateger )
            {
            // InternalSCEst.g:19046:2: (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN | this_Integer_3= ruleInteger | this_Floateger_4= ruleFloateger )
            int alt436=5;
            switch ( input.LA(1) ) {
            case RULE_STRING:
                {
                alt436=1;
                }
                break;
            case RULE_ID:
                {
                alt436=2;
                }
                break;
            case RULE_BOOLEAN:
                {
                alt436=3;
                }
                break;
            case 84:
                {
                int LA436_4 = input.LA(2);

                if ( (LA436_4==RULE_INT) ) {
                    alt436=4;
                }
                else if ( (LA436_4==RULE_FLOAT) ) {
                    alt436=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 436, 4, input);

                    throw nvae;
                }
                }
                break;
            case RULE_INT:
                {
                alt436=4;
                }
                break;
            case RULE_FLOAT:
                {
                alt436=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 436, 0, input);

                throw nvae;
            }

            switch (alt436) {
                case 1 :
                    // InternalSCEst.g:19047:3: this_STRING_0= RULE_STRING
                    {
                    this_STRING_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_STRING_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_STRING_0, grammarAccess.getEStringAllTypesAccess().getSTRINGTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCEst.g:19055:3: this_ExtendedID_1= ruleExtendedID
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEStringAllTypesAccess().getExtendedIDParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ExtendedID_1=ruleExtendedID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ExtendedID_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCEst.g:19066:3: this_BOOLEAN_2= RULE_BOOLEAN
                    {
                    this_BOOLEAN_2=(Token)match(input,RULE_BOOLEAN,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_BOOLEAN_2);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_BOOLEAN_2, grammarAccess.getEStringAllTypesAccess().getBOOLEANTerminalRuleCall_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSCEst.g:19074:3: this_Integer_3= ruleInteger
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEStringAllTypesAccess().getIntegerParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Integer_3=ruleInteger();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_Integer_3);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalSCEst.g:19085:3: this_Floateger_4= ruleFloateger
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEStringAllTypesAccess().getFloategerParserRuleCall_4());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Floateger_4=ruleFloateger();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_Floateger_4);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEStringAllTypes"


    // $ANTLR start "entryRuleExtendedID"
    // InternalSCEst.g:19099:1: entryRuleExtendedID returns [String current=null] : iv_ruleExtendedID= ruleExtendedID EOF ;
    public final String entryRuleExtendedID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleExtendedID = null;


        try {
            // InternalSCEst.g:19099:50: (iv_ruleExtendedID= ruleExtendedID EOF )
            // InternalSCEst.g:19100:2: iv_ruleExtendedID= ruleExtendedID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExtendedIDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleExtendedID=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExtendedID.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExtendedID"


    // $ANTLR start "ruleExtendedID"
    // InternalSCEst.g:19106:1: ruleExtendedID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ID_0= RULE_ID ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )* (kw= '#' this_INT_5= RULE_INT )? ) ;
    public final AntlrDatatypeRuleToken ruleExtendedID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;
        Token kw=null;
        Token this_ID_3=null;
        Token this_INT_5=null;


        	enterRule();

        try {
            // InternalSCEst.g:19112:2: ( (this_ID_0= RULE_ID ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )* (kw= '#' this_INT_5= RULE_INT )? ) )
            // InternalSCEst.g:19113:2: (this_ID_0= RULE_ID ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )* (kw= '#' this_INT_5= RULE_INT )? )
            {
            // InternalSCEst.g:19113:2: (this_ID_0= RULE_ID ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )* (kw= '#' this_INT_5= RULE_INT )? )
            // InternalSCEst.g:19114:3: this_ID_0= RULE_ID ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )* (kw= '#' this_INT_5= RULE_INT )?
            {
            this_ID_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_224); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_ID_0);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_ID_0, grammarAccess.getExtendedIDAccess().getIDTerminalRuleCall_0());
              		
            }
            // InternalSCEst.g:19121:3: ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )*
            loop438:
            do {
                int alt438=2;
                int LA438_0 = input.LA(1);

                if ( (LA438_0==84) ) {
                    int LA438_2 = input.LA(2);

                    if ( (LA438_2==RULE_ID) ) {
                        alt438=1;
                    }


                }
                else if ( (LA438_0==20) ) {
                    alt438=1;
                }


                switch (alt438) {
            	case 1 :
            	    // InternalSCEst.g:19122:4: (kw= '.' | kw= '-' ) this_ID_3= RULE_ID
            	    {
            	    // InternalSCEst.g:19122:4: (kw= '.' | kw= '-' )
            	    int alt437=2;
            	    int LA437_0 = input.LA(1);

            	    if ( (LA437_0==20) ) {
            	        alt437=1;
            	    }
            	    else if ( (LA437_0==84) ) {
            	        alt437=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 437, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt437) {
            	        case 1 :
            	            // InternalSCEst.g:19123:5: kw= '.'
            	            {
            	            kw=(Token)match(input,20,FollowSets000.FOLLOW_6); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(kw);
            	              					newLeafNode(kw, grammarAccess.getExtendedIDAccess().getFullStopKeyword_1_0_0());
            	              				
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalSCEst.g:19129:5: kw= '-'
            	            {
            	            kw=(Token)match(input,84,FollowSets000.FOLLOW_6); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(kw);
            	              					newLeafNode(kw, grammarAccess.getExtendedIDAccess().getHyphenMinusKeyword_1_0_1());
            	              				
            	            }

            	            }
            	            break;

            	    }

            	    this_ID_3=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_224); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(this_ID_3);
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(this_ID_3, grammarAccess.getExtendedIDAccess().getIDTerminalRuleCall_1_1());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop438;
                }
            } while (true);

            // InternalSCEst.g:19143:3: (kw= '#' this_INT_5= RULE_INT )?
            int alt439=2;
            int LA439_0 = input.LA(1);

            if ( (LA439_0==44) ) {
                int LA439_1 = input.LA(2);

                if ( (LA439_1==RULE_INT) ) {
                    alt439=1;
                }
            }
            switch (alt439) {
                case 1 :
                    // InternalSCEst.g:19144:4: kw= '#' this_INT_5= RULE_INT
                    {
                    kw=(Token)match(input,44,FollowSets000.FOLLOW_216); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getExtendedIDAccess().getNumberSignKeyword_2_0());
                      			
                    }
                    this_INT_5=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_INT_5);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_INT_5, grammarAccess.getExtendedIDAccess().getINTTerminalRuleCall_2_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExtendedID"


    // $ANTLR start "entryRuleInteger"
    // InternalSCEst.g:19161:1: entryRuleInteger returns [String current=null] : iv_ruleInteger= ruleInteger EOF ;
    public final String entryRuleInteger() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleInteger = null;


        try {
            // InternalSCEst.g:19161:47: (iv_ruleInteger= ruleInteger EOF )
            // InternalSCEst.g:19162:2: iv_ruleInteger= ruleInteger EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIntegerRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleInteger=ruleInteger();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInteger.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInteger"


    // $ANTLR start "ruleInteger"
    // InternalSCEst.g:19168:1: ruleInteger returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= '-' )? this_INT_1= RULE_INT ) ;
    public final AntlrDatatypeRuleToken ruleInteger() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_INT_1=null;


        	enterRule();

        try {
            // InternalSCEst.g:19174:2: ( ( (kw= '-' )? this_INT_1= RULE_INT ) )
            // InternalSCEst.g:19175:2: ( (kw= '-' )? this_INT_1= RULE_INT )
            {
            // InternalSCEst.g:19175:2: ( (kw= '-' )? this_INT_1= RULE_INT )
            // InternalSCEst.g:19176:3: (kw= '-' )? this_INT_1= RULE_INT
            {
            // InternalSCEst.g:19176:3: (kw= '-' )?
            int alt440=2;
            int LA440_0 = input.LA(1);

            if ( (LA440_0==84) ) {
                alt440=1;
            }
            switch (alt440) {
                case 1 :
                    // InternalSCEst.g:19177:4: kw= '-'
                    {
                    kw=(Token)match(input,84,FollowSets000.FOLLOW_216); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getIntegerAccess().getHyphenMinusKeyword_0());
                      			
                    }

                    }
                    break;

            }

            this_INT_1=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_INT_1);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_INT_1, grammarAccess.getIntegerAccess().getINTTerminalRuleCall_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInteger"


    // $ANTLR start "entryRuleFloateger"
    // InternalSCEst.g:19194:1: entryRuleFloateger returns [String current=null] : iv_ruleFloateger= ruleFloateger EOF ;
    public final String entryRuleFloateger() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleFloateger = null;


        try {
            // InternalSCEst.g:19194:49: (iv_ruleFloateger= ruleFloateger EOF )
            // InternalSCEst.g:19195:2: iv_ruleFloateger= ruleFloateger EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFloategerRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFloateger=ruleFloateger();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFloateger.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFloateger"


    // $ANTLR start "ruleFloateger"
    // InternalSCEst.g:19201:1: ruleFloateger returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= '-' )? this_FLOAT_1= RULE_FLOAT ) ;
    public final AntlrDatatypeRuleToken ruleFloateger() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_FLOAT_1=null;


        	enterRule();

        try {
            // InternalSCEst.g:19207:2: ( ( (kw= '-' )? this_FLOAT_1= RULE_FLOAT ) )
            // InternalSCEst.g:19208:2: ( (kw= '-' )? this_FLOAT_1= RULE_FLOAT )
            {
            // InternalSCEst.g:19208:2: ( (kw= '-' )? this_FLOAT_1= RULE_FLOAT )
            // InternalSCEst.g:19209:3: (kw= '-' )? this_FLOAT_1= RULE_FLOAT
            {
            // InternalSCEst.g:19209:3: (kw= '-' )?
            int alt441=2;
            int LA441_0 = input.LA(1);

            if ( (LA441_0==84) ) {
                alt441=1;
            }
            switch (alt441) {
                case 1 :
                    // InternalSCEst.g:19210:4: kw= '-'
                    {
                    kw=(Token)match(input,84,FollowSets000.FOLLOW_225); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getFloategerAccess().getHyphenMinusKeyword_0());
                      			
                    }

                    }
                    break;

            }

            this_FLOAT_1=(Token)match(input,RULE_FLOAT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_FLOAT_1);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_FLOAT_1, grammarAccess.getFloategerAccess().getFLOATTerminalRuleCall_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFloateger"


    // $ANTLR start "ruleEsterelCompareOperator"
    // InternalSCEst.g:19227:1: ruleEsterelCompareOperator returns [Enumerator current=null] : ( (enumLiteral_0= '=' ) | (enumLiteral_1= '<' ) | (enumLiteral_2= '<=' ) | (enumLiteral_3= '>' ) | (enumLiteral_4= '>=' ) | (enumLiteral_5= '<>' ) ) ;
    public final Enumerator ruleEsterelCompareOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;


        	enterRule();

        try {
            // InternalSCEst.g:19233:2: ( ( (enumLiteral_0= '=' ) | (enumLiteral_1= '<' ) | (enumLiteral_2= '<=' ) | (enumLiteral_3= '>' ) | (enumLiteral_4= '>=' ) | (enumLiteral_5= '<>' ) ) )
            // InternalSCEst.g:19234:2: ( (enumLiteral_0= '=' ) | (enumLiteral_1= '<' ) | (enumLiteral_2= '<=' ) | (enumLiteral_3= '>' ) | (enumLiteral_4= '>=' ) | (enumLiteral_5= '<>' ) )
            {
            // InternalSCEst.g:19234:2: ( (enumLiteral_0= '=' ) | (enumLiteral_1= '<' ) | (enumLiteral_2= '<=' ) | (enumLiteral_3= '>' ) | (enumLiteral_4= '>=' ) | (enumLiteral_5= '<>' ) )
            int alt442=6;
            switch ( input.LA(1) ) {
            case 32:
                {
                alt442=1;
                }
                break;
            case 88:
                {
                alt442=2;
                }
                break;
            case 89:
                {
                alt442=3;
                }
                break;
            case 87:
                {
                alt442=4;
                }
                break;
            case 90:
                {
                alt442=5;
                }
                break;
            case 86:
                {
                alt442=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 442, 0, input);

                throw nvae;
            }

            switch (alt442) {
                case 1 :
                    // InternalSCEst.g:19235:3: (enumLiteral_0= '=' )
                    {
                    // InternalSCEst.g:19235:3: (enumLiteral_0= '=' )
                    // InternalSCEst.g:19236:4: enumLiteral_0= '='
                    {
                    enumLiteral_0=(Token)match(input,32,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getEsterelCompareOperatorAccess().getEQEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getEsterelCompareOperatorAccess().getEQEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCEst.g:19243:3: (enumLiteral_1= '<' )
                    {
                    // InternalSCEst.g:19243:3: (enumLiteral_1= '<' )
                    // InternalSCEst.g:19244:4: enumLiteral_1= '<'
                    {
                    enumLiteral_1=(Token)match(input,88,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getEsterelCompareOperatorAccess().getLTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getEsterelCompareOperatorAccess().getLTEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSCEst.g:19251:3: (enumLiteral_2= '<=' )
                    {
                    // InternalSCEst.g:19251:3: (enumLiteral_2= '<=' )
                    // InternalSCEst.g:19252:4: enumLiteral_2= '<='
                    {
                    enumLiteral_2=(Token)match(input,89,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getEsterelCompareOperatorAccess().getLEQEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getEsterelCompareOperatorAccess().getLEQEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSCEst.g:19259:3: (enumLiteral_3= '>' )
                    {
                    // InternalSCEst.g:19259:3: (enumLiteral_3= '>' )
                    // InternalSCEst.g:19260:4: enumLiteral_3= '>'
                    {
                    enumLiteral_3=(Token)match(input,87,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getEsterelCompareOperatorAccess().getGTEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getEsterelCompareOperatorAccess().getGTEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSCEst.g:19267:3: (enumLiteral_4= '>=' )
                    {
                    // InternalSCEst.g:19267:3: (enumLiteral_4= '>=' )
                    // InternalSCEst.g:19268:4: enumLiteral_4= '>='
                    {
                    enumLiteral_4=(Token)match(input,90,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getEsterelCompareOperatorAccess().getGEQEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getEsterelCompareOperatorAccess().getGEQEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSCEst.g:19275:3: (enumLiteral_5= '<>' )
                    {
                    // InternalSCEst.g:19275:3: (enumLiteral_5= '<>' )
                    // InternalSCEst.g:19276:4: enumLiteral_5= '<>'
                    {
                    enumLiteral_5=(Token)match(input,86,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getEsterelCompareOperatorAccess().getNEEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_5, grammarAccess.getEsterelCompareOperatorAccess().getNEEnumLiteralDeclaration_5());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEsterelCompareOperator"


    // $ANTLR start "ruleEsterelPreOperator"
    // InternalSCEst.g:19286:1: ruleEsterelPreOperator returns [Enumerator current=null] : (enumLiteral_0= 'pre' ) ;
    public final Enumerator ruleEsterelPreOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCEst.g:19292:2: ( (enumLiteral_0= 'pre' ) )
            // InternalSCEst.g:19293:2: (enumLiteral_0= 'pre' )
            {
            // InternalSCEst.g:19293:2: (enumLiteral_0= 'pre' )
            // InternalSCEst.g:19294:3: enumLiteral_0= 'pre'
            {
            enumLiteral_0=(Token)match(input,129,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getEsterelPreOperatorAccess().getPREEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getEsterelPreOperatorAccess().getPREEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEsterelPreOperator"


    // $ANTLR start "ruleEsterelOrOperator"
    // InternalSCEst.g:19303:1: ruleEsterelOrOperator returns [Enumerator current=null] : (enumLiteral_0= 'or' ) ;
    public final Enumerator ruleEsterelOrOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCEst.g:19309:2: ( (enumLiteral_0= 'or' ) )
            // InternalSCEst.g:19310:2: (enumLiteral_0= 'or' )
            {
            // InternalSCEst.g:19310:2: (enumLiteral_0= 'or' )
            // InternalSCEst.g:19311:3: enumLiteral_0= 'or'
            {
            enumLiteral_0=(Token)match(input,93,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getEsterelOrOperatorAccess().getLOGICAL_OREnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getEsterelOrOperatorAccess().getLOGICAL_OREnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEsterelOrOperator"


    // $ANTLR start "ruleEsterelAndOperator"
    // InternalSCEst.g:19320:1: ruleEsterelAndOperator returns [Enumerator current=null] : (enumLiteral_0= 'and' ) ;
    public final Enumerator ruleEsterelAndOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCEst.g:19326:2: ( (enumLiteral_0= 'and' ) )
            // InternalSCEst.g:19327:2: (enumLiteral_0= 'and' )
            {
            // InternalSCEst.g:19327:2: (enumLiteral_0= 'and' )
            // InternalSCEst.g:19328:3: enumLiteral_0= 'and'
            {
            enumLiteral_0=(Token)match(input,92,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getEsterelAndOperatorAccess().getLOGICAL_ANDEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getEsterelAndOperatorAccess().getLOGICAL_ANDEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEsterelAndOperator"


    // $ANTLR start "ruleEsterelNotOperator"
    // InternalSCEst.g:19337:1: ruleEsterelNotOperator returns [Enumerator current=null] : (enumLiteral_0= 'not' ) ;
    public final Enumerator ruleEsterelNotOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCEst.g:19343:2: ( (enumLiteral_0= 'not' ) )
            // InternalSCEst.g:19344:2: (enumLiteral_0= 'not' )
            {
            // InternalSCEst.g:19344:2: (enumLiteral_0= 'not' )
            // InternalSCEst.g:19345:3: enumLiteral_0= 'not'
            {
            enumLiteral_0=(Token)match(input,91,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getEsterelNotOperatorAccess().getNOTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getEsterelNotOperatorAccess().getNOTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEsterelNotOperator"


    // $ANTLR start "ruleEsterelAddOperator"
    // InternalSCEst.g:19354:1: ruleEsterelAddOperator returns [Enumerator current=null] : (enumLiteral_0= '+' ) ;
    public final Enumerator ruleEsterelAddOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCEst.g:19360:2: ( (enumLiteral_0= '+' ) )
            // InternalSCEst.g:19361:2: (enumLiteral_0= '+' )
            {
            // InternalSCEst.g:19361:2: (enumLiteral_0= '+' )
            // InternalSCEst.g:19362:3: enumLiteral_0= '+'
            {
            enumLiteral_0=(Token)match(input,83,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getEsterelAddOperatorAccess().getADDEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getEsterelAddOperatorAccess().getADDEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEsterelAddOperator"


    // $ANTLR start "ruleEsterelSubOperator"
    // InternalSCEst.g:19371:1: ruleEsterelSubOperator returns [Enumerator current=null] : (enumLiteral_0= '-' ) ;
    public final Enumerator ruleEsterelSubOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCEst.g:19377:2: ( (enumLiteral_0= '-' ) )
            // InternalSCEst.g:19378:2: (enumLiteral_0= '-' )
            {
            // InternalSCEst.g:19378:2: (enumLiteral_0= '-' )
            // InternalSCEst.g:19379:3: enumLiteral_0= '-'
            {
            enumLiteral_0=(Token)match(input,84,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getEsterelSubOperatorAccess().getSUBEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getEsterelSubOperatorAccess().getSUBEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEsterelSubOperator"


    // $ANTLR start "ruleEsterelMultOperator"
    // InternalSCEst.g:19388:1: ruleEsterelMultOperator returns [Enumerator current=null] : (enumLiteral_0= '*' ) ;
    public final Enumerator ruleEsterelMultOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCEst.g:19394:2: ( (enumLiteral_0= '*' ) )
            // InternalSCEst.g:19395:2: (enumLiteral_0= '*' )
            {
            // InternalSCEst.g:19395:2: (enumLiteral_0= '*' )
            // InternalSCEst.g:19396:3: enumLiteral_0= '*'
            {
            enumLiteral_0=(Token)match(input,82,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getEsterelMultOperatorAccess().getMULTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getEsterelMultOperatorAccess().getMULTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEsterelMultOperator"


    // $ANTLR start "ruleEsterelModOperator"
    // InternalSCEst.g:19405:1: ruleEsterelModOperator returns [Enumerator current=null] : (enumLiteral_0= 'mod' ) ;
    public final Enumerator ruleEsterelModOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCEst.g:19411:2: ( (enumLiteral_0= 'mod' ) )
            // InternalSCEst.g:19412:2: (enumLiteral_0= 'mod' )
            {
            // InternalSCEst.g:19412:2: (enumLiteral_0= 'mod' )
            // InternalSCEst.g:19413:3: enumLiteral_0= 'mod'
            {
            enumLiteral_0=(Token)match(input,85,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getEsterelModOperatorAccess().getMODEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getEsterelModOperatorAccess().getMODEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEsterelModOperator"


    // $ANTLR start "ruleEsterelDivOperator"
    // InternalSCEst.g:19422:1: ruleEsterelDivOperator returns [Enumerator current=null] : (enumLiteral_0= '/' ) ;
    public final Enumerator ruleEsterelDivOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCEst.g:19428:2: ( (enumLiteral_0= '/' ) )
            // InternalSCEst.g:19429:2: (enumLiteral_0= '/' )
            {
            // InternalSCEst.g:19429:2: (enumLiteral_0= '/' )
            // InternalSCEst.g:19430:3: enumLiteral_0= '/'
            {
            enumLiteral_0=(Token)match(input,81,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getEsterelDivOperatorAccess().getDIVEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getEsterelDivOperatorAccess().getDIVEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEsterelDivOperator"


    // $ANTLR start "ruleEsterelValueTestOperator"
    // InternalSCEst.g:19439:1: ruleEsterelValueTestOperator returns [Enumerator current=null] : (enumLiteral_0= '?' ) ;
    public final Enumerator ruleEsterelValueTestOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCEst.g:19445:2: ( (enumLiteral_0= '?' ) )
            // InternalSCEst.g:19446:2: (enumLiteral_0= '?' )
            {
            // InternalSCEst.g:19446:2: (enumLiteral_0= '?' )
            // InternalSCEst.g:19447:3: enumLiteral_0= '?'
            {
            enumLiteral_0=(Token)match(input,130,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getEsterelValueTestOperatorAccess().getVALEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getEsterelValueTestOperatorAccess().getVALEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEsterelValueTestOperator"


    // $ANTLR start "ruleEsterelValueType"
    // InternalSCEst.g:19456:1: ruleEsterelValueType returns [Enumerator current=null] : ( (enumLiteral_0= 'pure' ) | (enumLiteral_1= 'boolean' ) | (enumLiteral_2= 'unsigned' ) | (enumLiteral_3= 'integer' ) | (enumLiteral_4= 'float' ) | (enumLiteral_5= 'double' ) | (enumLiteral_6= 'string' ) | (enumLiteral_7= 'host' ) ) ;
    public final Enumerator ruleEsterelValueType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;
        Token enumLiteral_6=null;
        Token enumLiteral_7=null;


        	enterRule();

        try {
            // InternalSCEst.g:19462:2: ( ( (enumLiteral_0= 'pure' ) | (enumLiteral_1= 'boolean' ) | (enumLiteral_2= 'unsigned' ) | (enumLiteral_3= 'integer' ) | (enumLiteral_4= 'float' ) | (enumLiteral_5= 'double' ) | (enumLiteral_6= 'string' ) | (enumLiteral_7= 'host' ) ) )
            // InternalSCEst.g:19463:2: ( (enumLiteral_0= 'pure' ) | (enumLiteral_1= 'boolean' ) | (enumLiteral_2= 'unsigned' ) | (enumLiteral_3= 'integer' ) | (enumLiteral_4= 'float' ) | (enumLiteral_5= 'double' ) | (enumLiteral_6= 'string' ) | (enumLiteral_7= 'host' ) )
            {
            // InternalSCEst.g:19463:2: ( (enumLiteral_0= 'pure' ) | (enumLiteral_1= 'boolean' ) | (enumLiteral_2= 'unsigned' ) | (enumLiteral_3= 'integer' ) | (enumLiteral_4= 'float' ) | (enumLiteral_5= 'double' ) | (enumLiteral_6= 'string' ) | (enumLiteral_7= 'host' ) )
            int alt443=8;
            switch ( input.LA(1) ) {
            case 131:
                {
                alt443=1;
                }
                break;
            case 132:
                {
                alt443=2;
                }
                break;
            case 133:
                {
                alt443=3;
                }
                break;
            case 134:
                {
                alt443=4;
                }
                break;
            case 135:
                {
                alt443=5;
                }
                break;
            case 136:
                {
                alt443=6;
                }
                break;
            case 137:
                {
                alt443=7;
                }
                break;
            case 138:
                {
                alt443=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 443, 0, input);

                throw nvae;
            }

            switch (alt443) {
                case 1 :
                    // InternalSCEst.g:19464:3: (enumLiteral_0= 'pure' )
                    {
                    // InternalSCEst.g:19464:3: (enumLiteral_0= 'pure' )
                    // InternalSCEst.g:19465:4: enumLiteral_0= 'pure'
                    {
                    enumLiteral_0=(Token)match(input,131,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getEsterelValueTypeAccess().getPUREEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getEsterelValueTypeAccess().getPUREEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCEst.g:19472:3: (enumLiteral_1= 'boolean' )
                    {
                    // InternalSCEst.g:19472:3: (enumLiteral_1= 'boolean' )
                    // InternalSCEst.g:19473:4: enumLiteral_1= 'boolean'
                    {
                    enumLiteral_1=(Token)match(input,132,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getEsterelValueTypeAccess().getBOOLEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getEsterelValueTypeAccess().getBOOLEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSCEst.g:19480:3: (enumLiteral_2= 'unsigned' )
                    {
                    // InternalSCEst.g:19480:3: (enumLiteral_2= 'unsigned' )
                    // InternalSCEst.g:19481:4: enumLiteral_2= 'unsigned'
                    {
                    enumLiteral_2=(Token)match(input,133,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getEsterelValueTypeAccess().getUNSIGNEDEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getEsterelValueTypeAccess().getUNSIGNEDEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSCEst.g:19488:3: (enumLiteral_3= 'integer' )
                    {
                    // InternalSCEst.g:19488:3: (enumLiteral_3= 'integer' )
                    // InternalSCEst.g:19489:4: enumLiteral_3= 'integer'
                    {
                    enumLiteral_3=(Token)match(input,134,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getEsterelValueTypeAccess().getINTEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getEsterelValueTypeAccess().getINTEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSCEst.g:19496:3: (enumLiteral_4= 'float' )
                    {
                    // InternalSCEst.g:19496:3: (enumLiteral_4= 'float' )
                    // InternalSCEst.g:19497:4: enumLiteral_4= 'float'
                    {
                    enumLiteral_4=(Token)match(input,135,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getEsterelValueTypeAccess().getFLOATEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getEsterelValueTypeAccess().getFLOATEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSCEst.g:19504:3: (enumLiteral_5= 'double' )
                    {
                    // InternalSCEst.g:19504:3: (enumLiteral_5= 'double' )
                    // InternalSCEst.g:19505:4: enumLiteral_5= 'double'
                    {
                    enumLiteral_5=(Token)match(input,136,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getEsterelValueTypeAccess().getDOUBLEEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_5, grammarAccess.getEsterelValueTypeAccess().getDOUBLEEnumLiteralDeclaration_5());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSCEst.g:19512:3: (enumLiteral_6= 'string' )
                    {
                    // InternalSCEst.g:19512:3: (enumLiteral_6= 'string' )
                    // InternalSCEst.g:19513:4: enumLiteral_6= 'string'
                    {
                    enumLiteral_6=(Token)match(input,137,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getEsterelValueTypeAccess().getSTRINGEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_6, grammarAccess.getEsterelValueTypeAccess().getSTRINGEnumLiteralDeclaration_6());
                      			
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSCEst.g:19520:3: (enumLiteral_7= 'host' )
                    {
                    // InternalSCEst.g:19520:3: (enumLiteral_7= 'host' )
                    // InternalSCEst.g:19521:4: enumLiteral_7= 'host'
                    {
                    enumLiteral_7=(Token)match(input,138,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getEsterelValueTypeAccess().getHOSTEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_7, grammarAccess.getEsterelValueTypeAccess().getHOSTEnumLiteralDeclaration_7());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEsterelValueType"


    // $ANTLR start "ruleEsterelCombineOperator"
    // InternalSCEst.g:19531:1: ruleEsterelCombineOperator returns [Enumerator current=null] : ( (enumLiteral_0= 'none' ) | (enumLiteral_1= '+' ) | (enumLiteral_2= '*' ) | (enumLiteral_3= 'max' ) | (enumLiteral_4= 'min' ) | (enumLiteral_5= 'or' ) | (enumLiteral_6= 'and' ) | (enumLiteral_7= 'host' ) ) ;
    public final Enumerator ruleEsterelCombineOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;
        Token enumLiteral_6=null;
        Token enumLiteral_7=null;


        	enterRule();

        try {
            // InternalSCEst.g:19537:2: ( ( (enumLiteral_0= 'none' ) | (enumLiteral_1= '+' ) | (enumLiteral_2= '*' ) | (enumLiteral_3= 'max' ) | (enumLiteral_4= 'min' ) | (enumLiteral_5= 'or' ) | (enumLiteral_6= 'and' ) | (enumLiteral_7= 'host' ) ) )
            // InternalSCEst.g:19538:2: ( (enumLiteral_0= 'none' ) | (enumLiteral_1= '+' ) | (enumLiteral_2= '*' ) | (enumLiteral_3= 'max' ) | (enumLiteral_4= 'min' ) | (enumLiteral_5= 'or' ) | (enumLiteral_6= 'and' ) | (enumLiteral_7= 'host' ) )
            {
            // InternalSCEst.g:19538:2: ( (enumLiteral_0= 'none' ) | (enumLiteral_1= '+' ) | (enumLiteral_2= '*' ) | (enumLiteral_3= 'max' ) | (enumLiteral_4= 'min' ) | (enumLiteral_5= 'or' ) | (enumLiteral_6= 'and' ) | (enumLiteral_7= 'host' ) )
            int alt444=8;
            switch ( input.LA(1) ) {
            case 139:
                {
                alt444=1;
                }
                break;
            case 83:
                {
                alt444=2;
                }
                break;
            case 82:
                {
                alt444=3;
                }
                break;
            case 140:
                {
                alt444=4;
                }
                break;
            case 141:
                {
                alt444=5;
                }
                break;
            case 93:
                {
                alt444=6;
                }
                break;
            case 92:
                {
                alt444=7;
                }
                break;
            case 138:
                {
                alt444=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 444, 0, input);

                throw nvae;
            }

            switch (alt444) {
                case 1 :
                    // InternalSCEst.g:19539:3: (enumLiteral_0= 'none' )
                    {
                    // InternalSCEst.g:19539:3: (enumLiteral_0= 'none' )
                    // InternalSCEst.g:19540:4: enumLiteral_0= 'none'
                    {
                    enumLiteral_0=(Token)match(input,139,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getEsterelCombineOperatorAccess().getNONEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getEsterelCombineOperatorAccess().getNONEEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCEst.g:19547:3: (enumLiteral_1= '+' )
                    {
                    // InternalSCEst.g:19547:3: (enumLiteral_1= '+' )
                    // InternalSCEst.g:19548:4: enumLiteral_1= '+'
                    {
                    enumLiteral_1=(Token)match(input,83,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getEsterelCombineOperatorAccess().getADDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getEsterelCombineOperatorAccess().getADDEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSCEst.g:19555:3: (enumLiteral_2= '*' )
                    {
                    // InternalSCEst.g:19555:3: (enumLiteral_2= '*' )
                    // InternalSCEst.g:19556:4: enumLiteral_2= '*'
                    {
                    enumLiteral_2=(Token)match(input,82,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getEsterelCombineOperatorAccess().getMULTEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getEsterelCombineOperatorAccess().getMULTEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSCEst.g:19563:3: (enumLiteral_3= 'max' )
                    {
                    // InternalSCEst.g:19563:3: (enumLiteral_3= 'max' )
                    // InternalSCEst.g:19564:4: enumLiteral_3= 'max'
                    {
                    enumLiteral_3=(Token)match(input,140,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getEsterelCombineOperatorAccess().getMAXEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getEsterelCombineOperatorAccess().getMAXEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSCEst.g:19571:3: (enumLiteral_4= 'min' )
                    {
                    // InternalSCEst.g:19571:3: (enumLiteral_4= 'min' )
                    // InternalSCEst.g:19572:4: enumLiteral_4= 'min'
                    {
                    enumLiteral_4=(Token)match(input,141,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getEsterelCombineOperatorAccess().getMINEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getEsterelCombineOperatorAccess().getMINEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSCEst.g:19579:3: (enumLiteral_5= 'or' )
                    {
                    // InternalSCEst.g:19579:3: (enumLiteral_5= 'or' )
                    // InternalSCEst.g:19580:4: enumLiteral_5= 'or'
                    {
                    enumLiteral_5=(Token)match(input,93,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getEsterelCombineOperatorAccess().getOREnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_5, grammarAccess.getEsterelCombineOperatorAccess().getOREnumLiteralDeclaration_5());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSCEst.g:19587:3: (enumLiteral_6= 'and' )
                    {
                    // InternalSCEst.g:19587:3: (enumLiteral_6= 'and' )
                    // InternalSCEst.g:19588:4: enumLiteral_6= 'and'
                    {
                    enumLiteral_6=(Token)match(input,92,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getEsterelCombineOperatorAccess().getANDEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_6, grammarAccess.getEsterelCombineOperatorAccess().getANDEnumLiteralDeclaration_6());
                      			
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSCEst.g:19595:3: (enumLiteral_7= 'host' )
                    {
                    // InternalSCEst.g:19595:3: (enumLiteral_7= 'host' )
                    // InternalSCEst.g:19596:4: enumLiteral_7= 'host'
                    {
                    enumLiteral_7=(Token)match(input,138,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getEsterelCombineOperatorAccess().getHOSTEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_7, grammarAccess.getEsterelCombineOperatorAccess().getHOSTEnumLiteralDeclaration_7());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEsterelCombineOperator"


    // $ANTLR start "rulePriorityProtocol"
    // InternalSCEst.g:19606:1: rulePriorityProtocol returns [Enumerator current=null] : ( (enumLiteral_0= 'conflict' ) | (enumLiteral_1= 'confluent' ) ) ;
    public final Enumerator rulePriorityProtocol() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;


        	enterRule();

        try {
            // InternalSCEst.g:19612:2: ( ( (enumLiteral_0= 'conflict' ) | (enumLiteral_1= 'confluent' ) ) )
            // InternalSCEst.g:19613:2: ( (enumLiteral_0= 'conflict' ) | (enumLiteral_1= 'confluent' ) )
            {
            // InternalSCEst.g:19613:2: ( (enumLiteral_0= 'conflict' ) | (enumLiteral_1= 'confluent' ) )
            int alt445=2;
            int LA445_0 = input.LA(1);

            if ( (LA445_0==142) ) {
                alt445=1;
            }
            else if ( (LA445_0==143) ) {
                alt445=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 445, 0, input);

                throw nvae;
            }
            switch (alt445) {
                case 1 :
                    // InternalSCEst.g:19614:3: (enumLiteral_0= 'conflict' )
                    {
                    // InternalSCEst.g:19614:3: (enumLiteral_0= 'conflict' )
                    // InternalSCEst.g:19615:4: enumLiteral_0= 'conflict'
                    {
                    enumLiteral_0=(Token)match(input,142,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getPriorityProtocolAccess().getCONFLICTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getPriorityProtocolAccess().getCONFLICTEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCEst.g:19622:3: (enumLiteral_1= 'confluent' )
                    {
                    // InternalSCEst.g:19622:3: (enumLiteral_1= 'confluent' )
                    // InternalSCEst.g:19623:4: enumLiteral_1= 'confluent'
                    {
                    enumLiteral_1=(Token)match(input,143,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getPriorityProtocolAccess().getCONFLUENTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getPriorityProtocolAccess().getCONFLUENTEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePriorityProtocol"


    // $ANTLR start "ruleAssignOperator"
    // InternalSCEst.g:19633:1: ruleAssignOperator returns [Enumerator current=null] : ( (enumLiteral_0= '=' ) | (enumLiteral_1= '+=' ) | (enumLiteral_2= '-=' ) | (enumLiteral_3= '*=' ) | (enumLiteral_4= '/=' ) | (enumLiteral_5= '%=' ) | (enumLiteral_6= '&=' ) | (enumLiteral_7= '|=' ) | (enumLiteral_8= '^=' ) | (enumLiteral_9= '<<=' ) | (enumLiteral_10= '>>=' ) | (enumLiteral_11= '>>>=' ) | (enumLiteral_12= 'min=' ) | (enumLiteral_13= 'max=' ) ) ;
    public final Enumerator ruleAssignOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;
        Token enumLiteral_6=null;
        Token enumLiteral_7=null;
        Token enumLiteral_8=null;
        Token enumLiteral_9=null;
        Token enumLiteral_10=null;
        Token enumLiteral_11=null;
        Token enumLiteral_12=null;
        Token enumLiteral_13=null;


        	enterRule();

        try {
            // InternalSCEst.g:19639:2: ( ( (enumLiteral_0= '=' ) | (enumLiteral_1= '+=' ) | (enumLiteral_2= '-=' ) | (enumLiteral_3= '*=' ) | (enumLiteral_4= '/=' ) | (enumLiteral_5= '%=' ) | (enumLiteral_6= '&=' ) | (enumLiteral_7= '|=' ) | (enumLiteral_8= '^=' ) | (enumLiteral_9= '<<=' ) | (enumLiteral_10= '>>=' ) | (enumLiteral_11= '>>>=' ) | (enumLiteral_12= 'min=' ) | (enumLiteral_13= 'max=' ) ) )
            // InternalSCEst.g:19640:2: ( (enumLiteral_0= '=' ) | (enumLiteral_1= '+=' ) | (enumLiteral_2= '-=' ) | (enumLiteral_3= '*=' ) | (enumLiteral_4= '/=' ) | (enumLiteral_5= '%=' ) | (enumLiteral_6= '&=' ) | (enumLiteral_7= '|=' ) | (enumLiteral_8= '^=' ) | (enumLiteral_9= '<<=' ) | (enumLiteral_10= '>>=' ) | (enumLiteral_11= '>>>=' ) | (enumLiteral_12= 'min=' ) | (enumLiteral_13= 'max=' ) )
            {
            // InternalSCEst.g:19640:2: ( (enumLiteral_0= '=' ) | (enumLiteral_1= '+=' ) | (enumLiteral_2= '-=' ) | (enumLiteral_3= '*=' ) | (enumLiteral_4= '/=' ) | (enumLiteral_5= '%=' ) | (enumLiteral_6= '&=' ) | (enumLiteral_7= '|=' ) | (enumLiteral_8= '^=' ) | (enumLiteral_9= '<<=' ) | (enumLiteral_10= '>>=' ) | (enumLiteral_11= '>>>=' ) | (enumLiteral_12= 'min=' ) | (enumLiteral_13= 'max=' ) )
            int alt446=14;
            switch ( input.LA(1) ) {
            case 32:
                {
                alt446=1;
                }
                break;
            case 144:
                {
                alt446=2;
                }
                break;
            case 145:
                {
                alt446=3;
                }
                break;
            case 146:
                {
                alt446=4;
                }
                break;
            case 147:
                {
                alt446=5;
                }
                break;
            case 148:
                {
                alt446=6;
                }
                break;
            case 149:
                {
                alt446=7;
                }
                break;
            case 150:
                {
                alt446=8;
                }
                break;
            case 151:
                {
                alt446=9;
                }
                break;
            case 152:
                {
                alt446=10;
                }
                break;
            case 153:
                {
                alt446=11;
                }
                break;
            case 154:
                {
                alt446=12;
                }
                break;
            case 155:
                {
                alt446=13;
                }
                break;
            case 156:
                {
                alt446=14;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 446, 0, input);

                throw nvae;
            }

            switch (alt446) {
                case 1 :
                    // InternalSCEst.g:19641:3: (enumLiteral_0= '=' )
                    {
                    // InternalSCEst.g:19641:3: (enumLiteral_0= '=' )
                    // InternalSCEst.g:19642:4: enumLiteral_0= '='
                    {
                    enumLiteral_0=(Token)match(input,32,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getAssignOperatorAccess().getASSIGNEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCEst.g:19649:3: (enumLiteral_1= '+=' )
                    {
                    // InternalSCEst.g:19649:3: (enumLiteral_1= '+=' )
                    // InternalSCEst.g:19650:4: enumLiteral_1= '+='
                    {
                    enumLiteral_1=(Token)match(input,144,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNADDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getAssignOperatorAccess().getASSIGNADDEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSCEst.g:19657:3: (enumLiteral_2= '-=' )
                    {
                    // InternalSCEst.g:19657:3: (enumLiteral_2= '-=' )
                    // InternalSCEst.g:19658:4: enumLiteral_2= '-='
                    {
                    enumLiteral_2=(Token)match(input,145,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNSUBEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getAssignOperatorAccess().getASSIGNSUBEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSCEst.g:19665:3: (enumLiteral_3= '*=' )
                    {
                    // InternalSCEst.g:19665:3: (enumLiteral_3= '*=' )
                    // InternalSCEst.g:19666:4: enumLiteral_3= '*='
                    {
                    enumLiteral_3=(Token)match(input,146,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNMULEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getAssignOperatorAccess().getASSIGNMULEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSCEst.g:19673:3: (enumLiteral_4= '/=' )
                    {
                    // InternalSCEst.g:19673:3: (enumLiteral_4= '/=' )
                    // InternalSCEst.g:19674:4: enumLiteral_4= '/='
                    {
                    enumLiteral_4=(Token)match(input,147,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNDIVEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getAssignOperatorAccess().getASSIGNDIVEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSCEst.g:19681:3: (enumLiteral_5= '%=' )
                    {
                    // InternalSCEst.g:19681:3: (enumLiteral_5= '%=' )
                    // InternalSCEst.g:19682:4: enumLiteral_5= '%='
                    {
                    enumLiteral_5=(Token)match(input,148,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNMODEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_5, grammarAccess.getAssignOperatorAccess().getASSIGNMODEnumLiteralDeclaration_5());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSCEst.g:19689:3: (enumLiteral_6= '&=' )
                    {
                    // InternalSCEst.g:19689:3: (enumLiteral_6= '&=' )
                    // InternalSCEst.g:19690:4: enumLiteral_6= '&='
                    {
                    enumLiteral_6=(Token)match(input,149,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNANDEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_6, grammarAccess.getAssignOperatorAccess().getASSIGNANDEnumLiteralDeclaration_6());
                      			
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSCEst.g:19697:3: (enumLiteral_7= '|=' )
                    {
                    // InternalSCEst.g:19697:3: (enumLiteral_7= '|=' )
                    // InternalSCEst.g:19698:4: enumLiteral_7= '|='
                    {
                    enumLiteral_7=(Token)match(input,150,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNOREnumLiteralDeclaration_7().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_7, grammarAccess.getAssignOperatorAccess().getASSIGNOREnumLiteralDeclaration_7());
                      			
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalSCEst.g:19705:3: (enumLiteral_8= '^=' )
                    {
                    // InternalSCEst.g:19705:3: (enumLiteral_8= '^=' )
                    // InternalSCEst.g:19706:4: enumLiteral_8= '^='
                    {
                    enumLiteral_8=(Token)match(input,151,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNXOREnumLiteralDeclaration_8().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_8, grammarAccess.getAssignOperatorAccess().getASSIGNXOREnumLiteralDeclaration_8());
                      			
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalSCEst.g:19713:3: (enumLiteral_9= '<<=' )
                    {
                    // InternalSCEst.g:19713:3: (enumLiteral_9= '<<=' )
                    // InternalSCEst.g:19714:4: enumLiteral_9= '<<='
                    {
                    enumLiteral_9=(Token)match(input,152,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNSHIFTLEFTEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_9, grammarAccess.getAssignOperatorAccess().getASSIGNSHIFTLEFTEnumLiteralDeclaration_9());
                      			
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalSCEst.g:19721:3: (enumLiteral_10= '>>=' )
                    {
                    // InternalSCEst.g:19721:3: (enumLiteral_10= '>>=' )
                    // InternalSCEst.g:19722:4: enumLiteral_10= '>>='
                    {
                    enumLiteral_10=(Token)match(input,153,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNSHIFTRIGHTEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_10, grammarAccess.getAssignOperatorAccess().getASSIGNSHIFTRIGHTEnumLiteralDeclaration_10());
                      			
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalSCEst.g:19729:3: (enumLiteral_11= '>>>=' )
                    {
                    // InternalSCEst.g:19729:3: (enumLiteral_11= '>>>=' )
                    // InternalSCEst.g:19730:4: enumLiteral_11= '>>>='
                    {
                    enumLiteral_11=(Token)match(input,154,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNSHIFTRIGHTUNSIGNEDEnumLiteralDeclaration_11().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_11, grammarAccess.getAssignOperatorAccess().getASSIGNSHIFTRIGHTUNSIGNEDEnumLiteralDeclaration_11());
                      			
                    }

                    }


                    }
                    break;
                case 13 :
                    // InternalSCEst.g:19737:3: (enumLiteral_12= 'min=' )
                    {
                    // InternalSCEst.g:19737:3: (enumLiteral_12= 'min=' )
                    // InternalSCEst.g:19738:4: enumLiteral_12= 'min='
                    {
                    enumLiteral_12=(Token)match(input,155,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNMINEnumLiteralDeclaration_12().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_12, grammarAccess.getAssignOperatorAccess().getASSIGNMINEnumLiteralDeclaration_12());
                      			
                    }

                    }


                    }
                    break;
                case 14 :
                    // InternalSCEst.g:19745:3: (enumLiteral_13= 'max=' )
                    {
                    // InternalSCEst.g:19745:3: (enumLiteral_13= 'max=' )
                    // InternalSCEst.g:19746:4: enumLiteral_13= 'max='
                    {
                    enumLiteral_13=(Token)match(input,156,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNMAXEnumLiteralDeclaration_13().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_13, grammarAccess.getAssignOperatorAccess().getASSIGNMAXEnumLiteralDeclaration_13());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAssignOperator"


    // $ANTLR start "rulePostfixOperator"
    // InternalSCEst.g:19756:1: rulePostfixOperator returns [Enumerator current=null] : ( (enumLiteral_0= '++' ) | (enumLiteral_1= '--' ) ) ;
    public final Enumerator rulePostfixOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;


        	enterRule();

        try {
            // InternalSCEst.g:19762:2: ( ( (enumLiteral_0= '++' ) | (enumLiteral_1= '--' ) ) )
            // InternalSCEst.g:19763:2: ( (enumLiteral_0= '++' ) | (enumLiteral_1= '--' ) )
            {
            // InternalSCEst.g:19763:2: ( (enumLiteral_0= '++' ) | (enumLiteral_1= '--' ) )
            int alt447=2;
            int LA447_0 = input.LA(1);

            if ( (LA447_0==157) ) {
                alt447=1;
            }
            else if ( (LA447_0==158) ) {
                alt447=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 447, 0, input);

                throw nvae;
            }
            switch (alt447) {
                case 1 :
                    // InternalSCEst.g:19764:3: (enumLiteral_0= '++' )
                    {
                    // InternalSCEst.g:19764:3: (enumLiteral_0= '++' )
                    // InternalSCEst.g:19765:4: enumLiteral_0= '++'
                    {
                    enumLiteral_0=(Token)match(input,157,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getPostfixOperatorAccess().getPOSTFIXADDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getPostfixOperatorAccess().getPOSTFIXADDEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCEst.g:19772:3: (enumLiteral_1= '--' )
                    {
                    // InternalSCEst.g:19772:3: (enumLiteral_1= '--' )
                    // InternalSCEst.g:19773:4: enumLiteral_1= '--'
                    {
                    enumLiteral_1=(Token)match(input,158,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getPostfixOperatorAccess().getPOSTFIXSUBEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getPostfixOperatorAccess().getPOSTFIXSUBEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePostfixOperator"


    // $ANTLR start "rulePreOperator"
    // InternalSCEst.g:19783:1: rulePreOperator returns [Enumerator current=null] : (enumLiteral_0= 'pre' ) ;
    public final Enumerator rulePreOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCEst.g:19789:2: ( (enumLiteral_0= 'pre' ) )
            // InternalSCEst.g:19790:2: (enumLiteral_0= 'pre' )
            {
            // InternalSCEst.g:19790:2: (enumLiteral_0= 'pre' )
            // InternalSCEst.g:19791:3: enumLiteral_0= 'pre'
            {
            enumLiteral_0=(Token)match(input,129,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getPreOperatorAccess().getPREEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getPreOperatorAccess().getPREEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePreOperator"


    // $ANTLR start "ruleBitwiseNotOperator"
    // InternalSCEst.g:19800:1: ruleBitwiseNotOperator returns [Enumerator current=null] : (enumLiteral_0= '~' ) ;
    public final Enumerator ruleBitwiseNotOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCEst.g:19806:2: ( (enumLiteral_0= '~' ) )
            // InternalSCEst.g:19807:2: (enumLiteral_0= '~' )
            {
            // InternalSCEst.g:19807:2: (enumLiteral_0= '~' )
            // InternalSCEst.g:19808:3: enumLiteral_0= '~'
            {
            enumLiteral_0=(Token)match(input,159,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getBitwiseNotOperatorAccess().getBITWISE_NOTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getBitwiseNotOperatorAccess().getBITWISE_NOTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseNotOperator"


    // $ANTLR start "ruleBitwiseXOrOperator"
    // InternalSCEst.g:19817:1: ruleBitwiseXOrOperator returns [Enumerator current=null] : (enumLiteral_0= '^' ) ;
    public final Enumerator ruleBitwiseXOrOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCEst.g:19823:2: ( (enumLiteral_0= '^' ) )
            // InternalSCEst.g:19824:2: (enumLiteral_0= '^' )
            {
            // InternalSCEst.g:19824:2: (enumLiteral_0= '^' )
            // InternalSCEst.g:19825:3: enumLiteral_0= '^'
            {
            enumLiteral_0=(Token)match(input,122,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getBitwiseXOrOperatorAccess().getBITWISE_XOREnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getBitwiseXOrOperatorAccess().getBITWISE_XOREnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseXOrOperator"


    // $ANTLR start "ruleBitwiseOrOperator"
    // InternalSCEst.g:19834:1: ruleBitwiseOrOperator returns [Enumerator current=null] : (enumLiteral_0= '|' ) ;
    public final Enumerator ruleBitwiseOrOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCEst.g:19840:2: ( (enumLiteral_0= '|' ) )
            // InternalSCEst.g:19841:2: (enumLiteral_0= '|' )
            {
            // InternalSCEst.g:19841:2: (enumLiteral_0= '|' )
            // InternalSCEst.g:19842:3: enumLiteral_0= '|'
            {
            enumLiteral_0=(Token)match(input,121,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getBitwiseOrOperatorAccess().getBITWISE_OREnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getBitwiseOrOperatorAccess().getBITWISE_OREnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseOrOperator"


    // $ANTLR start "ruleBitwiseAndOperator"
    // InternalSCEst.g:19851:1: ruleBitwiseAndOperator returns [Enumerator current=null] : (enumLiteral_0= '&' ) ;
    public final Enumerator ruleBitwiseAndOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCEst.g:19857:2: ( (enumLiteral_0= '&' ) )
            // InternalSCEst.g:19858:2: (enumLiteral_0= '&' )
            {
            // InternalSCEst.g:19858:2: (enumLiteral_0= '&' )
            // InternalSCEst.g:19859:3: enumLiteral_0= '&'
            {
            enumLiteral_0=(Token)match(input,108,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getBitwiseAndOperatorAccess().getBITWISE_ANDEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getBitwiseAndOperatorAccess().getBITWISE_ANDEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseAndOperator"


    // $ANTLR start "ruleValOperator"
    // InternalSCEst.g:19868:1: ruleValOperator returns [Enumerator current=null] : (enumLiteral_0= 'val' ) ;
    public final Enumerator ruleValOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCEst.g:19874:2: ( (enumLiteral_0= 'val' ) )
            // InternalSCEst.g:19875:2: (enumLiteral_0= 'val' )
            {
            // InternalSCEst.g:19875:2: (enumLiteral_0= 'val' )
            // InternalSCEst.g:19876:3: enumLiteral_0= 'val'
            {
            enumLiteral_0=(Token)match(input,160,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getValOperatorAccess().getVALEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getValOperatorAccess().getVALEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValOperator"


    // $ANTLR start "ruleLogicalOrOperator"
    // InternalSCEst.g:19885:1: ruleLogicalOrOperator returns [Enumerator current=null] : (enumLiteral_0= '||' ) ;
    public final Enumerator ruleLogicalOrOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCEst.g:19891:2: ( (enumLiteral_0= '||' ) )
            // InternalSCEst.g:19892:2: (enumLiteral_0= '||' )
            {
            // InternalSCEst.g:19892:2: (enumLiteral_0= '||' )
            // InternalSCEst.g:19893:3: enumLiteral_0= '||'
            {
            enumLiteral_0=(Token)match(input,45,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getLogicalOrOperatorAccess().getLOGICAL_OREnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getLogicalOrOperatorAccess().getLOGICAL_OREnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalOrOperator"


    // $ANTLR start "ruleLogicalAndOperator"
    // InternalSCEst.g:19902:1: ruleLogicalAndOperator returns [Enumerator current=null] : (enumLiteral_0= '&&' ) ;
    public final Enumerator ruleLogicalAndOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCEst.g:19908:2: ( (enumLiteral_0= '&&' ) )
            // InternalSCEst.g:19909:2: (enumLiteral_0= '&&' )
            {
            // InternalSCEst.g:19909:2: (enumLiteral_0= '&&' )
            // InternalSCEst.g:19910:3: enumLiteral_0= '&&'
            {
            enumLiteral_0=(Token)match(input,120,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getLogicalAndOperatorAccess().getLOGICAL_ANDEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getLogicalAndOperatorAccess().getLOGICAL_ANDEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalAndOperator"


    // $ANTLR start "ruleShiftLeftOperator"
    // InternalSCEst.g:19919:1: ruleShiftLeftOperator returns [Enumerator current=null] : (enumLiteral_0= '<<' ) ;
    public final Enumerator ruleShiftLeftOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCEst.g:19925:2: ( (enumLiteral_0= '<<' ) )
            // InternalSCEst.g:19926:2: (enumLiteral_0= '<<' )
            {
            // InternalSCEst.g:19926:2: (enumLiteral_0= '<<' )
            // InternalSCEst.g:19927:3: enumLiteral_0= '<<'
            {
            enumLiteral_0=(Token)match(input,161,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getShiftLeftOperatorAccess().getSHIFT_LEFTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getShiftLeftOperatorAccess().getSHIFT_LEFTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShiftLeftOperator"


    // $ANTLR start "ruleShiftRightOperator"
    // InternalSCEst.g:19936:1: ruleShiftRightOperator returns [Enumerator current=null] : (enumLiteral_0= '>>' ) ;
    public final Enumerator ruleShiftRightOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCEst.g:19942:2: ( (enumLiteral_0= '>>' ) )
            // InternalSCEst.g:19943:2: (enumLiteral_0= '>>' )
            {
            // InternalSCEst.g:19943:2: (enumLiteral_0= '>>' )
            // InternalSCEst.g:19944:3: enumLiteral_0= '>>'
            {
            enumLiteral_0=(Token)match(input,123,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getShiftRightOperatorAccess().getSHIFT_RIGHTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getShiftRightOperatorAccess().getSHIFT_RIGHTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShiftRightOperator"


    // $ANTLR start "ruleShiftRightUnsignedOperator"
    // InternalSCEst.g:19953:1: ruleShiftRightUnsignedOperator returns [Enumerator current=null] : (enumLiteral_0= '>>>' ) ;
    public final Enumerator ruleShiftRightUnsignedOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCEst.g:19959:2: ( (enumLiteral_0= '>>>' ) )
            // InternalSCEst.g:19960:2: (enumLiteral_0= '>>>' )
            {
            // InternalSCEst.g:19960:2: (enumLiteral_0= '>>>' )
            // InternalSCEst.g:19961:3: enumLiteral_0= '>>>'
            {
            enumLiteral_0=(Token)match(input,124,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getShiftRightUnsignedOperatorAccess().getSHIFT_RIGHT_UNSIGNEDEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getShiftRightUnsignedOperatorAccess().getSHIFT_RIGHT_UNSIGNEDEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShiftRightUnsignedOperator"


    // $ANTLR start "ruleConditionalOperator"
    // InternalSCEst.g:19970:1: ruleConditionalOperator returns [Enumerator current=null] : (enumLiteral_0= '?' ) ;
    public final Enumerator ruleConditionalOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCEst.g:19976:2: ( (enumLiteral_0= '?' ) )
            // InternalSCEst.g:19977:2: (enumLiteral_0= '?' )
            {
            // InternalSCEst.g:19977:2: (enumLiteral_0= '?' )
            // InternalSCEst.g:19978:3: enumLiteral_0= '?'
            {
            enumLiteral_0=(Token)match(input,130,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getConditionalOperatorAccess().getCONDITIONALEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getConditionalOperatorAccess().getCONDITIONALEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConditionalOperator"


    // $ANTLR start "ruleFBYOperator"
    // InternalSCEst.g:19987:1: ruleFBYOperator returns [Enumerator current=null] : (enumLiteral_0= '->' ) ;
    public final Enumerator ruleFBYOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCEst.g:19993:2: ( (enumLiteral_0= '->' ) )
            // InternalSCEst.g:19994:2: (enumLiteral_0= '->' )
            {
            // InternalSCEst.g:19994:2: (enumLiteral_0= '->' )
            // InternalSCEst.g:19995:3: enumLiteral_0= '->'
            {
            enumLiteral_0=(Token)match(input,162,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getFBYOperatorAccess().getFBYEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getFBYOperatorAccess().getFBYEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFBYOperator"


    // $ANTLR start "ruleValueType"
    // InternalSCEst.g:20004:1: ruleValueType returns [Enumerator current=null] : ( (enumLiteral_0= 'pure' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'unsigned' ) | (enumLiteral_3= 'int' ) | (enumLiteral_4= 'float' ) | (enumLiteral_5= 'string' ) ) ;
    public final Enumerator ruleValueType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;


        	enterRule();

        try {
            // InternalSCEst.g:20010:2: ( ( (enumLiteral_0= 'pure' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'unsigned' ) | (enumLiteral_3= 'int' ) | (enumLiteral_4= 'float' ) | (enumLiteral_5= 'string' ) ) )
            // InternalSCEst.g:20011:2: ( (enumLiteral_0= 'pure' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'unsigned' ) | (enumLiteral_3= 'int' ) | (enumLiteral_4= 'float' ) | (enumLiteral_5= 'string' ) )
            {
            // InternalSCEst.g:20011:2: ( (enumLiteral_0= 'pure' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'unsigned' ) | (enumLiteral_3= 'int' ) | (enumLiteral_4= 'float' ) | (enumLiteral_5= 'string' ) )
            int alt448=6;
            switch ( input.LA(1) ) {
            case 131:
                {
                alt448=1;
                }
                break;
            case 163:
                {
                alt448=2;
                }
                break;
            case 133:
                {
                alt448=3;
                }
                break;
            case 164:
                {
                alt448=4;
                }
                break;
            case 135:
                {
                alt448=5;
                }
                break;
            case 137:
                {
                alt448=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 448, 0, input);

                throw nvae;
            }

            switch (alt448) {
                case 1 :
                    // InternalSCEst.g:20012:3: (enumLiteral_0= 'pure' )
                    {
                    // InternalSCEst.g:20012:3: (enumLiteral_0= 'pure' )
                    // InternalSCEst.g:20013:4: enumLiteral_0= 'pure'
                    {
                    enumLiteral_0=(Token)match(input,131,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getValueTypeAccess().getPUREEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getValueTypeAccess().getPUREEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCEst.g:20020:3: (enumLiteral_1= 'bool' )
                    {
                    // InternalSCEst.g:20020:3: (enumLiteral_1= 'bool' )
                    // InternalSCEst.g:20021:4: enumLiteral_1= 'bool'
                    {
                    enumLiteral_1=(Token)match(input,163,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getValueTypeAccess().getBOOLEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getValueTypeAccess().getBOOLEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSCEst.g:20028:3: (enumLiteral_2= 'unsigned' )
                    {
                    // InternalSCEst.g:20028:3: (enumLiteral_2= 'unsigned' )
                    // InternalSCEst.g:20029:4: enumLiteral_2= 'unsigned'
                    {
                    enumLiteral_2=(Token)match(input,133,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getValueTypeAccess().getUNSIGNEDEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getValueTypeAccess().getUNSIGNEDEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSCEst.g:20036:3: (enumLiteral_3= 'int' )
                    {
                    // InternalSCEst.g:20036:3: (enumLiteral_3= 'int' )
                    // InternalSCEst.g:20037:4: enumLiteral_3= 'int'
                    {
                    enumLiteral_3=(Token)match(input,164,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getValueTypeAccess().getINTEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getValueTypeAccess().getINTEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSCEst.g:20044:3: (enumLiteral_4= 'float' )
                    {
                    // InternalSCEst.g:20044:3: (enumLiteral_4= 'float' )
                    // InternalSCEst.g:20045:4: enumLiteral_4= 'float'
                    {
                    enumLiteral_4=(Token)match(input,135,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getValueTypeAccess().getFLOATEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getValueTypeAccess().getFLOATEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSCEst.g:20052:3: (enumLiteral_5= 'string' )
                    {
                    // InternalSCEst.g:20052:3: (enumLiteral_5= 'string' )
                    // InternalSCEst.g:20053:4: enumLiteral_5= 'string'
                    {
                    enumLiteral_5=(Token)match(input,137,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getValueTypeAccess().getSTRINGEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_5, grammarAccess.getValueTypeAccess().getSTRINGEnumLiteralDeclaration_5());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValueType"


    // $ANTLR start "ruleHostType"
    // InternalSCEst.g:20063:1: ruleHostType returns [Enumerator current=null] : (enumLiteral_0= 'host' ) ;
    public final Enumerator ruleHostType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCEst.g:20069:2: ( (enumLiteral_0= 'host' ) )
            // InternalSCEst.g:20070:2: (enumLiteral_0= 'host' )
            {
            // InternalSCEst.g:20070:2: (enumLiteral_0= 'host' )
            // InternalSCEst.g:20071:3: enumLiteral_0= 'host'
            {
            enumLiteral_0=(Token)match(input,138,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getHostTypeAccess().getHOSTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getHostTypeAccess().getHOSTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleHostType"


    // $ANTLR start "ruleStructType"
    // InternalSCEst.g:20080:1: ruleStructType returns [Enumerator current=null] : (enumLiteral_0= 'struct' ) ;
    public final Enumerator ruleStructType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCEst.g:20086:2: ( (enumLiteral_0= 'struct' ) )
            // InternalSCEst.g:20087:2: (enumLiteral_0= 'struct' )
            {
            // InternalSCEst.g:20087:2: (enumLiteral_0= 'struct' )
            // InternalSCEst.g:20088:3: enumLiteral_0= 'struct'
            {
            enumLiteral_0=(Token)match(input,165,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getStructTypeAccess().getSTRUCTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getStructTypeAccess().getSTRUCTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStructType"


    // $ANTLR start "ruleCombineOperator"
    // InternalSCEst.g:20097:1: ruleCombineOperator returns [Enumerator current=null] : ( (enumLiteral_0= 'none' ) | (enumLiteral_1= '+' ) | (enumLiteral_2= '*' ) | (enumLiteral_3= 'max' ) | (enumLiteral_4= 'min' ) | (enumLiteral_5= '|' ) | (enumLiteral_6= '&' ) | (enumLiteral_7= 'host' ) ) ;
    public final Enumerator ruleCombineOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;
        Token enumLiteral_6=null;
        Token enumLiteral_7=null;


        	enterRule();

        try {
            // InternalSCEst.g:20103:2: ( ( (enumLiteral_0= 'none' ) | (enumLiteral_1= '+' ) | (enumLiteral_2= '*' ) | (enumLiteral_3= 'max' ) | (enumLiteral_4= 'min' ) | (enumLiteral_5= '|' ) | (enumLiteral_6= '&' ) | (enumLiteral_7= 'host' ) ) )
            // InternalSCEst.g:20104:2: ( (enumLiteral_0= 'none' ) | (enumLiteral_1= '+' ) | (enumLiteral_2= '*' ) | (enumLiteral_3= 'max' ) | (enumLiteral_4= 'min' ) | (enumLiteral_5= '|' ) | (enumLiteral_6= '&' ) | (enumLiteral_7= 'host' ) )
            {
            // InternalSCEst.g:20104:2: ( (enumLiteral_0= 'none' ) | (enumLiteral_1= '+' ) | (enumLiteral_2= '*' ) | (enumLiteral_3= 'max' ) | (enumLiteral_4= 'min' ) | (enumLiteral_5= '|' ) | (enumLiteral_6= '&' ) | (enumLiteral_7= 'host' ) )
            int alt449=8;
            switch ( input.LA(1) ) {
            case 139:
                {
                alt449=1;
                }
                break;
            case 83:
                {
                alt449=2;
                }
                break;
            case 82:
                {
                alt449=3;
                }
                break;
            case 140:
                {
                alt449=4;
                }
                break;
            case 141:
                {
                alt449=5;
                }
                break;
            case 121:
                {
                alt449=6;
                }
                break;
            case 108:
                {
                alt449=7;
                }
                break;
            case 138:
                {
                alt449=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 449, 0, input);

                throw nvae;
            }

            switch (alt449) {
                case 1 :
                    // InternalSCEst.g:20105:3: (enumLiteral_0= 'none' )
                    {
                    // InternalSCEst.g:20105:3: (enumLiteral_0= 'none' )
                    // InternalSCEst.g:20106:4: enumLiteral_0= 'none'
                    {
                    enumLiteral_0=(Token)match(input,139,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getNONEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getCombineOperatorAccess().getNONEEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCEst.g:20113:3: (enumLiteral_1= '+' )
                    {
                    // InternalSCEst.g:20113:3: (enumLiteral_1= '+' )
                    // InternalSCEst.g:20114:4: enumLiteral_1= '+'
                    {
                    enumLiteral_1=(Token)match(input,83,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getADDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getCombineOperatorAccess().getADDEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSCEst.g:20121:3: (enumLiteral_2= '*' )
                    {
                    // InternalSCEst.g:20121:3: (enumLiteral_2= '*' )
                    // InternalSCEst.g:20122:4: enumLiteral_2= '*'
                    {
                    enumLiteral_2=(Token)match(input,82,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getMULTEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getCombineOperatorAccess().getMULTEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSCEst.g:20129:3: (enumLiteral_3= 'max' )
                    {
                    // InternalSCEst.g:20129:3: (enumLiteral_3= 'max' )
                    // InternalSCEst.g:20130:4: enumLiteral_3= 'max'
                    {
                    enumLiteral_3=(Token)match(input,140,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getMAXEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getCombineOperatorAccess().getMAXEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSCEst.g:20137:3: (enumLiteral_4= 'min' )
                    {
                    // InternalSCEst.g:20137:3: (enumLiteral_4= 'min' )
                    // InternalSCEst.g:20138:4: enumLiteral_4= 'min'
                    {
                    enumLiteral_4=(Token)match(input,141,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getMINEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getCombineOperatorAccess().getMINEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSCEst.g:20145:3: (enumLiteral_5= '|' )
                    {
                    // InternalSCEst.g:20145:3: (enumLiteral_5= '|' )
                    // InternalSCEst.g:20146:4: enumLiteral_5= '|'
                    {
                    enumLiteral_5=(Token)match(input,121,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getOREnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_5, grammarAccess.getCombineOperatorAccess().getOREnumLiteralDeclaration_5());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSCEst.g:20153:3: (enumLiteral_6= '&' )
                    {
                    // InternalSCEst.g:20153:3: (enumLiteral_6= '&' )
                    // InternalSCEst.g:20154:4: enumLiteral_6= '&'
                    {
                    enumLiteral_6=(Token)match(input,108,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getANDEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_6, grammarAccess.getCombineOperatorAccess().getANDEnumLiteralDeclaration_6());
                      			
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSCEst.g:20161:3: (enumLiteral_7= 'host' )
                    {
                    // InternalSCEst.g:20161:3: (enumLiteral_7= 'host' )
                    // InternalSCEst.g:20162:4: enumLiteral_7= 'host'
                    {
                    enumLiteral_7=(Token)match(input,138,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getHOSTEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_7, grammarAccess.getCombineOperatorAccess().getHOSTEnumLiteralDeclaration_7());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCombineOperator"

    // $ANTLR start synpred4_InternalSCEst
    public final void synpred4_InternalSCEst_fragment() throws RecognitionException {   
        EObject lv_declarations_4_0 = null;


        // InternalSCEst.g:198:4: ( ( (lv_declarations_4_0= ruleVariableDeclaration ) ) )
        // InternalSCEst.g:198:4: ( (lv_declarations_4_0= ruleVariableDeclaration ) )
        {
        // InternalSCEst.g:198:4: ( (lv_declarations_4_0= ruleVariableDeclaration ) )
        // InternalSCEst.g:199:5: (lv_declarations_4_0= ruleVariableDeclaration )
        {
        // InternalSCEst.g:199:5: (lv_declarations_4_0= ruleVariableDeclaration )
        // InternalSCEst.g:200:6: lv_declarations_4_0= ruleVariableDeclaration
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getEsterelModuleAccess().getDeclarationsVariableDeclarationParserRuleCall_4_0_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_4_0=ruleVariableDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred4_InternalSCEst

    // $ANTLR start synpred5_InternalSCEst
    public final void synpred5_InternalSCEst_fragment() throws RecognitionException {   
        EObject lv_declarations_5_0 = null;


        // InternalSCEst.g:218:4: ( ( (lv_declarations_5_0= ruleEsterelDeclaration ) ) )
        // InternalSCEst.g:218:4: ( (lv_declarations_5_0= ruleEsterelDeclaration ) )
        {
        // InternalSCEst.g:218:4: ( (lv_declarations_5_0= ruleEsterelDeclaration ) )
        // InternalSCEst.g:219:5: (lv_declarations_5_0= ruleEsterelDeclaration )
        {
        // InternalSCEst.g:219:5: (lv_declarations_5_0= ruleEsterelDeclaration )
        // InternalSCEst.g:220:6: lv_declarations_5_0= ruleEsterelDeclaration
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getEsterelModuleAccess().getDeclarationsEsterelDeclarationParserRuleCall_4_1_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_5_0=ruleEsterelDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred5_InternalSCEst

    // $ANTLR start synpred8_InternalSCEst
    public final void synpred8_InternalSCEst_fragment() throws RecognitionException {   
        EObject this_InstructionStatement_0 = null;


        // InternalSCEst.g:321:3: (this_InstructionStatement_0= superInstructionStatement )
        // InternalSCEst.g:321:3: this_InstructionStatement_0= superInstructionStatement
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_InstructionStatement_0=superInstructionStatement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred8_InternalSCEst

    // $ANTLR start synpred9_InternalSCEst
    public final void synpred9_InternalSCEst_fragment() throws RecognitionException {   
        EObject this_UnEmit_1 = null;


        // InternalSCEst.g:333:3: (this_UnEmit_1= ruleUnEmit )
        // InternalSCEst.g:333:3: this_UnEmit_1= ruleUnEmit
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_UnEmit_1=ruleUnEmit();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred9_InternalSCEst

    // $ANTLR start synpred10_InternalSCEst
    public final void synpred10_InternalSCEst_fragment() throws RecognitionException {   
        EObject this_Assignment_0 = null;


        // InternalSCEst.g:375:3: (this_Assignment_0= ruleAssignment )
        // InternalSCEst.g:375:3: this_Assignment_0= ruleAssignment
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Assignment_0=ruleAssignment();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred10_InternalSCEst

    // $ANTLR start synpred11_InternalSCEst
    public final void synpred11_InternalSCEst_fragment() throws RecognitionException {   
        EObject this_Label_1 = null;


        // InternalSCEst.g:387:3: (this_Label_1= ruleLabel )
        // InternalSCEst.g:387:3: this_Label_1= ruleLabel
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Label_1=ruleLabel();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred11_InternalSCEst

    // $ANTLR start synpred12_InternalSCEst
    public final void synpred12_InternalSCEst_fragment() throws RecognitionException {   
        EObject this_Conditional_2 = null;


        // InternalSCEst.g:399:3: (this_Conditional_2= ruleConditional )
        // InternalSCEst.g:399:3: this_Conditional_2= ruleConditional
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Conditional_2=ruleConditional();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred12_InternalSCEst

    // $ANTLR start synpred13_InternalSCEst
    public final void synpred13_InternalSCEst_fragment() throws RecognitionException {   
        EObject this_LegacyConditional_3 = null;


        // InternalSCEst.g:411:3: (this_LegacyConditional_3= ruleLegacyConditional )
        // InternalSCEst.g:411:3: this_LegacyConditional_3= ruleLegacyConditional
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_LegacyConditional_3=ruleLegacyConditional();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred13_InternalSCEst

    // $ANTLR start synpred14_InternalSCEst
    public final void synpred14_InternalSCEst_fragment() throws RecognitionException {   
        EObject this_Goto_4 = null;


        // InternalSCEst.g:423:3: (this_Goto_4= ruleGoto )
        // InternalSCEst.g:423:3: this_Goto_4= ruleGoto
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Goto_4=ruleGoto();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred14_InternalSCEst

    // $ANTLR start synpred16_InternalSCEst
    public final void synpred16_InternalSCEst_fragment() throws RecognitionException {   
        EObject this_ModuleCall_6 = null;


        // InternalSCEst.g:447:3: (this_ModuleCall_6= ruleModuleCall )
        // InternalSCEst.g:447:3: this_ModuleCall_6= ruleModuleCall
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ModuleCall_6=ruleModuleCall();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred16_InternalSCEst

    // $ANTLR start synpred19_InternalSCEst
    public final void synpred19_InternalSCEst_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        EObject this_InstructionStatement_0 = null;

        EObject lv_statements_3_0 = null;


        // InternalSCEst.g:489:3: ( (this_InstructionStatement_0= ruleInstructionStatement ( () ( ( ( ';' )=>otherlv_2= ';' ) ( (lv_statements_3_0= ruleEsterelThread ) ) ) )? ) )
        // InternalSCEst.g:489:3: (this_InstructionStatement_0= ruleInstructionStatement ( () ( ( ( ';' )=>otherlv_2= ';' ) ( (lv_statements_3_0= ruleEsterelThread ) ) ) )? )
        {
        // InternalSCEst.g:489:3: (this_InstructionStatement_0= ruleInstructionStatement ( () ( ( ( ';' )=>otherlv_2= ';' ) ( (lv_statements_3_0= ruleEsterelThread ) ) ) )? )
        // InternalSCEst.g:490:4: this_InstructionStatement_0= ruleInstructionStatement ( () ( ( ( ';' )=>otherlv_2= ';' ) ( (lv_statements_3_0= ruleEsterelThread ) ) ) )?
        {
        if ( state.backtracking==0 ) {

          				/* */
          			
        }
        pushFollow(FollowSets000.FOLLOW_11);
        this_InstructionStatement_0=ruleInstructionStatement();

        state._fsp--;
        if (state.failed) return ;
        // InternalSCEst.g:501:4: ( () ( ( ( ';' )=>otherlv_2= ';' ) ( (lv_statements_3_0= ruleEsterelThread ) ) ) )?
        int alt450=2;
        int LA450_0 = input.LA(1);

        if ( (LA450_0==21) ) {
            alt450=1;
        }
        switch (alt450) {
            case 1 :
                // InternalSCEst.g:502:5: () ( ( ( ';' )=>otherlv_2= ';' ) ( (lv_statements_3_0= ruleEsterelThread ) ) )
                {
                // InternalSCEst.g:502:5: ()
                // InternalSCEst.g:503:6: 
                {
                if ( state.backtracking==0 ) {

                  						/* */
                  					
                }

                }

                // InternalSCEst.g:512:5: ( ( ( ';' )=>otherlv_2= ';' ) ( (lv_statements_3_0= ruleEsterelThread ) ) )
                // InternalSCEst.g:513:6: ( ( ';' )=>otherlv_2= ';' ) ( (lv_statements_3_0= ruleEsterelThread ) )
                {
                // InternalSCEst.g:513:6: ( ( ';' )=>otherlv_2= ';' )
                // InternalSCEst.g:514:7: ( ';' )=>otherlv_2= ';'
                {
                otherlv_2=(Token)match(input,21,FollowSets000.FOLLOW_12); if (state.failed) return ;

                }

                // InternalSCEst.g:520:6: ( (lv_statements_3_0= ruleEsterelThread ) )
                // InternalSCEst.g:521:7: (lv_statements_3_0= ruleEsterelThread )
                {
                // InternalSCEst.g:521:7: (lv_statements_3_0= ruleEsterelThread )
                // InternalSCEst.g:522:8: lv_statements_3_0= ruleEsterelThread
                {
                if ( state.backtracking==0 ) {

                  								newCompositeNode(grammarAccess.getEsterelThreadAccess().getStatementsEsterelThreadParserRuleCall_0_1_1_1_0());
                  							
                }
                pushFollow(FollowSets000.FOLLOW_2);
                lv_statements_3_0=ruleEsterelThread();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred19_InternalSCEst

    // $ANTLR start synpred20_InternalSCEst
    public final void synpred20_InternalSCEst_fragment() throws RecognitionException {   
        EObject lv_statements_6_0 = null;


        // InternalSCEst.g:556:5: ( () ( (lv_statements_6_0= ruleEsterelThread ) ) )
        // InternalSCEst.g:556:5: () ( (lv_statements_6_0= ruleEsterelThread ) )
        {
        // InternalSCEst.g:556:5: ()
        // InternalSCEst.g:557:6: 
        {
        if ( state.backtracking==0 ) {

          						/* */
          					
        }

        }

        // InternalSCEst.g:566:5: ( (lv_statements_6_0= ruleEsterelThread ) )
        // InternalSCEst.g:567:6: (lv_statements_6_0= ruleEsterelThread )
        {
        // InternalSCEst.g:567:6: (lv_statements_6_0= ruleEsterelThread )
        // InternalSCEst.g:568:7: lv_statements_6_0= ruleEsterelThread
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getEsterelThreadAccess().getStatementsEsterelThreadParserRuleCall_1_1_1_0());
          						
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_statements_6_0=ruleEsterelThread();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred20_InternalSCEst

    // $ANTLR start synpred22_InternalSCEst
    public final void synpred22_InternalSCEst_fragment() throws RecognitionException {   
        EObject this_ValuedObjectReference_0 = null;


        // InternalSCEst.g:686:3: (this_ValuedObjectReference_0= ruleValuedObjectReference )
        // InternalSCEst.g:686:3: this_ValuedObjectReference_0= ruleValuedObjectReference
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ValuedObjectReference_0=ruleValuedObjectReference();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred22_InternalSCEst

    // $ANTLR start synpred23_InternalSCEst
    public final void synpred23_InternalSCEst_fragment() throws RecognitionException {   
        EObject this_SignalReferenceExpression_1 = null;


        // InternalSCEst.g:698:3: (this_SignalReferenceExpression_1= ruleSignalReferenceExpression )
        // InternalSCEst.g:698:3: this_SignalReferenceExpression_1= ruleSignalReferenceExpression
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_SignalReferenceExpression_1=ruleSignalReferenceExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred23_InternalSCEst

    // $ANTLR start synpred28_InternalSCEst
    public final void synpred28_InternalSCEst_fragment() throws RecognitionException {   
        EObject this_BoolValue_2 = null;


        // InternalSCEst.g:909:3: (this_BoolValue_2= ruleBoolValue )
        // InternalSCEst.g:909:3: this_BoolValue_2= ruleBoolValue
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_BoolValue_2=ruleBoolValue();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred28_InternalSCEst

    // $ANTLR start synpred29_InternalSCEst
    public final void synpred29_InternalSCEst_fragment() throws RecognitionException {   
        EObject this_ValuedObjectPreExpression_3 = null;


        // InternalSCEst.g:921:3: (this_ValuedObjectPreExpression_3= ruleValuedObjectPreExpression )
        // InternalSCEst.g:921:3: this_ValuedObjectPreExpression_3= ruleValuedObjectPreExpression
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ValuedObjectPreExpression_3=ruleValuedObjectPreExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred29_InternalSCEst

    // $ANTLR start synpred32_InternalSCEst
    public final void synpred32_InternalSCEst_fragment() throws RecognitionException {   
        EObject this_ConstantExpression_8 = null;


        // InternalSCEst.g:967:3: (this_ConstantExpression_8= ruleConstantExpression )
        // InternalSCEst.g:967:3: this_ConstantExpression_8= ruleConstantExpression
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ConstantExpression_8=ruleConstantExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred32_InternalSCEst

    // $ANTLR start synpred34_InternalSCEst
    public final void synpred34_InternalSCEst_fragment() throws RecognitionException {   
        EObject this_IntValue_0 = null;


        // InternalSCEst.g:1021:3: (this_IntValue_0= ruleIntValue )
        // InternalSCEst.g:1021:3: this_IntValue_0= ruleIntValue
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_IntValue_0=ruleIntValue();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred34_InternalSCEst

    // $ANTLR start synpred35_InternalSCEst
    public final void synpred35_InternalSCEst_fragment() throws RecognitionException {   
        EObject this_FloatValue_1 = null;


        // InternalSCEst.g:1033:3: (this_FloatValue_1= ruleFloatValue )
        // InternalSCEst.g:1033:3: this_FloatValue_1= ruleFloatValue
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_FloatValue_1=ruleFloatValue();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred35_InternalSCEst

    // $ANTLR start synpred36_InternalSCEst
    public final void synpred36_InternalSCEst_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject this_ValuedExpression_3 = null;


        // InternalSCEst.g:1045:3: ( (otherlv_2= '(' this_ValuedExpression_3= ruleValuedExpression otherlv_4= ')' ) )
        // InternalSCEst.g:1045:3: (otherlv_2= '(' this_ValuedExpression_3= ruleValuedExpression otherlv_4= ')' )
        {
        // InternalSCEst.g:1045:3: (otherlv_2= '(' this_ValuedExpression_3= ruleValuedExpression otherlv_4= ')' )
        // InternalSCEst.g:1046:4: otherlv_2= '(' this_ValuedExpression_3= ruleValuedExpression otherlv_4= ')'
        {
        otherlv_2=(Token)match(input,25,FollowSets000.FOLLOW_21); if (state.failed) return ;
        pushFollow(FollowSets000.FOLLOW_20);
        this_ValuedExpression_3=ruleValuedExpression();

        state._fsp--;
        if (state.failed) return ;
        otherlv_4=(Token)match(input,26,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred36_InternalSCEst

    // $ANTLR start synpred37_InternalSCEst
    public final void synpred37_InternalSCEst_fragment() throws RecognitionException {   
        EObject this_AtomicExpression_5 = null;


        // InternalSCEst.g:1067:3: (this_AtomicExpression_5= ruleAtomicExpression )
        // InternalSCEst.g:1067:3: this_AtomicExpression_5= ruleAtomicExpression
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_AtomicExpression_5=ruleAtomicExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred37_InternalSCEst

    // $ANTLR start synpred51_InternalSCEst
    public final void synpred51_InternalSCEst_fragment() throws RecognitionException {   
        Token lv_idType_6_0=null;

        // InternalSCEst.g:1349:3: ( ( (lv_idType_6_0= RULE_ID ) ) )
        // InternalSCEst.g:1349:3: ( (lv_idType_6_0= RULE_ID ) )
        {
        // InternalSCEst.g:1349:3: ( (lv_idType_6_0= RULE_ID ) )
        // InternalSCEst.g:1350:4: (lv_idType_6_0= RULE_ID )
        {
        // InternalSCEst.g:1350:4: (lv_idType_6_0= RULE_ID )
        // InternalSCEst.g:1351:5: lv_idType_6_0= RULE_ID
        {
        lv_idType_6_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred51_InternalSCEst

    // $ANTLR start synpred106_InternalSCEst
    public final void synpred106_InternalSCEst_fragment() throws RecognitionException {   
        EObject this_Nothing_0 = null;


        // InternalSCEst.g:3618:3: (this_Nothing_0= ruleNothing )
        // InternalSCEst.g:3618:3: this_Nothing_0= ruleNothing
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Nothing_0=ruleNothing();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred106_InternalSCEst

    // $ANTLR start synpred107_InternalSCEst
    public final void synpred107_InternalSCEst_fragment() throws RecognitionException {   
        EObject this_EsterelPause_1 = null;


        // InternalSCEst.g:3630:3: (this_EsterelPause_1= ruleEsterelPause )
        // InternalSCEst.g:3630:3: this_EsterelPause_1= ruleEsterelPause
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_EsterelPause_1=ruleEsterelPause();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred107_InternalSCEst

    // $ANTLR start synpred108_InternalSCEst
    public final void synpred108_InternalSCEst_fragment() throws RecognitionException {   
        EObject this_Halt_2 = null;


        // InternalSCEst.g:3642:3: (this_Halt_2= ruleHalt )
        // InternalSCEst.g:3642:3: this_Halt_2= ruleHalt
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Halt_2=ruleHalt();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred108_InternalSCEst

    // $ANTLR start synpred109_InternalSCEst
    public final void synpred109_InternalSCEst_fragment() throws RecognitionException {   
        EObject this_Emit_3 = null;


        // InternalSCEst.g:3654:3: (this_Emit_3= ruleEmit )
        // InternalSCEst.g:3654:3: this_Emit_3= ruleEmit
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Emit_3=ruleEmit();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred109_InternalSCEst

    // $ANTLR start synpred110_InternalSCEst
    public final void synpred110_InternalSCEst_fragment() throws RecognitionException {   
        EObject this_Exit_4 = null;


        // InternalSCEst.g:3666:3: (this_Exit_4= ruleExit )
        // InternalSCEst.g:3666:3: this_Exit_4= ruleExit
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Exit_4=ruleExit();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred110_InternalSCEst

    // $ANTLR start synpred111_InternalSCEst
    public final void synpred111_InternalSCEst_fragment() throws RecognitionException {   
        EObject this_Present_5 = null;


        // InternalSCEst.g:3678:3: (this_Present_5= rulePresent )
        // InternalSCEst.g:3678:3: this_Present_5= rulePresent
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Present_5=rulePresent();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred111_InternalSCEst

    // $ANTLR start synpred112_InternalSCEst
    public final void synpred112_InternalSCEst_fragment() throws RecognitionException {   
        EObject this_Await_6 = null;


        // InternalSCEst.g:3690:3: (this_Await_6= ruleAwait )
        // InternalSCEst.g:3690:3: this_Await_6= ruleAwait
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Await_6=ruleAwait();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred112_InternalSCEst

    // $ANTLR start synpred113_InternalSCEst
    public final void synpred113_InternalSCEst_fragment() throws RecognitionException {   
        EObject this_EsterelAssignment_7 = null;


        // InternalSCEst.g:3702:3: (this_EsterelAssignment_7= ruleEsterelAssignment )
        // InternalSCEst.g:3702:3: this_EsterelAssignment_7= ruleEsterelAssignment
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_EsterelAssignment_7=ruleEsterelAssignment();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred113_InternalSCEst

    // $ANTLR start synpred114_InternalSCEst
    public final void synpred114_InternalSCEst_fragment() throws RecognitionException {   
        EObject this_Abort_8 = null;


        // InternalSCEst.g:3714:3: (this_Abort_8= ruleAbort )
        // InternalSCEst.g:3714:3: this_Abort_8= ruleAbort
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Abort_8=ruleAbort();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred114_InternalSCEst

    // $ANTLR start synpred115_InternalSCEst
    public final void synpred115_InternalSCEst_fragment() throws RecognitionException {   
        EObject this_Loop_9 = null;


        // InternalSCEst.g:3726:3: (this_Loop_9= ruleLoop )
        // InternalSCEst.g:3726:3: this_Loop_9= ruleLoop
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Loop_9=ruleLoop();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred115_InternalSCEst

    // $ANTLR start synpred116_InternalSCEst
    public final void synpred116_InternalSCEst_fragment() throws RecognitionException {   
        EObject this_EveryDo_10 = null;


        // InternalSCEst.g:3738:3: (this_EveryDo_10= ruleEveryDo )
        // InternalSCEst.g:3738:3: this_EveryDo_10= ruleEveryDo
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_EveryDo_10=ruleEveryDo();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred116_InternalSCEst

    // $ANTLR start synpred117_InternalSCEst
    public final void synpred117_InternalSCEst_fragment() throws RecognitionException {   
        EObject this_Sustain_11 = null;


        // InternalSCEst.g:3750:3: (this_Sustain_11= ruleSustain )
        // InternalSCEst.g:3750:3: this_Sustain_11= ruleSustain
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Sustain_11=ruleSustain();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred117_InternalSCEst

    // $ANTLR start synpred118_InternalSCEst
    public final void synpred118_InternalSCEst_fragment() throws RecognitionException {   
        EObject this_Trap_12 = null;


        // InternalSCEst.g:3762:3: (this_Trap_12= ruleTrap )
        // InternalSCEst.g:3762:3: this_Trap_12= ruleTrap
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Trap_12=ruleTrap();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred118_InternalSCEst

    // $ANTLR start synpred119_InternalSCEst
    public final void synpred119_InternalSCEst_fragment() throws RecognitionException {   
        EObject this_Suspend_13 = null;


        // InternalSCEst.g:3774:3: (this_Suspend_13= ruleSuspend )
        // InternalSCEst.g:3774:3: this_Suspend_13= ruleSuspend
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Suspend_13=ruleSuspend();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred119_InternalSCEst

    // $ANTLR start synpred120_InternalSCEst
    public final void synpred120_InternalSCEst_fragment() throws RecognitionException {   
        EObject this_LocalSignalDeclaration_14 = null;


        // InternalSCEst.g:3786:3: (this_LocalSignalDeclaration_14= ruleLocalSignalDeclaration )
        // InternalSCEst.g:3786:3: this_LocalSignalDeclaration_14= ruleLocalSignalDeclaration
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_LocalSignalDeclaration_14=ruleLocalSignalDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred120_InternalSCEst

    // $ANTLR start synpred121_InternalSCEst
    public final void synpred121_InternalSCEst_fragment() throws RecognitionException {   
        EObject this_LocalVariableDeclaration_15 = null;


        // InternalSCEst.g:3798:3: (this_LocalVariableDeclaration_15= ruleLocalVariableDeclaration )
        // InternalSCEst.g:3798:3: this_LocalVariableDeclaration_15= ruleLocalVariableDeclaration
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_LocalVariableDeclaration_15=ruleLocalVariableDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred121_InternalSCEst

    // $ANTLR start synpred122_InternalSCEst
    public final void synpred122_InternalSCEst_fragment() throws RecognitionException {   
        EObject this_IfTest_16 = null;


        // InternalSCEst.g:3810:3: (this_IfTest_16= ruleIfTest )
        // InternalSCEst.g:3810:3: this_IfTest_16= ruleIfTest
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_IfTest_16=ruleIfTest();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred122_InternalSCEst

    // $ANTLR start synpred123_InternalSCEst
    public final void synpred123_InternalSCEst_fragment() throws RecognitionException {   
        EObject this_Exec_17 = null;


        // InternalSCEst.g:3822:3: (this_Exec_17= ruleExec )
        // InternalSCEst.g:3822:3: this_Exec_17= ruleExec
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Exec_17=ruleExec();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred123_InternalSCEst

    // $ANTLR start synpred124_InternalSCEst
    public final void synpred124_InternalSCEst_fragment() throws RecognitionException {   
        EObject this_Run_18 = null;


        // InternalSCEst.g:3834:3: (this_Run_18= ruleRun )
        // InternalSCEst.g:3834:3: this_Run_18= ruleRun
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Run_18=ruleRun();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred124_InternalSCEst

    // $ANTLR start synpred125_InternalSCEst
    public final void synpred125_InternalSCEst_fragment() throws RecognitionException {   
        EObject this_ProcedureCall_19 = null;


        // InternalSCEst.g:3846:3: (this_ProcedureCall_19= ruleProcedureCall )
        // InternalSCEst.g:3846:3: this_ProcedureCall_19= ruleProcedureCall
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ProcedureCall_19=ruleProcedureCall();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred125_InternalSCEst

    // $ANTLR start synpred126_InternalSCEst
    public final void synpred126_InternalSCEst_fragment() throws RecognitionException {   
        EObject this_Repeat_20 = null;


        // InternalSCEst.g:3858:3: (this_Repeat_20= ruleRepeat )
        // InternalSCEst.g:3858:3: this_Repeat_20= ruleRepeat
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Repeat_20=ruleRepeat();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred126_InternalSCEst

    // $ANTLR start synpred127_InternalSCEst
    public final void synpred127_InternalSCEst_fragment() throws RecognitionException {   
        EObject this_Block_21 = null;


        // InternalSCEst.g:3870:3: (this_Block_21= ruleBlock )
        // InternalSCEst.g:3870:3: this_Block_21= ruleBlock
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Block_21=ruleBlock();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred127_InternalSCEst

    // $ANTLR start synpred153_InternalSCEst
    public final void synpred153_InternalSCEst_fragment() throws RecognitionException {   
        Token otherlv_13=null;

        // InternalSCEst.g:4782:4: (otherlv_13= 'present' )
        // InternalSCEst.g:4782:4: otherlv_13= 'present'
        {
        otherlv_13=(Token)match(input,54,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred153_InternalSCEst

    // $ANTLR start synpred162_InternalSCEst
    public final void synpred162_InternalSCEst_fragment() throws RecognitionException {   
        Token otherlv_10=null;

        // InternalSCEst.g:5059:4: (otherlv_10= 'if' )
        // InternalSCEst.g:5059:4: otherlv_10= 'if'
        {
        otherlv_10=(Token)match(input,59,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred162_InternalSCEst

    // $ANTLR start synpred166_InternalSCEst
    public final void synpred166_InternalSCEst_fragment() throws RecognitionException {   
        Token otherlv_5=null;

        // InternalSCEst.g:5228:6: (otherlv_5= 'loop' )
        // InternalSCEst.g:5228:6: otherlv_5= 'loop'
        {
        otherlv_5=(Token)match(input,61,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred166_InternalSCEst

    // $ANTLR start synpred170_InternalSCEst
    public final void synpred170_InternalSCEst_fragment() throws RecognitionException {   
        Token otherlv_7=null;

        // InternalSCEst.g:5364:4: (otherlv_7= 'repeat' )
        // InternalSCEst.g:5364:4: otherlv_7= 'repeat'
        {
        otherlv_7=(Token)match(input,64,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred170_InternalSCEst

    // $ANTLR start synpred173_InternalSCEst
    public final void synpred173_InternalSCEst_fragment() throws RecognitionException {   
        Token otherlv_9=null;

        // InternalSCEst.g:5500:7: (otherlv_9= 'weak' )
        // InternalSCEst.g:5500:7: otherlv_9= 'weak'
        {
        otherlv_9=(Token)match(input,66,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred173_InternalSCEst

    // $ANTLR start synpred174_InternalSCEst
    public final void synpred174_InternalSCEst_fragment() throws RecognitionException {   
        Token otherlv_10=null;

        // InternalSCEst.g:5506:7: (otherlv_10= 'abort' )
        // InternalSCEst.g:5506:7: otherlv_10= 'abort'
        {
        otherlv_10=(Token)match(input,67,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred174_InternalSCEst

    // $ANTLR start synpred175_InternalSCEst
    public final void synpred175_InternalSCEst_fragment() throws RecognitionException {   
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        EObject lv_doStatements_7_0 = null;


        // InternalSCEst.g:5472:6: (otherlv_6= 'do' ( (lv_doStatements_7_0= ruleEsterelParallel ) ) otherlv_8= 'end' (otherlv_9= 'weak' )? (otherlv_10= 'abort' )? )
        // InternalSCEst.g:5472:6: otherlv_6= 'do' ( (lv_doStatements_7_0= ruleEsterelParallel ) ) otherlv_8= 'end' (otherlv_9= 'weak' )? (otherlv_10= 'abort' )?
        {
        otherlv_6=(Token)match(input,58,FollowSets000.FOLLOW_12); if (state.failed) return ;
        // InternalSCEst.g:5476:6: ( (lv_doStatements_7_0= ruleEsterelParallel ) )
        // InternalSCEst.g:5477:7: (lv_doStatements_7_0= ruleEsterelParallel )
        {
        // InternalSCEst.g:5477:7: (lv_doStatements_7_0= ruleEsterelParallel )
        // InternalSCEst.g:5478:8: lv_doStatements_7_0= ruleEsterelParallel
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getAbortAccess().getDoStatementsEsterelParallelParserRuleCall_4_0_1_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_68);
        lv_doStatements_7_0=ruleEsterelParallel();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_8=(Token)match(input,19,FollowSets000.FOLLOW_91); if (state.failed) return ;
        // InternalSCEst.g:5499:6: (otherlv_9= 'weak' )?
        int alt488=2;
        int LA488_0 = input.LA(1);

        if ( (LA488_0==66) ) {
            alt488=1;
        }
        switch (alt488) {
            case 1 :
                // InternalSCEst.g:5500:7: otherlv_9= 'weak'
                {
                otherlv_9=(Token)match(input,66,FollowSets000.FOLLOW_92); if (state.failed) return ;

                }
                break;

        }

        // InternalSCEst.g:5505:6: (otherlv_10= 'abort' )?
        int alt489=2;
        int LA489_0 = input.LA(1);

        if ( (LA489_0==67) ) {
            alt489=1;
        }
        switch (alt489) {
            case 1 :
                // InternalSCEst.g:5506:7: otherlv_10= 'abort'
                {
                otherlv_10=(Token)match(input,67,FollowSets000.FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }
    }
    // $ANTLR end synpred175_InternalSCEst

    // $ANTLR start synpred178_InternalSCEst
    public final void synpred178_InternalSCEst_fragment() throws RecognitionException {   
        Token otherlv_13=null;

        // InternalSCEst.g:5539:6: (otherlv_13= 'weak' )
        // InternalSCEst.g:5539:6: otherlv_13= 'weak'
        {
        otherlv_13=(Token)match(input,66,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred178_InternalSCEst

    // $ANTLR start synpred179_InternalSCEst
    public final void synpred179_InternalSCEst_fragment() throws RecognitionException {   
        Token otherlv_14=null;

        // InternalSCEst.g:5545:6: (otherlv_14= 'abort' )
        // InternalSCEst.g:5545:6: otherlv_14= 'abort'
        {
        otherlv_14=(Token)match(input,67,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred179_InternalSCEst

    // $ANTLR start synpred183_InternalSCEst
    public final void synpred183_InternalSCEst_fragment() throws RecognitionException {   
        Token otherlv_6=null;

        // InternalSCEst.g:5730:7: (otherlv_6= 'await' )
        // InternalSCEst.g:5730:7: otherlv_6= 'await'
        {
        otherlv_6=(Token)match(input,69,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred183_InternalSCEst

    // $ANTLR start synpred184_InternalSCEst
    public final void synpred184_InternalSCEst_fragment() throws RecognitionException {   
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject lv_statements_4_0 = null;


        // InternalSCEst.g:5702:6: (otherlv_3= 'do' ( (lv_statements_4_0= ruleEsterelParallel ) ) otherlv_5= 'end' (otherlv_6= 'await' )? )
        // InternalSCEst.g:5702:6: otherlv_3= 'do' ( (lv_statements_4_0= ruleEsterelParallel ) ) otherlv_5= 'end' (otherlv_6= 'await' )?
        {
        otherlv_3=(Token)match(input,58,FollowSets000.FOLLOW_12); if (state.failed) return ;
        // InternalSCEst.g:5706:6: ( (lv_statements_4_0= ruleEsterelParallel ) )
        // InternalSCEst.g:5707:7: (lv_statements_4_0= ruleEsterelParallel )
        {
        // InternalSCEst.g:5707:7: (lv_statements_4_0= ruleEsterelParallel )
        // InternalSCEst.g:5708:8: lv_statements_4_0= ruleEsterelParallel
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getAwaitAccess().getStatementsEsterelParallelParserRuleCall_2_0_1_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_68);
        lv_statements_4_0=ruleEsterelParallel();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_5=(Token)match(input,19,FollowSets000.FOLLOW_95); if (state.failed) return ;
        // InternalSCEst.g:5729:6: (otherlv_6= 'await' )?
        int alt493=2;
        int LA493_0 = input.LA(1);

        if ( (LA493_0==69) ) {
            alt493=1;
        }
        switch (alt493) {
            case 1 :
                // InternalSCEst.g:5730:7: otherlv_6= 'await'
                {
                otherlv_6=(Token)match(input,69,FollowSets000.FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }
    }
    // $ANTLR end synpred184_InternalSCEst

    // $ANTLR start synpred187_InternalSCEst
    public final void synpred187_InternalSCEst_fragment() throws RecognitionException {   
        Token otherlv_9=null;

        // InternalSCEst.g:5763:6: (otherlv_9= 'await' )
        // InternalSCEst.g:5763:6: otherlv_9= 'await'
        {
        otherlv_9=(Token)match(input,69,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred187_InternalSCEst

    // $ANTLR start synpred189_InternalSCEst
    public final void synpred189_InternalSCEst_fragment() throws RecognitionException {   
        Token otherlv_6=null;

        // InternalSCEst.g:5859:4: (otherlv_6= 'every' )
        // InternalSCEst.g:5859:4: otherlv_6= 'every'
        {
        otherlv_6=(Token)match(input,70,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred189_InternalSCEst

    // $ANTLR start synpred195_InternalSCEst
    public final void synpred195_InternalSCEst_fragment() throws RecognitionException {   
        Token otherlv_9=null;

        // InternalSCEst.g:6097:4: (otherlv_9= 'trap' )
        // InternalSCEst.g:6097:4: otherlv_9= 'trap'
        {
        otherlv_9=(Token)match(input,72,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred195_InternalSCEst

    // $ANTLR start synpred216_InternalSCEst
    public final void synpred216_InternalSCEst_fragment() throws RecognitionException {   
        Token otherlv_20=null;

        // InternalSCEst.g:6845:7: (otherlv_20= 'exec' )
        // InternalSCEst.g:6845:7: otherlv_20= 'exec'
        {
        otherlv_20=(Token)match(input,76,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred216_InternalSCEst

    // $ANTLR start synpred217_InternalSCEst
    public final void synpred217_InternalSCEst_fragment() throws RecognitionException {   
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_20=null;
        EObject lv_statements_18_0 = null;


        // InternalSCEst.g:6817:6: (otherlv_17= 'do' ( (lv_statements_18_0= ruleEsterelParallel ) ) otherlv_19= 'end' (otherlv_20= 'exec' )? )
        // InternalSCEst.g:6817:6: otherlv_17= 'do' ( (lv_statements_18_0= ruleEsterelParallel ) ) otherlv_19= 'end' (otherlv_20= 'exec' )?
        {
        otherlv_17=(Token)match(input,58,FollowSets000.FOLLOW_12); if (state.failed) return ;
        // InternalSCEst.g:6821:6: ( (lv_statements_18_0= ruleEsterelParallel ) )
        // InternalSCEst.g:6822:7: (lv_statements_18_0= ruleEsterelParallel )
        {
        // InternalSCEst.g:6822:7: (lv_statements_18_0= ruleEsterelParallel )
        // InternalSCEst.g:6823:8: lv_statements_18_0= ruleEsterelParallel
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getExecAccess().getStatementsEsterelParallelParserRuleCall_2_0_5_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_68);
        lv_statements_18_0=ruleEsterelParallel();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_19=(Token)match(input,19,FollowSets000.FOLLOW_112); if (state.failed) return ;
        // InternalSCEst.g:6844:6: (otherlv_20= 'exec' )?
        int alt508=2;
        int LA508_0 = input.LA(1);

        if ( (LA508_0==76) ) {
            alt508=1;
        }
        switch (alt508) {
            case 1 :
                // InternalSCEst.g:6845:7: otherlv_20= 'exec'
                {
                otherlv_20=(Token)match(input,76,FollowSets000.FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }
    }
    // $ANTLR end synpred217_InternalSCEst

    // $ANTLR start synpred220_InternalSCEst
    public final void synpred220_InternalSCEst_fragment() throws RecognitionException {   
        Token otherlv_23=null;

        // InternalSCEst.g:6878:6: (otherlv_23= 'exec' )
        // InternalSCEst.g:6878:6: otherlv_23= 'exec'
        {
        otherlv_23=(Token)match(input,76,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred220_InternalSCEst

    // $ANTLR start synpred231_InternalSCEst
    public final void synpred231_InternalSCEst_fragment() throws RecognitionException {   
        Token otherlv_8=null;

        // InternalSCEst.g:7222:4: (otherlv_8= 'signal' )
        // InternalSCEst.g:7222:4: otherlv_8= 'signal'
        {
        otherlv_8=(Token)match(input,77,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred231_InternalSCEst

    // $ANTLR start synpred234_InternalSCEst
    public final void synpred234_InternalSCEst_fragment() throws RecognitionException {   
        Token otherlv_8=null;

        // InternalSCEst.g:7341:4: (otherlv_8= 'var' )
        // InternalSCEst.g:7341:4: otherlv_8= 'var'
        {
        otherlv_8=(Token)match(input,78,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred234_InternalSCEst

    // $ANTLR start synpred239_InternalSCEst
    public final void synpred239_InternalSCEst_fragment() throws RecognitionException {   
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_renamings_4_0 = null;

        EObject lv_renamings_6_0 = null;


        // InternalSCEst.g:7558:6: (otherlv_3= '[' ( (lv_renamings_4_0= ruleRenamings ) ) (otherlv_5= ';' ( (lv_renamings_6_0= ruleRenamings ) ) )* otherlv_7= ']' )
        // InternalSCEst.g:7558:6: otherlv_3= '[' ( (lv_renamings_4_0= ruleRenamings ) ) (otherlv_5= ';' ( (lv_renamings_6_0= ruleRenamings ) ) )* otherlv_7= ']'
        {
        otherlv_3=(Token)match(input,49,FollowSets000.FOLLOW_122); if (state.failed) return ;
        // InternalSCEst.g:7562:6: ( (lv_renamings_4_0= ruleRenamings ) )
        // InternalSCEst.g:7563:7: (lv_renamings_4_0= ruleRenamings )
        {
        // InternalSCEst.g:7563:7: (lv_renamings_4_0= ruleRenamings )
        // InternalSCEst.g:7564:8: lv_renamings_4_0= ruleRenamings
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getRunAccess().getRenamingsRenamingsParserRuleCall_1_0_2_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_123);
        lv_renamings_4_0=ruleRenamings();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSCEst.g:7581:6: (otherlv_5= ';' ( (lv_renamings_6_0= ruleRenamings ) ) )*
        loop523:
        do {
            int alt523=2;
            int LA523_0 = input.LA(1);

            if ( (LA523_0==21) ) {
                alt523=1;
            }


            switch (alt523) {
        	case 1 :
        	    // InternalSCEst.g:7582:7: otherlv_5= ';' ( (lv_renamings_6_0= ruleRenamings ) )
        	    {
        	    otherlv_5=(Token)match(input,21,FollowSets000.FOLLOW_122); if (state.failed) return ;
        	    // InternalSCEst.g:7586:7: ( (lv_renamings_6_0= ruleRenamings ) )
        	    // InternalSCEst.g:7587:8: (lv_renamings_6_0= ruleRenamings )
        	    {
        	    // InternalSCEst.g:7587:8: (lv_renamings_6_0= ruleRenamings )
        	    // InternalSCEst.g:7588:9: lv_renamings_6_0= ruleRenamings
        	    {
        	    if ( state.backtracking==0 ) {

        	      									newCompositeNode(grammarAccess.getRunAccess().getRenamingsRenamingsParserRuleCall_1_0_2_2_1_0());
        	      								
        	    }
        	    pushFollow(FollowSets000.FOLLOW_123);
        	    lv_renamings_6_0=ruleRenamings();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop523;
            }
        } while (true);

        otherlv_7=(Token)match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred239_InternalSCEst

    // $ANTLR start synpred242_InternalSCEst
    public final void synpred242_InternalSCEst_fragment() throws RecognitionException {   
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        EObject lv_renamings_11_0 = null;

        EObject lv_renamings_13_0 = null;


        // InternalSCEst.g:7638:6: (otherlv_10= '[' ( (lv_renamings_11_0= ruleRenamings ) ) (otherlv_12= ';' ( (lv_renamings_13_0= ruleRenamings ) ) )* otherlv_14= ']' )
        // InternalSCEst.g:7638:6: otherlv_10= '[' ( (lv_renamings_11_0= ruleRenamings ) ) (otherlv_12= ';' ( (lv_renamings_13_0= ruleRenamings ) ) )* otherlv_14= ']'
        {
        otherlv_10=(Token)match(input,49,FollowSets000.FOLLOW_122); if (state.failed) return ;
        // InternalSCEst.g:7642:6: ( (lv_renamings_11_0= ruleRenamings ) )
        // InternalSCEst.g:7643:7: (lv_renamings_11_0= ruleRenamings )
        {
        // InternalSCEst.g:7643:7: (lv_renamings_11_0= ruleRenamings )
        // InternalSCEst.g:7644:8: lv_renamings_11_0= ruleRenamings
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getRunAccess().getRenamingsRenamingsParserRuleCall_1_1_2_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_123);
        lv_renamings_11_0=ruleRenamings();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSCEst.g:7661:6: (otherlv_12= ';' ( (lv_renamings_13_0= ruleRenamings ) ) )*
        loop526:
        do {
            int alt526=2;
            int LA526_0 = input.LA(1);

            if ( (LA526_0==21) ) {
                alt526=1;
            }


            switch (alt526) {
        	case 1 :
        	    // InternalSCEst.g:7662:7: otherlv_12= ';' ( (lv_renamings_13_0= ruleRenamings ) )
        	    {
        	    otherlv_12=(Token)match(input,21,FollowSets000.FOLLOW_122); if (state.failed) return ;
        	    // InternalSCEst.g:7666:7: ( (lv_renamings_13_0= ruleRenamings ) )
        	    // InternalSCEst.g:7667:8: (lv_renamings_13_0= ruleRenamings )
        	    {
        	    // InternalSCEst.g:7667:8: (lv_renamings_13_0= ruleRenamings )
        	    // InternalSCEst.g:7668:9: lv_renamings_13_0= ruleRenamings
        	    {
        	    if ( state.backtracking==0 ) {

        	      									newCompositeNode(grammarAccess.getRunAccess().getRenamingsRenamingsParserRuleCall_1_1_2_2_1_0());
        	      								
        	    }
        	    pushFollow(FollowSets000.FOLLOW_123);
        	    lv_renamings_13_0=ruleRenamings();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop526;
            }
        } while (true);

        otherlv_14=(Token)match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred242_InternalSCEst

    // $ANTLR start synpred296_InternalSCEst
    public final void synpred296_InternalSCEst_fragment() throws RecognitionException {   
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_delay_0_0 = null;

        EObject lv_expression_1_0 = null;

        EObject lv_expression_2_0 = null;

        EObject lv_expression_4_0 = null;


        // InternalSCEst.g:9846:3: ( ( ( (lv_delay_0_0= ruleExpression ) ) ( ( (lv_expression_1_0= ruleSignalOrTickReferenceExpression ) ) | ( (lv_expression_2_0= ruleSignalPreExpression ) ) | (otherlv_3= '[' ( (lv_expression_4_0= ruleSignalExpression ) ) otherlv_5= ']' ) ) ) )
        // InternalSCEst.g:9846:3: ( ( (lv_delay_0_0= ruleExpression ) ) ( ( (lv_expression_1_0= ruleSignalOrTickReferenceExpression ) ) | ( (lv_expression_2_0= ruleSignalPreExpression ) ) | (otherlv_3= '[' ( (lv_expression_4_0= ruleSignalExpression ) ) otherlv_5= ']' ) ) )
        {
        // InternalSCEst.g:9846:3: ( ( (lv_delay_0_0= ruleExpression ) ) ( ( (lv_expression_1_0= ruleSignalOrTickReferenceExpression ) ) | ( (lv_expression_2_0= ruleSignalPreExpression ) ) | (otherlv_3= '[' ( (lv_expression_4_0= ruleSignalExpression ) ) otherlv_5= ']' ) ) )
        // InternalSCEst.g:9847:4: ( (lv_delay_0_0= ruleExpression ) ) ( ( (lv_expression_1_0= ruleSignalOrTickReferenceExpression ) ) | ( (lv_expression_2_0= ruleSignalPreExpression ) ) | (otherlv_3= '[' ( (lv_expression_4_0= ruleSignalExpression ) ) otherlv_5= ']' ) )
        {
        // InternalSCEst.g:9847:4: ( (lv_delay_0_0= ruleExpression ) )
        // InternalSCEst.g:9848:5: (lv_delay_0_0= ruleExpression )
        {
        // InternalSCEst.g:9848:5: (lv_delay_0_0= ruleExpression )
        // InternalSCEst.g:9849:6: lv_delay_0_0= ruleExpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDelayExpressionAccess().getDelayExpressionParserRuleCall_0_0_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_135);
        lv_delay_0_0=ruleExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSCEst.g:9866:4: ( ( (lv_expression_1_0= ruleSignalOrTickReferenceExpression ) ) | ( (lv_expression_2_0= ruleSignalPreExpression ) ) | (otherlv_3= '[' ( (lv_expression_4_0= ruleSignalExpression ) ) otherlv_5= ']' ) )
        int alt540=3;
        switch ( input.LA(1) ) {
        case RULE_ID:
        case 98:
            {
            alt540=1;
            }
            break;
        case 129:
            {
            alt540=2;
            }
            break;
        case 49:
            {
            alt540=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 540, 0, input);

            throw nvae;
        }

        switch (alt540) {
            case 1 :
                // InternalSCEst.g:9867:5: ( (lv_expression_1_0= ruleSignalOrTickReferenceExpression ) )
                {
                // InternalSCEst.g:9867:5: ( (lv_expression_1_0= ruleSignalOrTickReferenceExpression ) )
                // InternalSCEst.g:9868:6: (lv_expression_1_0= ruleSignalOrTickReferenceExpression )
                {
                // InternalSCEst.g:9868:6: (lv_expression_1_0= ruleSignalOrTickReferenceExpression )
                // InternalSCEst.g:9869:7: lv_expression_1_0= ruleSignalOrTickReferenceExpression
                {
                if ( state.backtracking==0 ) {

                  							newCompositeNode(grammarAccess.getDelayExpressionAccess().getExpressionSignalOrTickReferenceExpressionParserRuleCall_0_1_0_0());
                  						
                }
                pushFollow(FollowSets000.FOLLOW_2);
                lv_expression_1_0=ruleSignalOrTickReferenceExpression();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalSCEst.g:9887:5: ( (lv_expression_2_0= ruleSignalPreExpression ) )
                {
                // InternalSCEst.g:9887:5: ( (lv_expression_2_0= ruleSignalPreExpression ) )
                // InternalSCEst.g:9888:6: (lv_expression_2_0= ruleSignalPreExpression )
                {
                // InternalSCEst.g:9888:6: (lv_expression_2_0= ruleSignalPreExpression )
                // InternalSCEst.g:9889:7: lv_expression_2_0= ruleSignalPreExpression
                {
                if ( state.backtracking==0 ) {

                  							newCompositeNode(grammarAccess.getDelayExpressionAccess().getExpressionSignalPreExpressionParserRuleCall_0_1_1_0());
                  						
                }
                pushFollow(FollowSets000.FOLLOW_2);
                lv_expression_2_0=ruleSignalPreExpression();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;
            case 3 :
                // InternalSCEst.g:9907:5: (otherlv_3= '[' ( (lv_expression_4_0= ruleSignalExpression ) ) otherlv_5= ']' )
                {
                // InternalSCEst.g:9907:5: (otherlv_3= '[' ( (lv_expression_4_0= ruleSignalExpression ) ) otherlv_5= ']' )
                // InternalSCEst.g:9908:6: otherlv_3= '[' ( (lv_expression_4_0= ruleSignalExpression ) ) otherlv_5= ']'
                {
                otherlv_3=(Token)match(input,49,FollowSets000.FOLLOW_64); if (state.failed) return ;
                // InternalSCEst.g:9912:6: ( (lv_expression_4_0= ruleSignalExpression ) )
                // InternalSCEst.g:9913:7: (lv_expression_4_0= ruleSignalExpression )
                {
                // InternalSCEst.g:9913:7: (lv_expression_4_0= ruleSignalExpression )
                // InternalSCEst.g:9914:8: lv_expression_4_0= ruleSignalExpression
                {
                if ( state.backtracking==0 ) {

                  								newCompositeNode(grammarAccess.getDelayExpressionAccess().getExpressionSignalExpressionParserRuleCall_0_1_2_1_0());
                  							
                }
                pushFollow(FollowSets000.FOLLOW_54);
                lv_expression_4_0=ruleSignalExpression();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                otherlv_5=(Token)match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred296_InternalSCEst

    // $ANTLR start synpred300_InternalSCEst
    public final void synpred300_InternalSCEst_fragment() throws RecognitionException {   
        EObject this_BooleanExpression_0 = null;


        // InternalSCEst.g:10045:3: (this_BooleanExpression_0= ruleBooleanExpression )
        // InternalSCEst.g:10045:3: this_BooleanExpression_0= ruleBooleanExpression
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_BooleanExpression_0=ruleBooleanExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred300_InternalSCEst

    // $ANTLR start synpred306_InternalSCEst
    public final void synpred306_InternalSCEst_fragment() throws RecognitionException {   
        EObject this_ValuedExpression_0 = null;


        // InternalSCEst.g:10359:3: (this_ValuedExpression_0= ruleValuedExpression )
        // InternalSCEst.g:10359:3: this_ValuedExpression_0= ruleValuedExpression
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ValuedExpression_0=ruleValuedExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred306_InternalSCEst

    // $ANTLR start synpred321_InternalSCEst
    public final void synpred321_InternalSCEst_fragment() throws RecognitionException {   
        EObject lv_declarations_4_0 = null;


        // InternalSCEst.g:11185:4: ( (lv_declarations_4_0= ruleDeclaration ) )
        // InternalSCEst.g:11185:4: (lv_declarations_4_0= ruleDeclaration )
        {
        // InternalSCEst.g:11185:4: (lv_declarations_4_0= ruleDeclaration )
        // InternalSCEst.g:11186:5: lv_declarations_4_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getModuleAccess().getDeclarationsDeclarationParserRuleCall_4_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_4_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred321_InternalSCEst

    // $ANTLR start synpred331_InternalSCEst
    public final void synpred331_InternalSCEst_fragment() throws RecognitionException {   
        EObject lv_declarations_4_0 = null;


        // InternalSCEst.g:11554:4: ( (lv_declarations_4_0= ruleDeclaration ) )
        // InternalSCEst.g:11554:4: (lv_declarations_4_0= ruleDeclaration )
        {
        // InternalSCEst.g:11554:4: (lv_declarations_4_0= ruleDeclaration )
        // InternalSCEst.g:11555:5: lv_declarations_4_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getConditionalAccess().getDeclarationsDeclarationParserRuleCall_4_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_4_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred331_InternalSCEst

    // $ANTLR start synpred333_InternalSCEst
    public final void synpred333_InternalSCEst_fragment() throws RecognitionException {   
        EObject lv_else_7_0 = null;


        // InternalSCEst.g:11596:4: ( ( (lv_else_7_0= ruleElseScope ) ) )
        // InternalSCEst.g:11596:4: ( (lv_else_7_0= ruleElseScope ) )
        {
        // InternalSCEst.g:11596:4: ( (lv_else_7_0= ruleElseScope ) )
        // InternalSCEst.g:11597:5: (lv_else_7_0= ruleElseScope )
        {
        // InternalSCEst.g:11597:5: (lv_else_7_0= ruleElseScope )
        // InternalSCEst.g:11598:6: lv_else_7_0= ruleElseScope
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getConditionalAccess().getElseElseScopeParserRuleCall_7_0_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_else_7_0=ruleElseScope();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred333_InternalSCEst

    // $ANTLR start synpred336_InternalSCEst
    public final void synpred336_InternalSCEst_fragment() throws RecognitionException {   
        EObject lv_declarations_4_0 = null;


        // InternalSCEst.g:11688:4: ( (lv_declarations_4_0= ruleDeclaration ) )
        // InternalSCEst.g:11688:4: (lv_declarations_4_0= ruleDeclaration )
        {
        // InternalSCEst.g:11688:4: (lv_declarations_4_0= ruleDeclaration )
        // InternalSCEst.g:11689:5: lv_declarations_4_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getElseScopeAccess().getDeclarationsDeclarationParserRuleCall_4_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_4_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred336_InternalSCEst

    // $ANTLR start synpred340_InternalSCEst
    public final void synpred340_InternalSCEst_fragment() throws RecognitionException {   
        EObject lv_statements_4_0 = null;


        // InternalSCEst.g:11809:4: ( (lv_statements_4_0= ruleStatement ) )
        // InternalSCEst.g:11809:4: (lv_statements_4_0= ruleStatement )
        {
        // InternalSCEst.g:11809:4: (lv_statements_4_0= ruleStatement )
        // InternalSCEst.g:11810:5: lv_statements_4_0= ruleStatement
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getLegacyConditionalAccess().getStatementsStatementParserRuleCall_4_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_statements_4_0=ruleStatement();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred340_InternalSCEst

    // $ANTLR start synpred347_InternalSCEst
    public final void synpred347_InternalSCEst_fragment() throws RecognitionException {   
        EObject lv_declarations_3_0 = null;


        // InternalSCEst.g:12013:6: ( (lv_declarations_3_0= ruleDeclaration ) )
        // InternalSCEst.g:12013:6: (lv_declarations_3_0= ruleDeclaration )
        {
        // InternalSCEst.g:12013:6: (lv_declarations_3_0= ruleDeclaration )
        // InternalSCEst.g:12014:7: lv_declarations_3_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getThreadAccess().getDeclarationsDeclarationParserRuleCall_1_0_2_0());
          						
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_3_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred347_InternalSCEst

    // $ANTLR start synpred349_InternalSCEst
    public final void synpred349_InternalSCEst_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        Token otherlv_5=null;
        EObject lv_annotations_1_0 = null;

        EObject lv_declarations_3_0 = null;

        EObject lv_statements_4_0 = null;


        // InternalSCEst.g:11988:4: ( ( ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' ) )
        // InternalSCEst.g:11988:4: ( ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' )
        {
        // InternalSCEst.g:11988:4: ( ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' )
        // InternalSCEst.g:11989:5: ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}'
        {
        // InternalSCEst.g:11989:5: ( (lv_annotations_1_0= ruleAnnotation ) )*
        loop548:
        do {
            int alt548=2;
            int LA548_0 = input.LA(1);

            if ( (LA548_0==RULE_COMMENT_ANNOTATION||LA548_0==128) ) {
                alt548=1;
            }


            switch (alt548) {
        	case 1 :
        	    // InternalSCEst.g:11990:6: (lv_annotations_1_0= ruleAnnotation )
        	    {
        	    // InternalSCEst.g:11990:6: (lv_annotations_1_0= ruleAnnotation )
        	    // InternalSCEst.g:11991:7: lv_annotations_1_0= ruleAnnotation
        	    {
        	    if ( state.backtracking==0 ) {

        	      							newCompositeNode(grammarAccess.getThreadAccess().getAnnotationsAnnotationParserRuleCall_1_0_0_0());
        	      						
        	    }
        	    pushFollow(FollowSets000.FOLLOW_157);
        	    lv_annotations_1_0=ruleAnnotation();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop548;
            }
        } while (true);

        otherlv_2=(Token)match(input,102,FollowSets000.FOLLOW_150); if (state.failed) return ;
        // InternalSCEst.g:12012:5: ( (lv_declarations_3_0= ruleDeclaration ) )*
        loop549:
        do {
            int alt549=2;
            alt549 = dfa549.predict(input);
            switch (alt549) {
        	case 1 :
        	    // InternalSCEst.g:12013:6: (lv_declarations_3_0= ruleDeclaration )
        	    {
        	    // InternalSCEst.g:12013:6: (lv_declarations_3_0= ruleDeclaration )
        	    // InternalSCEst.g:12014:7: lv_declarations_3_0= ruleDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      							newCompositeNode(grammarAccess.getThreadAccess().getDeclarationsDeclarationParserRuleCall_1_0_2_0());
        	      						
        	    }
        	    pushFollow(FollowSets000.FOLLOW_150);
        	    lv_declarations_3_0=ruleDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop549;
            }
        } while (true);

        // InternalSCEst.g:12031:5: ( (lv_statements_4_0= ruleStatement ) )*
        loop550:
        do {
            int alt550=2;
            int LA550_0 = input.LA(1);

            if ( (LA550_0==RULE_ID||LA550_0==RULE_COMMENT_ANNOTATION||(LA550_0>=23 && LA550_0<=24)||(LA550_0>=46 && LA550_0<=49)||(LA550_0>=51 && LA550_0<=54)||(LA550_0>=58 && LA550_0<=59)||LA550_0==61||(LA550_0>=63 && LA550_0<=64)||(LA550_0>=66 && LA550_0<=67)||(LA550_0>=69 && LA550_0<=72)||(LA550_0>=75 && LA550_0<=80)||LA550_0==100||LA550_0==102||LA550_0==104||LA550_0==128) ) {
                alt550=1;
            }


            switch (alt550) {
        	case 1 :
        	    // InternalSCEst.g:12032:6: (lv_statements_4_0= ruleStatement )
        	    {
        	    // InternalSCEst.g:12032:6: (lv_statements_4_0= ruleStatement )
        	    // InternalSCEst.g:12033:7: lv_statements_4_0= ruleStatement
        	    {
        	    if ( state.backtracking==0 ) {

        	      							newCompositeNode(grammarAccess.getThreadAccess().getStatementsStatementParserRuleCall_1_0_3_0());
        	      						
        	    }
        	    pushFollow(FollowSets000.FOLLOW_151);
        	    lv_statements_4_0=ruleStatement();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop550;
            }
        } while (true);

        otherlv_5=(Token)match(input,103,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred349_InternalSCEst

    // $ANTLR start synpred354_InternalSCEst
    public final void synpred354_InternalSCEst_fragment() throws RecognitionException {   
        EObject lv_declarations_3_0 = null;


        // InternalSCEst.g:12216:4: ( (lv_declarations_3_0= ruleDeclaration ) )
        // InternalSCEst.g:12216:4: (lv_declarations_3_0= ruleDeclaration )
        {
        // InternalSCEst.g:12216:4: (lv_declarations_3_0= ruleDeclaration )
        // InternalSCEst.g:12217:5: lv_declarations_3_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getScopeStatementAccess().getDeclarationsDeclarationParserRuleCall_3_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_3_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred354_InternalSCEst

    // $ANTLR start synpred365_InternalSCEst
    public final void synpred365_InternalSCEst_fragment() throws RecognitionException {   
        EObject lv_declarations_1_0 = null;


        // InternalSCEst.g:12539:4: ( (lv_declarations_1_0= ruleDeclaration ) )
        // InternalSCEst.g:12539:4: (lv_declarations_1_0= ruleDeclaration )
        {
        // InternalSCEst.g:12539:4: (lv_declarations_1_0= ruleDeclaration )
        // InternalSCEst.g:12540:5: lv_declarations_1_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getRootScopeAccess().getDeclarationsDeclarationParserRuleCall_1_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_1_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred365_InternalSCEst

    // $ANTLR start synpred369_InternalSCEst
    public final void synpred369_InternalSCEst_fragment() throws RecognitionException {   
        EObject lv_declarations_3_0 = null;


        // InternalSCEst.g:12653:4: ( (lv_declarations_3_0= ruleDeclaration ) )
        // InternalSCEst.g:12653:4: (lv_declarations_3_0= ruleDeclaration )
        {
        // InternalSCEst.g:12653:4: (lv_declarations_3_0= ruleDeclaration )
        // InternalSCEst.g:12654:5: lv_declarations_3_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getScopeAccess().getDeclarationsDeclarationParserRuleCall_3_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_3_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred369_InternalSCEst

    // $ANTLR start synpred372_InternalSCEst
    public final void synpred372_InternalSCEst_fragment() throws RecognitionException {   
        EObject lv_expression_0_0 = null;


        // InternalSCEst.g:12738:3: ( ( (lv_expression_0_0= ruleAnnotatedExpression ) ) )
        // InternalSCEst.g:12738:3: ( (lv_expression_0_0= ruleAnnotatedExpression ) )
        {
        // InternalSCEst.g:12738:3: ( (lv_expression_0_0= ruleAnnotatedExpression ) )
        // InternalSCEst.g:12739:4: (lv_expression_0_0= ruleAnnotatedExpression )
        {
        // InternalSCEst.g:12739:4: (lv_expression_0_0= ruleAnnotatedExpression )
        // InternalSCEst.g:12740:5: lv_expression_0_0= ruleAnnotatedExpression
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getTestEntityAccess().getExpressionAnnotatedExpressionParserRuleCall_0_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_expression_0_0=ruleAnnotatedExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred372_InternalSCEst

    // $ANTLR start synpred426_InternalSCEst
    public final void synpred426_InternalSCEst_fragment() throws RecognitionException {   
        Token otherlv_14=null;
        EObject lv_valuedObjects_13_0 = null;

        EObject lv_valuedObjects_15_0 = null;


        // InternalSCEst.g:13990:4: ( ( (lv_valuedObjects_13_0= ruleValuedObject ) ) (otherlv_14= ',' ( (lv_valuedObjects_15_0= ruleValuedObject ) ) )* )
        // InternalSCEst.g:13990:4: ( (lv_valuedObjects_13_0= ruleValuedObject ) ) (otherlv_14= ',' ( (lv_valuedObjects_15_0= ruleValuedObject ) ) )*
        {
        // InternalSCEst.g:13990:4: ( (lv_valuedObjects_13_0= ruleValuedObject ) )
        // InternalSCEst.g:13991:5: (lv_valuedObjects_13_0= ruleValuedObject )
        {
        // InternalSCEst.g:13991:5: (lv_valuedObjects_13_0= ruleValuedObject )
        // InternalSCEst.g:13992:6: lv_valuedObjects_13_0= ruleValuedObject
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getStructDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_13_0_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_125);
        lv_valuedObjects_13_0=ruleValuedObject();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSCEst.g:14009:4: (otherlv_14= ',' ( (lv_valuedObjects_15_0= ruleValuedObject ) ) )*
        loop557:
        do {
            int alt557=2;
            int LA557_0 = input.LA(1);

            if ( (LA557_0==30) ) {
                alt557=1;
            }


            switch (alt557) {
        	case 1 :
        	    // InternalSCEst.g:14010:5: otherlv_14= ',' ( (lv_valuedObjects_15_0= ruleValuedObject ) )
        	    {
        	    otherlv_14=(Token)match(input,30,FollowSets000.FOLLOW_14); if (state.failed) return ;
        	    // InternalSCEst.g:14014:5: ( (lv_valuedObjects_15_0= ruleValuedObject ) )
        	    // InternalSCEst.g:14015:6: (lv_valuedObjects_15_0= ruleValuedObject )
        	    {
        	    // InternalSCEst.g:14015:6: (lv_valuedObjects_15_0= ruleValuedObject )
        	    // InternalSCEst.g:14016:7: lv_valuedObjects_15_0= ruleValuedObject
        	    {
        	    if ( state.backtracking==0 ) {

        	      							newCompositeNode(grammarAccess.getStructDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_13_1_1_0());
        	      						
        	    }
        	    pushFollow(FollowSets000.FOLLOW_125);
        	    lv_valuedObjects_15_0=ruleValuedObject();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop557;
            }
        } while (true);


        }
    }
    // $ANTLR end synpred426_InternalSCEst

    // $ANTLR start synpred462_InternalSCEst
    public final void synpred462_InternalSCEst_fragment() throws RecognitionException {   
        EObject this_Assignment_0 = null;


        // InternalSCEst.g:15137:3: (this_Assignment_0= ruleAssignment )
        // InternalSCEst.g:15137:3: this_Assignment_0= ruleAssignment
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Assignment_0=ruleAssignment();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred462_InternalSCEst

    // $ANTLR start synpred463_InternalSCEst
    public final void synpred463_InternalSCEst_fragment() throws RecognitionException {   
        EObject this_PostfixEffect_1 = null;


        // InternalSCEst.g:15149:3: (this_PostfixEffect_1= rulePostfixEffect )
        // InternalSCEst.g:15149:3: this_PostfixEffect_1= rulePostfixEffect
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_PostfixEffect_1=rulePostfixEffect();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred463_InternalSCEst

    // $ANTLR start synpred464_InternalSCEst
    public final void synpred464_InternalSCEst_fragment() throws RecognitionException {   
        EObject this_Emission_2 = null;


        // InternalSCEst.g:15161:3: (this_Emission_2= ruleEmission )
        // InternalSCEst.g:15161:3: this_Emission_2= ruleEmission
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Emission_2=ruleEmission();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred464_InternalSCEst

    // $ANTLR start synpred465_InternalSCEst
    public final void synpred465_InternalSCEst_fragment() throws RecognitionException {   
        EObject this_HostcodeEffect_3 = null;


        // InternalSCEst.g:15173:3: (this_HostcodeEffect_3= ruleHostcodeEffect )
        // InternalSCEst.g:15173:3: this_HostcodeEffect_3= ruleHostcodeEffect
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_HostcodeEffect_3=ruleHostcodeEffect();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred465_InternalSCEst

    // $ANTLR start synpred466_InternalSCEst
    public final void synpred466_InternalSCEst_fragment() throws RecognitionException {   
        EObject this_ReferenceCallEffect_4 = null;


        // InternalSCEst.g:15185:3: (this_ReferenceCallEffect_4= ruleReferenceCallEffect )
        // InternalSCEst.g:15185:3: this_ReferenceCallEffect_4= ruleReferenceCallEffect
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ReferenceCallEffect_4=ruleReferenceCallEffect();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred466_InternalSCEst

    // $ANTLR start synpred467_InternalSCEst
    public final void synpred467_InternalSCEst_fragment() throws RecognitionException {   
        EObject this_FunctionCallEffect_5 = null;


        // InternalSCEst.g:15197:3: (this_FunctionCallEffect_5= ruleFunctionCallEffect )
        // InternalSCEst.g:15197:3: this_FunctionCallEffect_5= ruleFunctionCallEffect
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_FunctionCallEffect_5=ruleFunctionCallEffect();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred467_InternalSCEst

    // $ANTLR start synpred468_InternalSCEst
    public final void synpred468_InternalSCEst_fragment() throws RecognitionException {   
        EObject this_PrintCallEffect_6 = null;


        // InternalSCEst.g:15209:3: (this_PrintCallEffect_6= rulePrintCallEffect )
        // InternalSCEst.g:15209:3: this_PrintCallEffect_6= rulePrintCallEffect
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_PrintCallEffect_6=rulePrintCallEffect();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred468_InternalSCEst

    // $ANTLR start synpred503_InternalSCEst
    public final void synpred503_InternalSCEst_fragment() throws RecognitionException {   
        EObject lv_subExpressions_1_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;


        // InternalSCEst.g:16831:3: ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleFBYOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) )
        // InternalSCEst.g:16831:3: ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleFBYOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) )
        {
        // InternalSCEst.g:16831:3: ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleFBYOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) )
        // InternalSCEst.g:16832:4: () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleFBYOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) )
        {
        // InternalSCEst.g:16832:4: ()
        // InternalSCEst.g:16833:5: 
        {
        if ( state.backtracking==0 ) {

          					/* */
          				
        }

        }

        // InternalSCEst.g:16842:4: ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) )
        // InternalSCEst.g:16843:5: (lv_subExpressions_1_0= ruleAtomicValuedExpression )
        {
        // InternalSCEst.g:16843:5: (lv_subExpressions_1_0= ruleAtomicValuedExpression )
        // InternalSCEst.g:16844:6: lv_subExpressions_1_0= ruleAtomicValuedExpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getFBYExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_1_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_212);
        lv_subExpressions_1_0=ruleAtomicValuedExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSCEst.g:16861:4: ( (lv_operator_2_0= ruleFBYOperator ) )
        // InternalSCEst.g:16862:5: (lv_operator_2_0= ruleFBYOperator )
        {
        // InternalSCEst.g:16862:5: (lv_operator_2_0= ruleFBYOperator )
        // InternalSCEst.g:16863:6: lv_operator_2_0= ruleFBYOperator
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getFBYExpressionAccess().getOperatorFBYOperatorEnumRuleCall_0_2_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_21);
        lv_operator_2_0=ruleFBYOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSCEst.g:16880:4: ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) )
        // InternalSCEst.g:16881:5: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
        {
        // InternalSCEst.g:16881:5: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
        // InternalSCEst.g:16882:6: lv_subExpressions_3_0= ruleAtomicValuedExpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getFBYExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_3_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_3_0=ruleAtomicValuedExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred503_InternalSCEst

    // $ANTLR start synpred507_InternalSCEst
    public final void synpred507_InternalSCEst_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_indices_2_0 = null;


        // InternalSCEst.g:17091:4: (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )
        // InternalSCEst.g:17091:4: otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']'
        {
        otherlv_1=(Token)match(input,49,FollowSets000.FOLLOW_16); if (state.failed) return ;
        // InternalSCEst.g:17095:4: ( (lv_indices_2_0= ruleExpression ) )
        // InternalSCEst.g:17096:5: (lv_indices_2_0= ruleExpression )
        {
        // InternalSCEst.g:17096:5: (lv_indices_2_0= ruleExpression )
        // InternalSCEst.g:17097:6: lv_indices_2_0= ruleExpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getValuedObjectReferenceAccess().getIndicesExpressionParserRuleCall_1_1_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_54);
        lv_indices_2_0=ruleExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_3=(Token)match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred507_InternalSCEst

    // $ANTLR start synpred512_InternalSCEst
    public final void synpred512_InternalSCEst_fragment() throws RecognitionException {   
        EObject this_BoolExpression_0 = null;


        // InternalSCEst.g:17517:3: (this_BoolExpression_0= ruleBoolExpression )
        // InternalSCEst.g:17517:3: this_BoolExpression_0= ruleBoolExpression
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_BoolExpression_0=ruleBoolExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred512_InternalSCEst

    // $ANTLR start synpred513_InternalSCEst
    public final void synpred513_InternalSCEst_fragment() throws RecognitionException {   
        EObject this_ValuedExpression_1 = null;


        // InternalSCEst.g:17529:3: (this_ValuedExpression_1= ruleValuedExpression )
        // InternalSCEst.g:17529:3: this_ValuedExpression_1= ruleValuedExpression
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ValuedExpression_1=ruleValuedExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred513_InternalSCEst

    // $ANTLR start synpred525_InternalSCEst
    public final void synpred525_InternalSCEst_fragment() throws RecognitionException {   
        EObject this_KeyStringValueAnnotation_1 = null;


        // InternalSCEst.g:18007:3: (this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation )
        // InternalSCEst.g:18007:3: this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_KeyStringValueAnnotation_1=ruleKeyStringValueAnnotation();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred525_InternalSCEst

    // $ANTLR start synpred526_InternalSCEst
    public final void synpred526_InternalSCEst_fragment() throws RecognitionException {   
        EObject this_TypedKeyStringValueAnnotation_2 = null;


        // InternalSCEst.g:18019:3: (this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation )
        // InternalSCEst.g:18019:3: this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_TypedKeyStringValueAnnotation_2=ruleTypedKeyStringValueAnnotation();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred526_InternalSCEst

    // Delegated rules

    public final boolean synpred175_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred175_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred183_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred183_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred467_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred467_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred162_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred162_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred170_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred170_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred12_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred12_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred117_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred117_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred112_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred112_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred4_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred125_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred125_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred507_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred507_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred216_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred216_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred463_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred463_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred369_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred369_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred9_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred9_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred468_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred468_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred13_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred13_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred109_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred109_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred174_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred174_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred306_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred306_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred113_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred113_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred121_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred121_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred195_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred195_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred503_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred503_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred34_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred34_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred365_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred365_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred5_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred189_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred189_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred349_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred349_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred126_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred126_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred11_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred11_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred16_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred16_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred32_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred32_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred525_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred525_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred153_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred153_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred220_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred220_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred426_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred426_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred37_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred37_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred111_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred111_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred179_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred179_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred22_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred22_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred464_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred464_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred122_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred122_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred116_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred116_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred340_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred340_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred231_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred231_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred127_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred127_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred372_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred372_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred526_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred526_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred242_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred242_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred10_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred106_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred106_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred465_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred465_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred23_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred23_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred19_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred19_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred110_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred110_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred234_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred234_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred119_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred119_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred513_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred513_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred115_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred115_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred51_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred51_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred107_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred107_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred123_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred123_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred333_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred333_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred36_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred36_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred354_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred354_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred178_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred178_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred239_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred239_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred28_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred28_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred118_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred118_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred331_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred331_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred184_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred184_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred124_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred124_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred166_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred166_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred296_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred296_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred187_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred187_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred300_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred300_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred512_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred512_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred321_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred321_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred466_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred466_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred336_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred336_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred14_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred14_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred347_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred347_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred35_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred35_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred173_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred173_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred29_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred29_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred462_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred462_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred108_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred108_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred20_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred20_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred8_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred114_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred114_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred217_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred217_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred120_InternalSCEst() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred120_InternalSCEst_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA4 dfa4 = new DFA4(this);
    protected DFA7 dfa7 = new DFA7(this);
    protected DFA8 dfa8 = new DFA8(this);
    protected DFA11 dfa11 = new DFA11(this);
    protected DFA10 dfa10 = new DFA10(this);
    protected DFA16 dfa16 = new DFA16(this);
    protected DFA17 dfa17 = new DFA17(this);
    protected DFA18 dfa18 = new DFA18(this);
    protected DFA71 dfa71 = new DFA71(this);
    protected DFA102 dfa102 = new DFA102(this);
    protected DFA105 dfa105 = new DFA105(this);
    protected DFA109 dfa109 = new DFA109(this);
    protected DFA113 dfa113 = new DFA113(this);
    protected DFA122 dfa122 = new DFA122(this);
    protected DFA118 dfa118 = new DFA118(this);
    protected DFA117 dfa117 = new DFA117(this);
    protected DFA121 dfa121 = new DFA121(this);
    protected DFA130 dfa130 = new DFA130(this);
    protected DFA127 dfa127 = new DFA127(this);
    protected DFA132 dfa132 = new DFA132(this);
    protected DFA138 dfa138 = new DFA138(this);
    protected DFA157 dfa157 = new DFA157(this);
    protected DFA171 dfa171 = new DFA171(this);
    protected DFA174 dfa174 = new DFA174(this);
    protected DFA179 dfa179 = new DFA179(this);
    protected DFA181 dfa181 = new DFA181(this);
    protected DFA220 dfa220 = new DFA220(this);
    protected DFA221 dfa221 = new DFA221(this);
    protected DFA227 dfa227 = new DFA227(this);
    protected DFA241 dfa241 = new DFA241(this);
    protected DFA247 dfa247 = new DFA247(this);
    protected DFA251 dfa251 = new DFA251(this);
    protected DFA253 dfa253 = new DFA253(this);
    protected DFA255 dfa255 = new DFA255(this);
    protected DFA259 dfa259 = new DFA259(this);
    protected DFA269 dfa269 = new DFA269(this);
    protected DFA266 dfa266 = new DFA266(this);
    protected DFA273 dfa273 = new DFA273(this);
    protected DFA283 dfa283 = new DFA283(this);
    protected DFA287 dfa287 = new DFA287(this);
    protected DFA290 dfa290 = new DFA290(this);
    protected DFA292 dfa292 = new DFA292(this);
    protected DFA293 dfa293 = new DFA293(this);
    protected DFA338 dfa338 = new DFA338(this);
    protected DFA374 dfa374 = new DFA374(this);
    protected DFA377 dfa377 = new DFA377(this);
    protected DFA380 dfa380 = new DFA380(this);
    protected DFA409 dfa409 = new DFA409(this);
    protected DFA413 dfa413 = new DFA413(this);
    protected DFA418 dfa418 = new DFA418(this);
    protected DFA426 dfa426 = new DFA426(this);
    protected DFA427 dfa427 = new DFA427(this);
    protected DFA549 dfa549 = new DFA549(this);
    static final String dfa_1s = "\132\uffff";
    static final String dfa_2s = "\3\4\1\uffff\1\4\1\uffff\2\4\1\uffff\1\4\1\22\2\4\1\7\14\4\1\7\2\22\1\7\3\4\1\7\7\4\1\7\3\4\1\7\2\4\2\24\1\62\3\4\1\7\12\4\1\7\1\4\1\24\3\4\1\7\10\4\1\7\1\4\1\24\4\4\1\0\1\24\1\0";
    static final String dfa_3s = "\2\u00a4\1\4\1\uffff\1\u00a4\1\uffff\2\u00a4\1\uffff\1\u00a4\1\175\1\4\1\10\1\7\5\u00a4\2\u0080\2\u00a4\1\124\2\4\1\7\1\u009c\1\175\1\10\3\u00a4\1\10\5\u00a4\2\4\1\7\1\124\2\4\1\7\2\4\1\u009c\1\124\1\62\3\u00a4\1\10\5\u00a4\2\4\1\124\2\4\1\7\1\4\1\u009c\3\u00a4\1\10\5\u00a4\3\4\1\7\1\4\1\u009c\3\u00a4\1\4\1\0\1\u009c\1\0";
    static final String dfa_4s = "\3\uffff\1\3\1\uffff\1\1\2\uffff\1\2\121\uffff";
    static final String dfa_5s = "\127\uffff\1\0\1\uffff\1\1}>";
    static final String[] dfa_6s = {
            "\1\3\5\uffff\1\1\10\uffff\2\3\2\uffff\2\3\4\uffff\1\10\1\uffff\1\10\1\uffff\1\10\1\uffff\2\10\1\6\1\7\4\10\3\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\uffff\1\3\1\uffff\1\3\7\uffff\4\5\14\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\2\5",
            "\1\3\5\uffff\1\1\14\uffff\2\3\4\uffff\1\10\1\uffff\1\10\1\uffff\1\10\1\uffff\2\10\1\6\1\7\4\10\3\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\uffff\1\3\11\uffff\4\5\14\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\2\5",
            "\1\11",
            "",
            "\1\12\5\uffff\1\5\165\uffff\1\5\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\1\5\31\uffff\2\5",
            "",
            "\1\10\41\uffff\1\5\46\uffff\1\5\44\uffff\2\5\17\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\2\5",
            "\1\10\110\uffff\1\5\44\uffff\2\5\17\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\2\5",
            "",
            "\1\17\1\16\1\uffff\1\21\1\22\1\20\1\1\11\uffff\1\13\2\uffff\2\3\4\uffff\1\10\1\uffff\1\10\1\uffff\1\10\1\uffff\2\10\1\6\1\7\4\10\1\uffff\1\15\1\uffff\3\3\1\23\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\3\uffff\1\14\17\uffff\1\3\1\uffff\1\3\11\uffff\4\5\14\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\2\5",
            "\1\3\2\uffff\1\5\1\3\2\uffff\1\3\1\uffff\1\5\2\uffff\1\24\1\uffff\1\5\20\uffff\1\5\27\uffff\1\3\63\uffff\1\5",
            "\1\25",
            "\1\25\2\uffff\1\21\1\22",
            "\1\26",
            "\1\3\5\uffff\1\1\14\uffff\2\3\4\uffff\1\10\1\27\1\10\1\uffff\1\10\1\uffff\2\10\1\6\1\7\4\10\3\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\uffff\1\3\11\uffff\4\5\14\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\2\5",
            "\1\3\5\uffff\1\1\7\uffff\1\3\1\uffff\1\30\1\uffff\3\3\4\uffff\1\10\1\27\1\10\1\3\1\10\1\uffff\2\10\1\6\1\7\4\10\1\uffff\1\32\1\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\3\uffff\1\31\17\uffff\1\3\1\uffff\1\3\11\uffff\4\5\11\uffff\1\3\2\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\5\uffff\15\3\6\uffff\2\5",
            "\1\3\5\uffff\1\1\14\uffff\2\3\4\uffff\1\10\1\27\1\10\1\uffff\1\10\1\uffff\2\10\1\6\1\7\4\10\3\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\uffff\1\3\11\uffff\4\5\14\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\2\5",
            "\1\3\5\uffff\1\1\14\uffff\2\3\4\uffff\1\10\1\27\1\10\1\uffff\1\10\1\uffff\2\10\1\6\1\7\4\10\3\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\uffff\1\3\11\uffff\4\5\14\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\2\5",
            "\1\3\5\uffff\1\1\14\uffff\2\3\4\uffff\1\10\1\27\1\10\1\uffff\1\10\1\uffff\2\10\1\6\1\7\4\10\3\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\uffff\1\3\11\uffff\4\5\14\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\2\5",
            "\1\33\5\uffff\1\3\14\uffff\2\3\25\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\6\3\23\uffff\1\3\1\uffff\1\3\1\uffff\1\3\27\uffff\1\3",
            "\1\34\5\uffff\1\5\165\uffff\1\5",
            "\1\17\1\16\1\uffff\1\21\1\22\1\20\1\1\11\uffff\1\13\2\uffff\2\3\4\uffff\1\10\1\uffff\1\10\1\uffff\1\10\1\uffff\2\10\1\6\1\7\4\10\1\uffff\1\15\1\uffff\3\3\1\23\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\3\uffff\1\14\17\uffff\1\3\1\uffff\1\3\11\uffff\4\5\14\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\2\5",
            "\1\17\1\16\1\uffff\1\21\1\22\1\20\1\1\14\uffff\2\3\4\uffff\1\10\1\uffff\1\10\1\uffff\1\10\1\uffff\2\10\1\6\1\7\4\10\3\uffff\3\3\1\23\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\3\uffff\1\35\17\uffff\1\3\1\uffff\1\3\11\uffff\4\5\14\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\2\5",
            "\1\37\1\36\1\uffff\1\42\1\43\1\40\112\uffff\1\41",
            "\1\44",
            "\1\45",
            "\1\46",
            "\1\3\1\uffff\1\47\1\uffff\1\3\11\uffff\1\3\13\uffff\1\51\4\uffff\1\3\1\52\41\uffff\1\50\50\uffff\1\3\22\uffff\15\3",
            "\1\3\2\uffff\1\5\1\3\2\uffff\1\3\1\uffff\1\5\2\uffff\1\24\1\uffff\1\5\20\uffff\1\5\27\uffff\1\3\63\uffff\1\5",
            "\1\21\1\22",
            "\1\3\5\uffff\1\1\14\uffff\2\3\4\uffff\1\10\1\27\1\10\1\uffff\1\10\1\uffff\2\10\1\6\1\7\4\10\3\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\uffff\1\3\11\uffff\4\5\14\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\2\5",
            "\1\3\5\uffff\1\1\11\uffff\1\53\2\uffff\2\3\4\uffff\1\10\1\27\1\10\1\uffff\1\10\1\uffff\2\10\1\6\1\7\4\10\1\uffff\1\55\1\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\3\uffff\1\54\17\uffff\1\3\1\uffff\1\3\11\uffff\4\5\14\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\2\5",
            "\1\3\5\uffff\1\1\14\uffff\2\3\4\uffff\1\10\1\27\1\10\1\uffff\1\10\1\uffff\2\10\1\6\1\7\4\10\3\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\uffff\1\3\11\uffff\4\5\14\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\2\5",
            "\1\42\1\43",
            "\1\3\5\uffff\1\1\14\uffff\2\3\4\uffff\1\10\1\27\1\10\1\uffff\1\10\1\uffff\2\10\1\6\1\7\4\10\3\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\uffff\1\3\11\uffff\4\5\14\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\2\5",
            "\1\3\5\uffff\1\1\14\uffff\2\3\4\uffff\1\10\1\27\1\10\1\uffff\1\10\1\uffff\2\10\1\6\1\7\4\10\3\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\uffff\1\3\11\uffff\4\5\14\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\2\5",
            "\1\3\5\uffff\1\1\11\uffff\1\56\1\uffff\3\3\4\uffff\1\10\1\27\1\10\1\3\1\10\1\uffff\2\10\1\6\1\7\4\10\1\uffff\1\32\1\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\3\uffff\1\31\17\uffff\1\3\1\uffff\1\3\11\uffff\4\5\11\uffff\1\3\2\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\5\uffff\15\3\6\uffff\2\5",
            "\1\3\5\uffff\1\1\11\uffff\1\57\2\uffff\2\3\4\uffff\1\10\1\27\1\10\1\uffff\1\10\1\uffff\2\10\1\6\1\7\4\10\1\uffff\1\32\1\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\3\uffff\1\31\17\uffff\1\3\1\uffff\1\3\11\uffff\4\5\14\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\2\5",
            "\1\3\5\uffff\1\1\14\uffff\2\3\4\uffff\1\10\1\27\1\10\1\uffff\1\10\1\uffff\2\10\1\6\1\7\4\10\3\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\uffff\1\3\11\uffff\4\5\14\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\2\5",
            "\1\60",
            "\1\61",
            "\1\62",
            "\1\64\1\63\1\uffff\1\67\1\70\1\65\112\uffff\1\66",
            "\1\71",
            "\1\71",
            "\1\72",
            "\1\73",
            "\1\45",
            "\1\74\1\uffff\1\3\11\uffff\1\3\13\uffff\1\51\4\uffff\1\3\1\52\41\uffff\1\50\50\uffff\1\3\22\uffff\15\3",
            "\1\75\27\uffff\1\51\5\uffff\1\52\41\uffff\1\50",
            "\1\52",
            "\1\3\5\uffff\1\1\14\uffff\2\3\4\uffff\1\10\1\76\1\10\1\uffff\1\10\1\uffff\2\10\1\6\1\7\4\10\3\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\uffff\1\3\11\uffff\4\5\14\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\2\5",
            "\1\3\5\uffff\1\1\11\uffff\1\77\2\uffff\2\3\4\uffff\1\10\1\76\1\10\1\uffff\1\10\1\uffff\2\10\1\6\1\7\4\10\1\uffff\1\101\1\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\3\uffff\1\100\17\uffff\1\3\1\uffff\1\3\11\uffff\4\5\14\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\2\5",
            "\1\3\5\uffff\1\1\14\uffff\2\3\4\uffff\1\10\1\76\1\10\1\uffff\1\10\1\uffff\2\10\1\6\1\7\4\10\3\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\uffff\1\3\11\uffff\4\5\14\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\2\5",
            "\1\67\1\70",
            "\1\3\5\uffff\1\1\14\uffff\2\3\4\uffff\1\10\1\76\1\10\1\uffff\1\10\1\uffff\2\10\1\6\1\7\4\10\3\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\uffff\1\3\11\uffff\4\5\14\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\2\5",
            "\1\3\5\uffff\1\1\14\uffff\2\3\4\uffff\1\10\1\76\1\10\1\uffff\1\10\1\uffff\2\10\1\6\1\7\4\10\3\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\uffff\1\3\11\uffff\4\5\14\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\2\5",
            "\1\3\5\uffff\1\1\11\uffff\1\53\2\uffff\2\3\4\uffff\1\10\1\27\1\10\1\uffff\1\10\1\uffff\2\10\1\6\1\7\4\10\1\uffff\1\55\1\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\3\uffff\1\54\17\uffff\1\3\1\uffff\1\3\11\uffff\4\5\14\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\2\5",
            "\1\3\5\uffff\1\1\14\uffff\2\3\4\uffff\1\10\1\27\1\10\1\uffff\1\10\1\uffff\2\10\1\6\1\7\4\10\3\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\uffff\1\3\11\uffff\4\5\14\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\2\5",
            "\1\3\5\uffff\1\1\11\uffff\1\102\1\uffff\3\3\4\uffff\1\10\1\27\1\10\1\3\1\10\1\uffff\2\10\1\6\1\7\4\10\1\uffff\1\32\1\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\3\uffff\1\31\17\uffff\1\3\1\uffff\1\3\11\uffff\4\5\11\uffff\1\3\2\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\5\uffff\15\3\6\uffff\2\5",
            "\1\103",
            "\1\61",
            "\1\105\1\104\1\uffff\1\110\1\111\1\106\112\uffff\1\107",
            "\1\112",
            "\1\112",
            "\1\113",
            "\1\114",
            "\1\115\1\uffff\1\3\11\uffff\1\3\13\uffff\1\51\4\uffff\1\3\1\52\41\uffff\1\50\50\uffff\1\3\22\uffff\15\3",
            "\1\3\5\uffff\1\1\14\uffff\2\3\4\uffff\1\10\1\76\1\10\1\uffff\1\10\1\uffff\2\10\1\6\1\7\4\10\3\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\uffff\1\3\11\uffff\4\5\14\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\2\5",
            "\1\3\5\uffff\1\1\11\uffff\1\116\2\uffff\2\3\4\uffff\1\10\1\76\1\10\1\uffff\1\10\1\uffff\2\10\1\6\1\7\4\10\1\uffff\1\120\1\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\3\uffff\1\117\17\uffff\1\3\1\uffff\1\3\11\uffff\4\5\14\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\2\5",
            "\1\3\5\uffff\1\1\14\uffff\2\3\4\uffff\1\10\1\76\1\10\1\uffff\1\10\1\uffff\2\10\1\6\1\7\4\10\3\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\uffff\1\3\11\uffff\4\5\14\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\2\5",
            "\1\110\1\111",
            "\1\3\5\uffff\1\1\14\uffff\2\3\4\uffff\1\10\1\76\1\10\1\uffff\1\10\1\uffff\2\10\1\6\1\7\4\10\3\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\uffff\1\3\11\uffff\4\5\14\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\2\5",
            "\1\3\5\uffff\1\1\14\uffff\2\3\4\uffff\1\10\1\76\1\10\1\uffff\1\10\1\uffff\2\10\1\6\1\7\4\10\3\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\uffff\1\3\11\uffff\4\5\14\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\2\5",
            "\1\3\5\uffff\1\1\11\uffff\1\77\2\uffff\2\3\4\uffff\1\10\1\76\1\10\1\uffff\1\10\1\uffff\2\10\1\6\1\7\4\10\1\uffff\1\101\1\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\3\uffff\1\100\17\uffff\1\3\1\uffff\1\3\11\uffff\4\5\14\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\2\5",
            "\1\3\5\uffff\1\1\14\uffff\2\3\4\uffff\1\10\1\76\1\10\1\uffff\1\10\1\uffff\2\10\1\6\1\7\4\10\3\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\uffff\1\3\11\uffff\4\5\14\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\2\5",
            "\1\3\5\uffff\1\1\11\uffff\1\121\1\uffff\3\3\4\uffff\1\10\1\27\1\10\1\3\1\10\1\uffff\2\10\1\6\1\7\4\10\1\uffff\1\32\1\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\3\uffff\1\31\17\uffff\1\3\1\uffff\1\3\11\uffff\4\5\11\uffff\1\3\2\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\5\uffff\15\3\6\uffff\2\5",
            "\1\122",
            "\1\123",
            "\1\123",
            "\1\124",
            "\1\125",
            "\1\126\1\uffff\1\3\11\uffff\1\3\13\uffff\1\51\4\uffff\1\3\1\52\41\uffff\1\50\50\uffff\1\3\22\uffff\15\3",
            "\1\3\5\uffff\1\1\11\uffff\1\116\2\uffff\2\3\4\uffff\1\10\1\76\1\10\1\uffff\1\10\1\uffff\2\10\1\6\1\7\4\10\1\uffff\1\120\1\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\3\uffff\1\117\17\uffff\1\3\1\uffff\1\3\11\uffff\4\5\14\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\2\5",
            "\1\3\5\uffff\1\1\14\uffff\2\3\4\uffff\1\10\1\76\1\10\1\uffff\1\10\1\uffff\2\10\1\6\1\7\4\10\3\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\uffff\1\3\11\uffff\4\5\14\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\2\5",
            "\1\3\5\uffff\1\1\11\uffff\1\127\1\uffff\3\3\4\uffff\1\10\1\27\1\10\1\3\1\10\1\uffff\2\10\1\6\1\7\4\10\1\uffff\1\32\1\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\3\uffff\1\31\17\uffff\1\3\1\uffff\1\3\11\uffff\4\5\11\uffff\1\3\2\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\5\uffff\15\3\6\uffff\2\5",
            "\1\130",
            "\1\uffff",
            "\1\131\1\uffff\1\3\11\uffff\1\3\13\uffff\1\51\4\uffff\1\3\1\52\41\uffff\1\50\50\uffff\1\3\22\uffff\15\3",
            "\1\uffff"
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA4 extends DFA {

        public DFA4(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 4;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "()* loopback of 197:3: ( ( (lv_declarations_4_0= ruleVariableDeclaration ) ) | ( (lv_declarations_5_0= ruleEsterelDeclaration ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA4_87 = input.LA(1);

                         
                        int index4_87 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalSCEst()) ) {s = 5;}

                        else if ( (synpred5_InternalSCEst()) ) {s = 8;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index4_87);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA4_89 = input.LA(1);

                         
                        int index4_89 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalSCEst()) ) {s = 5;}

                        else if ( (synpred5_InternalSCEst()) ) {s = 8;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index4_89);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 4, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_7s = "\124\uffff";
    static final String dfa_8s = "\3\4\3\uffff\3\4\1\7\10\4\1\22\3\4\2\7\2\4\1\7\4\4\1\7\5\4\2\24\1\62\3\4\1\7\4\4\1\7\7\4\1\7\3\4\1\24\3\4\1\7\10\4\1\7\1\4\1\24\5\4\1\24\2\0";
    static final String dfa_9s = "\2\u0080\1\4\3\uffff\1\u0080\1\4\1\10\1\7\10\u0080\1\u009c\1\124\2\4\1\7\1\10\2\4\1\7\1\124\3\u0080\1\10\5\u0080\1\u009c\1\124\1\62\3\u0080\1\10\2\u0080\2\4\1\7\4\4\1\124\2\4\1\7\3\u0080\1\u009c\3\u0080\1\10\4\u0080\4\4\1\7\1\u0080\1\u009c\2\u0080\2\4\1\u0080\1\u009c\2\0";
    static final String dfa_10s = "\3\uffff\1\1\1\2\1\3\116\uffff";
    static final String dfa_11s = "\122\uffff\1\0\1\1}>";
    static final String[] dfa_12s = {
            "\1\3\5\uffff\1\1\14\uffff\1\4\1\5\25\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\6\3\57\uffff\1\2",
            "\1\3\5\uffff\1\1\14\uffff\1\4\1\5\25\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\6\3\57\uffff\1\2",
            "\1\6",
            "",
            "",
            "",
            "\1\14\1\13\1\uffff\1\16\1\17\1\15\1\1\11\uffff\1\7\2\uffff\1\4\1\5\23\uffff\1\11\1\uffff\3\3\1\12\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\6\3\3\uffff\1\10\53\uffff\1\2",
            "\1\20",
            "\1\20\2\uffff\1\16\1\17",
            "\1\21",
            "\1\22\5\uffff\1\3\14\uffff\2\3\25\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\6\3\23\uffff\1\3\1\uffff\1\3\1\uffff\1\3\27\uffff\1\3",
            "\1\3\5\uffff\1\1\14\uffff\1\4\1\5\5\uffff\1\23\17\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\6\3\57\uffff\1\2",
            "\1\3\5\uffff\1\1\11\uffff\1\24\1\uffff\1\3\1\4\1\5\5\uffff\1\23\15\uffff\1\26\1\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\6\3\3\uffff\1\25\50\uffff\1\3\2\uffff\1\2",
            "\1\3\5\uffff\1\1\14\uffff\1\4\1\5\5\uffff\1\23\17\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\6\3\57\uffff\1\2",
            "\1\3\5\uffff\1\1\14\uffff\1\4\1\5\5\uffff\1\23\17\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\6\3\57\uffff\1\2",
            "\1\3\5\uffff\1\1\14\uffff\1\4\1\5\5\uffff\1\23\17\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\6\3\57\uffff\1\2",
            "\1\14\1\13\1\uffff\1\16\1\17\1\15\1\1\11\uffff\1\7\2\uffff\1\4\1\5\23\uffff\1\11\1\uffff\3\3\1\12\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\6\3\3\uffff\1\10\53\uffff\1\2",
            "\1\14\1\13\1\uffff\1\16\1\17\1\15\1\1\14\uffff\1\4\1\5\25\uffff\3\3\1\12\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\6\3\3\uffff\1\27\53\uffff\1\2",
            "\1\3\1\uffff\1\30\1\uffff\1\3\11\uffff\1\3\13\uffff\1\32\4\uffff\1\3\1\33\41\uffff\1\31\50\uffff\1\3\22\uffff\15\3",
            "\1\35\1\34\1\uffff\1\40\1\41\1\36\112\uffff\1\37",
            "\1\42",
            "\1\43",
            "\1\44",
            "\1\16\1\17",
            "\1\45",
            "\1\46",
            "\1\47",
            "\1\51\1\50\1\uffff\1\54\1\55\1\52\112\uffff\1\53",
            "\1\3\5\uffff\1\1\14\uffff\1\4\1\5\5\uffff\1\23\17\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\6\3\57\uffff\1\2",
            "\1\3\5\uffff\1\1\11\uffff\1\56\2\uffff\1\4\1\5\5\uffff\1\23\15\uffff\1\60\1\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\6\3\3\uffff\1\57\53\uffff\1\2",
            "\1\3\5\uffff\1\1\14\uffff\1\4\1\5\5\uffff\1\23\17\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\6\3\57\uffff\1\2",
            "\1\40\1\41",
            "\1\3\5\uffff\1\1\14\uffff\1\4\1\5\5\uffff\1\23\17\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\6\3\57\uffff\1\2",
            "\1\3\5\uffff\1\1\14\uffff\1\4\1\5\5\uffff\1\23\17\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\6\3\57\uffff\1\2",
            "\1\3\5\uffff\1\1\11\uffff\1\61\1\uffff\1\3\1\4\1\5\5\uffff\1\23\15\uffff\1\26\1\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\6\3\3\uffff\1\25\50\uffff\1\3\2\uffff\1\2",
            "\1\3\5\uffff\1\1\11\uffff\1\62\2\uffff\1\4\1\5\5\uffff\1\23\15\uffff\1\26\1\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\6\3\3\uffff\1\25\53\uffff\1\2",
            "\1\3\5\uffff\1\1\14\uffff\1\4\1\5\5\uffff\1\23\17\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\6\3\57\uffff\1\2",
            "\1\63\1\uffff\1\3\11\uffff\1\3\13\uffff\1\32\4\uffff\1\3\1\33\41\uffff\1\31\50\uffff\1\3\22\uffff\15\3",
            "\1\64\27\uffff\1\32\5\uffff\1\33\41\uffff\1\31",
            "\1\33",
            "\1\3\5\uffff\1\1\14\uffff\1\4\1\5\5\uffff\1\65\17\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\6\3\57\uffff\1\2",
            "\1\3\5\uffff\1\1\11\uffff\1\66\2\uffff\1\4\1\5\5\uffff\1\65\15\uffff\1\70\1\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\6\3\3\uffff\1\67\53\uffff\1\2",
            "\1\3\5\uffff\1\1\14\uffff\1\4\1\5\5\uffff\1\65\17\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\6\3\57\uffff\1\2",
            "\1\54\1\55",
            "\1\3\5\uffff\1\1\14\uffff\1\4\1\5\5\uffff\1\65\17\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\6\3\57\uffff\1\2",
            "\1\3\5\uffff\1\1\14\uffff\1\4\1\5\5\uffff\1\65\17\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\6\3\57\uffff\1\2",
            "\1\71",
            "\1\71",
            "\1\72",
            "\1\73",
            "\1\43",
            "\1\74",
            "\1\46",
            "\1\76\1\75\1\uffff\1\101\1\102\1\77\112\uffff\1\100",
            "\1\103",
            "\1\103",
            "\1\104",
            "\1\3\5\uffff\1\1\11\uffff\1\56\2\uffff\1\4\1\5\5\uffff\1\23\15\uffff\1\60\1\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\6\3\3\uffff\1\57\53\uffff\1\2",
            "\1\3\5\uffff\1\1\14\uffff\1\4\1\5\5\uffff\1\23\17\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\6\3\57\uffff\1\2",
            "\1\3\5\uffff\1\1\11\uffff\1\105\1\uffff\1\3\1\4\1\5\5\uffff\1\23\15\uffff\1\26\1\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\6\3\3\uffff\1\25\50\uffff\1\3\2\uffff\1\2",
            "\1\106\1\uffff\1\3\11\uffff\1\3\13\uffff\1\32\4\uffff\1\3\1\33\41\uffff\1\31\50\uffff\1\3\22\uffff\15\3",
            "\1\3\5\uffff\1\1\14\uffff\1\4\1\5\5\uffff\1\65\17\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\6\3\57\uffff\1\2",
            "\1\3\5\uffff\1\1\11\uffff\1\107\2\uffff\1\4\1\5\5\uffff\1\65\15\uffff\1\111\1\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\6\3\3\uffff\1\110\53\uffff\1\2",
            "\1\3\5\uffff\1\1\14\uffff\1\4\1\5\5\uffff\1\65\17\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\6\3\57\uffff\1\2",
            "\1\101\1\102",
            "\1\3\5\uffff\1\1\14\uffff\1\4\1\5\5\uffff\1\65\17\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\6\3\57\uffff\1\2",
            "\1\3\5\uffff\1\1\14\uffff\1\4\1\5\5\uffff\1\65\17\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\6\3\57\uffff\1\2",
            "\1\3\5\uffff\1\1\11\uffff\1\66\2\uffff\1\4\1\5\5\uffff\1\65\15\uffff\1\70\1\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\6\3\3\uffff\1\67\53\uffff\1\2",
            "\1\3\5\uffff\1\1\14\uffff\1\4\1\5\5\uffff\1\65\17\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\6\3\57\uffff\1\2",
            "\1\112",
            "\1\113",
            "\1\114",
            "\1\114",
            "\1\115",
            "\1\3\5\uffff\1\1\11\uffff\1\116\1\uffff\1\3\1\4\1\5\5\uffff\1\23\15\uffff\1\26\1\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\6\3\3\uffff\1\25\50\uffff\1\3\2\uffff\1\2",
            "\1\117\1\uffff\1\3\11\uffff\1\3\13\uffff\1\32\4\uffff\1\3\1\33\41\uffff\1\31\50\uffff\1\3\22\uffff\15\3",
            "\1\3\5\uffff\1\1\11\uffff\1\107\2\uffff\1\4\1\5\5\uffff\1\65\15\uffff\1\111\1\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\6\3\3\uffff\1\110\53\uffff\1\2",
            "\1\3\5\uffff\1\1\14\uffff\1\4\1\5\5\uffff\1\65\17\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\6\3\57\uffff\1\2",
            "\1\120",
            "\1\121",
            "\1\3\5\uffff\1\1\11\uffff\1\122\1\uffff\1\3\1\4\1\5\5\uffff\1\23\15\uffff\1\26\1\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\6\3\3\uffff\1\25\50\uffff\1\3\2\uffff\1\2",
            "\1\123\1\uffff\1\3\11\uffff\1\3\13\uffff\1\32\4\uffff\1\3\1\33\41\uffff\1\31\50\uffff\1\3\22\uffff\15\3",
            "\1\uffff",
            "\1\uffff"
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final char[] dfa_8 = DFA.unpackEncodedStringToUnsignedChars(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final short[] dfa_10 = DFA.unpackEncodedString(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[][] dfa_12 = unpackEncodedStringArray(dfa_12s);

    class DFA7 extends DFA {

        public DFA7(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 7;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_8;
            this.max = dfa_9;
            this.accept = dfa_10;
            this.special = dfa_11;
            this.transition = dfa_12;
        }
        public String getDescription() {
            return "320:2: (this_InstructionStatement_0= superInstructionStatement | this_UnEmit_1= ruleUnEmit | this_Set_2= ruleSet )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA7_82 = input.LA(1);

                         
                        int index7_82 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred8_InternalSCEst()) ) {s = 3;}

                        else if ( (synpred9_InternalSCEst()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index7_82);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA7_83 = input.LA(1);

                         
                        int index7_83 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred8_InternalSCEst()) ) {s = 3;}

                        else if ( (synpred9_InternalSCEst()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index7_83);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 7, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_13s = "\15\uffff";
    static final String dfa_14s = "\1\4\4\0\10\uffff";
    static final String dfa_15s = "\1\u0080\4\0\10\uffff";
    static final String dfa_16s = "\5\uffff\1\5\1\6\1\7\1\10\1\1\1\2\1\3\1\4";
    static final String dfa_17s = "\1\uffff\1\0\1\1\1\2\1\3\10\uffff}>";
    static final String[] dfa_18s = {
            "\1\3\5\uffff\1\1\60\uffff\1\4\23\uffff\1\7\24\uffff\1\5\1\uffff\1\10\1\uffff\1\6\27\uffff\1\2",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final char[] dfa_14 = DFA.unpackEncodedStringToUnsignedChars(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final short[] dfa_16 = DFA.unpackEncodedString(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[][] dfa_18 = unpackEncodedStringArray(dfa_18s);

    class DFA8 extends DFA {

        public DFA8(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 8;
            this.eot = dfa_13;
            this.eof = dfa_13;
            this.min = dfa_14;
            this.max = dfa_15;
            this.accept = dfa_16;
            this.special = dfa_17;
            this.transition = dfa_18;
        }
        public String getDescription() {
            return "374:2: (this_Assignment_0= ruleAssignment | this_Label_1= ruleLabel | this_Conditional_2= ruleConditional | this_LegacyConditional_3= ruleLegacyConditional | this_Goto_4= ruleGoto | this_Parallel_5= ruleParallel | this_ModuleCall_6= ruleModuleCall | this_ScopeStatement_7= ruleScopeStatement )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA8_1 = input.LA(1);

                         
                        int index8_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalSCEst()) ) {s = 9;}

                        else if ( (synpred11_InternalSCEst()) ) {s = 10;}

                        else if ( (synpred12_InternalSCEst()) ) {s = 11;}

                        else if ( (synpred13_InternalSCEst()) ) {s = 12;}

                        else if ( (synpred14_InternalSCEst()) ) {s = 5;}

                        else if ( (synpred16_InternalSCEst()) ) {s = 7;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index8_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA8_2 = input.LA(1);

                         
                        int index8_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalSCEst()) ) {s = 9;}

                        else if ( (synpred11_InternalSCEst()) ) {s = 10;}

                        else if ( (synpred12_InternalSCEst()) ) {s = 11;}

                        else if ( (synpred13_InternalSCEst()) ) {s = 12;}

                        else if ( (synpred14_InternalSCEst()) ) {s = 5;}

                        else if ( (synpred16_InternalSCEst()) ) {s = 7;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index8_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA8_3 = input.LA(1);

                         
                        int index8_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalSCEst()) ) {s = 9;}

                        else if ( (synpred11_InternalSCEst()) ) {s = 10;}

                         
                        input.seek(index8_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA8_4 = input.LA(1);

                         
                        int index8_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalSCEst()) ) {s = 11;}

                        else if ( (synpred13_InternalSCEst()) ) {s = 12;}

                         
                        input.seek(index8_4);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 8, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_19s = "\42\uffff";
    static final String dfa_20s = "\1\4\2\0\7\uffff\1\0\11\uffff\1\0\1\uffff\1\0\13\uffff";
    static final String dfa_21s = "\1\u0080\2\0\7\uffff\1\0\11\uffff\1\0\1\uffff\1\0\13\uffff";
    static final String dfa_22s = "\3\uffff\1\1\33\uffff\1\2\2\uffff";
    static final String dfa_23s = "\1\uffff\1\0\1\1\7\uffff\1\2\11\uffff\1\3\1\uffff\1\4\13\uffff}>";
    static final String[] dfa_24s = {
            "\1\12\5\uffff\1\1\14\uffff\2\3\25\uffff\4\3\1\uffff\4\3\3\uffff\1\3\1\24\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\4\3\1\26\1\3\23\uffff\1\37\1\uffff\1\37\1\uffff\1\37\27\uffff\1\2",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final char[] dfa_20 = DFA.unpackEncodedStringToUnsignedChars(dfa_20s);
    static final char[] dfa_21 = DFA.unpackEncodedStringToUnsignedChars(dfa_21s);
    static final short[] dfa_22 = DFA.unpackEncodedString(dfa_22s);
    static final short[] dfa_23 = DFA.unpackEncodedString(dfa_23s);
    static final short[][] dfa_24 = unpackEncodedStringArray(dfa_24s);

    class DFA11 extends DFA {

        public DFA11(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 11;
            this.eot = dfa_19;
            this.eof = dfa_19;
            this.min = dfa_20;
            this.max = dfa_21;
            this.accept = dfa_22;
            this.special = dfa_23;
            this.transition = dfa_24;
        }
        public String getDescription() {
            return "488:2: ( (this_InstructionStatement_0= ruleInstructionStatement ( () ( ( ( ';' )=>otherlv_2= ';' ) ( (lv_statements_3_0= ruleEsterelThread ) ) ) )? ) | (this_SCLStatement_4= ruleSCLStatement ( () ( (lv_statements_6_0= ruleEsterelThread ) ) )? ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA11_1 = input.LA(1);

                         
                        int index11_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_InternalSCEst()) ) {s = 3;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index11_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA11_2 = input.LA(1);

                         
                        int index11_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_InternalSCEst()) ) {s = 3;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index11_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA11_10 = input.LA(1);

                         
                        int index11_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_InternalSCEst()) ) {s = 3;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index11_10);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA11_20 = input.LA(1);

                         
                        int index11_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_InternalSCEst()) ) {s = 3;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index11_20);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA11_22 = input.LA(1);

                         
                        int index11_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_InternalSCEst()) ) {s = 3;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index11_22);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 11, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_25s = "\63\uffff";
    static final String dfa_26s = "\1\42\62\uffff";
    static final String dfa_27s = "\1\4\41\0\21\uffff";
    static final String dfa_28s = "\1\u0080\41\0\21\uffff";
    static final String dfa_29s = "\42\uffff\1\2\17\uffff\1\1";
    static final String dfa_30s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\21\uffff}>";
    static final String[] dfa_31s = {
            "\1\12\5\uffff\1\1\10\uffff\2\42\2\uffff\1\35\1\36\24\uffff\1\42\1\3\1\4\1\5\1\33\1\42\1\6\1\17\1\30\1\10\1\uffff\2\42\1\34\1\24\1\42\1\15\1\42\1\31\1\32\1\uffff\1\13\1\14\1\42\1\11\1\16\1\21\1\20\1\uffff\1\42\1\7\1\25\1\22\1\23\1\26\1\27\15\uffff\2\42\4\uffff\1\37\1\uffff\1\41\1\42\1\40\2\42\25\uffff\1\2",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final short[] dfa_26 = DFA.unpackEncodedString(dfa_26s);
    static final char[] dfa_27 = DFA.unpackEncodedStringToUnsignedChars(dfa_27s);
    static final char[] dfa_28 = DFA.unpackEncodedStringToUnsignedChars(dfa_28s);
    static final short[] dfa_29 = DFA.unpackEncodedString(dfa_29s);
    static final short[] dfa_30 = DFA.unpackEncodedString(dfa_30s);
    static final short[][] dfa_31 = unpackEncodedStringArray(dfa_31s);

    class DFA10 extends DFA {

        public DFA10(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 10;
            this.eot = dfa_25;
            this.eof = dfa_26;
            this.min = dfa_27;
            this.max = dfa_28;
            this.accept = dfa_29;
            this.special = dfa_30;
            this.transition = dfa_31;
        }
        public String getDescription() {
            return "555:4: ( () ( (lv_statements_6_0= ruleEsterelThread ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA10_1 = input.LA(1);

                         
                        int index10_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalSCEst()) ) {s = 50;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index10_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA10_2 = input.LA(1);

                         
                        int index10_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalSCEst()) ) {s = 50;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index10_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA10_3 = input.LA(1);

                         
                        int index10_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalSCEst()) ) {s = 50;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index10_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA10_4 = input.LA(1);

                         
                        int index10_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalSCEst()) ) {s = 50;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index10_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA10_5 = input.LA(1);

                         
                        int index10_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalSCEst()) ) {s = 50;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index10_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA10_6 = input.LA(1);

                         
                        int index10_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalSCEst()) ) {s = 50;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index10_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA10_7 = input.LA(1);

                         
                        int index10_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalSCEst()) ) {s = 50;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index10_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA10_8 = input.LA(1);

                         
                        int index10_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalSCEst()) ) {s = 50;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index10_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA10_9 = input.LA(1);

                         
                        int index10_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalSCEst()) ) {s = 50;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index10_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA10_10 = input.LA(1);

                         
                        int index10_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalSCEst()) ) {s = 50;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index10_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA10_11 = input.LA(1);

                         
                        int index10_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalSCEst()) ) {s = 50;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index10_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA10_12 = input.LA(1);

                         
                        int index10_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalSCEst()) ) {s = 50;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index10_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA10_13 = input.LA(1);

                         
                        int index10_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalSCEst()) ) {s = 50;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index10_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA10_14 = input.LA(1);

                         
                        int index10_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalSCEst()) ) {s = 50;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index10_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA10_15 = input.LA(1);

                         
                        int index10_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalSCEst()) ) {s = 50;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index10_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA10_16 = input.LA(1);

                         
                        int index10_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalSCEst()) ) {s = 50;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index10_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA10_17 = input.LA(1);

                         
                        int index10_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalSCEst()) ) {s = 50;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index10_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA10_18 = input.LA(1);

                         
                        int index10_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalSCEst()) ) {s = 50;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index10_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA10_19 = input.LA(1);

                         
                        int index10_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalSCEst()) ) {s = 50;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index10_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA10_20 = input.LA(1);

                         
                        int index10_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalSCEst()) ) {s = 50;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index10_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA10_21 = input.LA(1);

                         
                        int index10_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalSCEst()) ) {s = 50;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index10_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA10_22 = input.LA(1);

                         
                        int index10_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalSCEst()) ) {s = 50;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index10_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA10_23 = input.LA(1);

                         
                        int index10_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalSCEst()) ) {s = 50;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index10_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA10_24 = input.LA(1);

                         
                        int index10_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalSCEst()) ) {s = 50;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index10_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA10_25 = input.LA(1);

                         
                        int index10_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalSCEst()) ) {s = 50;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index10_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA10_26 = input.LA(1);

                         
                        int index10_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalSCEst()) ) {s = 50;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index10_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA10_27 = input.LA(1);

                         
                        int index10_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalSCEst()) ) {s = 50;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index10_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA10_28 = input.LA(1);

                         
                        int index10_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalSCEst()) ) {s = 50;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index10_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA10_29 = input.LA(1);

                         
                        int index10_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalSCEst()) ) {s = 50;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index10_29);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA10_30 = input.LA(1);

                         
                        int index10_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalSCEst()) ) {s = 50;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index10_30);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA10_31 = input.LA(1);

                         
                        int index10_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalSCEst()) ) {s = 50;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index10_31);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA10_32 = input.LA(1);

                         
                        int index10_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalSCEst()) ) {s = 50;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index10_32);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA10_33 = input.LA(1);

                         
                        int index10_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalSCEst()) ) {s = 50;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index10_33);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 10, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_32s = "\14\uffff";
    static final String dfa_33s = "\1\4\1\31\1\uffff\1\0\10\uffff";
    static final String dfa_34s = "\1\u0082\1\42\1\uffff\1\0\10\uffff";
    static final String dfa_35s = "\2\uffff\1\2\1\uffff\1\4\1\5\1\6\1\7\1\10\1\11\1\1\1\3";
    static final String dfa_36s = "\1\uffff\1\0\1\uffff\1\1\10\uffff}>";
    static final String[] dfa_37s = {
            "\1\1\1\7\1\5\2\7\1\3\1\5\16\uffff\1\6\107\uffff\1\2\1\11\22\uffff\1\10\12\uffff\1\5\2\4",
            "\1\12\10\uffff\1\12",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_32 = DFA.unpackEncodedString(dfa_32s);
    static final char[] dfa_33 = DFA.unpackEncodedStringToUnsignedChars(dfa_33s);
    static final char[] dfa_34 = DFA.unpackEncodedStringToUnsignedChars(dfa_34s);
    static final short[] dfa_35 = DFA.unpackEncodedString(dfa_35s);
    static final short[] dfa_36 = DFA.unpackEncodedString(dfa_36s);
    static final short[][] dfa_37 = unpackEncodedStringArray(dfa_37s);

    class DFA16 extends DFA {

        public DFA16(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 16;
            this.eot = dfa_32;
            this.eof = dfa_32;
            this.min = dfa_33;
            this.max = dfa_34;
            this.accept = dfa_35;
            this.special = dfa_36;
            this.transition = dfa_37;
        }
        public String getDescription() {
            return "884:2: (this_EsterelFunctionCall_0= ruleEsterelFunctionCall | this_TrapExpression_1= ruleTrapExpression | this_BoolValue_2= ruleBoolValue | this_ValuedObjectPreExpression_3= ruleValuedObjectPreExpression | this_TextExpression_4= ruleTextExpression | (otherlv_5= '(' this_BooleanExpression_6= ruleBooleanExpression otherlv_7= ')' ) | this_ConstantExpression_8= ruleConstantExpression | this_FunctionCall_9= ruleFunctionCall | this_SignalOrTickReferenceExpression_10= ruleSignalOrTickReferenceExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA16_1 = input.LA(1);

                         
                        int index16_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA16_1==25||LA16_1==34) ) {s = 10;}

                        else if ( (synpred29_InternalSCEst()) ) {s = 4;}

                        else if ( (synpred32_InternalSCEst()) ) {s = 7;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index16_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA16_3 = input.LA(1);

                         
                        int index16_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred28_InternalSCEst()) ) {s = 11;}

                        else if ( (synpred32_InternalSCEst()) ) {s = 7;}

                         
                        input.seek(index16_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 16, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_38s = "\23\uffff";
    static final String dfa_39s = "\1\4\3\0\10\uffff\1\0\6\uffff";
    static final String dfa_40s = "\1\u0082\3\0\10\uffff\1\0\6\uffff";
    static final String dfa_41s = "\4\uffff\1\4\12\uffff\1\1\1\2\1\3\1\5";
    static final String dfa_42s = "\1\uffff\1\0\1\1\1\2\10\uffff\1\3\6\uffff}>";
    static final String[] dfa_43s = {
            "\1\4\1\14\1\4\1\1\1\2\2\4\16\uffff\1\3\107\uffff\2\4\22\uffff\1\4\12\uffff\3\4",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_38 = DFA.unpackEncodedString(dfa_38s);
    static final char[] dfa_39 = DFA.unpackEncodedStringToUnsignedChars(dfa_39s);
    static final char[] dfa_40 = DFA.unpackEncodedStringToUnsignedChars(dfa_40s);
    static final short[] dfa_41 = DFA.unpackEncodedString(dfa_41s);
    static final short[] dfa_42 = DFA.unpackEncodedString(dfa_42s);
    static final short[][] dfa_43 = unpackEncodedStringArray(dfa_43s);

    class DFA17 extends DFA {

        public DFA17(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 17;
            this.eot = dfa_38;
            this.eof = dfa_38;
            this.min = dfa_39;
            this.max = dfa_40;
            this.accept = dfa_41;
            this.special = dfa_42;
            this.transition = dfa_43;
        }
        public String getDescription() {
            return "1020:2: (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | (otherlv_2= '(' this_ValuedExpression_3= ruleValuedExpression otherlv_4= ')' ) | this_AtomicExpression_5= ruleAtomicExpression | this_StringValue_6= ruleStringValue )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA17_1 = input.LA(1);

                         
                        int index17_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred34_InternalSCEst()) ) {s = 15;}

                        else if ( (synpred37_InternalSCEst()) ) {s = 4;}

                         
                        input.seek(index17_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA17_2 = input.LA(1);

                         
                        int index17_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred35_InternalSCEst()) ) {s = 16;}

                        else if ( (synpred37_InternalSCEst()) ) {s = 4;}

                         
                        input.seek(index17_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA17_3 = input.LA(1);

                         
                        int index17_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred36_InternalSCEst()) ) {s = 17;}

                        else if ( (synpred37_InternalSCEst()) ) {s = 4;}

                         
                        input.seek(index17_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA17_12 = input.LA(1);

                         
                        int index17_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalSCEst()) ) {s = 4;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index17_12);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 17, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_44s = "\112\uffff";
    static final String dfa_45s = "\2\12\1\4\13\uffff\3\4\1\7\5\12\6\4\1\7\1\24\1\7\3\12\1\7\4\12\2\4\1\7\3\4\1\7\1\24\1\62\3\12\1\7\4\12\3\4\1\7\3\12\1\7\4\12\2\4\1\7\2\12";
    static final String dfa_46s = "\2\u0080\1\4\13\uffff\1\u0080\1\4\1\10\1\7\5\u0080\1\4\2\u0080\1\124\2\4\1\7\1\124\1\10\3\u0080\1\10\4\u0080\2\4\1\7\1\124\2\4\1\7\1\124\1\62\3\u0080\1\10\4\u0080\1\124\2\4\1\7\3\u0080\1\10\4\u0080\2\4\1\7\2\u0080";
    static final String dfa_47s = "\3\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\74\uffff";
    static final String dfa_48s = "\112\uffff}>";
    static final String[] dfa_49s = {
            "\1\1\22\uffff\1\7\1\uffff\1\11\1\uffff\1\14\1\uffff\1\15\1\13\1\3\1\4\1\5\1\6\1\10\1\12\125\uffff\1\2",
            "\1\1\22\uffff\1\7\1\uffff\1\11\1\uffff\1\14\1\uffff\1\15\1\13\1\3\1\4\1\5\1\6\1\10\1\12\125\uffff\1\2",
            "\1\16",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\23\1\22\1\uffff\1\25\1\26\1\24\1\1\11\uffff\1\17\10\uffff\1\7\1\uffff\1\11\1\uffff\1\14\1\uffff\1\15\1\13\1\3\1\4\1\5\1\6\1\10\1\12\1\uffff\1\21\4\uffff\1\27\42\uffff\1\20\53\uffff\1\2",
            "\1\30",
            "\1\30\2\uffff\1\25\1\26",
            "\1\31",
            "\1\1\22\uffff\1\7\1\32\1\11\1\uffff\1\14\1\uffff\1\15\1\13\1\3\1\4\1\5\1\6\1\10\1\12\125\uffff\1\2",
            "\1\1\11\uffff\1\33\10\uffff\1\7\1\32\1\11\1\uffff\1\14\1\uffff\1\15\1\13\1\3\1\4\1\5\1\6\1\10\1\12\1\uffff\1\35\47\uffff\1\34\53\uffff\1\2",
            "\1\1\22\uffff\1\7\1\32\1\11\1\uffff\1\14\1\uffff\1\15\1\13\1\3\1\4\1\5\1\6\1\10\1\12\125\uffff\1\2",
            "\1\1\22\uffff\1\7\1\32\1\11\1\uffff\1\14\1\uffff\1\15\1\13\1\3\1\4\1\5\1\6\1\10\1\12\125\uffff\1\2",
            "\1\1\22\uffff\1\7\1\32\1\11\1\uffff\1\14\1\uffff\1\15\1\13\1\3\1\4\1\5\1\6\1\10\1\12\125\uffff\1\2",
            "\1\36",
            "\1\23\1\22\1\uffff\1\25\1\26\1\24\1\1\11\uffff\1\17\10\uffff\1\7\1\uffff\1\11\1\uffff\1\14\1\uffff\1\15\1\13\1\3\1\4\1\5\1\6\1\10\1\12\1\uffff\1\21\4\uffff\1\27\42\uffff\1\20\53\uffff\1\2",
            "\1\23\1\22\1\uffff\1\25\1\26\1\24\1\1\22\uffff\1\7\1\uffff\1\11\1\uffff\1\14\1\uffff\1\15\1\13\1\3\1\4\1\5\1\6\1\10\1\12\6\uffff\1\27\42\uffff\1\37\53\uffff\1\2",
            "\1\41\1\40\1\uffff\1\44\1\45\1\42\112\uffff\1\43",
            "\1\46",
            "\1\46",
            "\1\47",
            "\1\50\27\uffff\1\52\5\uffff\1\53\41\uffff\1\51",
            "\1\25\1\26",
            "\1\1\22\uffff\1\7\1\32\1\11\1\uffff\1\14\1\uffff\1\15\1\13\1\3\1\4\1\5\1\6\1\10\1\12\125\uffff\1\2",
            "\1\1\11\uffff\1\54\10\uffff\1\7\1\32\1\11\1\uffff\1\14\1\uffff\1\15\1\13\1\3\1\4\1\5\1\6\1\10\1\12\1\uffff\1\56\47\uffff\1\55\53\uffff\1\2",
            "\1\1\22\uffff\1\7\1\32\1\11\1\uffff\1\14\1\uffff\1\15\1\13\1\3\1\4\1\5\1\6\1\10\1\12\125\uffff\1\2",
            "\1\44\1\45",
            "\1\1\22\uffff\1\7\1\32\1\11\1\uffff\1\14\1\uffff\1\15\1\13\1\3\1\4\1\5\1\6\1\10\1\12\125\uffff\1\2",
            "\1\1\22\uffff\1\7\1\32\1\11\1\uffff\1\14\1\uffff\1\15\1\13\1\3\1\4\1\5\1\6\1\10\1\12\125\uffff\1\2",
            "\1\1\11\uffff\1\33\10\uffff\1\7\1\32\1\11\1\uffff\1\14\1\uffff\1\15\1\13\1\3\1\4\1\5\1\6\1\10\1\12\1\uffff\1\35\47\uffff\1\34\53\uffff\1\2",
            "\1\1\22\uffff\1\7\1\32\1\11\1\uffff\1\14\1\uffff\1\15\1\13\1\3\1\4\1\5\1\6\1\10\1\12\125\uffff\1\2",
            "\1\57",
            "\1\57",
            "\1\60",
            "\1\62\1\61\1\uffff\1\65\1\66\1\63\112\uffff\1\64",
            "\1\67",
            "\1\67",
            "\1\70",
            "\1\50\27\uffff\1\52\5\uffff\1\53\41\uffff\1\51",
            "\1\53",
            "\1\1\22\uffff\1\7\1\71\1\11\1\uffff\1\14\1\uffff\1\15\1\13\1\3\1\4\1\5\1\6\1\10\1\12\125\uffff\1\2",
            "\1\1\11\uffff\1\72\10\uffff\1\7\1\71\1\11\1\uffff\1\14\1\uffff\1\15\1\13\1\3\1\4\1\5\1\6\1\10\1\12\1\uffff\1\74\47\uffff\1\73\53\uffff\1\2",
            "\1\1\22\uffff\1\7\1\71\1\11\1\uffff\1\14\1\uffff\1\15\1\13\1\3\1\4\1\5\1\6\1\10\1\12\125\uffff\1\2",
            "\1\65\1\66",
            "\1\1\22\uffff\1\7\1\71\1\11\1\uffff\1\14\1\uffff\1\15\1\13\1\3\1\4\1\5\1\6\1\10\1\12\125\uffff\1\2",
            "\1\1\22\uffff\1\7\1\71\1\11\1\uffff\1\14\1\uffff\1\15\1\13\1\3\1\4\1\5\1\6\1\10\1\12\125\uffff\1\2",
            "\1\1\11\uffff\1\54\10\uffff\1\7\1\32\1\11\1\uffff\1\14\1\uffff\1\15\1\13\1\3\1\4\1\5\1\6\1\10\1\12\1\uffff\1\56\47\uffff\1\55\53\uffff\1\2",
            "\1\1\22\uffff\1\7\1\32\1\11\1\uffff\1\14\1\uffff\1\15\1\13\1\3\1\4\1\5\1\6\1\10\1\12\125\uffff\1\2",
            "\1\76\1\75\1\uffff\1\101\1\102\1\77\112\uffff\1\100",
            "\1\103",
            "\1\103",
            "\1\104",
            "\1\1\22\uffff\1\7\1\71\1\11\1\uffff\1\14\1\uffff\1\15\1\13\1\3\1\4\1\5\1\6\1\10\1\12\125\uffff\1\2",
            "\1\1\11\uffff\1\105\10\uffff\1\7\1\71\1\11\1\uffff\1\14\1\uffff\1\15\1\13\1\3\1\4\1\5\1\6\1\10\1\12\1\uffff\1\107\47\uffff\1\106\53\uffff\1\2",
            "\1\1\22\uffff\1\7\1\71\1\11\1\uffff\1\14\1\uffff\1\15\1\13\1\3\1\4\1\5\1\6\1\10\1\12\125\uffff\1\2",
            "\1\101\1\102",
            "\1\1\22\uffff\1\7\1\71\1\11\1\uffff\1\14\1\uffff\1\15\1\13\1\3\1\4\1\5\1\6\1\10\1\12\125\uffff\1\2",
            "\1\1\22\uffff\1\7\1\71\1\11\1\uffff\1\14\1\uffff\1\15\1\13\1\3\1\4\1\5\1\6\1\10\1\12\125\uffff\1\2",
            "\1\1\11\uffff\1\72\10\uffff\1\7\1\71\1\11\1\uffff\1\14\1\uffff\1\15\1\13\1\3\1\4\1\5\1\6\1\10\1\12\1\uffff\1\74\47\uffff\1\73\53\uffff\1\2",
            "\1\1\22\uffff\1\7\1\71\1\11\1\uffff\1\14\1\uffff\1\15\1\13\1\3\1\4\1\5\1\6\1\10\1\12\125\uffff\1\2",
            "\1\110",
            "\1\110",
            "\1\111",
            "\1\1\11\uffff\1\105\10\uffff\1\7\1\71\1\11\1\uffff\1\14\1\uffff\1\15\1\13\1\3\1\4\1\5\1\6\1\10\1\12\1\uffff\1\107\47\uffff\1\106\53\uffff\1\2",
            "\1\1\22\uffff\1\7\1\71\1\11\1\uffff\1\14\1\uffff\1\15\1\13\1\3\1\4\1\5\1\6\1\10\1\12\125\uffff\1\2"
    };

    static final short[] dfa_44 = DFA.unpackEncodedString(dfa_44s);
    static final char[] dfa_45 = DFA.unpackEncodedStringToUnsignedChars(dfa_45s);
    static final char[] dfa_46 = DFA.unpackEncodedStringToUnsignedChars(dfa_46s);
    static final short[] dfa_47 = DFA.unpackEncodedString(dfa_47s);
    static final short[] dfa_48 = DFA.unpackEncodedString(dfa_48s);
    static final short[][] dfa_49 = unpackEncodedStringArray(dfa_49s);

    class DFA18 extends DFA {

        public DFA18(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 18;
            this.eot = dfa_44;
            this.eof = dfa_44;
            this.min = dfa_45;
            this.max = dfa_46;
            this.accept = dfa_47;
            this.special = dfa_48;
            this.transition = dfa_49;
        }
        public String getDescription() {
            return "1108:2: (this_InputDeclaration_0= ruleInputDeclaration | this_OutputDeclaration_1= ruleOutputDeclaration | this_InputOutputDeclaration_2= ruleInputOutputDeclaration | this_ReturnDeclaration_3= ruleReturnDeclaration | this_TypeDeclaration_4= ruleTypeDeclaration | this_SensorDeclaration_5= ruleSensorDeclaration | this_ConstantDeclaration_6= ruleConstantDeclaration | this_RelationDeclaration_7= ruleRelationDeclaration | this_TaskDeclaration_8= ruleTaskDeclaration | this_FunctionDeclaration_9= ruleFunctionDeclaration | this_ProcedureDeclaration_10= ruleProcedureDeclaration )";
        }
    }
    static final String dfa_50s = "\35\uffff";
    static final String dfa_51s = "\1\4\2\0\10\uffff\1\0\21\uffff";
    static final String dfa_52s = "\1\u0080\2\0\10\uffff\1\0\21\uffff";
    static final String dfa_53s = "\3\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\uffff\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\uffff\1\24\1\25\1\uffff\1\26\1\27";
    static final String dfa_54s = "\1\uffff\1\0\1\1\10\uffff\1\2\21\uffff}>";
    static final String[] dfa_55s = {
            "\1\12\5\uffff\1\1\43\uffff\1\3\1\4\1\5\1\33\1\uffff\1\6\1\17\1\30\1\10\3\uffff\1\34\1\24\1\uffff\1\15\1\uffff\2\31\1\uffff\1\13\1\14\1\uffff\1\11\1\16\1\21\1\20\2\uffff\1\7\1\25\1\22\1\23\2\26\57\uffff\1\2",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_50 = DFA.unpackEncodedString(dfa_50s);
    static final char[] dfa_51 = DFA.unpackEncodedStringToUnsignedChars(dfa_51s);
    static final char[] dfa_52 = DFA.unpackEncodedStringToUnsignedChars(dfa_52s);
    static final short[] dfa_53 = DFA.unpackEncodedString(dfa_53s);
    static final short[] dfa_54 = DFA.unpackEncodedString(dfa_54s);
    static final short[][] dfa_55 = unpackEncodedStringArray(dfa_55s);

    class DFA71 extends DFA {

        public DFA71(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 71;
            this.eot = dfa_50;
            this.eof = dfa_50;
            this.min = dfa_51;
            this.max = dfa_52;
            this.accept = dfa_53;
            this.special = dfa_54;
            this.transition = dfa_55;
        }
        public String getDescription() {
            return "3617:2: (this_Nothing_0= ruleNothing | this_EsterelPause_1= ruleEsterelPause | this_Halt_2= ruleHalt | this_Emit_3= ruleEmit | this_Exit_4= ruleExit | this_Present_5= rulePresent | this_Await_6= ruleAwait | this_EsterelAssignment_7= ruleEsterelAssignment | this_Abort_8= ruleAbort | this_Loop_9= ruleLoop | this_EveryDo_10= ruleEveryDo | this_Sustain_11= ruleSustain | this_Trap_12= ruleTrap | this_Suspend_13= ruleSuspend | this_LocalSignalDeclaration_14= ruleLocalSignalDeclaration | this_LocalVariableDeclaration_15= ruleLocalVariableDeclaration | this_IfTest_16= ruleIfTest | this_Exec_17= ruleExec | this_Run_18= ruleRun | this_ProcedureCall_19= ruleProcedureCall | this_Repeat_20= ruleRepeat | this_Block_21= ruleBlock | this_LegacyDo_22= ruleLegacyDo )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA71_1 = input.LA(1);

                         
                        int index71_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred106_InternalSCEst()) ) {s = 3;}

                        else if ( (synpred107_InternalSCEst()) ) {s = 4;}

                        else if ( (synpred108_InternalSCEst()) ) {s = 5;}

                        else if ( (synpred109_InternalSCEst()) ) {s = 6;}

                        else if ( (synpred110_InternalSCEst()) ) {s = 7;}

                        else if ( (synpred111_InternalSCEst()) ) {s = 8;}

                        else if ( (synpred112_InternalSCEst()) ) {s = 9;}

                        else if ( (synpred113_InternalSCEst()) ) {s = 10;}

                        else if ( (synpred114_InternalSCEst()) ) {s = 12;}

                        else if ( (synpred115_InternalSCEst()) ) {s = 13;}

                        else if ( (synpred116_InternalSCEst()) ) {s = 14;}

                        else if ( (synpred117_InternalSCEst()) ) {s = 15;}

                        else if ( (synpred118_InternalSCEst()) ) {s = 16;}

                        else if ( (synpred119_InternalSCEst()) ) {s = 17;}

                        else if ( (synpred120_InternalSCEst()) ) {s = 18;}

                        else if ( (synpred121_InternalSCEst()) ) {s = 19;}

                        else if ( (synpred122_InternalSCEst()) ) {s = 20;}

                        else if ( (synpred123_InternalSCEst()) ) {s = 21;}

                        else if ( (synpred124_InternalSCEst()) ) {s = 22;}

                        else if ( (synpred125_InternalSCEst()) ) {s = 24;}

                        else if ( (synpred126_InternalSCEst()) ) {s = 25;}

                        else if ( (synpred127_InternalSCEst()) ) {s = 27;}

                        else if ( (true) ) {s = 28;}

                         
                        input.seek(index71_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA71_2 = input.LA(1);

                         
                        int index71_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred106_InternalSCEst()) ) {s = 3;}

                        else if ( (synpred107_InternalSCEst()) ) {s = 4;}

                        else if ( (synpred108_InternalSCEst()) ) {s = 5;}

                        else if ( (synpred109_InternalSCEst()) ) {s = 6;}

                        else if ( (synpred110_InternalSCEst()) ) {s = 7;}

                        else if ( (synpred111_InternalSCEst()) ) {s = 8;}

                        else if ( (synpred112_InternalSCEst()) ) {s = 9;}

                        else if ( (synpred113_InternalSCEst()) ) {s = 10;}

                        else if ( (synpred114_InternalSCEst()) ) {s = 12;}

                        else if ( (synpred115_InternalSCEst()) ) {s = 13;}

                        else if ( (synpred116_InternalSCEst()) ) {s = 14;}

                        else if ( (synpred117_InternalSCEst()) ) {s = 15;}

                        else if ( (synpred118_InternalSCEst()) ) {s = 16;}

                        else if ( (synpred119_InternalSCEst()) ) {s = 17;}

                        else if ( (synpred120_InternalSCEst()) ) {s = 18;}

                        else if ( (synpred121_InternalSCEst()) ) {s = 19;}

                        else if ( (synpred122_InternalSCEst()) ) {s = 20;}

                        else if ( (synpred123_InternalSCEst()) ) {s = 21;}

                        else if ( (synpred124_InternalSCEst()) ) {s = 22;}

                        else if ( (synpred125_InternalSCEst()) ) {s = 24;}

                        else if ( (synpred126_InternalSCEst()) ) {s = 25;}

                        else if ( (synpred127_InternalSCEst()) ) {s = 27;}

                        else if ( (true) ) {s = 28;}

                         
                        input.seek(index71_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA71_11 = input.LA(1);

                         
                        int index71_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred114_InternalSCEst()) ) {s = 12;}

                        else if ( (synpred119_InternalSCEst()) ) {s = 17;}

                         
                        input.seek(index71_11);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 71, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_56s = "\101\uffff";
    static final String dfa_57s = "\2\12\1\4\2\uffff\3\4\1\7\5\12\6\4\1\7\1\24\1\7\3\12\1\7\4\12\2\4\1\7\3\4\1\7\1\24\1\62\3\12\1\7\4\12\3\4\1\7\3\12\1\7\4\12\2\4\1\7\2\12";
    static final String dfa_58s = "\2\u0080\1\4\2\uffff\1\u0080\1\4\1\10\1\7\5\u0080\1\4\2\u0080\1\124\2\4\1\7\1\124\1\10\3\u0080\1\10\4\u0080\2\4\1\7\1\124\2\4\1\7\1\124\1\62\3\u0080\1\10\4\u0080\1\124\2\4\1\7\3\u0080\1\10\4\u0080\2\4\1\7\2\u0080";
    static final String dfa_59s = "\3\uffff\1\1\1\2\74\uffff";
    static final String dfa_60s = "\101\uffff}>";
    static final String[] dfa_61s = {
            "\1\1\10\uffff\1\4\43\uffff\1\3\1\4\3\uffff\1\4\103\uffff\1\2",
            "\1\1\54\uffff\1\3\4\uffff\1\4\103\uffff\1\2",
            "\1\5",
            "",
            "",
            "\1\12\1\11\1\uffff\1\14\1\15\1\13\1\1\11\uffff\1\6\27\uffff\1\10\4\uffff\1\16\5\uffff\1\3\4\uffff\1\4\27\uffff\1\7\53\uffff\1\2",
            "\1\17",
            "\1\17\2\uffff\1\14\1\15",
            "\1\20",
            "\1\1\23\uffff\1\21\30\uffff\1\3\4\uffff\1\4\103\uffff\1\2",
            "\1\1\11\uffff\1\22\11\uffff\1\21\15\uffff\1\24\12\uffff\1\3\4\uffff\1\4\27\uffff\1\23\53\uffff\1\2",
            "\1\1\23\uffff\1\21\30\uffff\1\3\4\uffff\1\4\103\uffff\1\2",
            "\1\1\23\uffff\1\21\30\uffff\1\3\4\uffff\1\4\103\uffff\1\2",
            "\1\1\23\uffff\1\21\30\uffff\1\3\4\uffff\1\4\103\uffff\1\2",
            "\1\25",
            "\1\12\1\11\1\uffff\1\14\1\15\1\13\1\1\11\uffff\1\6\27\uffff\1\10\4\uffff\1\16\5\uffff\1\3\4\uffff\1\4\27\uffff\1\7\53\uffff\1\2",
            "\1\12\1\11\1\uffff\1\14\1\15\1\13\1\1\46\uffff\1\16\5\uffff\1\3\4\uffff\1\4\27\uffff\1\26\53\uffff\1\2",
            "\1\30\1\27\1\uffff\1\33\1\34\1\31\112\uffff\1\32",
            "\1\35",
            "\1\35",
            "\1\36",
            "\1\37\27\uffff\1\41\5\uffff\1\42\41\uffff\1\40",
            "\1\14\1\15",
            "\1\1\23\uffff\1\21\30\uffff\1\3\4\uffff\1\4\103\uffff\1\2",
            "\1\1\11\uffff\1\43\11\uffff\1\21\15\uffff\1\45\12\uffff\1\3\4\uffff\1\4\27\uffff\1\44\53\uffff\1\2",
            "\1\1\23\uffff\1\21\30\uffff\1\3\4\uffff\1\4\103\uffff\1\2",
            "\1\33\1\34",
            "\1\1\23\uffff\1\21\30\uffff\1\3\4\uffff\1\4\103\uffff\1\2",
            "\1\1\23\uffff\1\21\30\uffff\1\3\4\uffff\1\4\103\uffff\1\2",
            "\1\1\11\uffff\1\22\11\uffff\1\21\15\uffff\1\24\12\uffff\1\3\4\uffff\1\4\27\uffff\1\23\53\uffff\1\2",
            "\1\1\23\uffff\1\21\30\uffff\1\3\4\uffff\1\4\103\uffff\1\2",
            "\1\46",
            "\1\46",
            "\1\47",
            "\1\51\1\50\1\uffff\1\54\1\55\1\52\112\uffff\1\53",
            "\1\56",
            "\1\56",
            "\1\57",
            "\1\37\27\uffff\1\41\5\uffff\1\42\41\uffff\1\40",
            "\1\42",
            "\1\1\23\uffff\1\60\30\uffff\1\3\4\uffff\1\4\103\uffff\1\2",
            "\1\1\11\uffff\1\61\11\uffff\1\60\15\uffff\1\63\12\uffff\1\3\4\uffff\1\4\27\uffff\1\62\53\uffff\1\2",
            "\1\1\23\uffff\1\60\30\uffff\1\3\4\uffff\1\4\103\uffff\1\2",
            "\1\54\1\55",
            "\1\1\23\uffff\1\60\30\uffff\1\3\4\uffff\1\4\103\uffff\1\2",
            "\1\1\23\uffff\1\60\30\uffff\1\3\4\uffff\1\4\103\uffff\1\2",
            "\1\1\11\uffff\1\43\11\uffff\1\21\15\uffff\1\45\12\uffff\1\3\4\uffff\1\4\27\uffff\1\44\53\uffff\1\2",
            "\1\1\23\uffff\1\21\30\uffff\1\3\4\uffff\1\4\103\uffff\1\2",
            "\1\65\1\64\1\uffff\1\70\1\71\1\66\112\uffff\1\67",
            "\1\72",
            "\1\72",
            "\1\73",
            "\1\1\23\uffff\1\60\30\uffff\1\3\4\uffff\1\4\103\uffff\1\2",
            "\1\1\11\uffff\1\74\11\uffff\1\60\15\uffff\1\76\12\uffff\1\3\4\uffff\1\4\27\uffff\1\75\53\uffff\1\2",
            "\1\1\23\uffff\1\60\30\uffff\1\3\4\uffff\1\4\103\uffff\1\2",
            "\1\70\1\71",
            "\1\1\23\uffff\1\60\30\uffff\1\3\4\uffff\1\4\103\uffff\1\2",
            "\1\1\23\uffff\1\60\30\uffff\1\3\4\uffff\1\4\103\uffff\1\2",
            "\1\1\11\uffff\1\61\11\uffff\1\60\15\uffff\1\63\12\uffff\1\3\4\uffff\1\4\27\uffff\1\62\53\uffff\1\2",
            "\1\1\23\uffff\1\60\30\uffff\1\3\4\uffff\1\4\103\uffff\1\2",
            "\1\77",
            "\1\77",
            "\1\100",
            "\1\1\11\uffff\1\74\11\uffff\1\60\15\uffff\1\76\12\uffff\1\3\4\uffff\1\4\27\uffff\1\75\53\uffff\1\2",
            "\1\1\23\uffff\1\60\30\uffff\1\3\4\uffff\1\4\103\uffff\1\2"
    };

    static final short[] dfa_56 = DFA.unpackEncodedString(dfa_56s);
    static final char[] dfa_57 = DFA.unpackEncodedStringToUnsignedChars(dfa_57s);
    static final char[] dfa_58 = DFA.unpackEncodedStringToUnsignedChars(dfa_58s);
    static final short[] dfa_59 = DFA.unpackEncodedString(dfa_59s);
    static final short[] dfa_60 = DFA.unpackEncodedString(dfa_60s);
    static final short[][] dfa_61 = unpackEncodedStringArray(dfa_61s);

    class DFA102 extends DFA {

        public DFA102(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 102;
            this.eot = dfa_56;
            this.eof = dfa_56;
            this.min = dfa_57;
            this.max = dfa_58;
            this.accept = dfa_59;
            this.special = dfa_60;
            this.transition = dfa_61;
        }
        public String getDescription() {
            return "4966:3: ( ( (lv_annotations_3_0= ruleAnnotation ) )* otherlv_4= 'then' ( (lv_statements_5_0= ruleEsterelParallel ) ) )?";
        }
    }
    static final String dfa_62s = "\64\uffff";
    static final String dfa_63s = "\1\2\63\uffff";
    static final String dfa_64s = "\1\4\1\0\62\uffff";
    static final String dfa_65s = "\1\u0080\1\0\62\uffff";
    static final String dfa_66s = "\2\uffff\1\2\60\uffff\1\1";
    static final String dfa_67s = "\1\uffff\1\0\62\uffff}>";
    static final String[] dfa_68s = {
            "\1\2\5\uffff\1\2\10\uffff\3\2\1\uffff\2\2\24\uffff\12\2\1\uffff\3\2\1\1\5\2\1\uffff\7\2\1\uffff\7\2\15\uffff\2\2\4\uffff\1\2\1\uffff\5\2\25\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_62 = DFA.unpackEncodedString(dfa_62s);
    static final short[] dfa_63 = DFA.unpackEncodedString(dfa_63s);
    static final char[] dfa_64 = DFA.unpackEncodedStringToUnsignedChars(dfa_64s);
    static final char[] dfa_65 = DFA.unpackEncodedStringToUnsignedChars(dfa_65s);
    static final short[] dfa_66 = DFA.unpackEncodedString(dfa_66s);
    static final short[] dfa_67 = DFA.unpackEncodedString(dfa_67s);
    static final short[][] dfa_68 = unpackEncodedStringArray(dfa_68s);

    class DFA105 extends DFA {

        public DFA105(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 105;
            this.eot = dfa_62;
            this.eof = dfa_63;
            this.min = dfa_64;
            this.max = dfa_65;
            this.accept = dfa_66;
            this.special = dfa_67;
            this.transition = dfa_68;
        }
        public String getDescription() {
            return "5058:3: (otherlv_10= 'if' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA105_1 = input.LA(1);

                         
                        int index105_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred162_InternalSCEst()) ) {s = 51;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index105_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 105, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_69s = {
            "\1\2\5\uffff\1\2\10\uffff\3\2\1\uffff\2\2\24\uffff\12\2\1\uffff\5\2\1\1\3\2\1\uffff\7\2\1\uffff\7\2\15\uffff\2\2\4\uffff\1\2\1\uffff\5\2\25\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_69 = unpackEncodedStringArray(dfa_69s);

    class DFA109 extends DFA {

        public DFA109(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 109;
            this.eot = dfa_62;
            this.eof = dfa_63;
            this.min = dfa_64;
            this.max = dfa_65;
            this.accept = dfa_66;
            this.special = dfa_67;
            this.transition = dfa_69;
        }
        public String getDescription() {
            return "5227:5: (otherlv_5= 'loop' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA109_1 = input.LA(1);

                         
                        int index109_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred166_InternalSCEst()) ) {s = 51;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index109_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 109, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_70s = {
            "\1\2\5\uffff\1\2\10\uffff\3\2\1\uffff\2\2\24\uffff\12\2\1\uffff\10\2\1\1\1\uffff\7\2\1\uffff\7\2\15\uffff\2\2\4\uffff\1\2\1\uffff\5\2\25\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_70 = unpackEncodedStringArray(dfa_70s);

    class DFA113 extends DFA {

        public DFA113(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 113;
            this.eot = dfa_62;
            this.eof = dfa_63;
            this.min = dfa_64;
            this.max = dfa_65;
            this.accept = dfa_66;
            this.special = dfa_67;
            this.transition = dfa_70;
        }
        public String getDescription() {
            return "5363:3: (otherlv_7= 'repeat' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA113_1 = input.LA(1);

                         
                        int index113_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred170_InternalSCEst()) ) {s = 51;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index113_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 113, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_71s = "\1\4\1\uffff\1\6\1\4\1\uffff\3\4\1\7\5\6\6\4\1\7\1\24\1\7\3\6\1\7\4\6\2\4\1\7\3\4\1\7\1\24\1\62\3\6\1\7\4\6\3\4\1\7\3\6\1\7\4\6\2\4\1\7\2\6";
    static final String dfa_72s = "\1\u0082\1\uffff\1\u0080\1\4\1\uffff\1\u0080\1\4\1\10\1\7\5\u0080\1\4\2\u0080\1\124\2\4\1\7\1\124\1\10\3\u0080\1\10\4\u0080\2\4\1\7\1\124\2\4\1\7\1\124\1\62\3\u0080\1\10\4\u0080\1\124\2\4\1\7\3\u0080\1\10\4\u0080\2\4\1\7\2\u0080";
    static final String dfa_73s = "\1\uffff\1\1\2\uffff\1\2\74\uffff";
    static final String[] dfa_74s = {
            "\6\1\1\2\16\uffff\1\1\27\uffff\1\1\7\uffff\1\4\32\uffff\1\1\6\uffff\1\1\5\uffff\3\1\21\uffff\1\1\12\uffff\1\3\2\1",
            "",
            "\1\1\3\uffff\1\2\56\uffff\1\4\106\uffff\1\3",
            "\1\5",
            "",
            "\1\12\1\11\1\1\1\14\1\15\1\13\1\2\11\uffff\1\6\27\uffff\1\10\4\uffff\1\16\7\uffff\1\4\32\uffff\1\7\53\uffff\1\3",
            "\1\17",
            "\1\17\2\uffff\1\14\1\15",
            "\1\20",
            "\1\1\3\uffff\1\2\23\uffff\1\21\32\uffff\1\4\106\uffff\1\3",
            "\1\1\3\uffff\1\2\11\uffff\1\22\11\uffff\1\21\15\uffff\1\24\14\uffff\1\4\32\uffff\1\23\53\uffff\1\3",
            "\1\1\3\uffff\1\2\23\uffff\1\21\32\uffff\1\4\106\uffff\1\3",
            "\1\1\3\uffff\1\2\23\uffff\1\21\32\uffff\1\4\106\uffff\1\3",
            "\1\1\3\uffff\1\2\23\uffff\1\21\32\uffff\1\4\106\uffff\1\3",
            "\1\25",
            "\1\12\1\11\1\1\1\14\1\15\1\13\1\2\11\uffff\1\6\27\uffff\1\10\4\uffff\1\16\7\uffff\1\4\32\uffff\1\7\53\uffff\1\3",
            "\1\12\1\11\1\1\1\14\1\15\1\13\1\2\46\uffff\1\16\7\uffff\1\4\32\uffff\1\26\53\uffff\1\3",
            "\1\30\1\27\1\uffff\1\33\1\34\1\31\112\uffff\1\32",
            "\1\35",
            "\1\35",
            "\1\36",
            "\1\37\27\uffff\1\41\5\uffff\1\42\41\uffff\1\40",
            "\1\14\1\15",
            "\1\1\3\uffff\1\2\23\uffff\1\21\32\uffff\1\4\106\uffff\1\3",
            "\1\1\3\uffff\1\2\11\uffff\1\43\11\uffff\1\21\15\uffff\1\45\14\uffff\1\4\32\uffff\1\44\53\uffff\1\3",
            "\1\1\3\uffff\1\2\23\uffff\1\21\32\uffff\1\4\106\uffff\1\3",
            "\1\33\1\34",
            "\1\1\3\uffff\1\2\23\uffff\1\21\32\uffff\1\4\106\uffff\1\3",
            "\1\1\3\uffff\1\2\23\uffff\1\21\32\uffff\1\4\106\uffff\1\3",
            "\1\1\3\uffff\1\2\11\uffff\1\22\11\uffff\1\21\15\uffff\1\24\14\uffff\1\4\32\uffff\1\23\53\uffff\1\3",
            "\1\1\3\uffff\1\2\23\uffff\1\21\32\uffff\1\4\106\uffff\1\3",
            "\1\46",
            "\1\46",
            "\1\47",
            "\1\51\1\50\1\uffff\1\54\1\55\1\52\112\uffff\1\53",
            "\1\56",
            "\1\56",
            "\1\57",
            "\1\37\27\uffff\1\41\5\uffff\1\42\41\uffff\1\40",
            "\1\42",
            "\1\1\3\uffff\1\2\23\uffff\1\60\32\uffff\1\4\106\uffff\1\3",
            "\1\1\3\uffff\1\2\11\uffff\1\61\11\uffff\1\60\15\uffff\1\63\14\uffff\1\4\32\uffff\1\62\53\uffff\1\3",
            "\1\1\3\uffff\1\2\23\uffff\1\60\32\uffff\1\4\106\uffff\1\3",
            "\1\54\1\55",
            "\1\1\3\uffff\1\2\23\uffff\1\60\32\uffff\1\4\106\uffff\1\3",
            "\1\1\3\uffff\1\2\23\uffff\1\60\32\uffff\1\4\106\uffff\1\3",
            "\1\1\3\uffff\1\2\11\uffff\1\43\11\uffff\1\21\15\uffff\1\45\14\uffff\1\4\32\uffff\1\44\53\uffff\1\3",
            "\1\1\3\uffff\1\2\23\uffff\1\21\32\uffff\1\4\106\uffff\1\3",
            "\1\65\1\64\1\uffff\1\70\1\71\1\66\112\uffff\1\67",
            "\1\72",
            "\1\72",
            "\1\73",
            "\1\1\3\uffff\1\2\23\uffff\1\60\32\uffff\1\4\106\uffff\1\3",
            "\1\1\3\uffff\1\2\11\uffff\1\74\11\uffff\1\60\15\uffff\1\76\14\uffff\1\4\32\uffff\1\75\53\uffff\1\3",
            "\1\1\3\uffff\1\2\23\uffff\1\60\32\uffff\1\4\106\uffff\1\3",
            "\1\70\1\71",
            "\1\1\3\uffff\1\2\23\uffff\1\60\32\uffff\1\4\106\uffff\1\3",
            "\1\1\3\uffff\1\2\23\uffff\1\60\32\uffff\1\4\106\uffff\1\3",
            "\1\1\3\uffff\1\2\11\uffff\1\61\11\uffff\1\60\15\uffff\1\63\14\uffff\1\4\32\uffff\1\62\53\uffff\1\3",
            "\1\1\3\uffff\1\2\23\uffff\1\60\32\uffff\1\4\106\uffff\1\3",
            "\1\77",
            "\1\77",
            "\1\100",
            "\1\1\3\uffff\1\2\11\uffff\1\74\11\uffff\1\60\15\uffff\1\76\14\uffff\1\4\32\uffff\1\75\53\uffff\1\3",
            "\1\1\3\uffff\1\2\23\uffff\1\60\32\uffff\1\4\106\uffff\1\3"
    };
    static final char[] dfa_71 = DFA.unpackEncodedStringToUnsignedChars(dfa_71s);
    static final char[] dfa_72 = DFA.unpackEncodedStringToUnsignedChars(dfa_72s);
    static final short[] dfa_73 = DFA.unpackEncodedString(dfa_73s);
    static final short[][] dfa_74 = unpackEncodedStringArray(dfa_74s);

    class DFA122 extends DFA {

        public DFA122(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 122;
            this.eot = dfa_56;
            this.eof = dfa_56;
            this.min = dfa_71;
            this.max = dfa_72;
            this.accept = dfa_73;
            this.special = dfa_60;
            this.transition = dfa_74;
        }
        public String getDescription() {
            return "5450:3: ( ( ( (lv_delay_5_0= ruleDelayExpression ) ) (otherlv_6= 'do' ( (lv_doStatements_7_0= ruleEsterelParallel ) ) otherlv_8= 'end' (otherlv_9= 'weak' )? (otherlv_10= 'abort' )? )? ) | ( ( (lv_cases_11_0= ruleCase ) )+ otherlv_12= 'end' (otherlv_13= 'weak' )? (otherlv_14= 'abort' )? ) )";
        }
    }
    static final String[] dfa_75s = {
            "\1\2\5\uffff\1\2\10\uffff\3\2\1\uffff\2\2\24\uffff\12\2\1\uffff\2\2\1\1\6\2\1\uffff\7\2\1\uffff\7\2\15\uffff\2\2\4\uffff\1\2\1\uffff\5\2\25\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_75 = unpackEncodedStringArray(dfa_75s);

    class DFA118 extends DFA {

        public DFA118(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 118;
            this.eot = dfa_62;
            this.eof = dfa_63;
            this.min = dfa_64;
            this.max = dfa_65;
            this.accept = dfa_66;
            this.special = dfa_67;
            this.transition = dfa_75;
        }
        public String getDescription() {
            return "5471:5: (otherlv_6= 'do' ( (lv_doStatements_7_0= ruleEsterelParallel ) ) otherlv_8= 'end' (otherlv_9= 'weak' )? (otherlv_10= 'abort' )? )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA118_1 = input.LA(1);

                         
                        int index118_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred175_InternalSCEst()) ) {s = 51;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index118_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 118, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_76s = {
            "\1\2\5\uffff\1\2\10\uffff\3\2\1\uffff\2\2\24\uffff\12\2\1\uffff\11\2\1\uffff\1\2\1\1\5\2\1\uffff\7\2\15\uffff\2\2\4\uffff\1\2\1\uffff\5\2\25\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_76 = unpackEncodedStringArray(dfa_76s);

    class DFA117 extends DFA {

        public DFA117(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 117;
            this.eot = dfa_62;
            this.eof = dfa_63;
            this.min = dfa_64;
            this.max = dfa_65;
            this.accept = dfa_66;
            this.special = dfa_67;
            this.transition = dfa_76;
        }
        public String getDescription() {
            return "5505:6: (otherlv_10= 'abort' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA117_1 = input.LA(1);

                         
                        int index117_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_InternalSCEst()) ) {s = 51;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index117_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 117, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA121 extends DFA {

        public DFA121(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 121;
            this.eot = dfa_62;
            this.eof = dfa_63;
            this.min = dfa_64;
            this.max = dfa_65;
            this.accept = dfa_66;
            this.special = dfa_67;
            this.transition = dfa_76;
        }
        public String getDescription() {
            return "5544:5: (otherlv_14= 'abort' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA121_1 = input.LA(1);

                         
                        int index121_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred179_InternalSCEst()) ) {s = 51;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index121_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 121, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA130 extends DFA {

        public DFA130(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 130;
            this.eot = dfa_56;
            this.eof = dfa_56;
            this.min = dfa_71;
            this.max = dfa_72;
            this.accept = dfa_73;
            this.special = dfa_60;
            this.transition = dfa_74;
        }
        public String getDescription() {
            return "5680:3: ( ( ( (lv_delay_2_0= ruleDelayExpression ) ) (otherlv_3= 'do' ( (lv_statements_4_0= ruleEsterelParallel ) ) otherlv_5= 'end' (otherlv_6= 'await' )? )? ) | ( ( (lv_cases_7_0= ruleCase ) )+ otherlv_8= 'end' (otherlv_9= 'await' )? ) )";
        }
    }

    class DFA127 extends DFA {

        public DFA127(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 127;
            this.eot = dfa_62;
            this.eof = dfa_63;
            this.min = dfa_64;
            this.max = dfa_65;
            this.accept = dfa_66;
            this.special = dfa_67;
            this.transition = dfa_75;
        }
        public String getDescription() {
            return "5701:5: (otherlv_3= 'do' ( (lv_statements_4_0= ruleEsterelParallel ) ) otherlv_5= 'end' (otherlv_6= 'await' )? )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA127_1 = input.LA(1);

                         
                        int index127_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred184_InternalSCEst()) ) {s = 51;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index127_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 127, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_77s = {
            "\1\2\5\uffff\1\2\10\uffff\3\2\1\uffff\2\2\24\uffff\12\2\1\uffff\11\2\1\uffff\4\2\1\1\2\2\1\uffff\7\2\15\uffff\2\2\4\uffff\1\2\1\uffff\5\2\25\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_77 = unpackEncodedStringArray(dfa_77s);

    class DFA132 extends DFA {

        public DFA132(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 132;
            this.eot = dfa_62;
            this.eof = dfa_63;
            this.min = dfa_64;
            this.max = dfa_65;
            this.accept = dfa_66;
            this.special = dfa_67;
            this.transition = dfa_77;
        }
        public String getDescription() {
            return "5858:3: (otherlv_6= 'every' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA132_1 = input.LA(1);

                         
                        int index132_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred189_InternalSCEst()) ) {s = 51;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index132_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 132, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_78s = {
            "\1\2\5\uffff\1\2\10\uffff\3\2\1\uffff\2\2\24\uffff\12\2\1\uffff\11\2\1\uffff\6\2\1\1\1\uffff\7\2\15\uffff\2\2\4\uffff\1\2\1\uffff\5\2\25\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_78 = unpackEncodedStringArray(dfa_78s);

    class DFA138 extends DFA {

        public DFA138(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 138;
            this.eot = dfa_62;
            this.eof = dfa_63;
            this.min = dfa_64;
            this.max = dfa_65;
            this.accept = dfa_66;
            this.special = dfa_67;
            this.transition = dfa_78;
        }
        public String getDescription() {
            return "6096:3: (otherlv_9= 'trap' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA138_1 = input.LA(1);

                         
                        int index138_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred195_InternalSCEst()) ) {s = 51;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index138_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 138, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA157 extends DFA {

        public DFA157(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 157;
            this.eot = dfa_62;
            this.eof = dfa_63;
            this.min = dfa_64;
            this.max = dfa_65;
            this.accept = dfa_66;
            this.special = dfa_67;
            this.transition = dfa_75;
        }
        public String getDescription() {
            return "6816:5: (otherlv_17= 'do' ( (lv_statements_18_0= ruleEsterelParallel ) ) otherlv_19= 'end' (otherlv_20= 'exec' )? )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA157_1 = input.LA(1);

                         
                        int index157_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred217_InternalSCEst()) ) {s = 51;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index157_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 157, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_79s = {
            "\1\2\5\uffff\1\2\10\uffff\3\2\1\uffff\2\2\24\uffff\12\2\1\uffff\11\2\1\uffff\7\2\1\uffff\3\2\1\1\3\2\15\uffff\2\2\4\uffff\1\2\1\uffff\5\2\25\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_79 = unpackEncodedStringArray(dfa_79s);

    class DFA171 extends DFA {

        public DFA171(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 171;
            this.eot = dfa_62;
            this.eof = dfa_63;
            this.min = dfa_64;
            this.max = dfa_65;
            this.accept = dfa_66;
            this.special = dfa_67;
            this.transition = dfa_79;
        }
        public String getDescription() {
            return "7221:3: (otherlv_8= 'signal' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA171_1 = input.LA(1);

                         
                        int index171_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred231_InternalSCEst()) ) {s = 51;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index171_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 171, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_80s = {
            "\1\2\5\uffff\1\2\10\uffff\3\2\1\uffff\2\2\24\uffff\12\2\1\uffff\11\2\1\uffff\7\2\1\uffff\4\2\1\1\2\2\15\uffff\2\2\4\uffff\1\2\1\uffff\5\2\25\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_80 = unpackEncodedStringArray(dfa_80s);

    class DFA174 extends DFA {

        public DFA174(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 174;
            this.eot = dfa_62;
            this.eof = dfa_63;
            this.min = dfa_64;
            this.max = dfa_65;
            this.accept = dfa_66;
            this.special = dfa_67;
            this.transition = dfa_80;
        }
        public String getDescription() {
            return "7340:3: (otherlv_8= 'var' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA174_1 = input.LA(1);

                         
                        int index174_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred234_InternalSCEst()) ) {s = 51;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index174_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 174, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_81s = "\126\uffff";
    static final String dfa_82s = "\1\2\125\uffff";
    static final String dfa_83s = "\2\4\1\uffff\3\4\1\uffff\1\4\1\22\2\4\1\7\10\4\1\22\2\4\1\7\1\4\1\7\2\4\1\7\7\4\1\7\2\4\2\24\1\62\3\4\1\7\6\4\1\7\5\4\1\7\3\4\1\24\3\4\1\7\10\4\1\7\1\4\1\24\5\4\1\24\2\0";
    static final String dfa_84s = "\2\u0080\1\uffff\1\u0080\1\4\1\142\1\uffff\1\u0080\1\121\1\4\1\10\1\7\1\u0080\1\u009c\6\u0080\1\u009c\2\4\1\7\1\124\1\10\2\4\1\7\1\124\1\u009c\5\u0080\1\10\2\u0080\1\u009c\1\124\1\62\3\u0080\1\10\2\u0080\4\4\1\7\2\4\1\124\2\4\1\7\1\u009c\2\u0080\1\u009c\3\u0080\1\10\4\u0080\4\4\1\7\2\u009c\2\u0080\2\4\2\u009c\2\0";
    static final String dfa_85s = "\2\uffff\1\2\3\uffff\1\1\117\uffff";
    static final String dfa_86s = "\124\uffff\1\0\1\1}>";
    static final String[] dfa_87s = {
            "\1\2\5\uffff\1\2\10\uffff\3\2\1\uffff\2\2\24\uffff\4\2\1\1\5\2\1\uffff\11\2\1\uffff\7\2\1\uffff\7\2\15\uffff\2\2\4\uffff\1\2\1\uffff\5\2\25\uffff\1\2",
            "\1\2\5\uffff\1\3\14\uffff\2\2\4\uffff\1\6\1\uffff\1\6\1\uffff\1\6\1\uffff\2\6\11\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\23\uffff\1\2\1\uffff\1\2\1\uffff\1\2\27\uffff\1\4",
            "",
            "\1\2\5\uffff\1\3\14\uffff\2\2\4\uffff\1\6\1\uffff\1\6\1\uffff\1\6\1\uffff\2\6\11\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\23\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\7",
            "\1\10\135\uffff\1\6",
            "",
            "\1\15\1\16\1\uffff\1\20\1\21\1\17\1\3\11\uffff\1\11\2\uffff\2\2\4\uffff\1\6\1\uffff\1\6\1\uffff\1\6\1\uffff\2\6\7\uffff\1\13\1\uffff\3\2\1\14\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\3\uffff\1\12\17\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\2\3\uffff\1\2\2\uffff\1\2\4\uffff\1\2\52\uffff\1\2\7\uffff\1\6",
            "\1\22",
            "\1\22\2\uffff\1\20\1\21",
            "\1\23",
            "\1\24\5\uffff\1\2\14\uffff\2\2\25\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\6\2\23\uffff\1\2\1\uffff\1\2\1\uffff\1\2\27\uffff\1\2",
            "\1\2\5\uffff\1\3\7\uffff\1\2\1\uffff\1\25\1\uffff\3\2\4\uffff\1\6\1\30\1\6\1\2\1\6\1\uffff\2\6\7\uffff\1\27\1\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\3\uffff\1\26\17\uffff\1\2\1\uffff\1\2\26\uffff\1\2\2\uffff\1\4\17\uffff\15\2",
            "\1\2\5\uffff\1\3\14\uffff\2\2\4\uffff\1\6\1\30\1\6\1\uffff\1\6\1\uffff\2\6\11\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\23\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\2\5\uffff\1\3\14\uffff\2\2\4\uffff\1\6\1\30\1\6\1\uffff\1\6\1\uffff\2\6\11\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\23\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\2\5\uffff\1\3\14\uffff\2\2\4\uffff\1\6\1\30\1\6\1\uffff\1\6\1\uffff\2\6\11\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\23\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\2\5\uffff\1\3\14\uffff\2\2\4\uffff\1\6\1\30\1\6\1\uffff\1\6\1\uffff\2\6\11\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\23\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\15\1\16\1\uffff\1\20\1\21\1\17\1\3\11\uffff\1\11\2\uffff\2\2\4\uffff\1\6\1\uffff\1\6\1\uffff\1\6\1\uffff\2\6\7\uffff\1\13\1\uffff\3\2\1\14\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\3\uffff\1\12\17\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\15\1\16\1\uffff\1\20\1\21\1\17\1\3\14\uffff\2\2\4\uffff\1\6\1\uffff\1\6\1\uffff\1\6\1\uffff\2\6\11\uffff\3\2\1\14\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\3\uffff\1\31\17\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\2\1\uffff\1\32\1\uffff\1\2\11\uffff\1\2\13\uffff\1\34\4\uffff\1\2\1\35\41\uffff\1\33\50\uffff\1\2\22\uffff\15\2",
            "\1\36",
            "\1\37",
            "\1\40",
            "\1\42\1\41\1\uffff\1\45\1\46\1\43\112\uffff\1\44",
            "\1\20\1\21",
            "\1\47",
            "\1\50",
            "\1\51",
            "\1\53\1\52\1\uffff\1\56\1\57\1\54\112\uffff\1\55",
            "\1\2\5\uffff\1\3\11\uffff\1\60\1\uffff\3\2\4\uffff\1\6\1\30\1\6\1\2\1\6\1\uffff\2\6\7\uffff\1\27\1\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\3\uffff\1\26\17\uffff\1\2\1\uffff\1\2\26\uffff\1\2\2\uffff\1\4\17\uffff\15\2",
            "\1\2\5\uffff\1\3\11\uffff\1\61\2\uffff\2\2\4\uffff\1\6\1\30\1\6\1\uffff\1\6\1\uffff\2\6\7\uffff\1\27\1\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\3\uffff\1\26\17\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\2\5\uffff\1\3\14\uffff\2\2\4\uffff\1\6\1\30\1\6\1\uffff\1\6\1\uffff\2\6\11\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\23\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\2\5\uffff\1\3\14\uffff\2\2\4\uffff\1\6\1\30\1\6\1\uffff\1\6\1\uffff\2\6\11\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\23\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\2\5\uffff\1\3\11\uffff\1\62\2\uffff\2\2\4\uffff\1\6\1\30\1\6\1\uffff\1\6\1\uffff\2\6\7\uffff\1\64\1\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\3\uffff\1\63\17\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\2\5\uffff\1\3\14\uffff\2\2\4\uffff\1\6\1\30\1\6\1\uffff\1\6\1\uffff\2\6\11\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\23\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\45\1\46",
            "\1\2\5\uffff\1\3\14\uffff\2\2\4\uffff\1\6\1\30\1\6\1\uffff\1\6\1\uffff\2\6\11\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\23\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\2\5\uffff\1\3\14\uffff\2\2\4\uffff\1\6\1\30\1\6\1\uffff\1\6\1\uffff\2\6\11\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\23\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\65\1\uffff\1\2\11\uffff\1\2\13\uffff\1\34\4\uffff\1\2\1\35\41\uffff\1\33\50\uffff\1\2\22\uffff\15\2",
            "\1\66\27\uffff\1\34\5\uffff\1\35\41\uffff\1\33",
            "\1\35",
            "\1\2\5\uffff\1\3\14\uffff\2\2\4\uffff\1\6\1\67\1\6\1\uffff\1\6\1\uffff\2\6\11\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\23\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\2\5\uffff\1\3\11\uffff\1\70\2\uffff\2\2\4\uffff\1\6\1\67\1\6\1\uffff\1\6\1\uffff\2\6\7\uffff\1\72\1\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\3\uffff\1\71\17\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\2\5\uffff\1\3\14\uffff\2\2\4\uffff\1\6\1\67\1\6\1\uffff\1\6\1\uffff\2\6\11\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\23\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\56\1\57",
            "\1\2\5\uffff\1\3\14\uffff\2\2\4\uffff\1\6\1\67\1\6\1\uffff\1\6\1\uffff\2\6\11\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\23\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\2\5\uffff\1\3\14\uffff\2\2\4\uffff\1\6\1\67\1\6\1\uffff\1\6\1\uffff\2\6\11\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\23\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\73",
            "\1\37",
            "\1\74",
            "\1\74",
            "\1\75",
            "\1\76",
            "\1\50",
            "\1\100\1\77\1\uffff\1\103\1\104\1\101\112\uffff\1\102",
            "\1\105",
            "\1\105",
            "\1\106",
            "\1\2\5\uffff\1\3\11\uffff\1\107\1\uffff\3\2\4\uffff\1\6\1\30\1\6\1\2\1\6\1\uffff\2\6\7\uffff\1\27\1\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\3\uffff\1\26\17\uffff\1\2\1\uffff\1\2\26\uffff\1\2\2\uffff\1\4\17\uffff\15\2",
            "\1\2\5\uffff\1\3\11\uffff\1\62\2\uffff\2\2\4\uffff\1\6\1\30\1\6\1\uffff\1\6\1\uffff\2\6\7\uffff\1\64\1\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\3\uffff\1\63\17\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\2\5\uffff\1\3\14\uffff\2\2\4\uffff\1\6\1\30\1\6\1\uffff\1\6\1\uffff\2\6\11\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\23\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\110\1\uffff\1\2\11\uffff\1\2\13\uffff\1\34\4\uffff\1\2\1\35\41\uffff\1\33\50\uffff\1\2\22\uffff\15\2",
            "\1\2\5\uffff\1\3\14\uffff\2\2\4\uffff\1\6\1\67\1\6\1\uffff\1\6\1\uffff\2\6\11\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\23\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\2\5\uffff\1\3\11\uffff\1\111\2\uffff\2\2\4\uffff\1\6\1\67\1\6\1\uffff\1\6\1\uffff\2\6\7\uffff\1\113\1\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\3\uffff\1\112\17\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\2\5\uffff\1\3\14\uffff\2\2\4\uffff\1\6\1\67\1\6\1\uffff\1\6\1\uffff\2\6\11\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\23\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\103\1\104",
            "\1\2\5\uffff\1\3\14\uffff\2\2\4\uffff\1\6\1\67\1\6\1\uffff\1\6\1\uffff\2\6\11\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\23\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\2\5\uffff\1\3\14\uffff\2\2\4\uffff\1\6\1\67\1\6\1\uffff\1\6\1\uffff\2\6\11\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\23\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\2\5\uffff\1\3\11\uffff\1\70\2\uffff\2\2\4\uffff\1\6\1\67\1\6\1\uffff\1\6\1\uffff\2\6\7\uffff\1\72\1\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\3\uffff\1\71\17\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\2\5\uffff\1\3\14\uffff\2\2\4\uffff\1\6\1\67\1\6\1\uffff\1\6\1\uffff\2\6\11\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\23\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\114",
            "\1\115",
            "\1\116",
            "\1\116",
            "\1\117",
            "\1\2\5\uffff\1\3\11\uffff\1\120\1\uffff\3\2\4\uffff\1\6\1\30\1\6\1\2\1\6\1\uffff\2\6\7\uffff\1\27\1\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\3\uffff\1\26\17\uffff\1\2\1\uffff\1\2\26\uffff\1\2\2\uffff\1\4\17\uffff\15\2",
            "\1\121\1\uffff\1\2\11\uffff\1\2\13\uffff\1\34\4\uffff\1\2\1\35\41\uffff\1\33\50\uffff\1\2\22\uffff\15\2",
            "\1\2\5\uffff\1\3\11\uffff\1\111\2\uffff\2\2\4\uffff\1\6\1\67\1\6\1\uffff\1\6\1\uffff\2\6\7\uffff\1\113\1\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\3\uffff\1\112\17\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\2\5\uffff\1\3\14\uffff\2\2\4\uffff\1\6\1\67\1\6\1\uffff\1\6\1\uffff\2\6\11\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\23\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\122",
            "\1\123",
            "\1\2\5\uffff\1\3\11\uffff\1\124\1\uffff\3\2\4\uffff\1\6\1\30\1\6\1\2\1\6\1\uffff\2\6\7\uffff\1\27\1\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\3\uffff\1\26\17\uffff\1\2\1\uffff\1\2\26\uffff\1\2\2\uffff\1\4\17\uffff\15\2",
            "\1\125\1\uffff\1\2\11\uffff\1\2\13\uffff\1\34\4\uffff\1\2\1\35\41\uffff\1\33\50\uffff\1\2\22\uffff\15\2",
            "\1\uffff",
            "\1\uffff"
    };

    static final short[] dfa_81 = DFA.unpackEncodedString(dfa_81s);
    static final short[] dfa_82 = DFA.unpackEncodedString(dfa_82s);
    static final char[] dfa_83 = DFA.unpackEncodedStringToUnsignedChars(dfa_83s);
    static final char[] dfa_84 = DFA.unpackEncodedStringToUnsignedChars(dfa_84s);
    static final short[] dfa_85 = DFA.unpackEncodedString(dfa_85s);
    static final short[] dfa_86 = DFA.unpackEncodedString(dfa_86s);
    static final short[][] dfa_87 = unpackEncodedStringArray(dfa_87s);

    class DFA179 extends DFA {

        public DFA179(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 179;
            this.eot = dfa_81;
            this.eof = dfa_82;
            this.min = dfa_83;
            this.max = dfa_84;
            this.accept = dfa_85;
            this.special = dfa_86;
            this.transition = dfa_87;
        }
        public String getDescription() {
            return "7557:5: (otherlv_3= '[' ( (lv_renamings_4_0= ruleRenamings ) ) (otherlv_5= ';' ( (lv_renamings_6_0= ruleRenamings ) ) )* otherlv_7= ']' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA179_84 = input.LA(1);

                         
                        int index179_84 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred239_InternalSCEst()) ) {s = 6;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index179_84);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA179_85 = input.LA(1);

                         
                        int index179_85 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred239_InternalSCEst()) ) {s = 6;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index179_85);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 179, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_88s = "\2\4\1\uffff\3\4\1\uffff\1\4\1\22\2\4\1\7\10\4\1\22\3\4\2\7\2\4\1\7\4\4\1\7\5\4\2\24\1\62\3\4\1\7\4\4\1\7\7\4\1\7\3\4\1\24\3\4\1\7\10\4\1\7\1\4\1\24\5\4\1\24\2\0";
    static final String dfa_89s = "\2\u0080\1\uffff\1\u0080\1\4\1\142\1\uffff\1\u0080\1\121\1\4\1\10\1\7\2\u0080\1\u009c\5\u0080\1\u009c\1\124\2\4\1\7\1\10\2\4\1\7\1\124\3\u0080\1\10\2\u0080\1\u009c\2\u0080\1\u009c\1\124\1\62\3\u0080\1\10\2\u0080\2\4\1\7\4\4\1\124\2\4\1\7\2\u0080\2\u009c\3\u0080\1\10\4\u0080\4\4\1\7\2\u009c\2\u0080\2\4\2\u009c\2\0";
    static final String[] dfa_90s = {
            "\1\2\5\uffff\1\2\10\uffff\3\2\1\uffff\2\2\24\uffff\4\2\1\1\5\2\1\uffff\11\2\1\uffff\7\2\1\uffff\7\2\15\uffff\2\2\4\uffff\1\2\1\uffff\5\2\25\uffff\1\2",
            "\1\2\5\uffff\1\3\14\uffff\2\2\4\uffff\1\6\1\uffff\1\6\1\uffff\1\6\1\uffff\2\6\11\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\23\uffff\1\2\1\uffff\1\2\1\uffff\1\2\27\uffff\1\4",
            "",
            "\1\2\5\uffff\1\3\14\uffff\2\2\4\uffff\1\6\1\uffff\1\6\1\uffff\1\6\1\uffff\2\6\11\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\23\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\7",
            "\1\10\135\uffff\1\6",
            "",
            "\1\16\1\15\1\uffff\1\20\1\21\1\17\1\3\11\uffff\1\11\2\uffff\2\2\4\uffff\1\6\1\uffff\1\6\1\uffff\1\6\1\uffff\2\6\7\uffff\1\13\1\uffff\3\2\1\14\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\3\uffff\1\12\17\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\2\3\uffff\1\2\2\uffff\1\2\4\uffff\1\2\52\uffff\1\2\7\uffff\1\6",
            "\1\22",
            "\1\22\2\uffff\1\20\1\21",
            "\1\23",
            "\1\24\5\uffff\1\2\14\uffff\2\2\25\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\6\2\23\uffff\1\2\1\uffff\1\2\1\uffff\1\2\27\uffff\1\2",
            "\1\2\5\uffff\1\3\14\uffff\2\2\4\uffff\1\6\1\25\1\6\1\uffff\1\6\1\uffff\2\6\11\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\23\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\2\5\uffff\1\3\7\uffff\1\2\1\uffff\1\26\1\uffff\3\2\4\uffff\1\6\1\25\1\6\1\2\1\6\1\uffff\2\6\7\uffff\1\30\1\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\3\uffff\1\27\17\uffff\1\2\1\uffff\1\2\26\uffff\1\2\2\uffff\1\4\17\uffff\15\2",
            "\1\2\5\uffff\1\3\14\uffff\2\2\4\uffff\1\6\1\25\1\6\1\uffff\1\6\1\uffff\2\6\11\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\23\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\2\5\uffff\1\3\14\uffff\2\2\4\uffff\1\6\1\25\1\6\1\uffff\1\6\1\uffff\2\6\11\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\23\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\2\5\uffff\1\3\14\uffff\2\2\4\uffff\1\6\1\25\1\6\1\uffff\1\6\1\uffff\2\6\11\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\23\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\16\1\15\1\uffff\1\20\1\21\1\17\1\3\11\uffff\1\11\2\uffff\2\2\4\uffff\1\6\1\uffff\1\6\1\uffff\1\6\1\uffff\2\6\7\uffff\1\13\1\uffff\3\2\1\14\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\3\uffff\1\12\17\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\16\1\15\1\uffff\1\20\1\21\1\17\1\3\14\uffff\2\2\4\uffff\1\6\1\uffff\1\6\1\uffff\1\6\1\uffff\2\6\11\uffff\3\2\1\14\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\3\uffff\1\31\17\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\2\1\uffff\1\32\1\uffff\1\2\11\uffff\1\2\13\uffff\1\34\4\uffff\1\2\1\35\41\uffff\1\33\50\uffff\1\2\22\uffff\15\2",
            "\1\37\1\36\1\uffff\1\42\1\43\1\40\112\uffff\1\41",
            "\1\44",
            "\1\45",
            "\1\46",
            "\1\20\1\21",
            "\1\47",
            "\1\50",
            "\1\51",
            "\1\53\1\52\1\uffff\1\56\1\57\1\54\112\uffff\1\55",
            "\1\2\5\uffff\1\3\14\uffff\2\2\4\uffff\1\6\1\25\1\6\1\uffff\1\6\1\uffff\2\6\11\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\23\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\2\5\uffff\1\3\11\uffff\1\60\2\uffff\2\2\4\uffff\1\6\1\25\1\6\1\uffff\1\6\1\uffff\2\6\7\uffff\1\62\1\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\3\uffff\1\61\17\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\2\5\uffff\1\3\14\uffff\2\2\4\uffff\1\6\1\25\1\6\1\uffff\1\6\1\uffff\2\6\11\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\23\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\42\1\43",
            "\1\2\5\uffff\1\3\14\uffff\2\2\4\uffff\1\6\1\25\1\6\1\uffff\1\6\1\uffff\2\6\11\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\23\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\2\5\uffff\1\3\14\uffff\2\2\4\uffff\1\6\1\25\1\6\1\uffff\1\6\1\uffff\2\6\11\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\23\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\2\5\uffff\1\3\11\uffff\1\63\1\uffff\3\2\4\uffff\1\6\1\25\1\6\1\2\1\6\1\uffff\2\6\7\uffff\1\30\1\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\3\uffff\1\27\17\uffff\1\2\1\uffff\1\2\26\uffff\1\2\2\uffff\1\4\17\uffff\15\2",
            "\1\2\5\uffff\1\3\11\uffff\1\64\2\uffff\2\2\4\uffff\1\6\1\25\1\6\1\uffff\1\6\1\uffff\2\6\7\uffff\1\30\1\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\3\uffff\1\27\17\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\2\5\uffff\1\3\14\uffff\2\2\4\uffff\1\6\1\25\1\6\1\uffff\1\6\1\uffff\2\6\11\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\23\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\65\1\uffff\1\2\11\uffff\1\2\13\uffff\1\34\4\uffff\1\2\1\35\41\uffff\1\33\50\uffff\1\2\22\uffff\15\2",
            "\1\66\27\uffff\1\34\5\uffff\1\35\41\uffff\1\33",
            "\1\35",
            "\1\2\5\uffff\1\3\14\uffff\2\2\4\uffff\1\6\1\67\1\6\1\uffff\1\6\1\uffff\2\6\11\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\23\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\2\5\uffff\1\3\11\uffff\1\70\2\uffff\2\2\4\uffff\1\6\1\67\1\6\1\uffff\1\6\1\uffff\2\6\7\uffff\1\72\1\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\3\uffff\1\71\17\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\2\5\uffff\1\3\14\uffff\2\2\4\uffff\1\6\1\67\1\6\1\uffff\1\6\1\uffff\2\6\11\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\23\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\56\1\57",
            "\1\2\5\uffff\1\3\14\uffff\2\2\4\uffff\1\6\1\67\1\6\1\uffff\1\6\1\uffff\2\6\11\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\23\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\2\5\uffff\1\3\14\uffff\2\2\4\uffff\1\6\1\67\1\6\1\uffff\1\6\1\uffff\2\6\11\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\23\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\73",
            "\1\73",
            "\1\74",
            "\1\75",
            "\1\45",
            "\1\76",
            "\1\50",
            "\1\100\1\77\1\uffff\1\103\1\104\1\101\112\uffff\1\102",
            "\1\105",
            "\1\105",
            "\1\106",
            "\1\2\5\uffff\1\3\11\uffff\1\60\2\uffff\2\2\4\uffff\1\6\1\25\1\6\1\uffff\1\6\1\uffff\2\6\7\uffff\1\62\1\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\3\uffff\1\61\17\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\2\5\uffff\1\3\14\uffff\2\2\4\uffff\1\6\1\25\1\6\1\uffff\1\6\1\uffff\2\6\11\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\23\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\2\5\uffff\1\3\11\uffff\1\107\1\uffff\3\2\4\uffff\1\6\1\25\1\6\1\2\1\6\1\uffff\2\6\7\uffff\1\30\1\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\3\uffff\1\27\17\uffff\1\2\1\uffff\1\2\26\uffff\1\2\2\uffff\1\4\17\uffff\15\2",
            "\1\110\1\uffff\1\2\11\uffff\1\2\13\uffff\1\34\4\uffff\1\2\1\35\41\uffff\1\33\50\uffff\1\2\22\uffff\15\2",
            "\1\2\5\uffff\1\3\14\uffff\2\2\4\uffff\1\6\1\67\1\6\1\uffff\1\6\1\uffff\2\6\11\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\23\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\2\5\uffff\1\3\11\uffff\1\111\2\uffff\2\2\4\uffff\1\6\1\67\1\6\1\uffff\1\6\1\uffff\2\6\7\uffff\1\113\1\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\3\uffff\1\112\17\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\2\5\uffff\1\3\14\uffff\2\2\4\uffff\1\6\1\67\1\6\1\uffff\1\6\1\uffff\2\6\11\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\23\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\103\1\104",
            "\1\2\5\uffff\1\3\14\uffff\2\2\4\uffff\1\6\1\67\1\6\1\uffff\1\6\1\uffff\2\6\11\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\23\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\2\5\uffff\1\3\14\uffff\2\2\4\uffff\1\6\1\67\1\6\1\uffff\1\6\1\uffff\2\6\11\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\23\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\2\5\uffff\1\3\11\uffff\1\70\2\uffff\2\2\4\uffff\1\6\1\67\1\6\1\uffff\1\6\1\uffff\2\6\7\uffff\1\72\1\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\3\uffff\1\71\17\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\2\5\uffff\1\3\14\uffff\2\2\4\uffff\1\6\1\67\1\6\1\uffff\1\6\1\uffff\2\6\11\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\23\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\114",
            "\1\115",
            "\1\116",
            "\1\116",
            "\1\117",
            "\1\2\5\uffff\1\3\11\uffff\1\120\1\uffff\3\2\4\uffff\1\6\1\25\1\6\1\2\1\6\1\uffff\2\6\7\uffff\1\30\1\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\3\uffff\1\27\17\uffff\1\2\1\uffff\1\2\26\uffff\1\2\2\uffff\1\4\17\uffff\15\2",
            "\1\121\1\uffff\1\2\11\uffff\1\2\13\uffff\1\34\4\uffff\1\2\1\35\41\uffff\1\33\50\uffff\1\2\22\uffff\15\2",
            "\1\2\5\uffff\1\3\11\uffff\1\111\2\uffff\2\2\4\uffff\1\6\1\67\1\6\1\uffff\1\6\1\uffff\2\6\7\uffff\1\113\1\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\3\uffff\1\112\17\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\2\5\uffff\1\3\14\uffff\2\2\4\uffff\1\6\1\67\1\6\1\uffff\1\6\1\uffff\2\6\11\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\23\uffff\1\2\1\uffff\1\2\31\uffff\1\4",
            "\1\122",
            "\1\123",
            "\1\2\5\uffff\1\3\11\uffff\1\124\1\uffff\3\2\4\uffff\1\6\1\25\1\6\1\2\1\6\1\uffff\2\6\7\uffff\1\30\1\uffff\4\2\1\uffff\4\2\3\uffff\2\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\2\2\1\5\3\2\3\uffff\1\27\17\uffff\1\2\1\uffff\1\2\26\uffff\1\2\2\uffff\1\4\17\uffff\15\2",
            "\1\125\1\uffff\1\2\11\uffff\1\2\13\uffff\1\34\4\uffff\1\2\1\35\41\uffff\1\33\50\uffff\1\2\22\uffff\15\2",
            "\1\uffff",
            "\1\uffff"
    };
    static final char[] dfa_88 = DFA.unpackEncodedStringToUnsignedChars(dfa_88s);
    static final char[] dfa_89 = DFA.unpackEncodedStringToUnsignedChars(dfa_89s);
    static final short[][] dfa_90 = unpackEncodedStringArray(dfa_90s);

    class DFA181 extends DFA {

        public DFA181(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 181;
            this.eot = dfa_81;
            this.eof = dfa_82;
            this.min = dfa_88;
            this.max = dfa_89;
            this.accept = dfa_85;
            this.special = dfa_86;
            this.transition = dfa_90;
        }
        public String getDescription() {
            return "7637:5: (otherlv_10= '[' ( (lv_renamings_11_0= ruleRenamings ) ) (otherlv_12= ';' ( (lv_renamings_13_0= ruleRenamings ) ) )* otherlv_14= ']' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA181_84 = input.LA(1);

                         
                        int index181_84 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred242_InternalSCEst()) ) {s = 6;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index181_84);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA181_85 = input.LA(1);

                         
                        int index181_85 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred242_InternalSCEst()) ) {s = 6;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index181_85);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 181, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_91s = "\1\4\4\uffff\1\0\2\uffff\1\0\6\uffff\1\0\3\uffff";
    static final String dfa_92s = "\1\u0082\4\uffff\1\0\2\uffff\1\0\6\uffff\1\0\3\uffff";
    static final String dfa_93s = "\1\uffff\1\1\17\uffff\1\2\1\uffff";
    static final String dfa_94s = "\5\uffff\1\0\2\uffff\1\1\6\uffff\1\2\3\uffff}>";
    static final String[] dfa_95s = {
            "\1\5\6\1\16\uffff\1\1\27\uffff\1\21\42\uffff\1\1\6\uffff\1\1\5\uffff\1\1\1\17\1\21\21\uffff\1\1\12\uffff\1\1\1\10\1\1",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            ""
    };
    static final char[] dfa_91 = DFA.unpackEncodedStringToUnsignedChars(dfa_91s);
    static final char[] dfa_92 = DFA.unpackEncodedStringToUnsignedChars(dfa_92s);
    static final short[] dfa_93 = DFA.unpackEncodedString(dfa_93s);
    static final short[] dfa_94 = DFA.unpackEncodedString(dfa_94s);
    static final short[][] dfa_95 = unpackEncodedStringArray(dfa_95s);

    class DFA220 extends DFA {

        public DFA220(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 220;
            this.eot = dfa_38;
            this.eof = dfa_38;
            this.min = dfa_91;
            this.max = dfa_92;
            this.accept = dfa_93;
            this.special = dfa_94;
            this.transition = dfa_95;
        }
        public String getDescription() {
            return "9845:2: ( ( ( (lv_delay_0_0= ruleExpression ) ) ( ( (lv_expression_1_0= ruleSignalOrTickReferenceExpression ) ) | ( (lv_expression_2_0= ruleSignalPreExpression ) ) | (otherlv_3= '[' ( (lv_expression_4_0= ruleSignalExpression ) ) otherlv_5= ']' ) ) ) | ( ( (lv_immediate_6_0= 'immediate' ) )? ( ( (lv_expression_7_0= ruleSignalOrTickReferenceExpression ) ) | ( (lv_expression_8_0= ruleSignalPreExpression ) ) | (otherlv_9= '[' ( (lv_expression_10_0= ruleSignalExpression ) ) otherlv_11= ']' ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA220_5 = input.LA(1);

                         
                        int index220_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred296_InternalSCEst()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index220_5);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA220_8 = input.LA(1);

                         
                        int index220_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred296_InternalSCEst()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index220_8);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA220_15 = input.LA(1);

                         
                        int index220_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred296_InternalSCEst()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index220_15);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 220, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_96s = "\22\uffff";
    static final String dfa_97s = "\1\4\17\0\2\uffff";
    static final String dfa_98s = "\1\u0082\17\0\2\uffff";
    static final String dfa_99s = "\20\uffff\1\1\1\2";
    static final String dfa_100s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\2\uffff}>";
    static final String[] dfa_101s = {
            "\1\5\1\15\1\14\1\2\1\3\1\7\1\12\16\uffff\1\4\72\uffff\1\1\6\uffff\1\20\5\uffff\1\6\1\17\22\uffff\1\16\12\uffff\1\13\1\10\1\11",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_96 = DFA.unpackEncodedString(dfa_96s);
    static final char[] dfa_97 = DFA.unpackEncodedStringToUnsignedChars(dfa_97s);
    static final char[] dfa_98 = DFA.unpackEncodedStringToUnsignedChars(dfa_98s);
    static final short[] dfa_99 = DFA.unpackEncodedString(dfa_99s);
    static final short[] dfa_100 = DFA.unpackEncodedString(dfa_100s);
    static final short[][] dfa_101 = unpackEncodedStringArray(dfa_101s);

    class DFA221 extends DFA {

        public DFA221(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 221;
            this.eot = dfa_96;
            this.eof = dfa_96;
            this.min = dfa_97;
            this.max = dfa_98;
            this.accept = dfa_99;
            this.special = dfa_100;
            this.transition = dfa_101;
        }
        public String getDescription() {
            return "10044:2: (this_BooleanExpression_0= ruleBooleanExpression | this_ValuedExpression_1= ruleValuedExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA221_1 = input.LA(1);

                         
                        int index221_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred300_InternalSCEst()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index221_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA221_2 = input.LA(1);

                         
                        int index221_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred300_InternalSCEst()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index221_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA221_3 = input.LA(1);

                         
                        int index221_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred300_InternalSCEst()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index221_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA221_4 = input.LA(1);

                         
                        int index221_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred300_InternalSCEst()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index221_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA221_5 = input.LA(1);

                         
                        int index221_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred300_InternalSCEst()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index221_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA221_6 = input.LA(1);

                         
                        int index221_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred300_InternalSCEst()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index221_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA221_7 = input.LA(1);

                         
                        int index221_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred300_InternalSCEst()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index221_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA221_8 = input.LA(1);

                         
                        int index221_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred300_InternalSCEst()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index221_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA221_9 = input.LA(1);

                         
                        int index221_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred300_InternalSCEst()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index221_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA221_10 = input.LA(1);

                         
                        int index221_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred300_InternalSCEst()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index221_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA221_11 = input.LA(1);

                         
                        int index221_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred300_InternalSCEst()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index221_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA221_12 = input.LA(1);

                         
                        int index221_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred300_InternalSCEst()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index221_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA221_13 = input.LA(1);

                         
                        int index221_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred300_InternalSCEst()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index221_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA221_14 = input.LA(1);

                         
                        int index221_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred300_InternalSCEst()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index221_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA221_15 = input.LA(1);

                         
                        int index221_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred300_InternalSCEst()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index221_15);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 221, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_102s = "\21\uffff";
    static final String dfa_103s = "\1\4\1\uffff\16\0\1\uffff";
    static final String dfa_104s = "\1\u0082\1\uffff\16\0\1\uffff";
    static final String dfa_105s = "\1\uffff\1\1\16\uffff\1\2";
    static final String dfa_106s = "\2\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\uffff}>";
    static final String[] dfa_107s = {
            "\1\5\1\15\1\14\1\2\1\3\1\7\1\12\16\uffff\1\4\72\uffff\1\1\6\uffff\1\20\5\uffff\1\6\1\17\22\uffff\1\16\12\uffff\1\13\1\10\1\11",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] dfa_102 = DFA.unpackEncodedString(dfa_102s);
    static final char[] dfa_103 = DFA.unpackEncodedStringToUnsignedChars(dfa_103s);
    static final char[] dfa_104 = DFA.unpackEncodedStringToUnsignedChars(dfa_104s);
    static final short[] dfa_105 = DFA.unpackEncodedString(dfa_105s);
    static final short[] dfa_106 = DFA.unpackEncodedString(dfa_106s);
    static final short[][] dfa_107 = unpackEncodedStringArray(dfa_107s);

    class DFA227 extends DFA {

        public DFA227(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 227;
            this.eot = dfa_102;
            this.eof = dfa_102;
            this.min = dfa_103;
            this.max = dfa_104;
            this.accept = dfa_105;
            this.special = dfa_106;
            this.transition = dfa_107;
        }
        public String getDescription() {
            return "10358:2: (this_ValuedExpression_0= ruleValuedExpression | this_NotExpression_1= ruleNotExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA227_2 = input.LA(1);

                         
                        int index227_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred306_InternalSCEst()) ) {s = 1;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index227_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA227_3 = input.LA(1);

                         
                        int index227_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred306_InternalSCEst()) ) {s = 1;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index227_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA227_4 = input.LA(1);

                         
                        int index227_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred306_InternalSCEst()) ) {s = 1;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index227_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA227_5 = input.LA(1);

                         
                        int index227_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred306_InternalSCEst()) ) {s = 1;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index227_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA227_6 = input.LA(1);

                         
                        int index227_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred306_InternalSCEst()) ) {s = 1;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index227_6);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA227_7 = input.LA(1);

                         
                        int index227_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred306_InternalSCEst()) ) {s = 1;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index227_7);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA227_8 = input.LA(1);

                         
                        int index227_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred306_InternalSCEst()) ) {s = 1;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index227_8);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA227_9 = input.LA(1);

                         
                        int index227_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred306_InternalSCEst()) ) {s = 1;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index227_9);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA227_10 = input.LA(1);

                         
                        int index227_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred306_InternalSCEst()) ) {s = 1;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index227_10);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA227_11 = input.LA(1);

                         
                        int index227_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred306_InternalSCEst()) ) {s = 1;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index227_11);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA227_12 = input.LA(1);

                         
                        int index227_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred306_InternalSCEst()) ) {s = 1;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index227_12);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA227_13 = input.LA(1);

                         
                        int index227_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred306_InternalSCEst()) ) {s = 1;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index227_13);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA227_14 = input.LA(1);

                         
                        int index227_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred306_InternalSCEst()) ) {s = 1;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index227_14);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA227_15 = input.LA(1);

                         
                        int index227_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred306_InternalSCEst()) ) {s = 1;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index227_15);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 227, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_108s = "\127\uffff";
    static final String dfa_109s = "\1\3\126\uffff";
    static final String dfa_110s = "\3\4\1\uffff\1\4\1\uffff\1\4\1\22\2\4\1\7\11\4\1\22\3\4\1\7\1\22\1\7\2\4\1\7\4\4\1\7\5\4\2\24\1\62\3\4\1\7\4\4\1\7\7\4\1\7\3\4\1\24\3\4\1\7\10\4\1\7\1\4\1\24\5\4\1\24\2\0";
    static final String dfa_111s = "\2\u00a5\1\4\1\uffff\1\u00a4\1\uffff\1\u00a5\1\175\1\4\1\10\1\7\1\u0080\5\u00a5\1\u0080\2\u00a5\1\u009c\1\124\2\4\1\7\1\175\1\10\2\4\1\7\1\124\3\u00a5\1\10\5\u00a5\1\u009c\1\124\1\62\3\u00a5\1\10\2\u00a5\2\4\1\7\4\4\1\124\2\4\1\7\3\u00a5\1\u009c\3\u00a5\1\10\4\u00a5\4\4\1\7\1\u00a5\1\u009c\2\u00a5\2\4\1\u00a5\1\u009c\2\0";
    static final String dfa_112s = "\3\uffff\1\2\1\uffff\1\1\121\uffff";
    static final String dfa_113s = "\125\uffff\1\0\1\1}>";
    static final String[] dfa_114s = {
            "\1\3\5\uffff\1\1\14\uffff\2\3\14\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\1\uffff\1\3\7\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\14\uffff\2\3\14\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\6",
            "",
            "\1\7\5\uffff\1\5\165\uffff\1\5\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\1\5\31\uffff\2\5",
            "",
            "\1\15\1\14\1\uffff\1\17\1\20\1\16\1\1\11\uffff\1\10\2\uffff\2\3\14\uffff\2\5\5\uffff\1\12\1\uffff\3\3\1\13\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\3\uffff\1\11\17\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\2\uffff\1\5\1\3\2\uffff\1\3\1\uffff\1\5\2\uffff\1\21\1\uffff\1\5\20\uffff\1\5\27\uffff\1\3\63\uffff\1\5",
            "\1\22",
            "\1\22\2\uffff\1\17\1\20",
            "\1\23",
            "\1\24\5\uffff\1\3\14\uffff\2\3\25\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\6\3\23\uffff\1\3\1\uffff\1\3\1\uffff\1\3\27\uffff\1\3",
            "\1\3\5\uffff\1\1\14\uffff\2\3\5\uffff\1\25\6\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\7\uffff\1\3\1\uffff\1\26\1\uffff\3\3\5\uffff\1\25\1\uffff\1\3\4\uffff\2\5\5\uffff\1\30\1\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\3\uffff\1\27\17\uffff\1\3\1\5\1\3\11\uffff\6\5\7\uffff\1\3\2\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\5\uffff\15\3\6\uffff\3\5",
            "\1\3\5\uffff\1\1\14\uffff\2\3\5\uffff\1\25\6\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\14\uffff\2\3\5\uffff\1\25\6\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\14\uffff\2\3\5\uffff\1\25\6\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\31\5\uffff\1\5\165\uffff\1\5",
            "\1\15\1\14\1\uffff\1\17\1\20\1\16\1\1\11\uffff\1\10\2\uffff\2\3\14\uffff\2\5\5\uffff\1\12\1\uffff\3\3\1\13\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\3\uffff\1\11\17\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\15\1\14\1\uffff\1\17\1\20\1\16\1\1\14\uffff\2\3\14\uffff\2\5\7\uffff\3\3\1\13\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\3\uffff\1\32\17\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\1\uffff\1\33\1\uffff\1\3\11\uffff\1\3\13\uffff\1\35\4\uffff\1\3\1\36\41\uffff\1\34\50\uffff\1\3\22\uffff\15\3",
            "\1\40\1\37\1\uffff\1\43\1\44\1\41\112\uffff\1\42",
            "\1\45",
            "\1\46",
            "\1\47",
            "\1\3\2\uffff\1\5\1\3\2\uffff\1\3\1\uffff\1\5\2\uffff\1\21\1\uffff\1\5\20\uffff\1\5\27\uffff\1\3\63\uffff\1\5",
            "\1\17\1\20",
            "\1\50",
            "\1\51",
            "\1\52",
            "\1\54\1\53\1\uffff\1\57\1\60\1\55\112\uffff\1\56",
            "\1\3\5\uffff\1\1\14\uffff\2\3\5\uffff\1\25\6\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\11\uffff\1\61\2\uffff\2\3\5\uffff\1\25\6\uffff\2\5\5\uffff\1\63\1\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\3\uffff\1\62\17\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\14\uffff\2\3\5\uffff\1\25\6\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\43\1\44",
            "\1\3\5\uffff\1\1\14\uffff\2\3\5\uffff\1\25\6\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\14\uffff\2\3\5\uffff\1\25\6\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\11\uffff\1\64\1\uffff\3\3\5\uffff\1\25\1\uffff\1\3\4\uffff\2\5\5\uffff\1\30\1\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\3\uffff\1\27\17\uffff\1\3\1\5\1\3\11\uffff\6\5\7\uffff\1\3\2\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\5\uffff\15\3\6\uffff\3\5",
            "\1\3\5\uffff\1\1\11\uffff\1\65\2\uffff\2\3\5\uffff\1\25\6\uffff\2\5\5\uffff\1\30\1\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\3\uffff\1\27\17\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\14\uffff\2\3\5\uffff\1\25\6\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\66\1\uffff\1\3\11\uffff\1\3\13\uffff\1\35\4\uffff\1\3\1\36\41\uffff\1\34\50\uffff\1\3\22\uffff\15\3",
            "\1\67\27\uffff\1\35\5\uffff\1\36\41\uffff\1\34",
            "\1\36",
            "\1\3\5\uffff\1\1\14\uffff\2\3\5\uffff\1\70\6\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\11\uffff\1\71\2\uffff\2\3\5\uffff\1\70\6\uffff\2\5\5\uffff\1\73\1\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\3\uffff\1\72\17\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\14\uffff\2\3\5\uffff\1\70\6\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\57\1\60",
            "\1\3\5\uffff\1\1\14\uffff\2\3\5\uffff\1\70\6\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\14\uffff\2\3\5\uffff\1\70\6\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\74",
            "\1\74",
            "\1\75",
            "\1\76",
            "\1\46",
            "\1\77",
            "\1\51",
            "\1\101\1\100\1\uffff\1\104\1\105\1\102\112\uffff\1\103",
            "\1\106",
            "\1\106",
            "\1\107",
            "\1\3\5\uffff\1\1\11\uffff\1\61\2\uffff\2\3\5\uffff\1\25\6\uffff\2\5\5\uffff\1\63\1\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\3\uffff\1\62\17\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\14\uffff\2\3\5\uffff\1\25\6\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\11\uffff\1\110\1\uffff\3\3\5\uffff\1\25\1\uffff\1\3\4\uffff\2\5\5\uffff\1\30\1\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\3\uffff\1\27\17\uffff\1\3\1\5\1\3\11\uffff\6\5\7\uffff\1\3\2\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\5\uffff\15\3\6\uffff\3\5",
            "\1\111\1\uffff\1\3\11\uffff\1\3\13\uffff\1\35\4\uffff\1\3\1\36\41\uffff\1\34\50\uffff\1\3\22\uffff\15\3",
            "\1\3\5\uffff\1\1\14\uffff\2\3\5\uffff\1\70\6\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\11\uffff\1\112\2\uffff\2\3\5\uffff\1\70\6\uffff\2\5\5\uffff\1\114\1\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\3\uffff\1\113\17\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\14\uffff\2\3\5\uffff\1\70\6\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\104\1\105",
            "\1\3\5\uffff\1\1\14\uffff\2\3\5\uffff\1\70\6\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\14\uffff\2\3\5\uffff\1\70\6\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\11\uffff\1\71\2\uffff\2\3\5\uffff\1\70\6\uffff\2\5\5\uffff\1\73\1\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\3\uffff\1\72\17\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\14\uffff\2\3\5\uffff\1\70\6\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\115",
            "\1\116",
            "\1\117",
            "\1\117",
            "\1\120",
            "\1\3\5\uffff\1\1\11\uffff\1\121\1\uffff\3\3\5\uffff\1\25\1\uffff\1\3\4\uffff\2\5\5\uffff\1\30\1\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\3\uffff\1\27\17\uffff\1\3\1\5\1\3\11\uffff\6\5\7\uffff\1\3\2\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\5\uffff\15\3\6\uffff\3\5",
            "\1\122\1\uffff\1\3\11\uffff\1\3\13\uffff\1\35\4\uffff\1\3\1\36\41\uffff\1\34\50\uffff\1\3\22\uffff\15\3",
            "\1\3\5\uffff\1\1\11\uffff\1\112\2\uffff\2\3\5\uffff\1\70\6\uffff\2\5\5\uffff\1\114\1\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\3\uffff\1\113\17\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\14\uffff\2\3\5\uffff\1\70\6\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\123",
            "\1\124",
            "\1\3\5\uffff\1\1\11\uffff\1\125\1\uffff\3\3\5\uffff\1\25\1\uffff\1\3\4\uffff\2\5\5\uffff\1\30\1\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\3\uffff\1\27\17\uffff\1\3\1\5\1\3\11\uffff\6\5\7\uffff\1\3\2\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\5\uffff\15\3\6\uffff\3\5",
            "\1\126\1\uffff\1\3\11\uffff\1\3\13\uffff\1\35\4\uffff\1\3\1\36\41\uffff\1\34\50\uffff\1\3\22\uffff\15\3",
            "\1\uffff",
            "\1\uffff"
    };

    static final short[] dfa_108 = DFA.unpackEncodedString(dfa_108s);
    static final short[] dfa_109 = DFA.unpackEncodedString(dfa_109s);
    static final char[] dfa_110 = DFA.unpackEncodedStringToUnsignedChars(dfa_110s);
    static final char[] dfa_111 = DFA.unpackEncodedStringToUnsignedChars(dfa_111s);
    static final short[] dfa_112 = DFA.unpackEncodedString(dfa_112s);
    static final short[] dfa_113 = DFA.unpackEncodedString(dfa_113s);
    static final short[][] dfa_114 = unpackEncodedStringArray(dfa_114s);

    class DFA241 extends DFA {

        public DFA241(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 241;
            this.eot = dfa_108;
            this.eof = dfa_109;
            this.min = dfa_110;
            this.max = dfa_111;
            this.accept = dfa_112;
            this.special = dfa_113;
            this.transition = dfa_114;
        }
        public String getDescription() {
            return "()* loopback of 11184:3: ( (lv_declarations_4_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA241_85 = input.LA(1);

                         
                        int index241_85 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred321_InternalSCEst()) ) {s = 5;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index241_85);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA241_86 = input.LA(1);

                         
                        int index241_86 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred321_InternalSCEst()) ) {s = 5;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index241_86);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 241, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_115s = "\5\uffff";
    static final String dfa_116s = "\1\1\1\uffff\2\1\1\uffff";
    static final String dfa_117s = "\1\4\1\uffff\2\4\1\uffff";
    static final String dfa_118s = "\1\u0080\1\uffff\2\u009e\1\uffff";
    static final String dfa_119s = "\1\uffff\1\2\2\uffff\1\1";
    static final String dfa_120s = "\5\uffff}>";
    static final String[] dfa_121s = {
            "\1\2\1\uffff\1\1\3\uffff\1\1\10\uffff\3\1\1\uffff\2\1\24\uffff\12\1\1\uffff\11\1\1\uffff\7\1\1\uffff\7\1\15\uffff\2\1\4\uffff\1\1\1\uffff\5\1\3\uffff\2\1\5\uffff\3\1\10\uffff\1\1",
            "",
            "\1\1\1\uffff\1\1\1\4\2\uffff\1\1\7\uffff\1\1\1\uffff\1\1\1\uffff\1\1\2\uffff\1\1\6\uffff\1\1\20\uffff\1\1\3\uffff\1\1\57\uffff\1\1\1\uffff\1\1\6\uffff\2\1\5\uffff\3\1\5\uffff\1\3\2\uffff\1\1\17\uffff\17\1",
            "\1\1\1\uffff\1\1\1\4\2\uffff\1\1\11\uffff\1\1\1\uffff\1\1\2\uffff\1\1\6\uffff\1\1\20\uffff\1\1\3\uffff\1\1\57\uffff\1\1\1\uffff\1\1\6\uffff\2\1\5\uffff\3\1\5\uffff\1\3\2\uffff\1\1\17\uffff\17\1",
            ""
    };

    static final short[] dfa_115 = DFA.unpackEncodedString(dfa_115s);
    static final short[] dfa_116 = DFA.unpackEncodedString(dfa_116s);
    static final char[] dfa_117 = DFA.unpackEncodedStringToUnsignedChars(dfa_117s);
    static final char[] dfa_118 = DFA.unpackEncodedStringToUnsignedChars(dfa_118s);
    static final short[] dfa_119 = DFA.unpackEncodedString(dfa_119s);
    static final short[] dfa_120 = DFA.unpackEncodedString(dfa_120s);
    static final short[][] dfa_121 = unpackEncodedStringArray(dfa_121s);

    class DFA247 extends DFA {

        public DFA247(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 247;
            this.eot = dfa_115;
            this.eof = dfa_116;
            this.min = dfa_117;
            this.max = dfa_118;
            this.accept = dfa_119;
            this.special = dfa_120;
            this.transition = dfa_121;
        }
        public String getDescription() {
            return "()+ loopback of 11454:4: ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+";
        }
    }
    static final String[] dfa_122s = {
            "\1\3\5\uffff\1\1\14\uffff\2\3\14\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\3\3\7\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\14\uffff\2\3\14\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\6",
            "",
            "\1\7\5\uffff\1\5\165\uffff\1\5\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\1\5\31\uffff\2\5",
            "",
            "\1\15\1\14\1\uffff\1\17\1\20\1\16\1\1\11\uffff\1\10\2\uffff\2\3\14\uffff\2\5\5\uffff\1\12\1\uffff\3\3\1\13\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\3\uffff\1\11\17\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\2\uffff\1\5\1\3\2\uffff\1\3\1\uffff\1\5\2\uffff\1\21\1\uffff\1\5\20\uffff\1\5\27\uffff\1\3\63\uffff\1\5",
            "\1\22",
            "\1\22\2\uffff\1\17\1\20",
            "\1\23",
            "\1\24\5\uffff\1\3\14\uffff\2\3\25\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\6\3\23\uffff\1\3\1\uffff\1\3\1\uffff\1\3\27\uffff\1\3",
            "\1\3\5\uffff\1\1\14\uffff\2\3\5\uffff\1\25\6\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\7\uffff\1\3\1\uffff\1\26\1\uffff\3\3\5\uffff\1\25\1\uffff\1\3\4\uffff\2\5\5\uffff\1\30\1\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\3\uffff\1\27\17\uffff\1\3\1\5\1\3\11\uffff\6\5\7\uffff\1\3\2\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\5\uffff\15\3\6\uffff\3\5",
            "\1\3\5\uffff\1\1\14\uffff\2\3\5\uffff\1\25\6\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\14\uffff\2\3\5\uffff\1\25\6\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\14\uffff\2\3\5\uffff\1\25\6\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\31\5\uffff\1\5\165\uffff\1\5",
            "\1\15\1\14\1\uffff\1\17\1\20\1\16\1\1\11\uffff\1\10\2\uffff\2\3\14\uffff\2\5\5\uffff\1\12\1\uffff\3\3\1\13\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\3\uffff\1\11\17\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\15\1\14\1\uffff\1\17\1\20\1\16\1\1\14\uffff\2\3\14\uffff\2\5\7\uffff\3\3\1\13\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\3\uffff\1\32\17\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\1\uffff\1\33\1\uffff\1\3\11\uffff\1\3\13\uffff\1\35\4\uffff\1\3\1\36\41\uffff\1\34\50\uffff\1\3\22\uffff\15\3",
            "\1\40\1\37\1\uffff\1\43\1\44\1\41\112\uffff\1\42",
            "\1\45",
            "\1\46",
            "\1\47",
            "\1\3\2\uffff\1\5\1\3\2\uffff\1\3\1\uffff\1\5\2\uffff\1\21\1\uffff\1\5\20\uffff\1\5\27\uffff\1\3\63\uffff\1\5",
            "\1\17\1\20",
            "\1\50",
            "\1\51",
            "\1\52",
            "\1\54\1\53\1\uffff\1\57\1\60\1\55\112\uffff\1\56",
            "\1\3\5\uffff\1\1\14\uffff\2\3\5\uffff\1\25\6\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\11\uffff\1\61\2\uffff\2\3\5\uffff\1\25\6\uffff\2\5\5\uffff\1\63\1\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\3\uffff\1\62\17\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\14\uffff\2\3\5\uffff\1\25\6\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\43\1\44",
            "\1\3\5\uffff\1\1\14\uffff\2\3\5\uffff\1\25\6\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\14\uffff\2\3\5\uffff\1\25\6\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\11\uffff\1\64\1\uffff\3\3\5\uffff\1\25\1\uffff\1\3\4\uffff\2\5\5\uffff\1\30\1\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\3\uffff\1\27\17\uffff\1\3\1\5\1\3\11\uffff\6\5\7\uffff\1\3\2\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\5\uffff\15\3\6\uffff\3\5",
            "\1\3\5\uffff\1\1\11\uffff\1\65\2\uffff\2\3\5\uffff\1\25\6\uffff\2\5\5\uffff\1\30\1\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\3\uffff\1\27\17\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\14\uffff\2\3\5\uffff\1\25\6\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\66\1\uffff\1\3\11\uffff\1\3\13\uffff\1\35\4\uffff\1\3\1\36\41\uffff\1\34\50\uffff\1\3\22\uffff\15\3",
            "\1\67\27\uffff\1\35\5\uffff\1\36\41\uffff\1\34",
            "\1\36",
            "\1\3\5\uffff\1\1\14\uffff\2\3\5\uffff\1\70\6\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\11\uffff\1\71\2\uffff\2\3\5\uffff\1\70\6\uffff\2\5\5\uffff\1\73\1\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\3\uffff\1\72\17\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\14\uffff\2\3\5\uffff\1\70\6\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\57\1\60",
            "\1\3\5\uffff\1\1\14\uffff\2\3\5\uffff\1\70\6\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\14\uffff\2\3\5\uffff\1\70\6\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\74",
            "\1\74",
            "\1\75",
            "\1\76",
            "\1\46",
            "\1\77",
            "\1\51",
            "\1\101\1\100\1\uffff\1\104\1\105\1\102\112\uffff\1\103",
            "\1\106",
            "\1\106",
            "\1\107",
            "\1\3\5\uffff\1\1\11\uffff\1\61\2\uffff\2\3\5\uffff\1\25\6\uffff\2\5\5\uffff\1\63\1\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\3\uffff\1\62\17\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\14\uffff\2\3\5\uffff\1\25\6\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\11\uffff\1\110\1\uffff\3\3\5\uffff\1\25\1\uffff\1\3\4\uffff\2\5\5\uffff\1\30\1\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\3\uffff\1\27\17\uffff\1\3\1\5\1\3\11\uffff\6\5\7\uffff\1\3\2\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\5\uffff\15\3\6\uffff\3\5",
            "\1\111\1\uffff\1\3\11\uffff\1\3\13\uffff\1\35\4\uffff\1\3\1\36\41\uffff\1\34\50\uffff\1\3\22\uffff\15\3",
            "\1\3\5\uffff\1\1\14\uffff\2\3\5\uffff\1\70\6\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\11\uffff\1\112\2\uffff\2\3\5\uffff\1\70\6\uffff\2\5\5\uffff\1\114\1\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\3\uffff\1\113\17\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\14\uffff\2\3\5\uffff\1\70\6\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\104\1\105",
            "\1\3\5\uffff\1\1\14\uffff\2\3\5\uffff\1\70\6\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\14\uffff\2\3\5\uffff\1\70\6\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\11\uffff\1\71\2\uffff\2\3\5\uffff\1\70\6\uffff\2\5\5\uffff\1\73\1\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\3\uffff\1\72\17\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\14\uffff\2\3\5\uffff\1\70\6\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\115",
            "\1\116",
            "\1\117",
            "\1\117",
            "\1\120",
            "\1\3\5\uffff\1\1\11\uffff\1\121\1\uffff\3\3\5\uffff\1\25\1\uffff\1\3\4\uffff\2\5\5\uffff\1\30\1\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\3\uffff\1\27\17\uffff\1\3\1\5\1\3\11\uffff\6\5\7\uffff\1\3\2\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\5\uffff\15\3\6\uffff\3\5",
            "\1\122\1\uffff\1\3\11\uffff\1\3\13\uffff\1\35\4\uffff\1\3\1\36\41\uffff\1\34\50\uffff\1\3\22\uffff\15\3",
            "\1\3\5\uffff\1\1\11\uffff\1\112\2\uffff\2\3\5\uffff\1\70\6\uffff\2\5\5\uffff\1\114\1\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\3\uffff\1\113\17\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\14\uffff\2\3\5\uffff\1\70\6\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\123",
            "\1\124",
            "\1\3\5\uffff\1\1\11\uffff\1\125\1\uffff\3\3\5\uffff\1\25\1\uffff\1\3\4\uffff\2\5\5\uffff\1\30\1\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\3\uffff\1\27\17\uffff\1\3\1\5\1\3\11\uffff\6\5\7\uffff\1\3\2\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\5\uffff\15\3\6\uffff\3\5",
            "\1\126\1\uffff\1\3\11\uffff\1\3\13\uffff\1\35\4\uffff\1\3\1\36\41\uffff\1\34\50\uffff\1\3\22\uffff\15\3",
            "\1\uffff",
            "\1\uffff"
    };
    static final short[][] dfa_122 = unpackEncodedStringArray(dfa_122s);

    class DFA251 extends DFA {

        public DFA251(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 251;
            this.eot = dfa_108;
            this.eof = dfa_108;
            this.min = dfa_110;
            this.max = dfa_111;
            this.accept = dfa_112;
            this.special = dfa_113;
            this.transition = dfa_122;
        }
        public String getDescription() {
            return "()* loopback of 11553:3: ( (lv_declarations_4_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA251_85 = input.LA(1);

                         
                        int index251_85 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred331_InternalSCEst()) ) {s = 5;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index251_85);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA251_86 = input.LA(1);

                         
                        int index251_86 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred331_InternalSCEst()) ) {s = 5;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index251_86);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 251, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_123s = "\1\5\63\uffff";
    static final String dfa_124s = "\1\4\3\0\60\uffff";
    static final String dfa_125s = "\1\u0080\3\0\60\uffff";
    static final String dfa_126s = "\4\uffff\1\2\1\3\55\uffff\1\1";
    static final String dfa_127s = "\1\uffff\1\0\1\1\1\2\60\uffff}>";
    static final String[] dfa_128s = {
            "\1\5\5\uffff\1\1\10\uffff\2\5\1\4\1\uffff\2\5\24\uffff\12\5\1\uffff\1\3\10\5\1\uffff\7\5\1\uffff\7\5\15\uffff\2\5\4\uffff\1\5\1\uffff\5\5\25\uffff\1\2",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_123 = DFA.unpackEncodedString(dfa_123s);
    static final char[] dfa_124 = DFA.unpackEncodedStringToUnsignedChars(dfa_124s);
    static final char[] dfa_125 = DFA.unpackEncodedStringToUnsignedChars(dfa_125s);
    static final short[] dfa_126 = DFA.unpackEncodedString(dfa_126s);
    static final short[] dfa_127 = DFA.unpackEncodedString(dfa_127s);
    static final short[][] dfa_128 = unpackEncodedStringArray(dfa_128s);

    class DFA253 extends DFA {

        public DFA253(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 253;
            this.eot = dfa_62;
            this.eof = dfa_123;
            this.min = dfa_124;
            this.max = dfa_125;
            this.accept = dfa_126;
            this.special = dfa_127;
            this.transition = dfa_128;
        }
        public String getDescription() {
            return "11595:3: ( ( (lv_else_7_0= ruleElseScope ) ) | ( (lv_semicolon_8_0= ';' ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA253_1 = input.LA(1);

                         
                        int index253_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred333_InternalSCEst()) ) {s = 51;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index253_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA253_2 = input.LA(1);

                         
                        int index253_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred333_InternalSCEst()) ) {s = 51;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index253_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA253_3 = input.LA(1);

                         
                        int index253_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred333_InternalSCEst()) ) {s = 51;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index253_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 253, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_129s = "\3\4\1\uffff\1\4\1\uffff\1\4\1\22\2\4\1\7\14\4\1\7\2\22\1\7\3\4\1\7\7\4\1\7\3\4\1\7\2\4\2\24\1\62\3\4\1\7\12\4\1\7\1\4\1\24\3\4\1\7\10\4\1\7\1\4\1\24\4\4\1\0\1\24\1\0";
    static final String dfa_130s = "\2\u00a5\1\4\1\uffff\1\u00a4\1\uffff\1\u00a5\1\175\1\4\1\10\1\7\5\u00a5\2\u0080\2\u00a5\1\124\2\4\1\7\1\u009c\1\175\1\10\3\u00a5\1\10\5\u00a5\2\4\1\7\1\124\2\4\1\7\2\4\1\u009c\1\124\1\62\3\u00a5\1\10\5\u00a5\2\4\1\124\2\4\1\7\1\4\1\u009c\3\u00a5\1\10\5\u00a5\3\4\1\7\1\4\1\u009c\3\u00a5\1\4\1\0\1\u009c\1\0";
    static final String dfa_131s = "\124\uffff\1\0\1\uffff\1\1}>";
    static final String[] dfa_132s = {
            "\1\3\5\uffff\1\1\14\uffff\2\3\14\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\3\3\7\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\14\uffff\2\3\14\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\6",
            "",
            "\1\7\5\uffff\1\5\165\uffff\1\5\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\1\5\31\uffff\2\5",
            "",
            "\1\14\1\13\1\uffff\1\16\1\17\1\15\1\1\11\uffff\1\10\2\uffff\2\3\14\uffff\2\5\5\uffff\1\12\1\uffff\3\3\1\20\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\3\uffff\1\11\17\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\2\uffff\1\5\1\3\2\uffff\1\3\1\uffff\1\5\2\uffff\1\21\1\uffff\1\5\20\uffff\1\5\27\uffff\1\3\63\uffff\1\5",
            "\1\22",
            "\1\22\2\uffff\1\16\1\17",
            "\1\23",
            "\1\3\5\uffff\1\1\14\uffff\2\3\5\uffff\1\24\6\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\7\uffff\1\3\1\uffff\1\25\1\uffff\3\3\5\uffff\1\24\1\uffff\1\3\4\uffff\2\5\5\uffff\1\27\1\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\3\uffff\1\26\17\uffff\1\3\1\5\1\3\11\uffff\6\5\7\uffff\1\3\2\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\5\uffff\15\3\6\uffff\3\5",
            "\1\3\5\uffff\1\1\14\uffff\2\3\5\uffff\1\24\6\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\14\uffff\2\3\5\uffff\1\24\6\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\14\uffff\2\3\5\uffff\1\24\6\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\30\5\uffff\1\3\14\uffff\2\3\25\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\6\3\23\uffff\1\3\1\uffff\1\3\1\uffff\1\3\27\uffff\1\3",
            "\1\31\5\uffff\1\5\165\uffff\1\5",
            "\1\14\1\13\1\uffff\1\16\1\17\1\15\1\1\11\uffff\1\10\2\uffff\2\3\14\uffff\2\5\5\uffff\1\12\1\uffff\3\3\1\20\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\3\uffff\1\11\17\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\14\1\13\1\uffff\1\16\1\17\1\15\1\1\14\uffff\2\3\14\uffff\2\5\7\uffff\3\3\1\20\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\3\uffff\1\32\17\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\34\1\33\1\uffff\1\37\1\40\1\35\112\uffff\1\36",
            "\1\41",
            "\1\42",
            "\1\43",
            "\1\3\1\uffff\1\44\1\uffff\1\3\11\uffff\1\3\13\uffff\1\46\4\uffff\1\3\1\47\41\uffff\1\45\50\uffff\1\3\22\uffff\15\3",
            "\1\3\2\uffff\1\5\1\3\2\uffff\1\3\1\uffff\1\5\2\uffff\1\21\1\uffff\1\5\20\uffff\1\5\27\uffff\1\3\63\uffff\1\5",
            "\1\16\1\17",
            "\1\3\5\uffff\1\1\14\uffff\2\3\5\uffff\1\24\6\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\11\uffff\1\50\2\uffff\2\3\5\uffff\1\24\6\uffff\2\5\5\uffff\1\52\1\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\3\uffff\1\51\17\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\14\uffff\2\3\5\uffff\1\24\6\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\37\1\40",
            "\1\3\5\uffff\1\1\14\uffff\2\3\5\uffff\1\24\6\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\14\uffff\2\3\5\uffff\1\24\6\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\11\uffff\1\53\1\uffff\3\3\5\uffff\1\24\1\uffff\1\3\4\uffff\2\5\5\uffff\1\27\1\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\3\uffff\1\26\17\uffff\1\3\1\5\1\3\11\uffff\6\5\7\uffff\1\3\2\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\5\uffff\15\3\6\uffff\3\5",
            "\1\3\5\uffff\1\1\11\uffff\1\54\2\uffff\2\3\5\uffff\1\24\6\uffff\2\5\5\uffff\1\27\1\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\3\uffff\1\26\17\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\14\uffff\2\3\5\uffff\1\24\6\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\55",
            "\1\56",
            "\1\57",
            "\1\61\1\60\1\uffff\1\64\1\65\1\62\112\uffff\1\63",
            "\1\66",
            "\1\66",
            "\1\67",
            "\1\70",
            "\1\42",
            "\1\71\1\uffff\1\3\11\uffff\1\3\13\uffff\1\46\4\uffff\1\3\1\47\41\uffff\1\45\50\uffff\1\3\22\uffff\15\3",
            "\1\72\27\uffff\1\46\5\uffff\1\47\41\uffff\1\45",
            "\1\47",
            "\1\3\5\uffff\1\1\14\uffff\2\3\5\uffff\1\73\6\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\11\uffff\1\74\2\uffff\2\3\5\uffff\1\73\6\uffff\2\5\5\uffff\1\76\1\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\3\uffff\1\75\17\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\14\uffff\2\3\5\uffff\1\73\6\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\64\1\65",
            "\1\3\5\uffff\1\1\14\uffff\2\3\5\uffff\1\73\6\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\14\uffff\2\3\5\uffff\1\73\6\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\11\uffff\1\50\2\uffff\2\3\5\uffff\1\24\6\uffff\2\5\5\uffff\1\52\1\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\3\uffff\1\51\17\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\14\uffff\2\3\5\uffff\1\24\6\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\11\uffff\1\77\1\uffff\3\3\5\uffff\1\24\1\uffff\1\3\4\uffff\2\5\5\uffff\1\27\1\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\3\uffff\1\26\17\uffff\1\3\1\5\1\3\11\uffff\6\5\7\uffff\1\3\2\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\5\uffff\15\3\6\uffff\3\5",
            "\1\100",
            "\1\56",
            "\1\102\1\101\1\uffff\1\105\1\106\1\103\112\uffff\1\104",
            "\1\107",
            "\1\107",
            "\1\110",
            "\1\111",
            "\1\112\1\uffff\1\3\11\uffff\1\3\13\uffff\1\46\4\uffff\1\3\1\47\41\uffff\1\45\50\uffff\1\3\22\uffff\15\3",
            "\1\3\5\uffff\1\1\14\uffff\2\3\5\uffff\1\73\6\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\11\uffff\1\113\2\uffff\2\3\5\uffff\1\73\6\uffff\2\5\5\uffff\1\115\1\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\3\uffff\1\114\17\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\14\uffff\2\3\5\uffff\1\73\6\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\105\1\106",
            "\1\3\5\uffff\1\1\14\uffff\2\3\5\uffff\1\73\6\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\14\uffff\2\3\5\uffff\1\73\6\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\11\uffff\1\74\2\uffff\2\3\5\uffff\1\73\6\uffff\2\5\5\uffff\1\76\1\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\3\uffff\1\75\17\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\14\uffff\2\3\5\uffff\1\73\6\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\11\uffff\1\116\1\uffff\3\3\5\uffff\1\24\1\uffff\1\3\4\uffff\2\5\5\uffff\1\27\1\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\3\uffff\1\26\17\uffff\1\3\1\5\1\3\11\uffff\6\5\7\uffff\1\3\2\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\5\uffff\15\3\6\uffff\3\5",
            "\1\117",
            "\1\120",
            "\1\120",
            "\1\121",
            "\1\122",
            "\1\123\1\uffff\1\3\11\uffff\1\3\13\uffff\1\46\4\uffff\1\3\1\47\41\uffff\1\45\50\uffff\1\3\22\uffff\15\3",
            "\1\3\5\uffff\1\1\11\uffff\1\113\2\uffff\2\3\5\uffff\1\73\6\uffff\2\5\5\uffff\1\115\1\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\3\uffff\1\114\17\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\14\uffff\2\3\5\uffff\1\73\6\uffff\2\5\7\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\23\uffff\1\3\1\5\1\3\11\uffff\6\5\12\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\5\uffff\1\1\11\uffff\1\124\1\uffff\3\3\5\uffff\1\24\1\uffff\1\3\4\uffff\2\5\5\uffff\1\27\1\uffff\4\3\1\uffff\4\3\3\uffff\2\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\2\3\1\4\3\3\3\uffff\1\26\17\uffff\1\3\1\5\1\3\11\uffff\6\5\7\uffff\1\3\2\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\5\uffff\15\3\6\uffff\3\5",
            "\1\125",
            "\1\uffff",
            "\1\126\1\uffff\1\3\11\uffff\1\3\13\uffff\1\46\4\uffff\1\3\1\47\41\uffff\1\45\50\uffff\1\3\22\uffff\15\3",
            "\1\uffff"
    };
    static final char[] dfa_129 = DFA.unpackEncodedStringToUnsignedChars(dfa_129s);
    static final char[] dfa_130 = DFA.unpackEncodedStringToUnsignedChars(dfa_130s);
    static final short[] dfa_131 = DFA.unpackEncodedString(dfa_131s);
    static final short[][] dfa_132 = unpackEncodedStringArray(dfa_132s);

    class DFA255 extends DFA {

        public DFA255(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 255;
            this.eot = dfa_108;
            this.eof = dfa_108;
            this.min = dfa_129;
            this.max = dfa_130;
            this.accept = dfa_112;
            this.special = dfa_131;
            this.transition = dfa_132;
        }
        public String getDescription() {
            return "()* loopback of 11687:3: ( (lv_declarations_4_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA255_84 = input.LA(1);

                         
                        int index255_84 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalSCEst()) ) {s = 5;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index255_84);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA255_86 = input.LA(1);

                         
                        int index255_86 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalSCEst()) ) {s = 5;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index255_86);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 255, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_133s = "\123\uffff";
    static final String dfa_134s = "\1\4\1\uffff\2\4\1\uffff\3\4\1\7\13\4\1\7\1\22\1\7\3\4\1\7\7\4\1\7\3\4\1\7\2\4\2\24\1\62\3\4\1\7\12\4\1\7\1\4\1\24\3\4\1\7\10\4\1\7\1\4\1\24\4\4\1\0\1\24\1\0";
    static final String dfa_135s = "\1\u0080\1\uffff\1\u0080\1\4\1\uffff\1\u0080\1\4\1\10\1\7\1\u0080\1\u009c\6\u0080\1\124\2\4\1\7\1\u009c\1\10\3\u0080\1\10\2\u0080\1\u009c\2\u0080\2\4\1\7\1\124\2\4\1\7\2\4\1\u009c\1\124\1\62\3\u0080\1\10\4\u0080\1\u009c\2\4\1\124\2\4\1\7\1\4\1\u009c\3\u0080\1\10\4\u0080\1\u009c\3\4\1\7\1\4\1\u009c\2\u0080\1\u009c\1\4\1\0\1\u009c\1\0";
    static final String dfa_136s = "\1\uffff\1\2\2\uffff\1\1\116\uffff";
    static final String dfa_137s = "\120\uffff\1\0\1\uffff\1\1}>";
    static final String[] dfa_138s = {
            "\1\4\5\uffff\1\2\10\uffff\1\1\3\uffff\2\4\25\uffff\4\4\1\uffff\4\4\1\uffff\1\1\1\uffff\2\4\1\uffff\1\4\1\uffff\2\4\1\uffff\2\4\1\uffff\4\4\2\uffff\6\4\23\uffff\1\4\1\uffff\1\4\1\uffff\1\4\27\uffff\1\3",
            "",
            "\1\4\5\uffff\1\2\14\uffff\2\4\25\uffff\4\4\1\uffff\4\4\1\uffff\1\1\1\uffff\2\4\1\uffff\1\4\1\uffff\2\4\1\uffff\2\4\1\uffff\4\4\2\uffff\6\4\23\uffff\1\4\1\uffff\1\4\31\uffff\1\3",
            "\1\5",
            "",
            "\1\12\1\11\1\uffff\1\14\1\15\1\13\1\2\11\uffff\1\6\2\uffff\2\4\23\uffff\1\10\1\uffff\3\4\1\16\1\uffff\4\4\1\uffff\1\1\1\uffff\2\4\1\uffff\1\4\1\uffff\2\4\1\uffff\2\4\1\uffff\4\4\2\uffff\6\4\3\uffff\1\7\17\uffff\1\4\1\uffff\1\4\31\uffff\1\3",
            "\1\17",
            "\1\17\2\uffff\1\14\1\15",
            "\1\20",
            "\1\4\5\uffff\1\2\14\uffff\2\4\5\uffff\1\21\17\uffff\4\4\1\uffff\4\4\1\uffff\1\1\1\uffff\2\4\1\uffff\1\4\1\uffff\2\4\1\uffff\2\4\1\uffff\4\4\2\uffff\6\4\23\uffff\1\4\1\uffff\1\4\31\uffff\1\3",
            "\1\4\5\uffff\1\2\7\uffff\1\4\1\uffff\1\22\1\uffff\3\4\5\uffff\1\21\1\uffff\1\4\13\uffff\1\24\1\uffff\4\4\1\uffff\4\4\1\uffff\1\1\1\uffff\2\4\1\uffff\1\4\1\uffff\2\4\1\uffff\2\4\1\uffff\4\4\2\uffff\6\4\3\uffff\1\23\17\uffff\1\4\1\uffff\1\4\26\uffff\1\4\2\uffff\1\3\17\uffff\15\4",
            "\1\4\5\uffff\1\2\14\uffff\2\4\5\uffff\1\21\17\uffff\4\4\1\uffff\4\4\1\uffff\1\1\1\uffff\2\4\1\uffff\1\4\1\uffff\2\4\1\uffff\2\4\1\uffff\4\4\2\uffff\6\4\23\uffff\1\4\1\uffff\1\4\31\uffff\1\3",
            "\1\4\5\uffff\1\2\14\uffff\2\4\5\uffff\1\21\17\uffff\4\4\1\uffff\4\4\1\uffff\1\1\1\uffff\2\4\1\uffff\1\4\1\uffff\2\4\1\uffff\2\4\1\uffff\4\4\2\uffff\6\4\23\uffff\1\4\1\uffff\1\4\31\uffff\1\3",
            "\1\4\5\uffff\1\2\14\uffff\2\4\5\uffff\1\21\17\uffff\4\4\1\uffff\4\4\1\uffff\1\1\1\uffff\2\4\1\uffff\1\4\1\uffff\2\4\1\uffff\2\4\1\uffff\4\4\2\uffff\6\4\23\uffff\1\4\1\uffff\1\4\31\uffff\1\3",
            "\1\25\5\uffff\1\4\14\uffff\2\4\25\uffff\4\4\1\uffff\4\4\3\uffff\2\4\1\uffff\1\4\1\uffff\2\4\1\uffff\2\4\1\uffff\4\4\2\uffff\6\4\23\uffff\1\4\1\uffff\1\4\1\uffff\1\4\27\uffff\1\4",
            "\1\12\1\11\1\uffff\1\14\1\15\1\13\1\2\11\uffff\1\6\2\uffff\2\4\23\uffff\1\10\1\uffff\3\4\1\16\1\uffff\4\4\1\uffff\1\1\1\uffff\2\4\1\uffff\1\4\1\uffff\2\4\1\uffff\2\4\1\uffff\4\4\2\uffff\6\4\3\uffff\1\7\17\uffff\1\4\1\uffff\1\4\31\uffff\1\3",
            "\1\12\1\11\1\uffff\1\14\1\15\1\13\1\2\14\uffff\2\4\25\uffff\3\4\1\16\1\uffff\4\4\1\uffff\1\1\1\uffff\2\4\1\uffff\1\4\1\uffff\2\4\1\uffff\2\4\1\uffff\4\4\2\uffff\6\4\3\uffff\1\26\17\uffff\1\4\1\uffff\1\4\31\uffff\1\3",
            "\1\30\1\27\1\uffff\1\33\1\34\1\31\112\uffff\1\32",
            "\1\35",
            "\1\36",
            "\1\37",
            "\1\4\1\uffff\1\40\1\uffff\1\4\11\uffff\1\4\13\uffff\1\42\4\uffff\1\4\1\43\41\uffff\1\41\50\uffff\1\4\22\uffff\15\4",
            "\1\14\1\15",
            "\1\4\5\uffff\1\2\14\uffff\2\4\5\uffff\1\21\17\uffff\4\4\1\uffff\4\4\1\uffff\1\1\1\uffff\2\4\1\uffff\1\4\1\uffff\2\4\1\uffff\2\4\1\uffff\4\4\2\uffff\6\4\23\uffff\1\4\1\uffff\1\4\31\uffff\1\3",
            "\1\4\5\uffff\1\2\11\uffff\1\44\2\uffff\2\4\5\uffff\1\21\15\uffff\1\46\1\uffff\4\4\1\uffff\4\4\1\uffff\1\1\1\uffff\2\4\1\uffff\1\4\1\uffff\2\4\1\uffff\2\4\1\uffff\4\4\2\uffff\6\4\3\uffff\1\45\17\uffff\1\4\1\uffff\1\4\31\uffff\1\3",
            "\1\4\5\uffff\1\2\14\uffff\2\4\5\uffff\1\21\17\uffff\4\4\1\uffff\4\4\1\uffff\1\1\1\uffff\2\4\1\uffff\1\4\1\uffff\2\4\1\uffff\2\4\1\uffff\4\4\2\uffff\6\4\23\uffff\1\4\1\uffff\1\4\31\uffff\1\3",
            "\1\33\1\34",
            "\1\4\5\uffff\1\2\14\uffff\2\4\5\uffff\1\21\17\uffff\4\4\1\uffff\4\4\1\uffff\1\1\1\uffff\2\4\1\uffff\1\4\1\uffff\2\4\1\uffff\2\4\1\uffff\4\4\2\uffff\6\4\23\uffff\1\4\1\uffff\1\4\31\uffff\1\3",
            "\1\4\5\uffff\1\2\14\uffff\2\4\5\uffff\1\21\17\uffff\4\4\1\uffff\4\4\1\uffff\1\1\1\uffff\2\4\1\uffff\1\4\1\uffff\2\4\1\uffff\2\4\1\uffff\4\4\2\uffff\6\4\23\uffff\1\4\1\uffff\1\4\31\uffff\1\3",
            "\1\4\5\uffff\1\2\11\uffff\1\47\1\uffff\3\4\5\uffff\1\21\1\uffff\1\4\13\uffff\1\24\1\uffff\4\4\1\uffff\4\4\1\uffff\1\1\1\uffff\2\4\1\uffff\1\4\1\uffff\2\4\1\uffff\2\4\1\uffff\4\4\2\uffff\6\4\3\uffff\1\23\17\uffff\1\4\1\uffff\1\4\26\uffff\1\4\2\uffff\1\3\17\uffff\15\4",
            "\1\4\5\uffff\1\2\11\uffff\1\50\2\uffff\2\4\5\uffff\1\21\15\uffff\1\24\1\uffff\4\4\1\uffff\4\4\1\uffff\1\1\1\uffff\2\4\1\uffff\1\4\1\uffff\2\4\1\uffff\2\4\1\uffff\4\4\2\uffff\6\4\3\uffff\1\23\17\uffff\1\4\1\uffff\1\4\31\uffff\1\3",
            "\1\4\5\uffff\1\2\14\uffff\2\4\5\uffff\1\21\17\uffff\4\4\1\uffff\4\4\1\uffff\1\1\1\uffff\2\4\1\uffff\1\4\1\uffff\2\4\1\uffff\2\4\1\uffff\4\4\2\uffff\6\4\23\uffff\1\4\1\uffff\1\4\31\uffff\1\3",
            "\1\51",
            "\1\52",
            "\1\53",
            "\1\55\1\54\1\uffff\1\60\1\61\1\56\112\uffff\1\57",
            "\1\62",
            "\1\62",
            "\1\63",
            "\1\64",
            "\1\36",
            "\1\65\1\uffff\1\4\11\uffff\1\4\13\uffff\1\42\4\uffff\1\4\1\43\41\uffff\1\41\50\uffff\1\4\22\uffff\15\4",
            "\1\66\27\uffff\1\42\5\uffff\1\43\41\uffff\1\41",
            "\1\43",
            "\1\4\5\uffff\1\2\14\uffff\2\4\5\uffff\1\67\17\uffff\4\4\1\uffff\4\4\1\uffff\1\1\1\uffff\2\4\1\uffff\1\4\1\uffff\2\4\1\uffff\2\4\1\uffff\4\4\2\uffff\6\4\23\uffff\1\4\1\uffff\1\4\31\uffff\1\3",
            "\1\4\5\uffff\1\2\11\uffff\1\70\2\uffff\2\4\5\uffff\1\67\15\uffff\1\72\1\uffff\4\4\1\uffff\4\4\1\uffff\1\1\1\uffff\2\4\1\uffff\1\4\1\uffff\2\4\1\uffff\2\4\1\uffff\4\4\2\uffff\6\4\3\uffff\1\71\17\uffff\1\4\1\uffff\1\4\31\uffff\1\3",
            "\1\4\5\uffff\1\2\14\uffff\2\4\5\uffff\1\67\17\uffff\4\4\1\uffff\4\4\1\uffff\1\1\1\uffff\2\4\1\uffff\1\4\1\uffff\2\4\1\uffff\2\4\1\uffff\4\4\2\uffff\6\4\23\uffff\1\4\1\uffff\1\4\31\uffff\1\3",
            "\1\60\1\61",
            "\1\4\5\uffff\1\2\14\uffff\2\4\5\uffff\1\67\17\uffff\4\4\1\uffff\4\4\1\uffff\1\1\1\uffff\2\4\1\uffff\1\4\1\uffff\2\4\1\uffff\2\4\1\uffff\4\4\2\uffff\6\4\23\uffff\1\4\1\uffff\1\4\31\uffff\1\3",
            "\1\4\5\uffff\1\2\14\uffff\2\4\5\uffff\1\67\17\uffff\4\4\1\uffff\4\4\1\uffff\1\1\1\uffff\2\4\1\uffff\1\4\1\uffff\2\4\1\uffff\2\4\1\uffff\4\4\2\uffff\6\4\23\uffff\1\4\1\uffff\1\4\31\uffff\1\3",
            "\1\4\5\uffff\1\2\11\uffff\1\44\2\uffff\2\4\5\uffff\1\21\15\uffff\1\46\1\uffff\4\4\1\uffff\4\4\1\uffff\1\1\1\uffff\2\4\1\uffff\1\4\1\uffff\2\4\1\uffff\2\4\1\uffff\4\4\2\uffff\6\4\3\uffff\1\45\17\uffff\1\4\1\uffff\1\4\31\uffff\1\3",
            "\1\4\5\uffff\1\2\14\uffff\2\4\5\uffff\1\21\17\uffff\4\4\1\uffff\4\4\1\uffff\1\1\1\uffff\2\4\1\uffff\1\4\1\uffff\2\4\1\uffff\2\4\1\uffff\4\4\2\uffff\6\4\23\uffff\1\4\1\uffff\1\4\31\uffff\1\3",
            "\1\4\5\uffff\1\2\11\uffff\1\73\1\uffff\3\4\5\uffff\1\21\1\uffff\1\4\13\uffff\1\24\1\uffff\4\4\1\uffff\4\4\1\uffff\1\1\1\uffff\2\4\1\uffff\1\4\1\uffff\2\4\1\uffff\2\4\1\uffff\4\4\2\uffff\6\4\3\uffff\1\23\17\uffff\1\4\1\uffff\1\4\26\uffff\1\4\2\uffff\1\3\17\uffff\15\4",
            "\1\74",
            "\1\52",
            "\1\76\1\75\1\uffff\1\101\1\102\1\77\112\uffff\1\100",
            "\1\103",
            "\1\103",
            "\1\104",
            "\1\105",
            "\1\106\1\uffff\1\4\11\uffff\1\4\13\uffff\1\42\4\uffff\1\4\1\43\41\uffff\1\41\50\uffff\1\4\22\uffff\15\4",
            "\1\4\5\uffff\1\2\14\uffff\2\4\5\uffff\1\67\17\uffff\4\4\1\uffff\4\4\1\uffff\1\1\1\uffff\2\4\1\uffff\1\4\1\uffff\2\4\1\uffff\2\4\1\uffff\4\4\2\uffff\6\4\23\uffff\1\4\1\uffff\1\4\31\uffff\1\3",
            "\1\4\5\uffff\1\2\11\uffff\1\107\2\uffff\2\4\5\uffff\1\67\15\uffff\1\111\1\uffff\4\4\1\uffff\4\4\1\uffff\1\1\1\uffff\2\4\1\uffff\1\4\1\uffff\2\4\1\uffff\2\4\1\uffff\4\4\2\uffff\6\4\3\uffff\1\110\17\uffff\1\4\1\uffff\1\4\31\uffff\1\3",
            "\1\4\5\uffff\1\2\14\uffff\2\4\5\uffff\1\67\17\uffff\4\4\1\uffff\4\4\1\uffff\1\1\1\uffff\2\4\1\uffff\1\4\1\uffff\2\4\1\uffff\2\4\1\uffff\4\4\2\uffff\6\4\23\uffff\1\4\1\uffff\1\4\31\uffff\1\3",
            "\1\101\1\102",
            "\1\4\5\uffff\1\2\14\uffff\2\4\5\uffff\1\67\17\uffff\4\4\1\uffff\4\4\1\uffff\1\1\1\uffff\2\4\1\uffff\1\4\1\uffff\2\4\1\uffff\2\4\1\uffff\4\4\2\uffff\6\4\23\uffff\1\4\1\uffff\1\4\31\uffff\1\3",
            "\1\4\5\uffff\1\2\14\uffff\2\4\5\uffff\1\67\17\uffff\4\4\1\uffff\4\4\1\uffff\1\1\1\uffff\2\4\1\uffff\1\4\1\uffff\2\4\1\uffff\2\4\1\uffff\4\4\2\uffff\6\4\23\uffff\1\4\1\uffff\1\4\31\uffff\1\3",
            "\1\4\5\uffff\1\2\11\uffff\1\70\2\uffff\2\4\5\uffff\1\67\15\uffff\1\72\1\uffff\4\4\1\uffff\4\4\1\uffff\1\1\1\uffff\2\4\1\uffff\1\4\1\uffff\2\4\1\uffff\2\4\1\uffff\4\4\2\uffff\6\4\3\uffff\1\71\17\uffff\1\4\1\uffff\1\4\31\uffff\1\3",
            "\1\4\5\uffff\1\2\14\uffff\2\4\5\uffff\1\67\17\uffff\4\4\1\uffff\4\4\1\uffff\1\1\1\uffff\2\4\1\uffff\1\4\1\uffff\2\4\1\uffff\2\4\1\uffff\4\4\2\uffff\6\4\23\uffff\1\4\1\uffff\1\4\31\uffff\1\3",
            "\1\4\5\uffff\1\2\11\uffff\1\112\1\uffff\3\4\5\uffff\1\21\1\uffff\1\4\13\uffff\1\24\1\uffff\4\4\1\uffff\4\4\1\uffff\1\1\1\uffff\2\4\1\uffff\1\4\1\uffff\2\4\1\uffff\2\4\1\uffff\4\4\2\uffff\6\4\3\uffff\1\23\17\uffff\1\4\1\uffff\1\4\26\uffff\1\4\2\uffff\1\3\17\uffff\15\4",
            "\1\113",
            "\1\114",
            "\1\114",
            "\1\115",
            "\1\116",
            "\1\117\1\uffff\1\4\11\uffff\1\4\13\uffff\1\42\4\uffff\1\4\1\43\41\uffff\1\41\50\uffff\1\4\22\uffff\15\4",
            "\1\4\5\uffff\1\2\11\uffff\1\107\2\uffff\2\4\5\uffff\1\67\15\uffff\1\111\1\uffff\4\4\1\uffff\4\4\1\uffff\1\1\1\uffff\2\4\1\uffff\1\4\1\uffff\2\4\1\uffff\2\4\1\uffff\4\4\2\uffff\6\4\3\uffff\1\110\17\uffff\1\4\1\uffff\1\4\31\uffff\1\3",
            "\1\4\5\uffff\1\2\14\uffff\2\4\5\uffff\1\67\17\uffff\4\4\1\uffff\4\4\1\uffff\1\1\1\uffff\2\4\1\uffff\1\4\1\uffff\2\4\1\uffff\2\4\1\uffff\4\4\2\uffff\6\4\23\uffff\1\4\1\uffff\1\4\31\uffff\1\3",
            "\1\4\5\uffff\1\2\11\uffff\1\120\1\uffff\3\4\5\uffff\1\21\1\uffff\1\4\13\uffff\1\24\1\uffff\4\4\1\uffff\4\4\1\uffff\1\1\1\uffff\2\4\1\uffff\1\4\1\uffff\2\4\1\uffff\2\4\1\uffff\4\4\2\uffff\6\4\3\uffff\1\23\17\uffff\1\4\1\uffff\1\4\26\uffff\1\4\2\uffff\1\3\17\uffff\15\4",
            "\1\121",
            "\1\uffff",
            "\1\122\1\uffff\1\4\11\uffff\1\4\13\uffff\1\42\4\uffff\1\4\1\43\41\uffff\1\41\50\uffff\1\4\22\uffff\15\4",
            "\1\uffff"
    };

    static final short[] dfa_133 = DFA.unpackEncodedString(dfa_133s);
    static final char[] dfa_134 = DFA.unpackEncodedStringToUnsignedChars(dfa_134s);
    static final char[] dfa_135 = DFA.unpackEncodedStringToUnsignedChars(dfa_135s);
    static final short[] dfa_136 = DFA.unpackEncodedString(dfa_136s);
    static final short[] dfa_137 = DFA.unpackEncodedString(dfa_137s);
    static final short[][] dfa_138 = unpackEncodedStringArray(dfa_138s);

    class DFA259 extends DFA {

        public DFA259(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 259;
            this.eot = dfa_133;
            this.eof = dfa_133;
            this.min = dfa_134;
            this.max = dfa_135;
            this.accept = dfa_136;
            this.special = dfa_137;
            this.transition = dfa_138;
        }
        public String getDescription() {
            return "()* loopback of 11808:3: ( (lv_statements_4_0= ruleStatement ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA259_80 = input.LA(1);

                         
                        int index259_80 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred340_InternalSCEst()) ) {s = 4;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index259_80);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA259_82 = input.LA(1);

                         
                        int index259_82 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred340_InternalSCEst()) ) {s = 4;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index259_82);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 259, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_139s = "\46\uffff";
    static final String dfa_140s = "\1\4\45\uffff";
    static final String dfa_141s = "\1\4\3\0\42\uffff";
    static final String dfa_142s = "\1\u0080\3\0\42\uffff";
    static final String dfa_143s = "\4\uffff\1\2\40\uffff\1\1";
    static final String dfa_144s = "\1\uffff\1\0\1\1\1\2\42\uffff}>";
    static final String[] dfa_145s = {
            "\1\4\5\uffff\1\1\14\uffff\2\4\25\uffff\4\4\1\uffff\4\4\3\uffff\2\4\1\uffff\1\4\1\uffff\2\4\1\uffff\2\4\1\uffff\4\4\2\uffff\6\4\23\uffff\1\4\1\uffff\1\3\1\uffff\3\4\25\uffff\1\2",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_139 = DFA.unpackEncodedString(dfa_139s);
    static final short[] dfa_140 = DFA.unpackEncodedString(dfa_140s);
    static final char[] dfa_141 = DFA.unpackEncodedStringToUnsignedChars(dfa_141s);
    static final char[] dfa_142 = DFA.unpackEncodedStringToUnsignedChars(dfa_142s);
    static final short[] dfa_143 = DFA.unpackEncodedString(dfa_143s);
    static final short[] dfa_144 = DFA.unpackEncodedString(dfa_144s);
    static final short[][] dfa_145 = unpackEncodedStringArray(dfa_145s);

    class DFA269 extends DFA {

        public DFA269(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 269;
            this.eot = dfa_139;
            this.eof = dfa_140;
            this.min = dfa_141;
            this.max = dfa_142;
            this.accept = dfa_143;
            this.special = dfa_144;
            this.transition = dfa_145;
        }
        public String getDescription() {
            return "11987:3: ( ( ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' ) | ( (lv_statements_6_0= ruleStatement ) )* )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA269_1 = input.LA(1);

                         
                        int index269_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred349_InternalSCEst()) ) {s = 37;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index269_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA269_2 = input.LA(1);

                         
                        int index269_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred349_InternalSCEst()) ) {s = 37;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index269_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA269_3 = input.LA(1);

                         
                        int index269_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred349_InternalSCEst()) ) {s = 37;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index269_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 269, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA266 extends DFA {

        public DFA266(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 266;
            this.eot = dfa_108;
            this.eof = dfa_108;
            this.min = dfa_110;
            this.max = dfa_111;
            this.accept = dfa_112;
            this.special = dfa_113;
            this.transition = dfa_122;
        }
        public String getDescription() {
            return "()* loopback of 12012:5: ( (lv_declarations_3_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA266_85 = input.LA(1);

                         
                        int index266_85 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred347_InternalSCEst()) ) {s = 5;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index266_85);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA266_86 = input.LA(1);

                         
                        int index266_86 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred347_InternalSCEst()) ) {s = 5;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index266_86);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 266, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA273 extends DFA {

        public DFA273(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 273;
            this.eot = dfa_108;
            this.eof = dfa_108;
            this.min = dfa_129;
            this.max = dfa_130;
            this.accept = dfa_112;
            this.special = dfa_131;
            this.transition = dfa_132;
        }
        public String getDescription() {
            return "()* loopback of 12215:3: ( (lv_declarations_3_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA273_84 = input.LA(1);

                         
                        int index273_84 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred354_InternalSCEst()) ) {s = 5;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index273_84);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA273_86 = input.LA(1);

                         
                        int index273_86 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred354_InternalSCEst()) ) {s = 5;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index273_86);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 273, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_146s = "\156\uffff";
    static final String dfa_147s = "\1\3\13\uffff\1\3\31\uffff\1\3\40\uffff\1\3\26\uffff\1\3\10\uffff\1\3\6\uffff";
    static final String dfa_148s = "\3\4\1\uffff\1\4\1\uffff\3\4\1\7\10\4\1\24\3\4\1\7\4\4\1\7\2\4\1\7\4\4\1\7\6\4\1\7\1\4\1\24\1\62\3\4\1\7\4\4\1\7\2\4\1\7\2\4\1\7\6\4\1\7\6\4\1\24\4\4\1\7\10\4\1\7\4\4\1\7\1\4\1\24\1\62\10\4\1\0\3\4\1\0";
    static final String dfa_149s = "\2\u00a5\1\4\1\uffff\1\u0080\1\uffff\1\u00a5\1\4\1\10\1\7\1\4\7\u00a5\2\124\2\4\1\7\1\124\1\u0080\1\u00a5\1\4\1\10\2\4\1\7\1\124\3\u00a5\1\10\6\u00a5\1\175\1\u00a5\1\124\1\62\3\u00a5\1\10\2\u00a5\2\4\1\7\2\4\1\175\1\4\1\10\1\7\1\4\2\u00a5\1\124\2\4\1\7\1\124\5\u00a5\1\124\1\4\3\u00a5\1\10\5\u00a5\3\4\1\7\1\124\1\u00a5\2\4\1\7\1\u00a5\1\124\1\62\1\u00a5\1\4\2\u00a5\1\4\2\u00a5\1\4\1\0\1\u00a5\1\4\1\u00a5\1\0";
    static final String dfa_150s = "\3\uffff\1\2\1\uffff\1\1\150\uffff";
    static final String dfa_151s = "\151\uffff\1\1\3\uffff\1\0}>";
    static final String[] dfa_152s = {
            "\1\3\1\uffff\1\3\3\uffff\1\1\32\uffff\2\5\16\uffff\1\3\27\uffff\1\5\27\uffff\1\5\10\uffff\2\3\5\5\1\4\2\3\10\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\1\uffff\1\3\3\uffff\1\1\32\uffff\2\5\16\uffff\1\3\27\uffff\1\5\27\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\6",
            "",
            "\1\3\1\5\172\uffff\1\5",
            "",
            "\1\14\1\13\1\3\1\16\1\17\1\15\1\1\11\uffff\1\7\20\uffff\2\5\5\uffff\1\11\4\uffff\1\12\3\uffff\1\3\27\uffff\1\5\6\uffff\1\10\20\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\20",
            "\1\20\2\uffff\1\16\1\17",
            "\1\21",
            "\1\22",
            "\1\3\1\uffff\1\3\3\uffff\1\1\23\uffff\1\23\6\uffff\2\5\16\uffff\1\3\27\uffff\1\5\27\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\1\uffff\1\3\3\uffff\1\1\11\uffff\1\24\4\uffff\1\3\4\uffff\1\27\1\uffff\1\3\4\uffff\2\5\5\uffff\1\26\4\uffff\1\3\3\uffff\1\3\27\uffff\1\5\6\uffff\1\25\20\uffff\1\30\10\uffff\2\3\5\5\1\4\2\3\5\uffff\1\3\2\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\5\uffff\17\3\4\uffff\3\5",
            "\1\3\1\uffff\1\3\3\uffff\1\31\23\uffff\1\27\6\uffff\2\5\16\uffff\1\3\27\uffff\1\5\27\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\1\uffff\1\3\3\uffff\1\31\23\uffff\1\27\6\uffff\2\5\16\uffff\1\3\27\uffff\1\5\27\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\1\uffff\1\3\3\uffff\1\31\23\uffff\1\27\6\uffff\2\5\16\uffff\1\3\27\uffff\1\5\27\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\14\1\13\1\3\1\16\1\17\1\15\1\1\11\uffff\1\7\20\uffff\2\5\5\uffff\1\11\4\uffff\1\12\3\uffff\1\3\27\uffff\1\5\6\uffff\1\10\20\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\14\1\13\1\3\1\16\1\17\1\15\1\1\32\uffff\2\5\12\uffff\1\12\3\uffff\1\3\27\uffff\1\5\6\uffff\1\33\20\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\34\27\uffff\1\36\5\uffff\1\37\41\uffff\1\35",
            "\1\41\1\40\1\uffff\1\44\1\45\1\42\112\uffff\1\43",
            "\1\46",
            "\1\47",
            "\1\50",
            "\1\41\1\51\1\uffff\1\44\1\45\1\42\112\uffff\1\43",
            "\1\52\1\5\4\uffff\1\5\133\uffff\1\5\13\uffff\1\5\15\uffff\1\5",
            "\1\3\1\uffff\1\3\3\uffff\1\31\32\uffff\2\5\16\uffff\1\3\27\uffff\1\5\27\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\53",
            "\1\16\1\17",
            "\1\54",
            "\1\54",
            "\1\55",
            "\1\57\1\56\1\uffff\1\62\1\63\1\60\112\uffff\1\61",
            "\1\3\1\uffff\1\3\3\uffff\1\1\23\uffff\1\23\6\uffff\2\5\16\uffff\1\3\27\uffff\1\5\27\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\1\uffff\1\3\3\uffff\1\31\11\uffff\1\64\11\uffff\1\27\6\uffff\2\5\5\uffff\1\66\10\uffff\1\3\27\uffff\1\5\6\uffff\1\65\20\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\1\uffff\1\3\3\uffff\1\31\23\uffff\1\27\6\uffff\2\5\16\uffff\1\3\27\uffff\1\5\27\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\44\1\45",
            "\1\3\1\uffff\1\3\3\uffff\1\31\23\uffff\1\27\6\uffff\2\5\16\uffff\1\3\27\uffff\1\5\27\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\1\uffff\1\3\3\uffff\1\31\23\uffff\1\27\6\uffff\2\5\16\uffff\1\3\27\uffff\1\5\27\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\1\uffff\1\3\3\uffff\1\1\11\uffff\1\67\4\uffff\1\3\4\uffff\1\27\1\uffff\1\3\4\uffff\2\5\5\uffff\1\26\4\uffff\1\3\3\uffff\1\3\27\uffff\1\5\6\uffff\1\25\20\uffff\1\30\10\uffff\2\3\5\5\1\4\2\3\5\uffff\1\3\2\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\5\uffff\17\3\4\uffff\3\5",
            "\1\3\1\uffff\1\3\3\uffff\1\31\11\uffff\1\70\11\uffff\1\27\6\uffff\2\5\5\uffff\1\26\10\uffff\1\3\27\uffff\1\5\6\uffff\1\25\20\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\1\uffff\1\3\3\uffff\1\31\23\uffff\1\27\6\uffff\2\5\16\uffff\1\3\27\uffff\1\5\27\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\1\uffff\1\3\3\uffff\1\31\23\uffff\1\27\6\uffff\2\5\16\uffff\1\3\27\uffff\1\5\27\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\15\uffff\1\5\5\uffff\1\5\2\uffff\1\5\1\uffff\1\5\20\uffff\1\5\113\uffff\1\71",
            "\1\77\1\76\1\3\1\16\1\17\1\15\1\31\11\uffff\1\72\20\uffff\2\5\5\uffff\1\74\4\uffff\1\75\3\uffff\1\3\27\uffff\1\5\6\uffff\1\73\20\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\34\27\uffff\1\36\5\uffff\1\37\41\uffff\1\35",
            "\1\37",
            "\1\3\1\uffff\1\3\3\uffff\1\1\23\uffff\1\100\6\uffff\2\5\16\uffff\1\3\27\uffff\1\5\27\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\1\uffff\1\3\3\uffff\1\31\11\uffff\1\101\11\uffff\1\104\6\uffff\2\5\5\uffff\1\103\10\uffff\1\3\27\uffff\1\5\6\uffff\1\102\20\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\1\uffff\1\3\3\uffff\1\31\23\uffff\1\104\6\uffff\2\5\16\uffff\1\3\27\uffff\1\5\27\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\62\1\63",
            "\1\3\1\uffff\1\3\3\uffff\1\31\23\uffff\1\104\6\uffff\2\5\16\uffff\1\3\27\uffff\1\5\27\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\1\uffff\1\3\3\uffff\1\31\23\uffff\1\104\6\uffff\2\5\16\uffff\1\3\27\uffff\1\5\27\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\105",
            "\1\105",
            "\1\106",
            "\1\107",
            "\1\47",
            "\1\3\15\uffff\1\5\5\uffff\1\5\2\uffff\1\5\1\uffff\1\5\20\uffff\1\5\113\uffff\1\71",
            "\1\110",
            "\1\110\2\uffff\1\16\1\17",
            "\1\111",
            "\1\112",
            "\1\3\1\uffff\1\3\3\uffff\1\31\23\uffff\1\27\6\uffff\2\5\16\uffff\1\3\27\uffff\1\5\27\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\1\uffff\1\3\3\uffff\1\31\11\uffff\1\113\11\uffff\1\27\1\uffff\1\3\4\uffff\2\5\5\uffff\1\26\4\uffff\1\3\3\uffff\1\3\27\uffff\1\5\6\uffff\1\25\20\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\5\uffff\1\3\2\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\5\uffff\17\3\4\uffff\3\5",
            "\1\115\1\114\1\uffff\1\120\1\121\1\116\112\uffff\1\117",
            "\1\122",
            "\1\122",
            "\1\123",
            "\1\115\1\124\1\uffff\1\120\1\121\1\116\112\uffff\1\117",
            "\1\3\1\uffff\1\3\3\uffff\1\31\11\uffff\1\64\11\uffff\1\27\6\uffff\2\5\5\uffff\1\66\10\uffff\1\3\27\uffff\1\5\6\uffff\1\65\20\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\1\uffff\1\3\3\uffff\1\31\23\uffff\1\27\6\uffff\2\5\16\uffff\1\3\27\uffff\1\5\27\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\1\uffff\1\3\3\uffff\1\1\11\uffff\1\125\4\uffff\1\3\4\uffff\1\27\1\uffff\1\3\4\uffff\2\5\5\uffff\1\26\4\uffff\1\3\3\uffff\1\3\27\uffff\1\5\6\uffff\1\25\20\uffff\1\30\10\uffff\2\3\5\5\1\4\2\3\5\uffff\1\3\2\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\5\uffff\17\3\4\uffff\3\5",
            "\1\77\1\76\1\3\1\16\1\17\1\15\1\31\11\uffff\1\72\20\uffff\2\5\5\uffff\1\74\4\uffff\1\75\3\uffff\1\3\27\uffff\1\5\6\uffff\1\73\20\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\77\1\76\1\3\1\16\1\17\1\15\1\31\32\uffff\2\5\12\uffff\1\75\3\uffff\1\3\27\uffff\1\5\6\uffff\1\33\20\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\126\27\uffff\1\130\5\uffff\1\131\41\uffff\1\127",
            "\1\132",
            "\1\3\1\uffff\1\3\3\uffff\1\1\23\uffff\1\100\6\uffff\2\5\16\uffff\1\3\27\uffff\1\5\27\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\1\uffff\1\3\3\uffff\1\31\11\uffff\1\133\11\uffff\1\104\6\uffff\2\5\5\uffff\1\135\10\uffff\1\3\27\uffff\1\5\6\uffff\1\134\20\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\1\uffff\1\3\3\uffff\1\31\23\uffff\1\104\6\uffff\2\5\16\uffff\1\3\27\uffff\1\5\27\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\120\1\121",
            "\1\3\1\uffff\1\3\3\uffff\1\31\23\uffff\1\104\6\uffff\2\5\16\uffff\1\3\27\uffff\1\5\27\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\1\uffff\1\3\3\uffff\1\31\23\uffff\1\104\6\uffff\2\5\16\uffff\1\3\27\uffff\1\5\27\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\1\uffff\1\3\3\uffff\1\31\11\uffff\1\101\11\uffff\1\104\6\uffff\2\5\5\uffff\1\103\10\uffff\1\3\27\uffff\1\5\6\uffff\1\102\20\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\1\uffff\1\3\3\uffff\1\31\23\uffff\1\104\6\uffff\2\5\16\uffff\1\3\27\uffff\1\5\27\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\1\uffff\1\3\3\uffff\1\31\23\uffff\1\104\6\uffff\2\5\16\uffff\1\3\27\uffff\1\5\27\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\136",
            "\1\137",
            "\1\137",
            "\1\140",
            "\1\57\1\141\1\uffff\1\62\1\63\1\60\112\uffff\1\61",
            "\1\3\1\uffff\1\3\3\uffff\1\31\11\uffff\1\142\11\uffff\1\27\1\uffff\1\3\4\uffff\2\5\5\uffff\1\26\4\uffff\1\3\3\uffff\1\3\27\uffff\1\5\6\uffff\1\25\20\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\5\uffff\1\3\2\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\5\uffff\17\3\4\uffff\3\5",
            "\1\143",
            "\1\143",
            "\1\144",
            "\1\3\1\uffff\1\3\3\uffff\1\1\11\uffff\1\145\4\uffff\1\3\4\uffff\1\27\1\uffff\1\3\4\uffff\2\5\5\uffff\1\26\4\uffff\1\3\3\uffff\1\3\27\uffff\1\5\6\uffff\1\25\20\uffff\1\30\10\uffff\2\3\5\5\1\4\2\3\5\uffff\1\3\2\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\5\uffff\17\3\4\uffff\3\5",
            "\1\126\27\uffff\1\130\5\uffff\1\131\41\uffff\1\127",
            "\1\131",
            "\1\3\1\uffff\1\3\3\uffff\1\31\23\uffff\1\104\6\uffff\2\5\16\uffff\1\3\27\uffff\1\5\27\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\146",
            "\1\3\1\uffff\1\3\3\uffff\1\31\11\uffff\1\133\11\uffff\1\104\6\uffff\2\5\5\uffff\1\135\10\uffff\1\3\27\uffff\1\5\6\uffff\1\134\20\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\1\uffff\1\3\3\uffff\1\31\23\uffff\1\104\6\uffff\2\5\16\uffff\1\3\27\uffff\1\5\27\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\147",
            "\1\3\1\uffff\1\3\3\uffff\1\31\11\uffff\1\150\11\uffff\1\27\1\uffff\1\3\4\uffff\2\5\5\uffff\1\26\4\uffff\1\3\3\uffff\1\3\27\uffff\1\5\6\uffff\1\25\20\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\5\uffff\1\3\2\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\5\uffff\17\3\4\uffff\3\5",
            "\1\3\1\uffff\1\3\3\uffff\1\1\11\uffff\1\151\4\uffff\1\3\4\uffff\1\27\1\uffff\1\3\4\uffff\2\5\5\uffff\1\26\4\uffff\1\3\3\uffff\1\3\27\uffff\1\5\6\uffff\1\25\20\uffff\1\30\10\uffff\2\3\5\5\1\4\2\3\5\uffff\1\3\2\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\5\uffff\17\3\4\uffff\3\5",
            "\1\152",
            "\1\uffff",
            "\1\3\1\uffff\1\3\3\uffff\1\31\11\uffff\1\153\11\uffff\1\27\1\uffff\1\3\4\uffff\2\5\5\uffff\1\26\4\uffff\1\3\3\uffff\1\3\27\uffff\1\5\6\uffff\1\25\20\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\5\uffff\1\3\2\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\5\uffff\17\3\4\uffff\3\5",
            "\1\154",
            "\1\3\1\uffff\1\3\3\uffff\1\31\11\uffff\1\155\11\uffff\1\27\1\uffff\1\3\4\uffff\2\5\5\uffff\1\26\4\uffff\1\3\3\uffff\1\3\27\uffff\1\5\6\uffff\1\25\20\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\5\uffff\1\3\2\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\5\uffff\17\3\4\uffff\3\5",
            "\1\uffff"
    };

    static final short[] dfa_146 = DFA.unpackEncodedString(dfa_146s);
    static final short[] dfa_147 = DFA.unpackEncodedString(dfa_147s);
    static final char[] dfa_148 = DFA.unpackEncodedStringToUnsignedChars(dfa_148s);
    static final char[] dfa_149 = DFA.unpackEncodedStringToUnsignedChars(dfa_149s);
    static final short[] dfa_150 = DFA.unpackEncodedString(dfa_150s);
    static final short[] dfa_151 = DFA.unpackEncodedString(dfa_151s);
    static final short[][] dfa_152 = unpackEncodedStringArray(dfa_152s);

    class DFA283 extends DFA {

        public DFA283(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 283;
            this.eot = dfa_146;
            this.eof = dfa_147;
            this.min = dfa_148;
            this.max = dfa_149;
            this.accept = dfa_150;
            this.special = dfa_151;
            this.transition = dfa_152;
        }
        public String getDescription() {
            return "()* loopback of 12538:3: ( (lv_declarations_1_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA283_109 = input.LA(1);

                         
                        int index283_109 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred365_InternalSCEst()) ) {s = 5;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index283_109);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA283_105 = input.LA(1);

                         
                        int index283_105 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred365_InternalSCEst()) ) {s = 5;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index283_105);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 283, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_153s = "\3\4\1\uffff\1\4\1\uffff\3\4\1\7\12\4\1\7\2\4\1\24\3\4\1\7\6\4\1\7\2\4\1\7\2\4\1\7\7\4\2\7\1\24\1\62\3\4\1\7\4\4\1\7\11\4\1\7\3\4\1\24\5\4\1\7\7\4\1\7\5\4\1\7\1\24\1\62\10\4\1\0\3\4\1\0";
    static final String dfa_154s = "\2\u00a5\1\4\1\uffff\1\u0080\1\uffff\1\u00a5\1\4\1\10\1\7\1\u00a5\1\4\6\u00a5\2\4\1\7\1\124\1\u0080\2\124\1\u00a5\1\4\1\10\6\u00a5\1\10\2\u00a5\1\175\2\4\1\7\1\124\2\u00a5\4\4\1\7\1\175\1\124\1\62\3\u00a5\1\10\2\u00a5\1\4\1\10\1\7\1\4\5\u00a5\1\124\2\4\1\7\1\124\2\u00a5\1\124\2\4\3\u00a5\1\10\5\u00a5\2\4\1\7\1\124\2\u00a5\2\4\1\7\1\124\1\62\1\u00a5\2\4\4\u00a5\1\4\1\0\1\u00a5\1\4\1\u00a5\1\0";
    static final String[] dfa_155s = {
            "\1\3\1\uffff\1\3\3\uffff\1\1\32\uffff\2\5\16\uffff\1\3\27\uffff\1\5\27\uffff\1\5\1\uffff\1\3\6\uffff\2\3\5\5\1\4\2\3\10\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\1\uffff\1\3\3\uffff\1\1\32\uffff\2\5\16\uffff\1\3\27\uffff\1\5\27\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\6",
            "",
            "\1\3\1\5\172\uffff\1\5",
            "",
            "\1\12\1\14\1\3\1\16\1\17\1\15\1\1\11\uffff\1\7\20\uffff\2\5\5\uffff\1\11\4\uffff\1\13\3\uffff\1\3\27\uffff\1\5\6\uffff\1\10\20\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\20",
            "\1\20\2\uffff\1\16\1\17",
            "\1\21",
            "\1\3\1\uffff\1\3\3\uffff\1\1\11\uffff\1\22\4\uffff\1\3\4\uffff\1\25\1\uffff\1\3\4\uffff\2\5\5\uffff\1\24\4\uffff\1\3\3\uffff\1\3\27\uffff\1\5\6\uffff\1\23\20\uffff\1\26\1\uffff\1\3\6\uffff\2\3\5\5\1\4\2\3\5\uffff\1\3\2\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\5\uffff\17\3\4\uffff\3\5",
            "\1\27",
            "\1\3\1\uffff\1\3\3\uffff\1\1\23\uffff\1\30\6\uffff\2\5\16\uffff\1\3\27\uffff\1\5\27\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\1\uffff\1\3\3\uffff\1\31\23\uffff\1\25\6\uffff\2\5\16\uffff\1\3\27\uffff\1\5\27\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\1\uffff\1\3\3\uffff\1\31\23\uffff\1\25\6\uffff\2\5\16\uffff\1\3\27\uffff\1\5\27\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\1\uffff\1\3\3\uffff\1\31\23\uffff\1\25\6\uffff\2\5\16\uffff\1\3\27\uffff\1\5\27\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\12\1\14\1\3\1\16\1\17\1\15\1\1\11\uffff\1\7\20\uffff\2\5\5\uffff\1\11\4\uffff\1\13\3\uffff\1\3\27\uffff\1\5\6\uffff\1\10\20\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\12\1\14\1\3\1\16\1\17\1\15\1\1\32\uffff\2\5\12\uffff\1\13\3\uffff\1\3\27\uffff\1\5\6\uffff\1\33\20\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\34",
            "\1\35",
            "\1\36",
            "\1\40\1\37\1\uffff\1\43\1\44\1\41\112\uffff\1\42",
            "\1\45\1\5\4\uffff\1\5\133\uffff\1\5\13\uffff\1\5\15\uffff\1\5",
            "\1\46\27\uffff\1\50\5\uffff\1\51\41\uffff\1\47",
            "\1\40\1\52\1\uffff\1\43\1\44\1\41\112\uffff\1\42",
            "\1\3\1\uffff\1\3\3\uffff\1\31\32\uffff\2\5\16\uffff\1\3\27\uffff\1\5\27\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\53",
            "\1\16\1\17",
            "\1\3\1\uffff\1\3\3\uffff\1\1\11\uffff\1\54\4\uffff\1\3\4\uffff\1\25\1\uffff\1\3\4\uffff\2\5\5\uffff\1\24\4\uffff\1\3\3\uffff\1\3\27\uffff\1\5\6\uffff\1\23\20\uffff\1\26\1\uffff\1\3\6\uffff\2\3\5\5\1\4\2\3\5\uffff\1\3\2\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\5\uffff\17\3\4\uffff\3\5",
            "\1\3\1\uffff\1\3\3\uffff\1\31\11\uffff\1\55\11\uffff\1\25\6\uffff\2\5\5\uffff\1\24\10\uffff\1\3\27\uffff\1\5\6\uffff\1\23\20\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\1\uffff\1\3\3\uffff\1\31\23\uffff\1\25\6\uffff\2\5\16\uffff\1\3\27\uffff\1\5\27\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\1\uffff\1\3\3\uffff\1\31\23\uffff\1\25\6\uffff\2\5\16\uffff\1\3\27\uffff\1\5\27\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\1\uffff\1\3\3\uffff\1\31\11\uffff\1\56\11\uffff\1\25\6\uffff\2\5\5\uffff\1\60\10\uffff\1\3\27\uffff\1\5\6\uffff\1\57\20\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\1\uffff\1\3\3\uffff\1\31\23\uffff\1\25\6\uffff\2\5\16\uffff\1\3\27\uffff\1\5\27\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\43\1\44",
            "\1\3\1\uffff\1\3\3\uffff\1\31\23\uffff\1\25\6\uffff\2\5\16\uffff\1\3\27\uffff\1\5\27\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\1\uffff\1\3\3\uffff\1\31\23\uffff\1\25\6\uffff\2\5\16\uffff\1\3\27\uffff\1\5\27\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\15\uffff\1\5\5\uffff\1\5\2\uffff\1\5\1\uffff\1\5\20\uffff\1\5\113\uffff\1\61",
            "\1\62",
            "\1\62",
            "\1\63",
            "\1\65\1\64\1\uffff\1\70\1\71\1\66\112\uffff\1\67",
            "\1\3\1\uffff\1\3\3\uffff\1\1\23\uffff\1\30\6\uffff\2\5\16\uffff\1\3\27\uffff\1\5\27\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\76\1\77\1\3\1\16\1\17\1\15\1\31\11\uffff\1\72\20\uffff\2\5\5\uffff\1\74\4\uffff\1\75\3\uffff\1\3\27\uffff\1\5\6\uffff\1\73\20\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\100",
            "\1\35",
            "\1\101",
            "\1\101",
            "\1\102",
            "\1\3\15\uffff\1\5\5\uffff\1\5\2\uffff\1\5\1\uffff\1\5\20\uffff\1\5\113\uffff\1\61",
            "\1\46\27\uffff\1\50\5\uffff\1\51\41\uffff\1\47",
            "\1\51",
            "\1\3\1\uffff\1\3\3\uffff\1\1\23\uffff\1\103\6\uffff\2\5\16\uffff\1\3\27\uffff\1\5\27\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\1\uffff\1\3\3\uffff\1\31\11\uffff\1\104\11\uffff\1\107\6\uffff\2\5\5\uffff\1\106\10\uffff\1\3\27\uffff\1\5\6\uffff\1\105\20\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\1\uffff\1\3\3\uffff\1\31\23\uffff\1\107\6\uffff\2\5\16\uffff\1\3\27\uffff\1\5\27\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\70\1\71",
            "\1\3\1\uffff\1\3\3\uffff\1\31\23\uffff\1\107\6\uffff\2\5\16\uffff\1\3\27\uffff\1\5\27\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\1\uffff\1\3\3\uffff\1\31\23\uffff\1\107\6\uffff\2\5\16\uffff\1\3\27\uffff\1\5\27\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\110",
            "\1\110\2\uffff\1\16\1\17",
            "\1\111",
            "\1\112",
            "\1\3\1\uffff\1\3\3\uffff\1\31\11\uffff\1\113\11\uffff\1\25\1\uffff\1\3\4\uffff\2\5\5\uffff\1\24\4\uffff\1\3\3\uffff\1\3\27\uffff\1\5\6\uffff\1\23\20\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\5\uffff\1\3\2\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\5\uffff\17\3\4\uffff\3\5",
            "\1\3\1\uffff\1\3\3\uffff\1\31\23\uffff\1\25\6\uffff\2\5\16\uffff\1\3\27\uffff\1\5\27\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\1\uffff\1\3\3\uffff\1\1\11\uffff\1\114\4\uffff\1\3\4\uffff\1\25\1\uffff\1\3\4\uffff\2\5\5\uffff\1\24\4\uffff\1\3\3\uffff\1\3\27\uffff\1\5\6\uffff\1\23\20\uffff\1\26\1\uffff\1\3\6\uffff\2\3\5\5\1\4\2\3\5\uffff\1\3\2\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\5\uffff\17\3\4\uffff\3\5",
            "\1\3\1\uffff\1\3\3\uffff\1\31\11\uffff\1\56\11\uffff\1\25\6\uffff\2\5\5\uffff\1\60\10\uffff\1\3\27\uffff\1\5\6\uffff\1\57\20\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\1\uffff\1\3\3\uffff\1\31\23\uffff\1\25\6\uffff\2\5\16\uffff\1\3\27\uffff\1\5\27\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\116\1\115\1\uffff\1\121\1\122\1\117\112\uffff\1\120",
            "\1\123",
            "\1\123",
            "\1\124",
            "\1\116\1\125\1\uffff\1\121\1\122\1\117\112\uffff\1\120",
            "\1\76\1\77\1\3\1\16\1\17\1\15\1\31\11\uffff\1\72\20\uffff\2\5\5\uffff\1\74\4\uffff\1\75\3\uffff\1\3\27\uffff\1\5\6\uffff\1\73\20\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\76\1\77\1\3\1\16\1\17\1\15\1\31\32\uffff\2\5\12\uffff\1\75\3\uffff\1\3\27\uffff\1\5\6\uffff\1\33\20\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\126\27\uffff\1\130\5\uffff\1\131\41\uffff\1\127",
            "\1\132",
            "\1\133",
            "\1\3\1\uffff\1\3\3\uffff\1\1\23\uffff\1\103\6\uffff\2\5\16\uffff\1\3\27\uffff\1\5\27\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\1\uffff\1\3\3\uffff\1\31\11\uffff\1\134\11\uffff\1\107\6\uffff\2\5\5\uffff\1\136\10\uffff\1\3\27\uffff\1\5\6\uffff\1\135\20\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\1\uffff\1\3\3\uffff\1\31\23\uffff\1\107\6\uffff\2\5\16\uffff\1\3\27\uffff\1\5\27\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\121\1\122",
            "\1\3\1\uffff\1\3\3\uffff\1\31\23\uffff\1\107\6\uffff\2\5\16\uffff\1\3\27\uffff\1\5\27\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\1\uffff\1\3\3\uffff\1\31\23\uffff\1\107\6\uffff\2\5\16\uffff\1\3\27\uffff\1\5\27\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\1\uffff\1\3\3\uffff\1\31\11\uffff\1\104\11\uffff\1\107\6\uffff\2\5\5\uffff\1\106\10\uffff\1\3\27\uffff\1\5\6\uffff\1\105\20\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\1\uffff\1\3\3\uffff\1\31\23\uffff\1\107\6\uffff\2\5\16\uffff\1\3\27\uffff\1\5\27\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\1\uffff\1\3\3\uffff\1\31\23\uffff\1\107\6\uffff\2\5\16\uffff\1\3\27\uffff\1\5\27\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\137",
            "\1\137",
            "\1\140",
            "\1\65\1\141\1\uffff\1\70\1\71\1\66\112\uffff\1\67",
            "\1\3\1\uffff\1\3\3\uffff\1\31\11\uffff\1\142\11\uffff\1\25\1\uffff\1\3\4\uffff\2\5\5\uffff\1\24\4\uffff\1\3\3\uffff\1\3\27\uffff\1\5\6\uffff\1\23\20\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\5\uffff\1\3\2\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\5\uffff\17\3\4\uffff\3\5",
            "\1\3\1\uffff\1\3\3\uffff\1\1\11\uffff\1\143\4\uffff\1\3\4\uffff\1\25\1\uffff\1\3\4\uffff\2\5\5\uffff\1\24\4\uffff\1\3\3\uffff\1\3\27\uffff\1\5\6\uffff\1\23\20\uffff\1\26\1\uffff\1\3\6\uffff\2\3\5\5\1\4\2\3\5\uffff\1\3\2\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\5\uffff\17\3\4\uffff\3\5",
            "\1\144",
            "\1\144",
            "\1\145",
            "\1\126\27\uffff\1\130\5\uffff\1\131\41\uffff\1\127",
            "\1\131",
            "\1\3\1\uffff\1\3\3\uffff\1\31\23\uffff\1\107\6\uffff\2\5\16\uffff\1\3\27\uffff\1\5\27\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\146",
            "\1\147",
            "\1\3\1\uffff\1\3\3\uffff\1\31\11\uffff\1\134\11\uffff\1\107\6\uffff\2\5\5\uffff\1\136\10\uffff\1\3\27\uffff\1\5\6\uffff\1\135\20\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\1\uffff\1\3\3\uffff\1\31\23\uffff\1\107\6\uffff\2\5\16\uffff\1\3\27\uffff\1\5\27\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\10\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\30\uffff\3\5",
            "\1\3\1\uffff\1\3\3\uffff\1\31\11\uffff\1\150\11\uffff\1\25\1\uffff\1\3\4\uffff\2\5\5\uffff\1\24\4\uffff\1\3\3\uffff\1\3\27\uffff\1\5\6\uffff\1\23\20\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\5\uffff\1\3\2\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\5\uffff\17\3\4\uffff\3\5",
            "\1\3\1\uffff\1\3\3\uffff\1\1\11\uffff\1\151\4\uffff\1\3\4\uffff\1\25\1\uffff\1\3\4\uffff\2\5\5\uffff\1\24\4\uffff\1\3\3\uffff\1\3\27\uffff\1\5\6\uffff\1\23\20\uffff\1\26\1\uffff\1\3\6\uffff\2\3\5\5\1\4\2\3\5\uffff\1\3\2\uffff\1\2\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\5\uffff\17\3\4\uffff\3\5",
            "\1\152",
            "\1\uffff",
            "\1\3\1\uffff\1\3\3\uffff\1\31\11\uffff\1\153\11\uffff\1\25\1\uffff\1\3\4\uffff\2\5\5\uffff\1\24\4\uffff\1\3\3\uffff\1\3\27\uffff\1\5\6\uffff\1\23\20\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\5\uffff\1\3\2\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\5\uffff\17\3\4\uffff\3\5",
            "\1\154",
            "\1\3\1\uffff\1\3\3\uffff\1\31\11\uffff\1\155\11\uffff\1\25\1\uffff\1\3\4\uffff\2\5\5\uffff\1\24\4\uffff\1\3\3\uffff\1\3\27\uffff\1\5\6\uffff\1\23\20\uffff\1\5\11\uffff\1\3\5\5\1\4\2\3\5\uffff\1\3\2\uffff\1\32\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\1\uffff\2\5\5\uffff\17\3\4\uffff\3\5",
            "\1\uffff"
    };
    static final char[] dfa_153 = DFA.unpackEncodedStringToUnsignedChars(dfa_153s);
    static final char[] dfa_154 = DFA.unpackEncodedStringToUnsignedChars(dfa_154s);
    static final short[][] dfa_155 = unpackEncodedStringArray(dfa_155s);

    class DFA287 extends DFA {

        public DFA287(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 287;
            this.eot = dfa_146;
            this.eof = dfa_146;
            this.min = dfa_153;
            this.max = dfa_154;
            this.accept = dfa_150;
            this.special = dfa_151;
            this.transition = dfa_155;
        }
        public String getDescription() {
            return "()* loopback of 12652:3: ( (lv_declarations_3_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA287_109 = input.LA(1);

                         
                        int index287_109 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred369_InternalSCEst()) ) {s = 5;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index287_109);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA287_105 = input.LA(1);

                         
                        int index287_105 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred369_InternalSCEst()) ) {s = 5;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index287_105);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 287, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_156s = "\141\uffff";
    static final String dfa_157s = "\3\4\2\uffff\3\4\1\7\1\0\7\4\1\24\4\4\1\7\2\4\1\7\4\4\1\7\4\4\1\24\1\62\3\4\1\7\4\4\1\7\2\4\1\7\6\4\1\7\7\4\1\7\1\24\3\4\1\7\12\4\1\7\3\4\1\7\2\4\1\24\1\62\10\4\1\0";
    static final String dfa_158s = "\2\u0080\1\4\2\uffff\1\u0080\1\4\1\10\1\7\1\0\1\4\6\u0080\3\124\1\u0080\1\4\1\10\2\4\1\7\1\124\3\u0080\1\10\4\u0080\1\124\1\62\3\u0080\1\10\2\u0080\2\4\1\7\1\4\1\10\1\7\1\u0080\1\u009e\1\4\1\124\2\4\1\7\1\124\4\u0080\2\4\1\7\1\124\3\u0080\1\10\5\u0080\1\u009e\2\u0080\2\4\1\7\1\124\2\4\1\7\2\4\1\124\1\62\3\u0080\1\u009e\1\4\1\u009e\1\4\1\u009e\1\0";
    static final String dfa_159s = "\3\uffff\1\1\1\2\134\uffff";
    static final String dfa_160s = "\11\uffff\1\1\126\uffff\1\0}>";
    static final String[] dfa_161s = {
            "\1\4\1\uffff\1\4\3\uffff\1\1\52\uffff\1\4\71\uffff\1\3\5\uffff\3\4\10\uffff\1\2",
            "\1\4\1\uffff\1\4\3\uffff\1\1\52\uffff\1\4\71\uffff\1\3\5\uffff\3\4\10\uffff\1\2",
            "\1\5",
            "",
            "",
            "\1\11\1\13\1\4\1\15\1\16\1\14\1\1\11\uffff\1\6\27\uffff\1\10\4\uffff\1\12\3\uffff\1\4\36\uffff\1\7\32\uffff\1\3\5\uffff\3\4\10\uffff\1\2",
            "\1\17",
            "\1\17\2\uffff\1\15\1\16",
            "\1\20",
            "\1\uffff",
            "\1\21",
            "\1\4\1\uffff\1\4\3\uffff\1\1\23\uffff\1\22\26\uffff\1\4\71\uffff\1\3\5\uffff\3\4\10\uffff\1\2",
            "\1\4\1\uffff\1\4\3\uffff\1\24\23\uffff\1\23\26\uffff\1\4\71\uffff\1\3\5\uffff\3\4\10\uffff\1\25",
            "\1\4\1\uffff\1\4\3\uffff\1\24\23\uffff\1\23\26\uffff\1\4\71\uffff\1\3\5\uffff\3\4\10\uffff\1\25",
            "\1\4\1\uffff\1\4\3\uffff\1\24\23\uffff\1\23\26\uffff\1\4\71\uffff\1\3\5\uffff\3\4\10\uffff\1\25",
            "\1\11\1\13\1\4\1\15\1\16\1\14\1\1\11\uffff\1\6\27\uffff\1\10\4\uffff\1\12\3\uffff\1\4\36\uffff\1\7\32\uffff\1\3\5\uffff\3\4\10\uffff\1\2",
            "\1\11\1\13\1\4\1\15\1\16\1\14\1\1\46\uffff\1\12\3\uffff\1\4\36\uffff\1\26\32\uffff\1\3\5\uffff\3\4\10\uffff\1\2",
            "\1\27\27\uffff\1\31\5\uffff\1\32\41\uffff\1\30",
            "\1\34\1\33\1\uffff\1\37\1\40\1\35\112\uffff\1\36",
            "\1\34\1\41\1\uffff\1\37\1\40\1\35\112\uffff\1\36",
            "\1\4\1\uffff\1\4\3\uffff\1\24\52\uffff\1\4\71\uffff\1\3\5\uffff\3\4\10\uffff\1\25",
            "\1\42",
            "\1\15\1\16",
            "\1\43",
            "\1\43",
            "\1\44",
            "\1\46\1\45\1\uffff\1\51\1\52\1\47\112\uffff\1\50",
            "\1\4\1\uffff\1\4\3\uffff\1\1\23\uffff\1\22\26\uffff\1\4\71\uffff\1\3\5\uffff\3\4\10\uffff\1\2",
            "\1\4\1\uffff\1\4\3\uffff\1\24\11\uffff\1\53\11\uffff\1\23\15\uffff\1\55\10\uffff\1\4\36\uffff\1\54\32\uffff\1\3\5\uffff\3\4\10\uffff\1\25",
            "\1\4\1\uffff\1\4\3\uffff\1\24\23\uffff\1\23\26\uffff\1\4\71\uffff\1\3\5\uffff\3\4\10\uffff\1\25",
            "\1\37\1\40",
            "\1\4\1\uffff\1\4\3\uffff\1\24\23\uffff\1\23\26\uffff\1\4\71\uffff\1\3\5\uffff\3\4\10\uffff\1\25",
            "\1\4\1\uffff\1\4\3\uffff\1\24\23\uffff\1\23\26\uffff\1\4\71\uffff\1\3\5\uffff\3\4\10\uffff\1\25",
            "\1\4\1\uffff\1\4\3\uffff\1\24\23\uffff\1\23\26\uffff\1\4\71\uffff\1\3\5\uffff\3\4\10\uffff\1\25",
            "\1\62\1\61\1\4\1\15\1\16\1\14\1\24\11\uffff\1\56\27\uffff\1\60\4\uffff\1\63\3\uffff\1\4\36\uffff\1\57\32\uffff\1\3\5\uffff\3\4\10\uffff\1\25",
            "\1\27\27\uffff\1\31\5\uffff\1\32\41\uffff\1\30",
            "\1\32",
            "\1\4\1\uffff\1\4\3\uffff\1\1\23\uffff\1\64\26\uffff\1\4\71\uffff\1\3\5\uffff\3\4\10\uffff\1\2",
            "\1\4\1\uffff\1\4\3\uffff\1\24\11\uffff\1\65\11\uffff\1\70\15\uffff\1\67\10\uffff\1\4\36\uffff\1\66\32\uffff\1\3\5\uffff\3\4\10\uffff\1\25",
            "\1\4\1\uffff\1\4\3\uffff\1\24\23\uffff\1\70\26\uffff\1\4\71\uffff\1\3\5\uffff\3\4\10\uffff\1\25",
            "\1\51\1\52",
            "\1\4\1\uffff\1\4\3\uffff\1\24\23\uffff\1\70\26\uffff\1\4\71\uffff\1\3\5\uffff\3\4\10\uffff\1\25",
            "\1\4\1\uffff\1\4\3\uffff\1\24\23\uffff\1\70\26\uffff\1\4\71\uffff\1\3\5\uffff\3\4\10\uffff\1\25",
            "\1\71",
            "\1\71",
            "\1\72",
            "\1\73",
            "\1\73\2\uffff\1\15\1\16",
            "\1\74",
            "\1\4\1\uffff\1\4\3\uffff\1\24\23\uffff\1\23\26\uffff\1\4\71\uffff\1\3\5\uffff\3\4\10\uffff\1\25",
            "\1\4\1\uffff\1\4\3\uffff\1\24\11\uffff\1\75\11\uffff\1\23\1\uffff\1\4\13\uffff\1\77\4\uffff\1\4\3\uffff\1\4\36\uffff\1\76\32\uffff\1\3\5\uffff\3\4\5\uffff\1\4\2\uffff\1\25\17\uffff\17\4",
            "\1\100",
            "\1\102\1\101\1\uffff\1\105\1\106\1\103\112\uffff\1\104",
            "\1\107",
            "\1\107",
            "\1\110",
            "\1\102\1\111\1\uffff\1\105\1\106\1\103\112\uffff\1\104",
            "\1\4\1\uffff\1\4\3\uffff\1\24\11\uffff\1\53\11\uffff\1\23\15\uffff\1\55\10\uffff\1\4\36\uffff\1\54\32\uffff\1\3\5\uffff\3\4\10\uffff\1\25",
            "\1\4\1\uffff\1\4\3\uffff\1\24\23\uffff\1\23\26\uffff\1\4\71\uffff\1\3\5\uffff\3\4\10\uffff\1\25",
            "\1\62\1\61\1\4\1\15\1\16\1\14\1\24\11\uffff\1\56\27\uffff\1\60\4\uffff\1\63\3\uffff\1\4\36\uffff\1\57\32\uffff\1\3\5\uffff\3\4\10\uffff\1\25",
            "\1\62\1\61\1\4\1\15\1\16\1\14\1\24\46\uffff\1\63\3\uffff\1\4\36\uffff\1\26\32\uffff\1\3\5\uffff\3\4\10\uffff\1\25",
            "\1\112",
            "\1\113",
            "\1\114",
            "\1\115\27\uffff\1\117\5\uffff\1\120\41\uffff\1\116",
            "\1\4\1\uffff\1\4\3\uffff\1\1\23\uffff\1\64\26\uffff\1\4\71\uffff\1\3\5\uffff\3\4\10\uffff\1\2",
            "\1\4\1\uffff\1\4\3\uffff\1\24\11\uffff\1\121\11\uffff\1\70\15\uffff\1\123\10\uffff\1\4\36\uffff\1\122\32\uffff\1\3\5\uffff\3\4\10\uffff\1\25",
            "\1\4\1\uffff\1\4\3\uffff\1\24\23\uffff\1\70\26\uffff\1\4\71\uffff\1\3\5\uffff\3\4\10\uffff\1\25",
            "\1\105\1\106",
            "\1\4\1\uffff\1\4\3\uffff\1\24\23\uffff\1\70\26\uffff\1\4\71\uffff\1\3\5\uffff\3\4\10\uffff\1\25",
            "\1\4\1\uffff\1\4\3\uffff\1\24\23\uffff\1\70\26\uffff\1\4\71\uffff\1\3\5\uffff\3\4\10\uffff\1\25",
            "\1\4\1\uffff\1\4\3\uffff\1\24\11\uffff\1\65\11\uffff\1\70\15\uffff\1\67\10\uffff\1\4\36\uffff\1\66\32\uffff\1\3\5\uffff\3\4\10\uffff\1\25",
            "\1\4\1\uffff\1\4\3\uffff\1\24\23\uffff\1\70\26\uffff\1\4\71\uffff\1\3\5\uffff\3\4\10\uffff\1\25",
            "\1\4\1\uffff\1\4\3\uffff\1\24\23\uffff\1\70\26\uffff\1\4\71\uffff\1\3\5\uffff\3\4\10\uffff\1\25",
            "\1\4\1\uffff\1\4\3\uffff\1\24\11\uffff\1\124\11\uffff\1\23\1\uffff\1\4\13\uffff\1\77\4\uffff\1\4\3\uffff\1\4\36\uffff\1\76\32\uffff\1\3\5\uffff\3\4\5\uffff\1\4\2\uffff\1\25\17\uffff\17\4",
            "\1\4\1\uffff\1\4\3\uffff\1\24\11\uffff\1\125\11\uffff\1\23\15\uffff\1\77\10\uffff\1\4\36\uffff\1\76\32\uffff\1\3\5\uffff\3\4\10\uffff\1\25",
            "\1\4\1\uffff\1\4\3\uffff\1\24\23\uffff\1\23\26\uffff\1\4\71\uffff\1\3\5\uffff\3\4\10\uffff\1\25",
            "\1\126",
            "\1\126",
            "\1\127",
            "\1\46\1\130\1\uffff\1\51\1\52\1\47\112\uffff\1\50",
            "\1\131",
            "\1\131",
            "\1\132",
            "\1\133",
            "\1\113",
            "\1\115\27\uffff\1\117\5\uffff\1\120\41\uffff\1\116",
            "\1\120",
            "\1\4\1\uffff\1\4\3\uffff\1\24\23\uffff\1\70\26\uffff\1\4\71\uffff\1\3\5\uffff\3\4\10\uffff\1\25",
            "\1\4\1\uffff\1\4\3\uffff\1\24\11\uffff\1\121\11\uffff\1\70\15\uffff\1\123\10\uffff\1\4\36\uffff\1\122\32\uffff\1\3\5\uffff\3\4\10\uffff\1\25",
            "\1\4\1\uffff\1\4\3\uffff\1\24\23\uffff\1\70\26\uffff\1\4\71\uffff\1\3\5\uffff\3\4\10\uffff\1\25",
            "\1\4\1\uffff\1\4\3\uffff\1\24\11\uffff\1\134\11\uffff\1\23\1\uffff\1\4\13\uffff\1\77\4\uffff\1\4\3\uffff\1\4\36\uffff\1\76\32\uffff\1\3\5\uffff\3\4\5\uffff\1\4\2\uffff\1\25\17\uffff\17\4",
            "\1\135",
            "\1\4\1\uffff\1\4\3\uffff\1\24\11\uffff\1\136\11\uffff\1\23\1\uffff\1\4\13\uffff\1\77\4\uffff\1\4\3\uffff\1\4\36\uffff\1\76\32\uffff\1\3\5\uffff\3\4\5\uffff\1\4\2\uffff\1\25\17\uffff\17\4",
            "\1\137",
            "\1\4\1\uffff\1\4\3\uffff\1\24\11\uffff\1\140\11\uffff\1\23\1\uffff\1\4\13\uffff\1\77\4\uffff\1\4\3\uffff\1\4\36\uffff\1\76\32\uffff\1\3\5\uffff\3\4\5\uffff\1\4\2\uffff\1\25\17\uffff\17\4",
            "\1\uffff"
    };

    static final short[] dfa_156 = DFA.unpackEncodedString(dfa_156s);
    static final char[] dfa_157 = DFA.unpackEncodedStringToUnsignedChars(dfa_157s);
    static final char[] dfa_158 = DFA.unpackEncodedStringToUnsignedChars(dfa_158s);
    static final short[] dfa_159 = DFA.unpackEncodedString(dfa_159s);
    static final short[] dfa_160 = DFA.unpackEncodedString(dfa_160s);
    static final short[][] dfa_161 = unpackEncodedStringArray(dfa_161s);

    class DFA290 extends DFA {

        public DFA290(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 290;
            this.eot = dfa_156;
            this.eof = dfa_156;
            this.min = dfa_157;
            this.max = dfa_158;
            this.accept = dfa_159;
            this.special = dfa_160;
            this.transition = dfa_161;
        }
        public String getDescription() {
            return "12737:2: ( ( (lv_expression_0_0= ruleAnnotatedExpression ) ) | ( (lv_effect_1_0= ruleEffect ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA290_96 = input.LA(1);

                         
                        int index290_96 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred372_InternalSCEst()) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index290_96);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA290_9 = input.LA(1);

                         
                        int index290_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred372_InternalSCEst()) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index290_9);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 290, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_162s = "\111\uffff";
    static final String dfa_163s = "\2\12\1\4\2\45\1\46\3\115\4\uffff\3\4\1\7\1\4\5\12\2\4\1\24\3\4\2\7\2\4\1\7\1\4\3\12\1\7\4\12\1\24\1\62\3\12\1\7\2\12\2\4\1\7\3\4\1\7\5\12\1\7\4\12\2\4\1\7\2\12";
    static final String dfa_164s = "\2\u00a5\1\4\6\u00a5\4\uffff\1\u00a5\1\4\1\10\1\7\1\4\7\u00a5\2\124\2\4\1\7\1\10\2\4\1\7\1\124\3\u00a5\1\10\4\u00a5\1\124\1\62\3\u00a5\1\10\2\u00a5\2\4\1\7\1\124\2\4\1\7\5\u00a5\1\10\4\u00a5\2\4\1\7\2\u00a5";
    static final String dfa_165s = "\11\uffff\1\1\1\2\1\3\1\4\74\uffff";
    static final String dfa_166s = "\111\uffff}>";
    static final String[] dfa_167s = {
            "\1\1\32\uffff\1\5\1\6\46\uffff\1\11\27\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\1\32\uffff\1\5\1\6\46\uffff\1\11\27\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\15",
            "\1\5\1\6\46\uffff\1\11\27\uffff\1\13\13\uffff\1\4\1\7\1\10\2\12\15\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\5\1\6\46\uffff\1\11\44\uffff\1\7\1\10\17\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\6\46\uffff\1\11\44\uffff\1\7\1\10\17\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\11\44\uffff\1\7\1\10\17\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\11\45\uffff\1\10\17\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\11\65\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "",
            "",
            "",
            "",
            "\1\23\1\22\1\uffff\1\25\1\26\1\24\1\1\11\uffff\1\16\20\uffff\1\5\1\6\5\uffff\1\20\4\uffff\1\21\33\uffff\1\11\6\uffff\1\17\20\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\27",
            "\1\27\2\uffff\1\25\1\26",
            "\1\30",
            "\1\31",
            "\1\1\23\uffff\1\32\6\uffff\1\5\1\6\46\uffff\1\11\27\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\1\11\uffff\1\33\11\uffff\1\32\6\uffff\1\5\1\6\5\uffff\1\35\40\uffff\1\11\6\uffff\1\34\20\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\1\23\uffff\1\32\6\uffff\1\5\1\6\46\uffff\1\11\27\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\1\23\uffff\1\32\6\uffff\1\5\1\6\46\uffff\1\11\27\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\1\23\uffff\1\32\6\uffff\1\5\1\6\46\uffff\1\11\27\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\23\1\22\1\uffff\1\25\1\26\1\24\1\1\11\uffff\1\16\20\uffff\1\5\1\6\5\uffff\1\20\4\uffff\1\21\33\uffff\1\11\6\uffff\1\17\20\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\23\1\22\1\uffff\1\25\1\26\1\24\1\1\32\uffff\1\5\1\6\12\uffff\1\21\33\uffff\1\11\6\uffff\1\36\20\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\37\27\uffff\1\41\5\uffff\1\42\41\uffff\1\40",
            "\1\44\1\43\1\uffff\1\47\1\50\1\45\112\uffff\1\46",
            "\1\51",
            "\1\51",
            "\1\52",
            "\1\25\1\26",
            "\1\53",
            "\1\53",
            "\1\54",
            "\1\56\1\55\1\uffff\1\61\1\62\1\57\112\uffff\1\60",
            "\1\1\23\uffff\1\32\6\uffff\1\5\1\6\46\uffff\1\11\27\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\1\11\uffff\1\63\11\uffff\1\32\6\uffff\1\5\1\6\5\uffff\1\65\40\uffff\1\11\6\uffff\1\64\20\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\1\23\uffff\1\32\6\uffff\1\5\1\6\46\uffff\1\11\27\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\47\1\50",
            "\1\1\23\uffff\1\32\6\uffff\1\5\1\6\46\uffff\1\11\27\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\1\23\uffff\1\32\6\uffff\1\5\1\6\46\uffff\1\11\27\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\1\11\uffff\1\33\11\uffff\1\32\6\uffff\1\5\1\6\5\uffff\1\35\40\uffff\1\11\6\uffff\1\34\20\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\1\23\uffff\1\32\6\uffff\1\5\1\6\46\uffff\1\11\27\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\37\27\uffff\1\41\5\uffff\1\42\41\uffff\1\40",
            "\1\42",
            "\1\1\23\uffff\1\66\6\uffff\1\5\1\6\46\uffff\1\11\27\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\1\11\uffff\1\67\11\uffff\1\66\6\uffff\1\5\1\6\5\uffff\1\71\40\uffff\1\11\6\uffff\1\70\20\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\1\23\uffff\1\66\6\uffff\1\5\1\6\46\uffff\1\11\27\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\61\1\62",
            "\1\1\23\uffff\1\66\6\uffff\1\5\1\6\46\uffff\1\11\27\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\1\23\uffff\1\66\6\uffff\1\5\1\6\46\uffff\1\11\27\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\72",
            "\1\72",
            "\1\73",
            "\1\75\1\74\1\uffff\1\100\1\101\1\76\112\uffff\1\77",
            "\1\102",
            "\1\102",
            "\1\103",
            "\1\1\11\uffff\1\63\11\uffff\1\32\6\uffff\1\5\1\6\5\uffff\1\65\40\uffff\1\11\6\uffff\1\64\20\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\1\23\uffff\1\32\6\uffff\1\5\1\6\46\uffff\1\11\27\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\1\23\uffff\1\66\6\uffff\1\5\1\6\46\uffff\1\11\27\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\1\11\uffff\1\104\11\uffff\1\66\6\uffff\1\5\1\6\5\uffff\1\106\40\uffff\1\11\6\uffff\1\105\20\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\1\23\uffff\1\66\6\uffff\1\5\1\6\46\uffff\1\11\27\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\100\1\101",
            "\1\1\23\uffff\1\66\6\uffff\1\5\1\6\46\uffff\1\11\27\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\1\23\uffff\1\66\6\uffff\1\5\1\6\46\uffff\1\11\27\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\1\11\uffff\1\67\11\uffff\1\66\6\uffff\1\5\1\6\5\uffff\1\71\40\uffff\1\11\6\uffff\1\70\20\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\1\23\uffff\1\66\6\uffff\1\5\1\6\46\uffff\1\11\27\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\107",
            "\1\107",
            "\1\110",
            "\1\1\11\uffff\1\104\11\uffff\1\66\6\uffff\1\5\1\6\5\uffff\1\106\40\uffff\1\11\6\uffff\1\105\20\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\1\23\uffff\1\66\6\uffff\1\5\1\6\46\uffff\1\11\27\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14"
    };

    static final short[] dfa_162 = DFA.unpackEncodedString(dfa_162s);
    static final char[] dfa_163 = DFA.unpackEncodedStringToUnsignedChars(dfa_163s);
    static final char[] dfa_164 = DFA.unpackEncodedStringToUnsignedChars(dfa_164s);
    static final short[] dfa_165 = DFA.unpackEncodedString(dfa_165s);
    static final short[] dfa_166 = DFA.unpackEncodedString(dfa_166s);
    static final short[][] dfa_167 = unpackEncodedStringArray(dfa_167s);

    class DFA292 extends DFA {

        public DFA292(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 292;
            this.eot = dfa_162;
            this.eof = dfa_162;
            this.min = dfa_163;
            this.max = dfa_164;
            this.accept = dfa_165;
            this.special = dfa_166;
            this.transition = dfa_167;
        }
        public String getDescription() {
            return "12856:2: (this_VariableDeclaration_0= ruleVariableDeclaration | this_ReferenceDeclaration_1= ruleReferenceDeclaration | this_ScheduleDeclaration_2= ruleScheduleDeclaration | this_StructDeclaration_3= ruleStructDeclaration )";
        }
    }
    static final String dfa_168s = "\2\12\1\4\2\45\1\46\3\115\4\uffff\3\4\1\7\5\12\6\4\1\7\1\24\1\7\3\12\1\7\4\12\2\4\1\7\3\4\1\7\1\24\1\62\3\12\1\7\4\12\3\4\1\7\3\12\1\7\4\12\2\4\1\7\2\12";
    static final String dfa_169s = "\2\u00a5\1\4\6\u00a5\4\uffff\1\u00a5\1\4\1\10\1\7\5\u00a5\1\4\2\u00a5\1\124\2\4\1\7\1\124\1\10\3\u00a5\1\10\4\u00a5\2\4\1\7\1\124\2\4\1\7\1\124\1\62\3\u00a5\1\10\4\u00a5\1\124\2\4\1\7\3\u00a5\1\10\4\u00a5\2\4\1\7\2\u00a5";
    static final String[] dfa_170s = {
            "\1\1\32\uffff\1\5\1\6\46\uffff\1\11\27\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\1\32\uffff\1\5\1\6\46\uffff\1\11\27\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\15",
            "\1\5\1\6\46\uffff\1\11\27\uffff\1\13\13\uffff\1\4\1\7\1\10\2\12\15\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\5\1\6\46\uffff\1\11\44\uffff\1\7\1\10\17\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\6\46\uffff\1\11\44\uffff\1\7\1\10\17\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\11\44\uffff\1\7\1\10\17\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\11\45\uffff\1\10\17\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\11\65\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "",
            "",
            "",
            "",
            "\1\22\1\21\1\uffff\1\24\1\25\1\23\1\1\11\uffff\1\16\20\uffff\1\5\1\6\5\uffff\1\20\4\uffff\1\26\33\uffff\1\11\6\uffff\1\17\20\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\27",
            "\1\27\2\uffff\1\24\1\25",
            "\1\30",
            "\1\1\23\uffff\1\31\6\uffff\1\5\1\6\46\uffff\1\11\27\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\1\11\uffff\1\32\11\uffff\1\31\6\uffff\1\5\1\6\5\uffff\1\34\40\uffff\1\11\6\uffff\1\33\20\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\1\23\uffff\1\31\6\uffff\1\5\1\6\46\uffff\1\11\27\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\1\23\uffff\1\31\6\uffff\1\5\1\6\46\uffff\1\11\27\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\1\23\uffff\1\31\6\uffff\1\5\1\6\46\uffff\1\11\27\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\35",
            "\1\22\1\21\1\uffff\1\24\1\25\1\23\1\1\11\uffff\1\16\20\uffff\1\5\1\6\5\uffff\1\20\4\uffff\1\26\33\uffff\1\11\6\uffff\1\17\20\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\22\1\21\1\uffff\1\24\1\25\1\23\1\1\32\uffff\1\5\1\6\12\uffff\1\26\33\uffff\1\11\6\uffff\1\36\20\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\40\1\37\1\uffff\1\43\1\44\1\41\112\uffff\1\42",
            "\1\45",
            "\1\45",
            "\1\46",
            "\1\47\27\uffff\1\51\5\uffff\1\52\41\uffff\1\50",
            "\1\24\1\25",
            "\1\1\23\uffff\1\31\6\uffff\1\5\1\6\46\uffff\1\11\27\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\1\11\uffff\1\53\11\uffff\1\31\6\uffff\1\5\1\6\5\uffff\1\55\40\uffff\1\11\6\uffff\1\54\20\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\1\23\uffff\1\31\6\uffff\1\5\1\6\46\uffff\1\11\27\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\43\1\44",
            "\1\1\23\uffff\1\31\6\uffff\1\5\1\6\46\uffff\1\11\27\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\1\23\uffff\1\31\6\uffff\1\5\1\6\46\uffff\1\11\27\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\1\11\uffff\1\32\11\uffff\1\31\6\uffff\1\5\1\6\5\uffff\1\34\40\uffff\1\11\6\uffff\1\33\20\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\1\23\uffff\1\31\6\uffff\1\5\1\6\46\uffff\1\11\27\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\56",
            "\1\56",
            "\1\57",
            "\1\61\1\60\1\uffff\1\64\1\65\1\62\112\uffff\1\63",
            "\1\66",
            "\1\66",
            "\1\67",
            "\1\47\27\uffff\1\51\5\uffff\1\52\41\uffff\1\50",
            "\1\52",
            "\1\1\23\uffff\1\70\6\uffff\1\5\1\6\46\uffff\1\11\27\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\1\11\uffff\1\71\11\uffff\1\70\6\uffff\1\5\1\6\5\uffff\1\73\40\uffff\1\11\6\uffff\1\72\20\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\1\23\uffff\1\70\6\uffff\1\5\1\6\46\uffff\1\11\27\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\64\1\65",
            "\1\1\23\uffff\1\70\6\uffff\1\5\1\6\46\uffff\1\11\27\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\1\23\uffff\1\70\6\uffff\1\5\1\6\46\uffff\1\11\27\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\1\11\uffff\1\53\11\uffff\1\31\6\uffff\1\5\1\6\5\uffff\1\55\40\uffff\1\11\6\uffff\1\54\20\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\1\23\uffff\1\31\6\uffff\1\5\1\6\46\uffff\1\11\27\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\75\1\74\1\uffff\1\100\1\101\1\76\112\uffff\1\77",
            "\1\102",
            "\1\102",
            "\1\103",
            "\1\1\23\uffff\1\70\6\uffff\1\5\1\6\46\uffff\1\11\27\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\1\11\uffff\1\104\11\uffff\1\70\6\uffff\1\5\1\6\5\uffff\1\106\40\uffff\1\11\6\uffff\1\105\20\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\1\23\uffff\1\70\6\uffff\1\5\1\6\46\uffff\1\11\27\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\100\1\101",
            "\1\1\23\uffff\1\70\6\uffff\1\5\1\6\46\uffff\1\11\27\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\1\23\uffff\1\70\6\uffff\1\5\1\6\46\uffff\1\11\27\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\1\11\uffff\1\71\11\uffff\1\70\6\uffff\1\5\1\6\5\uffff\1\73\40\uffff\1\11\6\uffff\1\72\20\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\1\23\uffff\1\70\6\uffff\1\5\1\6\46\uffff\1\11\27\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\107",
            "\1\107",
            "\1\110",
            "\1\1\11\uffff\1\104\11\uffff\1\70\6\uffff\1\5\1\6\5\uffff\1\106\40\uffff\1\11\6\uffff\1\105\20\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14",
            "\1\1\23\uffff\1\70\6\uffff\1\5\1\6\46\uffff\1\11\27\uffff\1\13\12\uffff\1\3\1\4\1\7\1\10\2\12\12\uffff\1\2\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\2\11\30\uffff\2\11\1\14"
    };
    static final char[] dfa_168 = DFA.unpackEncodedStringToUnsignedChars(dfa_168s);
    static final char[] dfa_169 = DFA.unpackEncodedStringToUnsignedChars(dfa_169s);
    static final short[][] dfa_170 = unpackEncodedStringArray(dfa_170s);

    class DFA293 extends DFA {

        public DFA293(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 293;
            this.eot = dfa_162;
            this.eof = dfa_162;
            this.min = dfa_168;
            this.max = dfa_169;
            this.accept = dfa_165;
            this.special = dfa_166;
            this.transition = dfa_170;
        }
        public String getDescription() {
            return "12922:2: (this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon | this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon | this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon | this_StructDeclarationWOSemicolon_3= ruleStructDeclarationWOSemicolon )";
        }
    }
    static final String dfa_171s = "\32\uffff";
    static final String dfa_172s = "\1\4\31\uffff";
    static final String dfa_173s = "\3\4\2\uffff\3\4\1\7\1\4\1\0\3\4\1\24\3\4\1\7\2\4\1\24\1\62\3\4";
    static final String dfa_174s = "\2\u00a5\1\4\2\uffff\1\u00a5\1\4\1\10\1\7\1\4\1\0\3\u00a5\2\124\2\4\1\7\1\124\1\u00a5\1\124\1\62\1\u00a5\1\124\1\u00a5";
    static final String dfa_175s = "\3\uffff\1\1\1\2\25\uffff";
    static final String dfa_176s = "\12\uffff\1\0\17\uffff}>";
    static final String[] dfa_177s = {
            "\1\3\5\uffff\1\1\1\4\31\uffff\2\4\46\uffff\1\4\27\uffff\1\4\1\uffff\1\4\10\uffff\6\4\12\uffff\1\2\2\uffff\1\4\1\uffff\1\4\1\uffff\1\4\1\uffff\2\4\30\uffff\3\4",
            "\1\3\5\uffff\1\1\32\uffff\2\4\46\uffff\1\4\27\uffff\1\4\12\uffff\6\4\12\uffff\1\2\2\uffff\1\4\1\uffff\1\4\1\uffff\1\4\1\uffff\2\4\30\uffff\3\4",
            "\1\5",
            "",
            "",
            "\1\12\1\13\1\uffff\3\4\1\1\11\uffff\1\6\20\uffff\2\4\5\uffff\1\10\4\uffff\1\11\33\uffff\1\4\6\uffff\1\7\20\uffff\1\4\12\uffff\6\4\12\uffff\1\2\2\uffff\1\4\1\uffff\1\4\1\uffff\1\4\1\uffff\2\4\30\uffff\3\4",
            "\1\14",
            "\1\14\2\uffff\2\4",
            "\1\15",
            "\1\16",
            "\1\uffff",
            "\1\3\5\uffff\1\1\23\uffff\1\17\6\uffff\2\4\46\uffff\1\4\27\uffff\1\4\12\uffff\6\4\12\uffff\1\2\2\uffff\1\4\1\uffff\1\4\1\uffff\1\4\1\uffff\2\4\30\uffff\3\4",
            "\1\12\1\13\1\uffff\3\4\1\1\11\uffff\1\6\20\uffff\2\4\5\uffff\1\10\4\uffff\1\11\33\uffff\1\4\6\uffff\1\7\20\uffff\1\4\12\uffff\6\4\12\uffff\1\2\2\uffff\1\4\1\uffff\1\4\1\uffff\1\4\1\uffff\2\4\30\uffff\3\4",
            "\1\12\1\13\1\uffff\3\4\1\1\32\uffff\2\4\12\uffff\1\11\33\uffff\1\4\6\uffff\1\4\20\uffff\1\4\12\uffff\6\4\12\uffff\1\2\2\uffff\1\4\1\uffff\1\4\1\uffff\1\4\1\uffff\2\4\30\uffff\3\4",
            "\1\20\27\uffff\1\22\5\uffff\1\23\41\uffff\1\21",
            "\1\4\1\24\1\uffff\3\4\112\uffff\1\4",
            "\1\25",
            "\1\25",
            "\1\26",
            "\1\4\1\27\1\uffff\3\4\112\uffff\1\4",
            "\1\3\5\uffff\1\1\23\uffff\1\17\6\uffff\2\4\46\uffff\1\4\27\uffff\1\4\12\uffff\6\4\12\uffff\1\2\2\uffff\1\4\1\uffff\1\4\1\uffff\1\4\1\uffff\2\4\30\uffff\3\4",
            "\1\20\27\uffff\1\22\5\uffff\1\23\41\uffff\1\21",
            "\1\23",
            "\1\3\5\uffff\1\1\23\uffff\1\30\6\uffff\2\4\46\uffff\1\4\27\uffff\1\4\12\uffff\6\4\12\uffff\1\2\2\uffff\1\4\1\uffff\1\4\1\uffff\1\4\1\uffff\2\4\30\uffff\3\4",
            "\1\4\1\31\1\uffff\3\4\112\uffff\1\4",
            "\1\3\5\uffff\1\1\23\uffff\1\30\6\uffff\2\4\46\uffff\1\4\27\uffff\1\4\12\uffff\6\4\12\uffff\1\2\2\uffff\1\4\1\uffff\1\4\1\uffff\1\4\1\uffff\2\4\30\uffff\3\4"
    };

    static final short[] dfa_171 = DFA.unpackEncodedString(dfa_171s);
    static final short[] dfa_172 = DFA.unpackEncodedString(dfa_172s);
    static final char[] dfa_173 = DFA.unpackEncodedStringToUnsignedChars(dfa_173s);
    static final char[] dfa_174 = DFA.unpackEncodedStringToUnsignedChars(dfa_174s);
    static final short[] dfa_175 = DFA.unpackEncodedString(dfa_175s);
    static final short[] dfa_176 = DFA.unpackEncodedString(dfa_176s);
    static final short[][] dfa_177 = unpackEncodedStringArray(dfa_177s);

    class DFA338 extends DFA {

        public DFA338(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 338;
            this.eot = dfa_171;
            this.eof = dfa_172;
            this.min = dfa_173;
            this.max = dfa_174;
            this.accept = dfa_175;
            this.special = dfa_176;
            this.transition = dfa_177;
        }
        public String getDescription() {
            return "13989:3: ( ( (lv_valuedObjects_13_0= ruleValuedObject ) ) (otherlv_14= ',' ( (lv_valuedObjects_15_0= ruleValuedObject ) ) )* )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA338_10 = input.LA(1);

                         
                        int index338_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred426_InternalSCEst()) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index338_10);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 338, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_178s = "\1\4\3\0\10\uffff";
    static final String dfa_179s = "\1\u0080\3\0\10\uffff";
    static final String dfa_180s = "\4\uffff\1\4\1\5\1\6\1\7\1\10\1\1\1\2\1\3";
    static final String dfa_181s = "\1\uffff\1\0\1\1\1\2\10\uffff}>";
    static final String[] dfa_182s = {
            "\1\3\1\uffff\1\4\3\uffff\1\1\52\uffff\1\5\77\uffff\1\6\1\7\1\10\10\uffff\1\2",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_178 = DFA.unpackEncodedStringToUnsignedChars(dfa_178s);
    static final char[] dfa_179 = DFA.unpackEncodedStringToUnsignedChars(dfa_179s);
    static final short[] dfa_180 = DFA.unpackEncodedString(dfa_180s);
    static final short[] dfa_181 = DFA.unpackEncodedString(dfa_181s);
    static final short[][] dfa_182 = unpackEncodedStringArray(dfa_182s);

    class DFA374 extends DFA {

        public DFA374(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 374;
            this.eot = dfa_32;
            this.eof = dfa_32;
            this.min = dfa_178;
            this.max = dfa_179;
            this.accept = dfa_180;
            this.special = dfa_181;
            this.transition = dfa_182;
        }
        public String getDescription() {
            return "15136:2: (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | this_Emission_2= ruleEmission | this_HostcodeEffect_3= ruleHostcodeEffect | this_ReferenceCallEffect_4= ruleReferenceCallEffect | this_FunctionCallEffect_5= ruleFunctionCallEffect | this_PrintCallEffect_6= rulePrintCallEffect | this_RandomizeCallEffect_7= ruleRandomizeCallEffect )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA374_1 = input.LA(1);

                         
                        int index374_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred462_InternalSCEst()) ) {s = 9;}

                        else if ( (synpred463_InternalSCEst()) ) {s = 10;}

                        else if ( (synpred464_InternalSCEst()) ) {s = 11;}

                        else if ( (synpred465_InternalSCEst()) ) {s = 4;}

                        else if ( (synpred466_InternalSCEst()) ) {s = 5;}

                        else if ( (synpred467_InternalSCEst()) ) {s = 6;}

                        else if ( (synpred468_InternalSCEst()) ) {s = 7;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index374_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA374_2 = input.LA(1);

                         
                        int index374_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred462_InternalSCEst()) ) {s = 9;}

                        else if ( (synpred463_InternalSCEst()) ) {s = 10;}

                        else if ( (synpred464_InternalSCEst()) ) {s = 11;}

                        else if ( (synpred465_InternalSCEst()) ) {s = 4;}

                        else if ( (synpred466_InternalSCEst()) ) {s = 5;}

                        else if ( (synpred467_InternalSCEst()) ) {s = 6;}

                        else if ( (synpred468_InternalSCEst()) ) {s = 7;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index374_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA374_3 = input.LA(1);

                         
                        int index374_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred462_InternalSCEst()) ) {s = 9;}

                        else if ( (synpred463_InternalSCEst()) ) {s = 10;}

                        else if ( (synpred464_InternalSCEst()) ) {s = 11;}

                         
                        input.seek(index374_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 374, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_183s = {
            "\1\2\1\uffff\1\1\3\uffff\1\1\52\uffff\1\1\61\uffff\1\1\6\uffff\2\1\5\uffff\3\1\10\uffff\1\1",
            "",
            "\1\1\1\uffff\1\1\1\4\2\uffff\1\1\11\uffff\1\1\4\uffff\1\1\6\uffff\1\1\20\uffff\1\1\3\uffff\1\1\57\uffff\1\1\1\uffff\1\1\6\uffff\2\1\5\uffff\3\1\5\uffff\1\3\2\uffff\1\1\17\uffff\17\1",
            "\1\1\1\uffff\1\1\1\4\2\uffff\1\1\11\uffff\1\1\4\uffff\1\1\6\uffff\1\1\20\uffff\1\1\3\uffff\1\1\57\uffff\1\1\1\uffff\1\1\6\uffff\2\1\5\uffff\3\1\5\uffff\1\3\2\uffff\1\1\17\uffff\17\1",
            ""
    };
    static final short[][] dfa_183 = unpackEncodedStringArray(dfa_183s);

    class DFA377 extends DFA {

        public DFA377(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 377;
            this.eot = dfa_115;
            this.eof = dfa_116;
            this.min = dfa_117;
            this.max = dfa_118;
            this.accept = dfa_119;
            this.special = dfa_120;
            this.transition = dfa_183;
        }
        public String getDescription() {
            return "()+ loopback of 15323:4: ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+";
        }
    }

    class DFA380 extends DFA {

        public DFA380(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 380;
            this.eot = dfa_115;
            this.eof = dfa_116;
            this.min = dfa_117;
            this.max = dfa_118;
            this.accept = dfa_119;
            this.special = dfa_120;
            this.transition = dfa_183;
        }
        public String getDescription() {
            return "()+ loopback of 15424:4: ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+";
        }
    }
    static final String dfa_184s = "\1\4\16\0\2\uffff";
    static final String dfa_185s = "\1\u0082\16\0\2\uffff";
    static final String dfa_186s = "\17\uffff\1\1\1\2";
    static final String dfa_187s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\uffff}>";
    static final String[] dfa_188s = {
            "\1\4\1\14\1\13\1\1\1\2\1\6\1\11\16\uffff\1\3\107\uffff\1\5\1\16\22\uffff\1\15\12\uffff\1\12\1\7\1\10",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };
    static final char[] dfa_184 = DFA.unpackEncodedStringToUnsignedChars(dfa_184s);
    static final char[] dfa_185 = DFA.unpackEncodedStringToUnsignedChars(dfa_185s);
    static final short[] dfa_186 = DFA.unpackEncodedString(dfa_186s);
    static final short[] dfa_187 = DFA.unpackEncodedString(dfa_187s);
    static final short[][] dfa_188 = unpackEncodedStringArray(dfa_188s);

    class DFA409 extends DFA {

        public DFA409(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 409;
            this.eot = dfa_102;
            this.eof = dfa_102;
            this.min = dfa_184;
            this.max = dfa_185;
            this.accept = dfa_186;
            this.special = dfa_187;
            this.transition = dfa_188;
        }
        public String getDescription() {
            return "16830:2: ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleFBYOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) | this_AtomicValuedExpression_4= ruleAtomicValuedExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA409_1 = input.LA(1);

                         
                        int index409_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred503_InternalSCEst()) ) {s = 15;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index409_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA409_2 = input.LA(1);

                         
                        int index409_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred503_InternalSCEst()) ) {s = 15;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index409_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA409_3 = input.LA(1);

                         
                        int index409_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred503_InternalSCEst()) ) {s = 15;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index409_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA409_4 = input.LA(1);

                         
                        int index409_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred503_InternalSCEst()) ) {s = 15;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index409_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA409_5 = input.LA(1);

                         
                        int index409_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred503_InternalSCEst()) ) {s = 15;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index409_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA409_6 = input.LA(1);

                         
                        int index409_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred503_InternalSCEst()) ) {s = 15;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index409_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA409_7 = input.LA(1);

                         
                        int index409_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred503_InternalSCEst()) ) {s = 15;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index409_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA409_8 = input.LA(1);

                         
                        int index409_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred503_InternalSCEst()) ) {s = 15;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index409_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA409_9 = input.LA(1);

                         
                        int index409_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred503_InternalSCEst()) ) {s = 15;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index409_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA409_10 = input.LA(1);

                         
                        int index409_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred503_InternalSCEst()) ) {s = 15;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index409_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA409_11 = input.LA(1);

                         
                        int index409_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred503_InternalSCEst()) ) {s = 15;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index409_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA409_12 = input.LA(1);

                         
                        int index409_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred503_InternalSCEst()) ) {s = 15;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index409_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA409_13 = input.LA(1);

                         
                        int index409_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred503_InternalSCEst()) ) {s = 15;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index409_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA409_14 = input.LA(1);

                         
                        int index409_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred503_InternalSCEst()) ) {s = 15;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index409_14);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 409, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_189s = "\171\uffff";
    static final String dfa_190s = "\1\1\170\uffff";
    static final String dfa_191s = "\1\4\45\uffff\1\0\122\uffff";
    static final String dfa_192s = "\1\u00a5\45\uffff\1\0\122\uffff";
    static final String dfa_193s = "\1\uffff\1\2\166\uffff\1\1";
    static final String dfa_194s = "\46\uffff\1\0\122\uffff}>";
    static final String[] dfa_195s = {
            "\1\1\1\uffff\1\1\3\uffff\2\1\6\uffff\12\1\2\uffff\1\1\1\uffff\1\1\4\uffff\2\1\6\uffff\4\1\1\46\27\1\1\uffff\21\1\1\uffff\4\1\2\uffff\1\1\1\uffff\7\1\1\uffff\21\1\3\uffff\2\1\1\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\5\uffff\17\1\3\uffff\4\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_189 = DFA.unpackEncodedString(dfa_189s);
    static final short[] dfa_190 = DFA.unpackEncodedString(dfa_190s);
    static final char[] dfa_191 = DFA.unpackEncodedStringToUnsignedChars(dfa_191s);
    static final char[] dfa_192 = DFA.unpackEncodedStringToUnsignedChars(dfa_192s);
    static final short[] dfa_193 = DFA.unpackEncodedString(dfa_193s);
    static final short[] dfa_194 = DFA.unpackEncodedString(dfa_194s);
    static final short[][] dfa_195 = unpackEncodedStringArray(dfa_195s);

    class DFA413 extends DFA {

        public DFA413(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 413;
            this.eot = dfa_189;
            this.eof = dfa_190;
            this.min = dfa_191;
            this.max = dfa_192;
            this.accept = dfa_193;
            this.special = dfa_194;
            this.transition = dfa_195;
        }
        public String getDescription() {
            return "()* loopback of 17090:3: (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA413_38 = input.LA(1);

                         
                        int index413_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred507_InternalSCEst()) ) {s = 120;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index413_38);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 413, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_196s = "\1\4\17\0\3\uffff";
    static final String dfa_197s = "\1\u0082\17\0\3\uffff";
    static final String dfa_198s = "\20\uffff\1\1\1\3\1\2";
    static final String dfa_199s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\3\uffff}>";
    static final String[] dfa_200s = {
            "\1\5\1\15\1\14\1\2\1\3\1\7\1\12\16\uffff\1\4\72\uffff\1\1\6\uffff\1\20\5\uffff\1\6\1\17\22\uffff\1\16\10\uffff\1\21\1\uffff\1\13\1\10\1\11",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };
    static final char[] dfa_196 = DFA.unpackEncodedStringToUnsignedChars(dfa_196s);
    static final char[] dfa_197 = DFA.unpackEncodedStringToUnsignedChars(dfa_197s);
    static final short[] dfa_198 = DFA.unpackEncodedString(dfa_198s);
    static final short[] dfa_199 = DFA.unpackEncodedString(dfa_199s);
    static final short[][] dfa_200 = unpackEncodedStringArray(dfa_200s);

    class DFA418 extends DFA {

        public DFA418(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 418;
            this.eot = dfa_38;
            this.eof = dfa_38;
            this.min = dfa_196;
            this.max = dfa_197;
            this.accept = dfa_198;
            this.special = dfa_199;
            this.transition = dfa_200;
        }
        public String getDescription() {
            return "17516:2: (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression | this_IgnoreValue_2= ruleIgnoreValue )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA418_1 = input.LA(1);

                         
                        int index418_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred512_InternalSCEst()) ) {s = 16;}

                        else if ( (synpred513_InternalSCEst()) ) {s = 18;}

                         
                        input.seek(index418_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA418_2 = input.LA(1);

                         
                        int index418_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred512_InternalSCEst()) ) {s = 16;}

                        else if ( (synpred513_InternalSCEst()) ) {s = 18;}

                         
                        input.seek(index418_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA418_3 = input.LA(1);

                         
                        int index418_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred512_InternalSCEst()) ) {s = 16;}

                        else if ( (synpred513_InternalSCEst()) ) {s = 18;}

                         
                        input.seek(index418_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA418_4 = input.LA(1);

                         
                        int index418_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred512_InternalSCEst()) ) {s = 16;}

                        else if ( (synpred513_InternalSCEst()) ) {s = 18;}

                         
                        input.seek(index418_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA418_5 = input.LA(1);

                         
                        int index418_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred512_InternalSCEst()) ) {s = 16;}

                        else if ( (synpred513_InternalSCEst()) ) {s = 18;}

                         
                        input.seek(index418_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA418_6 = input.LA(1);

                         
                        int index418_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred512_InternalSCEst()) ) {s = 16;}

                        else if ( (synpred513_InternalSCEst()) ) {s = 18;}

                         
                        input.seek(index418_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA418_7 = input.LA(1);

                         
                        int index418_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred512_InternalSCEst()) ) {s = 16;}

                        else if ( (synpred513_InternalSCEst()) ) {s = 18;}

                         
                        input.seek(index418_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA418_8 = input.LA(1);

                         
                        int index418_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred512_InternalSCEst()) ) {s = 16;}

                        else if ( (synpred513_InternalSCEst()) ) {s = 18;}

                         
                        input.seek(index418_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA418_9 = input.LA(1);

                         
                        int index418_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred512_InternalSCEst()) ) {s = 16;}

                        else if ( (synpred513_InternalSCEst()) ) {s = 18;}

                         
                        input.seek(index418_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA418_10 = input.LA(1);

                         
                        int index418_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred512_InternalSCEst()) ) {s = 16;}

                        else if ( (synpred513_InternalSCEst()) ) {s = 18;}

                         
                        input.seek(index418_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA418_11 = input.LA(1);

                         
                        int index418_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred512_InternalSCEst()) ) {s = 16;}

                        else if ( (synpred513_InternalSCEst()) ) {s = 18;}

                         
                        input.seek(index418_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA418_12 = input.LA(1);

                         
                        int index418_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred512_InternalSCEst()) ) {s = 16;}

                        else if ( (synpred513_InternalSCEst()) ) {s = 18;}

                         
                        input.seek(index418_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA418_13 = input.LA(1);

                         
                        int index418_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred512_InternalSCEst()) ) {s = 16;}

                        else if ( (synpred513_InternalSCEst()) ) {s = 18;}

                         
                        input.seek(index418_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA418_14 = input.LA(1);

                         
                        int index418_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred512_InternalSCEst()) ) {s = 16;}

                        else if ( (synpred513_InternalSCEst()) ) {s = 18;}

                         
                        input.seek(index418_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA418_15 = input.LA(1);

                         
                        int index418_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred512_InternalSCEst()) ) {s = 16;}

                        else if ( (synpred513_InternalSCEst()) ) {s = 18;}

                         
                        input.seek(index418_15);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 418, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_201s = "\12\uffff";
    static final String dfa_202s = "\2\uffff\1\6\5\uffff\2\6";
    static final String dfa_203s = "\1\54\5\4\2\uffff\2\4";
    static final String dfa_204s = "\1\54\1\4\1\u0080\1\4\1\10\1\7\2\uffff\2\u0080";
    static final String dfa_205s = "\6\uffff\1\2\1\1\2\uffff";
    static final String dfa_206s = "\12\uffff}>";
    static final String[] dfa_207s = {
            "\1\1",
            "\1\2",
            "\2\7\1\uffff\3\7\1\6\6\uffff\1\6\2\uffff\1\3\27\uffff\1\5\47\uffff\1\4\53\uffff\1\6",
            "\1\10",
            "\1\10\2\uffff\2\7",
            "\1\6\2\uffff\1\11",
            "",
            "",
            "\2\7\1\uffff\3\7\1\6\6\uffff\1\6\2\uffff\1\3\27\uffff\1\5\47\uffff\1\4\53\uffff\1\6",
            "\2\7\1\uffff\3\7\1\6\6\uffff\1\6\32\uffff\1\6\47\uffff\1\7\53\uffff\1\6"
    };

    static final short[] dfa_201 = DFA.unpackEncodedString(dfa_201s);
    static final short[] dfa_202 = DFA.unpackEncodedString(dfa_202s);
    static final char[] dfa_203 = DFA.unpackEncodedStringToUnsignedChars(dfa_203s);
    static final char[] dfa_204 = DFA.unpackEncodedStringToUnsignedChars(dfa_204s);
    static final short[] dfa_205 = DFA.unpackEncodedString(dfa_205s);
    static final short[] dfa_206 = DFA.unpackEncodedString(dfa_206s);
    static final short[][] dfa_207 = unpackEncodedStringArray(dfa_207s);

    class DFA426 extends DFA {

        public DFA426(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 426;
            this.eot = dfa_201;
            this.eof = dfa_202;
            this.min = dfa_203;
            this.max = dfa_204;
            this.accept = dfa_205;
            this.special = dfa_206;
            this.transition = dfa_207;
        }
        public String getDescription() {
            return "18060:2: (this_StringPragma_0= ruleStringPragma | this_PragmaTag_1= rulePragmaTag )";
        }
    }
    static final String dfa_208s = "\3\uffff\1\7\6\uffff\2\7";
    static final String dfa_209s = "\1\12\1\uffff\4\4\1\7\3\uffff\2\4";
    static final String dfa_210s = "\1\u0080\1\uffff\1\4\1\u0080\2\4\1\7\3\uffff\2\u0080";
    static final String dfa_211s = "\1\uffff\1\1\5\uffff\1\4\1\3\1\2\2\uffff";
    static final String dfa_212s = "\14\uffff}>";
    static final String[] dfa_213s = {
            "\1\1\165\uffff\1\2",
            "",
            "\1\3",
            "\1\7\1\11\4\uffff\1\7\11\uffff\1\4\27\uffff\1\6\4\uffff\1\10\42\uffff\1\5\53\uffff\1\7",
            "\1\12",
            "\1\12",
            "\1\13",
            "",
            "",
            "",
            "\1\7\1\11\4\uffff\1\7\11\uffff\1\4\27\uffff\1\6\4\uffff\1\10\42\uffff\1\5\53\uffff\1\7",
            "\1\7\1\11\4\uffff\1\7\46\uffff\1\10\116\uffff\1\7"
    };
    static final short[] dfa_208 = DFA.unpackEncodedString(dfa_208s);
    static final char[] dfa_209 = DFA.unpackEncodedStringToUnsignedChars(dfa_209s);
    static final char[] dfa_210 = DFA.unpackEncodedStringToUnsignedChars(dfa_210s);
    static final short[] dfa_211 = DFA.unpackEncodedString(dfa_211s);
    static final short[] dfa_212 = DFA.unpackEncodedString(dfa_212s);
    static final short[][] dfa_213 = unpackEncodedStringArray(dfa_213s);

    class DFA427 extends DFA {

        public DFA427(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 427;
            this.eot = dfa_32;
            this.eof = dfa_208;
            this.min = dfa_209;
            this.max = dfa_210;
            this.accept = dfa_211;
            this.special = dfa_212;
            this.transition = dfa_213;
        }
        public String getDescription() {
            return "18102:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation | this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )";
        }
    }

    class DFA549 extends DFA {

        public DFA549(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 549;
            this.eot = dfa_108;
            this.eof = dfa_108;
            this.min = dfa_129;
            this.max = dfa_130;
            this.accept = dfa_112;
            this.special = dfa_131;
            this.transition = dfa_132;
        }
        public String getDescription() {
            return "()* loopback of 12012:5: ( (lv_declarations_3_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA549_84 = input.LA(1);

                         
                        int index549_84 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred347_InternalSCEst()) ) {s = 5;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index549_84);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA549_86 = input.LA(1);

                         
                        int index549_86 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred347_InternalSCEst()) ) {s = 5;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index549_86);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 549, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    
    private static class FollowSets000 {
        public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000100000020402L,0x0000000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000020402L,0x0000000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000020400L,0x0000000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000040000L});
        public static final BitSet FOLLOW_8 = new BitSet(new long[]{0xAC7BC7FAA1980410L,0x000F01500001F9EDL,0x00000018000006A9L});
        public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000180000L});
        public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000020000L});
        public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000000200002L});
        public static final BitSet FOLLOW_12 = new BitSet(new long[]{0xAC7BC00001800410L,0x000001500001F9EDL,0x0000000000000001L});
        public static final BitSet FOLLOW_13 = new BitSet(new long[]{0xAC7BC00001800412L,0x000001500001F9EDL,0x0000000000000001L});
        public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000000410L,0x0000000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000000400000L});
        public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x00000000020007F0L,0x0020000608100000L,0x0000000000000007L});
        public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000000800400L,0x0000000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000001000400L,0x0000000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000002000000L});
        public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000004000000L});
        public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x00000000020007F0L,0x0020000600100000L,0x0000000000000007L});
        public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000000L,0x00000000000007F8L});
        public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000010000000L});
        public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000000000000L,0x00000000300C0000L,0x0000000000003C00L});
        public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000020000400L,0x0000000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000040200000L});
        public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000080000400L,0x0000000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000100040000L});
        public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000008000010L,0x0000000000000000L,0x00000000000007F8L});
        public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000200000400L,0x0000000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000402000000L});
        public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x000000000C000010L,0x0000000000000000L,0x00000000000007F8L});
        public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000000044000000L});
        public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000000800000400L,0x0000000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000001000000400L,0x0000000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000002000000400L,0x0000000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000004000000400L,0x0000000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000008000000400L,0x0000000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000010000000400L,0x0000000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000000002440002L});
        public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000000000000010L,0x00000000300C0000L,0x0000000000003C00L});
        public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000008400010L,0x0000000000000000L,0x00000000000007F8L});
        public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000020000000400L,0x0000000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000000002040002L});
        public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000040000000400L,0x0000000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000080000000000L});
        public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000100000000000L});
        public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000100000000002L});
        public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000200000000002L});
        public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000400000000400L,0x0000000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000800000000400L,0x0000000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0001000000000400L,0x0000000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0002000000000400L,0x0000000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0004000000000000L});
        public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0008000000000400L,0x0000000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000000002000002L});
        public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0010000000000400L,0x0000000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0020000000000400L,0x0000000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000000004000010L});
        public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x00000000060007F0L,0x0020000608100000L,0x0000000000000007L});
        public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0040000000000400L,0x0000000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x02020000020007F0L,0x0020000608000000L,0x0000000000000007L});
        public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0180000000080400L,0x0000000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x00000000020007F0L,0x0020000608000000L,0x0000000000000007L});
        public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0080000000000400L,0x0000000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0100000000080000L});
        public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x03020000020807F0L,0x0020000608000000L,0x0000000000000007L});
        public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0000000000080000L});
        public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0040000000000002L});
        public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0200000000000400L,0x0000000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x00020000020007F0L,0x0020000608000000L,0x0000000000000007L});
        public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0400000000000002L});
        public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0800000000000400L,0x0000000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x1180000000080400L,0x0000000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x1100000000080400L,0x0000000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0800000000000002L});
        public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x1000000000000400L,0x0000000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0080000000000002L});
        public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x2000000000000400L,0x0000000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x4000000000080000L});
        public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x2000000000000002L});
        public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x00020000020007F0L,0x0020000E08100000L,0x0000000000000007L});
        public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x8000000000000400L,0x0000000000000001L,0x0000000000000001L});
        public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
        public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000001L});
        public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0000000000000400L,0x000000000000000CL,0x0000000000000001L});
        public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000008L});
        public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
        public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x02020000020007F0L,0x0020000E08100000L,0x0000000000000007L});
        public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0000000000000002L,0x000000000000000CL});
        public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000008L});
        public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x02020000020807F0L,0x0020000E08100000L,0x0000000000000007L});
        public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x0000000000000400L,0x0000000000000020L,0x0000000000000001L});
        public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000020L});
        public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0000000000000400L,0x0000000000000040L,0x0000000000000001L});
        public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x0400000000000000L});
        public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000040L});
        public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x0000000000000400L,0x0000000000000084L,0x0000000000000001L});
        public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x0000000000000400L,0x0000000000000100L,0x0000000000000001L});
        public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x0000000040000000L,0x0000000000000200L});
        public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x0000000000080400L,0x0000000000000400L,0x0000000000000001L});
        public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
        public static final BitSet FOLLOW_105 = new BitSet(new long[]{0x0000000000440002L});
        public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x0000000000000400L,0x0000000000000400L,0x0000000000000001L});
        public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x0000000002000010L,0x0000000008000000L});
        public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x0000000000000400L,0x0000000000000800L,0x0000000000000001L});
        public static final BitSet FOLLOW_109 = new BitSet(new long[]{0x0000000000000400L,0x0000000000001000L,0x0000000000000001L});
        public static final BitSet FOLLOW_110 = new BitSet(new long[]{0x0200000000000410L,0x0000000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_111 = new BitSet(new long[]{0x0000010000000000L});
        public static final BitSet FOLLOW_112 = new BitSet(new long[]{0x0000000000000002L,0x0000000000001000L});
        public static final BitSet FOLLOW_113 = new BitSet(new long[]{0x0200000000080410L,0x0000000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_114 = new BitSet(new long[]{0x0000000000000400L,0x0000000000002000L,0x0000000000000001L});
        public static final BitSet FOLLOW_115 = new BitSet(new long[]{0x0000000000000002L,0x0000000000002000L});
        public static final BitSet FOLLOW_116 = new BitSet(new long[]{0x0000000000000400L,0x0000000000004000L,0x0000000000000001L});
        public static final BitSet FOLLOW_117 = new BitSet(new long[]{0x0000000000000002L,0x0000000000004000L});
        public static final BitSet FOLLOW_118 = new BitSet(new long[]{0x0000000040040000L});
        public static final BitSet FOLLOW_119 = new BitSet(new long[]{0x0000000000400002L});
        public static final BitSet FOLLOW_120 = new BitSet(new long[]{0x0000000000000400L,0x0000000000018000L,0x0000000000000001L});
        public static final BitSet FOLLOW_121 = new BitSet(new long[]{0x0002000000000002L});
        public static final BitSet FOLLOW_122 = new BitSet(new long[]{0x0000001AA0000400L,0x0000000000002000L,0x0000000000000001L});
        public static final BitSet FOLLOW_123 = new BitSet(new long[]{0x0004000000200000L});
        public static final BitSet FOLLOW_124 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
        public static final BitSet FOLLOW_125 = new BitSet(new long[]{0x0000000040000002L});
        public static final BitSet FOLLOW_126 = new BitSet(new long[]{0x00000000000003B0L});
        public static final BitSet FOLLOW_127 = new BitSet(new long[]{0x0000000100000010L,0x000000003FFE0000L});
        public static final BitSet FOLLOW_128 = new BitSet(new long[]{0x00000000020007F0L,0x0020000600000000L,0x0000000000000007L});
        public static final BitSet FOLLOW_129 = new BitSet(new long[]{0x0400000000000400L,0x0000000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_130 = new BitSet(new long[]{0x0000000000000000L,0x00000000C0000000L});
        public static final BitSet FOLLOW_131 = new BitSet(new long[]{0x0000000000000002L,0x0000000100000000L});
        public static final BitSet FOLLOW_132 = new BitSet(new long[]{0x0000000000000002L,0x0000000020000000L});
        public static final BitSet FOLLOW_133 = new BitSet(new long[]{0x0000000000000002L,0x0000000010000000L});
        public static final BitSet FOLLOW_134 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
        public static final BitSet FOLLOW_135 = new BitSet(new long[]{0x00020000020007F0L,0x0020000600000000L,0x0000000000000007L});
        public static final BitSet FOLLOW_136 = new BitSet(new long[]{0x0000000100000002L,0x0000000007C00000L});
        public static final BitSet FOLLOW_137 = new BitSet(new long[]{0x0000000000000002L,0x0000000000080000L});
        public static final BitSet FOLLOW_138 = new BitSet(new long[]{0x0000000000000002L,0x0000000000100000L});
        public static final BitSet FOLLOW_139 = new BitSet(new long[]{0x0000000000000002L,0x0000000000040000L});
        public static final BitSet FOLLOW_140 = new BitSet(new long[]{0x0000000000000002L,0x0000000000020000L});
        public static final BitSet FOLLOW_141 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L});
        public static final BitSet FOLLOW_142 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000000L,0x0000000000000006L});
        public static final BitSet FOLLOW_143 = new BitSet(new long[]{0xAC7BC06001840412L,0x003F01700001F9EDL,0x00000038000006A9L});
        public static final BitSet FOLLOW_144 = new BitSet(new long[]{0xAC7BC06001800412L,0x003F01700001F9EDL,0x00000038000006A9L});
        public static final BitSet FOLLOW_145 = new BitSet(new long[]{0x0000000000000400L,0x0000001000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_146 = new BitSet(new long[]{0x0000000100000000L,0x0000000000000000L,0x000000001FFF0000L});
        public static final BitSet FOLLOW_147 = new BitSet(new long[]{0x0000000000200002L,0x0000002000000000L});
        public static final BitSet FOLLOW_148 = new BitSet(new long[]{0x0000000000200012L});
        public static final BitSet FOLLOW_149 = new BitSet(new long[]{0x0000000000000000L,0x0000004000000000L});
        public static final BitSet FOLLOW_150 = new BitSet(new long[]{0xAC7BC06001800410L,0x003F01F00001F9EDL,0x00000038000006A9L});
        public static final BitSet FOLLOW_151 = new BitSet(new long[]{0xAC7BC00001800410L,0x000001D00001F9EDL,0x0000000000000001L});
        public static final BitSet FOLLOW_152 = new BitSet(new long[]{0x0100000000200402L,0x0000000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_153 = new BitSet(new long[]{0x0100000000000400L,0x0000000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_154 = new BitSet(new long[]{0x0080000000000000L});
        public static final BitSet FOLLOW_155 = new BitSet(new long[]{0xAD7BC00001880410L,0x000001500001F9EDL,0x0000000000000001L});
        public static final BitSet FOLLOW_156 = new BitSet(new long[]{0xAC7BC00001880410L,0x000001500001F9EDL,0x0000000000000001L});
        public static final BitSet FOLLOW_157 = new BitSet(new long[]{0x0000000000000400L,0x0000004000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_158 = new BitSet(new long[]{0xAC7BC00001800410L,0x000007500001F9EDL,0x0000000000000001L});
        public static final BitSet FOLLOW_159 = new BitSet(new long[]{0x0000000000000000L,0x0000060000000000L});
        public static final BitSet FOLLOW_160 = new BitSet(new long[]{0x0000000000000400L,0x0000000000008000L,0x0000000000000001L});
        public static final BitSet FOLLOW_161 = new BitSet(new long[]{0x0000000402200002L});
        public static final BitSet FOLLOW_162 = new BitSet(new long[]{0x00000000020007F0L,0x0020180608100000L,0x0000000000000007L});
        public static final BitSet FOLLOW_163 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
        public static final BitSet FOLLOW_164 = new BitSet(new long[]{0x0000000000000002L,0x0000200000000000L});
        public static final BitSet FOLLOW_165 = new BitSet(new long[]{0x0020006000000452L,0x00FFC02000002000L,0x00000038000006A9L});
        public static final BitSet FOLLOW_166 = new BitSet(new long[]{0x0020000000000452L,0x00E0C00000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_167 = new BitSet(new long[]{0x0000000000000010L,0x0000004000000000L});
        public static final BitSet FOLLOW_168 = new BitSet(new long[]{0x0000000000000002L,0x0000400000000000L});
        public static final BitSet FOLLOW_169 = new BitSet(new long[]{0x0020006000000450L,0x00FFC0A000002000L,0x00000038000006A9L});
        public static final BitSet FOLLOW_170 = new BitSet(new long[]{0x0020000000000450L,0x00E0C08000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_171 = new BitSet(new long[]{0x0000000000000000L,0x0000408000000000L});
        public static final BitSet FOLLOW_172 = new BitSet(new long[]{0x0000000000000400L,0x0000800000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_173 = new BitSet(new long[]{0x0000006000000400L,0x000F000000002000L,0x00000018000006A9L});
        public static final BitSet FOLLOW_174 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002000L,0x00000018000002A8L});
        public static final BitSet FOLLOW_175 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_176 = new BitSet(new long[]{0x0000000000000802L});
        public static final BitSet FOLLOW_177 = new BitSet(new long[]{0x0000000040000802L});
        public static final BitSet FOLLOW_178 = new BitSet(new long[]{0x0000006000000400L,0x003F002000002000L,0x00000038000006A9L});
        public static final BitSet FOLLOW_179 = new BitSet(new long[]{0x0000006000000400L,0x003F00A000002000L,0x00000038000006A9L});
        public static final BitSet FOLLOW_180 = new BitSet(new long[]{0x0000000000200410L,0x0000000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_181 = new BitSet(new long[]{0x0000000000000C12L,0x0000000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_182 = new BitSet(new long[]{0x0000000000040002L});
        public static final BitSet FOLLOW_183 = new BitSet(new long[]{0x0000000000000400L,0x0031000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_184 = new BitSet(new long[]{0x0000000000000000L,0x0030000000000000L});
        public static final BitSet FOLLOW_185 = new BitSet(new long[]{0x0000000000000420L,0x0000000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_186 = new BitSet(new long[]{0x0000000040000410L,0x0000000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_187 = new BitSet(new long[]{0x0000000000000400L,0x0001002000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_188 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
        public static final BitSet FOLLOW_189 = new BitSet(new long[]{0x0000000000000430L,0x0004004000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_190 = new BitSet(new long[]{0x0000000000000410L,0x0004004000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_191 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x000000000000C000L});
        public static final BitSet FOLLOW_192 = new BitSet(new long[]{0x0000000000000410L,0x0000004000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_193 = new BitSet(new long[]{0x0000000040000000L,0x0000008000000000L});
        public static final BitSet FOLLOW_194 = new BitSet(new long[]{0x0002000108000002L});
        public static final BitSet FOLLOW_195 = new BitSet(new long[]{0x0000000008000002L});
        public static final BitSet FOLLOW_196 = new BitSet(new long[]{0x0000000000000000L,0x02001000000C0000L,0x0000000000003C00L});
        public static final BitSet FOLLOW_197 = new BitSet(new long[]{0x0000000002000002L,0x0000002000000000L});
        public static final BitSet FOLLOW_198 = new BitSet(new long[]{0x0000000000000002L,0x0000002000000000L});
        public static final BitSet FOLLOW_199 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_200 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000060000000L});
        public static final BitSet FOLLOW_201 = new BitSet(new long[]{0x0000000000000440L,0x0000000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_202 = new BitSet(new long[]{0x0000000000000400L,0x0020000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_203 = new BitSet(new long[]{0x0000000000000400L,0x0040000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_204 = new BitSet(new long[]{0x0000000000000400L,0x0080000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_205 = new BitSet(new long[]{0x0000000000000002L,0x0100000000000000L});
        public static final BitSet FOLLOW_206 = new BitSet(new long[]{0x0000000000000002L,0x0200000000000000L});
        public static final BitSet FOLLOW_207 = new BitSet(new long[]{0x0000000000000002L,0x0400000000000000L});
        public static final BitSet FOLLOW_208 = new BitSet(new long[]{0x0000000000000002L,0x0000100000000000L});
        public static final BitSet FOLLOW_209 = new BitSet(new long[]{0x00000000020007F0L,0x0020000600000000L,0x0000000080000007L});
        public static final BitSet FOLLOW_210 = new BitSet(new long[]{0x0000000000000002L,0x0800000000000000L});
        public static final BitSet FOLLOW_211 = new BitSet(new long[]{0x0000000000000002L,0x1000000000000000L});
        public static final BitSet FOLLOW_212 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000400000000L});
        public static final BitSet FOLLOW_213 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000000L,0x0000000100000002L});
        public static final BitSet FOLLOW_214 = new BitSet(new long[]{0x0000000000000002L,0x2000000000000000L});
        public static final BitSet FOLLOW_215 = new BitSet(new long[]{0x0002000000100002L});
        public static final BitSet FOLLOW_216 = new BitSet(new long[]{0x0000000000000080L});
        public static final BitSet FOLLOW_217 = new BitSet(new long[]{0x0000000000000020L,0x0000008000000000L});
        public static final BitSet FOLLOW_218 = new BitSet(new long[]{0x00020000000003B0L,0x8000004000000000L});
        public static final BitSet FOLLOW_219 = new BitSet(new long[]{0x00060000000003B0L,0x8000004000000000L});
        public static final BitSet FOLLOW_220 = new BitSet(new long[]{0x0004000040000000L});
        public static final BitSet FOLLOW_221 = new BitSet(new long[]{0x00000000000003B0L,0x0000000000100000L});
        public static final BitSet FOLLOW_222 = new BitSet(new long[]{0x0000000000000230L});
        public static final BitSet FOLLOW_223 = new BitSet(new long[]{0x0002000000000000L});
        public static final BitSet FOLLOW_224 = new BitSet(new long[]{0x0000100000100002L,0x0000000000100000L});
        public static final BitSet FOLLOW_225 = new BitSet(new long[]{0x0000000000000100L});
    }


}