/*
 * generated by Xtext
 */
package de.cau.cs.kieler.esterel.scest

import com.google.inject.Injector
import de.cau.cs.kieler.core.services.KielerLanguage
import de.cau.cs.kieler.esterel.EsterelProgram
import de.cau.cs.kieler.esterel.SCEstStatement
import de.cau.cs.kieler.kexpressions.VariableDeclaration
import de.cau.cs.kieler.scl.Assignment
import de.cau.cs.kieler.scl.Conditional
import de.cau.cs.kieler.scl.Goto
import de.cau.cs.kieler.scl.Label
import de.cau.cs.kieler.scl.Parallel
import de.cau.cs.kieler.scl.ScopeStatement

/**
 * Initialization support for running Xtext languages without Equinox extension registry.
 */
class SCEstStandaloneSetup extends SCEstStandaloneSetupGenerated implements KielerLanguage {
    
    static Injector injector
    
    def static doSetup() {
        if (injector === null) {
            injector = new SCEstStandaloneSetup().createInjectorAndDoEMFRegistration()
        }
        return injector
    }
    
    override getInjector() {
        return doSetup()
    }

    override getSupportedModels() {
        #[EsterelProgram]
    }
    
    override getSupportedResourceExtensions() {
        #["strl", "scest"]
    }
	
    override getResourceExtension(Object model) {
        if (model instanceof EsterelProgram) {
            if (model.eAllContents.exists[
                switch (it) {
                    SCEstStatement,
                    VariableDeclaration,
                    Label,
                    Goto,
                    Conditional,
                    ScopeStatement,
                    Parallel,
                    Assignment : true
                    default : false
                }
            ]) {
                return "scest"
            } else {
                return "strl"
            }
        }
        return null
    }
}
