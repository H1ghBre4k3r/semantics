/*
 * generated by Xtext 2.10.0
 */
package de.cau.cs.kieler.ehelp.ui.labeling

import com.google.inject.Inject
import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider
import org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider
import de.cau.cs.kieler.ehelp.eHelp.List
import de.cau.cs.kieler.ehelp.eHelp.Chapter
import de.cau.cs.kieler.ehelp.services.EHelpGrammarAccess.EnumElements
import de.cau.cs.kieler.ehelp.services.EHelpGrammarAccess.ListElements
import de.cau.cs.kieler.ehelp.eHelp.ListItem
import de.cau.cs.kieler.ehelp.eHelp.Table
import de.cau.cs.kieler.ehelp.eHelp.TableRow
import de.cau.cs.kieler.ehelp.eHelp.Images
import de.cau.cs.kieler.ehelp.generator.HelpFileGenerator

/**
 * Provides labels for EObjects.
 * 
 * See https://www.eclipse.org/Xtext/documentation/304_ide_concepts.html#label-provider
 */
class EHelpLabelProvider extends DefaultEObjectLabelProvider {

 	@Inject
 	extension HelpFileGenerator

	@Inject
	new(AdapterFactoryLabelProvider delegate) {
		super(delegate);
	}

	def text(Chapter ele) {
		'Chapter (' + ele.chaperIndex+ ') ' + ele.title
	}

	def text(List ele) {
		'List (' + ele.items.size + ')'
	}

	def text(de.cau.cs.kieler.ehelp.eHelp.Enum ele) {
		'Enum (' + ele.items.size + ')'
	}

	def text(Table ele) {
		'Table (' + ele.rows.size + ')'
	}

	def text(ListItem ele) {
		if (ele.eContents.size > 0) {
			return	'- ' + ele.eContents.get(0).getText
		}
		return '- <empty>'
	}

	def text(TableRow ele) {
		if (ele.eContents.size > 0 && ele.eContents.get(0).eContents.size > 0) {
			return	'- ' + ele.eContents.get(0).eContents.get(0).getText
		}
		return '- <empty>'
	}
	
	def text(Images ele) {
		var returnText = "";
		for (image : ele.images) {
			if (returnText.length > 0) {
				returnText = returnText + ''', '''
			}
			returnText = returnText + image
		}
		return "Image: " + returnText
	}
	
	



	// Labels and icons can be computed like this:
	
//	def text(Greeting ele) {
//		'A greeting to ' + ele.name
//	}
//
//	def image(Greeting ele) {
//		'Greeting.gif'
//	}
}
