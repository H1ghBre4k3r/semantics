/*
 * generated by Xtext
 */
package de.cau.cs.kieler.ide.scol.highlighting


import de.cau.cs.kieler.core.ls.IHighlighting
import java.util.List

class SCOLHighlighting implements IHighlighting {
    override String getId() {
        return "scol" // assume that only one extension is present
    }
    override String getName() {
        return "SCOL"
    }
    override List<String> getKeywords() {
        return #["_",
        "bool",
        "class",
        "combine",
        "commuting",
        "conflicting",
        "const",
        "else",
        "end",
        "enum",
        "expression",
        "extern",
        "fby",
        "float",
        "for",
        "fork",
        "global",
        "goto",
        "host",
        "if",
        "input",
        "int",
        "is",
        "join",
        "json",
        "label",
        "max",
        "min",
        "module",
        "none",
        "null",
        "output",
        "par",
        "pause",
        "pre",
        "print",
        "private",
        "protected",
        "public",
        "pure",
        "random",
        "randomize",
        "ref",
        "return",
        "run",
        "schedule",
        "scope",
        "sfby",
        "signal",
        "static",
        "string",
        "struct",
        "then",
        "this",
        "to",
        "val",
        "void",
        "while"
        ]
    }
}
