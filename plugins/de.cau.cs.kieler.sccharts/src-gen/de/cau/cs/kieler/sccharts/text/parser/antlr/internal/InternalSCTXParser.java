package de.cau.cs.kieler.sccharts.text.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.cau.cs.kieler.sccharts.text.services.SCTXGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalSCTXParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_STRING", "RULE_ID", "RULE_INT", "RULE_FLOAT", "RULE_HOSTCODE", "RULE_BOOLEAN", "RULE_COMMENT_ANNOTATION", "RULE_SL_COMMENT_ANNOTATION", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_NUMBER", "RULE_WS", "RULE_ANY_OTHER", "'import'", "'scchart'", "'extends'", "','", "'{'", "'}'", "'initial'", "'final'", "'violation'", "'connector'", "'state'", "'is'", "'schedule'", "'super.'", "'('", "')'", "'to'", "'['", "']'", "'if'", "'Pr='", "'nondeterministic'", "'do'", "';'", "'label'", "'override'", "'region'", "'for'", "':'", "'seq'", "'dataflow'", "'once'", "'entry'", "'Pr'", "'during'", "'exit'", "'weak'", "'suspend'", "'period'", "'const'", "'input'", "'output'", "'global'", "'static'", "'host'", "'policy'", "'go to'", "'method'", "'()'", "'module'", "'goto'", "'return'", "'else'", "'while'", "'scope'", "'expression'", "'json'", "'signal'", "'ref'", "'extern'", "'='", "'combine'", "'.'", "'print'", "'randomize'", "'||'", "'&&'", "'|'", "'^'", "'&'", "'<<'", "'>>'", "'>>>'", "'+'", "'-'", "'*'", "'/'", "'%'", "'->'", "'fby'", "'sfby'", "'\\''", "'random'", "'_'", "'null'", "'#'", "'@'", "'abort to'", "'join to'", "'strong'", "'undefined'", "'delayed'", "'immediate'", "'auto'", "'reset'", "'shallow history'", "'history'", "'deferred'", "'deep deferred'", "'pure'", "'bool'", "'int'", "'float'", "'string'", "'clock'", "'conflicting'", "'commuting'", "'+='", "'-='", "'*='", "'/='", "'%='", "'&='", "'|='", "'^='", "'<<='", "'>>='", "'>>>='", "'min='", "'max='", "'++'", "'--'", "'=='", "'<'", "'<='", "'>'", "'>='", "'!='", "'pre'", "'~'", "'!'", "'val'", "'?'", "'struct'", "'class'", "'none'", "'max'", "'min'", "'public'", "'protected'", "'private'", "'void'", "'!&'"
    };
    public static final int T__144=144;
    public static final int T__143=143;
    public static final int T__146=146;
    public static final int T__50=50;
    public static final int T__145=145;
    public static final int T__140=140;
    public static final int T__142=142;
    public static final int T__141=141;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__137=137;
    public static final int T__52=52;
    public static final int T__136=136;
    public static final int T__53=53;
    public static final int T__139=139;
    public static final int T__54=54;
    public static final int T__138=138;
    public static final int T__133=133;
    public static final int T__132=132;
    public static final int T__60=60;
    public static final int T__135=135;
    public static final int T__61=61;
    public static final int T__134=134;
    public static final int RULE_ID=5;
    public static final int T__131=131;
    public static final int T__130=130;
    public static final int RULE_INT=6;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=12;
    public static final int T__67=67;
    public static final int T__129=129;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__126=126;
    public static final int T__63=63;
    public static final int T__125=125;
    public static final int T__64=64;
    public static final int T__128=128;
    public static final int T__65=65;
    public static final int T__127=127;
    public static final int RULE_COMMENT_ANNOTATION=10;
    public static final int T__37=37;
    public static final int RULE_SL_COMMENT_ANNOTATION=11;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__159=159;
    public static final int T__30=30;
    public static final int T__158=158;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int T__155=155;
    public static final int T__154=154;
    public static final int T__157=157;
    public static final int T__156=156;
    public static final int T__151=151;
    public static final int T__150=150;
    public static final int T__153=153;
    public static final int T__152=152;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int RULE_FLOAT=7;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__148=148;
    public static final int T__41=41;
    public static final int T__147=147;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__149=149;
    public static final int T__91=91;
    public static final int T__100=100;
    public static final int T__92=92;
    public static final int T__93=93;
    public static final int T__102=102;
    public static final int T__94=94;
    public static final int T__101=101;
    public static final int T__90=90;
    public static final int RULE_BOOLEAN=9;
    public static final int T__19=19;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__99=99;
    public static final int T__95=95;
    public static final int T__96=96;
    public static final int T__97=97;
    public static final int T__98=98;
    public static final int T__26=26;
    public static final int RULE_HOSTCODE=8;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__23=23;
    public static final int T__24=24;
    public static final int T__25=25;
    public static final int T__20=20;
    public static final int T__21=21;
    public static final int T__122=122;
    public static final int T__70=70;
    public static final int T__121=121;
    public static final int T__71=71;
    public static final int T__124=124;
    public static final int T__72=72;
    public static final int T__123=123;
    public static final int T__120=120;
    public static final int RULE_STRING=4;
    public static final int RULE_SL_COMMENT=13;
    public static final int T__77=77;
    public static final int T__119=119;
    public static final int T__78=78;
    public static final int T__118=118;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int T__115=115;
    public static final int EOF=-1;
    public static final int T__74=74;
    public static final int T__114=114;
    public static final int T__75=75;
    public static final int T__117=117;
    public static final int T__76=76;
    public static final int T__116=116;
    public static final int T__80=80;
    public static final int T__111=111;
    public static final int T__81=81;
    public static final int T__110=110;
    public static final int T__82=82;
    public static final int T__113=113;
    public static final int T__83=83;
    public static final int T__112=112;
    public static final int RULE_WS=15;
    public static final int RULE_ANY_OTHER=16;
    public static final int RULE_NUMBER=14;
    public static final int T__88=88;
    public static final int T__108=108;
    public static final int T__89=89;
    public static final int T__107=107;
    public static final int T__109=109;
    public static final int T__84=84;
    public static final int T__104=104;
    public static final int T__85=85;
    public static final int T__103=103;
    public static final int T__86=86;
    public static final int T__106=106;
    public static final int T__87=87;
    public static final int T__105=105;

    // delegates
    // delegators


        public InternalSCTXParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalSCTXParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalSCTXParser.tokenNames; }
    public String getGrammarFileName() { return "InternalSCTX.g"; }



    /*
      This grammar contains a lot of empty actions to work around a bug in ANTLR.
      Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
    */

     	private SCTXGrammarAccess grammarAccess;

        public InternalSCTXParser(TokenStream input, SCTXGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "SCCharts";
       	}

       	@Override
       	protected SCTXGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleSCCharts"
    // InternalSCTX.g:71:1: entryRuleSCCharts returns [EObject current=null] : iv_ruleSCCharts= ruleSCCharts EOF ;
    public final EObject entryRuleSCCharts() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSCCharts = null;


        try {
            // InternalSCTX.g:71:49: (iv_ruleSCCharts= ruleSCCharts EOF )
            // InternalSCTX.g:72:2: iv_ruleSCCharts= ruleSCCharts EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSCChartsRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSCCharts=ruleSCCharts();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSCCharts; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSCCharts"


    // $ANTLR start "ruleSCCharts"
    // InternalSCTX.g:78:1: ruleSCCharts returns [EObject current=null] : ( ( ( (lv_pragmas_0_0= rulePragma ) ) | (otherlv_1= 'import' ( (lv_imports_2_0= ruleEString ) ) ) )* ( (lv_rootStates_3_0= ruleRootState ) )* ) ;
    public final EObject ruleSCCharts() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_pragmas_0_0 = null;

        AntlrDatatypeRuleToken lv_imports_2_0 = null;

        EObject lv_rootStates_3_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:84:2: ( ( ( ( (lv_pragmas_0_0= rulePragma ) ) | (otherlv_1= 'import' ( (lv_imports_2_0= ruleEString ) ) ) )* ( (lv_rootStates_3_0= ruleRootState ) )* ) )
            // InternalSCTX.g:85:2: ( ( ( (lv_pragmas_0_0= rulePragma ) ) | (otherlv_1= 'import' ( (lv_imports_2_0= ruleEString ) ) ) )* ( (lv_rootStates_3_0= ruleRootState ) )* )
            {
            // InternalSCTX.g:85:2: ( ( ( (lv_pragmas_0_0= rulePragma ) ) | (otherlv_1= 'import' ( (lv_imports_2_0= ruleEString ) ) ) )* ( (lv_rootStates_3_0= ruleRootState ) )* )
            // InternalSCTX.g:86:3: ( ( (lv_pragmas_0_0= rulePragma ) ) | (otherlv_1= 'import' ( (lv_imports_2_0= ruleEString ) ) ) )* ( (lv_rootStates_3_0= ruleRootState ) )*
            {
            // InternalSCTX.g:86:3: ( ( (lv_pragmas_0_0= rulePragma ) ) | (otherlv_1= 'import' ( (lv_imports_2_0= ruleEString ) ) ) )*
            loop1:
            do {
                int alt1=3;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==102) ) {
                    alt1=1;
                }
                else if ( (LA1_0==17) ) {
                    alt1=2;
                }


                switch (alt1) {
            	case 1 :
            	    // InternalSCTX.g:87:4: ( (lv_pragmas_0_0= rulePragma ) )
            	    {
            	    // InternalSCTX.g:87:4: ( (lv_pragmas_0_0= rulePragma ) )
            	    // InternalSCTX.g:88:5: (lv_pragmas_0_0= rulePragma )
            	    {
            	    // InternalSCTX.g:88:5: (lv_pragmas_0_0= rulePragma )
            	    // InternalSCTX.g:89:6: lv_pragmas_0_0= rulePragma
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getSCChartsAccess().getPragmasPragmaParserRuleCall_0_0_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_3);
            	    lv_pragmas_0_0=rulePragma();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getSCChartsRule());
            	      						}
            	      						add(
            	      							current,
            	      							"pragmas",
            	      							lv_pragmas_0_0,
            	      							"de.cau.cs.kieler.kexpressions.KExpressions.Pragma");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalSCTX.g:107:4: (otherlv_1= 'import' ( (lv_imports_2_0= ruleEString ) ) )
            	    {
            	    // InternalSCTX.g:107:4: (otherlv_1= 'import' ( (lv_imports_2_0= ruleEString ) ) )
            	    // InternalSCTX.g:108:5: otherlv_1= 'import' ( (lv_imports_2_0= ruleEString ) )
            	    {
            	    otherlv_1=(Token)match(input,17,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_1, grammarAccess.getSCChartsAccess().getImportKeyword_0_1_0());
            	      				
            	    }
            	    // InternalSCTX.g:112:5: ( (lv_imports_2_0= ruleEString ) )
            	    // InternalSCTX.g:113:6: (lv_imports_2_0= ruleEString )
            	    {
            	    // InternalSCTX.g:113:6: (lv_imports_2_0= ruleEString )
            	    // InternalSCTX.g:114:7: lv_imports_2_0= ruleEString
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getSCChartsAccess().getImportsEStringParserRuleCall_0_1_1_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_3);
            	    lv_imports_2_0=ruleEString();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getSCChartsRule());
            	      							}
            	      							add(
            	      								current,
            	      								"imports",
            	      								lv_imports_2_0,
            	      								"de.cau.cs.kieler.annotations.Annotations.EString");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

            // InternalSCTX.g:133:3: ( (lv_rootStates_3_0= ruleRootState ) )*
            loop2:
            do {
                int alt2=2;
                int LA2_0 = input.LA(1);

                if ( (LA2_0==RULE_COMMENT_ANNOTATION||LA2_0==18||LA2_0==103) ) {
                    alt2=1;
                }


                switch (alt2) {
            	case 1 :
            	    // InternalSCTX.g:134:4: (lv_rootStates_3_0= ruleRootState )
            	    {
            	    // InternalSCTX.g:134:4: (lv_rootStates_3_0= ruleRootState )
            	    // InternalSCTX.g:135:5: lv_rootStates_3_0= ruleRootState
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSCChartsAccess().getRootStatesRootStateParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_5);
            	    lv_rootStates_3_0=ruleRootState();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSCChartsRule());
            	      					}
            	      					add(
            	      						current,
            	      						"rootStates",
            	      						lv_rootStates_3_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.RootState");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSCCharts"


    // $ANTLR start "entryRuleRootState"
    // InternalSCTX.g:156:1: entryRuleRootState returns [EObject current=null] : iv_ruleRootState= ruleRootState EOF ;
    public final EObject entryRuleRootState() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRootState = null;


        try {
            // InternalSCTX.g:156:50: (iv_ruleRootState= ruleRootState EOF )
            // InternalSCTX.g:157:2: iv_ruleRootState= ruleRootState EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRootStateRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRootState=ruleRootState();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRootState; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRootState"


    // $ANTLR start "ruleRootState"
    // InternalSCTX.g:163:1: ruleRootState returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'scchart' ( (lv_name_2_0= ruleExtendedID ) ) ( (lv_label_3_0= RULE_STRING ) )? (otherlv_4= 'extends' ( (otherlv_5= RULE_ID ) ) (otherlv_6= ',' ( (otherlv_7= RULE_ID ) ) )* )? otherlv_8= '{' ( (lv_declarations_9_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_10_0= ruleLocalAction ) )* ( ( (lv_regions_11_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_12_0= ruleRegion ) )* ) otherlv_13= '}' ) ;
    public final EObject ruleRootState() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_label_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_13=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_declarations_9_0 = null;

        EObject lv_actions_10_0 = null;

        EObject lv_regions_11_0 = null;

        EObject lv_regions_12_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:169:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'scchart' ( (lv_name_2_0= ruleExtendedID ) ) ( (lv_label_3_0= RULE_STRING ) )? (otherlv_4= 'extends' ( (otherlv_5= RULE_ID ) ) (otherlv_6= ',' ( (otherlv_7= RULE_ID ) ) )* )? otherlv_8= '{' ( (lv_declarations_9_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_10_0= ruleLocalAction ) )* ( ( (lv_regions_11_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_12_0= ruleRegion ) )* ) otherlv_13= '}' ) )
            // InternalSCTX.g:170:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'scchart' ( (lv_name_2_0= ruleExtendedID ) ) ( (lv_label_3_0= RULE_STRING ) )? (otherlv_4= 'extends' ( (otherlv_5= RULE_ID ) ) (otherlv_6= ',' ( (otherlv_7= RULE_ID ) ) )* )? otherlv_8= '{' ( (lv_declarations_9_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_10_0= ruleLocalAction ) )* ( ( (lv_regions_11_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_12_0= ruleRegion ) )* ) otherlv_13= '}' )
            {
            // InternalSCTX.g:170:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'scchart' ( (lv_name_2_0= ruleExtendedID ) ) ( (lv_label_3_0= RULE_STRING ) )? (otherlv_4= 'extends' ( (otherlv_5= RULE_ID ) ) (otherlv_6= ',' ( (otherlv_7= RULE_ID ) ) )* )? otherlv_8= '{' ( (lv_declarations_9_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_10_0= ruleLocalAction ) )* ( ( (lv_regions_11_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_12_0= ruleRegion ) )* ) otherlv_13= '}' )
            // InternalSCTX.g:171:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'scchart' ( (lv_name_2_0= ruleExtendedID ) ) ( (lv_label_3_0= RULE_STRING ) )? (otherlv_4= 'extends' ( (otherlv_5= RULE_ID ) ) (otherlv_6= ',' ( (otherlv_7= RULE_ID ) ) )* )? otherlv_8= '{' ( (lv_declarations_9_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_10_0= ruleLocalAction ) )* ( ( (lv_regions_11_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_12_0= ruleRegion ) )* ) otherlv_13= '}'
            {
            // InternalSCTX.g:171:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop3:
            do {
                int alt3=2;
                int LA3_0 = input.LA(1);

                if ( (LA3_0==RULE_COMMENT_ANNOTATION||LA3_0==103) ) {
                    alt3=1;
                }


                switch (alt3) {
            	case 1 :
            	    // InternalSCTX.g:172:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:172:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:173:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getRootStateAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_6);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getRootStateRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop3;
                }
            } while (true);

            otherlv_1=(Token)match(input,18,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getRootStateAccess().getScchartKeyword_1());
              		
            }
            // InternalSCTX.g:194:3: ( (lv_name_2_0= ruleExtendedID ) )
            // InternalSCTX.g:195:4: (lv_name_2_0= ruleExtendedID )
            {
            // InternalSCTX.g:195:4: (lv_name_2_0= ruleExtendedID )
            // InternalSCTX.g:196:5: lv_name_2_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRootStateAccess().getNameExtendedIDParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_7);
            lv_name_2_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRootStateRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_2_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:213:3: ( (lv_label_3_0= RULE_STRING ) )?
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==RULE_STRING) ) {
                alt4=1;
            }
            switch (alt4) {
                case 1 :
                    // InternalSCTX.g:214:4: (lv_label_3_0= RULE_STRING )
                    {
                    // InternalSCTX.g:214:4: (lv_label_3_0= RULE_STRING )
                    // InternalSCTX.g:215:5: lv_label_3_0= RULE_STRING
                    {
                    lv_label_3_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_label_3_0, grammarAccess.getRootStateAccess().getLabelSTRINGTerminalRuleCall_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getRootStateRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"label",
                      						lv_label_3_0,
                      						"de.cau.cs.kieler.annotations.Annotations.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:231:3: (otherlv_4= 'extends' ( (otherlv_5= RULE_ID ) ) (otherlv_6= ',' ( (otherlv_7= RULE_ID ) ) )* )?
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==19) ) {
                alt6=1;
            }
            switch (alt6) {
                case 1 :
                    // InternalSCTX.g:232:4: otherlv_4= 'extends' ( (otherlv_5= RULE_ID ) ) (otherlv_6= ',' ( (otherlv_7= RULE_ID ) ) )*
                    {
                    otherlv_4=(Token)match(input,19,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getRootStateAccess().getExtendsKeyword_4_0());
                      			
                    }
                    // InternalSCTX.g:236:4: ( (otherlv_5= RULE_ID ) )
                    // InternalSCTX.g:237:5: (otherlv_5= RULE_ID )
                    {
                    // InternalSCTX.g:237:5: (otherlv_5= RULE_ID )
                    // InternalSCTX.g:238:6: otherlv_5= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      						/* */
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getRootStateRule());
                      						}
                      					
                    }
                    otherlv_5=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_5, grammarAccess.getRootStateAccess().getBaseStatesStateCrossReference_4_1_0());
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:252:4: (otherlv_6= ',' ( (otherlv_7= RULE_ID ) ) )*
                    loop5:
                    do {
                        int alt5=2;
                        int LA5_0 = input.LA(1);

                        if ( (LA5_0==20) ) {
                            alt5=1;
                        }


                        switch (alt5) {
                    	case 1 :
                    	    // InternalSCTX.g:253:5: otherlv_6= ',' ( (otherlv_7= RULE_ID ) )
                    	    {
                    	    otherlv_6=(Token)match(input,20,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_6, grammarAccess.getRootStateAccess().getCommaKeyword_4_2_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:257:5: ( (otherlv_7= RULE_ID ) )
                    	    // InternalSCTX.g:258:6: (otherlv_7= RULE_ID )
                    	    {
                    	    // InternalSCTX.g:258:6: (otherlv_7= RULE_ID )
                    	    // InternalSCTX.g:259:7: otherlv_7= RULE_ID
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							/* */
                    	      						
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElement(grammarAccess.getRootStateRule());
                    	      							}
                    	      						
                    	    }
                    	    otherlv_7=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_10); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							newLeafNode(otherlv_7, grammarAccess.getRootStateAccess().getBaseStatesStateCrossReference_4_2_1_0());
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop5;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_8=(Token)match(input,21,FollowSets000.FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getRootStateAccess().getLeftCurlyBracketKeyword_5());
              		
            }
            // InternalSCTX.g:279:3: ( (lv_declarations_9_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )*
            loop7:
            do {
                int alt7=2;
                alt7 = dfa7.predict(input);
                switch (alt7) {
            	case 1 :
            	    // InternalSCTX.g:280:4: (lv_declarations_9_0= ruleDeclarationOrMethodWithKeywordWOSemicolon )
            	    {
            	    // InternalSCTX.g:280:4: (lv_declarations_9_0= ruleDeclarationOrMethodWithKeywordWOSemicolon )
            	    // InternalSCTX.g:281:5: lv_declarations_9_0= ruleDeclarationOrMethodWithKeywordWOSemicolon
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getRootStateAccess().getDeclarationsDeclarationOrMethodWithKeywordWOSemicolonParserRuleCall_6_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_11);
            	    lv_declarations_9_0=ruleDeclarationOrMethodWithKeywordWOSemicolon();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getRootStateRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_9_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.DeclarationOrMethodWithKeywordWOSemicolon");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop7;
                }
            } while (true);

            // InternalSCTX.g:298:3: ( (lv_actions_10_0= ruleLocalAction ) )*
            loop8:
            do {
                int alt8=2;
                alt8 = dfa8.predict(input);
                switch (alt8) {
            	case 1 :
            	    // InternalSCTX.g:299:4: (lv_actions_10_0= ruleLocalAction )
            	    {
            	    // InternalSCTX.g:299:4: (lv_actions_10_0= ruleLocalAction )
            	    // InternalSCTX.g:300:5: lv_actions_10_0= ruleLocalAction
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getRootStateAccess().getActionsLocalActionParserRuleCall_7_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_12);
            	    lv_actions_10_0=ruleLocalAction();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getRootStateRule());
            	      					}
            	      					add(
            	      						current,
            	      						"actions",
            	      						lv_actions_10_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.LocalAction");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop8;
                }
            } while (true);

            // InternalSCTX.g:317:3: ( ( (lv_regions_11_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_12_0= ruleRegion ) )* )
            int alt10=2;
            alt10 = dfa10.predict(input);
            switch (alt10) {
                case 1 :
                    // InternalSCTX.g:318:4: ( (lv_regions_11_0= ruleImplicitControlflowRegion ) )
                    {
                    // InternalSCTX.g:318:4: ( (lv_regions_11_0= ruleImplicitControlflowRegion ) )
                    // InternalSCTX.g:319:5: (lv_regions_11_0= ruleImplicitControlflowRegion )
                    {
                    // InternalSCTX.g:319:5: (lv_regions_11_0= ruleImplicitControlflowRegion )
                    // InternalSCTX.g:320:6: lv_regions_11_0= ruleImplicitControlflowRegion
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getRootStateAccess().getRegionsImplicitControlflowRegionParserRuleCall_8_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_13);
                    lv_regions_11_0=ruleImplicitControlflowRegion();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getRootStateRule());
                      						}
                      						add(
                      							current,
                      							"regions",
                      							lv_regions_11_0,
                      							"de.cau.cs.kieler.sccharts.text.SCTX.ImplicitControlflowRegion");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:338:4: ( (lv_regions_12_0= ruleRegion ) )*
                    {
                    // InternalSCTX.g:338:4: ( (lv_regions_12_0= ruleRegion ) )*
                    loop9:
                    do {
                        int alt9=2;
                        int LA9_0 = input.LA(1);

                        if ( (LA9_0==RULE_COMMENT_ANNOTATION||LA9_0==24||(LA9_0>=42 && LA9_0<=43)||LA9_0==47||LA9_0==103) ) {
                            alt9=1;
                        }


                        switch (alt9) {
                    	case 1 :
                    	    // InternalSCTX.g:339:5: (lv_regions_12_0= ruleRegion )
                    	    {
                    	    // InternalSCTX.g:339:5: (lv_regions_12_0= ruleRegion )
                    	    // InternalSCTX.g:340:6: lv_regions_12_0= ruleRegion
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getRootStateAccess().getRegionsRegionParserRuleCall_8_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_14);
                    	    lv_regions_12_0=ruleRegion();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getRootStateRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"regions",
                    	      							lv_regions_12_0,
                    	      							"de.cau.cs.kieler.sccharts.text.SCTX.Region");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop9;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_13=(Token)match(input,22,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_13, grammarAccess.getRootStateAccess().getRightCurlyBracketKeyword_9());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRootState"


    // $ANTLR start "entryRuleState"
    // InternalSCTX.g:366:1: entryRuleState returns [EObject current=null] : iv_ruleState= ruleState EOF ;
    public final EObject entryRuleState() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleState = null;


        try {
            // InternalSCTX.g:366:46: (iv_ruleState= ruleState EOF )
            // InternalSCTX.g:367:2: iv_ruleState= ruleState EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStateRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleState=ruleState();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleState; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleState"


    // $ANTLR start "ruleState"
    // InternalSCTX.g:373:1: ruleState returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_initial_1_0= 'initial' ) )? ( (lv_final_2_0= 'final' ) )? ( (lv_violation_3_0= 'violation' ) )? ( (lv_connector_4_0= 'connector' ) )? ( ( 'state' )=>otherlv_5= 'state' ) ( (lv_name_6_0= RULE_ID ) ) ( (lv_label_7_0= RULE_STRING ) )? ( (otherlv_8= 'is' ( (lv_reference_9_0= ruleScopeCall ) ) (otherlv_10= 'schedule' ( (lv_schedule_11_0= ruleScheduleObjectReference ) )+ )? ) | ( (otherlv_12= 'extends' ( (otherlv_13= RULE_ID ) ) (otherlv_14= ',' ( (otherlv_15= RULE_ID ) ) )* )? (otherlv_16= 'schedule' ( (lv_schedule_17_0= ruleScheduleObjectReference ) )+ )? otherlv_18= '{' ( (lv_declarations_19_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_20_0= ruleLocalAction ) )* ( ( (lv_regions_21_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_22_0= ruleRegion ) )* ) otherlv_23= '}' ) )? ( (lv_outgoingTransitions_24_0= ruleTransition ) )* ) ;
    public final EObject ruleState() throws RecognitionException {
        EObject current = null;

        Token lv_initial_1_0=null;
        Token lv_final_2_0=null;
        Token lv_violation_3_0=null;
        Token lv_connector_4_0=null;
        Token otherlv_5=null;
        Token lv_name_6_0=null;
        Token lv_label_7_0=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_23=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_reference_9_0 = null;

        EObject lv_schedule_11_0 = null;

        EObject lv_schedule_17_0 = null;

        EObject lv_declarations_19_0 = null;

        EObject lv_actions_20_0 = null;

        EObject lv_regions_21_0 = null;

        EObject lv_regions_22_0 = null;

        EObject lv_outgoingTransitions_24_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:379:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_initial_1_0= 'initial' ) )? ( (lv_final_2_0= 'final' ) )? ( (lv_violation_3_0= 'violation' ) )? ( (lv_connector_4_0= 'connector' ) )? ( ( 'state' )=>otherlv_5= 'state' ) ( (lv_name_6_0= RULE_ID ) ) ( (lv_label_7_0= RULE_STRING ) )? ( (otherlv_8= 'is' ( (lv_reference_9_0= ruleScopeCall ) ) (otherlv_10= 'schedule' ( (lv_schedule_11_0= ruleScheduleObjectReference ) )+ )? ) | ( (otherlv_12= 'extends' ( (otherlv_13= RULE_ID ) ) (otherlv_14= ',' ( (otherlv_15= RULE_ID ) ) )* )? (otherlv_16= 'schedule' ( (lv_schedule_17_0= ruleScheduleObjectReference ) )+ )? otherlv_18= '{' ( (lv_declarations_19_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_20_0= ruleLocalAction ) )* ( ( (lv_regions_21_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_22_0= ruleRegion ) )* ) otherlv_23= '}' ) )? ( (lv_outgoingTransitions_24_0= ruleTransition ) )* ) )
            // InternalSCTX.g:380:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_initial_1_0= 'initial' ) )? ( (lv_final_2_0= 'final' ) )? ( (lv_violation_3_0= 'violation' ) )? ( (lv_connector_4_0= 'connector' ) )? ( ( 'state' )=>otherlv_5= 'state' ) ( (lv_name_6_0= RULE_ID ) ) ( (lv_label_7_0= RULE_STRING ) )? ( (otherlv_8= 'is' ( (lv_reference_9_0= ruleScopeCall ) ) (otherlv_10= 'schedule' ( (lv_schedule_11_0= ruleScheduleObjectReference ) )+ )? ) | ( (otherlv_12= 'extends' ( (otherlv_13= RULE_ID ) ) (otherlv_14= ',' ( (otherlv_15= RULE_ID ) ) )* )? (otherlv_16= 'schedule' ( (lv_schedule_17_0= ruleScheduleObjectReference ) )+ )? otherlv_18= '{' ( (lv_declarations_19_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_20_0= ruleLocalAction ) )* ( ( (lv_regions_21_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_22_0= ruleRegion ) )* ) otherlv_23= '}' ) )? ( (lv_outgoingTransitions_24_0= ruleTransition ) )* )
            {
            // InternalSCTX.g:380:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_initial_1_0= 'initial' ) )? ( (lv_final_2_0= 'final' ) )? ( (lv_violation_3_0= 'violation' ) )? ( (lv_connector_4_0= 'connector' ) )? ( ( 'state' )=>otherlv_5= 'state' ) ( (lv_name_6_0= RULE_ID ) ) ( (lv_label_7_0= RULE_STRING ) )? ( (otherlv_8= 'is' ( (lv_reference_9_0= ruleScopeCall ) ) (otherlv_10= 'schedule' ( (lv_schedule_11_0= ruleScheduleObjectReference ) )+ )? ) | ( (otherlv_12= 'extends' ( (otherlv_13= RULE_ID ) ) (otherlv_14= ',' ( (otherlv_15= RULE_ID ) ) )* )? (otherlv_16= 'schedule' ( (lv_schedule_17_0= ruleScheduleObjectReference ) )+ )? otherlv_18= '{' ( (lv_declarations_19_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_20_0= ruleLocalAction ) )* ( ( (lv_regions_21_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_22_0= ruleRegion ) )* ) otherlv_23= '}' ) )? ( (lv_outgoingTransitions_24_0= ruleTransition ) )* )
            // InternalSCTX.g:381:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_initial_1_0= 'initial' ) )? ( (lv_final_2_0= 'final' ) )? ( (lv_violation_3_0= 'violation' ) )? ( (lv_connector_4_0= 'connector' ) )? ( ( 'state' )=>otherlv_5= 'state' ) ( (lv_name_6_0= RULE_ID ) ) ( (lv_label_7_0= RULE_STRING ) )? ( (otherlv_8= 'is' ( (lv_reference_9_0= ruleScopeCall ) ) (otherlv_10= 'schedule' ( (lv_schedule_11_0= ruleScheduleObjectReference ) )+ )? ) | ( (otherlv_12= 'extends' ( (otherlv_13= RULE_ID ) ) (otherlv_14= ',' ( (otherlv_15= RULE_ID ) ) )* )? (otherlv_16= 'schedule' ( (lv_schedule_17_0= ruleScheduleObjectReference ) )+ )? otherlv_18= '{' ( (lv_declarations_19_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_20_0= ruleLocalAction ) )* ( ( (lv_regions_21_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_22_0= ruleRegion ) )* ) otherlv_23= '}' ) )? ( (lv_outgoingTransitions_24_0= ruleTransition ) )*
            {
            // InternalSCTX.g:381:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop11:
            do {
                int alt11=2;
                int LA11_0 = input.LA(1);

                if ( (LA11_0==RULE_COMMENT_ANNOTATION||LA11_0==103) ) {
                    alt11=1;
                }


                switch (alt11) {
            	case 1 :
            	    // InternalSCTX.g:382:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:382:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:383:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getStateAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_15);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getStateRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop11;
                }
            } while (true);

            // InternalSCTX.g:400:3: ( (lv_initial_1_0= 'initial' ) )?
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==23) ) {
                alt12=1;
            }
            switch (alt12) {
                case 1 :
                    // InternalSCTX.g:401:4: (lv_initial_1_0= 'initial' )
                    {
                    // InternalSCTX.g:401:4: (lv_initial_1_0= 'initial' )
                    // InternalSCTX.g:402:5: lv_initial_1_0= 'initial'
                    {
                    lv_initial_1_0=(Token)match(input,23,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_initial_1_0, grammarAccess.getStateAccess().getInitialInitialKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStateRule());
                      					}
                      					setWithLastConsumed(current, "initial", true, "initial");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:414:3: ( (lv_final_2_0= 'final' ) )?
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==24) ) {
                alt13=1;
            }
            switch (alt13) {
                case 1 :
                    // InternalSCTX.g:415:4: (lv_final_2_0= 'final' )
                    {
                    // InternalSCTX.g:415:4: (lv_final_2_0= 'final' )
                    // InternalSCTX.g:416:5: lv_final_2_0= 'final'
                    {
                    lv_final_2_0=(Token)match(input,24,FollowSets000.FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_final_2_0, grammarAccess.getStateAccess().getFinalFinalKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStateRule());
                      					}
                      					setWithLastConsumed(current, "final", true, "final");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:428:3: ( (lv_violation_3_0= 'violation' ) )?
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==25) ) {
                alt14=1;
            }
            switch (alt14) {
                case 1 :
                    // InternalSCTX.g:429:4: (lv_violation_3_0= 'violation' )
                    {
                    // InternalSCTX.g:429:4: (lv_violation_3_0= 'violation' )
                    // InternalSCTX.g:430:5: lv_violation_3_0= 'violation'
                    {
                    lv_violation_3_0=(Token)match(input,25,FollowSets000.FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_violation_3_0, grammarAccess.getStateAccess().getViolationViolationKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStateRule());
                      					}
                      					setWithLastConsumed(current, "violation", true, "violation");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:442:3: ( (lv_connector_4_0= 'connector' ) )?
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==26) ) {
                alt15=1;
            }
            switch (alt15) {
                case 1 :
                    // InternalSCTX.g:443:4: (lv_connector_4_0= 'connector' )
                    {
                    // InternalSCTX.g:443:4: (lv_connector_4_0= 'connector' )
                    // InternalSCTX.g:444:5: lv_connector_4_0= 'connector'
                    {
                    lv_connector_4_0=(Token)match(input,26,FollowSets000.FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_connector_4_0, grammarAccess.getStateAccess().getConnectorConnectorKeyword_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStateRule());
                      					}
                      					setWithLastConsumed(current, "connector", true, "connector");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:456:3: ( ( 'state' )=>otherlv_5= 'state' )
            // InternalSCTX.g:457:4: ( 'state' )=>otherlv_5= 'state'
            {
            otherlv_5=(Token)match(input,27,FollowSets000.FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_5, grammarAccess.getStateAccess().getStateKeyword_5());
              			
            }

            }

            // InternalSCTX.g:463:3: ( (lv_name_6_0= RULE_ID ) )
            // InternalSCTX.g:464:4: (lv_name_6_0= RULE_ID )
            {
            // InternalSCTX.g:464:4: (lv_name_6_0= RULE_ID )
            // InternalSCTX.g:465:5: lv_name_6_0= RULE_ID
            {
            lv_name_6_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_20); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_6_0, grammarAccess.getStateAccess().getNameIDTerminalRuleCall_6_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getStateRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_6_0,
              						"de.cau.cs.kieler.annotations.Annotations.ID");
              				
            }

            }


            }

            // InternalSCTX.g:481:3: ( (lv_label_7_0= RULE_STRING ) )?
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==RULE_STRING) ) {
                alt16=1;
            }
            switch (alt16) {
                case 1 :
                    // InternalSCTX.g:482:4: (lv_label_7_0= RULE_STRING )
                    {
                    // InternalSCTX.g:482:4: (lv_label_7_0= RULE_STRING )
                    // InternalSCTX.g:483:5: lv_label_7_0= RULE_STRING
                    {
                    lv_label_7_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_label_7_0, grammarAccess.getStateAccess().getLabelSTRINGTerminalRuleCall_7_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStateRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"label",
                      						lv_label_7_0,
                      						"de.cau.cs.kieler.annotations.Annotations.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:499:3: ( (otherlv_8= 'is' ( (lv_reference_9_0= ruleScopeCall ) ) (otherlv_10= 'schedule' ( (lv_schedule_11_0= ruleScheduleObjectReference ) )+ )? ) | ( (otherlv_12= 'extends' ( (otherlv_13= RULE_ID ) ) (otherlv_14= ',' ( (otherlv_15= RULE_ID ) ) )* )? (otherlv_16= 'schedule' ( (lv_schedule_17_0= ruleScheduleObjectReference ) )+ )? otherlv_18= '{' ( (lv_declarations_19_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_20_0= ruleLocalAction ) )* ( ( (lv_regions_21_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_22_0= ruleRegion ) )* ) otherlv_23= '}' ) )?
            int alt27=3;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==28) ) {
                alt27=1;
            }
            else if ( (LA27_0==19||LA27_0==21||LA27_0==29) ) {
                alt27=2;
            }
            switch (alt27) {
                case 1 :
                    // InternalSCTX.g:500:4: (otherlv_8= 'is' ( (lv_reference_9_0= ruleScopeCall ) ) (otherlv_10= 'schedule' ( (lv_schedule_11_0= ruleScheduleObjectReference ) )+ )? )
                    {
                    // InternalSCTX.g:500:4: (otherlv_8= 'is' ( (lv_reference_9_0= ruleScopeCall ) ) (otherlv_10= 'schedule' ( (lv_schedule_11_0= ruleScheduleObjectReference ) )+ )? )
                    // InternalSCTX.g:501:5: otherlv_8= 'is' ( (lv_reference_9_0= ruleScopeCall ) ) (otherlv_10= 'schedule' ( (lv_schedule_11_0= ruleScheduleObjectReference ) )+ )?
                    {
                    otherlv_8=(Token)match(input,28,FollowSets000.FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_8, grammarAccess.getStateAccess().getIsKeyword_8_0_0());
                      				
                    }
                    // InternalSCTX.g:505:5: ( (lv_reference_9_0= ruleScopeCall ) )
                    // InternalSCTX.g:506:6: (lv_reference_9_0= ruleScopeCall )
                    {
                    // InternalSCTX.g:506:6: (lv_reference_9_0= ruleScopeCall )
                    // InternalSCTX.g:507:7: lv_reference_9_0= ruleScopeCall
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getStateAccess().getReferenceScopeCallParserRuleCall_8_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_23);
                    lv_reference_9_0=ruleScopeCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getStateRule());
                      							}
                      							set(
                      								current,
                      								"reference",
                      								lv_reference_9_0,
                      								"de.cau.cs.kieler.sccharts.text.SCTX.ScopeCall");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:524:5: (otherlv_10= 'schedule' ( (lv_schedule_11_0= ruleScheduleObjectReference ) )+ )?
                    int alt18=2;
                    int LA18_0 = input.LA(1);

                    if ( (LA18_0==29) ) {
                        alt18=1;
                    }
                    switch (alt18) {
                        case 1 :
                            // InternalSCTX.g:525:6: otherlv_10= 'schedule' ( (lv_schedule_11_0= ruleScheduleObjectReference ) )+
                            {
                            otherlv_10=(Token)match(input,29,FollowSets000.FOLLOW_9); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_10, grammarAccess.getStateAccess().getScheduleKeyword_8_0_2_0());
                              					
                            }
                            // InternalSCTX.g:529:6: ( (lv_schedule_11_0= ruleScheduleObjectReference ) )+
                            int cnt17=0;
                            loop17:
                            do {
                                int alt17=2;
                                int LA17_0 = input.LA(1);

                                if ( (LA17_0==RULE_ID) ) {
                                    alt17=1;
                                }


                                switch (alt17) {
                            	case 1 :
                            	    // InternalSCTX.g:530:7: (lv_schedule_11_0= ruleScheduleObjectReference )
                            	    {
                            	    // InternalSCTX.g:530:7: (lv_schedule_11_0= ruleScheduleObjectReference )
                            	    // InternalSCTX.g:531:8: lv_schedule_11_0= ruleScheduleObjectReference
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getStateAccess().getScheduleScheduleObjectReferenceParserRuleCall_8_0_2_1_0());
                            	      							
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_24);
                            	    lv_schedule_11_0=ruleScheduleObjectReference();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getStateRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"schedule",
                            	      									lv_schedule_11_0,
                            	      									"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt17 >= 1 ) break loop17;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(17, input);
                                        throw eee;
                                }
                                cnt17++;
                            } while (true);


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:551:4: ( (otherlv_12= 'extends' ( (otherlv_13= RULE_ID ) ) (otherlv_14= ',' ( (otherlv_15= RULE_ID ) ) )* )? (otherlv_16= 'schedule' ( (lv_schedule_17_0= ruleScheduleObjectReference ) )+ )? otherlv_18= '{' ( (lv_declarations_19_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_20_0= ruleLocalAction ) )* ( ( (lv_regions_21_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_22_0= ruleRegion ) )* ) otherlv_23= '}' )
                    {
                    // InternalSCTX.g:551:4: ( (otherlv_12= 'extends' ( (otherlv_13= RULE_ID ) ) (otherlv_14= ',' ( (otherlv_15= RULE_ID ) ) )* )? (otherlv_16= 'schedule' ( (lv_schedule_17_0= ruleScheduleObjectReference ) )+ )? otherlv_18= '{' ( (lv_declarations_19_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_20_0= ruleLocalAction ) )* ( ( (lv_regions_21_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_22_0= ruleRegion ) )* ) otherlv_23= '}' )
                    // InternalSCTX.g:552:5: (otherlv_12= 'extends' ( (otherlv_13= RULE_ID ) ) (otherlv_14= ',' ( (otherlv_15= RULE_ID ) ) )* )? (otherlv_16= 'schedule' ( (lv_schedule_17_0= ruleScheduleObjectReference ) )+ )? otherlv_18= '{' ( (lv_declarations_19_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_20_0= ruleLocalAction ) )* ( ( (lv_regions_21_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_22_0= ruleRegion ) )* ) otherlv_23= '}'
                    {
                    // InternalSCTX.g:552:5: (otherlv_12= 'extends' ( (otherlv_13= RULE_ID ) ) (otherlv_14= ',' ( (otherlv_15= RULE_ID ) ) )* )?
                    int alt20=2;
                    int LA20_0 = input.LA(1);

                    if ( (LA20_0==19) ) {
                        alt20=1;
                    }
                    switch (alt20) {
                        case 1 :
                            // InternalSCTX.g:553:6: otherlv_12= 'extends' ( (otherlv_13= RULE_ID ) ) (otherlv_14= ',' ( (otherlv_15= RULE_ID ) ) )*
                            {
                            otherlv_12=(Token)match(input,19,FollowSets000.FOLLOW_9); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_12, grammarAccess.getStateAccess().getExtendsKeyword_8_1_0_0());
                              					
                            }
                            // InternalSCTX.g:557:6: ( (otherlv_13= RULE_ID ) )
                            // InternalSCTX.g:558:7: (otherlv_13= RULE_ID )
                            {
                            // InternalSCTX.g:558:7: (otherlv_13= RULE_ID )
                            // InternalSCTX.g:559:8: otherlv_13= RULE_ID
                            {
                            if ( state.backtracking==0 ) {

                              								/* */
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getStateRule());
                              								}
                              							
                            }
                            otherlv_13=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_25); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(otherlv_13, grammarAccess.getStateAccess().getBaseStatesStateCrossReference_8_1_0_1_0());
                              							
                            }

                            }


                            }

                            // InternalSCTX.g:573:6: (otherlv_14= ',' ( (otherlv_15= RULE_ID ) ) )*
                            loop19:
                            do {
                                int alt19=2;
                                int LA19_0 = input.LA(1);

                                if ( (LA19_0==20) ) {
                                    alt19=1;
                                }


                                switch (alt19) {
                            	case 1 :
                            	    // InternalSCTX.g:574:7: otherlv_14= ',' ( (otherlv_15= RULE_ID ) )
                            	    {
                            	    otherlv_14=(Token)match(input,20,FollowSets000.FOLLOW_9); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_14, grammarAccess.getStateAccess().getCommaKeyword_8_1_0_2_0());
                            	      						
                            	    }
                            	    // InternalSCTX.g:578:7: ( (otherlv_15= RULE_ID ) )
                            	    // InternalSCTX.g:579:8: (otherlv_15= RULE_ID )
                            	    {
                            	    // InternalSCTX.g:579:8: (otherlv_15= RULE_ID )
                            	    // InternalSCTX.g:580:9: otherlv_15= RULE_ID
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									/* */
                            	      								
                            	    }
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElement(grammarAccess.getStateRule());
                            	      									}
                            	      								
                            	    }
                            	    otherlv_15=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_25); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									newLeafNode(otherlv_15, grammarAccess.getStateAccess().getBaseStatesStateCrossReference_8_1_0_2_1_0());
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop19;
                                }
                            } while (true);


                            }
                            break;

                    }

                    // InternalSCTX.g:596:5: (otherlv_16= 'schedule' ( (lv_schedule_17_0= ruleScheduleObjectReference ) )+ )?
                    int alt22=2;
                    int LA22_0 = input.LA(1);

                    if ( (LA22_0==29) ) {
                        alt22=1;
                    }
                    switch (alt22) {
                        case 1 :
                            // InternalSCTX.g:597:6: otherlv_16= 'schedule' ( (lv_schedule_17_0= ruleScheduleObjectReference ) )+
                            {
                            otherlv_16=(Token)match(input,29,FollowSets000.FOLLOW_9); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_16, grammarAccess.getStateAccess().getScheduleKeyword_8_1_1_0());
                              					
                            }
                            // InternalSCTX.g:601:6: ( (lv_schedule_17_0= ruleScheduleObjectReference ) )+
                            int cnt21=0;
                            loop21:
                            do {
                                int alt21=2;
                                int LA21_0 = input.LA(1);

                                if ( (LA21_0==RULE_ID) ) {
                                    alt21=1;
                                }


                                switch (alt21) {
                            	case 1 :
                            	    // InternalSCTX.g:602:7: (lv_schedule_17_0= ruleScheduleObjectReference )
                            	    {
                            	    // InternalSCTX.g:602:7: (lv_schedule_17_0= ruleScheduleObjectReference )
                            	    // InternalSCTX.g:603:8: lv_schedule_17_0= ruleScheduleObjectReference
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getStateAccess().getScheduleScheduleObjectReferenceParserRuleCall_8_1_1_1_0());
                            	      							
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_26);
                            	    lv_schedule_17_0=ruleScheduleObjectReference();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getStateRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"schedule",
                            	      									lv_schedule_17_0,
                            	      									"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt21 >= 1 ) break loop21;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(21, input);
                                        throw eee;
                                }
                                cnt21++;
                            } while (true);


                            }
                            break;

                    }

                    otherlv_18=(Token)match(input,21,FollowSets000.FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_18, grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_8_1_2());
                      				
                    }
                    // InternalSCTX.g:625:5: ( (lv_declarations_19_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )*
                    loop23:
                    do {
                        int alt23=2;
                        alt23 = dfa23.predict(input);
                        switch (alt23) {
                    	case 1 :
                    	    // InternalSCTX.g:626:6: (lv_declarations_19_0= ruleDeclarationOrMethodWithKeywordWOSemicolon )
                    	    {
                    	    // InternalSCTX.g:626:6: (lv_declarations_19_0= ruleDeclarationOrMethodWithKeywordWOSemicolon )
                    	    // InternalSCTX.g:627:7: lv_declarations_19_0= ruleDeclarationOrMethodWithKeywordWOSemicolon
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getStateAccess().getDeclarationsDeclarationOrMethodWithKeywordWOSemicolonParserRuleCall_8_1_3_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_11);
                    	    lv_declarations_19_0=ruleDeclarationOrMethodWithKeywordWOSemicolon();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getStateRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"declarations",
                    	      								lv_declarations_19_0,
                    	      								"de.cau.cs.kieler.sccharts.text.SCTX.DeclarationOrMethodWithKeywordWOSemicolon");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop23;
                        }
                    } while (true);

                    // InternalSCTX.g:644:5: ( (lv_actions_20_0= ruleLocalAction ) )*
                    loop24:
                    do {
                        int alt24=2;
                        alt24 = dfa24.predict(input);
                        switch (alt24) {
                    	case 1 :
                    	    // InternalSCTX.g:645:6: (lv_actions_20_0= ruleLocalAction )
                    	    {
                    	    // InternalSCTX.g:645:6: (lv_actions_20_0= ruleLocalAction )
                    	    // InternalSCTX.g:646:7: lv_actions_20_0= ruleLocalAction
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getStateAccess().getActionsLocalActionParserRuleCall_8_1_4_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_12);
                    	    lv_actions_20_0=ruleLocalAction();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getStateRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"actions",
                    	      								lv_actions_20_0,
                    	      								"de.cau.cs.kieler.sccharts.text.SCTX.LocalAction");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop24;
                        }
                    } while (true);

                    // InternalSCTX.g:663:5: ( ( (lv_regions_21_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_22_0= ruleRegion ) )* )
                    int alt26=2;
                    alt26 = dfa26.predict(input);
                    switch (alt26) {
                        case 1 :
                            // InternalSCTX.g:664:6: ( (lv_regions_21_0= ruleImplicitControlflowRegion ) )
                            {
                            // InternalSCTX.g:664:6: ( (lv_regions_21_0= ruleImplicitControlflowRegion ) )
                            // InternalSCTX.g:665:7: (lv_regions_21_0= ruleImplicitControlflowRegion )
                            {
                            // InternalSCTX.g:665:7: (lv_regions_21_0= ruleImplicitControlflowRegion )
                            // InternalSCTX.g:666:8: lv_regions_21_0= ruleImplicitControlflowRegion
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getStateAccess().getRegionsImplicitControlflowRegionParserRuleCall_8_1_5_0_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_13);
                            lv_regions_21_0=ruleImplicitControlflowRegion();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getStateRule());
                              								}
                              								add(
                              									current,
                              									"regions",
                              									lv_regions_21_0,
                              									"de.cau.cs.kieler.sccharts.text.SCTX.ImplicitControlflowRegion");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalSCTX.g:684:6: ( (lv_regions_22_0= ruleRegion ) )*
                            {
                            // InternalSCTX.g:684:6: ( (lv_regions_22_0= ruleRegion ) )*
                            loop25:
                            do {
                                int alt25=2;
                                int LA25_0 = input.LA(1);

                                if ( (LA25_0==RULE_COMMENT_ANNOTATION||LA25_0==24||(LA25_0>=42 && LA25_0<=43)||LA25_0==47||LA25_0==103) ) {
                                    alt25=1;
                                }


                                switch (alt25) {
                            	case 1 :
                            	    // InternalSCTX.g:685:7: (lv_regions_22_0= ruleRegion )
                            	    {
                            	    // InternalSCTX.g:685:7: (lv_regions_22_0= ruleRegion )
                            	    // InternalSCTX.g:686:8: lv_regions_22_0= ruleRegion
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getStateAccess().getRegionsRegionParserRuleCall_8_1_5_1_0());
                            	      							
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_14);
                            	    lv_regions_22_0=ruleRegion();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getStateRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"regions",
                            	      									lv_regions_22_0,
                            	      									"de.cau.cs.kieler.sccharts.text.SCTX.Region");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop25;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_23=(Token)match(input,22,FollowSets000.FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_23, grammarAccess.getStateAccess().getRightCurlyBracketKeyword_8_1_6());
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:710:3: ( (lv_outgoingTransitions_24_0= ruleTransition ) )*
            loop28:
            do {
                int alt28=2;
                alt28 = dfa28.predict(input);
                switch (alt28) {
            	case 1 :
            	    // InternalSCTX.g:711:4: (lv_outgoingTransitions_24_0= ruleTransition )
            	    {
            	    // InternalSCTX.g:711:4: (lv_outgoingTransitions_24_0= ruleTransition )
            	    // InternalSCTX.g:712:5: lv_outgoingTransitions_24_0= ruleTransition
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getStateAccess().getOutgoingTransitionsTransitionParserRuleCall_9_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_27);
            	    lv_outgoingTransitions_24_0=ruleTransition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getStateRule());
            	      					}
            	      					add(
            	      						current,
            	      						"outgoingTransitions",
            	      						lv_outgoingTransitions_24_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.Transition");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop28;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleState"


    // $ANTLR start "entryRuleImplicitState"
    // InternalSCTX.g:733:1: entryRuleImplicitState returns [EObject current=null] : iv_ruleImplicitState= ruleImplicitState EOF ;
    public final EObject entryRuleImplicitState() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImplicitState = null;


        try {
            // InternalSCTX.g:733:54: (iv_ruleImplicitState= ruleImplicitState EOF )
            // InternalSCTX.g:734:2: iv_ruleImplicitState= ruleImplicitState EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImplicitStateRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleImplicitState=ruleImplicitState();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImplicitState; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImplicitState"


    // $ANTLR start "ruleImplicitState"
    // InternalSCTX.g:740:1: ruleImplicitState returns [EObject current=null] : ( () ( (lv_regions_1_0= ruleRegion ) )+ ) ;
    public final EObject ruleImplicitState() throws RecognitionException {
        EObject current = null;

        EObject lv_regions_1_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:746:2: ( ( () ( (lv_regions_1_0= ruleRegion ) )+ ) )
            // InternalSCTX.g:747:2: ( () ( (lv_regions_1_0= ruleRegion ) )+ )
            {
            // InternalSCTX.g:747:2: ( () ( (lv_regions_1_0= ruleRegion ) )+ )
            // InternalSCTX.g:748:3: () ( (lv_regions_1_0= ruleRegion ) )+
            {
            // InternalSCTX.g:748:3: ()
            // InternalSCTX.g:749:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getImplicitStateAccess().getStateAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:758:3: ( (lv_regions_1_0= ruleRegion ) )+
            int cnt29=0;
            loop29:
            do {
                int alt29=2;
                int LA29_0 = input.LA(1);

                if ( (LA29_0==RULE_COMMENT_ANNOTATION||LA29_0==24||(LA29_0>=42 && LA29_0<=43)||LA29_0==47||LA29_0==103) ) {
                    alt29=1;
                }


                switch (alt29) {
            	case 1 :
            	    // InternalSCTX.g:759:4: (lv_regions_1_0= ruleRegion )
            	    {
            	    // InternalSCTX.g:759:4: (lv_regions_1_0= ruleRegion )
            	    // InternalSCTX.g:760:5: lv_regions_1_0= ruleRegion
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getImplicitStateAccess().getRegionsRegionParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_28);
            	    lv_regions_1_0=ruleRegion();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getImplicitStateRule());
            	      					}
            	      					add(
            	      						current,
            	      						"regions",
            	      						lv_regions_1_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.Region");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt29 >= 1 ) break loop29;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(29, input);
                        throw eee;
                }
                cnt29++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImplicitState"


    // $ANTLR start "entryRuleScopeCall"
    // InternalSCTX.g:781:1: entryRuleScopeCall returns [EObject current=null] : iv_ruleScopeCall= ruleScopeCall EOF ;
    public final EObject entryRuleScopeCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScopeCall = null;


        try {
            // InternalSCTX.g:781:50: (iv_ruleScopeCall= ruleScopeCall EOF )
            // InternalSCTX.g:782:2: iv_ruleScopeCall= ruleScopeCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScopeCallRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScopeCall=ruleScopeCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScopeCall; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScopeCall"


    // $ANTLR start "ruleScopeCall"
    // InternalSCTX.g:788:1: ruleScopeCall returns [EObject current=null] : ( ( (lv_super_0_0= 'super.' ) )? ( (otherlv_1= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleScopeParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleScopeParameter ) ) )* otherlv_6= ')' ) | (otherlv_7= '(' otherlv_8= ')' ) )? ) ;
    public final EObject ruleScopeCall() throws RecognitionException {
        EObject current = null;

        Token lv_super_0_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        EObject lv_parameters_3_0 = null;

        EObject lv_parameters_5_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:794:2: ( ( ( (lv_super_0_0= 'super.' ) )? ( (otherlv_1= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleScopeParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleScopeParameter ) ) )* otherlv_6= ')' ) | (otherlv_7= '(' otherlv_8= ')' ) )? ) )
            // InternalSCTX.g:795:2: ( ( (lv_super_0_0= 'super.' ) )? ( (otherlv_1= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleScopeParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleScopeParameter ) ) )* otherlv_6= ')' ) | (otherlv_7= '(' otherlv_8= ')' ) )? )
            {
            // InternalSCTX.g:795:2: ( ( (lv_super_0_0= 'super.' ) )? ( (otherlv_1= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleScopeParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleScopeParameter ) ) )* otherlv_6= ')' ) | (otherlv_7= '(' otherlv_8= ')' ) )? )
            // InternalSCTX.g:796:3: ( (lv_super_0_0= 'super.' ) )? ( (otherlv_1= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleScopeParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleScopeParameter ) ) )* otherlv_6= ')' ) | (otherlv_7= '(' otherlv_8= ')' ) )?
            {
            // InternalSCTX.g:796:3: ( (lv_super_0_0= 'super.' ) )?
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==30) ) {
                alt30=1;
            }
            switch (alt30) {
                case 1 :
                    // InternalSCTX.g:797:4: (lv_super_0_0= 'super.' )
                    {
                    // InternalSCTX.g:797:4: (lv_super_0_0= 'super.' )
                    // InternalSCTX.g:798:5: lv_super_0_0= 'super.'
                    {
                    lv_super_0_0=(Token)match(input,30,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_super_0_0, grammarAccess.getScopeCallAccess().getSuperSuperKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getScopeCallRule());
                      					}
                      					setWithLastConsumed(current, "super", true, "super.");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:810:3: ( (otherlv_1= RULE_ID ) )
            // InternalSCTX.g:811:4: (otherlv_1= RULE_ID )
            {
            // InternalSCTX.g:811:4: (otherlv_1= RULE_ID )
            // InternalSCTX.g:812:5: otherlv_1= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getScopeCallRule());
              					}
              				
            }
            otherlv_1=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_29); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getScopeCallAccess().getScopeScopeCrossReference_1_0());
              				
            }

            }


            }

            // InternalSCTX.g:826:3: ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleScopeParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleScopeParameter ) ) )* otherlv_6= ')' ) | (otherlv_7= '(' otherlv_8= ')' ) )?
            int alt32=3;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==31) ) {
                int LA32_1 = input.LA(2);

                if ( (LA32_1==32) ) {
                    alt32=2;
                }
                else if ( ((LA32_1>=RULE_STRING && LA32_1<=RULE_COMMENT_ANNOTATION)||LA32_1==21||LA32_1==31||LA32_1==76||LA32_1==81||LA32_1==86||LA32_1==91||LA32_1==99||LA32_1==103||(LA32_1>=145 && LA32_1<=148)||LA32_1==159) ) {
                    alt32=1;
                }
            }
            switch (alt32) {
                case 1 :
                    // InternalSCTX.g:827:4: (otherlv_2= '(' ( (lv_parameters_3_0= ruleScopeParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleScopeParameter ) ) )* otherlv_6= ')' )
                    {
                    // InternalSCTX.g:827:4: (otherlv_2= '(' ( (lv_parameters_3_0= ruleScopeParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleScopeParameter ) ) )* otherlv_6= ')' )
                    // InternalSCTX.g:828:5: otherlv_2= '(' ( (lv_parameters_3_0= ruleScopeParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleScopeParameter ) ) )* otherlv_6= ')'
                    {
                    otherlv_2=(Token)match(input,31,FollowSets000.FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getScopeCallAccess().getLeftParenthesisKeyword_2_0_0());
                      				
                    }
                    // InternalSCTX.g:832:5: ( (lv_parameters_3_0= ruleScopeParameter ) )
                    // InternalSCTX.g:833:6: (lv_parameters_3_0= ruleScopeParameter )
                    {
                    // InternalSCTX.g:833:6: (lv_parameters_3_0= ruleScopeParameter )
                    // InternalSCTX.g:834:7: lv_parameters_3_0= ruleScopeParameter
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getScopeCallAccess().getParametersScopeParameterParserRuleCall_2_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_31);
                    lv_parameters_3_0=ruleScopeParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getScopeCallRule());
                      							}
                      							add(
                      								current,
                      								"parameters",
                      								lv_parameters_3_0,
                      								"de.cau.cs.kieler.sccharts.text.SCTX.ScopeParameter");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:851:5: (otherlv_4= ',' ( (lv_parameters_5_0= ruleScopeParameter ) ) )*
                    loop31:
                    do {
                        int alt31=2;
                        int LA31_0 = input.LA(1);

                        if ( (LA31_0==20) ) {
                            alt31=1;
                        }


                        switch (alt31) {
                    	case 1 :
                    	    // InternalSCTX.g:852:6: otherlv_4= ',' ( (lv_parameters_5_0= ruleScopeParameter ) )
                    	    {
                    	    otherlv_4=(Token)match(input,20,FollowSets000.FOLLOW_30); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_4, grammarAccess.getScopeCallAccess().getCommaKeyword_2_0_2_0());
                    	      					
                    	    }
                    	    // InternalSCTX.g:856:6: ( (lv_parameters_5_0= ruleScopeParameter ) )
                    	    // InternalSCTX.g:857:7: (lv_parameters_5_0= ruleScopeParameter )
                    	    {
                    	    // InternalSCTX.g:857:7: (lv_parameters_5_0= ruleScopeParameter )
                    	    // InternalSCTX.g:858:8: lv_parameters_5_0= ruleScopeParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getScopeCallAccess().getParametersScopeParameterParserRuleCall_2_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_31);
                    	    lv_parameters_5_0=ruleScopeParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getScopeCallRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"parameters",
                    	      									lv_parameters_5_0,
                    	      									"de.cau.cs.kieler.sccharts.text.SCTX.ScopeParameter");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop31;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,32,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getScopeCallAccess().getRightParenthesisKeyword_2_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:882:4: (otherlv_7= '(' otherlv_8= ')' )
                    {
                    // InternalSCTX.g:882:4: (otherlv_7= '(' otherlv_8= ')' )
                    // InternalSCTX.g:883:5: otherlv_7= '(' otherlv_8= ')'
                    {
                    otherlv_7=(Token)match(input,31,FollowSets000.FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getScopeCallAccess().getLeftParenthesisKeyword_2_1_0());
                      				
                    }
                    otherlv_8=(Token)match(input,32,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_8, grammarAccess.getScopeCallAccess().getRightParenthesisKeyword_2_1_1());
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScopeCall"


    // $ANTLR start "entryRuleScopeParameter"
    // InternalSCTX.g:897:1: entryRuleScopeParameter returns [EObject current=null] : iv_ruleScopeParameter= ruleScopeParameter EOF ;
    public final EObject entryRuleScopeParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScopeParameter = null;


        try {
            // InternalSCTX.g:897:55: (iv_ruleScopeParameter= ruleScopeParameter EOF )
            // InternalSCTX.g:898:2: iv_ruleScopeParameter= ruleScopeParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScopeParameterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScopeParameter=ruleScopeParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScopeParameter; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScopeParameter"


    // $ANTLR start "ruleScopeParameter"
    // InternalSCTX.g:904:1: ruleScopeParameter returns [EObject current=null] : ( ( ( ( (lv_accessType_0_0= ruleParameterAccessType ) ) ( (lv_expression_1_0= ruleValuedObjectReference ) ) ) | ( (lv_expression_2_0= ruleExpression ) ) ) (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )? ) ;
    public final EObject ruleScopeParameter() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Enumerator lv_accessType_0_0 = null;

        EObject lv_expression_1_0 = null;

        EObject lv_expression_2_0 = null;

        EObject lv_explicitBindingIndices_6_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:910:2: ( ( ( ( ( (lv_accessType_0_0= ruleParameterAccessType ) ) ( (lv_expression_1_0= ruleValuedObjectReference ) ) ) | ( (lv_expression_2_0= ruleExpression ) ) ) (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )? ) )
            // InternalSCTX.g:911:2: ( ( ( ( (lv_accessType_0_0= ruleParameterAccessType ) ) ( (lv_expression_1_0= ruleValuedObjectReference ) ) ) | ( (lv_expression_2_0= ruleExpression ) ) ) (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )? )
            {
            // InternalSCTX.g:911:2: ( ( ( ( (lv_accessType_0_0= ruleParameterAccessType ) ) ( (lv_expression_1_0= ruleValuedObjectReference ) ) ) | ( (lv_expression_2_0= ruleExpression ) ) ) (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )? )
            // InternalSCTX.g:912:3: ( ( ( (lv_accessType_0_0= ruleParameterAccessType ) ) ( (lv_expression_1_0= ruleValuedObjectReference ) ) ) | ( (lv_expression_2_0= ruleExpression ) ) ) (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )?
            {
            // InternalSCTX.g:912:3: ( ( ( (lv_accessType_0_0= ruleParameterAccessType ) ) ( (lv_expression_1_0= ruleValuedObjectReference ) ) ) | ( (lv_expression_2_0= ruleExpression ) ) )
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==86||LA33_0==159) ) {
                alt33=1;
            }
            else if ( ((LA33_0>=RULE_STRING && LA33_0<=RULE_COMMENT_ANNOTATION)||LA33_0==21||LA33_0==31||LA33_0==76||LA33_0==81||LA33_0==91||LA33_0==99||LA33_0==103||(LA33_0>=145 && LA33_0<=148)) ) {
                alt33=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 33, 0, input);

                throw nvae;
            }
            switch (alt33) {
                case 1 :
                    // InternalSCTX.g:913:4: ( ( (lv_accessType_0_0= ruleParameterAccessType ) ) ( (lv_expression_1_0= ruleValuedObjectReference ) ) )
                    {
                    // InternalSCTX.g:913:4: ( ( (lv_accessType_0_0= ruleParameterAccessType ) ) ( (lv_expression_1_0= ruleValuedObjectReference ) ) )
                    // InternalSCTX.g:914:5: ( (lv_accessType_0_0= ruleParameterAccessType ) ) ( (lv_expression_1_0= ruleValuedObjectReference ) )
                    {
                    // InternalSCTX.g:914:5: ( (lv_accessType_0_0= ruleParameterAccessType ) )
                    // InternalSCTX.g:915:6: (lv_accessType_0_0= ruleParameterAccessType )
                    {
                    // InternalSCTX.g:915:6: (lv_accessType_0_0= ruleParameterAccessType )
                    // InternalSCTX.g:916:7: lv_accessType_0_0= ruleParameterAccessType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getScopeParameterAccess().getAccessTypeParameterAccessTypeEnumRuleCall_0_0_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_33);
                    lv_accessType_0_0=ruleParameterAccessType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getScopeParameterRule());
                      							}
                      							set(
                      								current,
                      								"accessType",
                      								lv_accessType_0_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ParameterAccessType");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:933:5: ( (lv_expression_1_0= ruleValuedObjectReference ) )
                    // InternalSCTX.g:934:6: (lv_expression_1_0= ruleValuedObjectReference )
                    {
                    // InternalSCTX.g:934:6: (lv_expression_1_0= ruleValuedObjectReference )
                    // InternalSCTX.g:935:7: lv_expression_1_0= ruleValuedObjectReference
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getScopeParameterAccess().getExpressionValuedObjectReferenceParserRuleCall_0_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_34);
                    lv_expression_1_0=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getScopeParameterRule());
                      							}
                      							set(
                      								current,
                      								"expression",
                      								lv_expression_1_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:954:4: ( (lv_expression_2_0= ruleExpression ) )
                    {
                    // InternalSCTX.g:954:4: ( (lv_expression_2_0= ruleExpression ) )
                    // InternalSCTX.g:955:5: (lv_expression_2_0= ruleExpression )
                    {
                    // InternalSCTX.g:955:5: (lv_expression_2_0= ruleExpression )
                    // InternalSCTX.g:956:6: lv_expression_2_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getScopeParameterAccess().getExpressionExpressionParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_34);
                    lv_expression_2_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getScopeParameterRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_2_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:974:3: (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )?
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==33) ) {
                alt35=1;
            }
            switch (alt35) {
                case 1 :
                    // InternalSCTX.g:975:4: otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )*
                    {
                    otherlv_3=(Token)match(input,33,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getScopeParameterAccess().getToKeyword_1_0());
                      			
                    }
                    // InternalSCTX.g:979:4: ( (otherlv_4= RULE_ID ) )
                    // InternalSCTX.g:980:5: (otherlv_4= RULE_ID )
                    {
                    // InternalSCTX.g:980:5: (otherlv_4= RULE_ID )
                    // InternalSCTX.g:981:6: otherlv_4= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      						/* */
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getScopeParameterRule());
                      						}
                      					
                    }
                    otherlv_4=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_4, grammarAccess.getScopeParameterAccess().getExplicitBindingValuedObjectCrossReference_1_1_0());
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:995:4: (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )*
                    loop34:
                    do {
                        int alt34=2;
                        int LA34_0 = input.LA(1);

                        if ( (LA34_0==34) ) {
                            alt34=1;
                        }


                        switch (alt34) {
                    	case 1 :
                    	    // InternalSCTX.g:996:5: otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']'
                    	    {
                    	    otherlv_5=(Token)match(input,34,FollowSets000.FOLLOW_30); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_5, grammarAccess.getScopeParameterAccess().getLeftSquareBracketKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:1000:5: ( (lv_explicitBindingIndices_6_0= ruleExpression ) )
                    	    // InternalSCTX.g:1001:6: (lv_explicitBindingIndices_6_0= ruleExpression )
                    	    {
                    	    // InternalSCTX.g:1001:6: (lv_explicitBindingIndices_6_0= ruleExpression )
                    	    // InternalSCTX.g:1002:7: lv_explicitBindingIndices_6_0= ruleExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getScopeParameterAccess().getExplicitBindingIndicesExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_36);
                    	    lv_explicitBindingIndices_6_0=ruleExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getScopeParameterRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"explicitBindingIndices",
                    	      								lv_explicitBindingIndices_6_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }

                    	    otherlv_7=(Token)match(input,35,FollowSets000.FOLLOW_35); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_7, grammarAccess.getScopeParameterAccess().getRightSquareBracketKeyword_1_2_2());
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop34;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScopeParameter"


    // $ANTLR start "entryRuleTransition"
    // InternalSCTX.g:1029:1: entryRuleTransition returns [EObject current=null] : iv_ruleTransition= ruleTransition EOF ;
    public final EObject entryRuleTransition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTransition = null;


        try {
            // InternalSCTX.g:1029:51: (iv_ruleTransition= ruleTransition EOF )
            // InternalSCTX.g:1030:2: iv_ruleTransition= ruleTransition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTransitionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTransition=ruleTransition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTransition; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTransition"


    // $ANTLR start "ruleTransition"
    // InternalSCTX.g:1036:1: ruleTransition returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* ( (lv_delay_2_0= ruleDelayType ) )? (otherlv_3= 'if' ( (lv_triggerDelay_4_0= RULE_INT ) )? ( ( (lv_trigger_5_0= ruleBoolScheduleExpression ) ) | ( (lv_trigger_6_0= ruleAtomicExpression ) ) ) (otherlv_7= 'Pr=' ( (lv_triggerProbability_8_0= RULE_FLOAT ) ) )? ( (lv_nondeterministic_9_0= 'nondeterministic' ) )? )? (otherlv_10= 'do' ( (lv_effects_11_0= ruleEffect ) ) (otherlv_12= ';' ( (lv_effects_13_0= ruleEffect ) ) )* )? ( (lv_preemption_14_0= rulePreemptionType ) ) ( (otherlv_15= RULE_ID ) ) ( (lv_deferred_16_0= ruleDeferredType ) )? ( (lv_history_17_0= ruleHistoryType ) )? (otherlv_18= 'label' ( (lv_label_19_0= RULE_STRING ) ) )? ) ;
    public final EObject ruleTransition() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        Token lv_triggerDelay_4_0=null;
        Token otherlv_7=null;
        Token lv_triggerProbability_8_0=null;
        Token lv_nondeterministic_9_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_15=null;
        Token otherlv_18=null;
        Token lv_label_19_0=null;
        EObject lv_annotations_1_0 = null;

        Enumerator lv_delay_2_0 = null;

        EObject lv_trigger_5_0 = null;

        EObject lv_trigger_6_0 = null;

        EObject lv_effects_11_0 = null;

        EObject lv_effects_13_0 = null;

        Enumerator lv_preemption_14_0 = null;

        Enumerator lv_deferred_16_0 = null;

        Enumerator lv_history_17_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:1042:2: ( ( () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* ( (lv_delay_2_0= ruleDelayType ) )? (otherlv_3= 'if' ( (lv_triggerDelay_4_0= RULE_INT ) )? ( ( (lv_trigger_5_0= ruleBoolScheduleExpression ) ) | ( (lv_trigger_6_0= ruleAtomicExpression ) ) ) (otherlv_7= 'Pr=' ( (lv_triggerProbability_8_0= RULE_FLOAT ) ) )? ( (lv_nondeterministic_9_0= 'nondeterministic' ) )? )? (otherlv_10= 'do' ( (lv_effects_11_0= ruleEffect ) ) (otherlv_12= ';' ( (lv_effects_13_0= ruleEffect ) ) )* )? ( (lv_preemption_14_0= rulePreemptionType ) ) ( (otherlv_15= RULE_ID ) ) ( (lv_deferred_16_0= ruleDeferredType ) )? ( (lv_history_17_0= ruleHistoryType ) )? (otherlv_18= 'label' ( (lv_label_19_0= RULE_STRING ) ) )? ) )
            // InternalSCTX.g:1043:2: ( () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* ( (lv_delay_2_0= ruleDelayType ) )? (otherlv_3= 'if' ( (lv_triggerDelay_4_0= RULE_INT ) )? ( ( (lv_trigger_5_0= ruleBoolScheduleExpression ) ) | ( (lv_trigger_6_0= ruleAtomicExpression ) ) ) (otherlv_7= 'Pr=' ( (lv_triggerProbability_8_0= RULE_FLOAT ) ) )? ( (lv_nondeterministic_9_0= 'nondeterministic' ) )? )? (otherlv_10= 'do' ( (lv_effects_11_0= ruleEffect ) ) (otherlv_12= ';' ( (lv_effects_13_0= ruleEffect ) ) )* )? ( (lv_preemption_14_0= rulePreemptionType ) ) ( (otherlv_15= RULE_ID ) ) ( (lv_deferred_16_0= ruleDeferredType ) )? ( (lv_history_17_0= ruleHistoryType ) )? (otherlv_18= 'label' ( (lv_label_19_0= RULE_STRING ) ) )? )
            {
            // InternalSCTX.g:1043:2: ( () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* ( (lv_delay_2_0= ruleDelayType ) )? (otherlv_3= 'if' ( (lv_triggerDelay_4_0= RULE_INT ) )? ( ( (lv_trigger_5_0= ruleBoolScheduleExpression ) ) | ( (lv_trigger_6_0= ruleAtomicExpression ) ) ) (otherlv_7= 'Pr=' ( (lv_triggerProbability_8_0= RULE_FLOAT ) ) )? ( (lv_nondeterministic_9_0= 'nondeterministic' ) )? )? (otherlv_10= 'do' ( (lv_effects_11_0= ruleEffect ) ) (otherlv_12= ';' ( (lv_effects_13_0= ruleEffect ) ) )* )? ( (lv_preemption_14_0= rulePreemptionType ) ) ( (otherlv_15= RULE_ID ) ) ( (lv_deferred_16_0= ruleDeferredType ) )? ( (lv_history_17_0= ruleHistoryType ) )? (otherlv_18= 'label' ( (lv_label_19_0= RULE_STRING ) ) )? )
            // InternalSCTX.g:1044:3: () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* ( (lv_delay_2_0= ruleDelayType ) )? (otherlv_3= 'if' ( (lv_triggerDelay_4_0= RULE_INT ) )? ( ( (lv_trigger_5_0= ruleBoolScheduleExpression ) ) | ( (lv_trigger_6_0= ruleAtomicExpression ) ) ) (otherlv_7= 'Pr=' ( (lv_triggerProbability_8_0= RULE_FLOAT ) ) )? ( (lv_nondeterministic_9_0= 'nondeterministic' ) )? )? (otherlv_10= 'do' ( (lv_effects_11_0= ruleEffect ) ) (otherlv_12= ';' ( (lv_effects_13_0= ruleEffect ) ) )* )? ( (lv_preemption_14_0= rulePreemptionType ) ) ( (otherlv_15= RULE_ID ) ) ( (lv_deferred_16_0= ruleDeferredType ) )? ( (lv_history_17_0= ruleHistoryType ) )? (otherlv_18= 'label' ( (lv_label_19_0= RULE_STRING ) ) )?
            {
            // InternalSCTX.g:1044:3: ()
            // InternalSCTX.g:1045:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getTransitionAccess().getTransitionAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:1054:3: ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )*
            loop36:
            do {
                int alt36=2;
                int LA36_0 = input.LA(1);

                if ( (LA36_0==RULE_COMMENT_ANNOTATION||LA36_0==103) ) {
                    alt36=1;
                }


                switch (alt36) {
            	case 1 :
            	    // InternalSCTX.g:1055:4: (lv_annotations_1_0= ruleRestrictedTypeAnnotation )
            	    {
            	    // InternalSCTX.g:1055:4: (lv_annotations_1_0= ruleRestrictedTypeAnnotation )
            	    // InternalSCTX.g:1056:5: lv_annotations_1_0= ruleRestrictedTypeAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getTransitionAccess().getAnnotationsRestrictedTypeAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_37);
            	    lv_annotations_1_0=ruleRestrictedTypeAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getTransitionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.RestrictedTypeAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop36;
                }
            } while (true);

            // InternalSCTX.g:1073:3: ( (lv_delay_2_0= ruleDelayType ) )?
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( ((LA37_0>=107 && LA37_0<=110)) ) {
                alt37=1;
            }
            switch (alt37) {
                case 1 :
                    // InternalSCTX.g:1074:4: (lv_delay_2_0= ruleDelayType )
                    {
                    // InternalSCTX.g:1074:4: (lv_delay_2_0= ruleDelayType )
                    // InternalSCTX.g:1075:5: lv_delay_2_0= ruleDelayType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTransitionAccess().getDelayDelayTypeEnumRuleCall_2_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_37);
                    lv_delay_2_0=ruleDelayType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTransitionRule());
                      					}
                      					set(
                      						current,
                      						"delay",
                      						lv_delay_2_0,
                      						"de.cau.cs.kieler.sccharts.text.SCTX.DelayType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:1092:3: (otherlv_3= 'if' ( (lv_triggerDelay_4_0= RULE_INT ) )? ( ( (lv_trigger_5_0= ruleBoolScheduleExpression ) ) | ( (lv_trigger_6_0= ruleAtomicExpression ) ) ) (otherlv_7= 'Pr=' ( (lv_triggerProbability_8_0= RULE_FLOAT ) ) )? ( (lv_nondeterministic_9_0= 'nondeterministic' ) )? )?
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( (LA42_0==36) ) {
                alt42=1;
            }
            switch (alt42) {
                case 1 :
                    // InternalSCTX.g:1093:4: otherlv_3= 'if' ( (lv_triggerDelay_4_0= RULE_INT ) )? ( ( (lv_trigger_5_0= ruleBoolScheduleExpression ) ) | ( (lv_trigger_6_0= ruleAtomicExpression ) ) ) (otherlv_7= 'Pr=' ( (lv_triggerProbability_8_0= RULE_FLOAT ) ) )? ( (lv_nondeterministic_9_0= 'nondeterministic' ) )?
                    {
                    otherlv_3=(Token)match(input,36,FollowSets000.FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getTransitionAccess().getIfKeyword_3_0());
                      			
                    }
                    // InternalSCTX.g:1097:4: ( (lv_triggerDelay_4_0= RULE_INT ) )?
                    int alt38=2;
                    alt38 = dfa38.predict(input);
                    switch (alt38) {
                        case 1 :
                            // InternalSCTX.g:1098:5: (lv_triggerDelay_4_0= RULE_INT )
                            {
                            // InternalSCTX.g:1098:5: (lv_triggerDelay_4_0= RULE_INT )
                            // InternalSCTX.g:1099:6: lv_triggerDelay_4_0= RULE_INT
                            {
                            lv_triggerDelay_4_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_38); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_triggerDelay_4_0, grammarAccess.getTransitionAccess().getTriggerDelayINTTerminalRuleCall_3_1_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getTransitionRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"triggerDelay",
                              							lv_triggerDelay_4_0,
                              							"de.cau.cs.kieler.annotations.Annotations.INT");
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSCTX.g:1115:4: ( ( (lv_trigger_5_0= ruleBoolScheduleExpression ) ) | ( (lv_trigger_6_0= ruleAtomicExpression ) ) )
                    int alt39=2;
                    alt39 = dfa39.predict(input);
                    switch (alt39) {
                        case 1 :
                            // InternalSCTX.g:1116:5: ( (lv_trigger_5_0= ruleBoolScheduleExpression ) )
                            {
                            // InternalSCTX.g:1116:5: ( (lv_trigger_5_0= ruleBoolScheduleExpression ) )
                            // InternalSCTX.g:1117:6: (lv_trigger_5_0= ruleBoolScheduleExpression )
                            {
                            // InternalSCTX.g:1117:6: (lv_trigger_5_0= ruleBoolScheduleExpression )
                            // InternalSCTX.g:1118:7: lv_trigger_5_0= ruleBoolScheduleExpression
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getTransitionAccess().getTriggerBoolScheduleExpressionParserRuleCall_3_2_0_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_39);
                            lv_trigger_5_0=ruleBoolScheduleExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getTransitionRule());
                              							}
                              							set(
                              								current,
                              								"trigger",
                              								lv_trigger_5_0,
                              								"de.cau.cs.kieler.kexpressions.KExpressions.BoolScheduleExpression");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalSCTX.g:1136:5: ( (lv_trigger_6_0= ruleAtomicExpression ) )
                            {
                            // InternalSCTX.g:1136:5: ( (lv_trigger_6_0= ruleAtomicExpression ) )
                            // InternalSCTX.g:1137:6: (lv_trigger_6_0= ruleAtomicExpression )
                            {
                            // InternalSCTX.g:1137:6: (lv_trigger_6_0= ruleAtomicExpression )
                            // InternalSCTX.g:1138:7: lv_trigger_6_0= ruleAtomicExpression
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getTransitionAccess().getTriggerAtomicExpressionParserRuleCall_3_2_1_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_39);
                            lv_trigger_6_0=ruleAtomicExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getTransitionRule());
                              							}
                              							set(
                              								current,
                              								"trigger",
                              								lv_trigger_6_0,
                              								"de.cau.cs.kieler.kexpressions.KExpressions.AtomicExpression");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalSCTX.g:1156:4: (otherlv_7= 'Pr=' ( (lv_triggerProbability_8_0= RULE_FLOAT ) ) )?
                    int alt40=2;
                    int LA40_0 = input.LA(1);

                    if ( (LA40_0==37) ) {
                        alt40=1;
                    }
                    switch (alt40) {
                        case 1 :
                            // InternalSCTX.g:1157:5: otherlv_7= 'Pr=' ( (lv_triggerProbability_8_0= RULE_FLOAT ) )
                            {
                            otherlv_7=(Token)match(input,37,FollowSets000.FOLLOW_40); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_7, grammarAccess.getTransitionAccess().getPrKeyword_3_3_0());
                              				
                            }
                            // InternalSCTX.g:1161:5: ( (lv_triggerProbability_8_0= RULE_FLOAT ) )
                            // InternalSCTX.g:1162:6: (lv_triggerProbability_8_0= RULE_FLOAT )
                            {
                            // InternalSCTX.g:1162:6: (lv_triggerProbability_8_0= RULE_FLOAT )
                            // InternalSCTX.g:1163:7: lv_triggerProbability_8_0= RULE_FLOAT
                            {
                            lv_triggerProbability_8_0=(Token)match(input,RULE_FLOAT,FollowSets000.FOLLOW_41); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_triggerProbability_8_0, grammarAccess.getTransitionAccess().getTriggerProbabilityFLOATTerminalRuleCall_3_3_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getTransitionRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"triggerProbability",
                              								lv_triggerProbability_8_0,
                              								"de.cau.cs.kieler.annotations.Annotations.FLOAT");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalSCTX.g:1180:4: ( (lv_nondeterministic_9_0= 'nondeterministic' ) )?
                    int alt41=2;
                    int LA41_0 = input.LA(1);

                    if ( (LA41_0==38) ) {
                        alt41=1;
                    }
                    switch (alt41) {
                        case 1 :
                            // InternalSCTX.g:1181:5: (lv_nondeterministic_9_0= 'nondeterministic' )
                            {
                            // InternalSCTX.g:1181:5: (lv_nondeterministic_9_0= 'nondeterministic' )
                            // InternalSCTX.g:1182:6: lv_nondeterministic_9_0= 'nondeterministic'
                            {
                            lv_nondeterministic_9_0=(Token)match(input,38,FollowSets000.FOLLOW_37); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_nondeterministic_9_0, grammarAccess.getTransitionAccess().getNondeterministicNondeterministicKeyword_3_4_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getTransitionRule());
                              						}
                              						setWithLastConsumed(current, "nondeterministic", true, "nondeterministic");
                              					
                            }

                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalSCTX.g:1195:3: (otherlv_10= 'do' ( (lv_effects_11_0= ruleEffect ) ) (otherlv_12= ';' ( (lv_effects_13_0= ruleEffect ) ) )* )?
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==39) ) {
                alt44=1;
            }
            switch (alt44) {
                case 1 :
                    // InternalSCTX.g:1196:4: otherlv_10= 'do' ( (lv_effects_11_0= ruleEffect ) ) (otherlv_12= ';' ( (lv_effects_13_0= ruleEffect ) ) )*
                    {
                    otherlv_10=(Token)match(input,39,FollowSets000.FOLLOW_42); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getTransitionAccess().getDoKeyword_4_0());
                      			
                    }
                    // InternalSCTX.g:1200:4: ( (lv_effects_11_0= ruleEffect ) )
                    // InternalSCTX.g:1201:5: (lv_effects_11_0= ruleEffect )
                    {
                    // InternalSCTX.g:1201:5: (lv_effects_11_0= ruleEffect )
                    // InternalSCTX.g:1202:6: lv_effects_11_0= ruleEffect
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTransitionAccess().getEffectsEffectParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_43);
                    lv_effects_11_0=ruleEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTransitionRule());
                      						}
                      						add(
                      							current,
                      							"effects",
                      							lv_effects_11_0,
                      							"de.cau.cs.kieler.sccharts.text.SCTX.Effect");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:1219:4: (otherlv_12= ';' ( (lv_effects_13_0= ruleEffect ) ) )*
                    loop43:
                    do {
                        int alt43=2;
                        int LA43_0 = input.LA(1);

                        if ( (LA43_0==40) ) {
                            alt43=1;
                        }


                        switch (alt43) {
                    	case 1 :
                    	    // InternalSCTX.g:1220:5: otherlv_12= ';' ( (lv_effects_13_0= ruleEffect ) )
                    	    {
                    	    otherlv_12=(Token)match(input,40,FollowSets000.FOLLOW_42); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_12, grammarAccess.getTransitionAccess().getSemicolonKeyword_4_2_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:1224:5: ( (lv_effects_13_0= ruleEffect ) )
                    	    // InternalSCTX.g:1225:6: (lv_effects_13_0= ruleEffect )
                    	    {
                    	    // InternalSCTX.g:1225:6: (lv_effects_13_0= ruleEffect )
                    	    // InternalSCTX.g:1226:7: lv_effects_13_0= ruleEffect
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getTransitionAccess().getEffectsEffectParserRuleCall_4_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_43);
                    	    lv_effects_13_0=ruleEffect();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getTransitionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"effects",
                    	      								lv_effects_13_0,
                    	      								"de.cau.cs.kieler.sccharts.text.SCTX.Effect");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop43;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalSCTX.g:1245:3: ( (lv_preemption_14_0= rulePreemptionType ) )
            // InternalSCTX.g:1246:4: (lv_preemption_14_0= rulePreemptionType )
            {
            // InternalSCTX.g:1246:4: (lv_preemption_14_0= rulePreemptionType )
            // InternalSCTX.g:1247:5: lv_preemption_14_0= rulePreemptionType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTransitionAccess().getPreemptionPreemptionTypeEnumRuleCall_5_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_9);
            lv_preemption_14_0=rulePreemptionType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTransitionRule());
              					}
              					set(
              						current,
              						"preemption",
              						lv_preemption_14_0,
              						"de.cau.cs.kieler.sccharts.text.SCTX.PreemptionType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:1264:3: ( (otherlv_15= RULE_ID ) )
            // InternalSCTX.g:1265:4: (otherlv_15= RULE_ID )
            {
            // InternalSCTX.g:1265:4: (otherlv_15= RULE_ID )
            // InternalSCTX.g:1266:5: otherlv_15= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getTransitionRule());
              					}
              				
            }
            otherlv_15=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_44); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_15, grammarAccess.getTransitionAccess().getTargetStateStateCrossReference_6_0());
              				
            }

            }


            }

            // InternalSCTX.g:1280:3: ( (lv_deferred_16_0= ruleDeferredType ) )?
            int alt45=2;
            int LA45_0 = input.LA(1);

            if ( ((LA45_0>=114 && LA45_0<=115)) ) {
                alt45=1;
            }
            switch (alt45) {
                case 1 :
                    // InternalSCTX.g:1281:4: (lv_deferred_16_0= ruleDeferredType )
                    {
                    // InternalSCTX.g:1281:4: (lv_deferred_16_0= ruleDeferredType )
                    // InternalSCTX.g:1282:5: lv_deferred_16_0= ruleDeferredType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTransitionAccess().getDeferredDeferredTypeEnumRuleCall_7_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_45);
                    lv_deferred_16_0=ruleDeferredType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTransitionRule());
                      					}
                      					set(
                      						current,
                      						"deferred",
                      						lv_deferred_16_0,
                      						"de.cau.cs.kieler.sccharts.text.SCTX.DeferredType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:1299:3: ( (lv_history_17_0= ruleHistoryType ) )?
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( ((LA46_0>=111 && LA46_0<=113)) ) {
                alt46=1;
            }
            switch (alt46) {
                case 1 :
                    // InternalSCTX.g:1300:4: (lv_history_17_0= ruleHistoryType )
                    {
                    // InternalSCTX.g:1300:4: (lv_history_17_0= ruleHistoryType )
                    // InternalSCTX.g:1301:5: lv_history_17_0= ruleHistoryType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTransitionAccess().getHistoryHistoryTypeEnumRuleCall_8_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_46);
                    lv_history_17_0=ruleHistoryType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTransitionRule());
                      					}
                      					set(
                      						current,
                      						"history",
                      						lv_history_17_0,
                      						"de.cau.cs.kieler.sccharts.text.SCTX.HistoryType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:1318:3: (otherlv_18= 'label' ( (lv_label_19_0= RULE_STRING ) ) )?
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==41) ) {
                alt47=1;
            }
            switch (alt47) {
                case 1 :
                    // InternalSCTX.g:1319:4: otherlv_18= 'label' ( (lv_label_19_0= RULE_STRING ) )
                    {
                    otherlv_18=(Token)match(input,41,FollowSets000.FOLLOW_47); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getTransitionAccess().getLabelKeyword_9_0());
                      			
                    }
                    // InternalSCTX.g:1323:4: ( (lv_label_19_0= RULE_STRING ) )
                    // InternalSCTX.g:1324:5: (lv_label_19_0= RULE_STRING )
                    {
                    // InternalSCTX.g:1324:5: (lv_label_19_0= RULE_STRING )
                    // InternalSCTX.g:1325:6: lv_label_19_0= RULE_STRING
                    {
                    lv_label_19_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_19_0, grammarAccess.getTransitionAccess().getLabelSTRINGTerminalRuleCall_9_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getTransitionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_19_0,
                      							"de.cau.cs.kieler.annotations.Annotations.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTransition"


    // $ANTLR start "entryRuleRegion"
    // InternalSCTX.g:1346:1: entryRuleRegion returns [EObject current=null] : iv_ruleRegion= ruleRegion EOF ;
    public final EObject entryRuleRegion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRegion = null;


        try {
            // InternalSCTX.g:1346:47: (iv_ruleRegion= ruleRegion EOF )
            // InternalSCTX.g:1347:2: iv_ruleRegion= ruleRegion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRegionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRegion=ruleRegion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRegion; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRegion"


    // $ANTLR start "ruleRegion"
    // InternalSCTX.g:1353:1: ruleRegion returns [EObject current=null] : (this_ControlflowRegion_0= ruleControlflowRegion | this_DataflowRegion_1= ruleDataflowRegion ) ;
    public final EObject ruleRegion() throws RecognitionException {
        EObject current = null;

        EObject this_ControlflowRegion_0 = null;

        EObject this_DataflowRegion_1 = null;



        	enterRule();

        try {
            // InternalSCTX.g:1359:2: ( (this_ControlflowRegion_0= ruleControlflowRegion | this_DataflowRegion_1= ruleDataflowRegion ) )
            // InternalSCTX.g:1360:2: (this_ControlflowRegion_0= ruleControlflowRegion | this_DataflowRegion_1= ruleDataflowRegion )
            {
            // InternalSCTX.g:1360:2: (this_ControlflowRegion_0= ruleControlflowRegion | this_DataflowRegion_1= ruleDataflowRegion )
            int alt48=2;
            switch ( input.LA(1) ) {
            case RULE_COMMENT_ANNOTATION:
                {
                int LA48_1 = input.LA(2);

                if ( (synpred52_InternalSCTX()) ) {
                    alt48=1;
                }
                else if ( (true) ) {
                    alt48=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 48, 1, input);

                    throw nvae;
                }
                }
                break;
            case 103:
                {
                int LA48_2 = input.LA(2);

                if ( (synpred52_InternalSCTX()) ) {
                    alt48=1;
                }
                else if ( (true) ) {
                    alt48=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 48, 2, input);

                    throw nvae;
                }
                }
                break;
            case 42:
                {
                int LA48_3 = input.LA(2);

                if ( (synpred52_InternalSCTX()) ) {
                    alt48=1;
                }
                else if ( (true) ) {
                    alt48=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 48, 3, input);

                    throw nvae;
                }
                }
                break;
            case 24:
            case 43:
                {
                alt48=1;
                }
                break;
            case 47:
                {
                alt48=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 48, 0, input);

                throw nvae;
            }

            switch (alt48) {
                case 1 :
                    // InternalSCTX.g:1361:3: this_ControlflowRegion_0= ruleControlflowRegion
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getRegionAccess().getControlflowRegionParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ControlflowRegion_0=ruleControlflowRegion();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ControlflowRegion_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:1373:3: this_DataflowRegion_1= ruleDataflowRegion
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getRegionAccess().getDataflowRegionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_DataflowRegion_1=ruleDataflowRegion();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DataflowRegion_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRegion"


    // $ANTLR start "entryRuleImplicitControlflowRegion"
    // InternalSCTX.g:1388:1: entryRuleImplicitControlflowRegion returns [EObject current=null] : iv_ruleImplicitControlflowRegion= ruleImplicitControlflowRegion EOF ;
    public final EObject entryRuleImplicitControlflowRegion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImplicitControlflowRegion = null;


        try {
            // InternalSCTX.g:1388:66: (iv_ruleImplicitControlflowRegion= ruleImplicitControlflowRegion EOF )
            // InternalSCTX.g:1389:2: iv_ruleImplicitControlflowRegion= ruleImplicitControlflowRegion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImplicitControlflowRegionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleImplicitControlflowRegion=ruleImplicitControlflowRegion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImplicitControlflowRegion; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImplicitControlflowRegion"


    // $ANTLR start "ruleImplicitControlflowRegion"
    // InternalSCTX.g:1395:1: ruleImplicitControlflowRegion returns [EObject current=null] : ( () ( (lv_states_1_0= ruleState ) )+ ) ;
    public final EObject ruleImplicitControlflowRegion() throws RecognitionException {
        EObject current = null;

        EObject lv_states_1_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:1401:2: ( ( () ( (lv_states_1_0= ruleState ) )+ ) )
            // InternalSCTX.g:1402:2: ( () ( (lv_states_1_0= ruleState ) )+ )
            {
            // InternalSCTX.g:1402:2: ( () ( (lv_states_1_0= ruleState ) )+ )
            // InternalSCTX.g:1403:3: () ( (lv_states_1_0= ruleState ) )+
            {
            // InternalSCTX.g:1403:3: ()
            // InternalSCTX.g:1404:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getImplicitControlflowRegionAccess().getControlflowRegionAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:1413:3: ( (lv_states_1_0= ruleState ) )+
            int cnt49=0;
            loop49:
            do {
                int alt49=2;
                int LA49_0 = input.LA(1);

                if ( (LA49_0==RULE_COMMENT_ANNOTATION||(LA49_0>=23 && LA49_0<=27)||LA49_0==103) ) {
                    alt49=1;
                }


                switch (alt49) {
            	case 1 :
            	    // InternalSCTX.g:1414:4: (lv_states_1_0= ruleState )
            	    {
            	    // InternalSCTX.g:1414:4: (lv_states_1_0= ruleState )
            	    // InternalSCTX.g:1415:5: lv_states_1_0= ruleState
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getImplicitControlflowRegionAccess().getStatesStateParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_48);
            	    lv_states_1_0=ruleState();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getImplicitControlflowRegionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"states",
            	      						lv_states_1_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.State");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt49 >= 1 ) break loop49;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(49, input);
                        throw eee;
                }
                cnt49++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImplicitControlflowRegion"


    // $ANTLR start "entryRuleControlflowRegion"
    // InternalSCTX.g:1436:1: entryRuleControlflowRegion returns [EObject current=null] : iv_ruleControlflowRegion= ruleControlflowRegion EOF ;
    public final EObject entryRuleControlflowRegion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleControlflowRegion = null;


        try {
            // InternalSCTX.g:1436:58: (iv_ruleControlflowRegion= ruleControlflowRegion EOF )
            // InternalSCTX.g:1437:2: iv_ruleControlflowRegion= ruleControlflowRegion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getControlflowRegionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleControlflowRegion=ruleControlflowRegion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleControlflowRegion; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleControlflowRegion"


    // $ANTLR start "ruleControlflowRegion"
    // InternalSCTX.g:1443:1: ruleControlflowRegion returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_override_2_0= 'override' ) )? ( (lv_final_3_0= 'final' ) )? otherlv_4= 'region' ( (lv_name_5_0= ruleExtendedID ) )? ( (lv_label_6_0= RULE_STRING ) )? ( (otherlv_7= 'is' ( (lv_reference_8_0= ruleScopeCall ) ) (otherlv_9= 'for' ( (lv_counterVariable_10_0= ruleCounterVariable ) ) otherlv_11= ':' ( (lv_forStart_12_0= ruleIntOrReference ) ) (otherlv_13= 'to' ( (lv_forEnd_14_0= ruleIntOrReference ) ) )? )? (otherlv_15= 'schedule' ( (lv_schedule_16_0= ruleScheduleObjectReference ) )+ )? ) | ( (otherlv_17= 'for' ( (lv_counterVariable_18_0= ruleCounterVariable ) ) otherlv_19= ':' ( (lv_forStart_20_0= ruleIntOrReference ) ) (otherlv_21= 'to' ( (lv_forEnd_22_0= ruleIntOrReference ) ) )? )? (otherlv_23= 'schedule' ( (lv_schedule_24_0= ruleScheduleObjectReference ) )+ )? ( (otherlv_25= '{' ( (lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_27_0= ruleLocalAction ) )* ( ( (lv_states_28_0= ruleImplicitState ) ) | ( (lv_states_29_0= ruleState ) )+ ) otherlv_30= '}' ) | (otherlv_31= ':' ( (lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_33_0= ruleLocalAction ) )* ( (lv_states_34_0= ruleState ) )* ) ) ) ) ) ;
    public final EObject ruleControlflowRegion() throws RecognitionException {
        EObject current = null;

        Token lv_override_2_0=null;
        Token lv_final_3_0=null;
        Token otherlv_4=null;
        Token lv_label_6_0=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token otherlv_25=null;
        Token otherlv_30=null;
        Token otherlv_31=null;
        EObject lv_annotations_1_0 = null;

        AntlrDatatypeRuleToken lv_name_5_0 = null;

        EObject lv_reference_8_0 = null;

        EObject lv_counterVariable_10_0 = null;

        EObject lv_forStart_12_0 = null;

        EObject lv_forEnd_14_0 = null;

        EObject lv_schedule_16_0 = null;

        EObject lv_counterVariable_18_0 = null;

        EObject lv_forStart_20_0 = null;

        EObject lv_forEnd_22_0 = null;

        EObject lv_schedule_24_0 = null;

        EObject lv_declarations_26_0 = null;

        EObject lv_actions_27_0 = null;

        EObject lv_states_28_0 = null;

        EObject lv_states_29_0 = null;

        EObject lv_declarations_32_0 = null;

        EObject lv_actions_33_0 = null;

        EObject lv_states_34_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:1449:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_override_2_0= 'override' ) )? ( (lv_final_3_0= 'final' ) )? otherlv_4= 'region' ( (lv_name_5_0= ruleExtendedID ) )? ( (lv_label_6_0= RULE_STRING ) )? ( (otherlv_7= 'is' ( (lv_reference_8_0= ruleScopeCall ) ) (otherlv_9= 'for' ( (lv_counterVariable_10_0= ruleCounterVariable ) ) otherlv_11= ':' ( (lv_forStart_12_0= ruleIntOrReference ) ) (otherlv_13= 'to' ( (lv_forEnd_14_0= ruleIntOrReference ) ) )? )? (otherlv_15= 'schedule' ( (lv_schedule_16_0= ruleScheduleObjectReference ) )+ )? ) | ( (otherlv_17= 'for' ( (lv_counterVariable_18_0= ruleCounterVariable ) ) otherlv_19= ':' ( (lv_forStart_20_0= ruleIntOrReference ) ) (otherlv_21= 'to' ( (lv_forEnd_22_0= ruleIntOrReference ) ) )? )? (otherlv_23= 'schedule' ( (lv_schedule_24_0= ruleScheduleObjectReference ) )+ )? ( (otherlv_25= '{' ( (lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_27_0= ruleLocalAction ) )* ( ( (lv_states_28_0= ruleImplicitState ) ) | ( (lv_states_29_0= ruleState ) )+ ) otherlv_30= '}' ) | (otherlv_31= ':' ( (lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_33_0= ruleLocalAction ) )* ( (lv_states_34_0= ruleState ) )* ) ) ) ) ) )
            // InternalSCTX.g:1450:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_override_2_0= 'override' ) )? ( (lv_final_3_0= 'final' ) )? otherlv_4= 'region' ( (lv_name_5_0= ruleExtendedID ) )? ( (lv_label_6_0= RULE_STRING ) )? ( (otherlv_7= 'is' ( (lv_reference_8_0= ruleScopeCall ) ) (otherlv_9= 'for' ( (lv_counterVariable_10_0= ruleCounterVariable ) ) otherlv_11= ':' ( (lv_forStart_12_0= ruleIntOrReference ) ) (otherlv_13= 'to' ( (lv_forEnd_14_0= ruleIntOrReference ) ) )? )? (otherlv_15= 'schedule' ( (lv_schedule_16_0= ruleScheduleObjectReference ) )+ )? ) | ( (otherlv_17= 'for' ( (lv_counterVariable_18_0= ruleCounterVariable ) ) otherlv_19= ':' ( (lv_forStart_20_0= ruleIntOrReference ) ) (otherlv_21= 'to' ( (lv_forEnd_22_0= ruleIntOrReference ) ) )? )? (otherlv_23= 'schedule' ( (lv_schedule_24_0= ruleScheduleObjectReference ) )+ )? ( (otherlv_25= '{' ( (lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_27_0= ruleLocalAction ) )* ( ( (lv_states_28_0= ruleImplicitState ) ) | ( (lv_states_29_0= ruleState ) )+ ) otherlv_30= '}' ) | (otherlv_31= ':' ( (lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_33_0= ruleLocalAction ) )* ( (lv_states_34_0= ruleState ) )* ) ) ) ) )
            {
            // InternalSCTX.g:1450:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_override_2_0= 'override' ) )? ( (lv_final_3_0= 'final' ) )? otherlv_4= 'region' ( (lv_name_5_0= ruleExtendedID ) )? ( (lv_label_6_0= RULE_STRING ) )? ( (otherlv_7= 'is' ( (lv_reference_8_0= ruleScopeCall ) ) (otherlv_9= 'for' ( (lv_counterVariable_10_0= ruleCounterVariable ) ) otherlv_11= ':' ( (lv_forStart_12_0= ruleIntOrReference ) ) (otherlv_13= 'to' ( (lv_forEnd_14_0= ruleIntOrReference ) ) )? )? (otherlv_15= 'schedule' ( (lv_schedule_16_0= ruleScheduleObjectReference ) )+ )? ) | ( (otherlv_17= 'for' ( (lv_counterVariable_18_0= ruleCounterVariable ) ) otherlv_19= ':' ( (lv_forStart_20_0= ruleIntOrReference ) ) (otherlv_21= 'to' ( (lv_forEnd_22_0= ruleIntOrReference ) ) )? )? (otherlv_23= 'schedule' ( (lv_schedule_24_0= ruleScheduleObjectReference ) )+ )? ( (otherlv_25= '{' ( (lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_27_0= ruleLocalAction ) )* ( ( (lv_states_28_0= ruleImplicitState ) ) | ( (lv_states_29_0= ruleState ) )+ ) otherlv_30= '}' ) | (otherlv_31= ':' ( (lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_33_0= ruleLocalAction ) )* ( (lv_states_34_0= ruleState ) )* ) ) ) ) )
            // InternalSCTX.g:1451:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_override_2_0= 'override' ) )? ( (lv_final_3_0= 'final' ) )? otherlv_4= 'region' ( (lv_name_5_0= ruleExtendedID ) )? ( (lv_label_6_0= RULE_STRING ) )? ( (otherlv_7= 'is' ( (lv_reference_8_0= ruleScopeCall ) ) (otherlv_9= 'for' ( (lv_counterVariable_10_0= ruleCounterVariable ) ) otherlv_11= ':' ( (lv_forStart_12_0= ruleIntOrReference ) ) (otherlv_13= 'to' ( (lv_forEnd_14_0= ruleIntOrReference ) ) )? )? (otherlv_15= 'schedule' ( (lv_schedule_16_0= ruleScheduleObjectReference ) )+ )? ) | ( (otherlv_17= 'for' ( (lv_counterVariable_18_0= ruleCounterVariable ) ) otherlv_19= ':' ( (lv_forStart_20_0= ruleIntOrReference ) ) (otherlv_21= 'to' ( (lv_forEnd_22_0= ruleIntOrReference ) ) )? )? (otherlv_23= 'schedule' ( (lv_schedule_24_0= ruleScheduleObjectReference ) )+ )? ( (otherlv_25= '{' ( (lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_27_0= ruleLocalAction ) )* ( ( (lv_states_28_0= ruleImplicitState ) ) | ( (lv_states_29_0= ruleState ) )+ ) otherlv_30= '}' ) | (otherlv_31= ':' ( (lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_33_0= ruleLocalAction ) )* ( (lv_states_34_0= ruleState ) )* ) ) ) )
            {
            // InternalSCTX.g:1451:3: ()
            // InternalSCTX.g:1452:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getControlflowRegionAccess().getControlflowRegionAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:1461:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop50:
            do {
                int alt50=2;
                int LA50_0 = input.LA(1);

                if ( (LA50_0==RULE_COMMENT_ANNOTATION||LA50_0==103) ) {
                    alt50=1;
                }


                switch (alt50) {
            	case 1 :
            	    // InternalSCTX.g:1462:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:1462:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCTX.g:1463:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getControlflowRegionAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_49);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop50;
                }
            } while (true);

            // InternalSCTX.g:1480:3: ( (lv_override_2_0= 'override' ) )?
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( (LA51_0==42) ) {
                alt51=1;
            }
            switch (alt51) {
                case 1 :
                    // InternalSCTX.g:1481:4: (lv_override_2_0= 'override' )
                    {
                    // InternalSCTX.g:1481:4: (lv_override_2_0= 'override' )
                    // InternalSCTX.g:1482:5: lv_override_2_0= 'override'
                    {
                    lv_override_2_0=(Token)match(input,42,FollowSets000.FOLLOW_50); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_override_2_0, grammarAccess.getControlflowRegionAccess().getOverrideOverrideKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getControlflowRegionRule());
                      					}
                      					setWithLastConsumed(current, "override", true, "override");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:1494:3: ( (lv_final_3_0= 'final' ) )?
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( (LA52_0==24) ) {
                alt52=1;
            }
            switch (alt52) {
                case 1 :
                    // InternalSCTX.g:1495:4: (lv_final_3_0= 'final' )
                    {
                    // InternalSCTX.g:1495:4: (lv_final_3_0= 'final' )
                    // InternalSCTX.g:1496:5: lv_final_3_0= 'final'
                    {
                    lv_final_3_0=(Token)match(input,24,FollowSets000.FOLLOW_51); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_final_3_0, grammarAccess.getControlflowRegionAccess().getFinalFinalKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getControlflowRegionRule());
                      					}
                      					setWithLastConsumed(current, "final", true, "final");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,43,FollowSets000.FOLLOW_52); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getControlflowRegionAccess().getRegionKeyword_4());
              		
            }
            // InternalSCTX.g:1512:3: ( (lv_name_5_0= ruleExtendedID ) )?
            int alt53=2;
            int LA53_0 = input.LA(1);

            if ( (LA53_0==RULE_ID) ) {
                alt53=1;
            }
            switch (alt53) {
                case 1 :
                    // InternalSCTX.g:1513:4: (lv_name_5_0= ruleExtendedID )
                    {
                    // InternalSCTX.g:1513:4: (lv_name_5_0= ruleExtendedID )
                    // InternalSCTX.g:1514:5: lv_name_5_0= ruleExtendedID
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getControlflowRegionAccess().getNameExtendedIDParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_53);
                    lv_name_5_0=ruleExtendedID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
                      					}
                      					set(
                      						current,
                      						"name",
                      						lv_name_5_0,
                      						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:1531:3: ( (lv_label_6_0= RULE_STRING ) )?
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==RULE_STRING) ) {
                alt54=1;
            }
            switch (alt54) {
                case 1 :
                    // InternalSCTX.g:1532:4: (lv_label_6_0= RULE_STRING )
                    {
                    // InternalSCTX.g:1532:4: (lv_label_6_0= RULE_STRING )
                    // InternalSCTX.g:1533:5: lv_label_6_0= RULE_STRING
                    {
                    lv_label_6_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_label_6_0, grammarAccess.getControlflowRegionAccess().getLabelSTRINGTerminalRuleCall_6_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getControlflowRegionRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"label",
                      						lv_label_6_0,
                      						"de.cau.cs.kieler.annotations.Annotations.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:1549:3: ( (otherlv_7= 'is' ( (lv_reference_8_0= ruleScopeCall ) ) (otherlv_9= 'for' ( (lv_counterVariable_10_0= ruleCounterVariable ) ) otherlv_11= ':' ( (lv_forStart_12_0= ruleIntOrReference ) ) (otherlv_13= 'to' ( (lv_forEnd_14_0= ruleIntOrReference ) ) )? )? (otherlv_15= 'schedule' ( (lv_schedule_16_0= ruleScheduleObjectReference ) )+ )? ) | ( (otherlv_17= 'for' ( (lv_counterVariable_18_0= ruleCounterVariable ) ) otherlv_19= ':' ( (lv_forStart_20_0= ruleIntOrReference ) ) (otherlv_21= 'to' ( (lv_forEnd_22_0= ruleIntOrReference ) ) )? )? (otherlv_23= 'schedule' ( (lv_schedule_24_0= ruleScheduleObjectReference ) )+ )? ( (otherlv_25= '{' ( (lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_27_0= ruleLocalAction ) )* ( ( (lv_states_28_0= ruleImplicitState ) ) | ( (lv_states_29_0= ruleState ) )+ ) otherlv_30= '}' ) | (otherlv_31= ':' ( (lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_33_0= ruleLocalAction ) )* ( (lv_states_34_0= ruleState ) )* ) ) ) )
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( (LA71_0==28) ) {
                alt71=1;
            }
            else if ( (LA71_0==21||LA71_0==29||(LA71_0>=44 && LA71_0<=45)) ) {
                alt71=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 71, 0, input);

                throw nvae;
            }
            switch (alt71) {
                case 1 :
                    // InternalSCTX.g:1550:4: (otherlv_7= 'is' ( (lv_reference_8_0= ruleScopeCall ) ) (otherlv_9= 'for' ( (lv_counterVariable_10_0= ruleCounterVariable ) ) otherlv_11= ':' ( (lv_forStart_12_0= ruleIntOrReference ) ) (otherlv_13= 'to' ( (lv_forEnd_14_0= ruleIntOrReference ) ) )? )? (otherlv_15= 'schedule' ( (lv_schedule_16_0= ruleScheduleObjectReference ) )+ )? )
                    {
                    // InternalSCTX.g:1550:4: (otherlv_7= 'is' ( (lv_reference_8_0= ruleScopeCall ) ) (otherlv_9= 'for' ( (lv_counterVariable_10_0= ruleCounterVariable ) ) otherlv_11= ':' ( (lv_forStart_12_0= ruleIntOrReference ) ) (otherlv_13= 'to' ( (lv_forEnd_14_0= ruleIntOrReference ) ) )? )? (otherlv_15= 'schedule' ( (lv_schedule_16_0= ruleScheduleObjectReference ) )+ )? )
                    // InternalSCTX.g:1551:5: otherlv_7= 'is' ( (lv_reference_8_0= ruleScopeCall ) ) (otherlv_9= 'for' ( (lv_counterVariable_10_0= ruleCounterVariable ) ) otherlv_11= ':' ( (lv_forStart_12_0= ruleIntOrReference ) ) (otherlv_13= 'to' ( (lv_forEnd_14_0= ruleIntOrReference ) ) )? )? (otherlv_15= 'schedule' ( (lv_schedule_16_0= ruleScheduleObjectReference ) )+ )?
                    {
                    otherlv_7=(Token)match(input,28,FollowSets000.FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getControlflowRegionAccess().getIsKeyword_7_0_0());
                      				
                    }
                    // InternalSCTX.g:1555:5: ( (lv_reference_8_0= ruleScopeCall ) )
                    // InternalSCTX.g:1556:6: (lv_reference_8_0= ruleScopeCall )
                    {
                    // InternalSCTX.g:1556:6: (lv_reference_8_0= ruleScopeCall )
                    // InternalSCTX.g:1557:7: lv_reference_8_0= ruleScopeCall
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getControlflowRegionAccess().getReferenceScopeCallParserRuleCall_7_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_55);
                    lv_reference_8_0=ruleScopeCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
                      							}
                      							set(
                      								current,
                      								"reference",
                      								lv_reference_8_0,
                      								"de.cau.cs.kieler.sccharts.text.SCTX.ScopeCall");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:1574:5: (otherlv_9= 'for' ( (lv_counterVariable_10_0= ruleCounterVariable ) ) otherlv_11= ':' ( (lv_forStart_12_0= ruleIntOrReference ) ) (otherlv_13= 'to' ( (lv_forEnd_14_0= ruleIntOrReference ) ) )? )?
                    int alt56=2;
                    int LA56_0 = input.LA(1);

                    if ( (LA56_0==44) ) {
                        alt56=1;
                    }
                    switch (alt56) {
                        case 1 :
                            // InternalSCTX.g:1575:6: otherlv_9= 'for' ( (lv_counterVariable_10_0= ruleCounterVariable ) ) otherlv_11= ':' ( (lv_forStart_12_0= ruleIntOrReference ) ) (otherlv_13= 'to' ( (lv_forEnd_14_0= ruleIntOrReference ) ) )?
                            {
                            otherlv_9=(Token)match(input,44,FollowSets000.FOLLOW_9); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_9, grammarAccess.getControlflowRegionAccess().getForKeyword_7_0_2_0());
                              					
                            }
                            // InternalSCTX.g:1579:6: ( (lv_counterVariable_10_0= ruleCounterVariable ) )
                            // InternalSCTX.g:1580:7: (lv_counterVariable_10_0= ruleCounterVariable )
                            {
                            // InternalSCTX.g:1580:7: (lv_counterVariable_10_0= ruleCounterVariable )
                            // InternalSCTX.g:1581:8: lv_counterVariable_10_0= ruleCounterVariable
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getControlflowRegionAccess().getCounterVariableCounterVariableParserRuleCall_7_0_2_1_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_56);
                            lv_counterVariable_10_0=ruleCounterVariable();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
                              								}
                              								set(
                              									current,
                              									"counterVariable",
                              									lv_counterVariable_10_0,
                              									"de.cau.cs.kieler.sccharts.text.SCTX.CounterVariable");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_11=(Token)match(input,45,FollowSets000.FOLLOW_57); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_11, grammarAccess.getControlflowRegionAccess().getColonKeyword_7_0_2_2());
                              					
                            }
                            // InternalSCTX.g:1602:6: ( (lv_forStart_12_0= ruleIntOrReference ) )
                            // InternalSCTX.g:1603:7: (lv_forStart_12_0= ruleIntOrReference )
                            {
                            // InternalSCTX.g:1603:7: (lv_forStart_12_0= ruleIntOrReference )
                            // InternalSCTX.g:1604:8: lv_forStart_12_0= ruleIntOrReference
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getControlflowRegionAccess().getForStartIntOrReferenceParserRuleCall_7_0_2_3_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_58);
                            lv_forStart_12_0=ruleIntOrReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
                              								}
                              								set(
                              									current,
                              									"forStart",
                              									lv_forStart_12_0,
                              									"de.cau.cs.kieler.sccharts.text.SCTX.IntOrReference");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalSCTX.g:1621:6: (otherlv_13= 'to' ( (lv_forEnd_14_0= ruleIntOrReference ) ) )?
                            int alt55=2;
                            int LA55_0 = input.LA(1);

                            if ( (LA55_0==33) ) {
                                alt55=1;
                            }
                            switch (alt55) {
                                case 1 :
                                    // InternalSCTX.g:1622:7: otherlv_13= 'to' ( (lv_forEnd_14_0= ruleIntOrReference ) )
                                    {
                                    otherlv_13=(Token)match(input,33,FollowSets000.FOLLOW_57); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_13, grammarAccess.getControlflowRegionAccess().getToKeyword_7_0_2_4_0());
                                      						
                                    }
                                    // InternalSCTX.g:1626:7: ( (lv_forEnd_14_0= ruleIntOrReference ) )
                                    // InternalSCTX.g:1627:8: (lv_forEnd_14_0= ruleIntOrReference )
                                    {
                                    // InternalSCTX.g:1627:8: (lv_forEnd_14_0= ruleIntOrReference )
                                    // InternalSCTX.g:1628:9: lv_forEnd_14_0= ruleIntOrReference
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getControlflowRegionAccess().getForEndIntOrReferenceParserRuleCall_7_0_2_4_1_0());
                                      								
                                    }
                                    pushFollow(FollowSets000.FOLLOW_59);
                                    lv_forEnd_14_0=ruleIntOrReference();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
                                      									}
                                      									set(
                                      										current,
                                      										"forEnd",
                                      										lv_forEnd_14_0,
                                      										"de.cau.cs.kieler.sccharts.text.SCTX.IntOrReference");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }

                    // InternalSCTX.g:1647:5: (otherlv_15= 'schedule' ( (lv_schedule_16_0= ruleScheduleObjectReference ) )+ )?
                    int alt58=2;
                    int LA58_0 = input.LA(1);

                    if ( (LA58_0==29) ) {
                        alt58=1;
                    }
                    switch (alt58) {
                        case 1 :
                            // InternalSCTX.g:1648:6: otherlv_15= 'schedule' ( (lv_schedule_16_0= ruleScheduleObjectReference ) )+
                            {
                            otherlv_15=(Token)match(input,29,FollowSets000.FOLLOW_9); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_15, grammarAccess.getControlflowRegionAccess().getScheduleKeyword_7_0_3_0());
                              					
                            }
                            // InternalSCTX.g:1652:6: ( (lv_schedule_16_0= ruleScheduleObjectReference ) )+
                            int cnt57=0;
                            loop57:
                            do {
                                int alt57=2;
                                int LA57_0 = input.LA(1);

                                if ( (LA57_0==RULE_ID) ) {
                                    alt57=1;
                                }


                                switch (alt57) {
                            	case 1 :
                            	    // InternalSCTX.g:1653:7: (lv_schedule_16_0= ruleScheduleObjectReference )
                            	    {
                            	    // InternalSCTX.g:1653:7: (lv_schedule_16_0= ruleScheduleObjectReference )
                            	    // InternalSCTX.g:1654:8: lv_schedule_16_0= ruleScheduleObjectReference
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getControlflowRegionAccess().getScheduleScheduleObjectReferenceParserRuleCall_7_0_3_1_0());
                            	      							
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_60);
                            	    lv_schedule_16_0=ruleScheduleObjectReference();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"schedule",
                            	      									lv_schedule_16_0,
                            	      									"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt57 >= 1 ) break loop57;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(57, input);
                                        throw eee;
                                }
                                cnt57++;
                            } while (true);


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:1674:4: ( (otherlv_17= 'for' ( (lv_counterVariable_18_0= ruleCounterVariable ) ) otherlv_19= ':' ( (lv_forStart_20_0= ruleIntOrReference ) ) (otherlv_21= 'to' ( (lv_forEnd_22_0= ruleIntOrReference ) ) )? )? (otherlv_23= 'schedule' ( (lv_schedule_24_0= ruleScheduleObjectReference ) )+ )? ( (otherlv_25= '{' ( (lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_27_0= ruleLocalAction ) )* ( ( (lv_states_28_0= ruleImplicitState ) ) | ( (lv_states_29_0= ruleState ) )+ ) otherlv_30= '}' ) | (otherlv_31= ':' ( (lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_33_0= ruleLocalAction ) )* ( (lv_states_34_0= ruleState ) )* ) ) )
                    {
                    // InternalSCTX.g:1674:4: ( (otherlv_17= 'for' ( (lv_counterVariable_18_0= ruleCounterVariable ) ) otherlv_19= ':' ( (lv_forStart_20_0= ruleIntOrReference ) ) (otherlv_21= 'to' ( (lv_forEnd_22_0= ruleIntOrReference ) ) )? )? (otherlv_23= 'schedule' ( (lv_schedule_24_0= ruleScheduleObjectReference ) )+ )? ( (otherlv_25= '{' ( (lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_27_0= ruleLocalAction ) )* ( ( (lv_states_28_0= ruleImplicitState ) ) | ( (lv_states_29_0= ruleState ) )+ ) otherlv_30= '}' ) | (otherlv_31= ':' ( (lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_33_0= ruleLocalAction ) )* ( (lv_states_34_0= ruleState ) )* ) ) )
                    // InternalSCTX.g:1675:5: (otherlv_17= 'for' ( (lv_counterVariable_18_0= ruleCounterVariable ) ) otherlv_19= ':' ( (lv_forStart_20_0= ruleIntOrReference ) ) (otherlv_21= 'to' ( (lv_forEnd_22_0= ruleIntOrReference ) ) )? )? (otherlv_23= 'schedule' ( (lv_schedule_24_0= ruleScheduleObjectReference ) )+ )? ( (otherlv_25= '{' ( (lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_27_0= ruleLocalAction ) )* ( ( (lv_states_28_0= ruleImplicitState ) ) | ( (lv_states_29_0= ruleState ) )+ ) otherlv_30= '}' ) | (otherlv_31= ':' ( (lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_33_0= ruleLocalAction ) )* ( (lv_states_34_0= ruleState ) )* ) )
                    {
                    // InternalSCTX.g:1675:5: (otherlv_17= 'for' ( (lv_counterVariable_18_0= ruleCounterVariable ) ) otherlv_19= ':' ( (lv_forStart_20_0= ruleIntOrReference ) ) (otherlv_21= 'to' ( (lv_forEnd_22_0= ruleIntOrReference ) ) )? )?
                    int alt60=2;
                    int LA60_0 = input.LA(1);

                    if ( (LA60_0==44) ) {
                        alt60=1;
                    }
                    switch (alt60) {
                        case 1 :
                            // InternalSCTX.g:1676:6: otherlv_17= 'for' ( (lv_counterVariable_18_0= ruleCounterVariable ) ) otherlv_19= ':' ( (lv_forStart_20_0= ruleIntOrReference ) ) (otherlv_21= 'to' ( (lv_forEnd_22_0= ruleIntOrReference ) ) )?
                            {
                            otherlv_17=(Token)match(input,44,FollowSets000.FOLLOW_9); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_17, grammarAccess.getControlflowRegionAccess().getForKeyword_7_1_0_0());
                              					
                            }
                            // InternalSCTX.g:1680:6: ( (lv_counterVariable_18_0= ruleCounterVariable ) )
                            // InternalSCTX.g:1681:7: (lv_counterVariable_18_0= ruleCounterVariable )
                            {
                            // InternalSCTX.g:1681:7: (lv_counterVariable_18_0= ruleCounterVariable )
                            // InternalSCTX.g:1682:8: lv_counterVariable_18_0= ruleCounterVariable
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getControlflowRegionAccess().getCounterVariableCounterVariableParserRuleCall_7_1_0_1_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_56);
                            lv_counterVariable_18_0=ruleCounterVariable();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
                              								}
                              								set(
                              									current,
                              									"counterVariable",
                              									lv_counterVariable_18_0,
                              									"de.cau.cs.kieler.sccharts.text.SCTX.CounterVariable");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_19=(Token)match(input,45,FollowSets000.FOLLOW_57); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_19, grammarAccess.getControlflowRegionAccess().getColonKeyword_7_1_0_2());
                              					
                            }
                            // InternalSCTX.g:1703:6: ( (lv_forStart_20_0= ruleIntOrReference ) )
                            // InternalSCTX.g:1704:7: (lv_forStart_20_0= ruleIntOrReference )
                            {
                            // InternalSCTX.g:1704:7: (lv_forStart_20_0= ruleIntOrReference )
                            // InternalSCTX.g:1705:8: lv_forStart_20_0= ruleIntOrReference
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getControlflowRegionAccess().getForStartIntOrReferenceParserRuleCall_7_1_0_3_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_61);
                            lv_forStart_20_0=ruleIntOrReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
                              								}
                              								set(
                              									current,
                              									"forStart",
                              									lv_forStart_20_0,
                              									"de.cau.cs.kieler.sccharts.text.SCTX.IntOrReference");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalSCTX.g:1722:6: (otherlv_21= 'to' ( (lv_forEnd_22_0= ruleIntOrReference ) ) )?
                            int alt59=2;
                            int LA59_0 = input.LA(1);

                            if ( (LA59_0==33) ) {
                                alt59=1;
                            }
                            switch (alt59) {
                                case 1 :
                                    // InternalSCTX.g:1723:7: otherlv_21= 'to' ( (lv_forEnd_22_0= ruleIntOrReference ) )
                                    {
                                    otherlv_21=(Token)match(input,33,FollowSets000.FOLLOW_57); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_21, grammarAccess.getControlflowRegionAccess().getToKeyword_7_1_0_4_0());
                                      						
                                    }
                                    // InternalSCTX.g:1727:7: ( (lv_forEnd_22_0= ruleIntOrReference ) )
                                    // InternalSCTX.g:1728:8: (lv_forEnd_22_0= ruleIntOrReference )
                                    {
                                    // InternalSCTX.g:1728:8: (lv_forEnd_22_0= ruleIntOrReference )
                                    // InternalSCTX.g:1729:9: lv_forEnd_22_0= ruleIntOrReference
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getControlflowRegionAccess().getForEndIntOrReferenceParserRuleCall_7_1_0_4_1_0());
                                      								
                                    }
                                    pushFollow(FollowSets000.FOLLOW_62);
                                    lv_forEnd_22_0=ruleIntOrReference();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
                                      									}
                                      									set(
                                      										current,
                                      										"forEnd",
                                      										lv_forEnd_22_0,
                                      										"de.cau.cs.kieler.sccharts.text.SCTX.IntOrReference");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }

                    // InternalSCTX.g:1748:5: (otherlv_23= 'schedule' ( (lv_schedule_24_0= ruleScheduleObjectReference ) )+ )?
                    int alt62=2;
                    int LA62_0 = input.LA(1);

                    if ( (LA62_0==29) ) {
                        alt62=1;
                    }
                    switch (alt62) {
                        case 1 :
                            // InternalSCTX.g:1749:6: otherlv_23= 'schedule' ( (lv_schedule_24_0= ruleScheduleObjectReference ) )+
                            {
                            otherlv_23=(Token)match(input,29,FollowSets000.FOLLOW_9); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_23, grammarAccess.getControlflowRegionAccess().getScheduleKeyword_7_1_1_0());
                              					
                            }
                            // InternalSCTX.g:1753:6: ( (lv_schedule_24_0= ruleScheduleObjectReference ) )+
                            int cnt61=0;
                            loop61:
                            do {
                                int alt61=2;
                                int LA61_0 = input.LA(1);

                                if ( (LA61_0==RULE_ID) ) {
                                    alt61=1;
                                }


                                switch (alt61) {
                            	case 1 :
                            	    // InternalSCTX.g:1754:7: (lv_schedule_24_0= ruleScheduleObjectReference )
                            	    {
                            	    // InternalSCTX.g:1754:7: (lv_schedule_24_0= ruleScheduleObjectReference )
                            	    // InternalSCTX.g:1755:8: lv_schedule_24_0= ruleScheduleObjectReference
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getControlflowRegionAccess().getScheduleScheduleObjectReferenceParserRuleCall_7_1_1_1_0());
                            	      							
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_63);
                            	    lv_schedule_24_0=ruleScheduleObjectReference();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"schedule",
                            	      									lv_schedule_24_0,
                            	      									"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt61 >= 1 ) break loop61;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(61, input);
                                        throw eee;
                                }
                                cnt61++;
                            } while (true);


                            }
                            break;

                    }

                    // InternalSCTX.g:1773:5: ( (otherlv_25= '{' ( (lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_27_0= ruleLocalAction ) )* ( ( (lv_states_28_0= ruleImplicitState ) ) | ( (lv_states_29_0= ruleState ) )+ ) otherlv_30= '}' ) | (otherlv_31= ':' ( (lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_33_0= ruleLocalAction ) )* ( (lv_states_34_0= ruleState ) )* ) )
                    int alt70=2;
                    int LA70_0 = input.LA(1);

                    if ( (LA70_0==21) ) {
                        alt70=1;
                    }
                    else if ( (LA70_0==45) ) {
                        alt70=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 70, 0, input);

                        throw nvae;
                    }
                    switch (alt70) {
                        case 1 :
                            // InternalSCTX.g:1774:6: (otherlv_25= '{' ( (lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_27_0= ruleLocalAction ) )* ( ( (lv_states_28_0= ruleImplicitState ) ) | ( (lv_states_29_0= ruleState ) )+ ) otherlv_30= '}' )
                            {
                            // InternalSCTX.g:1774:6: (otherlv_25= '{' ( (lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_27_0= ruleLocalAction ) )* ( ( (lv_states_28_0= ruleImplicitState ) ) | ( (lv_states_29_0= ruleState ) )+ ) otherlv_30= '}' )
                            // InternalSCTX.g:1775:7: otherlv_25= '{' ( (lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_27_0= ruleLocalAction ) )* ( ( (lv_states_28_0= ruleImplicitState ) ) | ( (lv_states_29_0= ruleState ) )+ ) otherlv_30= '}'
                            {
                            otherlv_25=(Token)match(input,21,FollowSets000.FOLLOW_64); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_25, grammarAccess.getControlflowRegionAccess().getLeftCurlyBracketKeyword_7_1_2_0_0());
                              						
                            }
                            // InternalSCTX.g:1779:7: ( (lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )*
                            loop63:
                            do {
                                int alt63=2;
                                alt63 = dfa63.predict(input);
                                switch (alt63) {
                            	case 1 :
                            	    // InternalSCTX.g:1780:8: (lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon )
                            	    {
                            	    // InternalSCTX.g:1780:8: (lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon )
                            	    // InternalSCTX.g:1781:9: lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getControlflowRegionAccess().getDeclarationsDeclarationOrMethodWithKeywordWOSemicolonParserRuleCall_7_1_2_0_1_0());
                            	      								
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_64);
                            	    lv_declarations_26_0=ruleDeclarationOrMethodWithKeywordWOSemicolon();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"declarations",
                            	      										lv_declarations_26_0,
                            	      										"de.cau.cs.kieler.sccharts.text.SCTX.DeclarationOrMethodWithKeywordWOSemicolon");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop63;
                                }
                            } while (true);

                            // InternalSCTX.g:1798:7: ( (lv_actions_27_0= ruleLocalAction ) )*
                            loop64:
                            do {
                                int alt64=2;
                                alt64 = dfa64.predict(input);
                                switch (alt64) {
                            	case 1 :
                            	    // InternalSCTX.g:1799:8: (lv_actions_27_0= ruleLocalAction )
                            	    {
                            	    // InternalSCTX.g:1799:8: (lv_actions_27_0= ruleLocalAction )
                            	    // InternalSCTX.g:1800:9: lv_actions_27_0= ruleLocalAction
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getControlflowRegionAccess().getActionsLocalActionParserRuleCall_7_1_2_0_2_0());
                            	      								
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_65);
                            	    lv_actions_27_0=ruleLocalAction();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"actions",
                            	      										lv_actions_27_0,
                            	      										"de.cau.cs.kieler.sccharts.text.SCTX.LocalAction");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop64;
                                }
                            } while (true);

                            // InternalSCTX.g:1817:7: ( ( (lv_states_28_0= ruleImplicitState ) ) | ( (lv_states_29_0= ruleState ) )+ )
                            int alt66=2;
                            alt66 = dfa66.predict(input);
                            switch (alt66) {
                                case 1 :
                                    // InternalSCTX.g:1818:8: ( (lv_states_28_0= ruleImplicitState ) )
                                    {
                                    // InternalSCTX.g:1818:8: ( (lv_states_28_0= ruleImplicitState ) )
                                    // InternalSCTX.g:1819:9: (lv_states_28_0= ruleImplicitState )
                                    {
                                    // InternalSCTX.g:1819:9: (lv_states_28_0= ruleImplicitState )
                                    // InternalSCTX.g:1820:10: lv_states_28_0= ruleImplicitState
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getControlflowRegionAccess().getStatesImplicitStateParserRuleCall_7_1_2_0_3_0_0());
                                      									
                                    }
                                    pushFollow(FollowSets000.FOLLOW_13);
                                    lv_states_28_0=ruleImplicitState();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
                                      										}
                                      										add(
                                      											current,
                                      											"states",
                                      											lv_states_28_0,
                                      											"de.cau.cs.kieler.sccharts.text.SCTX.ImplicitState");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalSCTX.g:1838:8: ( (lv_states_29_0= ruleState ) )+
                                    {
                                    // InternalSCTX.g:1838:8: ( (lv_states_29_0= ruleState ) )+
                                    int cnt65=0;
                                    loop65:
                                    do {
                                        int alt65=2;
                                        int LA65_0 = input.LA(1);

                                        if ( (LA65_0==RULE_COMMENT_ANNOTATION||(LA65_0>=23 && LA65_0<=27)||LA65_0==103) ) {
                                            alt65=1;
                                        }


                                        switch (alt65) {
                                    	case 1 :
                                    	    // InternalSCTX.g:1839:9: (lv_states_29_0= ruleState )
                                    	    {
                                    	    // InternalSCTX.g:1839:9: (lv_states_29_0= ruleState )
                                    	    // InternalSCTX.g:1840:10: lv_states_29_0= ruleState
                                    	    {
                                    	    if ( state.backtracking==0 ) {

                                    	      										newCompositeNode(grammarAccess.getControlflowRegionAccess().getStatesStateParserRuleCall_7_1_2_0_3_1_0());
                                    	      									
                                    	    }
                                    	    pushFollow(FollowSets000.FOLLOW_66);
                                    	    lv_states_29_0=ruleState();

                                    	    state._fsp--;
                                    	    if (state.failed) return current;
                                    	    if ( state.backtracking==0 ) {

                                    	      										if (current==null) {
                                    	      											current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
                                    	      										}
                                    	      										add(
                                    	      											current,
                                    	      											"states",
                                    	      											lv_states_29_0,
                                    	      											"de.cau.cs.kieler.sccharts.text.SCTX.State");
                                    	      										afterParserOrEnumRuleCall();
                                    	      									
                                    	    }

                                    	    }


                                    	    }
                                    	    break;

                                    	default :
                                    	    if ( cnt65 >= 1 ) break loop65;
                                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                                EarlyExitException eee =
                                                    new EarlyExitException(65, input);
                                                throw eee;
                                        }
                                        cnt65++;
                                    } while (true);


                                    }
                                    break;

                            }

                            otherlv_30=(Token)match(input,22,FollowSets000.FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_30, grammarAccess.getControlflowRegionAccess().getRightCurlyBracketKeyword_7_1_2_0_4());
                              						
                            }

                            }


                            }
                            break;
                        case 2 :
                            // InternalSCTX.g:1864:6: (otherlv_31= ':' ( (lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_33_0= ruleLocalAction ) )* ( (lv_states_34_0= ruleState ) )* )
                            {
                            // InternalSCTX.g:1864:6: (otherlv_31= ':' ( (lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_33_0= ruleLocalAction ) )* ( (lv_states_34_0= ruleState ) )* )
                            // InternalSCTX.g:1865:7: otherlv_31= ':' ( (lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )* ( (lv_actions_33_0= ruleLocalAction ) )* ( (lv_states_34_0= ruleState ) )*
                            {
                            otherlv_31=(Token)match(input,45,FollowSets000.FOLLOW_67); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_31, grammarAccess.getControlflowRegionAccess().getColonKeyword_7_1_2_1_0());
                              						
                            }
                            // InternalSCTX.g:1869:7: ( (lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )*
                            loop67:
                            do {
                                int alt67=2;
                                alt67 = dfa67.predict(input);
                                switch (alt67) {
                            	case 1 :
                            	    // InternalSCTX.g:1870:8: (lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon )
                            	    {
                            	    // InternalSCTX.g:1870:8: (lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon )
                            	    // InternalSCTX.g:1871:9: lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getControlflowRegionAccess().getDeclarationsDeclarationOrMethodWithKeywordWOSemicolonParserRuleCall_7_1_2_1_1_0());
                            	      								
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_67);
                            	    lv_declarations_32_0=ruleDeclarationOrMethodWithKeywordWOSemicolon();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"declarations",
                            	      										lv_declarations_32_0,
                            	      										"de.cau.cs.kieler.sccharts.text.SCTX.DeclarationOrMethodWithKeywordWOSemicolon");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop67;
                                }
                            } while (true);

                            // InternalSCTX.g:1888:7: ( (lv_actions_33_0= ruleLocalAction ) )*
                            loop68:
                            do {
                                int alt68=2;
                                alt68 = dfa68.predict(input);
                                switch (alt68) {
                            	case 1 :
                            	    // InternalSCTX.g:1889:8: (lv_actions_33_0= ruleLocalAction )
                            	    {
                            	    // InternalSCTX.g:1889:8: (lv_actions_33_0= ruleLocalAction )
                            	    // InternalSCTX.g:1890:9: lv_actions_33_0= ruleLocalAction
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getControlflowRegionAccess().getActionsLocalActionParserRuleCall_7_1_2_1_2_0());
                            	      								
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_68);
                            	    lv_actions_33_0=ruleLocalAction();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"actions",
                            	      										lv_actions_33_0,
                            	      										"de.cau.cs.kieler.sccharts.text.SCTX.LocalAction");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop68;
                                }
                            } while (true);

                            // InternalSCTX.g:1907:7: ( (lv_states_34_0= ruleState ) )*
                            loop69:
                            do {
                                int alt69=2;
                                alt69 = dfa69.predict(input);
                                switch (alt69) {
                            	case 1 :
                            	    // InternalSCTX.g:1908:8: (lv_states_34_0= ruleState )
                            	    {
                            	    // InternalSCTX.g:1908:8: (lv_states_34_0= ruleState )
                            	    // InternalSCTX.g:1909:9: lv_states_34_0= ruleState
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getControlflowRegionAccess().getStatesStateParserRuleCall_7_1_2_1_3_0());
                            	      								
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_48);
                            	    lv_states_34_0=ruleState();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"states",
                            	      										lv_states_34_0,
                            	      										"de.cau.cs.kieler.sccharts.text.SCTX.State");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop69;
                                }
                            } while (true);


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleControlflowRegion"


    // $ANTLR start "entryRuleDataflowAssignment"
    // InternalSCTX.g:1934:1: entryRuleDataflowAssignment returns [EObject current=null] : iv_ruleDataflowAssignment= ruleDataflowAssignment EOF ;
    public final EObject entryRuleDataflowAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDataflowAssignment = null;


        try {
            // InternalSCTX.g:1934:59: (iv_ruleDataflowAssignment= ruleDataflowAssignment EOF )
            // InternalSCTX.g:1935:2: iv_ruleDataflowAssignment= ruleDataflowAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDataflowAssignmentRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDataflowAssignment=ruleDataflowAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDataflowAssignment; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDataflowAssignment"


    // $ANTLR start "ruleDataflowAssignment"
    // InternalSCTX.g:1941:1: ruleDataflowAssignment returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? ( (lv_sequential_6_0= 'seq' ) )? ) ;
    public final EObject ruleDataflowAssignment() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        Token lv_sequential_6_0=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_reference_1_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_expression_3_0 = null;

        EObject lv_schedule_5_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:1947:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? ( (lv_sequential_6_0= 'seq' ) )? ) )
            // InternalSCTX.g:1948:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? ( (lv_sequential_6_0= 'seq' ) )? )
            {
            // InternalSCTX.g:1948:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? ( (lv_sequential_6_0= 'seq' ) )? )
            // InternalSCTX.g:1949:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? ( (lv_sequential_6_0= 'seq' ) )?
            {
            // InternalSCTX.g:1949:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop72:
            do {
                int alt72=2;
                int LA72_0 = input.LA(1);

                if ( (LA72_0==RULE_COMMENT_ANNOTATION||LA72_0==103) ) {
                    alt72=1;
                }


                switch (alt72) {
            	case 1 :
            	    // InternalSCTX.g:1950:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:1950:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:1951:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getDataflowAssignmentAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_69);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getDataflowAssignmentRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop72;
                }
            } while (true);

            // InternalSCTX.g:1968:3: ( (lv_reference_1_0= ruleValuedObjectReference ) )
            // InternalSCTX.g:1969:4: (lv_reference_1_0= ruleValuedObjectReference )
            {
            // InternalSCTX.g:1969:4: (lv_reference_1_0= ruleValuedObjectReference )
            // InternalSCTX.g:1970:5: lv_reference_1_0= ruleValuedObjectReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDataflowAssignmentAccess().getReferenceValuedObjectReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_70);
            lv_reference_1_0=ruleValuedObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDataflowAssignmentRule());
              					}
              					set(
              						current,
              						"reference",
              						lv_reference_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:1987:3: ( (lv_operator_2_0= ruleAssignOperator ) )
            // InternalSCTX.g:1988:4: (lv_operator_2_0= ruleAssignOperator )
            {
            // InternalSCTX.g:1988:4: (lv_operator_2_0= ruleAssignOperator )
            // InternalSCTX.g:1989:5: lv_operator_2_0= ruleAssignOperator
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDataflowAssignmentAccess().getOperatorAssignOperatorEnumRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_30);
            lv_operator_2_0=ruleAssignOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDataflowAssignmentRule());
              					}
              					set(
              						current,
              						"operator",
              						lv_operator_2_0,
              						"de.cau.cs.kieler.kexpressions.keffects.KEffects.AssignOperator");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:2006:3: ( (lv_expression_3_0= ruleExpression ) )
            // InternalSCTX.g:2007:4: (lv_expression_3_0= ruleExpression )
            {
            // InternalSCTX.g:2007:4: (lv_expression_3_0= ruleExpression )
            // InternalSCTX.g:2008:5: lv_expression_3_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDataflowAssignmentAccess().getExpressionExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_71);
            lv_expression_3_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDataflowAssignmentRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_3_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:2025:3: (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )?
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( (LA74_0==29) ) {
                alt74=1;
            }
            switch (alt74) {
                case 1 :
                    // InternalSCTX.g:2026:4: otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_4=(Token)match(input,29,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getDataflowAssignmentAccess().getScheduleKeyword_4_0());
                      			
                    }
                    // InternalSCTX.g:2030:4: ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+
                    int cnt73=0;
                    loop73:
                    do {
                        int alt73=2;
                        alt73 = dfa73.predict(input);
                        switch (alt73) {
                    	case 1 :
                    	    // InternalSCTX.g:2031:5: (lv_schedule_5_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCTX.g:2031:5: (lv_schedule_5_0= ruleScheduleObjectReference )
                    	    // InternalSCTX.g:2032:6: lv_schedule_5_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getDataflowAssignmentAccess().getScheduleScheduleObjectReferenceParserRuleCall_4_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_72);
                    	    lv_schedule_5_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getDataflowAssignmentRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_5_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt73 >= 1 ) break loop73;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(73, input);
                                throw eee;
                        }
                        cnt73++;
                    } while (true);


                    }
                    break;

            }

            // InternalSCTX.g:2050:3: ( (lv_sequential_6_0= 'seq' ) )?
            int alt75=2;
            int LA75_0 = input.LA(1);

            if ( (LA75_0==46) ) {
                alt75=1;
            }
            switch (alt75) {
                case 1 :
                    // InternalSCTX.g:2051:4: (lv_sequential_6_0= 'seq' )
                    {
                    // InternalSCTX.g:2051:4: (lv_sequential_6_0= 'seq' )
                    // InternalSCTX.g:2052:5: lv_sequential_6_0= 'seq'
                    {
                    lv_sequential_6_0=(Token)match(input,46,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_sequential_6_0, grammarAccess.getDataflowAssignmentAccess().getSequentialSeqKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getDataflowAssignmentRule());
                      					}
                      					setWithLastConsumed(current, "sequential", true, "seq");
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDataflowAssignment"


    // $ANTLR start "entryRuleDataflowRegion"
    // InternalSCTX.g:2068:1: entryRuleDataflowRegion returns [EObject current=null] : iv_ruleDataflowRegion= ruleDataflowRegion EOF ;
    public final EObject entryRuleDataflowRegion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDataflowRegion = null;


        try {
            // InternalSCTX.g:2068:55: (iv_ruleDataflowRegion= ruleDataflowRegion EOF )
            // InternalSCTX.g:2069:2: iv_ruleDataflowRegion= ruleDataflowRegion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDataflowRegionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDataflowRegion=ruleDataflowRegion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDataflowRegion; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDataflowRegion"


    // $ANTLR start "ruleDataflowRegion"
    // InternalSCTX.g:2075:1: ruleDataflowRegion returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_override_2_0= 'override' ) )? otherlv_3= 'dataflow' ( (lv_name_4_0= ruleExtendedID ) )? ( (lv_label_5_0= RULE_STRING ) )? (otherlv_6= 'for' ( (lv_counterVariable_7_0= ruleCounterVariable ) ) otherlv_8= ':' ( (lv_forStart_9_0= ruleIntOrReference ) ) (otherlv_10= 'to' ( (lv_forEnd_11_0= ruleIntOrReference ) ) )? )? (otherlv_12= 'schedule' ( (lv_schedule_13_0= ruleScheduleObjectReference ) )+ )? ( (lv_once_14_0= 'once' ) )? ( (otherlv_15= '{' ( (lv_declarations_16_0= ruleDeclarationWOSemicolon ) )* ( ( (lv_equations_17_1= ruleDataflowAssignment | lv_equations_17_2= ruleAssignment ) ) )* otherlv_18= '}' ) | (otherlv_19= ':' ( (lv_declarations_20_0= ruleDeclarationWOSemicolon ) )* ( ( (lv_equations_21_1= ruleDataflowAssignment | lv_equations_21_2= ruleAssignment ) ) )* ) ) ) ;
    public final EObject ruleDataflowRegion() throws RecognitionException {
        EObject current = null;

        Token lv_override_2_0=null;
        Token otherlv_3=null;
        Token lv_label_5_0=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token lv_once_14_0=null;
        Token otherlv_15=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        EObject lv_annotations_1_0 = null;

        AntlrDatatypeRuleToken lv_name_4_0 = null;

        EObject lv_counterVariable_7_0 = null;

        EObject lv_forStart_9_0 = null;

        EObject lv_forEnd_11_0 = null;

        EObject lv_schedule_13_0 = null;

        EObject lv_declarations_16_0 = null;

        EObject lv_equations_17_1 = null;

        EObject lv_equations_17_2 = null;

        EObject lv_declarations_20_0 = null;

        EObject lv_equations_21_1 = null;

        EObject lv_equations_21_2 = null;



        	enterRule();

        try {
            // InternalSCTX.g:2081:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_override_2_0= 'override' ) )? otherlv_3= 'dataflow' ( (lv_name_4_0= ruleExtendedID ) )? ( (lv_label_5_0= RULE_STRING ) )? (otherlv_6= 'for' ( (lv_counterVariable_7_0= ruleCounterVariable ) ) otherlv_8= ':' ( (lv_forStart_9_0= ruleIntOrReference ) ) (otherlv_10= 'to' ( (lv_forEnd_11_0= ruleIntOrReference ) ) )? )? (otherlv_12= 'schedule' ( (lv_schedule_13_0= ruleScheduleObjectReference ) )+ )? ( (lv_once_14_0= 'once' ) )? ( (otherlv_15= '{' ( (lv_declarations_16_0= ruleDeclarationWOSemicolon ) )* ( ( (lv_equations_17_1= ruleDataflowAssignment | lv_equations_17_2= ruleAssignment ) ) )* otherlv_18= '}' ) | (otherlv_19= ':' ( (lv_declarations_20_0= ruleDeclarationWOSemicolon ) )* ( ( (lv_equations_21_1= ruleDataflowAssignment | lv_equations_21_2= ruleAssignment ) ) )* ) ) ) )
            // InternalSCTX.g:2082:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_override_2_0= 'override' ) )? otherlv_3= 'dataflow' ( (lv_name_4_0= ruleExtendedID ) )? ( (lv_label_5_0= RULE_STRING ) )? (otherlv_6= 'for' ( (lv_counterVariable_7_0= ruleCounterVariable ) ) otherlv_8= ':' ( (lv_forStart_9_0= ruleIntOrReference ) ) (otherlv_10= 'to' ( (lv_forEnd_11_0= ruleIntOrReference ) ) )? )? (otherlv_12= 'schedule' ( (lv_schedule_13_0= ruleScheduleObjectReference ) )+ )? ( (lv_once_14_0= 'once' ) )? ( (otherlv_15= '{' ( (lv_declarations_16_0= ruleDeclarationWOSemicolon ) )* ( ( (lv_equations_17_1= ruleDataflowAssignment | lv_equations_17_2= ruleAssignment ) ) )* otherlv_18= '}' ) | (otherlv_19= ':' ( (lv_declarations_20_0= ruleDeclarationWOSemicolon ) )* ( ( (lv_equations_21_1= ruleDataflowAssignment | lv_equations_21_2= ruleAssignment ) ) )* ) ) )
            {
            // InternalSCTX.g:2082:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_override_2_0= 'override' ) )? otherlv_3= 'dataflow' ( (lv_name_4_0= ruleExtendedID ) )? ( (lv_label_5_0= RULE_STRING ) )? (otherlv_6= 'for' ( (lv_counterVariable_7_0= ruleCounterVariable ) ) otherlv_8= ':' ( (lv_forStart_9_0= ruleIntOrReference ) ) (otherlv_10= 'to' ( (lv_forEnd_11_0= ruleIntOrReference ) ) )? )? (otherlv_12= 'schedule' ( (lv_schedule_13_0= ruleScheduleObjectReference ) )+ )? ( (lv_once_14_0= 'once' ) )? ( (otherlv_15= '{' ( (lv_declarations_16_0= ruleDeclarationWOSemicolon ) )* ( ( (lv_equations_17_1= ruleDataflowAssignment | lv_equations_17_2= ruleAssignment ) ) )* otherlv_18= '}' ) | (otherlv_19= ':' ( (lv_declarations_20_0= ruleDeclarationWOSemicolon ) )* ( ( (lv_equations_21_1= ruleDataflowAssignment | lv_equations_21_2= ruleAssignment ) ) )* ) ) )
            // InternalSCTX.g:2083:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_override_2_0= 'override' ) )? otherlv_3= 'dataflow' ( (lv_name_4_0= ruleExtendedID ) )? ( (lv_label_5_0= RULE_STRING ) )? (otherlv_6= 'for' ( (lv_counterVariable_7_0= ruleCounterVariable ) ) otherlv_8= ':' ( (lv_forStart_9_0= ruleIntOrReference ) ) (otherlv_10= 'to' ( (lv_forEnd_11_0= ruleIntOrReference ) ) )? )? (otherlv_12= 'schedule' ( (lv_schedule_13_0= ruleScheduleObjectReference ) )+ )? ( (lv_once_14_0= 'once' ) )? ( (otherlv_15= '{' ( (lv_declarations_16_0= ruleDeclarationWOSemicolon ) )* ( ( (lv_equations_17_1= ruleDataflowAssignment | lv_equations_17_2= ruleAssignment ) ) )* otherlv_18= '}' ) | (otherlv_19= ':' ( (lv_declarations_20_0= ruleDeclarationWOSemicolon ) )* ( ( (lv_equations_21_1= ruleDataflowAssignment | lv_equations_21_2= ruleAssignment ) ) )* ) )
            {
            // InternalSCTX.g:2083:3: ()
            // InternalSCTX.g:2084:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDataflowRegionAccess().getDataflowRegionAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:2093:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop76:
            do {
                int alt76=2;
                int LA76_0 = input.LA(1);

                if ( (LA76_0==RULE_COMMENT_ANNOTATION||LA76_0==103) ) {
                    alt76=1;
                }


                switch (alt76) {
            	case 1 :
            	    // InternalSCTX.g:2094:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:2094:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCTX.g:2095:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getDataflowRegionAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_73);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getDataflowRegionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop76;
                }
            } while (true);

            // InternalSCTX.g:2112:3: ( (lv_override_2_0= 'override' ) )?
            int alt77=2;
            int LA77_0 = input.LA(1);

            if ( (LA77_0==42) ) {
                alt77=1;
            }
            switch (alt77) {
                case 1 :
                    // InternalSCTX.g:2113:4: (lv_override_2_0= 'override' )
                    {
                    // InternalSCTX.g:2113:4: (lv_override_2_0= 'override' )
                    // InternalSCTX.g:2114:5: lv_override_2_0= 'override'
                    {
                    lv_override_2_0=(Token)match(input,42,FollowSets000.FOLLOW_74); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_override_2_0, grammarAccess.getDataflowRegionAccess().getOverrideOverrideKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getDataflowRegionRule());
                      					}
                      					setWithLastConsumed(current, "override", true, "override");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,47,FollowSets000.FOLLOW_75); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getDataflowRegionAccess().getDataflowKeyword_3());
              		
            }
            // InternalSCTX.g:2130:3: ( (lv_name_4_0= ruleExtendedID ) )?
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==RULE_ID) ) {
                alt78=1;
            }
            switch (alt78) {
                case 1 :
                    // InternalSCTX.g:2131:4: (lv_name_4_0= ruleExtendedID )
                    {
                    // InternalSCTX.g:2131:4: (lv_name_4_0= ruleExtendedID )
                    // InternalSCTX.g:2132:5: lv_name_4_0= ruleExtendedID
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDataflowRegionAccess().getNameExtendedIDParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_76);
                    lv_name_4_0=ruleExtendedID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDataflowRegionRule());
                      					}
                      					set(
                      						current,
                      						"name",
                      						lv_name_4_0,
                      						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:2149:3: ( (lv_label_5_0= RULE_STRING ) )?
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( (LA79_0==RULE_STRING) ) {
                alt79=1;
            }
            switch (alt79) {
                case 1 :
                    // InternalSCTX.g:2150:4: (lv_label_5_0= RULE_STRING )
                    {
                    // InternalSCTX.g:2150:4: (lv_label_5_0= RULE_STRING )
                    // InternalSCTX.g:2151:5: lv_label_5_0= RULE_STRING
                    {
                    lv_label_5_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_77); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_label_5_0, grammarAccess.getDataflowRegionAccess().getLabelSTRINGTerminalRuleCall_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getDataflowRegionRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"label",
                      						lv_label_5_0,
                      						"de.cau.cs.kieler.annotations.Annotations.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:2167:3: (otherlv_6= 'for' ( (lv_counterVariable_7_0= ruleCounterVariable ) ) otherlv_8= ':' ( (lv_forStart_9_0= ruleIntOrReference ) ) (otherlv_10= 'to' ( (lv_forEnd_11_0= ruleIntOrReference ) ) )? )?
            int alt81=2;
            int LA81_0 = input.LA(1);

            if ( (LA81_0==44) ) {
                alt81=1;
            }
            switch (alt81) {
                case 1 :
                    // InternalSCTX.g:2168:4: otherlv_6= 'for' ( (lv_counterVariable_7_0= ruleCounterVariable ) ) otherlv_8= ':' ( (lv_forStart_9_0= ruleIntOrReference ) ) (otherlv_10= 'to' ( (lv_forEnd_11_0= ruleIntOrReference ) ) )?
                    {
                    otherlv_6=(Token)match(input,44,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getDataflowRegionAccess().getForKeyword_6_0());
                      			
                    }
                    // InternalSCTX.g:2172:4: ( (lv_counterVariable_7_0= ruleCounterVariable ) )
                    // InternalSCTX.g:2173:5: (lv_counterVariable_7_0= ruleCounterVariable )
                    {
                    // InternalSCTX.g:2173:5: (lv_counterVariable_7_0= ruleCounterVariable )
                    // InternalSCTX.g:2174:6: lv_counterVariable_7_0= ruleCounterVariable
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDataflowRegionAccess().getCounterVariableCounterVariableParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_56);
                    lv_counterVariable_7_0=ruleCounterVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDataflowRegionRule());
                      						}
                      						set(
                      							current,
                      							"counterVariable",
                      							lv_counterVariable_7_0,
                      							"de.cau.cs.kieler.sccharts.text.SCTX.CounterVariable");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_8=(Token)match(input,45,FollowSets000.FOLLOW_57); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getDataflowRegionAccess().getColonKeyword_6_2());
                      			
                    }
                    // InternalSCTX.g:2195:4: ( (lv_forStart_9_0= ruleIntOrReference ) )
                    // InternalSCTX.g:2196:5: (lv_forStart_9_0= ruleIntOrReference )
                    {
                    // InternalSCTX.g:2196:5: (lv_forStart_9_0= ruleIntOrReference )
                    // InternalSCTX.g:2197:6: lv_forStart_9_0= ruleIntOrReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDataflowRegionAccess().getForStartIntOrReferenceParserRuleCall_6_3_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_78);
                    lv_forStart_9_0=ruleIntOrReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDataflowRegionRule());
                      						}
                      						set(
                      							current,
                      							"forStart",
                      							lv_forStart_9_0,
                      							"de.cau.cs.kieler.sccharts.text.SCTX.IntOrReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:2214:4: (otherlv_10= 'to' ( (lv_forEnd_11_0= ruleIntOrReference ) ) )?
                    int alt80=2;
                    int LA80_0 = input.LA(1);

                    if ( (LA80_0==33) ) {
                        alt80=1;
                    }
                    switch (alt80) {
                        case 1 :
                            // InternalSCTX.g:2215:5: otherlv_10= 'to' ( (lv_forEnd_11_0= ruleIntOrReference ) )
                            {
                            otherlv_10=(Token)match(input,33,FollowSets000.FOLLOW_57); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_10, grammarAccess.getDataflowRegionAccess().getToKeyword_6_4_0());
                              				
                            }
                            // InternalSCTX.g:2219:5: ( (lv_forEnd_11_0= ruleIntOrReference ) )
                            // InternalSCTX.g:2220:6: (lv_forEnd_11_0= ruleIntOrReference )
                            {
                            // InternalSCTX.g:2220:6: (lv_forEnd_11_0= ruleIntOrReference )
                            // InternalSCTX.g:2221:7: lv_forEnd_11_0= ruleIntOrReference
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getDataflowRegionAccess().getForEndIntOrReferenceParserRuleCall_6_4_1_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_79);
                            lv_forEnd_11_0=ruleIntOrReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getDataflowRegionRule());
                              							}
                              							set(
                              								current,
                              								"forEnd",
                              								lv_forEnd_11_0,
                              								"de.cau.cs.kieler.sccharts.text.SCTX.IntOrReference");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalSCTX.g:2240:3: (otherlv_12= 'schedule' ( (lv_schedule_13_0= ruleScheduleObjectReference ) )+ )?
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==29) ) {
                alt83=1;
            }
            switch (alt83) {
                case 1 :
                    // InternalSCTX.g:2241:4: otherlv_12= 'schedule' ( (lv_schedule_13_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_12=(Token)match(input,29,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getDataflowRegionAccess().getScheduleKeyword_7_0());
                      			
                    }
                    // InternalSCTX.g:2245:4: ( (lv_schedule_13_0= ruleScheduleObjectReference ) )+
                    int cnt82=0;
                    loop82:
                    do {
                        int alt82=2;
                        int LA82_0 = input.LA(1);

                        if ( (LA82_0==RULE_ID) ) {
                            alt82=1;
                        }


                        switch (alt82) {
                    	case 1 :
                    	    // InternalSCTX.g:2246:5: (lv_schedule_13_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCTX.g:2246:5: (lv_schedule_13_0= ruleScheduleObjectReference )
                    	    // InternalSCTX.g:2247:6: lv_schedule_13_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getDataflowRegionAccess().getScheduleScheduleObjectReferenceParserRuleCall_7_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_80);
                    	    lv_schedule_13_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getDataflowRegionRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_13_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt82 >= 1 ) break loop82;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(82, input);
                                throw eee;
                        }
                        cnt82++;
                    } while (true);


                    }
                    break;

            }

            // InternalSCTX.g:2265:3: ( (lv_once_14_0= 'once' ) )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==48) ) {
                alt84=1;
            }
            switch (alt84) {
                case 1 :
                    // InternalSCTX.g:2266:4: (lv_once_14_0= 'once' )
                    {
                    // InternalSCTX.g:2266:4: (lv_once_14_0= 'once' )
                    // InternalSCTX.g:2267:5: lv_once_14_0= 'once'
                    {
                    lv_once_14_0=(Token)match(input,48,FollowSets000.FOLLOW_81); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_once_14_0, grammarAccess.getDataflowRegionAccess().getOnceOnceKeyword_8_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getDataflowRegionRule());
                      					}
                      					setWithLastConsumed(current, "once", true, "once");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:2279:3: ( (otherlv_15= '{' ( (lv_declarations_16_0= ruleDeclarationWOSemicolon ) )* ( ( (lv_equations_17_1= ruleDataflowAssignment | lv_equations_17_2= ruleAssignment ) ) )* otherlv_18= '}' ) | (otherlv_19= ':' ( (lv_declarations_20_0= ruleDeclarationWOSemicolon ) )* ( ( (lv_equations_21_1= ruleDataflowAssignment | lv_equations_21_2= ruleAssignment ) ) )* ) )
            int alt91=2;
            int LA91_0 = input.LA(1);

            if ( (LA91_0==21) ) {
                alt91=1;
            }
            else if ( (LA91_0==45) ) {
                alt91=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 91, 0, input);

                throw nvae;
            }
            switch (alt91) {
                case 1 :
                    // InternalSCTX.g:2280:4: (otherlv_15= '{' ( (lv_declarations_16_0= ruleDeclarationWOSemicolon ) )* ( ( (lv_equations_17_1= ruleDataflowAssignment | lv_equations_17_2= ruleAssignment ) ) )* otherlv_18= '}' )
                    {
                    // InternalSCTX.g:2280:4: (otherlv_15= '{' ( (lv_declarations_16_0= ruleDeclarationWOSemicolon ) )* ( ( (lv_equations_17_1= ruleDataflowAssignment | lv_equations_17_2= ruleAssignment ) ) )* otherlv_18= '}' )
                    // InternalSCTX.g:2281:5: otherlv_15= '{' ( (lv_declarations_16_0= ruleDeclarationWOSemicolon ) )* ( ( (lv_equations_17_1= ruleDataflowAssignment | lv_equations_17_2= ruleAssignment ) ) )* otherlv_18= '}'
                    {
                    otherlv_15=(Token)match(input,21,FollowSets000.FOLLOW_82); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_15, grammarAccess.getDataflowRegionAccess().getLeftCurlyBracketKeyword_9_0_0());
                      				
                    }
                    // InternalSCTX.g:2285:5: ( (lv_declarations_16_0= ruleDeclarationWOSemicolon ) )*
                    loop85:
                    do {
                        int alt85=2;
                        alt85 = dfa85.predict(input);
                        switch (alt85) {
                    	case 1 :
                    	    // InternalSCTX.g:2286:6: (lv_declarations_16_0= ruleDeclarationWOSemicolon )
                    	    {
                    	    // InternalSCTX.g:2286:6: (lv_declarations_16_0= ruleDeclarationWOSemicolon )
                    	    // InternalSCTX.g:2287:7: lv_declarations_16_0= ruleDeclarationWOSemicolon
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getDataflowRegionAccess().getDeclarationsDeclarationWOSemicolonParserRuleCall_9_0_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_82);
                    	    lv_declarations_16_0=ruleDeclarationWOSemicolon();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getDataflowRegionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"declarations",
                    	      								lv_declarations_16_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.DeclarationWOSemicolon");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop85;
                        }
                    } while (true);

                    // InternalSCTX.g:2304:5: ( ( (lv_equations_17_1= ruleDataflowAssignment | lv_equations_17_2= ruleAssignment ) ) )*
                    loop87:
                    do {
                        int alt87=2;
                        int LA87_0 = input.LA(1);

                        if ( (LA87_0==RULE_ID||LA87_0==RULE_COMMENT_ANNOTATION||LA87_0==103) ) {
                            alt87=1;
                        }


                        switch (alt87) {
                    	case 1 :
                    	    // InternalSCTX.g:2305:6: ( (lv_equations_17_1= ruleDataflowAssignment | lv_equations_17_2= ruleAssignment ) )
                    	    {
                    	    // InternalSCTX.g:2305:6: ( (lv_equations_17_1= ruleDataflowAssignment | lv_equations_17_2= ruleAssignment ) )
                    	    // InternalSCTX.g:2306:7: (lv_equations_17_1= ruleDataflowAssignment | lv_equations_17_2= ruleAssignment )
                    	    {
                    	    // InternalSCTX.g:2306:7: (lv_equations_17_1= ruleDataflowAssignment | lv_equations_17_2= ruleAssignment )
                    	    int alt86=2;
                    	    switch ( input.LA(1) ) {
                    	    case RULE_COMMENT_ANNOTATION:
                    	        {
                    	        int LA86_1 = input.LA(2);

                    	        if ( (synpred90_InternalSCTX()) ) {
                    	            alt86=1;
                    	        }
                    	        else if ( (true) ) {
                    	            alt86=2;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return current;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 86, 1, input);

                    	            throw nvae;
                    	        }
                    	        }
                    	        break;
                    	    case 103:
                    	        {
                    	        int LA86_2 = input.LA(2);

                    	        if ( (synpred90_InternalSCTX()) ) {
                    	            alt86=1;
                    	        }
                    	        else if ( (true) ) {
                    	            alt86=2;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return current;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 86, 2, input);

                    	            throw nvae;
                    	        }
                    	        }
                    	        break;
                    	    case RULE_ID:
                    	        {
                    	        int LA86_3 = input.LA(2);

                    	        if ( (synpred90_InternalSCTX()) ) {
                    	            alt86=1;
                    	        }
                    	        else if ( (true) ) {
                    	            alt86=2;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return current;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 86, 3, input);

                    	            throw nvae;
                    	        }
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 86, 0, input);

                    	        throw nvae;
                    	    }

                    	    switch (alt86) {
                    	        case 1 :
                    	            // InternalSCTX.g:2307:8: lv_equations_17_1= ruleDataflowAssignment
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              								newCompositeNode(grammarAccess.getDataflowRegionAccess().getEquationsDataflowAssignmentParserRuleCall_9_0_2_0_0());
                    	              							
                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_83);
                    	            lv_equations_17_1=ruleDataflowAssignment();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElementForParent(grammarAccess.getDataflowRegionRule());
                    	              								}
                    	              								add(
                    	              									current,
                    	              									"equations",
                    	              									lv_equations_17_1,
                    	              									"de.cau.cs.kieler.sccharts.text.SCTX.DataflowAssignment");
                    	              								afterParserOrEnumRuleCall();
                    	              							
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // InternalSCTX.g:2323:8: lv_equations_17_2= ruleAssignment
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              								newCompositeNode(grammarAccess.getDataflowRegionAccess().getEquationsAssignmentParserRuleCall_9_0_2_0_1());
                    	              							
                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_83);
                    	            lv_equations_17_2=ruleAssignment();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElementForParent(grammarAccess.getDataflowRegionRule());
                    	              								}
                    	              								add(
                    	              									current,
                    	              									"equations",
                    	              									lv_equations_17_2,
                    	              									"de.cau.cs.kieler.kexpressions.keffects.KEffects.Assignment");
                    	              								afterParserOrEnumRuleCall();
                    	              							
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop87;
                        }
                    } while (true);

                    otherlv_18=(Token)match(input,22,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_18, grammarAccess.getDataflowRegionAccess().getRightCurlyBracketKeyword_9_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:2347:4: (otherlv_19= ':' ( (lv_declarations_20_0= ruleDeclarationWOSemicolon ) )* ( ( (lv_equations_21_1= ruleDataflowAssignment | lv_equations_21_2= ruleAssignment ) ) )* )
                    {
                    // InternalSCTX.g:2347:4: (otherlv_19= ':' ( (lv_declarations_20_0= ruleDeclarationWOSemicolon ) )* ( ( (lv_equations_21_1= ruleDataflowAssignment | lv_equations_21_2= ruleAssignment ) ) )* )
                    // InternalSCTX.g:2348:5: otherlv_19= ':' ( (lv_declarations_20_0= ruleDeclarationWOSemicolon ) )* ( ( (lv_equations_21_1= ruleDataflowAssignment | lv_equations_21_2= ruleAssignment ) ) )*
                    {
                    otherlv_19=(Token)match(input,45,FollowSets000.FOLLOW_84); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_19, grammarAccess.getDataflowRegionAccess().getColonKeyword_9_1_0());
                      				
                    }
                    // InternalSCTX.g:2352:5: ( (lv_declarations_20_0= ruleDeclarationWOSemicolon ) )*
                    loop88:
                    do {
                        int alt88=2;
                        alt88 = dfa88.predict(input);
                        switch (alt88) {
                    	case 1 :
                    	    // InternalSCTX.g:2353:6: (lv_declarations_20_0= ruleDeclarationWOSemicolon )
                    	    {
                    	    // InternalSCTX.g:2353:6: (lv_declarations_20_0= ruleDeclarationWOSemicolon )
                    	    // InternalSCTX.g:2354:7: lv_declarations_20_0= ruleDeclarationWOSemicolon
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getDataflowRegionAccess().getDeclarationsDeclarationWOSemicolonParserRuleCall_9_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_84);
                    	    lv_declarations_20_0=ruleDeclarationWOSemicolon();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getDataflowRegionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"declarations",
                    	      								lv_declarations_20_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.DeclarationWOSemicolon");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop88;
                        }
                    } while (true);

                    // InternalSCTX.g:2371:5: ( ( (lv_equations_21_1= ruleDataflowAssignment | lv_equations_21_2= ruleAssignment ) ) )*
                    loop90:
                    do {
                        int alt90=2;
                        alt90 = dfa90.predict(input);
                        switch (alt90) {
                    	case 1 :
                    	    // InternalSCTX.g:2372:6: ( (lv_equations_21_1= ruleDataflowAssignment | lv_equations_21_2= ruleAssignment ) )
                    	    {
                    	    // InternalSCTX.g:2372:6: ( (lv_equations_21_1= ruleDataflowAssignment | lv_equations_21_2= ruleAssignment ) )
                    	    // InternalSCTX.g:2373:7: (lv_equations_21_1= ruleDataflowAssignment | lv_equations_21_2= ruleAssignment )
                    	    {
                    	    // InternalSCTX.g:2373:7: (lv_equations_21_1= ruleDataflowAssignment | lv_equations_21_2= ruleAssignment )
                    	    int alt89=2;
                    	    switch ( input.LA(1) ) {
                    	    case RULE_COMMENT_ANNOTATION:
                    	        {
                    	        int LA89_1 = input.LA(2);

                    	        if ( (synpred94_InternalSCTX()) ) {
                    	            alt89=1;
                    	        }
                    	        else if ( (true) ) {
                    	            alt89=2;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return current;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 89, 1, input);

                    	            throw nvae;
                    	        }
                    	        }
                    	        break;
                    	    case 103:
                    	        {
                    	        int LA89_2 = input.LA(2);

                    	        if ( (synpred94_InternalSCTX()) ) {
                    	            alt89=1;
                    	        }
                    	        else if ( (true) ) {
                    	            alt89=2;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return current;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 89, 2, input);

                    	            throw nvae;
                    	        }
                    	        }
                    	        break;
                    	    case RULE_ID:
                    	        {
                    	        int LA89_3 = input.LA(2);

                    	        if ( (synpred94_InternalSCTX()) ) {
                    	            alt89=1;
                    	        }
                    	        else if ( (true) ) {
                    	            alt89=2;
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return current;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 89, 3, input);

                    	            throw nvae;
                    	        }
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 89, 0, input);

                    	        throw nvae;
                    	    }

                    	    switch (alt89) {
                    	        case 1 :
                    	            // InternalSCTX.g:2374:8: lv_equations_21_1= ruleDataflowAssignment
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              								newCompositeNode(grammarAccess.getDataflowRegionAccess().getEquationsDataflowAssignmentParserRuleCall_9_1_2_0_0());
                    	              							
                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_85);
                    	            lv_equations_21_1=ruleDataflowAssignment();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElementForParent(grammarAccess.getDataflowRegionRule());
                    	              								}
                    	              								add(
                    	              									current,
                    	              									"equations",
                    	              									lv_equations_21_1,
                    	              									"de.cau.cs.kieler.sccharts.text.SCTX.DataflowAssignment");
                    	              								afterParserOrEnumRuleCall();
                    	              							
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // InternalSCTX.g:2390:8: lv_equations_21_2= ruleAssignment
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              								newCompositeNode(grammarAccess.getDataflowRegionAccess().getEquationsAssignmentParserRuleCall_9_1_2_0_1());
                    	              							
                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_85);
                    	            lv_equations_21_2=ruleAssignment();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElementForParent(grammarAccess.getDataflowRegionRule());
                    	              								}
                    	              								add(
                    	              									current,
                    	              									"equations",
                    	              									lv_equations_21_2,
                    	              									"de.cau.cs.kieler.kexpressions.keffects.KEffects.Assignment");
                    	              								afterParserOrEnumRuleCall();
                    	              							
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop90;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDataflowRegion"


    // $ANTLR start "entryRuleIntOrReference"
    // InternalSCTX.g:2414:1: entryRuleIntOrReference returns [EObject current=null] : iv_ruleIntOrReference= ruleIntOrReference EOF ;
    public final EObject entryRuleIntOrReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIntOrReference = null;


        try {
            // InternalSCTX.g:2414:55: (iv_ruleIntOrReference= ruleIntOrReference EOF )
            // InternalSCTX.g:2415:2: iv_ruleIntOrReference= ruleIntOrReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIntOrReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleIntOrReference=ruleIntOrReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIntOrReference; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIntOrReference"


    // $ANTLR start "ruleIntOrReference"
    // InternalSCTX.g:2421:1: ruleIntOrReference returns [EObject current=null] : (this_IntValue_0= ruleIntValue | this_ValuedObjectReference_1= ruleValuedObjectReference ) ;
    public final EObject ruleIntOrReference() throws RecognitionException {
        EObject current = null;

        EObject this_IntValue_0 = null;

        EObject this_ValuedObjectReference_1 = null;



        	enterRule();

        try {
            // InternalSCTX.g:2427:2: ( (this_IntValue_0= ruleIntValue | this_ValuedObjectReference_1= ruleValuedObjectReference ) )
            // InternalSCTX.g:2428:2: (this_IntValue_0= ruleIntValue | this_ValuedObjectReference_1= ruleValuedObjectReference )
            {
            // InternalSCTX.g:2428:2: (this_IntValue_0= ruleIntValue | this_ValuedObjectReference_1= ruleValuedObjectReference )
            int alt92=2;
            int LA92_0 = input.LA(1);

            if ( (LA92_0==RULE_INT) ) {
                alt92=1;
            }
            else if ( (LA92_0==RULE_ID) ) {
                alt92=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 92, 0, input);

                throw nvae;
            }
            switch (alt92) {
                case 1 :
                    // InternalSCTX.g:2429:3: this_IntValue_0= ruleIntValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getIntOrReferenceAccess().getIntValueParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_IntValue_0=ruleIntValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_IntValue_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:2441:3: this_ValuedObjectReference_1= ruleValuedObjectReference
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getIntOrReferenceAccess().getValuedObjectReferenceParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedObjectReference_1=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ValuedObjectReference_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIntOrReference"


    // $ANTLR start "entryRuleCounterVariable"
    // InternalSCTX.g:2456:1: entryRuleCounterVariable returns [EObject current=null] : iv_ruleCounterVariable= ruleCounterVariable EOF ;
    public final EObject entryRuleCounterVariable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCounterVariable = null;


        try {
            // InternalSCTX.g:2456:56: (iv_ruleCounterVariable= ruleCounterVariable EOF )
            // InternalSCTX.g:2457:2: iv_ruleCounterVariable= ruleCounterVariable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCounterVariableRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCounterVariable=ruleCounterVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCounterVariable; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCounterVariable"


    // $ANTLR start "ruleCounterVariable"
    // InternalSCTX.g:2463:1: ruleCounterVariable returns [EObject current=null] : ( (lv_name_0_0= rulePrimeID ) ) ;
    public final EObject ruleCounterVariable() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_name_0_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:2469:2: ( ( (lv_name_0_0= rulePrimeID ) ) )
            // InternalSCTX.g:2470:2: ( (lv_name_0_0= rulePrimeID ) )
            {
            // InternalSCTX.g:2470:2: ( (lv_name_0_0= rulePrimeID ) )
            // InternalSCTX.g:2471:3: (lv_name_0_0= rulePrimeID )
            {
            // InternalSCTX.g:2471:3: (lv_name_0_0= rulePrimeID )
            // InternalSCTX.g:2472:4: lv_name_0_0= rulePrimeID
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getCounterVariableAccess().getNamePrimeIDParserRuleCall_0());
              			
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_name_0_0=rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getCounterVariableRule());
              				}
              				set(
              					current,
              					"name",
              					lv_name_0_0,
              					"de.cau.cs.kieler.kexpressions.KExpressions.PrimeID");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCounterVariable"


    // $ANTLR start "entryRuleLocalAction"
    // InternalSCTX.g:2492:1: entryRuleLocalAction returns [EObject current=null] : iv_ruleLocalAction= ruleLocalAction EOF ;
    public final EObject entryRuleLocalAction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLocalAction = null;


        try {
            // InternalSCTX.g:2492:52: (iv_ruleLocalAction= ruleLocalAction EOF )
            // InternalSCTX.g:2493:2: iv_ruleLocalAction= ruleLocalAction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLocalActionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLocalAction=ruleLocalAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLocalAction; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLocalAction"


    // $ANTLR start "ruleLocalAction"
    // InternalSCTX.g:2499:1: ruleLocalAction returns [EObject current=null] : (this_EntryAction_0= ruleEntryAction | this_DuringAction_1= ruleDuringAction | this_ExitAction_2= ruleExitAction | this_SuspendAction_3= ruleSuspendAction | this_PeriodAction_4= rulePeriodAction ) ;
    public final EObject ruleLocalAction() throws RecognitionException {
        EObject current = null;

        EObject this_EntryAction_0 = null;

        EObject this_DuringAction_1 = null;

        EObject this_ExitAction_2 = null;

        EObject this_SuspendAction_3 = null;

        EObject this_PeriodAction_4 = null;



        	enterRule();

        try {
            // InternalSCTX.g:2505:2: ( (this_EntryAction_0= ruleEntryAction | this_DuringAction_1= ruleDuringAction | this_ExitAction_2= ruleExitAction | this_SuspendAction_3= ruleSuspendAction | this_PeriodAction_4= rulePeriodAction ) )
            // InternalSCTX.g:2506:2: (this_EntryAction_0= ruleEntryAction | this_DuringAction_1= ruleDuringAction | this_ExitAction_2= ruleExitAction | this_SuspendAction_3= ruleSuspendAction | this_PeriodAction_4= rulePeriodAction )
            {
            // InternalSCTX.g:2506:2: (this_EntryAction_0= ruleEntryAction | this_DuringAction_1= ruleDuringAction | this_ExitAction_2= ruleExitAction | this_SuspendAction_3= ruleSuspendAction | this_PeriodAction_4= rulePeriodAction )
            int alt93=5;
            alt93 = dfa93.predict(input);
            switch (alt93) {
                case 1 :
                    // InternalSCTX.g:2507:3: this_EntryAction_0= ruleEntryAction
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLocalActionAccess().getEntryActionParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_EntryAction_0=ruleEntryAction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EntryAction_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:2519:3: this_DuringAction_1= ruleDuringAction
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLocalActionAccess().getDuringActionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_DuringAction_1=ruleDuringAction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DuringAction_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:2531:3: this_ExitAction_2= ruleExitAction
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLocalActionAccess().getExitActionParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ExitAction_2=ruleExitAction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ExitAction_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSCTX.g:2543:3: this_SuspendAction_3= ruleSuspendAction
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLocalActionAccess().getSuspendActionParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_SuspendAction_3=ruleSuspendAction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SuspendAction_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalSCTX.g:2555:3: this_PeriodAction_4= rulePeriodAction
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLocalActionAccess().getPeriodActionParserRuleCall_4());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PeriodAction_4=rulePeriodAction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PeriodAction_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLocalAction"


    // $ANTLR start "entryRuleEntryAction"
    // InternalSCTX.g:2570:1: entryRuleEntryAction returns [EObject current=null] : iv_ruleEntryAction= ruleEntryAction EOF ;
    public final EObject entryRuleEntryAction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEntryAction = null;


        try {
            // InternalSCTX.g:2570:52: (iv_ruleEntryAction= ruleEntryAction EOF )
            // InternalSCTX.g:2571:2: iv_ruleEntryAction= ruleEntryAction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEntryActionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEntryAction=ruleEntryAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEntryAction; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEntryAction"


    // $ANTLR start "ruleEntryAction"
    // InternalSCTX.g:2577:1: ruleEntryAction returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* ( (lv_preemption_2_0= rulePreemptionActionType ) )? otherlv_3= 'entry' (otherlv_4= 'if' ( (lv_trigger_5_0= ruleBoolScheduleExpression ) ) (otherlv_6= 'Pr' ( (lv_triggerProbability_7_0= RULE_FLOAT ) ) )? )? (otherlv_8= 'do' ( (lv_effects_9_0= ruleEffect ) ) (otherlv_10= ';' ( (lv_effects_11_0= ruleEffect ) ) )* )? (otherlv_12= 'label' ( (lv_label_13_0= RULE_STRING ) ) )? ) ;
    public final EObject ruleEntryAction() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token lv_triggerProbability_7_0=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token lv_label_13_0=null;
        EObject lv_annotations_1_0 = null;

        Enumerator lv_preemption_2_0 = null;

        EObject lv_trigger_5_0 = null;

        EObject lv_effects_9_0 = null;

        EObject lv_effects_11_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:2583:2: ( ( () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* ( (lv_preemption_2_0= rulePreemptionActionType ) )? otherlv_3= 'entry' (otherlv_4= 'if' ( (lv_trigger_5_0= ruleBoolScheduleExpression ) ) (otherlv_6= 'Pr' ( (lv_triggerProbability_7_0= RULE_FLOAT ) ) )? )? (otherlv_8= 'do' ( (lv_effects_9_0= ruleEffect ) ) (otherlv_10= ';' ( (lv_effects_11_0= ruleEffect ) ) )* )? (otherlv_12= 'label' ( (lv_label_13_0= RULE_STRING ) ) )? ) )
            // InternalSCTX.g:2584:2: ( () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* ( (lv_preemption_2_0= rulePreemptionActionType ) )? otherlv_3= 'entry' (otherlv_4= 'if' ( (lv_trigger_5_0= ruleBoolScheduleExpression ) ) (otherlv_6= 'Pr' ( (lv_triggerProbability_7_0= RULE_FLOAT ) ) )? )? (otherlv_8= 'do' ( (lv_effects_9_0= ruleEffect ) ) (otherlv_10= ';' ( (lv_effects_11_0= ruleEffect ) ) )* )? (otherlv_12= 'label' ( (lv_label_13_0= RULE_STRING ) ) )? )
            {
            // InternalSCTX.g:2584:2: ( () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* ( (lv_preemption_2_0= rulePreemptionActionType ) )? otherlv_3= 'entry' (otherlv_4= 'if' ( (lv_trigger_5_0= ruleBoolScheduleExpression ) ) (otherlv_6= 'Pr' ( (lv_triggerProbability_7_0= RULE_FLOAT ) ) )? )? (otherlv_8= 'do' ( (lv_effects_9_0= ruleEffect ) ) (otherlv_10= ';' ( (lv_effects_11_0= ruleEffect ) ) )* )? (otherlv_12= 'label' ( (lv_label_13_0= RULE_STRING ) ) )? )
            // InternalSCTX.g:2585:3: () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* ( (lv_preemption_2_0= rulePreemptionActionType ) )? otherlv_3= 'entry' (otherlv_4= 'if' ( (lv_trigger_5_0= ruleBoolScheduleExpression ) ) (otherlv_6= 'Pr' ( (lv_triggerProbability_7_0= RULE_FLOAT ) ) )? )? (otherlv_8= 'do' ( (lv_effects_9_0= ruleEffect ) ) (otherlv_10= ';' ( (lv_effects_11_0= ruleEffect ) ) )* )? (otherlv_12= 'label' ( (lv_label_13_0= RULE_STRING ) ) )?
            {
            // InternalSCTX.g:2585:3: ()
            // InternalSCTX.g:2586:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getEntryActionAccess().getEntryActionAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:2595:3: ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )*
            loop94:
            do {
                int alt94=2;
                int LA94_0 = input.LA(1);

                if ( (LA94_0==RULE_COMMENT_ANNOTATION||LA94_0==103) ) {
                    alt94=1;
                }


                switch (alt94) {
            	case 1 :
            	    // InternalSCTX.g:2596:4: (lv_annotations_1_0= ruleRestrictedTypeAnnotation )
            	    {
            	    // InternalSCTX.g:2596:4: (lv_annotations_1_0= ruleRestrictedTypeAnnotation )
            	    // InternalSCTX.g:2597:5: lv_annotations_1_0= ruleRestrictedTypeAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getEntryActionAccess().getAnnotationsRestrictedTypeAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_86);
            	    lv_annotations_1_0=ruleRestrictedTypeAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getEntryActionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.RestrictedTypeAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop94;
                }
            } while (true);

            // InternalSCTX.g:2614:3: ( (lv_preemption_2_0= rulePreemptionActionType ) )?
            int alt95=2;
            int LA95_0 = input.LA(1);

            if ( (LA95_0==53||LA95_0==106) ) {
                alt95=1;
            }
            switch (alt95) {
                case 1 :
                    // InternalSCTX.g:2615:4: (lv_preemption_2_0= rulePreemptionActionType )
                    {
                    // InternalSCTX.g:2615:4: (lv_preemption_2_0= rulePreemptionActionType )
                    // InternalSCTX.g:2616:5: lv_preemption_2_0= rulePreemptionActionType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getEntryActionAccess().getPreemptionPreemptionActionTypeEnumRuleCall_2_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_87);
                    lv_preemption_2_0=rulePreemptionActionType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getEntryActionRule());
                      					}
                      					set(
                      						current,
                      						"preemption",
                      						lv_preemption_2_0,
                      						"de.cau.cs.kieler.sccharts.text.SCTX.PreemptionActionType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,49,FollowSets000.FOLLOW_88); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getEntryActionAccess().getEntryKeyword_3());
              		
            }
            // InternalSCTX.g:2637:3: (otherlv_4= 'if' ( (lv_trigger_5_0= ruleBoolScheduleExpression ) ) (otherlv_6= 'Pr' ( (lv_triggerProbability_7_0= RULE_FLOAT ) ) )? )?
            int alt97=2;
            int LA97_0 = input.LA(1);

            if ( (LA97_0==36) ) {
                alt97=1;
            }
            switch (alt97) {
                case 1 :
                    // InternalSCTX.g:2638:4: otherlv_4= 'if' ( (lv_trigger_5_0= ruleBoolScheduleExpression ) ) (otherlv_6= 'Pr' ( (lv_triggerProbability_7_0= RULE_FLOAT ) ) )?
                    {
                    otherlv_4=(Token)match(input,36,FollowSets000.FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getEntryActionAccess().getIfKeyword_4_0());
                      			
                    }
                    // InternalSCTX.g:2642:4: ( (lv_trigger_5_0= ruleBoolScheduleExpression ) )
                    // InternalSCTX.g:2643:5: (lv_trigger_5_0= ruleBoolScheduleExpression )
                    {
                    // InternalSCTX.g:2643:5: (lv_trigger_5_0= ruleBoolScheduleExpression )
                    // InternalSCTX.g:2644:6: lv_trigger_5_0= ruleBoolScheduleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEntryActionAccess().getTriggerBoolScheduleExpressionParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_89);
                    lv_trigger_5_0=ruleBoolScheduleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEntryActionRule());
                      						}
                      						set(
                      							current,
                      							"trigger",
                      							lv_trigger_5_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.BoolScheduleExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:2661:4: (otherlv_6= 'Pr' ( (lv_triggerProbability_7_0= RULE_FLOAT ) ) )?
                    int alt96=2;
                    int LA96_0 = input.LA(1);

                    if ( (LA96_0==50) ) {
                        alt96=1;
                    }
                    switch (alt96) {
                        case 1 :
                            // InternalSCTX.g:2662:5: otherlv_6= 'Pr' ( (lv_triggerProbability_7_0= RULE_FLOAT ) )
                            {
                            otherlv_6=(Token)match(input,50,FollowSets000.FOLLOW_40); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_6, grammarAccess.getEntryActionAccess().getPrKeyword_4_2_0());
                              				
                            }
                            // InternalSCTX.g:2666:5: ( (lv_triggerProbability_7_0= RULE_FLOAT ) )
                            // InternalSCTX.g:2667:6: (lv_triggerProbability_7_0= RULE_FLOAT )
                            {
                            // InternalSCTX.g:2667:6: (lv_triggerProbability_7_0= RULE_FLOAT )
                            // InternalSCTX.g:2668:7: lv_triggerProbability_7_0= RULE_FLOAT
                            {
                            lv_triggerProbability_7_0=(Token)match(input,RULE_FLOAT,FollowSets000.FOLLOW_90); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_triggerProbability_7_0, grammarAccess.getEntryActionAccess().getTriggerProbabilityFLOATTerminalRuleCall_4_2_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getEntryActionRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"triggerProbability",
                              								lv_triggerProbability_7_0,
                              								"de.cau.cs.kieler.annotations.Annotations.FLOAT");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalSCTX.g:2686:3: (otherlv_8= 'do' ( (lv_effects_9_0= ruleEffect ) ) (otherlv_10= ';' ( (lv_effects_11_0= ruleEffect ) ) )* )?
            int alt99=2;
            int LA99_0 = input.LA(1);

            if ( (LA99_0==39) ) {
                alt99=1;
            }
            switch (alt99) {
                case 1 :
                    // InternalSCTX.g:2687:4: otherlv_8= 'do' ( (lv_effects_9_0= ruleEffect ) ) (otherlv_10= ';' ( (lv_effects_11_0= ruleEffect ) ) )*
                    {
                    otherlv_8=(Token)match(input,39,FollowSets000.FOLLOW_42); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getEntryActionAccess().getDoKeyword_5_0());
                      			
                    }
                    // InternalSCTX.g:2691:4: ( (lv_effects_9_0= ruleEffect ) )
                    // InternalSCTX.g:2692:5: (lv_effects_9_0= ruleEffect )
                    {
                    // InternalSCTX.g:2692:5: (lv_effects_9_0= ruleEffect )
                    // InternalSCTX.g:2693:6: lv_effects_9_0= ruleEffect
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEntryActionAccess().getEffectsEffectParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_91);
                    lv_effects_9_0=ruleEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEntryActionRule());
                      						}
                      						add(
                      							current,
                      							"effects",
                      							lv_effects_9_0,
                      							"de.cau.cs.kieler.sccharts.text.SCTX.Effect");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:2710:4: (otherlv_10= ';' ( (lv_effects_11_0= ruleEffect ) ) )*
                    loop98:
                    do {
                        int alt98=2;
                        int LA98_0 = input.LA(1);

                        if ( (LA98_0==40) ) {
                            alt98=1;
                        }


                        switch (alt98) {
                    	case 1 :
                    	    // InternalSCTX.g:2711:5: otherlv_10= ';' ( (lv_effects_11_0= ruleEffect ) )
                    	    {
                    	    otherlv_10=(Token)match(input,40,FollowSets000.FOLLOW_42); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_10, grammarAccess.getEntryActionAccess().getSemicolonKeyword_5_2_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:2715:5: ( (lv_effects_11_0= ruleEffect ) )
                    	    // InternalSCTX.g:2716:6: (lv_effects_11_0= ruleEffect )
                    	    {
                    	    // InternalSCTX.g:2716:6: (lv_effects_11_0= ruleEffect )
                    	    // InternalSCTX.g:2717:7: lv_effects_11_0= ruleEffect
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getEntryActionAccess().getEffectsEffectParserRuleCall_5_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_91);
                    	    lv_effects_11_0=ruleEffect();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getEntryActionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"effects",
                    	      								lv_effects_11_0,
                    	      								"de.cau.cs.kieler.sccharts.text.SCTX.Effect");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop98;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalSCTX.g:2736:3: (otherlv_12= 'label' ( (lv_label_13_0= RULE_STRING ) ) )?
            int alt100=2;
            int LA100_0 = input.LA(1);

            if ( (LA100_0==41) ) {
                alt100=1;
            }
            switch (alt100) {
                case 1 :
                    // InternalSCTX.g:2737:4: otherlv_12= 'label' ( (lv_label_13_0= RULE_STRING ) )
                    {
                    otherlv_12=(Token)match(input,41,FollowSets000.FOLLOW_47); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getEntryActionAccess().getLabelKeyword_6_0());
                      			
                    }
                    // InternalSCTX.g:2741:4: ( (lv_label_13_0= RULE_STRING ) )
                    // InternalSCTX.g:2742:5: (lv_label_13_0= RULE_STRING )
                    {
                    // InternalSCTX.g:2742:5: (lv_label_13_0= RULE_STRING )
                    // InternalSCTX.g:2743:6: lv_label_13_0= RULE_STRING
                    {
                    lv_label_13_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_13_0, grammarAccess.getEntryActionAccess().getLabelSTRINGTerminalRuleCall_6_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getEntryActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_13_0,
                      							"de.cau.cs.kieler.annotations.Annotations.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEntryAction"


    // $ANTLR start "entryRuleDuringAction"
    // InternalSCTX.g:2764:1: entryRuleDuringAction returns [EObject current=null] : iv_ruleDuringAction= ruleDuringAction EOF ;
    public final EObject entryRuleDuringAction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDuringAction = null;


        try {
            // InternalSCTX.g:2764:53: (iv_ruleDuringAction= ruleDuringAction EOF )
            // InternalSCTX.g:2765:2: iv_ruleDuringAction= ruleDuringAction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDuringActionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDuringAction=ruleDuringAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDuringAction; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDuringAction"


    // $ANTLR start "ruleDuringAction"
    // InternalSCTX.g:2771:1: ruleDuringAction returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* ( (lv_delay_2_0= ruleDelayType ) )? otherlv_3= 'during' (otherlv_4= 'if' ( (lv_triggerDelay_5_0= RULE_INT ) )? ( (lv_trigger_6_0= ruleBoolScheduleExpression ) ) (otherlv_7= 'Pr=' ( (lv_triggerProbability_8_0= RULE_FLOAT ) ) )? )? (otherlv_9= 'do' ( (lv_effects_10_0= ruleEffect ) ) (otherlv_11= ';' ( (lv_effects_12_0= ruleEffect ) ) )* )? (otherlv_13= 'label' ( (lv_label_14_0= RULE_STRING ) ) )? ) ;
    public final EObject ruleDuringAction() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        Token otherlv_4=null;
        Token lv_triggerDelay_5_0=null;
        Token otherlv_7=null;
        Token lv_triggerProbability_8_0=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token lv_label_14_0=null;
        EObject lv_annotations_1_0 = null;

        Enumerator lv_delay_2_0 = null;

        EObject lv_trigger_6_0 = null;

        EObject lv_effects_10_0 = null;

        EObject lv_effects_12_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:2777:2: ( ( () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* ( (lv_delay_2_0= ruleDelayType ) )? otherlv_3= 'during' (otherlv_4= 'if' ( (lv_triggerDelay_5_0= RULE_INT ) )? ( (lv_trigger_6_0= ruleBoolScheduleExpression ) ) (otherlv_7= 'Pr=' ( (lv_triggerProbability_8_0= RULE_FLOAT ) ) )? )? (otherlv_9= 'do' ( (lv_effects_10_0= ruleEffect ) ) (otherlv_11= ';' ( (lv_effects_12_0= ruleEffect ) ) )* )? (otherlv_13= 'label' ( (lv_label_14_0= RULE_STRING ) ) )? ) )
            // InternalSCTX.g:2778:2: ( () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* ( (lv_delay_2_0= ruleDelayType ) )? otherlv_3= 'during' (otherlv_4= 'if' ( (lv_triggerDelay_5_0= RULE_INT ) )? ( (lv_trigger_6_0= ruleBoolScheduleExpression ) ) (otherlv_7= 'Pr=' ( (lv_triggerProbability_8_0= RULE_FLOAT ) ) )? )? (otherlv_9= 'do' ( (lv_effects_10_0= ruleEffect ) ) (otherlv_11= ';' ( (lv_effects_12_0= ruleEffect ) ) )* )? (otherlv_13= 'label' ( (lv_label_14_0= RULE_STRING ) ) )? )
            {
            // InternalSCTX.g:2778:2: ( () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* ( (lv_delay_2_0= ruleDelayType ) )? otherlv_3= 'during' (otherlv_4= 'if' ( (lv_triggerDelay_5_0= RULE_INT ) )? ( (lv_trigger_6_0= ruleBoolScheduleExpression ) ) (otherlv_7= 'Pr=' ( (lv_triggerProbability_8_0= RULE_FLOAT ) ) )? )? (otherlv_9= 'do' ( (lv_effects_10_0= ruleEffect ) ) (otherlv_11= ';' ( (lv_effects_12_0= ruleEffect ) ) )* )? (otherlv_13= 'label' ( (lv_label_14_0= RULE_STRING ) ) )? )
            // InternalSCTX.g:2779:3: () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* ( (lv_delay_2_0= ruleDelayType ) )? otherlv_3= 'during' (otherlv_4= 'if' ( (lv_triggerDelay_5_0= RULE_INT ) )? ( (lv_trigger_6_0= ruleBoolScheduleExpression ) ) (otherlv_7= 'Pr=' ( (lv_triggerProbability_8_0= RULE_FLOAT ) ) )? )? (otherlv_9= 'do' ( (lv_effects_10_0= ruleEffect ) ) (otherlv_11= ';' ( (lv_effects_12_0= ruleEffect ) ) )* )? (otherlv_13= 'label' ( (lv_label_14_0= RULE_STRING ) ) )?
            {
            // InternalSCTX.g:2779:3: ()
            // InternalSCTX.g:2780:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDuringActionAccess().getDuringActionAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:2789:3: ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )*
            loop101:
            do {
                int alt101=2;
                int LA101_0 = input.LA(1);

                if ( (LA101_0==RULE_COMMENT_ANNOTATION||LA101_0==103) ) {
                    alt101=1;
                }


                switch (alt101) {
            	case 1 :
            	    // InternalSCTX.g:2790:4: (lv_annotations_1_0= ruleRestrictedTypeAnnotation )
            	    {
            	    // InternalSCTX.g:2790:4: (lv_annotations_1_0= ruleRestrictedTypeAnnotation )
            	    // InternalSCTX.g:2791:5: lv_annotations_1_0= ruleRestrictedTypeAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getDuringActionAccess().getAnnotationsRestrictedTypeAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_92);
            	    lv_annotations_1_0=ruleRestrictedTypeAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getDuringActionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.RestrictedTypeAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop101;
                }
            } while (true);

            // InternalSCTX.g:2808:3: ( (lv_delay_2_0= ruleDelayType ) )?
            int alt102=2;
            int LA102_0 = input.LA(1);

            if ( ((LA102_0>=107 && LA102_0<=110)) ) {
                alt102=1;
            }
            switch (alt102) {
                case 1 :
                    // InternalSCTX.g:2809:4: (lv_delay_2_0= ruleDelayType )
                    {
                    // InternalSCTX.g:2809:4: (lv_delay_2_0= ruleDelayType )
                    // InternalSCTX.g:2810:5: lv_delay_2_0= ruleDelayType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDuringActionAccess().getDelayDelayTypeEnumRuleCall_2_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_93);
                    lv_delay_2_0=ruleDelayType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDuringActionRule());
                      					}
                      					set(
                      						current,
                      						"delay",
                      						lv_delay_2_0,
                      						"de.cau.cs.kieler.sccharts.text.SCTX.DelayType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,51,FollowSets000.FOLLOW_88); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getDuringActionAccess().getDuringKeyword_3());
              		
            }
            // InternalSCTX.g:2831:3: (otherlv_4= 'if' ( (lv_triggerDelay_5_0= RULE_INT ) )? ( (lv_trigger_6_0= ruleBoolScheduleExpression ) ) (otherlv_7= 'Pr=' ( (lv_triggerProbability_8_0= RULE_FLOAT ) ) )? )?
            int alt105=2;
            int LA105_0 = input.LA(1);

            if ( (LA105_0==36) ) {
                alt105=1;
            }
            switch (alt105) {
                case 1 :
                    // InternalSCTX.g:2832:4: otherlv_4= 'if' ( (lv_triggerDelay_5_0= RULE_INT ) )? ( (lv_trigger_6_0= ruleBoolScheduleExpression ) ) (otherlv_7= 'Pr=' ( (lv_triggerProbability_8_0= RULE_FLOAT ) ) )?
                    {
                    otherlv_4=(Token)match(input,36,FollowSets000.FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getDuringActionAccess().getIfKeyword_4_0());
                      			
                    }
                    // InternalSCTX.g:2836:4: ( (lv_triggerDelay_5_0= RULE_INT ) )?
                    int alt103=2;
                    alt103 = dfa103.predict(input);
                    switch (alt103) {
                        case 1 :
                            // InternalSCTX.g:2837:5: (lv_triggerDelay_5_0= RULE_INT )
                            {
                            // InternalSCTX.g:2837:5: (lv_triggerDelay_5_0= RULE_INT )
                            // InternalSCTX.g:2838:6: lv_triggerDelay_5_0= RULE_INT
                            {
                            lv_triggerDelay_5_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_38); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_triggerDelay_5_0, grammarAccess.getDuringActionAccess().getTriggerDelayINTTerminalRuleCall_4_1_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getDuringActionRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"triggerDelay",
                              							lv_triggerDelay_5_0,
                              							"de.cau.cs.kieler.annotations.Annotations.INT");
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSCTX.g:2854:4: ( (lv_trigger_6_0= ruleBoolScheduleExpression ) )
                    // InternalSCTX.g:2855:5: (lv_trigger_6_0= ruleBoolScheduleExpression )
                    {
                    // InternalSCTX.g:2855:5: (lv_trigger_6_0= ruleBoolScheduleExpression )
                    // InternalSCTX.g:2856:6: lv_trigger_6_0= ruleBoolScheduleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDuringActionAccess().getTriggerBoolScheduleExpressionParserRuleCall_4_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_94);
                    lv_trigger_6_0=ruleBoolScheduleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDuringActionRule());
                      						}
                      						set(
                      							current,
                      							"trigger",
                      							lv_trigger_6_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.BoolScheduleExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:2873:4: (otherlv_7= 'Pr=' ( (lv_triggerProbability_8_0= RULE_FLOAT ) ) )?
                    int alt104=2;
                    int LA104_0 = input.LA(1);

                    if ( (LA104_0==37) ) {
                        alt104=1;
                    }
                    switch (alt104) {
                        case 1 :
                            // InternalSCTX.g:2874:5: otherlv_7= 'Pr=' ( (lv_triggerProbability_8_0= RULE_FLOAT ) )
                            {
                            otherlv_7=(Token)match(input,37,FollowSets000.FOLLOW_40); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_7, grammarAccess.getDuringActionAccess().getPrKeyword_4_3_0());
                              				
                            }
                            // InternalSCTX.g:2878:5: ( (lv_triggerProbability_8_0= RULE_FLOAT ) )
                            // InternalSCTX.g:2879:6: (lv_triggerProbability_8_0= RULE_FLOAT )
                            {
                            // InternalSCTX.g:2879:6: (lv_triggerProbability_8_0= RULE_FLOAT )
                            // InternalSCTX.g:2880:7: lv_triggerProbability_8_0= RULE_FLOAT
                            {
                            lv_triggerProbability_8_0=(Token)match(input,RULE_FLOAT,FollowSets000.FOLLOW_90); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_triggerProbability_8_0, grammarAccess.getDuringActionAccess().getTriggerProbabilityFLOATTerminalRuleCall_4_3_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getDuringActionRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"triggerProbability",
                              								lv_triggerProbability_8_0,
                              								"de.cau.cs.kieler.annotations.Annotations.FLOAT");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalSCTX.g:2898:3: (otherlv_9= 'do' ( (lv_effects_10_0= ruleEffect ) ) (otherlv_11= ';' ( (lv_effects_12_0= ruleEffect ) ) )* )?
            int alt107=2;
            int LA107_0 = input.LA(1);

            if ( (LA107_0==39) ) {
                alt107=1;
            }
            switch (alt107) {
                case 1 :
                    // InternalSCTX.g:2899:4: otherlv_9= 'do' ( (lv_effects_10_0= ruleEffect ) ) (otherlv_11= ';' ( (lv_effects_12_0= ruleEffect ) ) )*
                    {
                    otherlv_9=(Token)match(input,39,FollowSets000.FOLLOW_42); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getDuringActionAccess().getDoKeyword_5_0());
                      			
                    }
                    // InternalSCTX.g:2903:4: ( (lv_effects_10_0= ruleEffect ) )
                    // InternalSCTX.g:2904:5: (lv_effects_10_0= ruleEffect )
                    {
                    // InternalSCTX.g:2904:5: (lv_effects_10_0= ruleEffect )
                    // InternalSCTX.g:2905:6: lv_effects_10_0= ruleEffect
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDuringActionAccess().getEffectsEffectParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_91);
                    lv_effects_10_0=ruleEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDuringActionRule());
                      						}
                      						add(
                      							current,
                      							"effects",
                      							lv_effects_10_0,
                      							"de.cau.cs.kieler.sccharts.text.SCTX.Effect");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:2922:4: (otherlv_11= ';' ( (lv_effects_12_0= ruleEffect ) ) )*
                    loop106:
                    do {
                        int alt106=2;
                        int LA106_0 = input.LA(1);

                        if ( (LA106_0==40) ) {
                            alt106=1;
                        }


                        switch (alt106) {
                    	case 1 :
                    	    // InternalSCTX.g:2923:5: otherlv_11= ';' ( (lv_effects_12_0= ruleEffect ) )
                    	    {
                    	    otherlv_11=(Token)match(input,40,FollowSets000.FOLLOW_42); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_11, grammarAccess.getDuringActionAccess().getSemicolonKeyword_5_2_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:2927:5: ( (lv_effects_12_0= ruleEffect ) )
                    	    // InternalSCTX.g:2928:6: (lv_effects_12_0= ruleEffect )
                    	    {
                    	    // InternalSCTX.g:2928:6: (lv_effects_12_0= ruleEffect )
                    	    // InternalSCTX.g:2929:7: lv_effects_12_0= ruleEffect
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getDuringActionAccess().getEffectsEffectParserRuleCall_5_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_91);
                    	    lv_effects_12_0=ruleEffect();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getDuringActionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"effects",
                    	      								lv_effects_12_0,
                    	      								"de.cau.cs.kieler.sccharts.text.SCTX.Effect");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop106;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalSCTX.g:2948:3: (otherlv_13= 'label' ( (lv_label_14_0= RULE_STRING ) ) )?
            int alt108=2;
            int LA108_0 = input.LA(1);

            if ( (LA108_0==41) ) {
                alt108=1;
            }
            switch (alt108) {
                case 1 :
                    // InternalSCTX.g:2949:4: otherlv_13= 'label' ( (lv_label_14_0= RULE_STRING ) )
                    {
                    otherlv_13=(Token)match(input,41,FollowSets000.FOLLOW_47); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getDuringActionAccess().getLabelKeyword_6_0());
                      			
                    }
                    // InternalSCTX.g:2953:4: ( (lv_label_14_0= RULE_STRING ) )
                    // InternalSCTX.g:2954:5: (lv_label_14_0= RULE_STRING )
                    {
                    // InternalSCTX.g:2954:5: (lv_label_14_0= RULE_STRING )
                    // InternalSCTX.g:2955:6: lv_label_14_0= RULE_STRING
                    {
                    lv_label_14_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_14_0, grammarAccess.getDuringActionAccess().getLabelSTRINGTerminalRuleCall_6_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDuringActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_14_0,
                      							"de.cau.cs.kieler.annotations.Annotations.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDuringAction"


    // $ANTLR start "entryRuleExitAction"
    // InternalSCTX.g:2976:1: entryRuleExitAction returns [EObject current=null] : iv_ruleExitAction= ruleExitAction EOF ;
    public final EObject entryRuleExitAction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExitAction = null;


        try {
            // InternalSCTX.g:2976:51: (iv_ruleExitAction= ruleExitAction EOF )
            // InternalSCTX.g:2977:2: iv_ruleExitAction= ruleExitAction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExitActionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleExitAction=ruleExitAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExitAction; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExitAction"


    // $ANTLR start "ruleExitAction"
    // InternalSCTX.g:2983:1: ruleExitAction returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* ( (lv_preemption_2_0= rulePreemptionActionType ) )? otherlv_3= 'exit' (otherlv_4= 'if' ( (lv_trigger_5_0= ruleBoolScheduleExpression ) ) (otherlv_6= 'Pr' ( (lv_triggerProbability_7_0= RULE_FLOAT ) ) )? )? (otherlv_8= 'do' ( (lv_effects_9_0= ruleEffect ) ) (otherlv_10= ';' ( (lv_effects_11_0= ruleEffect ) ) )* )? (otherlv_12= 'label' ( (lv_label_13_0= RULE_STRING ) ) )? ) ;
    public final EObject ruleExitAction() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token lv_triggerProbability_7_0=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token lv_label_13_0=null;
        EObject lv_annotations_1_0 = null;

        Enumerator lv_preemption_2_0 = null;

        EObject lv_trigger_5_0 = null;

        EObject lv_effects_9_0 = null;

        EObject lv_effects_11_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:2989:2: ( ( () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* ( (lv_preemption_2_0= rulePreemptionActionType ) )? otherlv_3= 'exit' (otherlv_4= 'if' ( (lv_trigger_5_0= ruleBoolScheduleExpression ) ) (otherlv_6= 'Pr' ( (lv_triggerProbability_7_0= RULE_FLOAT ) ) )? )? (otherlv_8= 'do' ( (lv_effects_9_0= ruleEffect ) ) (otherlv_10= ';' ( (lv_effects_11_0= ruleEffect ) ) )* )? (otherlv_12= 'label' ( (lv_label_13_0= RULE_STRING ) ) )? ) )
            // InternalSCTX.g:2990:2: ( () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* ( (lv_preemption_2_0= rulePreemptionActionType ) )? otherlv_3= 'exit' (otherlv_4= 'if' ( (lv_trigger_5_0= ruleBoolScheduleExpression ) ) (otherlv_6= 'Pr' ( (lv_triggerProbability_7_0= RULE_FLOAT ) ) )? )? (otherlv_8= 'do' ( (lv_effects_9_0= ruleEffect ) ) (otherlv_10= ';' ( (lv_effects_11_0= ruleEffect ) ) )* )? (otherlv_12= 'label' ( (lv_label_13_0= RULE_STRING ) ) )? )
            {
            // InternalSCTX.g:2990:2: ( () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* ( (lv_preemption_2_0= rulePreemptionActionType ) )? otherlv_3= 'exit' (otherlv_4= 'if' ( (lv_trigger_5_0= ruleBoolScheduleExpression ) ) (otherlv_6= 'Pr' ( (lv_triggerProbability_7_0= RULE_FLOAT ) ) )? )? (otherlv_8= 'do' ( (lv_effects_9_0= ruleEffect ) ) (otherlv_10= ';' ( (lv_effects_11_0= ruleEffect ) ) )* )? (otherlv_12= 'label' ( (lv_label_13_0= RULE_STRING ) ) )? )
            // InternalSCTX.g:2991:3: () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* ( (lv_preemption_2_0= rulePreemptionActionType ) )? otherlv_3= 'exit' (otherlv_4= 'if' ( (lv_trigger_5_0= ruleBoolScheduleExpression ) ) (otherlv_6= 'Pr' ( (lv_triggerProbability_7_0= RULE_FLOAT ) ) )? )? (otherlv_8= 'do' ( (lv_effects_9_0= ruleEffect ) ) (otherlv_10= ';' ( (lv_effects_11_0= ruleEffect ) ) )* )? (otherlv_12= 'label' ( (lv_label_13_0= RULE_STRING ) ) )?
            {
            // InternalSCTX.g:2991:3: ()
            // InternalSCTX.g:2992:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getExitActionAccess().getExitActionAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:3001:3: ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )*
            loop109:
            do {
                int alt109=2;
                int LA109_0 = input.LA(1);

                if ( (LA109_0==RULE_COMMENT_ANNOTATION||LA109_0==103) ) {
                    alt109=1;
                }


                switch (alt109) {
            	case 1 :
            	    // InternalSCTX.g:3002:4: (lv_annotations_1_0= ruleRestrictedTypeAnnotation )
            	    {
            	    // InternalSCTX.g:3002:4: (lv_annotations_1_0= ruleRestrictedTypeAnnotation )
            	    // InternalSCTX.g:3003:5: lv_annotations_1_0= ruleRestrictedTypeAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getExitActionAccess().getAnnotationsRestrictedTypeAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_95);
            	    lv_annotations_1_0=ruleRestrictedTypeAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getExitActionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.RestrictedTypeAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop109;
                }
            } while (true);

            // InternalSCTX.g:3020:3: ( (lv_preemption_2_0= rulePreemptionActionType ) )?
            int alt110=2;
            int LA110_0 = input.LA(1);

            if ( (LA110_0==53||LA110_0==106) ) {
                alt110=1;
            }
            switch (alt110) {
                case 1 :
                    // InternalSCTX.g:3021:4: (lv_preemption_2_0= rulePreemptionActionType )
                    {
                    // InternalSCTX.g:3021:4: (lv_preemption_2_0= rulePreemptionActionType )
                    // InternalSCTX.g:3022:5: lv_preemption_2_0= rulePreemptionActionType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getExitActionAccess().getPreemptionPreemptionActionTypeEnumRuleCall_2_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_96);
                    lv_preemption_2_0=rulePreemptionActionType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getExitActionRule());
                      					}
                      					set(
                      						current,
                      						"preemption",
                      						lv_preemption_2_0,
                      						"de.cau.cs.kieler.sccharts.text.SCTX.PreemptionActionType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,52,FollowSets000.FOLLOW_88); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getExitActionAccess().getExitKeyword_3());
              		
            }
            // InternalSCTX.g:3043:3: (otherlv_4= 'if' ( (lv_trigger_5_0= ruleBoolScheduleExpression ) ) (otherlv_6= 'Pr' ( (lv_triggerProbability_7_0= RULE_FLOAT ) ) )? )?
            int alt112=2;
            int LA112_0 = input.LA(1);

            if ( (LA112_0==36) ) {
                alt112=1;
            }
            switch (alt112) {
                case 1 :
                    // InternalSCTX.g:3044:4: otherlv_4= 'if' ( (lv_trigger_5_0= ruleBoolScheduleExpression ) ) (otherlv_6= 'Pr' ( (lv_triggerProbability_7_0= RULE_FLOAT ) ) )?
                    {
                    otherlv_4=(Token)match(input,36,FollowSets000.FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getExitActionAccess().getIfKeyword_4_0());
                      			
                    }
                    // InternalSCTX.g:3048:4: ( (lv_trigger_5_0= ruleBoolScheduleExpression ) )
                    // InternalSCTX.g:3049:5: (lv_trigger_5_0= ruleBoolScheduleExpression )
                    {
                    // InternalSCTX.g:3049:5: (lv_trigger_5_0= ruleBoolScheduleExpression )
                    // InternalSCTX.g:3050:6: lv_trigger_5_0= ruleBoolScheduleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExitActionAccess().getTriggerBoolScheduleExpressionParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_89);
                    lv_trigger_5_0=ruleBoolScheduleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExitActionRule());
                      						}
                      						set(
                      							current,
                      							"trigger",
                      							lv_trigger_5_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.BoolScheduleExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:3067:4: (otherlv_6= 'Pr' ( (lv_triggerProbability_7_0= RULE_FLOAT ) ) )?
                    int alt111=2;
                    int LA111_0 = input.LA(1);

                    if ( (LA111_0==50) ) {
                        alt111=1;
                    }
                    switch (alt111) {
                        case 1 :
                            // InternalSCTX.g:3068:5: otherlv_6= 'Pr' ( (lv_triggerProbability_7_0= RULE_FLOAT ) )
                            {
                            otherlv_6=(Token)match(input,50,FollowSets000.FOLLOW_40); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_6, grammarAccess.getExitActionAccess().getPrKeyword_4_2_0());
                              				
                            }
                            // InternalSCTX.g:3072:5: ( (lv_triggerProbability_7_0= RULE_FLOAT ) )
                            // InternalSCTX.g:3073:6: (lv_triggerProbability_7_0= RULE_FLOAT )
                            {
                            // InternalSCTX.g:3073:6: (lv_triggerProbability_7_0= RULE_FLOAT )
                            // InternalSCTX.g:3074:7: lv_triggerProbability_7_0= RULE_FLOAT
                            {
                            lv_triggerProbability_7_0=(Token)match(input,RULE_FLOAT,FollowSets000.FOLLOW_90); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_triggerProbability_7_0, grammarAccess.getExitActionAccess().getTriggerProbabilityFLOATTerminalRuleCall_4_2_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getExitActionRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"triggerProbability",
                              								lv_triggerProbability_7_0,
                              								"de.cau.cs.kieler.annotations.Annotations.FLOAT");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalSCTX.g:3092:3: (otherlv_8= 'do' ( (lv_effects_9_0= ruleEffect ) ) (otherlv_10= ';' ( (lv_effects_11_0= ruleEffect ) ) )* )?
            int alt114=2;
            int LA114_0 = input.LA(1);

            if ( (LA114_0==39) ) {
                alt114=1;
            }
            switch (alt114) {
                case 1 :
                    // InternalSCTX.g:3093:4: otherlv_8= 'do' ( (lv_effects_9_0= ruleEffect ) ) (otherlv_10= ';' ( (lv_effects_11_0= ruleEffect ) ) )*
                    {
                    otherlv_8=(Token)match(input,39,FollowSets000.FOLLOW_42); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getExitActionAccess().getDoKeyword_5_0());
                      			
                    }
                    // InternalSCTX.g:3097:4: ( (lv_effects_9_0= ruleEffect ) )
                    // InternalSCTX.g:3098:5: (lv_effects_9_0= ruleEffect )
                    {
                    // InternalSCTX.g:3098:5: (lv_effects_9_0= ruleEffect )
                    // InternalSCTX.g:3099:6: lv_effects_9_0= ruleEffect
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExitActionAccess().getEffectsEffectParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_91);
                    lv_effects_9_0=ruleEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExitActionRule());
                      						}
                      						add(
                      							current,
                      							"effects",
                      							lv_effects_9_0,
                      							"de.cau.cs.kieler.sccharts.text.SCTX.Effect");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:3116:4: (otherlv_10= ';' ( (lv_effects_11_0= ruleEffect ) ) )*
                    loop113:
                    do {
                        int alt113=2;
                        int LA113_0 = input.LA(1);

                        if ( (LA113_0==40) ) {
                            alt113=1;
                        }


                        switch (alt113) {
                    	case 1 :
                    	    // InternalSCTX.g:3117:5: otherlv_10= ';' ( (lv_effects_11_0= ruleEffect ) )
                    	    {
                    	    otherlv_10=(Token)match(input,40,FollowSets000.FOLLOW_42); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_10, grammarAccess.getExitActionAccess().getSemicolonKeyword_5_2_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:3121:5: ( (lv_effects_11_0= ruleEffect ) )
                    	    // InternalSCTX.g:3122:6: (lv_effects_11_0= ruleEffect )
                    	    {
                    	    // InternalSCTX.g:3122:6: (lv_effects_11_0= ruleEffect )
                    	    // InternalSCTX.g:3123:7: lv_effects_11_0= ruleEffect
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getExitActionAccess().getEffectsEffectParserRuleCall_5_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_91);
                    	    lv_effects_11_0=ruleEffect();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getExitActionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"effects",
                    	      								lv_effects_11_0,
                    	      								"de.cau.cs.kieler.sccharts.text.SCTX.Effect");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop113;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalSCTX.g:3142:3: (otherlv_12= 'label' ( (lv_label_13_0= RULE_STRING ) ) )?
            int alt115=2;
            int LA115_0 = input.LA(1);

            if ( (LA115_0==41) ) {
                alt115=1;
            }
            switch (alt115) {
                case 1 :
                    // InternalSCTX.g:3143:4: otherlv_12= 'label' ( (lv_label_13_0= RULE_STRING ) )
                    {
                    otherlv_12=(Token)match(input,41,FollowSets000.FOLLOW_47); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getExitActionAccess().getLabelKeyword_6_0());
                      			
                    }
                    // InternalSCTX.g:3147:4: ( (lv_label_13_0= RULE_STRING ) )
                    // InternalSCTX.g:3148:5: (lv_label_13_0= RULE_STRING )
                    {
                    // InternalSCTX.g:3148:5: (lv_label_13_0= RULE_STRING )
                    // InternalSCTX.g:3149:6: lv_label_13_0= RULE_STRING
                    {
                    lv_label_13_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_13_0, grammarAccess.getExitActionAccess().getLabelSTRINGTerminalRuleCall_6_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getExitActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_13_0,
                      							"de.cau.cs.kieler.annotations.Annotations.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExitAction"


    // $ANTLR start "entryRuleSuspendAction"
    // InternalSCTX.g:3170:1: entryRuleSuspendAction returns [EObject current=null] : iv_ruleSuspendAction= ruleSuspendAction EOF ;
    public final EObject entryRuleSuspendAction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSuspendAction = null;


        try {
            // InternalSCTX.g:3170:54: (iv_ruleSuspendAction= ruleSuspendAction EOF )
            // InternalSCTX.g:3171:2: iv_ruleSuspendAction= ruleSuspendAction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSuspendActionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSuspendAction=ruleSuspendAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSuspendAction; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSuspendAction"


    // $ANTLR start "ruleSuspendAction"
    // InternalSCTX.g:3177:1: ruleSuspendAction returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* ( (lv_delay_2_0= ruleDelayType ) )? ( (lv_weak_3_0= 'weak' ) )? otherlv_4= 'suspend' (otherlv_5= 'if' ( (lv_triggerDelay_6_0= RULE_INT ) )? ( (lv_trigger_7_0= ruleBoolScheduleExpression ) ) (otherlv_8= 'Pr=' ( (lv_triggerProbability_9_0= RULE_FLOAT ) ) )? )? (otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) ) )? ) ;
    public final EObject ruleSuspendAction() throws RecognitionException {
        EObject current = null;

        Token lv_weak_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_triggerDelay_6_0=null;
        Token otherlv_8=null;
        Token lv_triggerProbability_9_0=null;
        Token otherlv_10=null;
        Token lv_label_11_0=null;
        EObject lv_annotations_1_0 = null;

        Enumerator lv_delay_2_0 = null;

        EObject lv_trigger_7_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:3183:2: ( ( () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* ( (lv_delay_2_0= ruleDelayType ) )? ( (lv_weak_3_0= 'weak' ) )? otherlv_4= 'suspend' (otherlv_5= 'if' ( (lv_triggerDelay_6_0= RULE_INT ) )? ( (lv_trigger_7_0= ruleBoolScheduleExpression ) ) (otherlv_8= 'Pr=' ( (lv_triggerProbability_9_0= RULE_FLOAT ) ) )? )? (otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) ) )? ) )
            // InternalSCTX.g:3184:2: ( () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* ( (lv_delay_2_0= ruleDelayType ) )? ( (lv_weak_3_0= 'weak' ) )? otherlv_4= 'suspend' (otherlv_5= 'if' ( (lv_triggerDelay_6_0= RULE_INT ) )? ( (lv_trigger_7_0= ruleBoolScheduleExpression ) ) (otherlv_8= 'Pr=' ( (lv_triggerProbability_9_0= RULE_FLOAT ) ) )? )? (otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) ) )? )
            {
            // InternalSCTX.g:3184:2: ( () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* ( (lv_delay_2_0= ruleDelayType ) )? ( (lv_weak_3_0= 'weak' ) )? otherlv_4= 'suspend' (otherlv_5= 'if' ( (lv_triggerDelay_6_0= RULE_INT ) )? ( (lv_trigger_7_0= ruleBoolScheduleExpression ) ) (otherlv_8= 'Pr=' ( (lv_triggerProbability_9_0= RULE_FLOAT ) ) )? )? (otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) ) )? )
            // InternalSCTX.g:3185:3: () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* ( (lv_delay_2_0= ruleDelayType ) )? ( (lv_weak_3_0= 'weak' ) )? otherlv_4= 'suspend' (otherlv_5= 'if' ( (lv_triggerDelay_6_0= RULE_INT ) )? ( (lv_trigger_7_0= ruleBoolScheduleExpression ) ) (otherlv_8= 'Pr=' ( (lv_triggerProbability_9_0= RULE_FLOAT ) ) )? )? (otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) ) )?
            {
            // InternalSCTX.g:3185:3: ()
            // InternalSCTX.g:3186:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getSuspendActionAccess().getSuspendActionAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:3195:3: ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )*
            loop116:
            do {
                int alt116=2;
                int LA116_0 = input.LA(1);

                if ( (LA116_0==RULE_COMMENT_ANNOTATION||LA116_0==103) ) {
                    alt116=1;
                }


                switch (alt116) {
            	case 1 :
            	    // InternalSCTX.g:3196:4: (lv_annotations_1_0= ruleRestrictedTypeAnnotation )
            	    {
            	    // InternalSCTX.g:3196:4: (lv_annotations_1_0= ruleRestrictedTypeAnnotation )
            	    // InternalSCTX.g:3197:5: lv_annotations_1_0= ruleRestrictedTypeAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSuspendActionAccess().getAnnotationsRestrictedTypeAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_97);
            	    lv_annotations_1_0=ruleRestrictedTypeAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSuspendActionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.RestrictedTypeAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop116;
                }
            } while (true);

            // InternalSCTX.g:3214:3: ( (lv_delay_2_0= ruleDelayType ) )?
            int alt117=2;
            int LA117_0 = input.LA(1);

            if ( ((LA117_0>=107 && LA117_0<=110)) ) {
                alt117=1;
            }
            switch (alt117) {
                case 1 :
                    // InternalSCTX.g:3215:4: (lv_delay_2_0= ruleDelayType )
                    {
                    // InternalSCTX.g:3215:4: (lv_delay_2_0= ruleDelayType )
                    // InternalSCTX.g:3216:5: lv_delay_2_0= ruleDelayType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSuspendActionAccess().getDelayDelayTypeEnumRuleCall_2_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_98);
                    lv_delay_2_0=ruleDelayType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSuspendActionRule());
                      					}
                      					set(
                      						current,
                      						"delay",
                      						lv_delay_2_0,
                      						"de.cau.cs.kieler.sccharts.text.SCTX.DelayType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:3233:3: ( (lv_weak_3_0= 'weak' ) )?
            int alt118=2;
            int LA118_0 = input.LA(1);

            if ( (LA118_0==53) ) {
                alt118=1;
            }
            switch (alt118) {
                case 1 :
                    // InternalSCTX.g:3234:4: (lv_weak_3_0= 'weak' )
                    {
                    // InternalSCTX.g:3234:4: (lv_weak_3_0= 'weak' )
                    // InternalSCTX.g:3235:5: lv_weak_3_0= 'weak'
                    {
                    lv_weak_3_0=(Token)match(input,53,FollowSets000.FOLLOW_99); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_weak_3_0, grammarAccess.getSuspendActionAccess().getWeakWeakKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSuspendActionRule());
                      					}
                      					setWithLastConsumed(current, "weak", true, "weak");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,54,FollowSets000.FOLLOW_100); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getSuspendActionAccess().getSuspendKeyword_4());
              		
            }
            // InternalSCTX.g:3251:3: (otherlv_5= 'if' ( (lv_triggerDelay_6_0= RULE_INT ) )? ( (lv_trigger_7_0= ruleBoolScheduleExpression ) ) (otherlv_8= 'Pr=' ( (lv_triggerProbability_9_0= RULE_FLOAT ) ) )? )?
            int alt121=2;
            int LA121_0 = input.LA(1);

            if ( (LA121_0==36) ) {
                alt121=1;
            }
            switch (alt121) {
                case 1 :
                    // InternalSCTX.g:3252:4: otherlv_5= 'if' ( (lv_triggerDelay_6_0= RULE_INT ) )? ( (lv_trigger_7_0= ruleBoolScheduleExpression ) ) (otherlv_8= 'Pr=' ( (lv_triggerProbability_9_0= RULE_FLOAT ) ) )?
                    {
                    otherlv_5=(Token)match(input,36,FollowSets000.FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getSuspendActionAccess().getIfKeyword_5_0());
                      			
                    }
                    // InternalSCTX.g:3256:4: ( (lv_triggerDelay_6_0= RULE_INT ) )?
                    int alt119=2;
                    alt119 = dfa119.predict(input);
                    switch (alt119) {
                        case 1 :
                            // InternalSCTX.g:3257:5: (lv_triggerDelay_6_0= RULE_INT )
                            {
                            // InternalSCTX.g:3257:5: (lv_triggerDelay_6_0= RULE_INT )
                            // InternalSCTX.g:3258:6: lv_triggerDelay_6_0= RULE_INT
                            {
                            lv_triggerDelay_6_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_38); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_triggerDelay_6_0, grammarAccess.getSuspendActionAccess().getTriggerDelayINTTerminalRuleCall_5_1_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getSuspendActionRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"triggerDelay",
                              							lv_triggerDelay_6_0,
                              							"de.cau.cs.kieler.annotations.Annotations.INT");
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSCTX.g:3274:4: ( (lv_trigger_7_0= ruleBoolScheduleExpression ) )
                    // InternalSCTX.g:3275:5: (lv_trigger_7_0= ruleBoolScheduleExpression )
                    {
                    // InternalSCTX.g:3275:5: (lv_trigger_7_0= ruleBoolScheduleExpression )
                    // InternalSCTX.g:3276:6: lv_trigger_7_0= ruleBoolScheduleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSuspendActionAccess().getTriggerBoolScheduleExpressionParserRuleCall_5_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_101);
                    lv_trigger_7_0=ruleBoolScheduleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSuspendActionRule());
                      						}
                      						set(
                      							current,
                      							"trigger",
                      							lv_trigger_7_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.BoolScheduleExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:3293:4: (otherlv_8= 'Pr=' ( (lv_triggerProbability_9_0= RULE_FLOAT ) ) )?
                    int alt120=2;
                    int LA120_0 = input.LA(1);

                    if ( (LA120_0==37) ) {
                        alt120=1;
                    }
                    switch (alt120) {
                        case 1 :
                            // InternalSCTX.g:3294:5: otherlv_8= 'Pr=' ( (lv_triggerProbability_9_0= RULE_FLOAT ) )
                            {
                            otherlv_8=(Token)match(input,37,FollowSets000.FOLLOW_40); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_8, grammarAccess.getSuspendActionAccess().getPrKeyword_5_3_0());
                              				
                            }
                            // InternalSCTX.g:3298:5: ( (lv_triggerProbability_9_0= RULE_FLOAT ) )
                            // InternalSCTX.g:3299:6: (lv_triggerProbability_9_0= RULE_FLOAT )
                            {
                            // InternalSCTX.g:3299:6: (lv_triggerProbability_9_0= RULE_FLOAT )
                            // InternalSCTX.g:3300:7: lv_triggerProbability_9_0= RULE_FLOAT
                            {
                            lv_triggerProbability_9_0=(Token)match(input,RULE_FLOAT,FollowSets000.FOLLOW_46); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_triggerProbability_9_0, grammarAccess.getSuspendActionAccess().getTriggerProbabilityFLOATTerminalRuleCall_5_3_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSuspendActionRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"triggerProbability",
                              								lv_triggerProbability_9_0,
                              								"de.cau.cs.kieler.annotations.Annotations.FLOAT");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalSCTX.g:3318:3: (otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) ) )?
            int alt122=2;
            int LA122_0 = input.LA(1);

            if ( (LA122_0==41) ) {
                alt122=1;
            }
            switch (alt122) {
                case 1 :
                    // InternalSCTX.g:3319:4: otherlv_10= 'label' ( (lv_label_11_0= RULE_STRING ) )
                    {
                    otherlv_10=(Token)match(input,41,FollowSets000.FOLLOW_47); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getSuspendActionAccess().getLabelKeyword_6_0());
                      			
                    }
                    // InternalSCTX.g:3323:4: ( (lv_label_11_0= RULE_STRING ) )
                    // InternalSCTX.g:3324:5: (lv_label_11_0= RULE_STRING )
                    {
                    // InternalSCTX.g:3324:5: (lv_label_11_0= RULE_STRING )
                    // InternalSCTX.g:3325:6: lv_label_11_0= RULE_STRING
                    {
                    lv_label_11_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_11_0, grammarAccess.getSuspendActionAccess().getLabelSTRINGTerminalRuleCall_6_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSuspendActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_11_0,
                      							"de.cau.cs.kieler.annotations.Annotations.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSuspendAction"


    // $ANTLR start "entryRulePeriodAction"
    // InternalSCTX.g:3346:1: entryRulePeriodAction returns [EObject current=null] : iv_rulePeriodAction= rulePeriodAction EOF ;
    public final EObject entryRulePeriodAction() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePeriodAction = null;


        try {
            // InternalSCTX.g:3346:53: (iv_rulePeriodAction= rulePeriodAction EOF )
            // InternalSCTX.g:3347:2: iv_rulePeriodAction= rulePeriodAction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPeriodActionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePeriodAction=rulePeriodAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePeriodAction; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePeriodAction"


    // $ANTLR start "rulePeriodAction"
    // InternalSCTX.g:3353:1: rulePeriodAction returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* ( (lv_delay_2_0= ruleDelayType ) )? otherlv_3= 'period' ( (lv_trigger_4_0= ruleValuedExpression ) ) (otherlv_5= 'label' ( (lv_label_6_0= RULE_STRING ) ) )? ) ;
    public final EObject rulePeriodAction() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        Token otherlv_5=null;
        Token lv_label_6_0=null;
        EObject lv_annotations_1_0 = null;

        Enumerator lv_delay_2_0 = null;

        EObject lv_trigger_4_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:3359:2: ( ( () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* ( (lv_delay_2_0= ruleDelayType ) )? otherlv_3= 'period' ( (lv_trigger_4_0= ruleValuedExpression ) ) (otherlv_5= 'label' ( (lv_label_6_0= RULE_STRING ) ) )? ) )
            // InternalSCTX.g:3360:2: ( () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* ( (lv_delay_2_0= ruleDelayType ) )? otherlv_3= 'period' ( (lv_trigger_4_0= ruleValuedExpression ) ) (otherlv_5= 'label' ( (lv_label_6_0= RULE_STRING ) ) )? )
            {
            // InternalSCTX.g:3360:2: ( () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* ( (lv_delay_2_0= ruleDelayType ) )? otherlv_3= 'period' ( (lv_trigger_4_0= ruleValuedExpression ) ) (otherlv_5= 'label' ( (lv_label_6_0= RULE_STRING ) ) )? )
            // InternalSCTX.g:3361:3: () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* ( (lv_delay_2_0= ruleDelayType ) )? otherlv_3= 'period' ( (lv_trigger_4_0= ruleValuedExpression ) ) (otherlv_5= 'label' ( (lv_label_6_0= RULE_STRING ) ) )?
            {
            // InternalSCTX.g:3361:3: ()
            // InternalSCTX.g:3362:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getPeriodActionAccess().getPeriodActionAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:3371:3: ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )*
            loop123:
            do {
                int alt123=2;
                int LA123_0 = input.LA(1);

                if ( (LA123_0==RULE_COMMENT_ANNOTATION||LA123_0==103) ) {
                    alt123=1;
                }


                switch (alt123) {
            	case 1 :
            	    // InternalSCTX.g:3372:4: (lv_annotations_1_0= ruleRestrictedTypeAnnotation )
            	    {
            	    // InternalSCTX.g:3372:4: (lv_annotations_1_0= ruleRestrictedTypeAnnotation )
            	    // InternalSCTX.g:3373:5: lv_annotations_1_0= ruleRestrictedTypeAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getPeriodActionAccess().getAnnotationsRestrictedTypeAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_102);
            	    lv_annotations_1_0=ruleRestrictedTypeAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getPeriodActionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.RestrictedTypeAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop123;
                }
            } while (true);

            // InternalSCTX.g:3390:3: ( (lv_delay_2_0= ruleDelayType ) )?
            int alt124=2;
            int LA124_0 = input.LA(1);

            if ( ((LA124_0>=107 && LA124_0<=110)) ) {
                alt124=1;
            }
            switch (alt124) {
                case 1 :
                    // InternalSCTX.g:3391:4: (lv_delay_2_0= ruleDelayType )
                    {
                    // InternalSCTX.g:3391:4: (lv_delay_2_0= ruleDelayType )
                    // InternalSCTX.g:3392:5: lv_delay_2_0= ruleDelayType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPeriodActionAccess().getDelayDelayTypeEnumRuleCall_2_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_103);
                    lv_delay_2_0=ruleDelayType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPeriodActionRule());
                      					}
                      					set(
                      						current,
                      						"delay",
                      						lv_delay_2_0,
                      						"de.cau.cs.kieler.sccharts.text.SCTX.DelayType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,55,FollowSets000.FOLLOW_104); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getPeriodActionAccess().getPeriodKeyword_3());
              		
            }
            // InternalSCTX.g:3413:3: ( (lv_trigger_4_0= ruleValuedExpression ) )
            // InternalSCTX.g:3414:4: (lv_trigger_4_0= ruleValuedExpression )
            {
            // InternalSCTX.g:3414:4: (lv_trigger_4_0= ruleValuedExpression )
            // InternalSCTX.g:3415:5: lv_trigger_4_0= ruleValuedExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPeriodActionAccess().getTriggerValuedExpressionParserRuleCall_4_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_46);
            lv_trigger_4_0=ruleValuedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPeriodActionRule());
              					}
              					set(
              						current,
              						"trigger",
              						lv_trigger_4_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.ValuedExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:3432:3: (otherlv_5= 'label' ( (lv_label_6_0= RULE_STRING ) ) )?
            int alt125=2;
            int LA125_0 = input.LA(1);

            if ( (LA125_0==41) ) {
                alt125=1;
            }
            switch (alt125) {
                case 1 :
                    // InternalSCTX.g:3433:4: otherlv_5= 'label' ( (lv_label_6_0= RULE_STRING ) )
                    {
                    otherlv_5=(Token)match(input,41,FollowSets000.FOLLOW_47); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getPeriodActionAccess().getLabelKeyword_5_0());
                      			
                    }
                    // InternalSCTX.g:3437:4: ( (lv_label_6_0= RULE_STRING ) )
                    // InternalSCTX.g:3438:5: (lv_label_6_0= RULE_STRING )
                    {
                    // InternalSCTX.g:3438:5: (lv_label_6_0= RULE_STRING )
                    // InternalSCTX.g:3439:6: lv_label_6_0= RULE_STRING
                    {
                    lv_label_6_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_6_0, grammarAccess.getPeriodActionAccess().getLabelSTRINGTerminalRuleCall_5_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getPeriodActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_6_0,
                      							"de.cau.cs.kieler.annotations.Annotations.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePeriodAction"


    // $ANTLR start "entryRuleDeclaration"
    // InternalSCTX.g:3460:1: entryRuleDeclaration returns [EObject current=null] : iv_ruleDeclaration= ruleDeclaration EOF ;
    public final EObject entryRuleDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDeclaration = null;


        try {
            // InternalSCTX.g:3460:52: (iv_ruleDeclaration= ruleDeclaration EOF )
            // InternalSCTX.g:3461:2: iv_ruleDeclaration= ruleDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDeclaration=ruleDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDeclaration"


    // $ANTLR start "ruleDeclaration"
    // InternalSCTX.g:3467:1: ruleDeclaration returns [EObject current=null] : (this_Declaration_0= superDeclaration | this_DeclarationWOSemicolon_1= ruleDeclarationWOSemicolon ) ;
    public final EObject ruleDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_Declaration_0 = null;

        EObject this_DeclarationWOSemicolon_1 = null;



        	enterRule();

        try {
            // InternalSCTX.g:3473:2: ( (this_Declaration_0= superDeclaration | this_DeclarationWOSemicolon_1= ruleDeclarationWOSemicolon ) )
            // InternalSCTX.g:3474:2: (this_Declaration_0= superDeclaration | this_DeclarationWOSemicolon_1= ruleDeclarationWOSemicolon )
            {
            // InternalSCTX.g:3474:2: (this_Declaration_0= superDeclaration | this_DeclarationWOSemicolon_1= ruleDeclarationWOSemicolon )
            int alt126=2;
            alt126 = dfa126.predict(input);
            switch (alt126) {
                case 1 :
                    // InternalSCTX.g:3475:3: this_Declaration_0= superDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationAccess().getDeclarationParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Declaration_0=superDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Declaration_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:3487:3: this_DeclarationWOSemicolon_1= ruleDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationAccess().getDeclarationWOSemicolonParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_DeclarationWOSemicolon_1=ruleDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DeclarationWOSemicolon_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDeclaration"


    // $ANTLR start "entryRuleStatement"
    // InternalSCTX.g:3502:1: entryRuleStatement returns [EObject current=null] : iv_ruleStatement= ruleStatement EOF ;
    public final EObject entryRuleStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStatement = null;


        try {
            // InternalSCTX.g:3502:50: (iv_ruleStatement= ruleStatement EOF )
            // InternalSCTX.g:3503:2: iv_ruleStatement= ruleStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStatementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStatement=ruleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStatement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStatement"


    // $ANTLR start "ruleStatement"
    // InternalSCTX.g:3509:1: ruleStatement returns [EObject current=null] : (this_SclAssignment_0= ruleSclAssignment | this_SclPostfixAssignment_1= ruleSclPostfixAssignment | this_Label_2= ruleLabel | this_SclEffectAssignment_3= ruleSclEffectAssignment | this_Conditional_4= ruleConditional | this_Goto_5= ruleGoto | this_ScopeStatement_6= ruleScopeStatement | this_Return_7= ruleReturn | this_ForLoop_8= ruleForLoop | this_WhileLoop_9= ruleWhileLoop ) ;
    public final EObject ruleStatement() throws RecognitionException {
        EObject current = null;

        EObject this_SclAssignment_0 = null;

        EObject this_SclPostfixAssignment_1 = null;

        EObject this_Label_2 = null;

        EObject this_SclEffectAssignment_3 = null;

        EObject this_Conditional_4 = null;

        EObject this_Goto_5 = null;

        EObject this_ScopeStatement_6 = null;

        EObject this_Return_7 = null;

        EObject this_ForLoop_8 = null;

        EObject this_WhileLoop_9 = null;



        	enterRule();

        try {
            // InternalSCTX.g:3515:2: ( (this_SclAssignment_0= ruleSclAssignment | this_SclPostfixAssignment_1= ruleSclPostfixAssignment | this_Label_2= ruleLabel | this_SclEffectAssignment_3= ruleSclEffectAssignment | this_Conditional_4= ruleConditional | this_Goto_5= ruleGoto | this_ScopeStatement_6= ruleScopeStatement | this_Return_7= ruleReturn | this_ForLoop_8= ruleForLoop | this_WhileLoop_9= ruleWhileLoop ) )
            // InternalSCTX.g:3516:2: (this_SclAssignment_0= ruleSclAssignment | this_SclPostfixAssignment_1= ruleSclPostfixAssignment | this_Label_2= ruleLabel | this_SclEffectAssignment_3= ruleSclEffectAssignment | this_Conditional_4= ruleConditional | this_Goto_5= ruleGoto | this_ScopeStatement_6= ruleScopeStatement | this_Return_7= ruleReturn | this_ForLoop_8= ruleForLoop | this_WhileLoop_9= ruleWhileLoop )
            {
            // InternalSCTX.g:3516:2: (this_SclAssignment_0= ruleSclAssignment | this_SclPostfixAssignment_1= ruleSclPostfixAssignment | this_Label_2= ruleLabel | this_SclEffectAssignment_3= ruleSclEffectAssignment | this_Conditional_4= ruleConditional | this_Goto_5= ruleGoto | this_ScopeStatement_6= ruleScopeStatement | this_Return_7= ruleReturn | this_ForLoop_8= ruleForLoop | this_WhileLoop_9= ruleWhileLoop )
            int alt127=10;
            alt127 = dfa127.predict(input);
            switch (alt127) {
                case 1 :
                    // InternalSCTX.g:3517:3: this_SclAssignment_0= ruleSclAssignment
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getSclAssignmentParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_SclAssignment_0=ruleSclAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SclAssignment_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:3529:3: this_SclPostfixAssignment_1= ruleSclPostfixAssignment
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getSclPostfixAssignmentParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_SclPostfixAssignment_1=ruleSclPostfixAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SclPostfixAssignment_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:3541:3: this_Label_2= ruleLabel
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getLabelParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Label_2=ruleLabel();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Label_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSCTX.g:3553:3: this_SclEffectAssignment_3= ruleSclEffectAssignment
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getSclEffectAssignmentParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_SclEffectAssignment_3=ruleSclEffectAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SclEffectAssignment_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalSCTX.g:3565:3: this_Conditional_4= ruleConditional
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getConditionalParserRuleCall_4());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Conditional_4=ruleConditional();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Conditional_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalSCTX.g:3577:3: this_Goto_5= ruleGoto
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getGotoParserRuleCall_5());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Goto_5=ruleGoto();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Goto_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalSCTX.g:3589:3: this_ScopeStatement_6= ruleScopeStatement
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getScopeStatementParserRuleCall_6());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ScopeStatement_6=ruleScopeStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ScopeStatement_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalSCTX.g:3601:3: this_Return_7= ruleReturn
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getReturnParserRuleCall_7());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Return_7=ruleReturn();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Return_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalSCTX.g:3613:3: this_ForLoop_8= ruleForLoop
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getForLoopParserRuleCall_8());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ForLoop_8=ruleForLoop();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ForLoop_8;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalSCTX.g:3625:3: this_WhileLoop_9= ruleWhileLoop
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getWhileLoopParserRuleCall_9());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_WhileLoop_9=ruleWhileLoop();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_WhileLoop_9;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStatement"


    // $ANTLR start "entryRuleEffect"
    // InternalSCTX.g:3640:1: entryRuleEffect returns [EObject current=null] : iv_ruleEffect= ruleEffect EOF ;
    public final EObject entryRuleEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEffect = null;


        try {
            // InternalSCTX.g:3640:47: (iv_ruleEffect= ruleEffect EOF )
            // InternalSCTX.g:3641:2: iv_ruleEffect= ruleEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEffect=ruleEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEffect"


    // $ANTLR start "ruleEffect"
    // InternalSCTX.g:3647:1: ruleEffect returns [EObject current=null] : (this_Effect_0= superEffect | this_CodeEffect_1= ruleCodeEffect ) ;
    public final EObject ruleEffect() throws RecognitionException {
        EObject current = null;

        EObject this_Effect_0 = null;

        EObject this_CodeEffect_1 = null;



        	enterRule();

        try {
            // InternalSCTX.g:3653:2: ( (this_Effect_0= superEffect | this_CodeEffect_1= ruleCodeEffect ) )
            // InternalSCTX.g:3654:2: (this_Effect_0= superEffect | this_CodeEffect_1= ruleCodeEffect )
            {
            // InternalSCTX.g:3654:2: (this_Effect_0= superEffect | this_CodeEffect_1= ruleCodeEffect )
            int alt128=2;
            switch ( input.LA(1) ) {
            case RULE_COMMENT_ANNOTATION:
                {
                int LA128_1 = input.LA(2);

                if ( (synpred143_InternalSCTX()) ) {
                    alt128=1;
                }
                else if ( (true) ) {
                    alt128=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 128, 1, input);

                    throw nvae;
                }
                }
                break;
            case 103:
                {
                int LA128_2 = input.LA(2);

                if ( (synpred143_InternalSCTX()) ) {
                    alt128=1;
                }
                else if ( (true) ) {
                    alt128=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 128, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_ID:
            case RULE_HOSTCODE:
            case 76:
            case 80:
            case 81:
                {
                alt128=1;
                }
                break;
            case 21:
                {
                alt128=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 128, 0, input);

                throw nvae;
            }

            switch (alt128) {
                case 1 :
                    // InternalSCTX.g:3655:3: this_Effect_0= superEffect
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEffectAccess().getEffectParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Effect_0=superEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Effect_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:3667:3: this_CodeEffect_1= ruleCodeEffect
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEffectAccess().getCodeEffectParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CodeEffect_1=ruleCodeEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_CodeEffect_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEffect"


    // $ANTLR start "entryRuleCodeEffect"
    // InternalSCTX.g:3682:1: entryRuleCodeEffect returns [EObject current=null] : iv_ruleCodeEffect= ruleCodeEffect EOF ;
    public final EObject entryRuleCodeEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCodeEffect = null;


        try {
            // InternalSCTX.g:3682:51: (iv_ruleCodeEffect= ruleCodeEffect EOF )
            // InternalSCTX.g:3683:2: iv_ruleCodeEffect= ruleCodeEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCodeEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCodeEffect=ruleCodeEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCodeEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCodeEffect"


    // $ANTLR start "ruleCodeEffect"
    // InternalSCTX.g:3689:1: ruleCodeEffect returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' ) ;
    public final EObject ruleCodeEffect() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_5=null;
        EObject lv_annotations_1_0 = null;

        EObject lv_declarations_3_0 = null;

        EObject lv_statements_4_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:3695:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' ) )
            // InternalSCTX.g:3696:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' )
            {
            // InternalSCTX.g:3696:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' )
            // InternalSCTX.g:3697:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}'
            {
            // InternalSCTX.g:3697:3: ()
            // InternalSCTX.g:3698:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getCodeEffectAccess().getCodeEffectAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:3707:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop129:
            do {
                int alt129=2;
                int LA129_0 = input.LA(1);

                if ( (LA129_0==RULE_COMMENT_ANNOTATION||LA129_0==103) ) {
                    alt129=1;
                }


                switch (alt129) {
            	case 1 :
            	    // InternalSCTX.g:3708:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:3708:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCTX.g:3709:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getCodeEffectAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_105);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getCodeEffectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop129;
                }
            } while (true);

            otherlv_2=(Token)match(input,21,FollowSets000.FOLLOW_106); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getCodeEffectAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalSCTX.g:3730:3: ( (lv_declarations_3_0= ruleDeclaration ) )*
            loop130:
            do {
                int alt130=2;
                alt130 = dfa130.predict(input);
                switch (alt130) {
            	case 1 :
            	    // InternalSCTX.g:3731:4: (lv_declarations_3_0= ruleDeclaration )
            	    {
            	    // InternalSCTX.g:3731:4: (lv_declarations_3_0= ruleDeclaration )
            	    // InternalSCTX.g:3732:5: lv_declarations_3_0= ruleDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getCodeEffectAccess().getDeclarationsDeclarationParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_106);
            	    lv_declarations_3_0=ruleDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getCodeEffectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_3_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.Declaration");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop130;
                }
            } while (true);

            // InternalSCTX.g:3749:3: ( (lv_statements_4_0= ruleStatement ) )*
            loop131:
            do {
                int alt131=2;
                int LA131_0 = input.LA(1);

                if ( (LA131_0==RULE_ID||LA131_0==RULE_HOSTCODE||LA131_0==RULE_COMMENT_ANNOTATION||LA131_0==21||LA131_0==36||LA131_0==44||(LA131_0>=67 && LA131_0<=68)||LA131_0==70||LA131_0==76||(LA131_0>=80 && LA131_0<=81)||LA131_0==103) ) {
                    alt131=1;
                }


                switch (alt131) {
            	case 1 :
            	    // InternalSCTX.g:3750:4: (lv_statements_4_0= ruleStatement )
            	    {
            	    // InternalSCTX.g:3750:4: (lv_statements_4_0= ruleStatement )
            	    // InternalSCTX.g:3751:5: lv_statements_4_0= ruleStatement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getCodeEffectAccess().getStatementsStatementParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_107);
            	    lv_statements_4_0=ruleStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getCodeEffectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"statements",
            	      						lv_statements_4_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.Statement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop131;
                }
            } while (true);

            otherlv_5=(Token)match(input,22,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getCodeEffectAccess().getRightCurlyBracketKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCodeEffect"


    // $ANTLR start "entryRuleClassDeclarationWOSemicolon"
    // InternalSCTX.g:3776:1: entryRuleClassDeclarationWOSemicolon returns [EObject current=null] : iv_ruleClassDeclarationWOSemicolon= ruleClassDeclarationWOSemicolon EOF ;
    public final EObject entryRuleClassDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassDeclarationWOSemicolon = null;


        try {
            // InternalSCTX.g:3776:68: (iv_ruleClassDeclarationWOSemicolon= ruleClassDeclarationWOSemicolon EOF )
            // InternalSCTX.g:3777:2: iv_ruleClassDeclarationWOSemicolon= ruleClassDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleClassDeclarationWOSemicolon=ruleClassDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassDeclarationWOSemicolon"


    // $ANTLR start "ruleClassDeclarationWOSemicolon"
    // InternalSCTX.g:3783:1: ruleClassDeclarationWOSemicolon returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_host_8_0= 'host' ) )? ( ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= ruleEString ) )? otherlv_11= '{' ( (lv_policy_12_0= rulePolicyRegion ) )? ( (lv_declarations_13_0= ruleDeclarationOrMethodWOSemicolon ) )* otherlv_14= '}' ) | ( ( (lv_type_15_0= ruleStructType ) ) ( (lv_name_16_0= ruleEString ) )? otherlv_17= '{' ( (lv_declarations_18_0= ruleDeclarationWOSemicolon ) )* otherlv_19= '}' ) ) ( ( (lv_valuedObjects_20_0= ruleValuedObject ) ) (otherlv_21= ',' ( (lv_valuedObjects_22_0= ruleValuedObject ) ) )* )? ( (lv_annotations_23_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleClassDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        Token lv_const_3_0=null;
        Token lv_input_4_0=null;
        Token lv_output_5_0=null;
        Token lv_global_6_0=null;
        Token lv_static_7_0=null;
        Token lv_host_8_0=null;
        Token otherlv_11=null;
        Token otherlv_14=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        EObject lv_annotations_1_0 = null;

        Enumerator lv_access_2_0 = null;

        Enumerator lv_type_9_0 = null;

        AntlrDatatypeRuleToken lv_name_10_0 = null;

        EObject lv_policy_12_0 = null;

        EObject lv_declarations_13_0 = null;

        Enumerator lv_type_15_0 = null;

        AntlrDatatypeRuleToken lv_name_16_0 = null;

        EObject lv_declarations_18_0 = null;

        EObject lv_valuedObjects_20_0 = null;

        EObject lv_valuedObjects_22_0 = null;

        EObject lv_annotations_23_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:3789:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_host_8_0= 'host' ) )? ( ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= ruleEString ) )? otherlv_11= '{' ( (lv_policy_12_0= rulePolicyRegion ) )? ( (lv_declarations_13_0= ruleDeclarationOrMethodWOSemicolon ) )* otherlv_14= '}' ) | ( ( (lv_type_15_0= ruleStructType ) ) ( (lv_name_16_0= ruleEString ) )? otherlv_17= '{' ( (lv_declarations_18_0= ruleDeclarationWOSemicolon ) )* otherlv_19= '}' ) ) ( ( (lv_valuedObjects_20_0= ruleValuedObject ) ) (otherlv_21= ',' ( (lv_valuedObjects_22_0= ruleValuedObject ) ) )* )? ( (lv_annotations_23_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalSCTX.g:3790:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_host_8_0= 'host' ) )? ( ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= ruleEString ) )? otherlv_11= '{' ( (lv_policy_12_0= rulePolicyRegion ) )? ( (lv_declarations_13_0= ruleDeclarationOrMethodWOSemicolon ) )* otherlv_14= '}' ) | ( ( (lv_type_15_0= ruleStructType ) ) ( (lv_name_16_0= ruleEString ) )? otherlv_17= '{' ( (lv_declarations_18_0= ruleDeclarationWOSemicolon ) )* otherlv_19= '}' ) ) ( ( (lv_valuedObjects_20_0= ruleValuedObject ) ) (otherlv_21= ',' ( (lv_valuedObjects_22_0= ruleValuedObject ) ) )* )? ( (lv_annotations_23_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalSCTX.g:3790:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_host_8_0= 'host' ) )? ( ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= ruleEString ) )? otherlv_11= '{' ( (lv_policy_12_0= rulePolicyRegion ) )? ( (lv_declarations_13_0= ruleDeclarationOrMethodWOSemicolon ) )* otherlv_14= '}' ) | ( ( (lv_type_15_0= ruleStructType ) ) ( (lv_name_16_0= ruleEString ) )? otherlv_17= '{' ( (lv_declarations_18_0= ruleDeclarationWOSemicolon ) )* otherlv_19= '}' ) ) ( ( (lv_valuedObjects_20_0= ruleValuedObject ) ) (otherlv_21= ',' ( (lv_valuedObjects_22_0= ruleValuedObject ) ) )* )? ( (lv_annotations_23_0= ruleCommentAnnotatonSL ) )? )
            // InternalSCTX.g:3791:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_host_8_0= 'host' ) )? ( ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= ruleEString ) )? otherlv_11= '{' ( (lv_policy_12_0= rulePolicyRegion ) )? ( (lv_declarations_13_0= ruleDeclarationOrMethodWOSemicolon ) )* otherlv_14= '}' ) | ( ( (lv_type_15_0= ruleStructType ) ) ( (lv_name_16_0= ruleEString ) )? otherlv_17= '{' ( (lv_declarations_18_0= ruleDeclarationWOSemicolon ) )* otherlv_19= '}' ) ) ( ( (lv_valuedObjects_20_0= ruleValuedObject ) ) (otherlv_21= ',' ( (lv_valuedObjects_22_0= ruleValuedObject ) ) )* )? ( (lv_annotations_23_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalSCTX.g:3791:3: ()
            // InternalSCTX.g:3792:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getClassDeclarationWOSemicolonAccess().getPolicyClassDeclarationAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:3801:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop132:
            do {
                int alt132=2;
                int LA132_0 = input.LA(1);

                if ( (LA132_0==RULE_COMMENT_ANNOTATION||LA132_0==103) ) {
                    alt132=1;
                }


                switch (alt132) {
            	case 1 :
            	    // InternalSCTX.g:3802:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:3802:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCTX.g:3803:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_108);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop132;
                }
            } while (true);

            // InternalSCTX.g:3820:3: ( (lv_access_2_0= ruleAccessModifier ) )?
            int alt133=2;
            int LA133_0 = input.LA(1);

            if ( ((LA133_0>=155 && LA133_0<=157)) ) {
                alt133=1;
            }
            switch (alt133) {
                case 1 :
                    // InternalSCTX.g:3821:4: (lv_access_2_0= ruleAccessModifier )
                    {
                    // InternalSCTX.g:3821:4: (lv_access_2_0= ruleAccessModifier )
                    // InternalSCTX.g:3822:5: lv_access_2_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getAccessAccessModifierEnumRuleCall_2_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_108);
                    lv_access_2_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_2_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:3839:3: ( (lv_const_3_0= 'const' ) )?
            int alt134=2;
            int LA134_0 = input.LA(1);

            if ( (LA134_0==56) ) {
                alt134=1;
            }
            switch (alt134) {
                case 1 :
                    // InternalSCTX.g:3840:4: (lv_const_3_0= 'const' )
                    {
                    // InternalSCTX.g:3840:4: (lv_const_3_0= 'const' )
                    // InternalSCTX.g:3841:5: lv_const_3_0= 'const'
                    {
                    lv_const_3_0=(Token)match(input,56,FollowSets000.FOLLOW_108); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_const_3_0, grammarAccess.getClassDeclarationWOSemicolonAccess().getConstConstKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "const", true, "const");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:3853:3: ( (lv_input_4_0= 'input' ) )?
            int alt135=2;
            int LA135_0 = input.LA(1);

            if ( (LA135_0==57) ) {
                alt135=1;
            }
            switch (alt135) {
                case 1 :
                    // InternalSCTX.g:3854:4: (lv_input_4_0= 'input' )
                    {
                    // InternalSCTX.g:3854:4: (lv_input_4_0= 'input' )
                    // InternalSCTX.g:3855:5: lv_input_4_0= 'input'
                    {
                    lv_input_4_0=(Token)match(input,57,FollowSets000.FOLLOW_108); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_input_4_0, grammarAccess.getClassDeclarationWOSemicolonAccess().getInputInputKeyword_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "input", true, "input");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:3867:3: ( (lv_output_5_0= 'output' ) )?
            int alt136=2;
            int LA136_0 = input.LA(1);

            if ( (LA136_0==58) ) {
                alt136=1;
            }
            switch (alt136) {
                case 1 :
                    // InternalSCTX.g:3868:4: (lv_output_5_0= 'output' )
                    {
                    // InternalSCTX.g:3868:4: (lv_output_5_0= 'output' )
                    // InternalSCTX.g:3869:5: lv_output_5_0= 'output'
                    {
                    lv_output_5_0=(Token)match(input,58,FollowSets000.FOLLOW_108); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_output_5_0, grammarAccess.getClassDeclarationWOSemicolonAccess().getOutputOutputKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "output", true, "output");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:3881:3: ( (lv_global_6_0= 'global' ) )?
            int alt137=2;
            int LA137_0 = input.LA(1);

            if ( (LA137_0==59) ) {
                alt137=1;
            }
            switch (alt137) {
                case 1 :
                    // InternalSCTX.g:3882:4: (lv_global_6_0= 'global' )
                    {
                    // InternalSCTX.g:3882:4: (lv_global_6_0= 'global' )
                    // InternalSCTX.g:3883:5: lv_global_6_0= 'global'
                    {
                    lv_global_6_0=(Token)match(input,59,FollowSets000.FOLLOW_108); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_global_6_0, grammarAccess.getClassDeclarationWOSemicolonAccess().getGlobalGlobalKeyword_6_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "global", true, "global");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:3895:3: ( (lv_static_7_0= 'static' ) )?
            int alt138=2;
            int LA138_0 = input.LA(1);

            if ( (LA138_0==60) ) {
                alt138=1;
            }
            switch (alt138) {
                case 1 :
                    // InternalSCTX.g:3896:4: (lv_static_7_0= 'static' )
                    {
                    // InternalSCTX.g:3896:4: (lv_static_7_0= 'static' )
                    // InternalSCTX.g:3897:5: lv_static_7_0= 'static'
                    {
                    lv_static_7_0=(Token)match(input,60,FollowSets000.FOLLOW_108); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_static_7_0, grammarAccess.getClassDeclarationWOSemicolonAccess().getStaticStaticKeyword_7_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "static", true, "static");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:3909:3: ( (lv_host_8_0= 'host' ) )?
            int alt139=2;
            int LA139_0 = input.LA(1);

            if ( (LA139_0==61) ) {
                alt139=1;
            }
            switch (alt139) {
                case 1 :
                    // InternalSCTX.g:3910:4: (lv_host_8_0= 'host' )
                    {
                    // InternalSCTX.g:3910:4: (lv_host_8_0= 'host' )
                    // InternalSCTX.g:3911:5: lv_host_8_0= 'host'
                    {
                    lv_host_8_0=(Token)match(input,61,FollowSets000.FOLLOW_108); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_host_8_0, grammarAccess.getClassDeclarationWOSemicolonAccess().getHostHostKeyword_8_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "host", true, "host");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:3923:3: ( ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= ruleEString ) )? otherlv_11= '{' ( (lv_policy_12_0= rulePolicyRegion ) )? ( (lv_declarations_13_0= ruleDeclarationOrMethodWOSemicolon ) )* otherlv_14= '}' ) | ( ( (lv_type_15_0= ruleStructType ) ) ( (lv_name_16_0= ruleEString ) )? otherlv_17= '{' ( (lv_declarations_18_0= ruleDeclarationWOSemicolon ) )* otherlv_19= '}' ) )
            int alt145=2;
            int LA145_0 = input.LA(1);

            if ( (LA145_0==151) ) {
                alt145=1;
            }
            else if ( (LA145_0==150) ) {
                alt145=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 145, 0, input);

                throw nvae;
            }
            switch (alt145) {
                case 1 :
                    // InternalSCTX.g:3924:4: ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= ruleEString ) )? otherlv_11= '{' ( (lv_policy_12_0= rulePolicyRegion ) )? ( (lv_declarations_13_0= ruleDeclarationOrMethodWOSemicolon ) )* otherlv_14= '}' )
                    {
                    // InternalSCTX.g:3924:4: ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= ruleEString ) )? otherlv_11= '{' ( (lv_policy_12_0= rulePolicyRegion ) )? ( (lv_declarations_13_0= ruleDeclarationOrMethodWOSemicolon ) )* otherlv_14= '}' )
                    // InternalSCTX.g:3925:5: ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= ruleEString ) )? otherlv_11= '{' ( (lv_policy_12_0= rulePolicyRegion ) )? ( (lv_declarations_13_0= ruleDeclarationOrMethodWOSemicolon ) )* otherlv_14= '}'
                    {
                    // InternalSCTX.g:3925:5: ( (lv_type_9_0= ruleClassType ) )
                    // InternalSCTX.g:3926:6: (lv_type_9_0= ruleClassType )
                    {
                    // InternalSCTX.g:3926:6: (lv_type_9_0= ruleClassType )
                    // InternalSCTX.g:3927:7: lv_type_9_0= ruleClassType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getTypeClassTypeEnumRuleCall_9_0_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_109);
                    lv_type_9_0=ruleClassType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_9_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ClassType");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:3944:5: ( (lv_name_10_0= ruleEString ) )?
                    int alt140=2;
                    int LA140_0 = input.LA(1);

                    if ( ((LA140_0>=RULE_STRING && LA140_0<=RULE_ID)) ) {
                        alt140=1;
                    }
                    switch (alt140) {
                        case 1 :
                            // InternalSCTX.g:3945:6: (lv_name_10_0= ruleEString )
                            {
                            // InternalSCTX.g:3945:6: (lv_name_10_0= ruleEString )
                            // InternalSCTX.g:3946:7: lv_name_10_0= ruleEString
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getNameEStringParserRuleCall_9_0_1_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_110);
                            lv_name_10_0=ruleEString();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
                              							}
                              							set(
                              								current,
                              								"name",
                              								lv_name_10_0,
                              								"de.cau.cs.kieler.annotations.Annotations.EString");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }

                    otherlv_11=(Token)match(input,21,FollowSets000.FOLLOW_111); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_11, grammarAccess.getClassDeclarationWOSemicolonAccess().getLeftCurlyBracketKeyword_9_0_2());
                      				
                    }
                    // InternalSCTX.g:3967:5: ( (lv_policy_12_0= rulePolicyRegion ) )?
                    int alt141=2;
                    int LA141_0 = input.LA(1);

                    if ( (LA141_0==62) ) {
                        alt141=1;
                    }
                    switch (alt141) {
                        case 1 :
                            // InternalSCTX.g:3968:6: (lv_policy_12_0= rulePolicyRegion )
                            {
                            // InternalSCTX.g:3968:6: (lv_policy_12_0= rulePolicyRegion )
                            // InternalSCTX.g:3969:7: lv_policy_12_0= rulePolicyRegion
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getPolicyPolicyRegionParserRuleCall_9_0_3_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_112);
                            lv_policy_12_0=rulePolicyRegion();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
                              							}
                              							set(
                              								current,
                              								"policy",
                              								lv_policy_12_0,
                              								"de.cau.cs.kieler.sccharts.text.SCTX.PolicyRegion");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalSCTX.g:3986:5: ( (lv_declarations_13_0= ruleDeclarationOrMethodWOSemicolon ) )*
                    loop142:
                    do {
                        int alt142=2;
                        int LA142_0 = input.LA(1);

                        if ( (LA142_0==RULE_ID||LA142_0==RULE_COMMENT_ANNOTATION||LA142_0==29||(LA142_0>=56 && LA142_0<=61)||(LA142_0>=74 && LA142_0<=76)||LA142_0==103||(LA142_0>=116 && LA142_0<=121)||(LA142_0>=150 && LA142_0<=151)||(LA142_0>=155 && LA142_0<=158)) ) {
                            alt142=1;
                        }


                        switch (alt142) {
                    	case 1 :
                    	    // InternalSCTX.g:3987:6: (lv_declarations_13_0= ruleDeclarationOrMethodWOSemicolon )
                    	    {
                    	    // InternalSCTX.g:3987:6: (lv_declarations_13_0= ruleDeclarationOrMethodWOSemicolon )
                    	    // InternalSCTX.g:3988:7: lv_declarations_13_0= ruleDeclarationOrMethodWOSemicolon
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getDeclarationsDeclarationOrMethodWOSemicolonParserRuleCall_9_0_4_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_112);
                    	    lv_declarations_13_0=ruleDeclarationOrMethodWOSemicolon();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"declarations",
                    	      								lv_declarations_13_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.DeclarationOrMethodWOSemicolon");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop142;
                        }
                    } while (true);

                    otherlv_14=(Token)match(input,22,FollowSets000.FOLLOW_113); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_14, grammarAccess.getClassDeclarationWOSemicolonAccess().getRightCurlyBracketKeyword_9_0_5());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:4011:4: ( ( (lv_type_15_0= ruleStructType ) ) ( (lv_name_16_0= ruleEString ) )? otherlv_17= '{' ( (lv_declarations_18_0= ruleDeclarationWOSemicolon ) )* otherlv_19= '}' )
                    {
                    // InternalSCTX.g:4011:4: ( ( (lv_type_15_0= ruleStructType ) ) ( (lv_name_16_0= ruleEString ) )? otherlv_17= '{' ( (lv_declarations_18_0= ruleDeclarationWOSemicolon ) )* otherlv_19= '}' )
                    // InternalSCTX.g:4012:5: ( (lv_type_15_0= ruleStructType ) ) ( (lv_name_16_0= ruleEString ) )? otherlv_17= '{' ( (lv_declarations_18_0= ruleDeclarationWOSemicolon ) )* otherlv_19= '}'
                    {
                    // InternalSCTX.g:4012:5: ( (lv_type_15_0= ruleStructType ) )
                    // InternalSCTX.g:4013:6: (lv_type_15_0= ruleStructType )
                    {
                    // InternalSCTX.g:4013:6: (lv_type_15_0= ruleStructType )
                    // InternalSCTX.g:4014:7: lv_type_15_0= ruleStructType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getTypeStructTypeEnumRuleCall_9_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_109);
                    lv_type_15_0=ruleStructType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_15_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.StructType");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:4031:5: ( (lv_name_16_0= ruleEString ) )?
                    int alt143=2;
                    int LA143_0 = input.LA(1);

                    if ( ((LA143_0>=RULE_STRING && LA143_0<=RULE_ID)) ) {
                        alt143=1;
                    }
                    switch (alt143) {
                        case 1 :
                            // InternalSCTX.g:4032:6: (lv_name_16_0= ruleEString )
                            {
                            // InternalSCTX.g:4032:6: (lv_name_16_0= ruleEString )
                            // InternalSCTX.g:4033:7: lv_name_16_0= ruleEString
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getNameEStringParserRuleCall_9_1_1_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_110);
                            lv_name_16_0=ruleEString();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
                              							}
                              							set(
                              								current,
                              								"name",
                              								lv_name_16_0,
                              								"de.cau.cs.kieler.annotations.Annotations.EString");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }

                    otherlv_17=(Token)match(input,21,FollowSets000.FOLLOW_114); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_17, grammarAccess.getClassDeclarationWOSemicolonAccess().getLeftCurlyBracketKeyword_9_1_2());
                      				
                    }
                    // InternalSCTX.g:4054:5: ( (lv_declarations_18_0= ruleDeclarationWOSemicolon ) )*
                    loop144:
                    do {
                        int alt144=2;
                        int LA144_0 = input.LA(1);

                        if ( (LA144_0==RULE_COMMENT_ANNOTATION||LA144_0==29||(LA144_0>=56 && LA144_0<=61)||(LA144_0>=74 && LA144_0<=76)||LA144_0==103||(LA144_0>=116 && LA144_0<=121)||(LA144_0>=150 && LA144_0<=151)||(LA144_0>=155 && LA144_0<=157)) ) {
                            alt144=1;
                        }


                        switch (alt144) {
                    	case 1 :
                    	    // InternalSCTX.g:4055:6: (lv_declarations_18_0= ruleDeclarationWOSemicolon )
                    	    {
                    	    // InternalSCTX.g:4055:6: (lv_declarations_18_0= ruleDeclarationWOSemicolon )
                    	    // InternalSCTX.g:4056:7: lv_declarations_18_0= ruleDeclarationWOSemicolon
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getDeclarationsDeclarationWOSemicolonParserRuleCall_9_1_3_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_114);
                    	    lv_declarations_18_0=ruleDeclarationWOSemicolon();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"declarations",
                    	      								lv_declarations_18_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.DeclarationWOSemicolon");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop144;
                        }
                    } while (true);

                    otherlv_19=(Token)match(input,22,FollowSets000.FOLLOW_113); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_19, grammarAccess.getClassDeclarationWOSemicolonAccess().getRightCurlyBracketKeyword_9_1_4());
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:4079:3: ( ( (lv_valuedObjects_20_0= ruleValuedObject ) ) (otherlv_21= ',' ( (lv_valuedObjects_22_0= ruleValuedObject ) ) )* )?
            int alt147=2;
            alt147 = dfa147.predict(input);
            switch (alt147) {
                case 1 :
                    // InternalSCTX.g:4080:4: ( (lv_valuedObjects_20_0= ruleValuedObject ) ) (otherlv_21= ',' ( (lv_valuedObjects_22_0= ruleValuedObject ) ) )*
                    {
                    // InternalSCTX.g:4080:4: ( (lv_valuedObjects_20_0= ruleValuedObject ) )
                    // InternalSCTX.g:4081:5: (lv_valuedObjects_20_0= ruleValuedObject )
                    {
                    // InternalSCTX.g:4081:5: (lv_valuedObjects_20_0= ruleValuedObject )
                    // InternalSCTX.g:4082:6: lv_valuedObjects_20_0= ruleValuedObject
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_10_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_115);
                    lv_valuedObjects_20_0=ruleValuedObject();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
                      						}
                      						add(
                      							current,
                      							"valuedObjects",
                      							lv_valuedObjects_20_0,
                      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:4099:4: (otherlv_21= ',' ( (lv_valuedObjects_22_0= ruleValuedObject ) ) )*
                    loop146:
                    do {
                        int alt146=2;
                        int LA146_0 = input.LA(1);

                        if ( (LA146_0==20) ) {
                            alt146=1;
                        }


                        switch (alt146) {
                    	case 1 :
                    	    // InternalSCTX.g:4100:5: otherlv_21= ',' ( (lv_valuedObjects_22_0= ruleValuedObject ) )
                    	    {
                    	    otherlv_21=(Token)match(input,20,FollowSets000.FOLLOW_116); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_21, grammarAccess.getClassDeclarationWOSemicolonAccess().getCommaKeyword_10_1_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:4104:5: ( (lv_valuedObjects_22_0= ruleValuedObject ) )
                    	    // InternalSCTX.g:4105:6: (lv_valuedObjects_22_0= ruleValuedObject )
                    	    {
                    	    // InternalSCTX.g:4105:6: (lv_valuedObjects_22_0= ruleValuedObject )
                    	    // InternalSCTX.g:4106:7: lv_valuedObjects_22_0= ruleValuedObject
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_10_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_115);
                    	    lv_valuedObjects_22_0=ruleValuedObject();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"valuedObjects",
                    	      								lv_valuedObjects_22_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop146;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalSCTX.g:4125:3: ( (lv_annotations_23_0= ruleCommentAnnotatonSL ) )?
            int alt148=2;
            int LA148_0 = input.LA(1);

            if ( (LA148_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt148=1;
            }
            switch (alt148) {
                case 1 :
                    // InternalSCTX.g:4126:4: (lv_annotations_23_0= ruleCommentAnnotatonSL )
                    {
                    // InternalSCTX.g:4126:4: (lv_annotations_23_0= ruleCommentAnnotatonSL )
                    // InternalSCTX.g:4127:5: lv_annotations_23_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_11_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_23_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_23_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassDeclarationWOSemicolon"


    // $ANTLR start "entryRulePolicyRegion"
    // InternalSCTX.g:4148:1: entryRulePolicyRegion returns [EObject current=null] : iv_rulePolicyRegion= rulePolicyRegion EOF ;
    public final EObject entryRulePolicyRegion() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePolicyRegion = null;


        try {
            // InternalSCTX.g:4148:53: (iv_rulePolicyRegion= rulePolicyRegion EOF )
            // InternalSCTX.g:4149:2: iv_rulePolicyRegion= rulePolicyRegion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPolicyRegionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePolicyRegion=rulePolicyRegion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePolicyRegion; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePolicyRegion"


    // $ANTLR start "rulePolicyRegion"
    // InternalSCTX.g:4155:1: rulePolicyRegion returns [EObject current=null] : (otherlv_0= 'policy' ( (lv_name_1_0= RULE_ID ) ) ( (lv_label_2_0= RULE_STRING ) )? otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclarationWOSemicolon ) )* ( (lv_states_5_0= rulePolicyState ) )+ otherlv_6= '}' ) ;
    public final EObject rulePolicyRegion() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token lv_label_2_0=null;
        Token otherlv_3=null;
        Token otherlv_6=null;
        EObject lv_declarations_4_0 = null;

        EObject lv_states_5_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:4161:2: ( (otherlv_0= 'policy' ( (lv_name_1_0= RULE_ID ) ) ( (lv_label_2_0= RULE_STRING ) )? otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclarationWOSemicolon ) )* ( (lv_states_5_0= rulePolicyState ) )+ otherlv_6= '}' ) )
            // InternalSCTX.g:4162:2: (otherlv_0= 'policy' ( (lv_name_1_0= RULE_ID ) ) ( (lv_label_2_0= RULE_STRING ) )? otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclarationWOSemicolon ) )* ( (lv_states_5_0= rulePolicyState ) )+ otherlv_6= '}' )
            {
            // InternalSCTX.g:4162:2: (otherlv_0= 'policy' ( (lv_name_1_0= RULE_ID ) ) ( (lv_label_2_0= RULE_STRING ) )? otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclarationWOSemicolon ) )* ( (lv_states_5_0= rulePolicyState ) )+ otherlv_6= '}' )
            // InternalSCTX.g:4163:3: otherlv_0= 'policy' ( (lv_name_1_0= RULE_ID ) ) ( (lv_label_2_0= RULE_STRING ) )? otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclarationWOSemicolon ) )* ( (lv_states_5_0= rulePolicyState ) )+ otherlv_6= '}'
            {
            otherlv_0=(Token)match(input,62,FollowSets000.FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getPolicyRegionAccess().getPolicyKeyword_0());
              		
            }
            // InternalSCTX.g:4167:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalSCTX.g:4168:4: (lv_name_1_0= RULE_ID )
            {
            // InternalSCTX.g:4168:4: (lv_name_1_0= RULE_ID )
            // InternalSCTX.g:4169:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_117); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getPolicyRegionAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getPolicyRegionRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ID");
              				
            }

            }


            }

            // InternalSCTX.g:4185:3: ( (lv_label_2_0= RULE_STRING ) )?
            int alt149=2;
            int LA149_0 = input.LA(1);

            if ( (LA149_0==RULE_STRING) ) {
                alt149=1;
            }
            switch (alt149) {
                case 1 :
                    // InternalSCTX.g:4186:4: (lv_label_2_0= RULE_STRING )
                    {
                    // InternalSCTX.g:4186:4: (lv_label_2_0= RULE_STRING )
                    // InternalSCTX.g:4187:5: lv_label_2_0= RULE_STRING
                    {
                    lv_label_2_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_110); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_label_2_0, grammarAccess.getPolicyRegionAccess().getLabelSTRINGTerminalRuleCall_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getPolicyRegionRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"label",
                      						lv_label_2_0,
                      						"de.cau.cs.kieler.annotations.Annotations.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,21,FollowSets000.FOLLOW_118); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getPolicyRegionAccess().getLeftCurlyBracketKeyword_3());
              		
            }
            // InternalSCTX.g:4207:3: ( (lv_declarations_4_0= ruleDeclarationWOSemicolon ) )*
            loop150:
            do {
                int alt150=2;
                alt150 = dfa150.predict(input);
                switch (alt150) {
            	case 1 :
            	    // InternalSCTX.g:4208:4: (lv_declarations_4_0= ruleDeclarationWOSemicolon )
            	    {
            	    // InternalSCTX.g:4208:4: (lv_declarations_4_0= ruleDeclarationWOSemicolon )
            	    // InternalSCTX.g:4209:5: lv_declarations_4_0= ruleDeclarationWOSemicolon
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getPolicyRegionAccess().getDeclarationsDeclarationWOSemicolonParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_118);
            	    lv_declarations_4_0=ruleDeclarationWOSemicolon();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getPolicyRegionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_4_0,
            	      						"de.cau.cs.kieler.kexpressions.kext.KExt.DeclarationWOSemicolon");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop150;
                }
            } while (true);

            // InternalSCTX.g:4226:3: ( (lv_states_5_0= rulePolicyState ) )+
            int cnt151=0;
            loop151:
            do {
                int alt151=2;
                int LA151_0 = input.LA(1);

                if ( (LA151_0==RULE_COMMENT_ANNOTATION||LA151_0==23||LA151_0==27||LA151_0==103) ) {
                    alt151=1;
                }


                switch (alt151) {
            	case 1 :
            	    // InternalSCTX.g:4227:4: (lv_states_5_0= rulePolicyState )
            	    {
            	    // InternalSCTX.g:4227:4: (lv_states_5_0= rulePolicyState )
            	    // InternalSCTX.g:4228:5: lv_states_5_0= rulePolicyState
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getPolicyRegionAccess().getStatesPolicyStateParserRuleCall_5_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_119);
            	    lv_states_5_0=rulePolicyState();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getPolicyRegionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"states",
            	      						lv_states_5_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.PolicyState");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt151 >= 1 ) break loop151;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(151, input);
                        throw eee;
                }
                cnt151++;
            } while (true);

            otherlv_6=(Token)match(input,22,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getPolicyRegionAccess().getRightCurlyBracketKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePolicyRegion"


    // $ANTLR start "entryRulePolicyState"
    // InternalSCTX.g:4253:1: entryRulePolicyState returns [EObject current=null] : iv_rulePolicyState= rulePolicyState EOF ;
    public final EObject entryRulePolicyState() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePolicyState = null;


        try {
            // InternalSCTX.g:4253:52: (iv_rulePolicyState= rulePolicyState EOF )
            // InternalSCTX.g:4254:2: iv_rulePolicyState= rulePolicyState EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPolicyStateRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePolicyState=rulePolicyState();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePolicyState; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePolicyState"


    // $ANTLR start "rulePolicyState"
    // InternalSCTX.g:4260:1: rulePolicyState returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_initial_1_0= 'initial' ) )? otherlv_2= 'state' ( (lv_name_3_0= RULE_ID ) ) ( (lv_label_4_0= RULE_STRING ) )? ( (lv_outgoingTransitions_5_0= rulePolicyTransition ) )* ) ;
    public final EObject rulePolicyState() throws RecognitionException {
        EObject current = null;

        Token lv_initial_1_0=null;
        Token otherlv_2=null;
        Token lv_name_3_0=null;
        Token lv_label_4_0=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_outgoingTransitions_5_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:4266:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_initial_1_0= 'initial' ) )? otherlv_2= 'state' ( (lv_name_3_0= RULE_ID ) ) ( (lv_label_4_0= RULE_STRING ) )? ( (lv_outgoingTransitions_5_0= rulePolicyTransition ) )* ) )
            // InternalSCTX.g:4267:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_initial_1_0= 'initial' ) )? otherlv_2= 'state' ( (lv_name_3_0= RULE_ID ) ) ( (lv_label_4_0= RULE_STRING ) )? ( (lv_outgoingTransitions_5_0= rulePolicyTransition ) )* )
            {
            // InternalSCTX.g:4267:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_initial_1_0= 'initial' ) )? otherlv_2= 'state' ( (lv_name_3_0= RULE_ID ) ) ( (lv_label_4_0= RULE_STRING ) )? ( (lv_outgoingTransitions_5_0= rulePolicyTransition ) )* )
            // InternalSCTX.g:4268:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_initial_1_0= 'initial' ) )? otherlv_2= 'state' ( (lv_name_3_0= RULE_ID ) ) ( (lv_label_4_0= RULE_STRING ) )? ( (lv_outgoingTransitions_5_0= rulePolicyTransition ) )*
            {
            // InternalSCTX.g:4268:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop152:
            do {
                int alt152=2;
                int LA152_0 = input.LA(1);

                if ( (LA152_0==RULE_COMMENT_ANNOTATION||LA152_0==103) ) {
                    alt152=1;
                }


                switch (alt152) {
            	case 1 :
            	    // InternalSCTX.g:4269:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:4269:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:4270:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getPolicyStateAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_120);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getPolicyStateRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop152;
                }
            } while (true);

            // InternalSCTX.g:4287:3: ( (lv_initial_1_0= 'initial' ) )?
            int alt153=2;
            int LA153_0 = input.LA(1);

            if ( (LA153_0==23) ) {
                alt153=1;
            }
            switch (alt153) {
                case 1 :
                    // InternalSCTX.g:4288:4: (lv_initial_1_0= 'initial' )
                    {
                    // InternalSCTX.g:4288:4: (lv_initial_1_0= 'initial' )
                    // InternalSCTX.g:4289:5: lv_initial_1_0= 'initial'
                    {
                    lv_initial_1_0=(Token)match(input,23,FollowSets000.FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_initial_1_0, grammarAccess.getPolicyStateAccess().getInitialInitialKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getPolicyStateRule());
                      					}
                      					setWithLastConsumed(current, "initial", true, "initial");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,27,FollowSets000.FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getPolicyStateAccess().getStateKeyword_2());
              		
            }
            // InternalSCTX.g:4305:3: ( (lv_name_3_0= RULE_ID ) )
            // InternalSCTX.g:4306:4: (lv_name_3_0= RULE_ID )
            {
            // InternalSCTX.g:4306:4: (lv_name_3_0= RULE_ID )
            // InternalSCTX.g:4307:5: lv_name_3_0= RULE_ID
            {
            lv_name_3_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_121); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_3_0, grammarAccess.getPolicyStateAccess().getNameIDTerminalRuleCall_3_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getPolicyStateRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_3_0,
              						"de.cau.cs.kieler.annotations.Annotations.ID");
              				
            }

            }


            }

            // InternalSCTX.g:4323:3: ( (lv_label_4_0= RULE_STRING ) )?
            int alt154=2;
            int LA154_0 = input.LA(1);

            if ( (LA154_0==RULE_STRING) ) {
                alt154=1;
            }
            switch (alt154) {
                case 1 :
                    // InternalSCTX.g:4324:4: (lv_label_4_0= RULE_STRING )
                    {
                    // InternalSCTX.g:4324:4: (lv_label_4_0= RULE_STRING )
                    // InternalSCTX.g:4325:5: lv_label_4_0= RULE_STRING
                    {
                    lv_label_4_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_122); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_label_4_0, grammarAccess.getPolicyStateAccess().getLabelSTRINGTerminalRuleCall_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getPolicyStateRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"label",
                      						lv_label_4_0,
                      						"de.cau.cs.kieler.annotations.Annotations.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:4341:3: ( (lv_outgoingTransitions_5_0= rulePolicyTransition ) )*
            loop155:
            do {
                int alt155=2;
                alt155 = dfa155.predict(input);
                switch (alt155) {
            	case 1 :
            	    // InternalSCTX.g:4342:4: (lv_outgoingTransitions_5_0= rulePolicyTransition )
            	    {
            	    // InternalSCTX.g:4342:4: (lv_outgoingTransitions_5_0= rulePolicyTransition )
            	    // InternalSCTX.g:4343:5: lv_outgoingTransitions_5_0= rulePolicyTransition
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getPolicyStateAccess().getOutgoingTransitionsPolicyTransitionParserRuleCall_5_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_122);
            	    lv_outgoingTransitions_5_0=rulePolicyTransition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getPolicyStateRule());
            	      					}
            	      					add(
            	      						current,
            	      						"outgoingTransitions",
            	      						lv_outgoingTransitions_5_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.PolicyTransition");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop155;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePolicyState"


    // $ANTLR start "entryRulePolicyTransition"
    // InternalSCTX.g:4364:1: entryRulePolicyTransition returns [EObject current=null] : iv_rulePolicyTransition= rulePolicyTransition EOF ;
    public final EObject entryRulePolicyTransition() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePolicyTransition = null;


        try {
            // InternalSCTX.g:4364:57: (iv_rulePolicyTransition= rulePolicyTransition EOF )
            // InternalSCTX.g:4365:2: iv_rulePolicyTransition= rulePolicyTransition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPolicyTransitionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePolicyTransition=rulePolicyTransition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePolicyTransition; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePolicyTransition"


    // $ANTLR start "rulePolicyTransition"
    // InternalSCTX.g:4371:1: rulePolicyTransition returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* (otherlv_2= 'if' ( ( (lv_trigger_3_0= ruleLogicalOrExpression ) ) | ( (lv_trigger_4_0= ruleValuedObjectReference ) ) ) (otherlv_5= ':' ( (lv_effects_6_0= rulePureEmission ) ) (otherlv_7= ',' ( (lv_effects_8_0= rulePureEmission ) ) )* )? )? otherlv_9= 'go to' ( (otherlv_10= RULE_ID ) ) (otherlv_11= 'label' ( (lv_label_12_0= RULE_STRING ) ) )? ) ;
    public final EObject rulePolicyTransition() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token lv_label_12_0=null;
        EObject lv_annotations_1_0 = null;

        EObject lv_trigger_3_0 = null;

        EObject lv_trigger_4_0 = null;

        EObject lv_effects_6_0 = null;

        EObject lv_effects_8_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:4377:2: ( ( () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* (otherlv_2= 'if' ( ( (lv_trigger_3_0= ruleLogicalOrExpression ) ) | ( (lv_trigger_4_0= ruleValuedObjectReference ) ) ) (otherlv_5= ':' ( (lv_effects_6_0= rulePureEmission ) ) (otherlv_7= ',' ( (lv_effects_8_0= rulePureEmission ) ) )* )? )? otherlv_9= 'go to' ( (otherlv_10= RULE_ID ) ) (otherlv_11= 'label' ( (lv_label_12_0= RULE_STRING ) ) )? ) )
            // InternalSCTX.g:4378:2: ( () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* (otherlv_2= 'if' ( ( (lv_trigger_3_0= ruleLogicalOrExpression ) ) | ( (lv_trigger_4_0= ruleValuedObjectReference ) ) ) (otherlv_5= ':' ( (lv_effects_6_0= rulePureEmission ) ) (otherlv_7= ',' ( (lv_effects_8_0= rulePureEmission ) ) )* )? )? otherlv_9= 'go to' ( (otherlv_10= RULE_ID ) ) (otherlv_11= 'label' ( (lv_label_12_0= RULE_STRING ) ) )? )
            {
            // InternalSCTX.g:4378:2: ( () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* (otherlv_2= 'if' ( ( (lv_trigger_3_0= ruleLogicalOrExpression ) ) | ( (lv_trigger_4_0= ruleValuedObjectReference ) ) ) (otherlv_5= ':' ( (lv_effects_6_0= rulePureEmission ) ) (otherlv_7= ',' ( (lv_effects_8_0= rulePureEmission ) ) )* )? )? otherlv_9= 'go to' ( (otherlv_10= RULE_ID ) ) (otherlv_11= 'label' ( (lv_label_12_0= RULE_STRING ) ) )? )
            // InternalSCTX.g:4379:3: () ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )* (otherlv_2= 'if' ( ( (lv_trigger_3_0= ruleLogicalOrExpression ) ) | ( (lv_trigger_4_0= ruleValuedObjectReference ) ) ) (otherlv_5= ':' ( (lv_effects_6_0= rulePureEmission ) ) (otherlv_7= ',' ( (lv_effects_8_0= rulePureEmission ) ) )* )? )? otherlv_9= 'go to' ( (otherlv_10= RULE_ID ) ) (otherlv_11= 'label' ( (lv_label_12_0= RULE_STRING ) ) )?
            {
            // InternalSCTX.g:4379:3: ()
            // InternalSCTX.g:4380:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getPolicyTransitionAccess().getTransitionAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:4389:3: ( (lv_annotations_1_0= ruleRestrictedTypeAnnotation ) )*
            loop156:
            do {
                int alt156=2;
                int LA156_0 = input.LA(1);

                if ( (LA156_0==RULE_COMMENT_ANNOTATION||LA156_0==103) ) {
                    alt156=1;
                }


                switch (alt156) {
            	case 1 :
            	    // InternalSCTX.g:4390:4: (lv_annotations_1_0= ruleRestrictedTypeAnnotation )
            	    {
            	    // InternalSCTX.g:4390:4: (lv_annotations_1_0= ruleRestrictedTypeAnnotation )
            	    // InternalSCTX.g:4391:5: lv_annotations_1_0= ruleRestrictedTypeAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getPolicyTransitionAccess().getAnnotationsRestrictedTypeAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_123);
            	    lv_annotations_1_0=ruleRestrictedTypeAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getPolicyTransitionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.RestrictedTypeAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop156;
                }
            } while (true);

            // InternalSCTX.g:4408:3: (otherlv_2= 'if' ( ( (lv_trigger_3_0= ruleLogicalOrExpression ) ) | ( (lv_trigger_4_0= ruleValuedObjectReference ) ) ) (otherlv_5= ':' ( (lv_effects_6_0= rulePureEmission ) ) (otherlv_7= ',' ( (lv_effects_8_0= rulePureEmission ) ) )* )? )?
            int alt160=2;
            int LA160_0 = input.LA(1);

            if ( (LA160_0==36) ) {
                alt160=1;
            }
            switch (alt160) {
                case 1 :
                    // InternalSCTX.g:4409:4: otherlv_2= 'if' ( ( (lv_trigger_3_0= ruleLogicalOrExpression ) ) | ( (lv_trigger_4_0= ruleValuedObjectReference ) ) ) (otherlv_5= ':' ( (lv_effects_6_0= rulePureEmission ) ) (otherlv_7= ',' ( (lv_effects_8_0= rulePureEmission ) ) )* )?
                    {
                    otherlv_2=(Token)match(input,36,FollowSets000.FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getPolicyTransitionAccess().getIfKeyword_2_0());
                      			
                    }
                    // InternalSCTX.g:4413:4: ( ( (lv_trigger_3_0= ruleLogicalOrExpression ) ) | ( (lv_trigger_4_0= ruleValuedObjectReference ) ) )
                    int alt157=2;
                    int LA157_0 = input.LA(1);

                    if ( (LA157_0==RULE_STRING||(LA157_0>=RULE_INT && LA157_0<=RULE_COMMENT_ANNOTATION)||LA157_0==21||LA157_0==31||LA157_0==76||LA157_0==81||LA157_0==91||LA157_0==99||LA157_0==103||(LA157_0>=145 && LA157_0<=148)) ) {
                        alt157=1;
                    }
                    else if ( (LA157_0==RULE_ID) ) {
                        int LA157_2 = input.LA(2);

                        if ( (synpred172_InternalSCTX()) ) {
                            alt157=1;
                        }
                        else if ( (true) ) {
                            alt157=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 157, 2, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 157, 0, input);

                        throw nvae;
                    }
                    switch (alt157) {
                        case 1 :
                            // InternalSCTX.g:4414:5: ( (lv_trigger_3_0= ruleLogicalOrExpression ) )
                            {
                            // InternalSCTX.g:4414:5: ( (lv_trigger_3_0= ruleLogicalOrExpression ) )
                            // InternalSCTX.g:4415:6: (lv_trigger_3_0= ruleLogicalOrExpression )
                            {
                            // InternalSCTX.g:4415:6: (lv_trigger_3_0= ruleLogicalOrExpression )
                            // InternalSCTX.g:4416:7: lv_trigger_3_0= ruleLogicalOrExpression
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getPolicyTransitionAccess().getTriggerLogicalOrExpressionParserRuleCall_2_1_0_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_124);
                            lv_trigger_3_0=ruleLogicalOrExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getPolicyTransitionRule());
                              							}
                              							set(
                              								current,
                              								"trigger",
                              								lv_trigger_3_0,
                              								"de.cau.cs.kieler.kexpressions.KExpressions.LogicalOrExpression");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalSCTX.g:4434:5: ( (lv_trigger_4_0= ruleValuedObjectReference ) )
                            {
                            // InternalSCTX.g:4434:5: ( (lv_trigger_4_0= ruleValuedObjectReference ) )
                            // InternalSCTX.g:4435:6: (lv_trigger_4_0= ruleValuedObjectReference )
                            {
                            // InternalSCTX.g:4435:6: (lv_trigger_4_0= ruleValuedObjectReference )
                            // InternalSCTX.g:4436:7: lv_trigger_4_0= ruleValuedObjectReference
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getPolicyTransitionAccess().getTriggerValuedObjectReferenceParserRuleCall_2_1_1_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_124);
                            lv_trigger_4_0=ruleValuedObjectReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getPolicyTransitionRule());
                              							}
                              							set(
                              								current,
                              								"trigger",
                              								lv_trigger_4_0,
                              								"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalSCTX.g:4454:4: (otherlv_5= ':' ( (lv_effects_6_0= rulePureEmission ) ) (otherlv_7= ',' ( (lv_effects_8_0= rulePureEmission ) ) )* )?
                    int alt159=2;
                    int LA159_0 = input.LA(1);

                    if ( (LA159_0==45) ) {
                        alt159=1;
                    }
                    switch (alt159) {
                        case 1 :
                            // InternalSCTX.g:4455:5: otherlv_5= ':' ( (lv_effects_6_0= rulePureEmission ) ) (otherlv_7= ',' ( (lv_effects_8_0= rulePureEmission ) ) )*
                            {
                            otherlv_5=(Token)match(input,45,FollowSets000.FOLLOW_125); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_5, grammarAccess.getPolicyTransitionAccess().getColonKeyword_2_2_0());
                              				
                            }
                            // InternalSCTX.g:4459:5: ( (lv_effects_6_0= rulePureEmission ) )
                            // InternalSCTX.g:4460:6: (lv_effects_6_0= rulePureEmission )
                            {
                            // InternalSCTX.g:4460:6: (lv_effects_6_0= rulePureEmission )
                            // InternalSCTX.g:4461:7: lv_effects_6_0= rulePureEmission
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getPolicyTransitionAccess().getEffectsPureEmissionParserRuleCall_2_2_1_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_126);
                            lv_effects_6_0=rulePureEmission();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getPolicyTransitionRule());
                              							}
                              							add(
                              								current,
                              								"effects",
                              								lv_effects_6_0,
                              								"de.cau.cs.kieler.kexpressions.keffects.KEffects.PureEmission");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalSCTX.g:4478:5: (otherlv_7= ',' ( (lv_effects_8_0= rulePureEmission ) ) )*
                            loop158:
                            do {
                                int alt158=2;
                                int LA158_0 = input.LA(1);

                                if ( (LA158_0==20) ) {
                                    alt158=1;
                                }


                                switch (alt158) {
                            	case 1 :
                            	    // InternalSCTX.g:4479:6: otherlv_7= ',' ( (lv_effects_8_0= rulePureEmission ) )
                            	    {
                            	    otherlv_7=(Token)match(input,20,FollowSets000.FOLLOW_125); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						newLeafNode(otherlv_7, grammarAccess.getPolicyTransitionAccess().getCommaKeyword_2_2_2_0());
                            	      					
                            	    }
                            	    // InternalSCTX.g:4483:6: ( (lv_effects_8_0= rulePureEmission ) )
                            	    // InternalSCTX.g:4484:7: (lv_effects_8_0= rulePureEmission )
                            	    {
                            	    // InternalSCTX.g:4484:7: (lv_effects_8_0= rulePureEmission )
                            	    // InternalSCTX.g:4485:8: lv_effects_8_0= rulePureEmission
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getPolicyTransitionAccess().getEffectsPureEmissionParserRuleCall_2_2_2_1_0());
                            	      							
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_126);
                            	    lv_effects_8_0=rulePureEmission();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getPolicyTransitionRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"effects",
                            	      									lv_effects_8_0,
                            	      									"de.cau.cs.kieler.kexpressions.keffects.KEffects.PureEmission");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop158;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_9=(Token)match(input,63,FollowSets000.FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_9, grammarAccess.getPolicyTransitionAccess().getGoToKeyword_3());
              		
            }
            // InternalSCTX.g:4509:3: ( (otherlv_10= RULE_ID ) )
            // InternalSCTX.g:4510:4: (otherlv_10= RULE_ID )
            {
            // InternalSCTX.g:4510:4: (otherlv_10= RULE_ID )
            // InternalSCTX.g:4511:5: otherlv_10= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getPolicyTransitionRule());
              					}
              				
            }
            otherlv_10=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_46); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_10, grammarAccess.getPolicyTransitionAccess().getTargetStateStateCrossReference_4_0());
              				
            }

            }


            }

            // InternalSCTX.g:4525:3: (otherlv_11= 'label' ( (lv_label_12_0= RULE_STRING ) ) )?
            int alt161=2;
            int LA161_0 = input.LA(1);

            if ( (LA161_0==41) ) {
                alt161=1;
            }
            switch (alt161) {
                case 1 :
                    // InternalSCTX.g:4526:4: otherlv_11= 'label' ( (lv_label_12_0= RULE_STRING ) )
                    {
                    otherlv_11=(Token)match(input,41,FollowSets000.FOLLOW_47); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getPolicyTransitionAccess().getLabelKeyword_5_0());
                      			
                    }
                    // InternalSCTX.g:4530:4: ( (lv_label_12_0= RULE_STRING ) )
                    // InternalSCTX.g:4531:5: (lv_label_12_0= RULE_STRING )
                    {
                    // InternalSCTX.g:4531:5: (lv_label_12_0= RULE_STRING )
                    // InternalSCTX.g:4532:6: lv_label_12_0= RULE_STRING
                    {
                    lv_label_12_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_12_0, grammarAccess.getPolicyTransitionAccess().getLabelSTRINGTerminalRuleCall_5_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getPolicyTransitionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_12_0,
                      							"de.cau.cs.kieler.annotations.Annotations.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePolicyTransition"


    // $ANTLR start "entryRuleDeclarationOrMethodWithKeywordWOSemicolon"
    // InternalSCTX.g:4553:1: entryRuleDeclarationOrMethodWithKeywordWOSemicolon returns [EObject current=null] : iv_ruleDeclarationOrMethodWithKeywordWOSemicolon= ruleDeclarationOrMethodWithKeywordWOSemicolon EOF ;
    public final EObject entryRuleDeclarationOrMethodWithKeywordWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDeclarationOrMethodWithKeywordWOSemicolon = null;


        try {
            // InternalSCTX.g:4553:82: (iv_ruleDeclarationOrMethodWithKeywordWOSemicolon= ruleDeclarationOrMethodWithKeywordWOSemicolon EOF )
            // InternalSCTX.g:4554:2: iv_ruleDeclarationOrMethodWithKeywordWOSemicolon= ruleDeclarationOrMethodWithKeywordWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclarationOrMethodWithKeywordWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDeclarationOrMethodWithKeywordWOSemicolon=ruleDeclarationOrMethodWithKeywordWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDeclarationOrMethodWithKeywordWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDeclarationOrMethodWithKeywordWOSemicolon"


    // $ANTLR start "ruleDeclarationOrMethodWithKeywordWOSemicolon"
    // InternalSCTX.g:4560:1: ruleDeclarationOrMethodWithKeywordWOSemicolon returns [EObject current=null] : (this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon | this_KeywordMethodDeclarationWOSemicolon_1= ruleKeywordMethodDeclarationWOSemicolon ) ;
    public final EObject ruleDeclarationOrMethodWithKeywordWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject this_DeclarationWOSemicolon_0 = null;

        EObject this_KeywordMethodDeclarationWOSemicolon_1 = null;



        	enterRule();

        try {
            // InternalSCTX.g:4566:2: ( (this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon | this_KeywordMethodDeclarationWOSemicolon_1= ruleKeywordMethodDeclarationWOSemicolon ) )
            // InternalSCTX.g:4567:2: (this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon | this_KeywordMethodDeclarationWOSemicolon_1= ruleKeywordMethodDeclarationWOSemicolon )
            {
            // InternalSCTX.g:4567:2: (this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon | this_KeywordMethodDeclarationWOSemicolon_1= ruleKeywordMethodDeclarationWOSemicolon )
            int alt162=2;
            alt162 = dfa162.predict(input);
            switch (alt162) {
                case 1 :
                    // InternalSCTX.g:4568:3: this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationOrMethodWithKeywordWOSemicolonAccess().getDeclarationWOSemicolonParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_DeclarationWOSemicolon_0=ruleDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DeclarationWOSemicolon_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:4580:3: this_KeywordMethodDeclarationWOSemicolon_1= ruleKeywordMethodDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationOrMethodWithKeywordWOSemicolonAccess().getKeywordMethodDeclarationWOSemicolonParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_KeywordMethodDeclarationWOSemicolon_1=ruleKeywordMethodDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_KeywordMethodDeclarationWOSemicolon_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDeclarationOrMethodWithKeywordWOSemicolon"


    // $ANTLR start "entryRuleKeywordMethodDeclarationWOSemicolon"
    // InternalSCTX.g:4595:1: entryRuleKeywordMethodDeclarationWOSemicolon returns [EObject current=null] : iv_ruleKeywordMethodDeclarationWOSemicolon= ruleKeywordMethodDeclarationWOSemicolon EOF ;
    public final EObject entryRuleKeywordMethodDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleKeywordMethodDeclarationWOSemicolon = null;


        try {
            // InternalSCTX.g:4595:76: (iv_ruleKeywordMethodDeclarationWOSemicolon= ruleKeywordMethodDeclarationWOSemicolon EOF )
            // InternalSCTX.g:4596:2: iv_ruleKeywordMethodDeclarationWOSemicolon= ruleKeywordMethodDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getKeywordMethodDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleKeywordMethodDeclarationWOSemicolon=ruleKeywordMethodDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleKeywordMethodDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleKeywordMethodDeclarationWOSemicolon"


    // $ANTLR start "ruleKeywordMethodDeclarationWOSemicolon"
    // InternalSCTX.g:4602:1: ruleKeywordMethodDeclarationWOSemicolon returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? otherlv_3= 'method' ( (lv_returnType_4_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_5_0= ruleSimpleValuedObject ) ) ( (otherlv_6= '(' ( (lv_parameterDeclarations_7_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_8= ',' ( (lv_parameterDeclarations_9_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_10= ')' ) | otherlv_11= '()' ) (otherlv_12= 'schedule' ( (lv_schedule_13_0= ruleScheduleObjectReference ) )+ )? (otherlv_14= '{' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_16_0= ruleDeclaration ) )* ( (lv_statements_17_0= ruleStatement ) )* otherlv_18= '}' )? ) ;
    public final EObject ruleKeywordMethodDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_18=null;
        EObject lv_annotations_1_0 = null;

        Enumerator lv_access_2_0 = null;

        Enumerator lv_returnType_4_0 = null;

        EObject lv_valuedObjects_5_0 = null;

        EObject lv_parameterDeclarations_7_0 = null;

        EObject lv_parameterDeclarations_9_0 = null;

        EObject lv_schedule_13_0 = null;

        EObject lv_annotations_15_0 = null;

        EObject lv_declarations_16_0 = null;

        EObject lv_statements_17_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:4608:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? otherlv_3= 'method' ( (lv_returnType_4_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_5_0= ruleSimpleValuedObject ) ) ( (otherlv_6= '(' ( (lv_parameterDeclarations_7_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_8= ',' ( (lv_parameterDeclarations_9_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_10= ')' ) | otherlv_11= '()' ) (otherlv_12= 'schedule' ( (lv_schedule_13_0= ruleScheduleObjectReference ) )+ )? (otherlv_14= '{' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_16_0= ruleDeclaration ) )* ( (lv_statements_17_0= ruleStatement ) )* otherlv_18= '}' )? ) )
            // InternalSCTX.g:4609:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? otherlv_3= 'method' ( (lv_returnType_4_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_5_0= ruleSimpleValuedObject ) ) ( (otherlv_6= '(' ( (lv_parameterDeclarations_7_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_8= ',' ( (lv_parameterDeclarations_9_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_10= ')' ) | otherlv_11= '()' ) (otherlv_12= 'schedule' ( (lv_schedule_13_0= ruleScheduleObjectReference ) )+ )? (otherlv_14= '{' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_16_0= ruleDeclaration ) )* ( (lv_statements_17_0= ruleStatement ) )* otherlv_18= '}' )? )
            {
            // InternalSCTX.g:4609:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? otherlv_3= 'method' ( (lv_returnType_4_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_5_0= ruleSimpleValuedObject ) ) ( (otherlv_6= '(' ( (lv_parameterDeclarations_7_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_8= ',' ( (lv_parameterDeclarations_9_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_10= ')' ) | otherlv_11= '()' ) (otherlv_12= 'schedule' ( (lv_schedule_13_0= ruleScheduleObjectReference ) )+ )? (otherlv_14= '{' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_16_0= ruleDeclaration ) )* ( (lv_statements_17_0= ruleStatement ) )* otherlv_18= '}' )? )
            // InternalSCTX.g:4610:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? otherlv_3= 'method' ( (lv_returnType_4_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_5_0= ruleSimpleValuedObject ) ) ( (otherlv_6= '(' ( (lv_parameterDeclarations_7_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_8= ',' ( (lv_parameterDeclarations_9_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_10= ')' ) | otherlv_11= '()' ) (otherlv_12= 'schedule' ( (lv_schedule_13_0= ruleScheduleObjectReference ) )+ )? (otherlv_14= '{' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_16_0= ruleDeclaration ) )* ( (lv_statements_17_0= ruleStatement ) )* otherlv_18= '}' )?
            {
            // InternalSCTX.g:4610:3: ()
            // InternalSCTX.g:4611:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getMethodImplementationDeclarationAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:4620:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop163:
            do {
                int alt163=2;
                int LA163_0 = input.LA(1);

                if ( (LA163_0==RULE_COMMENT_ANNOTATION||LA163_0==103) ) {
                    alt163=1;
                }


                switch (alt163) {
            	case 1 :
            	    // InternalSCTX.g:4621:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:4621:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCTX.g:4622:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_127);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getKeywordMethodDeclarationWOSemicolonRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop163;
                }
            } while (true);

            // InternalSCTX.g:4639:3: ( (lv_access_2_0= ruleAccessModifier ) )?
            int alt164=2;
            int LA164_0 = input.LA(1);

            if ( ((LA164_0>=155 && LA164_0<=157)) ) {
                alt164=1;
            }
            switch (alt164) {
                case 1 :
                    // InternalSCTX.g:4640:4: (lv_access_2_0= ruleAccessModifier )
                    {
                    // InternalSCTX.g:4640:4: (lv_access_2_0= ruleAccessModifier )
                    // InternalSCTX.g:4641:5: lv_access_2_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getAccessAccessModifierEnumRuleCall_2_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_128);
                    lv_access_2_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getKeywordMethodDeclarationWOSemicolonRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_2_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,64,FollowSets000.FOLLOW_129); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getMethodKeyword_3());
              		
            }
            // InternalSCTX.g:4662:3: ( (lv_returnType_4_0= ruleMethodReturnType ) )?
            int alt165=2;
            int LA165_0 = input.LA(1);

            if ( ((LA165_0>=117 && LA165_0<=120)||LA165_0==158) ) {
                alt165=1;
            }
            switch (alt165) {
                case 1 :
                    // InternalSCTX.g:4663:4: (lv_returnType_4_0= ruleMethodReturnType )
                    {
                    // InternalSCTX.g:4663:4: (lv_returnType_4_0= ruleMethodReturnType )
                    // InternalSCTX.g:4664:5: lv_returnType_4_0= ruleMethodReturnType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getReturnTypeMethodReturnTypeEnumRuleCall_4_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_129);
                    lv_returnType_4_0=ruleMethodReturnType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getKeywordMethodDeclarationWOSemicolonRule());
                      					}
                      					set(
                      						current,
                      						"returnType",
                      						lv_returnType_4_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.MethodReturnType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:4681:3: ( (lv_valuedObjects_5_0= ruleSimpleValuedObject ) )
            // InternalSCTX.g:4682:4: (lv_valuedObjects_5_0= ruleSimpleValuedObject )
            {
            // InternalSCTX.g:4682:4: (lv_valuedObjects_5_0= ruleSimpleValuedObject )
            // InternalSCTX.g:4683:5: lv_valuedObjects_5_0= ruleSimpleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getValuedObjectsSimpleValuedObjectParserRuleCall_5_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_130);
            lv_valuedObjects_5_0=ruleSimpleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getKeywordMethodDeclarationWOSemicolonRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_5_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.SimpleValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:4700:3: ( (otherlv_6= '(' ( (lv_parameterDeclarations_7_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_8= ',' ( (lv_parameterDeclarations_9_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_10= ')' ) | otherlv_11= '()' )
            int alt167=2;
            int LA167_0 = input.LA(1);

            if ( (LA167_0==31) ) {
                alt167=1;
            }
            else if ( (LA167_0==65) ) {
                alt167=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 167, 0, input);

                throw nvae;
            }
            switch (alt167) {
                case 1 :
                    // InternalSCTX.g:4701:4: (otherlv_6= '(' ( (lv_parameterDeclarations_7_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_8= ',' ( (lv_parameterDeclarations_9_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_10= ')' )
                    {
                    // InternalSCTX.g:4701:4: (otherlv_6= '(' ( (lv_parameterDeclarations_7_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_8= ',' ( (lv_parameterDeclarations_9_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_10= ')' )
                    // InternalSCTX.g:4702:5: otherlv_6= '(' ( (lv_parameterDeclarations_7_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_8= ',' ( (lv_parameterDeclarations_9_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_10= ')'
                    {
                    otherlv_6=(Token)match(input,31,FollowSets000.FOLLOW_131); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getLeftParenthesisKeyword_6_0_0());
                      				
                    }
                    // InternalSCTX.g:4706:5: ( (lv_parameterDeclarations_7_0= ruleVariableDeclarationWOSemicolon ) )
                    // InternalSCTX.g:4707:6: (lv_parameterDeclarations_7_0= ruleVariableDeclarationWOSemicolon )
                    {
                    // InternalSCTX.g:4707:6: (lv_parameterDeclarations_7_0= ruleVariableDeclarationWOSemicolon )
                    // InternalSCTX.g:4708:7: lv_parameterDeclarations_7_0= ruleVariableDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getParameterDeclarationsVariableDeclarationWOSemicolonParserRuleCall_6_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_31);
                    lv_parameterDeclarations_7_0=ruleVariableDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getKeywordMethodDeclarationWOSemicolonRule());
                      							}
                      							add(
                      								current,
                      								"parameterDeclarations",
                      								lv_parameterDeclarations_7_0,
                      								"de.cau.cs.kieler.kexpressions.kext.KExt.VariableDeclarationWOSemicolon");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:4725:5: (otherlv_8= ',' ( (lv_parameterDeclarations_9_0= ruleVariableDeclarationWOSemicolon ) ) )*
                    loop166:
                    do {
                        int alt166=2;
                        int LA166_0 = input.LA(1);

                        if ( (LA166_0==20) ) {
                            alt166=1;
                        }


                        switch (alt166) {
                    	case 1 :
                    	    // InternalSCTX.g:4726:6: otherlv_8= ',' ( (lv_parameterDeclarations_9_0= ruleVariableDeclarationWOSemicolon ) )
                    	    {
                    	    otherlv_8=(Token)match(input,20,FollowSets000.FOLLOW_131); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_8, grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getCommaKeyword_6_0_2_0());
                    	      					
                    	    }
                    	    // InternalSCTX.g:4730:6: ( (lv_parameterDeclarations_9_0= ruleVariableDeclarationWOSemicolon ) )
                    	    // InternalSCTX.g:4731:7: (lv_parameterDeclarations_9_0= ruleVariableDeclarationWOSemicolon )
                    	    {
                    	    // InternalSCTX.g:4731:7: (lv_parameterDeclarations_9_0= ruleVariableDeclarationWOSemicolon )
                    	    // InternalSCTX.g:4732:8: lv_parameterDeclarations_9_0= ruleVariableDeclarationWOSemicolon
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getParameterDeclarationsVariableDeclarationWOSemicolonParserRuleCall_6_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_31);
                    	    lv_parameterDeclarations_9_0=ruleVariableDeclarationWOSemicolon();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getKeywordMethodDeclarationWOSemicolonRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"parameterDeclarations",
                    	      									lv_parameterDeclarations_9_0,
                    	      									"de.cau.cs.kieler.kexpressions.kext.KExt.VariableDeclarationWOSemicolon");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop166;
                        }
                    } while (true);

                    otherlv_10=(Token)match(input,32,FollowSets000.FOLLOW_132); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_10, grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getRightParenthesisKeyword_6_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:4756:4: otherlv_11= '()'
                    {
                    otherlv_11=(Token)match(input,65,FollowSets000.FOLLOW_132); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getLeftParenthesisRightParenthesisKeyword_6_1());
                      			
                    }

                    }
                    break;

            }

            // InternalSCTX.g:4761:3: (otherlv_12= 'schedule' ( (lv_schedule_13_0= ruleScheduleObjectReference ) )+ )?
            int alt169=2;
            alt169 = dfa169.predict(input);
            switch (alt169) {
                case 1 :
                    // InternalSCTX.g:4762:4: otherlv_12= 'schedule' ( (lv_schedule_13_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_12=(Token)match(input,29,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getScheduleKeyword_7_0());
                      			
                    }
                    // InternalSCTX.g:4766:4: ( (lv_schedule_13_0= ruleScheduleObjectReference ) )+
                    int cnt168=0;
                    loop168:
                    do {
                        int alt168=2;
                        int LA168_0 = input.LA(1);

                        if ( (LA168_0==RULE_ID) ) {
                            alt168=1;
                        }


                        switch (alt168) {
                    	case 1 :
                    	    // InternalSCTX.g:4767:5: (lv_schedule_13_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCTX.g:4767:5: (lv_schedule_13_0= ruleScheduleObjectReference )
                    	    // InternalSCTX.g:4768:6: lv_schedule_13_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getScheduleScheduleObjectReferenceParserRuleCall_7_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_133);
                    	    lv_schedule_13_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getKeywordMethodDeclarationWOSemicolonRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_13_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt168 >= 1 ) break loop168;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(168, input);
                                throw eee;
                        }
                        cnt168++;
                    } while (true);


                    }
                    break;

            }

            // InternalSCTX.g:4786:3: (otherlv_14= '{' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_16_0= ruleDeclaration ) )* ( (lv_statements_17_0= ruleStatement ) )* otherlv_18= '}' )?
            int alt173=2;
            int LA173_0 = input.LA(1);

            if ( (LA173_0==21) ) {
                alt173=1;
            }
            switch (alt173) {
                case 1 :
                    // InternalSCTX.g:4787:4: otherlv_14= '{' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_16_0= ruleDeclaration ) )* ( (lv_statements_17_0= ruleStatement ) )* otherlv_18= '}'
                    {
                    otherlv_14=(Token)match(input,21,FollowSets000.FOLLOW_134); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_14, grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getLeftCurlyBracketKeyword_8_0());
                      			
                    }
                    // InternalSCTX.g:4791:4: ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )?
                    int alt170=2;
                    int LA170_0 = input.LA(1);

                    if ( (LA170_0==RULE_SL_COMMENT_ANNOTATION) ) {
                        alt170=1;
                    }
                    switch (alt170) {
                        case 1 :
                            // InternalSCTX.g:4792:5: (lv_annotations_15_0= ruleCommentAnnotatonSL )
                            {
                            // InternalSCTX.g:4792:5: (lv_annotations_15_0= ruleCommentAnnotatonSL )
                            // InternalSCTX.g:4793:6: lv_annotations_15_0= ruleCommentAnnotatonSL
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_8_1_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_106);
                            lv_annotations_15_0=ruleCommentAnnotatonSL();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getKeywordMethodDeclarationWOSemicolonRule());
                              						}
                              						add(
                              							current,
                              							"annotations",
                              							lv_annotations_15_0,
                              							"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSCTX.g:4810:4: ( (lv_declarations_16_0= ruleDeclaration ) )*
                    loop171:
                    do {
                        int alt171=2;
                        alt171 = dfa171.predict(input);
                        switch (alt171) {
                    	case 1 :
                    	    // InternalSCTX.g:4811:5: (lv_declarations_16_0= ruleDeclaration )
                    	    {
                    	    // InternalSCTX.g:4811:5: (lv_declarations_16_0= ruleDeclaration )
                    	    // InternalSCTX.g:4812:6: lv_declarations_16_0= ruleDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getDeclarationsDeclarationParserRuleCall_8_2_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_106);
                    	    lv_declarations_16_0=ruleDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getKeywordMethodDeclarationWOSemicolonRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"declarations",
                    	      							lv_declarations_16_0,
                    	      							"de.cau.cs.kieler.sccharts.text.SCTX.Declaration");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop171;
                        }
                    } while (true);

                    // InternalSCTX.g:4829:4: ( (lv_statements_17_0= ruleStatement ) )*
                    loop172:
                    do {
                        int alt172=2;
                        int LA172_0 = input.LA(1);

                        if ( (LA172_0==RULE_ID||LA172_0==RULE_HOSTCODE||LA172_0==RULE_COMMENT_ANNOTATION||LA172_0==21||LA172_0==36||LA172_0==44||(LA172_0>=67 && LA172_0<=68)||LA172_0==70||LA172_0==76||(LA172_0>=80 && LA172_0<=81)||LA172_0==103) ) {
                            alt172=1;
                        }


                        switch (alt172) {
                    	case 1 :
                    	    // InternalSCTX.g:4830:5: (lv_statements_17_0= ruleStatement )
                    	    {
                    	    // InternalSCTX.g:4830:5: (lv_statements_17_0= ruleStatement )
                    	    // InternalSCTX.g:4831:6: lv_statements_17_0= ruleStatement
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getStatementsStatementParserRuleCall_8_3_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_107);
                    	    lv_statements_17_0=ruleStatement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getKeywordMethodDeclarationWOSemicolonRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"statements",
                    	      							lv_statements_17_0,
                    	      							"de.cau.cs.kieler.sccharts.text.SCTX.Statement");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop172;
                        }
                    } while (true);

                    otherlv_18=(Token)match(input,22,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getRightCurlyBracketKeyword_8_4());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleKeywordMethodDeclarationWOSemicolon"


    // $ANTLR start "entryRuleModule"
    // InternalSCTX.g:4857:1: entryRuleModule returns [EObject current=null] : iv_ruleModule= ruleModule EOF ;
    public final EObject entryRuleModule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModule = null;


        try {
            // InternalSCTX.g:4857:47: (iv_ruleModule= ruleModule EOF )
            // InternalSCTX.g:4858:2: iv_ruleModule= ruleModule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModuleRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleModule=ruleModule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModule; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModule"


    // $ANTLR start "ruleModule"
    // InternalSCTX.g:4864:1: ruleModule returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'module' ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= ':' )? ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* ) ;
    public final EObject ruleModule() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_name_2_0=null;
        Token otherlv_3=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_declarations_4_0 = null;

        EObject lv_statements_5_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:4870:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'module' ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= ':' )? ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* ) )
            // InternalSCTX.g:4871:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'module' ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= ':' )? ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* )
            {
            // InternalSCTX.g:4871:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'module' ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= ':' )? ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* )
            // InternalSCTX.g:4872:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'module' ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= ':' )? ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )*
            {
            // InternalSCTX.g:4872:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop174:
            do {
                int alt174=2;
                int LA174_0 = input.LA(1);

                if ( (LA174_0==RULE_COMMENT_ANNOTATION||LA174_0==103) ) {
                    alt174=1;
                }


                switch (alt174) {
            	case 1 :
            	    // InternalSCTX.g:4873:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:4873:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:4874:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getModuleAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_135);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getModuleRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop174;
                }
            } while (true);

            otherlv_1=(Token)match(input,66,FollowSets000.FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getModuleAccess().getModuleKeyword_1());
              		
            }
            // InternalSCTX.g:4895:3: ( (lv_name_2_0= RULE_ID ) )
            // InternalSCTX.g:4896:4: (lv_name_2_0= RULE_ID )
            {
            // InternalSCTX.g:4896:4: (lv_name_2_0= RULE_ID )
            // InternalSCTX.g:4897:5: lv_name_2_0= RULE_ID
            {
            lv_name_2_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_136); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_2_0, grammarAccess.getModuleAccess().getNameIDTerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getModuleRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_2_0,
              						"de.cau.cs.kieler.annotations.Annotations.ID");
              				
            }

            }


            }

            // InternalSCTX.g:4913:3: (otherlv_3= ':' )?
            int alt175=2;
            int LA175_0 = input.LA(1);

            if ( (LA175_0==45) ) {
                alt175=1;
            }
            switch (alt175) {
                case 1 :
                    // InternalSCTX.g:4914:4: otherlv_3= ':'
                    {
                    otherlv_3=(Token)match(input,45,FollowSets000.FOLLOW_137); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getModuleAccess().getColonKeyword_3());
                      			
                    }

                    }
                    break;

            }

            // InternalSCTX.g:4919:3: ( (lv_declarations_4_0= ruleDeclaration ) )*
            loop176:
            do {
                int alt176=2;
                alt176 = dfa176.predict(input);
                switch (alt176) {
            	case 1 :
            	    // InternalSCTX.g:4920:4: (lv_declarations_4_0= ruleDeclaration )
            	    {
            	    // InternalSCTX.g:4920:4: (lv_declarations_4_0= ruleDeclaration )
            	    // InternalSCTX.g:4921:5: lv_declarations_4_0= ruleDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getModuleAccess().getDeclarationsDeclarationParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_137);
            	    lv_declarations_4_0=ruleDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getModuleRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_4_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.Declaration");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop176;
                }
            } while (true);

            // InternalSCTX.g:4938:3: ( (lv_statements_5_0= ruleStatement ) )*
            loop177:
            do {
                int alt177=2;
                int LA177_0 = input.LA(1);

                if ( (LA177_0==RULE_ID||LA177_0==RULE_HOSTCODE||LA177_0==RULE_COMMENT_ANNOTATION||LA177_0==21||LA177_0==36||LA177_0==44||(LA177_0>=67 && LA177_0<=68)||LA177_0==70||LA177_0==76||(LA177_0>=80 && LA177_0<=81)||LA177_0==103) ) {
                    alt177=1;
                }


                switch (alt177) {
            	case 1 :
            	    // InternalSCTX.g:4939:4: (lv_statements_5_0= ruleStatement )
            	    {
            	    // InternalSCTX.g:4939:4: (lv_statements_5_0= ruleStatement )
            	    // InternalSCTX.g:4940:5: lv_statements_5_0= ruleStatement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getModuleAccess().getStatementsStatementParserRuleCall_5_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_138);
            	    lv_statements_5_0=ruleStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getModuleRule());
            	      					}
            	      					add(
            	      						current,
            	      						"statements",
            	      						lv_statements_5_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.Statement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop177;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModule"


    // $ANTLR start "entryRuleLabel"
    // InternalSCTX.g:4961:1: entryRuleLabel returns [EObject current=null] : iv_ruleLabel= ruleLabel EOF ;
    public final EObject entryRuleLabel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLabel = null;


        try {
            // InternalSCTX.g:4961:46: (iv_ruleLabel= ruleLabel EOF )
            // InternalSCTX.g:4962:2: iv_ruleLabel= ruleLabel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLabelRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLabel=ruleLabel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLabel; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLabel"


    // $ANTLR start "ruleLabel"
    // InternalSCTX.g:4968:1: ruleLabel returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':' ) ;
    public final EObject ruleLabel() throws RecognitionException {
        EObject current = null;

        Token lv_name_1_0=null;
        Token otherlv_2=null;
        EObject lv_annotations_0_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:4974:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':' ) )
            // InternalSCTX.g:4975:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':' )
            {
            // InternalSCTX.g:4975:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':' )
            // InternalSCTX.g:4976:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':'
            {
            // InternalSCTX.g:4976:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop178:
            do {
                int alt178=2;
                int LA178_0 = input.LA(1);

                if ( (LA178_0==RULE_COMMENT_ANNOTATION||LA178_0==103) ) {
                    alt178=1;
                }


                switch (alt178) {
            	case 1 :
            	    // InternalSCTX.g:4977:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:4977:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:4978:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getLabelAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_116);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getLabelRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop178;
                }
            } while (true);

            // InternalSCTX.g:4995:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalSCTX.g:4996:4: (lv_name_1_0= RULE_ID )
            {
            // InternalSCTX.g:4996:4: (lv_name_1_0= RULE_ID )
            // InternalSCTX.g:4997:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_56); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getLabelAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getLabelRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ID");
              				
            }

            }


            }

            otherlv_2=(Token)match(input,45,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getLabelAccess().getColonKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLabel"


    // $ANTLR start "entryRuleGoto"
    // InternalSCTX.g:5021:1: entryRuleGoto returns [EObject current=null] : iv_ruleGoto= ruleGoto EOF ;
    public final EObject entryRuleGoto() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGoto = null;


        try {
            // InternalSCTX.g:5021:45: (iv_ruleGoto= ruleGoto EOF )
            // InternalSCTX.g:5022:2: iv_ruleGoto= ruleGoto EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGotoRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleGoto=ruleGoto();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGoto; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGoto"


    // $ANTLR start "ruleGoto"
    // InternalSCTX.g:5028:1: ruleGoto returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'goto' ( (otherlv_2= RULE_ID ) ) ( (lv_semicolon_3_0= ';' ) )? ) ;
    public final EObject ruleGoto() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_semicolon_3_0=null;
        EObject lv_annotations_0_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:5034:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'goto' ( (otherlv_2= RULE_ID ) ) ( (lv_semicolon_3_0= ';' ) )? ) )
            // InternalSCTX.g:5035:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'goto' ( (otherlv_2= RULE_ID ) ) ( (lv_semicolon_3_0= ';' ) )? )
            {
            // InternalSCTX.g:5035:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'goto' ( (otherlv_2= RULE_ID ) ) ( (lv_semicolon_3_0= ';' ) )? )
            // InternalSCTX.g:5036:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'goto' ( (otherlv_2= RULE_ID ) ) ( (lv_semicolon_3_0= ';' ) )?
            {
            // InternalSCTX.g:5036:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop179:
            do {
                int alt179=2;
                int LA179_0 = input.LA(1);

                if ( (LA179_0==RULE_COMMENT_ANNOTATION||LA179_0==103) ) {
                    alt179=1;
                }


                switch (alt179) {
            	case 1 :
            	    // InternalSCTX.g:5037:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:5037:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:5038:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getGotoAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_139);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getGotoRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop179;
                }
            } while (true);

            otherlv_1=(Token)match(input,67,FollowSets000.FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getGotoAccess().getGotoKeyword_1());
              		
            }
            // InternalSCTX.g:5059:3: ( (otherlv_2= RULE_ID ) )
            // InternalSCTX.g:5060:4: (otherlv_2= RULE_ID )
            {
            // InternalSCTX.g:5060:4: (otherlv_2= RULE_ID )
            // InternalSCTX.g:5061:5: otherlv_2= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getGotoRule());
              					}
              				
            }
            otherlv_2=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_140); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_2, grammarAccess.getGotoAccess().getTargetLabelCrossReference_2_0());
              				
            }

            }


            }

            // InternalSCTX.g:5075:3: ( (lv_semicolon_3_0= ';' ) )?
            int alt180=2;
            int LA180_0 = input.LA(1);

            if ( (LA180_0==40) ) {
                alt180=1;
            }
            switch (alt180) {
                case 1 :
                    // InternalSCTX.g:5076:4: (lv_semicolon_3_0= ';' )
                    {
                    // InternalSCTX.g:5076:4: (lv_semicolon_3_0= ';' )
                    // InternalSCTX.g:5077:5: lv_semicolon_3_0= ';'
                    {
                    lv_semicolon_3_0=(Token)match(input,40,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_semicolon_3_0, grammarAccess.getGotoAccess().getSemicolonSemicolonKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getGotoRule());
                      					}
                      					setWithLastConsumed(current, "semicolon", true, ";");
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGoto"


    // $ANTLR start "entryRuleSclAssignment"
    // InternalSCTX.g:5093:1: entryRuleSclAssignment returns [EObject current=null] : iv_ruleSclAssignment= ruleSclAssignment EOF ;
    public final EObject entryRuleSclAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSclAssignment = null;


        try {
            // InternalSCTX.g:5093:54: (iv_ruleSclAssignment= ruleSclAssignment EOF )
            // InternalSCTX.g:5094:2: iv_ruleSclAssignment= ruleSclAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSclAssignmentRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSclAssignment=ruleSclAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSclAssignment; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSclAssignment"


    // $ANTLR start "ruleSclAssignment"
    // InternalSCTX.g:5100:1: ruleSclAssignment returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? ( (lv_semicolon_6_0= ';' ) )? ) ;
    public final EObject ruleSclAssignment() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        Token lv_semicolon_6_0=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_reference_1_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_expression_3_0 = null;

        EObject lv_schedule_5_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:5106:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? ( (lv_semicolon_6_0= ';' ) )? ) )
            // InternalSCTX.g:5107:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? ( (lv_semicolon_6_0= ';' ) )? )
            {
            // InternalSCTX.g:5107:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? ( (lv_semicolon_6_0= ';' ) )? )
            // InternalSCTX.g:5108:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? ( (lv_semicolon_6_0= ';' ) )?
            {
            // InternalSCTX.g:5108:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop181:
            do {
                int alt181=2;
                int LA181_0 = input.LA(1);

                if ( (LA181_0==RULE_COMMENT_ANNOTATION||LA181_0==103) ) {
                    alt181=1;
                }


                switch (alt181) {
            	case 1 :
            	    // InternalSCTX.g:5109:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:5109:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:5110:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSclAssignmentAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_69);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSclAssignmentRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop181;
                }
            } while (true);

            // InternalSCTX.g:5127:3: ( (lv_reference_1_0= ruleValuedObjectReference ) )
            // InternalSCTX.g:5128:4: (lv_reference_1_0= ruleValuedObjectReference )
            {
            // InternalSCTX.g:5128:4: (lv_reference_1_0= ruleValuedObjectReference )
            // InternalSCTX.g:5129:5: lv_reference_1_0= ruleValuedObjectReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSclAssignmentAccess().getReferenceValuedObjectReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_70);
            lv_reference_1_0=ruleValuedObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSclAssignmentRule());
              					}
              					set(
              						current,
              						"reference",
              						lv_reference_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:5146:3: ( (lv_operator_2_0= ruleAssignOperator ) )
            // InternalSCTX.g:5147:4: (lv_operator_2_0= ruleAssignOperator )
            {
            // InternalSCTX.g:5147:4: (lv_operator_2_0= ruleAssignOperator )
            // InternalSCTX.g:5148:5: lv_operator_2_0= ruleAssignOperator
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSclAssignmentAccess().getOperatorAssignOperatorEnumRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_30);
            lv_operator_2_0=ruleAssignOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSclAssignmentRule());
              					}
              					set(
              						current,
              						"operator",
              						lv_operator_2_0,
              						"de.cau.cs.kieler.kexpressions.keffects.KEffects.AssignOperator");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:5165:3: ( (lv_expression_3_0= ruleExpression ) )
            // InternalSCTX.g:5166:4: (lv_expression_3_0= ruleExpression )
            {
            // InternalSCTX.g:5166:4: (lv_expression_3_0= ruleExpression )
            // InternalSCTX.g:5167:5: lv_expression_3_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSclAssignmentAccess().getExpressionExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_141);
            lv_expression_3_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSclAssignmentRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_3_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:5184:3: (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )?
            int alt183=2;
            int LA183_0 = input.LA(1);

            if ( (LA183_0==29) ) {
                alt183=1;
            }
            switch (alt183) {
                case 1 :
                    // InternalSCTX.g:5185:4: otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_4=(Token)match(input,29,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getSclAssignmentAccess().getScheduleKeyword_4_0());
                      			
                    }
                    // InternalSCTX.g:5189:4: ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+
                    int cnt182=0;
                    loop182:
                    do {
                        int alt182=2;
                        alt182 = dfa182.predict(input);
                        switch (alt182) {
                    	case 1 :
                    	    // InternalSCTX.g:5190:5: (lv_schedule_5_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCTX.g:5190:5: (lv_schedule_5_0= ruleScheduleObjectReference )
                    	    // InternalSCTX.g:5191:6: lv_schedule_5_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getSclAssignmentAccess().getScheduleScheduleObjectReferenceParserRuleCall_4_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_142);
                    	    lv_schedule_5_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getSclAssignmentRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_5_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt182 >= 1 ) break loop182;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(182, input);
                                throw eee;
                        }
                        cnt182++;
                    } while (true);


                    }
                    break;

            }

            // InternalSCTX.g:5209:3: ( (lv_semicolon_6_0= ';' ) )?
            int alt184=2;
            int LA184_0 = input.LA(1);

            if ( (LA184_0==40) ) {
                alt184=1;
            }
            switch (alt184) {
                case 1 :
                    // InternalSCTX.g:5210:4: (lv_semicolon_6_0= ';' )
                    {
                    // InternalSCTX.g:5210:4: (lv_semicolon_6_0= ';' )
                    // InternalSCTX.g:5211:5: lv_semicolon_6_0= ';'
                    {
                    lv_semicolon_6_0=(Token)match(input,40,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_semicolon_6_0, grammarAccess.getSclAssignmentAccess().getSemicolonSemicolonKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSclAssignmentRule());
                      					}
                      					setWithLastConsumed(current, "semicolon", true, ";");
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSclAssignment"


    // $ANTLR start "entryRuleSclPostfixAssignment"
    // InternalSCTX.g:5227:1: entryRuleSclPostfixAssignment returns [EObject current=null] : iv_ruleSclPostfixAssignment= ruleSclPostfixAssignment EOF ;
    public final EObject entryRuleSclPostfixAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSclPostfixAssignment = null;


        try {
            // InternalSCTX.g:5227:61: (iv_ruleSclPostfixAssignment= ruleSclPostfixAssignment EOF )
            // InternalSCTX.g:5228:2: iv_ruleSclPostfixAssignment= ruleSclPostfixAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSclPostfixAssignmentRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSclPostfixAssignment=ruleSclPostfixAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSclPostfixAssignment; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSclPostfixAssignment"


    // $ANTLR start "ruleSclPostfixAssignment"
    // InternalSCTX.g:5234:1: ruleSclPostfixAssignment returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )? ( (lv_semicolon_5_0= ';' ) )? ) ;
    public final EObject ruleSclPostfixAssignment() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        Token lv_semicolon_5_0=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_reference_1_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_schedule_4_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:5240:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )? ( (lv_semicolon_5_0= ';' ) )? ) )
            // InternalSCTX.g:5241:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )? ( (lv_semicolon_5_0= ';' ) )? )
            {
            // InternalSCTX.g:5241:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )? ( (lv_semicolon_5_0= ';' ) )? )
            // InternalSCTX.g:5242:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )? ( (lv_semicolon_5_0= ';' ) )?
            {
            // InternalSCTX.g:5242:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop185:
            do {
                int alt185=2;
                int LA185_0 = input.LA(1);

                if ( (LA185_0==RULE_COMMENT_ANNOTATION||LA185_0==103) ) {
                    alt185=1;
                }


                switch (alt185) {
            	case 1 :
            	    // InternalSCTX.g:5243:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:5243:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:5244:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSclPostfixAssignmentAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_69);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSclPostfixAssignmentRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop185;
                }
            } while (true);

            // InternalSCTX.g:5261:3: ( (lv_reference_1_0= ruleValuedObjectReference ) )
            // InternalSCTX.g:5262:4: (lv_reference_1_0= ruleValuedObjectReference )
            {
            // InternalSCTX.g:5262:4: (lv_reference_1_0= ruleValuedObjectReference )
            // InternalSCTX.g:5263:5: lv_reference_1_0= ruleValuedObjectReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSclPostfixAssignmentAccess().getReferenceValuedObjectReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_143);
            lv_reference_1_0=ruleValuedObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSclPostfixAssignmentRule());
              					}
              					set(
              						current,
              						"reference",
              						lv_reference_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:5280:3: ( (lv_operator_2_0= rulePostfixOperator ) )
            // InternalSCTX.g:5281:4: (lv_operator_2_0= rulePostfixOperator )
            {
            // InternalSCTX.g:5281:4: (lv_operator_2_0= rulePostfixOperator )
            // InternalSCTX.g:5282:5: lv_operator_2_0= rulePostfixOperator
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSclPostfixAssignmentAccess().getOperatorPostfixOperatorEnumRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_141);
            lv_operator_2_0=rulePostfixOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSclPostfixAssignmentRule());
              					}
              					set(
              						current,
              						"operator",
              						lv_operator_2_0,
              						"de.cau.cs.kieler.kexpressions.keffects.KEffects.PostfixOperator");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:5299:3: (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )?
            int alt187=2;
            int LA187_0 = input.LA(1);

            if ( (LA187_0==29) ) {
                alt187=1;
            }
            switch (alt187) {
                case 1 :
                    // InternalSCTX.g:5300:4: otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_3=(Token)match(input,29,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getSclPostfixAssignmentAccess().getScheduleKeyword_3_0());
                      			
                    }
                    // InternalSCTX.g:5304:4: ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+
                    int cnt186=0;
                    loop186:
                    do {
                        int alt186=2;
                        alt186 = dfa186.predict(input);
                        switch (alt186) {
                    	case 1 :
                    	    // InternalSCTX.g:5305:5: (lv_schedule_4_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCTX.g:5305:5: (lv_schedule_4_0= ruleScheduleObjectReference )
                    	    // InternalSCTX.g:5306:6: lv_schedule_4_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getSclPostfixAssignmentAccess().getScheduleScheduleObjectReferenceParserRuleCall_3_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_142);
                    	    lv_schedule_4_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getSclPostfixAssignmentRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_4_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt186 >= 1 ) break loop186;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(186, input);
                                throw eee;
                        }
                        cnt186++;
                    } while (true);


                    }
                    break;

            }

            // InternalSCTX.g:5324:3: ( (lv_semicolon_5_0= ';' ) )?
            int alt188=2;
            int LA188_0 = input.LA(1);

            if ( (LA188_0==40) ) {
                alt188=1;
            }
            switch (alt188) {
                case 1 :
                    // InternalSCTX.g:5325:4: (lv_semicolon_5_0= ';' )
                    {
                    // InternalSCTX.g:5325:4: (lv_semicolon_5_0= ';' )
                    // InternalSCTX.g:5326:5: lv_semicolon_5_0= ';'
                    {
                    lv_semicolon_5_0=(Token)match(input,40,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_semicolon_5_0, grammarAccess.getSclPostfixAssignmentAccess().getSemicolonSemicolonKeyword_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSclPostfixAssignmentRule());
                      					}
                      					setWithLastConsumed(current, "semicolon", true, ";");
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSclPostfixAssignment"


    // $ANTLR start "entryRuleSclEffectAssignment"
    // InternalSCTX.g:5342:1: entryRuleSclEffectAssignment returns [EObject current=null] : iv_ruleSclEffectAssignment= ruleSclEffectAssignment EOF ;
    public final EObject entryRuleSclEffectAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSclEffectAssignment = null;


        try {
            // InternalSCTX.g:5342:60: (iv_ruleSclEffectAssignment= ruleSclEffectAssignment EOF )
            // InternalSCTX.g:5343:2: iv_ruleSclEffectAssignment= ruleSclEffectAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSclEffectAssignmentRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSclEffectAssignment=ruleSclEffectAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSclEffectAssignment; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSclEffectAssignment"


    // $ANTLR start "ruleSclEffectAssignment"
    // InternalSCTX.g:5349:1: ruleSclEffectAssignment returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( (lv_expression_1_1= ruleReferenceCall | lv_expression_1_2= ruleTextExpression | lv_expression_1_3= rulePrintCall | lv_expression_1_4= ruleRandomizeCall | lv_expression_1_5= ruleFunctionCall ) ) ) (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )? ( (lv_semicolon_4_0= ';' ) )? ) ;
    public final EObject ruleSclEffectAssignment() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_semicolon_4_0=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_expression_1_1 = null;

        EObject lv_expression_1_2 = null;

        EObject lv_expression_1_3 = null;

        EObject lv_expression_1_4 = null;

        EObject lv_expression_1_5 = null;

        EObject lv_schedule_3_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:5355:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( (lv_expression_1_1= ruleReferenceCall | lv_expression_1_2= ruleTextExpression | lv_expression_1_3= rulePrintCall | lv_expression_1_4= ruleRandomizeCall | lv_expression_1_5= ruleFunctionCall ) ) ) (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )? ( (lv_semicolon_4_0= ';' ) )? ) )
            // InternalSCTX.g:5356:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( (lv_expression_1_1= ruleReferenceCall | lv_expression_1_2= ruleTextExpression | lv_expression_1_3= rulePrintCall | lv_expression_1_4= ruleRandomizeCall | lv_expression_1_5= ruleFunctionCall ) ) ) (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )? ( (lv_semicolon_4_0= ';' ) )? )
            {
            // InternalSCTX.g:5356:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( (lv_expression_1_1= ruleReferenceCall | lv_expression_1_2= ruleTextExpression | lv_expression_1_3= rulePrintCall | lv_expression_1_4= ruleRandomizeCall | lv_expression_1_5= ruleFunctionCall ) ) ) (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )? ( (lv_semicolon_4_0= ';' ) )? )
            // InternalSCTX.g:5357:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( (lv_expression_1_1= ruleReferenceCall | lv_expression_1_2= ruleTextExpression | lv_expression_1_3= rulePrintCall | lv_expression_1_4= ruleRandomizeCall | lv_expression_1_5= ruleFunctionCall ) ) ) (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )? ( (lv_semicolon_4_0= ';' ) )?
            {
            // InternalSCTX.g:5357:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop189:
            do {
                int alt189=2;
                int LA189_0 = input.LA(1);

                if ( (LA189_0==RULE_COMMENT_ANNOTATION) ) {
                    int LA189_2 = input.LA(2);

                    if ( (synpred204_InternalSCTX()) ) {
                        alt189=1;
                    }


                }
                else if ( (LA189_0==103) ) {
                    int LA189_3 = input.LA(2);

                    if ( (LA189_3==RULE_ID) ) {
                        int LA189_5 = input.LA(3);

                        if ( (synpred204_InternalSCTX()) ) {
                            alt189=1;
                        }


                    }


                }


                switch (alt189) {
            	case 1 :
            	    // InternalSCTX.g:5358:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:5358:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:5359:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSclEffectAssignmentAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_144);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSclEffectAssignmentRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop189;
                }
            } while (true);

            // InternalSCTX.g:5376:3: ( ( (lv_expression_1_1= ruleReferenceCall | lv_expression_1_2= ruleTextExpression | lv_expression_1_3= rulePrintCall | lv_expression_1_4= ruleRandomizeCall | lv_expression_1_5= ruleFunctionCall ) ) )
            // InternalSCTX.g:5377:4: ( (lv_expression_1_1= ruleReferenceCall | lv_expression_1_2= ruleTextExpression | lv_expression_1_3= rulePrintCall | lv_expression_1_4= ruleRandomizeCall | lv_expression_1_5= ruleFunctionCall ) )
            {
            // InternalSCTX.g:5377:4: ( (lv_expression_1_1= ruleReferenceCall | lv_expression_1_2= ruleTextExpression | lv_expression_1_3= rulePrintCall | lv_expression_1_4= ruleRandomizeCall | lv_expression_1_5= ruleFunctionCall ) )
            // InternalSCTX.g:5378:5: (lv_expression_1_1= ruleReferenceCall | lv_expression_1_2= ruleTextExpression | lv_expression_1_3= rulePrintCall | lv_expression_1_4= ruleRandomizeCall | lv_expression_1_5= ruleFunctionCall )
            {
            // InternalSCTX.g:5378:5: (lv_expression_1_1= ruleReferenceCall | lv_expression_1_2= ruleTextExpression | lv_expression_1_3= rulePrintCall | lv_expression_1_4= ruleRandomizeCall | lv_expression_1_5= ruleFunctionCall )
            int alt190=5;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt190=1;
                }
                break;
            case RULE_HOSTCODE:
            case RULE_COMMENT_ANNOTATION:
            case 103:
                {
                alt190=2;
                }
                break;
            case 80:
                {
                alt190=3;
                }
                break;
            case 81:
                {
                alt190=4;
                }
                break;
            case 76:
                {
                alt190=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 190, 0, input);

                throw nvae;
            }

            switch (alt190) {
                case 1 :
                    // InternalSCTX.g:5379:6: lv_expression_1_1= ruleReferenceCall
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSclEffectAssignmentAccess().getExpressionReferenceCallParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_141);
                    lv_expression_1_1=ruleReferenceCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSclEffectAssignmentRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_1_1,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.ReferenceCall");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:5395:6: lv_expression_1_2= ruleTextExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSclEffectAssignmentAccess().getExpressionTextExpressionParserRuleCall_1_0_1());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_141);
                    lv_expression_1_2=ruleTextExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSclEffectAssignmentRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_1_2,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.TextExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:5411:6: lv_expression_1_3= rulePrintCall
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSclEffectAssignmentAccess().getExpressionPrintCallParserRuleCall_1_0_2());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_141);
                    lv_expression_1_3=rulePrintCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSclEffectAssignmentRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_1_3,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.PrintCall");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;
                case 4 :
                    // InternalSCTX.g:5427:6: lv_expression_1_4= ruleRandomizeCall
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSclEffectAssignmentAccess().getExpressionRandomizeCallParserRuleCall_1_0_3());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_141);
                    lv_expression_1_4=ruleRandomizeCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSclEffectAssignmentRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_1_4,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.RandomizeCall");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;
                case 5 :
                    // InternalSCTX.g:5443:6: lv_expression_1_5= ruleFunctionCall
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSclEffectAssignmentAccess().getExpressionFunctionCallParserRuleCall_1_0_4());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_141);
                    lv_expression_1_5=ruleFunctionCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSclEffectAssignmentRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_1_5,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.FunctionCall");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;

            }


            }


            }

            // InternalSCTX.g:5461:3: (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )?
            int alt192=2;
            int LA192_0 = input.LA(1);

            if ( (LA192_0==29) ) {
                alt192=1;
            }
            switch (alt192) {
                case 1 :
                    // InternalSCTX.g:5462:4: otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_2=(Token)match(input,29,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getSclEffectAssignmentAccess().getScheduleKeyword_2_0());
                      			
                    }
                    // InternalSCTX.g:5466:4: ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+
                    int cnt191=0;
                    loop191:
                    do {
                        int alt191=2;
                        alt191 = dfa191.predict(input);
                        switch (alt191) {
                    	case 1 :
                    	    // InternalSCTX.g:5467:5: (lv_schedule_3_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCTX.g:5467:5: (lv_schedule_3_0= ruleScheduleObjectReference )
                    	    // InternalSCTX.g:5468:6: lv_schedule_3_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getSclEffectAssignmentAccess().getScheduleScheduleObjectReferenceParserRuleCall_2_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_142);
                    	    lv_schedule_3_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getSclEffectAssignmentRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_3_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt191 >= 1 ) break loop191;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(191, input);
                                throw eee;
                        }
                        cnt191++;
                    } while (true);


                    }
                    break;

            }

            // InternalSCTX.g:5486:3: ( (lv_semicolon_4_0= ';' ) )?
            int alt193=2;
            int LA193_0 = input.LA(1);

            if ( (LA193_0==40) ) {
                alt193=1;
            }
            switch (alt193) {
                case 1 :
                    // InternalSCTX.g:5487:4: (lv_semicolon_4_0= ';' )
                    {
                    // InternalSCTX.g:5487:4: (lv_semicolon_4_0= ';' )
                    // InternalSCTX.g:5488:5: lv_semicolon_4_0= ';'
                    {
                    lv_semicolon_4_0=(Token)match(input,40,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_semicolon_4_0, grammarAccess.getSclEffectAssignmentAccess().getSemicolonSemicolonKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSclEffectAssignmentRule());
                      					}
                      					setWithLastConsumed(current, "semicolon", true, ";");
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSclEffectAssignment"


    // $ANTLR start "entryRuleReturn"
    // InternalSCTX.g:5504:1: entryRuleReturn returns [EObject current=null] : iv_ruleReturn= ruleReturn EOF ;
    public final EObject entryRuleReturn() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReturn = null;


        try {
            // InternalSCTX.g:5504:47: (iv_ruleReturn= ruleReturn EOF )
            // InternalSCTX.g:5505:2: iv_ruleReturn= ruleReturn EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReturnRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleReturn=ruleReturn();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReturn; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReturn"


    // $ANTLR start "ruleReturn"
    // InternalSCTX.g:5511:1: ruleReturn returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'return' ( (lv_expression_2_0= ruleExpression ) ) ) ;
    public final EObject ruleReturn() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_expression_2_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:5517:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'return' ( (lv_expression_2_0= ruleExpression ) ) ) )
            // InternalSCTX.g:5518:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'return' ( (lv_expression_2_0= ruleExpression ) ) )
            {
            // InternalSCTX.g:5518:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'return' ( (lv_expression_2_0= ruleExpression ) ) )
            // InternalSCTX.g:5519:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'return' ( (lv_expression_2_0= ruleExpression ) )
            {
            // InternalSCTX.g:5519:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop194:
            do {
                int alt194=2;
                int LA194_0 = input.LA(1);

                if ( (LA194_0==RULE_COMMENT_ANNOTATION||LA194_0==103) ) {
                    alt194=1;
                }


                switch (alt194) {
            	case 1 :
            	    // InternalSCTX.g:5520:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:5520:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:5521:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getReturnAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_145);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getReturnRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop194;
                }
            } while (true);

            otherlv_1=(Token)match(input,68,FollowSets000.FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getReturnAccess().getReturnKeyword_1());
              		
            }
            // InternalSCTX.g:5542:3: ( (lv_expression_2_0= ruleExpression ) )
            // InternalSCTX.g:5543:4: (lv_expression_2_0= ruleExpression )
            {
            // InternalSCTX.g:5543:4: (lv_expression_2_0= ruleExpression )
            // InternalSCTX.g:5544:5: lv_expression_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getReturnAccess().getExpressionExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_expression_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getReturnRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReturn"


    // $ANTLR start "entryRuleConditional"
    // InternalSCTX.g:5565:1: entryRuleConditional returns [EObject current=null] : iv_ruleConditional= ruleConditional EOF ;
    public final EObject entryRuleConditional() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConditional = null;


        try {
            // InternalSCTX.g:5565:52: (iv_ruleConditional= ruleConditional EOF )
            // InternalSCTX.g:5566:2: iv_ruleConditional= ruleConditional EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConditionalRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleConditional=ruleConditional();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConditional; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConditional"


    // $ANTLR start "ruleConditional"
    // InternalSCTX.g:5572:1: ruleConditional returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'if' ( ( (lv_expression_2_1= ruleBoolScheduleExpression | lv_expression_2_2= ruleAtomicExpression ) ) ) otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* otherlv_6= '}' ( ( (lv_else_7_0= ruleElseScope ) ) | ( (lv_semicolon_8_0= ';' ) ) )? ) ;
    public final EObject ruleConditional() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_6=null;
        Token lv_semicolon_8_0=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_expression_2_1 = null;

        EObject lv_expression_2_2 = null;

        EObject lv_declarations_4_0 = null;

        EObject lv_statements_5_0 = null;

        EObject lv_else_7_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:5578:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'if' ( ( (lv_expression_2_1= ruleBoolScheduleExpression | lv_expression_2_2= ruleAtomicExpression ) ) ) otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* otherlv_6= '}' ( ( (lv_else_7_0= ruleElseScope ) ) | ( (lv_semicolon_8_0= ';' ) ) )? ) )
            // InternalSCTX.g:5579:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'if' ( ( (lv_expression_2_1= ruleBoolScheduleExpression | lv_expression_2_2= ruleAtomicExpression ) ) ) otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* otherlv_6= '}' ( ( (lv_else_7_0= ruleElseScope ) ) | ( (lv_semicolon_8_0= ';' ) ) )? )
            {
            // InternalSCTX.g:5579:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'if' ( ( (lv_expression_2_1= ruleBoolScheduleExpression | lv_expression_2_2= ruleAtomicExpression ) ) ) otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* otherlv_6= '}' ( ( (lv_else_7_0= ruleElseScope ) ) | ( (lv_semicolon_8_0= ';' ) ) )? )
            // InternalSCTX.g:5580:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'if' ( ( (lv_expression_2_1= ruleBoolScheduleExpression | lv_expression_2_2= ruleAtomicExpression ) ) ) otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* otherlv_6= '}' ( ( (lv_else_7_0= ruleElseScope ) ) | ( (lv_semicolon_8_0= ';' ) ) )?
            {
            // InternalSCTX.g:5580:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop195:
            do {
                int alt195=2;
                int LA195_0 = input.LA(1);

                if ( (LA195_0==RULE_COMMENT_ANNOTATION||LA195_0==103) ) {
                    alt195=1;
                }


                switch (alt195) {
            	case 1 :
            	    // InternalSCTX.g:5581:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:5581:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:5582:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getConditionalAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_146);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getConditionalRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop195;
                }
            } while (true);

            otherlv_1=(Token)match(input,36,FollowSets000.FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getConditionalAccess().getIfKeyword_1());
              		
            }
            // InternalSCTX.g:5603:3: ( ( (lv_expression_2_1= ruleBoolScheduleExpression | lv_expression_2_2= ruleAtomicExpression ) ) )
            // InternalSCTX.g:5604:4: ( (lv_expression_2_1= ruleBoolScheduleExpression | lv_expression_2_2= ruleAtomicExpression ) )
            {
            // InternalSCTX.g:5604:4: ( (lv_expression_2_1= ruleBoolScheduleExpression | lv_expression_2_2= ruleAtomicExpression ) )
            // InternalSCTX.g:5605:5: (lv_expression_2_1= ruleBoolScheduleExpression | lv_expression_2_2= ruleAtomicExpression )
            {
            // InternalSCTX.g:5605:5: (lv_expression_2_1= ruleBoolScheduleExpression | lv_expression_2_2= ruleAtomicExpression )
            int alt196=2;
            alt196 = dfa196.predict(input);
            switch (alt196) {
                case 1 :
                    // InternalSCTX.g:5606:6: lv_expression_2_1= ruleBoolScheduleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConditionalAccess().getExpressionBoolScheduleExpressionParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_110);
                    lv_expression_2_1=ruleBoolScheduleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConditionalRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_2_1,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.BoolScheduleExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:5622:6: lv_expression_2_2= ruleAtomicExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConditionalAccess().getExpressionAtomicExpressionParserRuleCall_2_0_1());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_110);
                    lv_expression_2_2=ruleAtomicExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConditionalRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_2_2,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.AtomicExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;

            }


            }


            }

            otherlv_3=(Token)match(input,21,FollowSets000.FOLLOW_106); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getConditionalAccess().getLeftCurlyBracketKeyword_3());
              		
            }
            // InternalSCTX.g:5644:3: ( (lv_declarations_4_0= ruleDeclaration ) )*
            loop197:
            do {
                int alt197=2;
                alt197 = dfa197.predict(input);
                switch (alt197) {
            	case 1 :
            	    // InternalSCTX.g:5645:4: (lv_declarations_4_0= ruleDeclaration )
            	    {
            	    // InternalSCTX.g:5645:4: (lv_declarations_4_0= ruleDeclaration )
            	    // InternalSCTX.g:5646:5: lv_declarations_4_0= ruleDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getConditionalAccess().getDeclarationsDeclarationParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_106);
            	    lv_declarations_4_0=ruleDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getConditionalRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_4_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.Declaration");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop197;
                }
            } while (true);

            // InternalSCTX.g:5663:3: ( (lv_statements_5_0= ruleStatement ) )*
            loop198:
            do {
                int alt198=2;
                int LA198_0 = input.LA(1);

                if ( (LA198_0==RULE_ID||LA198_0==RULE_HOSTCODE||LA198_0==RULE_COMMENT_ANNOTATION||LA198_0==21||LA198_0==36||LA198_0==44||(LA198_0>=67 && LA198_0<=68)||LA198_0==70||LA198_0==76||(LA198_0>=80 && LA198_0<=81)||LA198_0==103) ) {
                    alt198=1;
                }


                switch (alt198) {
            	case 1 :
            	    // InternalSCTX.g:5664:4: (lv_statements_5_0= ruleStatement )
            	    {
            	    // InternalSCTX.g:5664:4: (lv_statements_5_0= ruleStatement )
            	    // InternalSCTX.g:5665:5: lv_statements_5_0= ruleStatement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getConditionalAccess().getStatementsStatementParserRuleCall_5_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_107);
            	    lv_statements_5_0=ruleStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getConditionalRule());
            	      					}
            	      					add(
            	      						current,
            	      						"statements",
            	      						lv_statements_5_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.Statement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop198;
                }
            } while (true);

            otherlv_6=(Token)match(input,22,FollowSets000.FOLLOW_147); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getConditionalAccess().getRightCurlyBracketKeyword_6());
              		
            }
            // InternalSCTX.g:5686:3: ( ( (lv_else_7_0= ruleElseScope ) ) | ( (lv_semicolon_8_0= ';' ) ) )?
            int alt199=3;
            alt199 = dfa199.predict(input);
            switch (alt199) {
                case 1 :
                    // InternalSCTX.g:5687:4: ( (lv_else_7_0= ruleElseScope ) )
                    {
                    // InternalSCTX.g:5687:4: ( (lv_else_7_0= ruleElseScope ) )
                    // InternalSCTX.g:5688:5: (lv_else_7_0= ruleElseScope )
                    {
                    // InternalSCTX.g:5688:5: (lv_else_7_0= ruleElseScope )
                    // InternalSCTX.g:5689:6: lv_else_7_0= ruleElseScope
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConditionalAccess().getElseElseScopeParserRuleCall_7_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_else_7_0=ruleElseScope();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConditionalRule());
                      						}
                      						set(
                      							current,
                      							"else",
                      							lv_else_7_0,
                      							"de.cau.cs.kieler.scl.SCL.ElseScope");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:5707:4: ( (lv_semicolon_8_0= ';' ) )
                    {
                    // InternalSCTX.g:5707:4: ( (lv_semicolon_8_0= ';' ) )
                    // InternalSCTX.g:5708:5: (lv_semicolon_8_0= ';' )
                    {
                    // InternalSCTX.g:5708:5: (lv_semicolon_8_0= ';' )
                    // InternalSCTX.g:5709:6: lv_semicolon_8_0= ';'
                    {
                    lv_semicolon_8_0=(Token)match(input,40,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_semicolon_8_0, grammarAccess.getConditionalAccess().getSemicolonSemicolonKeyword_7_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConditionalRule());
                      						}
                      						setWithLastConsumed(current, "semicolon", true, ";");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConditional"


    // $ANTLR start "entryRuleElseScope"
    // InternalSCTX.g:5726:1: entryRuleElseScope returns [EObject current=null] : iv_ruleElseScope= ruleElseScope EOF ;
    public final EObject entryRuleElseScope() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleElseScope = null;


        try {
            // InternalSCTX.g:5726:50: (iv_ruleElseScope= ruleElseScope EOF )
            // InternalSCTX.g:5727:2: iv_ruleElseScope= ruleElseScope EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElseScopeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleElseScope=ruleElseScope();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleElseScope; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleElseScope"


    // $ANTLR start "ruleElseScope"
    // InternalSCTX.g:5733:1: ruleElseScope returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'else' otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* otherlv_6= '}' ( (lv_semicolon_7_0= ';' ) )? ) ;
    public final EObject ruleElseScope() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_6=null;
        Token lv_semicolon_7_0=null;
        EObject lv_annotations_1_0 = null;

        EObject lv_declarations_4_0 = null;

        EObject lv_statements_5_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:5739:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'else' otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* otherlv_6= '}' ( (lv_semicolon_7_0= ';' ) )? ) )
            // InternalSCTX.g:5740:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'else' otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* otherlv_6= '}' ( (lv_semicolon_7_0= ';' ) )? )
            {
            // InternalSCTX.g:5740:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'else' otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* otherlv_6= '}' ( (lv_semicolon_7_0= ';' ) )? )
            // InternalSCTX.g:5741:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'else' otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* otherlv_6= '}' ( (lv_semicolon_7_0= ';' ) )?
            {
            // InternalSCTX.g:5741:3: ()
            // InternalSCTX.g:5742:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getElseScopeAccess().getElseScopeAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:5751:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop200:
            do {
                int alt200=2;
                int LA200_0 = input.LA(1);

                if ( (LA200_0==RULE_COMMENT_ANNOTATION||LA200_0==103) ) {
                    alt200=1;
                }


                switch (alt200) {
            	case 1 :
            	    // InternalSCTX.g:5752:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:5752:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCTX.g:5753:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getElseScopeAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_148);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getElseScopeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop200;
                }
            } while (true);

            otherlv_2=(Token)match(input,69,FollowSets000.FOLLOW_110); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getElseScopeAccess().getElseKeyword_2());
              		
            }
            otherlv_3=(Token)match(input,21,FollowSets000.FOLLOW_106); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getElseScopeAccess().getLeftCurlyBracketKeyword_3());
              		
            }
            // InternalSCTX.g:5778:3: ( (lv_declarations_4_0= ruleDeclaration ) )*
            loop201:
            do {
                int alt201=2;
                alt201 = dfa201.predict(input);
                switch (alt201) {
            	case 1 :
            	    // InternalSCTX.g:5779:4: (lv_declarations_4_0= ruleDeclaration )
            	    {
            	    // InternalSCTX.g:5779:4: (lv_declarations_4_0= ruleDeclaration )
            	    // InternalSCTX.g:5780:5: lv_declarations_4_0= ruleDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getElseScopeAccess().getDeclarationsDeclarationParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_106);
            	    lv_declarations_4_0=ruleDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getElseScopeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_4_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.Declaration");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop201;
                }
            } while (true);

            // InternalSCTX.g:5797:3: ( (lv_statements_5_0= ruleStatement ) )*
            loop202:
            do {
                int alt202=2;
                int LA202_0 = input.LA(1);

                if ( (LA202_0==RULE_ID||LA202_0==RULE_HOSTCODE||LA202_0==RULE_COMMENT_ANNOTATION||LA202_0==21||LA202_0==36||LA202_0==44||(LA202_0>=67 && LA202_0<=68)||LA202_0==70||LA202_0==76||(LA202_0>=80 && LA202_0<=81)||LA202_0==103) ) {
                    alt202=1;
                }


                switch (alt202) {
            	case 1 :
            	    // InternalSCTX.g:5798:4: (lv_statements_5_0= ruleStatement )
            	    {
            	    // InternalSCTX.g:5798:4: (lv_statements_5_0= ruleStatement )
            	    // InternalSCTX.g:5799:5: lv_statements_5_0= ruleStatement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getElseScopeAccess().getStatementsStatementParserRuleCall_5_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_107);
            	    lv_statements_5_0=ruleStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getElseScopeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"statements",
            	      						lv_statements_5_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.Statement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop202;
                }
            } while (true);

            otherlv_6=(Token)match(input,22,FollowSets000.FOLLOW_140); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getElseScopeAccess().getRightCurlyBracketKeyword_6());
              		
            }
            // InternalSCTX.g:5820:3: ( (lv_semicolon_7_0= ';' ) )?
            int alt203=2;
            int LA203_0 = input.LA(1);

            if ( (LA203_0==40) ) {
                alt203=1;
            }
            switch (alt203) {
                case 1 :
                    // InternalSCTX.g:5821:4: (lv_semicolon_7_0= ';' )
                    {
                    // InternalSCTX.g:5821:4: (lv_semicolon_7_0= ';' )
                    // InternalSCTX.g:5822:5: lv_semicolon_7_0= ';'
                    {
                    lv_semicolon_7_0=(Token)match(input,40,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_semicolon_7_0, grammarAccess.getElseScopeAccess().getSemicolonSemicolonKeyword_7_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElseScopeRule());
                      					}
                      					setWithLastConsumed(current, "semicolon", true, ";");
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleElseScope"


    // $ANTLR start "entryRuleLegacyElseScope"
    // InternalSCTX.g:5838:1: entryRuleLegacyElseScope returns [EObject current=null] : iv_ruleLegacyElseScope= ruleLegacyElseScope EOF ;
    public final EObject entryRuleLegacyElseScope() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLegacyElseScope = null;


        try {
            // InternalSCTX.g:5838:56: (iv_ruleLegacyElseScope= ruleLegacyElseScope EOF )
            // InternalSCTX.g:5839:2: iv_ruleLegacyElseScope= ruleLegacyElseScope EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLegacyElseScopeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLegacyElseScope=ruleLegacyElseScope();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLegacyElseScope; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLegacyElseScope"


    // $ANTLR start "ruleLegacyElseScope"
    // InternalSCTX.g:5845:1: ruleLegacyElseScope returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'else' ( (lv_statements_3_0= ruleStatement ) )* ) ;
    public final EObject ruleLegacyElseScope() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_annotations_1_0 = null;

        EObject lv_statements_3_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:5851:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'else' ( (lv_statements_3_0= ruleStatement ) )* ) )
            // InternalSCTX.g:5852:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'else' ( (lv_statements_3_0= ruleStatement ) )* )
            {
            // InternalSCTX.g:5852:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'else' ( (lv_statements_3_0= ruleStatement ) )* )
            // InternalSCTX.g:5853:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'else' ( (lv_statements_3_0= ruleStatement ) )*
            {
            // InternalSCTX.g:5853:3: ()
            // InternalSCTX.g:5854:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getLegacyElseScopeAccess().getElseScopeAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:5863:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop204:
            do {
                int alt204=2;
                int LA204_0 = input.LA(1);

                if ( (LA204_0==RULE_COMMENT_ANNOTATION||LA204_0==103) ) {
                    alt204=1;
                }


                switch (alt204) {
            	case 1 :
            	    // InternalSCTX.g:5864:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:5864:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCTX.g:5865:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getLegacyElseScopeAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_148);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getLegacyElseScopeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop204;
                }
            } while (true);

            otherlv_2=(Token)match(input,69,FollowSets000.FOLLOW_138); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getLegacyElseScopeAccess().getElseKeyword_2());
              		
            }
            // InternalSCTX.g:5886:3: ( (lv_statements_3_0= ruleStatement ) )*
            loop205:
            do {
                int alt205=2;
                int LA205_0 = input.LA(1);

                if ( (LA205_0==RULE_ID||LA205_0==RULE_HOSTCODE||LA205_0==RULE_COMMENT_ANNOTATION||LA205_0==21||LA205_0==36||LA205_0==44||(LA205_0>=67 && LA205_0<=68)||LA205_0==70||LA205_0==76||(LA205_0>=80 && LA205_0<=81)||LA205_0==103) ) {
                    alt205=1;
                }


                switch (alt205) {
            	case 1 :
            	    // InternalSCTX.g:5887:4: (lv_statements_3_0= ruleStatement )
            	    {
            	    // InternalSCTX.g:5887:4: (lv_statements_3_0= ruleStatement )
            	    // InternalSCTX.g:5888:5: lv_statements_3_0= ruleStatement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getLegacyElseScopeAccess().getStatementsStatementParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_138);
            	    lv_statements_3_0=ruleStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getLegacyElseScopeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"statements",
            	      						lv_statements_3_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.Statement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop205;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLegacyElseScope"


    // $ANTLR start "entryRuleThread"
    // InternalSCTX.g:5909:1: entryRuleThread returns [EObject current=null] : iv_ruleThread= ruleThread EOF ;
    public final EObject entryRuleThread() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleThread = null;


        try {
            // InternalSCTX.g:5909:47: (iv_ruleThread= ruleThread EOF )
            // InternalSCTX.g:5910:2: iv_ruleThread= ruleThread EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getThreadRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleThread=ruleThread();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleThread; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleThread"


    // $ANTLR start "ruleThread"
    // InternalSCTX.g:5916:1: ruleThread returns [EObject current=null] : ( () ( ( ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' ) | ( (lv_statements_6_0= ruleStatement ) )* ) ) ;
    public final EObject ruleThread() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_5=null;
        EObject lv_annotations_1_0 = null;

        EObject lv_declarations_3_0 = null;

        EObject lv_statements_4_0 = null;

        EObject lv_statements_6_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:5922:2: ( ( () ( ( ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' ) | ( (lv_statements_6_0= ruleStatement ) )* ) ) )
            // InternalSCTX.g:5923:2: ( () ( ( ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' ) | ( (lv_statements_6_0= ruleStatement ) )* ) )
            {
            // InternalSCTX.g:5923:2: ( () ( ( ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' ) | ( (lv_statements_6_0= ruleStatement ) )* ) )
            // InternalSCTX.g:5924:3: () ( ( ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' ) | ( (lv_statements_6_0= ruleStatement ) )* )
            {
            // InternalSCTX.g:5924:3: ()
            // InternalSCTX.g:5925:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getThreadAccess().getThreadAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:5934:3: ( ( ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' ) | ( (lv_statements_6_0= ruleStatement ) )* )
            int alt210=2;
            alt210 = dfa210.predict(input);
            switch (alt210) {
                case 1 :
                    // InternalSCTX.g:5935:4: ( ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' )
                    {
                    // InternalSCTX.g:5935:4: ( ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' )
                    // InternalSCTX.g:5936:5: ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}'
                    {
                    // InternalSCTX.g:5936:5: ( (lv_annotations_1_0= ruleAnnotation ) )*
                    loop206:
                    do {
                        int alt206=2;
                        int LA206_0 = input.LA(1);

                        if ( (LA206_0==RULE_COMMENT_ANNOTATION||LA206_0==103) ) {
                            alt206=1;
                        }


                        switch (alt206) {
                    	case 1 :
                    	    // InternalSCTX.g:5937:6: (lv_annotations_1_0= ruleAnnotation )
                    	    {
                    	    // InternalSCTX.g:5937:6: (lv_annotations_1_0= ruleAnnotation )
                    	    // InternalSCTX.g:5938:7: lv_annotations_1_0= ruleAnnotation
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getThreadAccess().getAnnotationsAnnotationParserRuleCall_1_0_0_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_105);
                    	    lv_annotations_1_0=ruleAnnotation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getThreadRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"annotations",
                    	      								lv_annotations_1_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop206;
                        }
                    } while (true);

                    otherlv_2=(Token)match(input,21,FollowSets000.FOLLOW_106); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getThreadAccess().getLeftCurlyBracketKeyword_1_0_1());
                      				
                    }
                    // InternalSCTX.g:5959:5: ( (lv_declarations_3_0= ruleDeclaration ) )*
                    loop207:
                    do {
                        int alt207=2;
                        alt207 = dfa207.predict(input);
                        switch (alt207) {
                    	case 1 :
                    	    // InternalSCTX.g:5960:6: (lv_declarations_3_0= ruleDeclaration )
                    	    {
                    	    // InternalSCTX.g:5960:6: (lv_declarations_3_0= ruleDeclaration )
                    	    // InternalSCTX.g:5961:7: lv_declarations_3_0= ruleDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getThreadAccess().getDeclarationsDeclarationParserRuleCall_1_0_2_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_106);
                    	    lv_declarations_3_0=ruleDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getThreadRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"declarations",
                    	      								lv_declarations_3_0,
                    	      								"de.cau.cs.kieler.sccharts.text.SCTX.Declaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop207;
                        }
                    } while (true);

                    // InternalSCTX.g:5978:5: ( (lv_statements_4_0= ruleStatement ) )*
                    loop208:
                    do {
                        int alt208=2;
                        int LA208_0 = input.LA(1);

                        if ( (LA208_0==RULE_ID||LA208_0==RULE_HOSTCODE||LA208_0==RULE_COMMENT_ANNOTATION||LA208_0==21||LA208_0==36||LA208_0==44||(LA208_0>=67 && LA208_0<=68)||LA208_0==70||LA208_0==76||(LA208_0>=80 && LA208_0<=81)||LA208_0==103) ) {
                            alt208=1;
                        }


                        switch (alt208) {
                    	case 1 :
                    	    // InternalSCTX.g:5979:6: (lv_statements_4_0= ruleStatement )
                    	    {
                    	    // InternalSCTX.g:5979:6: (lv_statements_4_0= ruleStatement )
                    	    // InternalSCTX.g:5980:7: lv_statements_4_0= ruleStatement
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getThreadAccess().getStatementsStatementParserRuleCall_1_0_3_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_107);
                    	    lv_statements_4_0=ruleStatement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getThreadRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"statements",
                    	      								lv_statements_4_0,
                    	      								"de.cau.cs.kieler.sccharts.text.SCTX.Statement");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop208;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,22,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getThreadAccess().getRightCurlyBracketKeyword_1_0_4());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:6003:4: ( (lv_statements_6_0= ruleStatement ) )*
                    {
                    // InternalSCTX.g:6003:4: ( (lv_statements_6_0= ruleStatement ) )*
                    loop209:
                    do {
                        int alt209=2;
                        int LA209_0 = input.LA(1);

                        if ( (LA209_0==RULE_ID||LA209_0==RULE_HOSTCODE||LA209_0==RULE_COMMENT_ANNOTATION||LA209_0==21||LA209_0==36||LA209_0==44||(LA209_0>=67 && LA209_0<=68)||LA209_0==70||LA209_0==76||(LA209_0>=80 && LA209_0<=81)||LA209_0==103) ) {
                            alt209=1;
                        }


                        switch (alt209) {
                    	case 1 :
                    	    // InternalSCTX.g:6004:5: (lv_statements_6_0= ruleStatement )
                    	    {
                    	    // InternalSCTX.g:6004:5: (lv_statements_6_0= ruleStatement )
                    	    // InternalSCTX.g:6005:6: lv_statements_6_0= ruleStatement
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getThreadAccess().getStatementsStatementParserRuleCall_1_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_138);
                    	    lv_statements_6_0=ruleStatement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getThreadRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"statements",
                    	      							lv_statements_6_0,
                    	      							"de.cau.cs.kieler.sccharts.text.SCTX.Statement");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop209;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleThread"


    // $ANTLR start "entryRuleScopeStatement"
    // InternalSCTX.g:6027:1: entryRuleScopeStatement returns [EObject current=null] : iv_ruleScopeStatement= ruleScopeStatement EOF ;
    public final EObject entryRuleScopeStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScopeStatement = null;


        try {
            // InternalSCTX.g:6027:55: (iv_ruleScopeStatement= ruleScopeStatement EOF )
            // InternalSCTX.g:6028:2: iv_ruleScopeStatement= ruleScopeStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScopeStatementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScopeStatement=ruleScopeStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScopeStatement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScopeStatement"


    // $ANTLR start "ruleScopeStatement"
    // InternalSCTX.g:6034:1: ruleScopeStatement returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' ) ;
    public final EObject ruleScopeStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_5=null;
        EObject lv_annotations_1_0 = null;

        EObject lv_declarations_3_0 = null;

        EObject lv_statements_4_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:6040:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' ) )
            // InternalSCTX.g:6041:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' )
            {
            // InternalSCTX.g:6041:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' )
            // InternalSCTX.g:6042:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}'
            {
            // InternalSCTX.g:6042:3: ()
            // InternalSCTX.g:6043:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getScopeStatementAccess().getScopeStatementAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:6052:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop211:
            do {
                int alt211=2;
                int LA211_0 = input.LA(1);

                if ( (LA211_0==RULE_COMMENT_ANNOTATION||LA211_0==103) ) {
                    alt211=1;
                }


                switch (alt211) {
            	case 1 :
            	    // InternalSCTX.g:6053:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:6053:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCTX.g:6054:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getScopeStatementAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_105);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getScopeStatementRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop211;
                }
            } while (true);

            otherlv_2=(Token)match(input,21,FollowSets000.FOLLOW_106); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getScopeStatementAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalSCTX.g:6075:3: ( (lv_declarations_3_0= ruleDeclaration ) )*
            loop212:
            do {
                int alt212=2;
                alt212 = dfa212.predict(input);
                switch (alt212) {
            	case 1 :
            	    // InternalSCTX.g:6076:4: (lv_declarations_3_0= ruleDeclaration )
            	    {
            	    // InternalSCTX.g:6076:4: (lv_declarations_3_0= ruleDeclaration )
            	    // InternalSCTX.g:6077:5: lv_declarations_3_0= ruleDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getScopeStatementAccess().getDeclarationsDeclarationParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_106);
            	    lv_declarations_3_0=ruleDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getScopeStatementRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_3_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.Declaration");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop212;
                }
            } while (true);

            // InternalSCTX.g:6094:3: ( (lv_statements_4_0= ruleStatement ) )*
            loop213:
            do {
                int alt213=2;
                int LA213_0 = input.LA(1);

                if ( (LA213_0==RULE_ID||LA213_0==RULE_HOSTCODE||LA213_0==RULE_COMMENT_ANNOTATION||LA213_0==21||LA213_0==36||LA213_0==44||(LA213_0>=67 && LA213_0<=68)||LA213_0==70||LA213_0==76||(LA213_0>=80 && LA213_0<=81)||LA213_0==103) ) {
                    alt213=1;
                }


                switch (alt213) {
            	case 1 :
            	    // InternalSCTX.g:6095:4: (lv_statements_4_0= ruleStatement )
            	    {
            	    // InternalSCTX.g:6095:4: (lv_statements_4_0= ruleStatement )
            	    // InternalSCTX.g:6096:5: lv_statements_4_0= ruleStatement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getScopeStatementAccess().getStatementsStatementParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_107);
            	    lv_statements_4_0=ruleStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getScopeStatementRule());
            	      					}
            	      					add(
            	      						current,
            	      						"statements",
            	      						lv_statements_4_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.Statement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop213;
                }
            } while (true);

            otherlv_5=(Token)match(input,22,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getScopeStatementAccess().getRightCurlyBracketKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScopeStatement"


    // $ANTLR start "entryRuleForLoop"
    // InternalSCTX.g:6121:1: entryRuleForLoop returns [EObject current=null] : iv_ruleForLoop= ruleForLoop EOF ;
    public final EObject entryRuleForLoop() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleForLoop = null;


        try {
            // InternalSCTX.g:6121:48: (iv_ruleForLoop= ruleForLoop EOF )
            // InternalSCTX.g:6122:2: iv_ruleForLoop= ruleForLoop EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getForLoopRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleForLoop=ruleForLoop();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleForLoop; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleForLoop"


    // $ANTLR start "ruleForLoop"
    // InternalSCTX.g:6128:1: ruleForLoop returns [EObject current=null] : (otherlv_0= 'for' otherlv_1= '(' ( ( (lv_initializationDeclaration_2_0= ruleLoopDeclaration ) ) | ( (lv_initialization_3_0= ruleEffectOrAssignment ) ) )? otherlv_4= ';' ( (lv_condition_5_0= ruleBoolExpression ) ) otherlv_6= ';' ( (lv_afterthought_7_0= ruleEffectOrAssignment ) )? otherlv_8= ')' otherlv_9= '{' ( (lv_declarations_10_0= ruleDeclaration ) )* ( (lv_statements_11_0= ruleStatement ) )* otherlv_12= '}' ( (lv_semicolon_13_0= ';' ) )? ) ;
    public final EObject ruleForLoop() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_12=null;
        Token lv_semicolon_13_0=null;
        EObject lv_initializationDeclaration_2_0 = null;

        EObject lv_initialization_3_0 = null;

        EObject lv_condition_5_0 = null;

        EObject lv_afterthought_7_0 = null;

        EObject lv_declarations_10_0 = null;

        EObject lv_statements_11_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:6134:2: ( (otherlv_0= 'for' otherlv_1= '(' ( ( (lv_initializationDeclaration_2_0= ruleLoopDeclaration ) ) | ( (lv_initialization_3_0= ruleEffectOrAssignment ) ) )? otherlv_4= ';' ( (lv_condition_5_0= ruleBoolExpression ) ) otherlv_6= ';' ( (lv_afterthought_7_0= ruleEffectOrAssignment ) )? otherlv_8= ')' otherlv_9= '{' ( (lv_declarations_10_0= ruleDeclaration ) )* ( (lv_statements_11_0= ruleStatement ) )* otherlv_12= '}' ( (lv_semicolon_13_0= ';' ) )? ) )
            // InternalSCTX.g:6135:2: (otherlv_0= 'for' otherlv_1= '(' ( ( (lv_initializationDeclaration_2_0= ruleLoopDeclaration ) ) | ( (lv_initialization_3_0= ruleEffectOrAssignment ) ) )? otherlv_4= ';' ( (lv_condition_5_0= ruleBoolExpression ) ) otherlv_6= ';' ( (lv_afterthought_7_0= ruleEffectOrAssignment ) )? otherlv_8= ')' otherlv_9= '{' ( (lv_declarations_10_0= ruleDeclaration ) )* ( (lv_statements_11_0= ruleStatement ) )* otherlv_12= '}' ( (lv_semicolon_13_0= ';' ) )? )
            {
            // InternalSCTX.g:6135:2: (otherlv_0= 'for' otherlv_1= '(' ( ( (lv_initializationDeclaration_2_0= ruleLoopDeclaration ) ) | ( (lv_initialization_3_0= ruleEffectOrAssignment ) ) )? otherlv_4= ';' ( (lv_condition_5_0= ruleBoolExpression ) ) otherlv_6= ';' ( (lv_afterthought_7_0= ruleEffectOrAssignment ) )? otherlv_8= ')' otherlv_9= '{' ( (lv_declarations_10_0= ruleDeclaration ) )* ( (lv_statements_11_0= ruleStatement ) )* otherlv_12= '}' ( (lv_semicolon_13_0= ';' ) )? )
            // InternalSCTX.g:6136:3: otherlv_0= 'for' otherlv_1= '(' ( ( (lv_initializationDeclaration_2_0= ruleLoopDeclaration ) ) | ( (lv_initialization_3_0= ruleEffectOrAssignment ) ) )? otherlv_4= ';' ( (lv_condition_5_0= ruleBoolExpression ) ) otherlv_6= ';' ( (lv_afterthought_7_0= ruleEffectOrAssignment ) )? otherlv_8= ')' otherlv_9= '{' ( (lv_declarations_10_0= ruleDeclaration ) )* ( (lv_statements_11_0= ruleStatement ) )* otherlv_12= '}' ( (lv_semicolon_13_0= ';' ) )?
            {
            otherlv_0=(Token)match(input,44,FollowSets000.FOLLOW_149); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getForLoopAccess().getForKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,31,FollowSets000.FOLLOW_150); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getForLoopAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalSCTX.g:6144:3: ( ( (lv_initializationDeclaration_2_0= ruleLoopDeclaration ) ) | ( (lv_initialization_3_0= ruleEffectOrAssignment ) ) )?
            int alt214=3;
            alt214 = dfa214.predict(input);
            switch (alt214) {
                case 1 :
                    // InternalSCTX.g:6145:4: ( (lv_initializationDeclaration_2_0= ruleLoopDeclaration ) )
                    {
                    // InternalSCTX.g:6145:4: ( (lv_initializationDeclaration_2_0= ruleLoopDeclaration ) )
                    // InternalSCTX.g:6146:5: (lv_initializationDeclaration_2_0= ruleLoopDeclaration )
                    {
                    // InternalSCTX.g:6146:5: (lv_initializationDeclaration_2_0= ruleLoopDeclaration )
                    // InternalSCTX.g:6147:6: lv_initializationDeclaration_2_0= ruleLoopDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getForLoopAccess().getInitializationDeclarationLoopDeclarationParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_151);
                    lv_initializationDeclaration_2_0=ruleLoopDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getForLoopRule());
                      						}
                      						set(
                      							current,
                      							"initializationDeclaration",
                      							lv_initializationDeclaration_2_0,
                      							"de.cau.cs.kieler.scl.SCL.LoopDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:6165:4: ( (lv_initialization_3_0= ruleEffectOrAssignment ) )
                    {
                    // InternalSCTX.g:6165:4: ( (lv_initialization_3_0= ruleEffectOrAssignment ) )
                    // InternalSCTX.g:6166:5: (lv_initialization_3_0= ruleEffectOrAssignment )
                    {
                    // InternalSCTX.g:6166:5: (lv_initialization_3_0= ruleEffectOrAssignment )
                    // InternalSCTX.g:6167:6: lv_initialization_3_0= ruleEffectOrAssignment
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getForLoopAccess().getInitializationEffectOrAssignmentParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_151);
                    lv_initialization_3_0=ruleEffectOrAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getForLoopRule());
                      						}
                      						set(
                      							current,
                      							"initialization",
                      							lv_initialization_3_0,
                      							"de.cau.cs.kieler.scl.SCL.EffectOrAssignment");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,40,FollowSets000.FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getForLoopAccess().getSemicolonKeyword_3());
              		
            }
            // InternalSCTX.g:6189:3: ( (lv_condition_5_0= ruleBoolExpression ) )
            // InternalSCTX.g:6190:4: (lv_condition_5_0= ruleBoolExpression )
            {
            // InternalSCTX.g:6190:4: (lv_condition_5_0= ruleBoolExpression )
            // InternalSCTX.g:6191:5: lv_condition_5_0= ruleBoolExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getForLoopAccess().getConditionBoolExpressionParserRuleCall_4_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_151);
            lv_condition_5_0=ruleBoolExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getForLoopRule());
              					}
              					set(
              						current,
              						"condition",
              						lv_condition_5_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.BoolExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_6=(Token)match(input,40,FollowSets000.FOLLOW_152); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getForLoopAccess().getSemicolonKeyword_5());
              		
            }
            // InternalSCTX.g:6212:3: ( (lv_afterthought_7_0= ruleEffectOrAssignment ) )?
            int alt215=2;
            int LA215_0 = input.LA(1);

            if ( ((LA215_0>=RULE_STRING && LA215_0<=RULE_COMMENT_ANNOTATION)||LA215_0==21||LA215_0==31||LA215_0==76||LA215_0==81||LA215_0==91||LA215_0==99||LA215_0==103||(LA215_0>=145 && LA215_0<=148)) ) {
                alt215=1;
            }
            switch (alt215) {
                case 1 :
                    // InternalSCTX.g:6213:4: (lv_afterthought_7_0= ruleEffectOrAssignment )
                    {
                    // InternalSCTX.g:6213:4: (lv_afterthought_7_0= ruleEffectOrAssignment )
                    // InternalSCTX.g:6214:5: lv_afterthought_7_0= ruleEffectOrAssignment
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getForLoopAccess().getAfterthoughtEffectOrAssignmentParserRuleCall_6_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_32);
                    lv_afterthought_7_0=ruleEffectOrAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getForLoopRule());
                      					}
                      					set(
                      						current,
                      						"afterthought",
                      						lv_afterthought_7_0,
                      						"de.cau.cs.kieler.scl.SCL.EffectOrAssignment");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_8=(Token)match(input,32,FollowSets000.FOLLOW_110); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getForLoopAccess().getRightParenthesisKeyword_7());
              		
            }
            otherlv_9=(Token)match(input,21,FollowSets000.FOLLOW_106); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_9, grammarAccess.getForLoopAccess().getLeftCurlyBracketKeyword_8());
              		
            }
            // InternalSCTX.g:6239:3: ( (lv_declarations_10_0= ruleDeclaration ) )*
            loop216:
            do {
                int alt216=2;
                alt216 = dfa216.predict(input);
                switch (alt216) {
            	case 1 :
            	    // InternalSCTX.g:6240:4: (lv_declarations_10_0= ruleDeclaration )
            	    {
            	    // InternalSCTX.g:6240:4: (lv_declarations_10_0= ruleDeclaration )
            	    // InternalSCTX.g:6241:5: lv_declarations_10_0= ruleDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getForLoopAccess().getDeclarationsDeclarationParserRuleCall_9_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_106);
            	    lv_declarations_10_0=ruleDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getForLoopRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_10_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.Declaration");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop216;
                }
            } while (true);

            // InternalSCTX.g:6258:3: ( (lv_statements_11_0= ruleStatement ) )*
            loop217:
            do {
                int alt217=2;
                int LA217_0 = input.LA(1);

                if ( (LA217_0==RULE_ID||LA217_0==RULE_HOSTCODE||LA217_0==RULE_COMMENT_ANNOTATION||LA217_0==21||LA217_0==36||LA217_0==44||(LA217_0>=67 && LA217_0<=68)||LA217_0==70||LA217_0==76||(LA217_0>=80 && LA217_0<=81)||LA217_0==103) ) {
                    alt217=1;
                }


                switch (alt217) {
            	case 1 :
            	    // InternalSCTX.g:6259:4: (lv_statements_11_0= ruleStatement )
            	    {
            	    // InternalSCTX.g:6259:4: (lv_statements_11_0= ruleStatement )
            	    // InternalSCTX.g:6260:5: lv_statements_11_0= ruleStatement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getForLoopAccess().getStatementsStatementParserRuleCall_10_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_107);
            	    lv_statements_11_0=ruleStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getForLoopRule());
            	      					}
            	      					add(
            	      						current,
            	      						"statements",
            	      						lv_statements_11_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.Statement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop217;
                }
            } while (true);

            otherlv_12=(Token)match(input,22,FollowSets000.FOLLOW_140); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_12, grammarAccess.getForLoopAccess().getRightCurlyBracketKeyword_11());
              		
            }
            // InternalSCTX.g:6281:3: ( (lv_semicolon_13_0= ';' ) )?
            int alt218=2;
            int LA218_0 = input.LA(1);

            if ( (LA218_0==40) ) {
                alt218=1;
            }
            switch (alt218) {
                case 1 :
                    // InternalSCTX.g:6282:4: (lv_semicolon_13_0= ';' )
                    {
                    // InternalSCTX.g:6282:4: (lv_semicolon_13_0= ';' )
                    // InternalSCTX.g:6283:5: lv_semicolon_13_0= ';'
                    {
                    lv_semicolon_13_0=(Token)match(input,40,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_semicolon_13_0, grammarAccess.getForLoopAccess().getSemicolonSemicolonKeyword_12_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getForLoopRule());
                      					}
                      					setWithLastConsumed(current, "semicolon", true, ";");
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleForLoop"


    // $ANTLR start "entryRuleLoopDeclaration"
    // InternalSCTX.g:6299:1: entryRuleLoopDeclaration returns [EObject current=null] : iv_ruleLoopDeclaration= ruleLoopDeclaration EOF ;
    public final EObject entryRuleLoopDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLoopDeclaration = null;


        try {
            // InternalSCTX.g:6299:56: (iv_ruleLoopDeclaration= ruleLoopDeclaration EOF )
            // InternalSCTX.g:6300:2: iv_ruleLoopDeclaration= ruleLoopDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLoopDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLoopDeclaration=ruleLoopDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLoopDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLoopDeclaration"


    // $ANTLR start "ruleLoopDeclaration"
    // InternalSCTX.g:6306:1: ruleLoopDeclaration returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( (lv_type_1_0= ruleValueType ) ) | ( ( (lv_type_2_0= ruleHostType ) ) ( (lv_hostType_3_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_4_0= ruleValuedObject ) ) ) ;
    public final EObject ruleLoopDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_hostType_3_0=null;
        EObject lv_annotations_0_0 = null;

        Enumerator lv_type_1_0 = null;

        Enumerator lv_type_2_0 = null;

        EObject lv_valuedObjects_4_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:6312:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( (lv_type_1_0= ruleValueType ) ) | ( ( (lv_type_2_0= ruleHostType ) ) ( (lv_hostType_3_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_4_0= ruleValuedObject ) ) ) )
            // InternalSCTX.g:6313:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( (lv_type_1_0= ruleValueType ) ) | ( ( (lv_type_2_0= ruleHostType ) ) ( (lv_hostType_3_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_4_0= ruleValuedObject ) ) )
            {
            // InternalSCTX.g:6313:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( (lv_type_1_0= ruleValueType ) ) | ( ( (lv_type_2_0= ruleHostType ) ) ( (lv_hostType_3_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_4_0= ruleValuedObject ) ) )
            // InternalSCTX.g:6314:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( (lv_type_1_0= ruleValueType ) ) | ( ( (lv_type_2_0= ruleHostType ) ) ( (lv_hostType_3_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_4_0= ruleValuedObject ) )
            {
            // InternalSCTX.g:6314:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop219:
            do {
                int alt219=2;
                int LA219_0 = input.LA(1);

                if ( (LA219_0==RULE_COMMENT_ANNOTATION||LA219_0==103) ) {
                    alt219=1;
                }


                switch (alt219) {
            	case 1 :
            	    // InternalSCTX.g:6315:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:6315:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:6316:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getLoopDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_131);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getLoopDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop219;
                }
            } while (true);

            // InternalSCTX.g:6333:3: ( ( (lv_type_1_0= ruleValueType ) ) | ( ( (lv_type_2_0= ruleHostType ) ) ( (lv_hostType_3_0= RULE_STRING ) ) ) )
            int alt220=2;
            int LA220_0 = input.LA(1);

            if ( ((LA220_0>=116 && LA220_0<=121)) ) {
                alt220=1;
            }
            else if ( (LA220_0==61) ) {
                alt220=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 220, 0, input);

                throw nvae;
            }
            switch (alt220) {
                case 1 :
                    // InternalSCTX.g:6334:4: ( (lv_type_1_0= ruleValueType ) )
                    {
                    // InternalSCTX.g:6334:4: ( (lv_type_1_0= ruleValueType ) )
                    // InternalSCTX.g:6335:5: (lv_type_1_0= ruleValueType )
                    {
                    // InternalSCTX.g:6335:5: (lv_type_1_0= ruleValueType )
                    // InternalSCTX.g:6336:6: lv_type_1_0= ruleValueType
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLoopDeclarationAccess().getTypeValueTypeEnumRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_116);
                    lv_type_1_0=ruleValueType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLoopDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"type",
                      							lv_type_1_0,
                      							"de.cau.cs.kieler.sccharts.text.SCTX.ValueType");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:6354:4: ( ( (lv_type_2_0= ruleHostType ) ) ( (lv_hostType_3_0= RULE_STRING ) ) )
                    {
                    // InternalSCTX.g:6354:4: ( ( (lv_type_2_0= ruleHostType ) ) ( (lv_hostType_3_0= RULE_STRING ) ) )
                    // InternalSCTX.g:6355:5: ( (lv_type_2_0= ruleHostType ) ) ( (lv_hostType_3_0= RULE_STRING ) )
                    {
                    // InternalSCTX.g:6355:5: ( (lv_type_2_0= ruleHostType ) )
                    // InternalSCTX.g:6356:6: (lv_type_2_0= ruleHostType )
                    {
                    // InternalSCTX.g:6356:6: (lv_type_2_0= ruleHostType )
                    // InternalSCTX.g:6357:7: lv_type_2_0= ruleHostType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLoopDeclarationAccess().getTypeHostTypeEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_47);
                    lv_type_2_0=ruleHostType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLoopDeclarationRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.HostType");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:6374:5: ( (lv_hostType_3_0= RULE_STRING ) )
                    // InternalSCTX.g:6375:6: (lv_hostType_3_0= RULE_STRING )
                    {
                    // InternalSCTX.g:6375:6: (lv_hostType_3_0= RULE_STRING )
                    // InternalSCTX.g:6376:7: lv_hostType_3_0= RULE_STRING
                    {
                    lv_hostType_3_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_116); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_hostType_3_0, grammarAccess.getLoopDeclarationAccess().getHostTypeSTRINGTerminalRuleCall_1_1_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getLoopDeclarationRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"hostType",
                      								lv_hostType_3_0,
                      								"de.cau.cs.kieler.annotations.Annotations.STRING");
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:6394:3: ( (lv_valuedObjects_4_0= ruleValuedObject ) )
            // InternalSCTX.g:6395:4: (lv_valuedObjects_4_0= ruleValuedObject )
            {
            // InternalSCTX.g:6395:4: (lv_valuedObjects_4_0= ruleValuedObject )
            // InternalSCTX.g:6396:5: lv_valuedObjects_4_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLoopDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_valuedObjects_4_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLoopDeclarationRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_4_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLoopDeclaration"


    // $ANTLR start "entryRuleEffectOrAssignment"
    // InternalSCTX.g:6417:1: entryRuleEffectOrAssignment returns [EObject current=null] : iv_ruleEffectOrAssignment= ruleEffectOrAssignment EOF ;
    public final EObject entryRuleEffectOrAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEffectOrAssignment = null;


        try {
            // InternalSCTX.g:6417:59: (iv_ruleEffectOrAssignment= ruleEffectOrAssignment EOF )
            // InternalSCTX.g:6418:2: iv_ruleEffectOrAssignment= ruleEffectOrAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEffectOrAssignmentRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEffectOrAssignment=ruleEffectOrAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEffectOrAssignment; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEffectOrAssignment"


    // $ANTLR start "ruleEffectOrAssignment"
    // InternalSCTX.g:6424:1: ruleEffectOrAssignment returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) ) | ( ( (lv_reference_3_0= ruleValuedObjectReference ) ) ( (lv_operator_4_0= ruleAssignOperator ) ) ( (lv_expression_5_0= ruleExpression ) ) ) | ( (lv_expression_6_0= ruleExpression ) ) ) ) ;
    public final EObject ruleEffectOrAssignment() throws RecognitionException {
        EObject current = null;

        EObject lv_annotations_0_0 = null;

        EObject lv_reference_1_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_reference_3_0 = null;

        Enumerator lv_operator_4_0 = null;

        EObject lv_expression_5_0 = null;

        EObject lv_expression_6_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:6430:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) ) | ( ( (lv_reference_3_0= ruleValuedObjectReference ) ) ( (lv_operator_4_0= ruleAssignOperator ) ) ( (lv_expression_5_0= ruleExpression ) ) ) | ( (lv_expression_6_0= ruleExpression ) ) ) ) )
            // InternalSCTX.g:6431:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) ) | ( ( (lv_reference_3_0= ruleValuedObjectReference ) ) ( (lv_operator_4_0= ruleAssignOperator ) ) ( (lv_expression_5_0= ruleExpression ) ) ) | ( (lv_expression_6_0= ruleExpression ) ) ) )
            {
            // InternalSCTX.g:6431:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) ) | ( ( (lv_reference_3_0= ruleValuedObjectReference ) ) ( (lv_operator_4_0= ruleAssignOperator ) ) ( (lv_expression_5_0= ruleExpression ) ) ) | ( (lv_expression_6_0= ruleExpression ) ) ) )
            // InternalSCTX.g:6432:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) ) | ( ( (lv_reference_3_0= ruleValuedObjectReference ) ) ( (lv_operator_4_0= ruleAssignOperator ) ) ( (lv_expression_5_0= ruleExpression ) ) ) | ( (lv_expression_6_0= ruleExpression ) ) )
            {
            // InternalSCTX.g:6432:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop221:
            do {
                int alt221=2;
                int LA221_0 = input.LA(1);

                if ( (LA221_0==RULE_COMMENT_ANNOTATION) ) {
                    int LA221_2 = input.LA(2);

                    if ( (synpred241_InternalSCTX()) ) {
                        alt221=1;
                    }


                }
                else if ( (LA221_0==103) ) {
                    int LA221_3 = input.LA(2);

                    if ( (LA221_3==RULE_ID) ) {
                        int LA221_5 = input.LA(3);

                        if ( (synpred241_InternalSCTX()) ) {
                            alt221=1;
                        }


                    }


                }


                switch (alt221) {
            	case 1 :
            	    // InternalSCTX.g:6433:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:6433:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:6434:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getEffectOrAssignmentAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_30);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getEffectOrAssignmentRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop221;
                }
            } while (true);

            // InternalSCTX.g:6451:3: ( ( ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) ) | ( ( (lv_reference_3_0= ruleValuedObjectReference ) ) ( (lv_operator_4_0= ruleAssignOperator ) ) ( (lv_expression_5_0= ruleExpression ) ) ) | ( (lv_expression_6_0= ruleExpression ) ) )
            int alt222=3;
            alt222 = dfa222.predict(input);
            switch (alt222) {
                case 1 :
                    // InternalSCTX.g:6452:4: ( ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) )
                    {
                    // InternalSCTX.g:6452:4: ( ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) )
                    // InternalSCTX.g:6453:5: ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) )
                    {
                    // InternalSCTX.g:6453:5: ( (lv_reference_1_0= ruleValuedObjectReference ) )
                    // InternalSCTX.g:6454:6: (lv_reference_1_0= ruleValuedObjectReference )
                    {
                    // InternalSCTX.g:6454:6: (lv_reference_1_0= ruleValuedObjectReference )
                    // InternalSCTX.g:6455:7: lv_reference_1_0= ruleValuedObjectReference
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getEffectOrAssignmentAccess().getReferenceValuedObjectReferenceParserRuleCall_1_0_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_143);
                    lv_reference_1_0=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getEffectOrAssignmentRule());
                      							}
                      							set(
                      								current,
                      								"reference",
                      								lv_reference_1_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:6472:5: ( (lv_operator_2_0= rulePostfixOperator ) )
                    // InternalSCTX.g:6473:6: (lv_operator_2_0= rulePostfixOperator )
                    {
                    // InternalSCTX.g:6473:6: (lv_operator_2_0= rulePostfixOperator )
                    // InternalSCTX.g:6474:7: lv_operator_2_0= rulePostfixOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getEffectOrAssignmentAccess().getOperatorPostfixOperatorEnumRuleCall_1_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_operator_2_0=rulePostfixOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getEffectOrAssignmentRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.keffects.KEffects.PostfixOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:6493:4: ( ( (lv_reference_3_0= ruleValuedObjectReference ) ) ( (lv_operator_4_0= ruleAssignOperator ) ) ( (lv_expression_5_0= ruleExpression ) ) )
                    {
                    // InternalSCTX.g:6493:4: ( ( (lv_reference_3_0= ruleValuedObjectReference ) ) ( (lv_operator_4_0= ruleAssignOperator ) ) ( (lv_expression_5_0= ruleExpression ) ) )
                    // InternalSCTX.g:6494:5: ( (lv_reference_3_0= ruleValuedObjectReference ) ) ( (lv_operator_4_0= ruleAssignOperator ) ) ( (lv_expression_5_0= ruleExpression ) )
                    {
                    // InternalSCTX.g:6494:5: ( (lv_reference_3_0= ruleValuedObjectReference ) )
                    // InternalSCTX.g:6495:6: (lv_reference_3_0= ruleValuedObjectReference )
                    {
                    // InternalSCTX.g:6495:6: (lv_reference_3_0= ruleValuedObjectReference )
                    // InternalSCTX.g:6496:7: lv_reference_3_0= ruleValuedObjectReference
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getEffectOrAssignmentAccess().getReferenceValuedObjectReferenceParserRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_70);
                    lv_reference_3_0=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getEffectOrAssignmentRule());
                      							}
                      							set(
                      								current,
                      								"reference",
                      								lv_reference_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:6513:5: ( (lv_operator_4_0= ruleAssignOperator ) )
                    // InternalSCTX.g:6514:6: (lv_operator_4_0= ruleAssignOperator )
                    {
                    // InternalSCTX.g:6514:6: (lv_operator_4_0= ruleAssignOperator )
                    // InternalSCTX.g:6515:7: lv_operator_4_0= ruleAssignOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getEffectOrAssignmentAccess().getOperatorAssignOperatorEnumRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_30);
                    lv_operator_4_0=ruleAssignOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getEffectOrAssignmentRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_4_0,
                      								"de.cau.cs.kieler.kexpressions.keffects.KEffects.AssignOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:6532:5: ( (lv_expression_5_0= ruleExpression ) )
                    // InternalSCTX.g:6533:6: (lv_expression_5_0= ruleExpression )
                    {
                    // InternalSCTX.g:6533:6: (lv_expression_5_0= ruleExpression )
                    // InternalSCTX.g:6534:7: lv_expression_5_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getEffectOrAssignmentAccess().getExpressionExpressionParserRuleCall_1_1_2_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_expression_5_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getEffectOrAssignmentRule());
                      							}
                      							set(
                      								current,
                      								"expression",
                      								lv_expression_5_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSCTX.g:6553:4: ( (lv_expression_6_0= ruleExpression ) )
                    {
                    // InternalSCTX.g:6553:4: ( (lv_expression_6_0= ruleExpression ) )
                    // InternalSCTX.g:6554:5: (lv_expression_6_0= ruleExpression )
                    {
                    // InternalSCTX.g:6554:5: (lv_expression_6_0= ruleExpression )
                    // InternalSCTX.g:6555:6: lv_expression_6_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEffectOrAssignmentAccess().getExpressionExpressionParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_expression_6_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEffectOrAssignmentRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_6_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEffectOrAssignment"


    // $ANTLR start "entryRuleWhileLoop"
    // InternalSCTX.g:6577:1: entryRuleWhileLoop returns [EObject current=null] : iv_ruleWhileLoop= ruleWhileLoop EOF ;
    public final EObject entryRuleWhileLoop() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWhileLoop = null;


        try {
            // InternalSCTX.g:6577:50: (iv_ruleWhileLoop= ruleWhileLoop EOF )
            // InternalSCTX.g:6578:2: iv_ruleWhileLoop= ruleWhileLoop EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWhileLoopRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleWhileLoop=ruleWhileLoop();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWhileLoop; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWhileLoop"


    // $ANTLR start "ruleWhileLoop"
    // InternalSCTX.g:6584:1: ruleWhileLoop returns [EObject current=null] : (otherlv_0= 'while' otherlv_1= '(' ( (lv_condition_2_0= ruleBoolExpression ) ) otherlv_3= ')' otherlv_4= '{' ( (lv_declarations_5_0= ruleDeclaration ) )* ( (lv_statements_6_0= ruleStatement ) )* otherlv_7= '}' ( (lv_semicolon_8_0= ';' ) )? ) ;
    public final EObject ruleWhileLoop() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_7=null;
        Token lv_semicolon_8_0=null;
        EObject lv_condition_2_0 = null;

        EObject lv_declarations_5_0 = null;

        EObject lv_statements_6_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:6590:2: ( (otherlv_0= 'while' otherlv_1= '(' ( (lv_condition_2_0= ruleBoolExpression ) ) otherlv_3= ')' otherlv_4= '{' ( (lv_declarations_5_0= ruleDeclaration ) )* ( (lv_statements_6_0= ruleStatement ) )* otherlv_7= '}' ( (lv_semicolon_8_0= ';' ) )? ) )
            // InternalSCTX.g:6591:2: (otherlv_0= 'while' otherlv_1= '(' ( (lv_condition_2_0= ruleBoolExpression ) ) otherlv_3= ')' otherlv_4= '{' ( (lv_declarations_5_0= ruleDeclaration ) )* ( (lv_statements_6_0= ruleStatement ) )* otherlv_7= '}' ( (lv_semicolon_8_0= ';' ) )? )
            {
            // InternalSCTX.g:6591:2: (otherlv_0= 'while' otherlv_1= '(' ( (lv_condition_2_0= ruleBoolExpression ) ) otherlv_3= ')' otherlv_4= '{' ( (lv_declarations_5_0= ruleDeclaration ) )* ( (lv_statements_6_0= ruleStatement ) )* otherlv_7= '}' ( (lv_semicolon_8_0= ';' ) )? )
            // InternalSCTX.g:6592:3: otherlv_0= 'while' otherlv_1= '(' ( (lv_condition_2_0= ruleBoolExpression ) ) otherlv_3= ')' otherlv_4= '{' ( (lv_declarations_5_0= ruleDeclaration ) )* ( (lv_statements_6_0= ruleStatement ) )* otherlv_7= '}' ( (lv_semicolon_8_0= ';' ) )?
            {
            otherlv_0=(Token)match(input,70,FollowSets000.FOLLOW_149); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getWhileLoopAccess().getWhileKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,31,FollowSets000.FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getWhileLoopAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalSCTX.g:6600:3: ( (lv_condition_2_0= ruleBoolExpression ) )
            // InternalSCTX.g:6601:4: (lv_condition_2_0= ruleBoolExpression )
            {
            // InternalSCTX.g:6601:4: (lv_condition_2_0= ruleBoolExpression )
            // InternalSCTX.g:6602:5: lv_condition_2_0= ruleBoolExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getWhileLoopAccess().getConditionBoolExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_32);
            lv_condition_2_0=ruleBoolExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getWhileLoopRule());
              					}
              					set(
              						current,
              						"condition",
              						lv_condition_2_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.BoolExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,32,FollowSets000.FOLLOW_110); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getWhileLoopAccess().getRightParenthesisKeyword_3());
              		
            }
            otherlv_4=(Token)match(input,21,FollowSets000.FOLLOW_106); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getWhileLoopAccess().getLeftCurlyBracketKeyword_4());
              		
            }
            // InternalSCTX.g:6627:3: ( (lv_declarations_5_0= ruleDeclaration ) )*
            loop223:
            do {
                int alt223=2;
                alt223 = dfa223.predict(input);
                switch (alt223) {
            	case 1 :
            	    // InternalSCTX.g:6628:4: (lv_declarations_5_0= ruleDeclaration )
            	    {
            	    // InternalSCTX.g:6628:4: (lv_declarations_5_0= ruleDeclaration )
            	    // InternalSCTX.g:6629:5: lv_declarations_5_0= ruleDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getWhileLoopAccess().getDeclarationsDeclarationParserRuleCall_5_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_106);
            	    lv_declarations_5_0=ruleDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getWhileLoopRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_5_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.Declaration");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop223;
                }
            } while (true);

            // InternalSCTX.g:6646:3: ( (lv_statements_6_0= ruleStatement ) )*
            loop224:
            do {
                int alt224=2;
                int LA224_0 = input.LA(1);

                if ( (LA224_0==RULE_ID||LA224_0==RULE_HOSTCODE||LA224_0==RULE_COMMENT_ANNOTATION||LA224_0==21||LA224_0==36||LA224_0==44||(LA224_0>=67 && LA224_0<=68)||LA224_0==70||LA224_0==76||(LA224_0>=80 && LA224_0<=81)||LA224_0==103) ) {
                    alt224=1;
                }


                switch (alt224) {
            	case 1 :
            	    // InternalSCTX.g:6647:4: (lv_statements_6_0= ruleStatement )
            	    {
            	    // InternalSCTX.g:6647:4: (lv_statements_6_0= ruleStatement )
            	    // InternalSCTX.g:6648:5: lv_statements_6_0= ruleStatement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getWhileLoopAccess().getStatementsStatementParserRuleCall_6_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_107);
            	    lv_statements_6_0=ruleStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getWhileLoopRule());
            	      					}
            	      					add(
            	      						current,
            	      						"statements",
            	      						lv_statements_6_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.Statement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop224;
                }
            } while (true);

            otherlv_7=(Token)match(input,22,FollowSets000.FOLLOW_140); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getWhileLoopAccess().getRightCurlyBracketKeyword_7());
              		
            }
            // InternalSCTX.g:6669:3: ( (lv_semicolon_8_0= ';' ) )?
            int alt225=2;
            int LA225_0 = input.LA(1);

            if ( (LA225_0==40) ) {
                alt225=1;
            }
            switch (alt225) {
                case 1 :
                    // InternalSCTX.g:6670:4: (lv_semicolon_8_0= ';' )
                    {
                    // InternalSCTX.g:6670:4: (lv_semicolon_8_0= ';' )
                    // InternalSCTX.g:6671:5: lv_semicolon_8_0= ';'
                    {
                    lv_semicolon_8_0=(Token)match(input,40,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_semicolon_8_0, grammarAccess.getWhileLoopAccess().getSemicolonSemicolonKeyword_8_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getWhileLoopRule());
                      					}
                      					setWithLastConsumed(current, "semicolon", true, ";");
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWhileLoop"


    // $ANTLR start "entryRuleModuleCallParameter"
    // InternalSCTX.g:6687:1: entryRuleModuleCallParameter returns [EObject current=null] : iv_ruleModuleCallParameter= ruleModuleCallParameter EOF ;
    public final EObject entryRuleModuleCallParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModuleCallParameter = null;


        try {
            // InternalSCTX.g:6687:60: (iv_ruleModuleCallParameter= ruleModuleCallParameter EOF )
            // InternalSCTX.g:6688:2: iv_ruleModuleCallParameter= ruleModuleCallParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModuleCallParameterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleModuleCallParameter=ruleModuleCallParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModuleCallParameter; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModuleCallParameter"


    // $ANTLR start "ruleModuleCallParameter"
    // InternalSCTX.g:6694:1: ruleModuleCallParameter returns [EObject current=null] : ( ( ( ( (lv_accessType_0_0= ruleParameterAccessType ) ) ( (lv_expression_1_0= ruleValuedObjectReference ) ) ) | ( (lv_expression_2_0= ruleExpression ) ) ) (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )? ) ;
    public final EObject ruleModuleCallParameter() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Enumerator lv_accessType_0_0 = null;

        EObject lv_expression_1_0 = null;

        EObject lv_expression_2_0 = null;

        EObject lv_explicitBindingIndices_6_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:6700:2: ( ( ( ( ( (lv_accessType_0_0= ruleParameterAccessType ) ) ( (lv_expression_1_0= ruleValuedObjectReference ) ) ) | ( (lv_expression_2_0= ruleExpression ) ) ) (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )? ) )
            // InternalSCTX.g:6701:2: ( ( ( ( (lv_accessType_0_0= ruleParameterAccessType ) ) ( (lv_expression_1_0= ruleValuedObjectReference ) ) ) | ( (lv_expression_2_0= ruleExpression ) ) ) (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )? )
            {
            // InternalSCTX.g:6701:2: ( ( ( ( (lv_accessType_0_0= ruleParameterAccessType ) ) ( (lv_expression_1_0= ruleValuedObjectReference ) ) ) | ( (lv_expression_2_0= ruleExpression ) ) ) (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )? )
            // InternalSCTX.g:6702:3: ( ( ( (lv_accessType_0_0= ruleParameterAccessType ) ) ( (lv_expression_1_0= ruleValuedObjectReference ) ) ) | ( (lv_expression_2_0= ruleExpression ) ) ) (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )?
            {
            // InternalSCTX.g:6702:3: ( ( ( (lv_accessType_0_0= ruleParameterAccessType ) ) ( (lv_expression_1_0= ruleValuedObjectReference ) ) ) | ( (lv_expression_2_0= ruleExpression ) ) )
            int alt226=2;
            int LA226_0 = input.LA(1);

            if ( (LA226_0==86||LA226_0==159) ) {
                alt226=1;
            }
            else if ( ((LA226_0>=RULE_STRING && LA226_0<=RULE_COMMENT_ANNOTATION)||LA226_0==21||LA226_0==31||LA226_0==76||LA226_0==81||LA226_0==91||LA226_0==99||LA226_0==103||(LA226_0>=145 && LA226_0<=148)) ) {
                alt226=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 226, 0, input);

                throw nvae;
            }
            switch (alt226) {
                case 1 :
                    // InternalSCTX.g:6703:4: ( ( (lv_accessType_0_0= ruleParameterAccessType ) ) ( (lv_expression_1_0= ruleValuedObjectReference ) ) )
                    {
                    // InternalSCTX.g:6703:4: ( ( (lv_accessType_0_0= ruleParameterAccessType ) ) ( (lv_expression_1_0= ruleValuedObjectReference ) ) )
                    // InternalSCTX.g:6704:5: ( (lv_accessType_0_0= ruleParameterAccessType ) ) ( (lv_expression_1_0= ruleValuedObjectReference ) )
                    {
                    // InternalSCTX.g:6704:5: ( (lv_accessType_0_0= ruleParameterAccessType ) )
                    // InternalSCTX.g:6705:6: (lv_accessType_0_0= ruleParameterAccessType )
                    {
                    // InternalSCTX.g:6705:6: (lv_accessType_0_0= ruleParameterAccessType )
                    // InternalSCTX.g:6706:7: lv_accessType_0_0= ruleParameterAccessType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getModuleCallParameterAccess().getAccessTypeParameterAccessTypeEnumRuleCall_0_0_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_33);
                    lv_accessType_0_0=ruleParameterAccessType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getModuleCallParameterRule());
                      							}
                      							set(
                      								current,
                      								"accessType",
                      								lv_accessType_0_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ParameterAccessType");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:6723:5: ( (lv_expression_1_0= ruleValuedObjectReference ) )
                    // InternalSCTX.g:6724:6: (lv_expression_1_0= ruleValuedObjectReference )
                    {
                    // InternalSCTX.g:6724:6: (lv_expression_1_0= ruleValuedObjectReference )
                    // InternalSCTX.g:6725:7: lv_expression_1_0= ruleValuedObjectReference
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getModuleCallParameterAccess().getExpressionValuedObjectReferenceParserRuleCall_0_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_34);
                    lv_expression_1_0=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getModuleCallParameterRule());
                      							}
                      							set(
                      								current,
                      								"expression",
                      								lv_expression_1_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:6744:4: ( (lv_expression_2_0= ruleExpression ) )
                    {
                    // InternalSCTX.g:6744:4: ( (lv_expression_2_0= ruleExpression ) )
                    // InternalSCTX.g:6745:5: (lv_expression_2_0= ruleExpression )
                    {
                    // InternalSCTX.g:6745:5: (lv_expression_2_0= ruleExpression )
                    // InternalSCTX.g:6746:6: lv_expression_2_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getModuleCallParameterAccess().getExpressionExpressionParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_34);
                    lv_expression_2_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getModuleCallParameterRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_2_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:6764:3: (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )?
            int alt228=2;
            int LA228_0 = input.LA(1);

            if ( (LA228_0==33) ) {
                alt228=1;
            }
            switch (alt228) {
                case 1 :
                    // InternalSCTX.g:6765:4: otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )*
                    {
                    otherlv_3=(Token)match(input,33,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getModuleCallParameterAccess().getToKeyword_1_0());
                      			
                    }
                    // InternalSCTX.g:6769:4: ( (otherlv_4= RULE_ID ) )
                    // InternalSCTX.g:6770:5: (otherlv_4= RULE_ID )
                    {
                    // InternalSCTX.g:6770:5: (otherlv_4= RULE_ID )
                    // InternalSCTX.g:6771:6: otherlv_4= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      						/* */
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getModuleCallParameterRule());
                      						}
                      					
                    }
                    otherlv_4=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_4, grammarAccess.getModuleCallParameterAccess().getExplicitBindingValuedObjectCrossReference_1_1_0());
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:6785:4: (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )*
                    loop227:
                    do {
                        int alt227=2;
                        int LA227_0 = input.LA(1);

                        if ( (LA227_0==34) ) {
                            alt227=1;
                        }


                        switch (alt227) {
                    	case 1 :
                    	    // InternalSCTX.g:6786:5: otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']'
                    	    {
                    	    otherlv_5=(Token)match(input,34,FollowSets000.FOLLOW_30); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_5, grammarAccess.getModuleCallParameterAccess().getLeftSquareBracketKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:6790:5: ( (lv_explicitBindingIndices_6_0= ruleExpression ) )
                    	    // InternalSCTX.g:6791:6: (lv_explicitBindingIndices_6_0= ruleExpression )
                    	    {
                    	    // InternalSCTX.g:6791:6: (lv_explicitBindingIndices_6_0= ruleExpression )
                    	    // InternalSCTX.g:6792:7: lv_explicitBindingIndices_6_0= ruleExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getModuleCallParameterAccess().getExplicitBindingIndicesExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_36);
                    	    lv_explicitBindingIndices_6_0=ruleExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getModuleCallParameterRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"explicitBindingIndices",
                    	      								lv_explicitBindingIndices_6_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }

                    	    otherlv_7=(Token)match(input,35,FollowSets000.FOLLOW_35); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_7, grammarAccess.getModuleCallParameterAccess().getRightSquareBracketKeyword_1_2_2());
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop227;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModuleCallParameter"


    // $ANTLR start "entryRuleMethodDeclaration"
    // InternalSCTX.g:6819:1: entryRuleMethodDeclaration returns [EObject current=null] : iv_ruleMethodDeclaration= ruleMethodDeclaration EOF ;
    public final EObject entryRuleMethodDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMethodDeclaration = null;


        try {
            // InternalSCTX.g:6819:58: (iv_ruleMethodDeclaration= ruleMethodDeclaration EOF )
            // InternalSCTX.g:6820:2: iv_ruleMethodDeclaration= ruleMethodDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMethodDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMethodDeclaration=ruleMethodDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMethodDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMethodDeclaration"


    // $ANTLR start "ruleMethodDeclaration"
    // InternalSCTX.g:6826:1: ruleMethodDeclaration returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_returnType_3_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) ) ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )? (otherlv_13= ';' | (otherlv_14= '{' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_16_0= ruleDeclaration ) )* ( (lv_statements_17_0= ruleStatement ) )* otherlv_18= '}' ) ) ( (lv_annotations_19_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleMethodDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token otherlv_18=null;
        EObject lv_annotations_1_0 = null;

        Enumerator lv_access_2_0 = null;

        Enumerator lv_returnType_3_0 = null;

        EObject lv_valuedObjects_4_0 = null;

        EObject lv_parameterDeclarations_6_0 = null;

        EObject lv_parameterDeclarations_8_0 = null;

        EObject lv_schedule_12_0 = null;

        EObject lv_annotations_15_0 = null;

        EObject lv_declarations_16_0 = null;

        EObject lv_statements_17_0 = null;

        EObject lv_annotations_19_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:6832:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_returnType_3_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) ) ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )? (otherlv_13= ';' | (otherlv_14= '{' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_16_0= ruleDeclaration ) )* ( (lv_statements_17_0= ruleStatement ) )* otherlv_18= '}' ) ) ( (lv_annotations_19_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalSCTX.g:6833:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_returnType_3_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) ) ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )? (otherlv_13= ';' | (otherlv_14= '{' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_16_0= ruleDeclaration ) )* ( (lv_statements_17_0= ruleStatement ) )* otherlv_18= '}' ) ) ( (lv_annotations_19_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalSCTX.g:6833:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_returnType_3_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) ) ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )? (otherlv_13= ';' | (otherlv_14= '{' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_16_0= ruleDeclaration ) )* ( (lv_statements_17_0= ruleStatement ) )* otherlv_18= '}' ) ) ( (lv_annotations_19_0= ruleCommentAnnotatonSL ) )? )
            // InternalSCTX.g:6834:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_returnType_3_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) ) ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )? (otherlv_13= ';' | (otherlv_14= '{' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_16_0= ruleDeclaration ) )* ( (lv_statements_17_0= ruleStatement ) )* otherlv_18= '}' ) ) ( (lv_annotations_19_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalSCTX.g:6834:3: ()
            // InternalSCTX.g:6835:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getMethodDeclarationAccess().getMethodImplementationDeclarationAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:6844:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop229:
            do {
                int alt229=2;
                int LA229_0 = input.LA(1);

                if ( (LA229_0==RULE_COMMENT_ANNOTATION) ) {
                    int LA229_2 = input.LA(2);

                    if ( (synpred250_InternalSCTX()) ) {
                        alt229=1;
                    }


                }
                else if ( (LA229_0==103) ) {
                    int LA229_3 = input.LA(2);

                    if ( (LA229_3==RULE_ID) ) {
                        int LA229_5 = input.LA(3);

                        if ( (synpred250_InternalSCTX()) ) {
                            alt229=1;
                        }


                    }


                }


                switch (alt229) {
            	case 1 :
            	    // InternalSCTX.g:6845:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:6845:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCTX.g:6846:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getMethodDeclarationAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_129);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop229;
                }
            } while (true);

            // InternalSCTX.g:6863:3: ( (lv_access_2_0= ruleAccessModifier ) )?
            int alt230=2;
            int LA230_0 = input.LA(1);

            if ( ((LA230_0>=155 && LA230_0<=157)) ) {
                alt230=1;
            }
            switch (alt230) {
                case 1 :
                    // InternalSCTX.g:6864:4: (lv_access_2_0= ruleAccessModifier )
                    {
                    // InternalSCTX.g:6864:4: (lv_access_2_0= ruleAccessModifier )
                    // InternalSCTX.g:6865:5: lv_access_2_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getMethodDeclarationAccess().getAccessAccessModifierEnumRuleCall_2_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_129);
                    lv_access_2_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_2_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:6882:3: ( (lv_returnType_3_0= ruleMethodReturnType ) )?
            int alt231=2;
            int LA231_0 = input.LA(1);

            if ( ((LA231_0>=117 && LA231_0<=120)||LA231_0==158) ) {
                alt231=1;
            }
            switch (alt231) {
                case 1 :
                    // InternalSCTX.g:6883:4: (lv_returnType_3_0= ruleMethodReturnType )
                    {
                    // InternalSCTX.g:6883:4: (lv_returnType_3_0= ruleMethodReturnType )
                    // InternalSCTX.g:6884:5: lv_returnType_3_0= ruleMethodReturnType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getMethodDeclarationAccess().getReturnTypeMethodReturnTypeEnumRuleCall_3_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_129);
                    lv_returnType_3_0=ruleMethodReturnType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"returnType",
                      						lv_returnType_3_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.MethodReturnType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:6901:3: ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) )
            // InternalSCTX.g:6902:4: (lv_valuedObjects_4_0= ruleSimpleValuedObject )
            {
            // InternalSCTX.g:6902:4: (lv_valuedObjects_4_0= ruleSimpleValuedObject )
            // InternalSCTX.g:6903:5: lv_valuedObjects_4_0= ruleSimpleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMethodDeclarationAccess().getValuedObjectsSimpleValuedObjectParserRuleCall_4_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_130);
            lv_valuedObjects_4_0=ruleSimpleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_4_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.SimpleValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:6920:3: ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' )
            int alt233=2;
            int LA233_0 = input.LA(1);

            if ( (LA233_0==31) ) {
                alt233=1;
            }
            else if ( (LA233_0==65) ) {
                alt233=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 233, 0, input);

                throw nvae;
            }
            switch (alt233) {
                case 1 :
                    // InternalSCTX.g:6921:4: (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' )
                    {
                    // InternalSCTX.g:6921:4: (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' )
                    // InternalSCTX.g:6922:5: otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')'
                    {
                    otherlv_5=(Token)match(input,31,FollowSets000.FOLLOW_131); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getMethodDeclarationAccess().getLeftParenthesisKeyword_5_0_0());
                      				
                    }
                    // InternalSCTX.g:6926:5: ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) )
                    // InternalSCTX.g:6927:6: (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon )
                    {
                    // InternalSCTX.g:6927:6: (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon )
                    // InternalSCTX.g:6928:7: lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getMethodDeclarationAccess().getParameterDeclarationsVariableDeclarationWOSemicolonParserRuleCall_5_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_31);
                    lv_parameterDeclarations_6_0=ruleVariableDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
                      							}
                      							add(
                      								current,
                      								"parameterDeclarations",
                      								lv_parameterDeclarations_6_0,
                      								"de.cau.cs.kieler.kexpressions.kext.KExt.VariableDeclarationWOSemicolon");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:6945:5: (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )*
                    loop232:
                    do {
                        int alt232=2;
                        int LA232_0 = input.LA(1);

                        if ( (LA232_0==20) ) {
                            alt232=1;
                        }


                        switch (alt232) {
                    	case 1 :
                    	    // InternalSCTX.g:6946:6: otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) )
                    	    {
                    	    otherlv_7=(Token)match(input,20,FollowSets000.FOLLOW_131); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_7, grammarAccess.getMethodDeclarationAccess().getCommaKeyword_5_0_2_0());
                    	      					
                    	    }
                    	    // InternalSCTX.g:6950:6: ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) )
                    	    // InternalSCTX.g:6951:7: (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon )
                    	    {
                    	    // InternalSCTX.g:6951:7: (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon )
                    	    // InternalSCTX.g:6952:8: lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getMethodDeclarationAccess().getParameterDeclarationsVariableDeclarationWOSemicolonParserRuleCall_5_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_31);
                    	    lv_parameterDeclarations_8_0=ruleVariableDeclarationWOSemicolon();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"parameterDeclarations",
                    	      									lv_parameterDeclarations_8_0,
                    	      									"de.cau.cs.kieler.kexpressions.kext.KExt.VariableDeclarationWOSemicolon");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop232;
                        }
                    } while (true);

                    otherlv_9=(Token)match(input,32,FollowSets000.FOLLOW_153); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_9, grammarAccess.getMethodDeclarationAccess().getRightParenthesisKeyword_5_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:6976:4: otherlv_10= '()'
                    {
                    otherlv_10=(Token)match(input,65,FollowSets000.FOLLOW_153); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getMethodDeclarationAccess().getLeftParenthesisRightParenthesisKeyword_5_1());
                      			
                    }

                    }
                    break;

            }

            // InternalSCTX.g:6981:3: (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )?
            int alt235=2;
            int LA235_0 = input.LA(1);

            if ( (LA235_0==29) ) {
                alt235=1;
            }
            switch (alt235) {
                case 1 :
                    // InternalSCTX.g:6982:4: otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_11=(Token)match(input,29,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getMethodDeclarationAccess().getScheduleKeyword_6_0());
                      			
                    }
                    // InternalSCTX.g:6986:4: ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+
                    int cnt234=0;
                    loop234:
                    do {
                        int alt234=2;
                        int LA234_0 = input.LA(1);

                        if ( (LA234_0==RULE_ID) ) {
                            alt234=1;
                        }


                        switch (alt234) {
                    	case 1 :
                    	    // InternalSCTX.g:6987:5: (lv_schedule_12_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCTX.g:6987:5: (lv_schedule_12_0= ruleScheduleObjectReference )
                    	    // InternalSCTX.g:6988:6: lv_schedule_12_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getMethodDeclarationAccess().getScheduleScheduleObjectReferenceParserRuleCall_6_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_154);
                    	    lv_schedule_12_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_12_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt234 >= 1 ) break loop234;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(234, input);
                                throw eee;
                        }
                        cnt234++;
                    } while (true);


                    }
                    break;

            }

            // InternalSCTX.g:7006:3: (otherlv_13= ';' | (otherlv_14= '{' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_16_0= ruleDeclaration ) )* ( (lv_statements_17_0= ruleStatement ) )* otherlv_18= '}' ) )
            int alt239=2;
            int LA239_0 = input.LA(1);

            if ( (LA239_0==40) ) {
                alt239=1;
            }
            else if ( (LA239_0==21) ) {
                alt239=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 239, 0, input);

                throw nvae;
            }
            switch (alt239) {
                case 1 :
                    // InternalSCTX.g:7007:4: otherlv_13= ';'
                    {
                    otherlv_13=(Token)match(input,40,FollowSets000.FOLLOW_155); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getMethodDeclarationAccess().getSemicolonKeyword_7_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:7012:4: (otherlv_14= '{' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_16_0= ruleDeclaration ) )* ( (lv_statements_17_0= ruleStatement ) )* otherlv_18= '}' )
                    {
                    // InternalSCTX.g:7012:4: (otherlv_14= '{' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_16_0= ruleDeclaration ) )* ( (lv_statements_17_0= ruleStatement ) )* otherlv_18= '}' )
                    // InternalSCTX.g:7013:5: otherlv_14= '{' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_16_0= ruleDeclaration ) )* ( (lv_statements_17_0= ruleStatement ) )* otherlv_18= '}'
                    {
                    otherlv_14=(Token)match(input,21,FollowSets000.FOLLOW_134); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_14, grammarAccess.getMethodDeclarationAccess().getLeftCurlyBracketKeyword_7_1_0());
                      				
                    }
                    // InternalSCTX.g:7017:5: ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )?
                    int alt236=2;
                    int LA236_0 = input.LA(1);

                    if ( (LA236_0==RULE_SL_COMMENT_ANNOTATION) ) {
                        alt236=1;
                    }
                    switch (alt236) {
                        case 1 :
                            // InternalSCTX.g:7018:6: (lv_annotations_15_0= ruleCommentAnnotatonSL )
                            {
                            // InternalSCTX.g:7018:6: (lv_annotations_15_0= ruleCommentAnnotatonSL )
                            // InternalSCTX.g:7019:7: lv_annotations_15_0= ruleCommentAnnotatonSL
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getMethodDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_7_1_1_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_106);
                            lv_annotations_15_0=ruleCommentAnnotatonSL();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
                              							}
                              							add(
                              								current,
                              								"annotations",
                              								lv_annotations_15_0,
                              								"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalSCTX.g:7036:5: ( (lv_declarations_16_0= ruleDeclaration ) )*
                    loop237:
                    do {
                        int alt237=2;
                        alt237 = dfa237.predict(input);
                        switch (alt237) {
                    	case 1 :
                    	    // InternalSCTX.g:7037:6: (lv_declarations_16_0= ruleDeclaration )
                    	    {
                    	    // InternalSCTX.g:7037:6: (lv_declarations_16_0= ruleDeclaration )
                    	    // InternalSCTX.g:7038:7: lv_declarations_16_0= ruleDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getMethodDeclarationAccess().getDeclarationsDeclarationParserRuleCall_7_1_2_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_106);
                    	    lv_declarations_16_0=ruleDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"declarations",
                    	      								lv_declarations_16_0,
                    	      								"de.cau.cs.kieler.sccharts.text.SCTX.Declaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop237;
                        }
                    } while (true);

                    // InternalSCTX.g:7055:5: ( (lv_statements_17_0= ruleStatement ) )*
                    loop238:
                    do {
                        int alt238=2;
                        int LA238_0 = input.LA(1);

                        if ( (LA238_0==RULE_ID||LA238_0==RULE_HOSTCODE||LA238_0==RULE_COMMENT_ANNOTATION||LA238_0==21||LA238_0==36||LA238_0==44||(LA238_0>=67 && LA238_0<=68)||LA238_0==70||LA238_0==76||(LA238_0>=80 && LA238_0<=81)||LA238_0==103) ) {
                            alt238=1;
                        }


                        switch (alt238) {
                    	case 1 :
                    	    // InternalSCTX.g:7056:6: (lv_statements_17_0= ruleStatement )
                    	    {
                    	    // InternalSCTX.g:7056:6: (lv_statements_17_0= ruleStatement )
                    	    // InternalSCTX.g:7057:7: lv_statements_17_0= ruleStatement
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getMethodDeclarationAccess().getStatementsStatementParserRuleCall_7_1_3_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_107);
                    	    lv_statements_17_0=ruleStatement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"statements",
                    	      								lv_statements_17_0,
                    	      								"de.cau.cs.kieler.sccharts.text.SCTX.Statement");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop238;
                        }
                    } while (true);

                    otherlv_18=(Token)match(input,22,FollowSets000.FOLLOW_155); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_18, grammarAccess.getMethodDeclarationAccess().getRightCurlyBracketKeyword_7_1_4());
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:7080:3: ( (lv_annotations_19_0= ruleCommentAnnotatonSL ) )?
            int alt240=2;
            int LA240_0 = input.LA(1);

            if ( (LA240_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt240=1;
            }
            switch (alt240) {
                case 1 :
                    // InternalSCTX.g:7081:4: (lv_annotations_19_0= ruleCommentAnnotatonSL )
                    {
                    // InternalSCTX.g:7081:4: (lv_annotations_19_0= ruleCommentAnnotatonSL )
                    // InternalSCTX.g:7082:5: lv_annotations_19_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getMethodDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_8_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_19_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_19_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMethodDeclaration"


    // $ANTLR start "entryRuleMethodDeclarationWOSemicolon"
    // InternalSCTX.g:7103:1: entryRuleMethodDeclarationWOSemicolon returns [EObject current=null] : iv_ruleMethodDeclarationWOSemicolon= ruleMethodDeclarationWOSemicolon EOF ;
    public final EObject entryRuleMethodDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMethodDeclarationWOSemicolon = null;


        try {
            // InternalSCTX.g:7103:69: (iv_ruleMethodDeclarationWOSemicolon= ruleMethodDeclarationWOSemicolon EOF )
            // InternalSCTX.g:7104:2: iv_ruleMethodDeclarationWOSemicolon= ruleMethodDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMethodDeclarationWOSemicolon=ruleMethodDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMethodDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMethodDeclarationWOSemicolon"


    // $ANTLR start "ruleMethodDeclarationWOSemicolon"
    // InternalSCTX.g:7110:1: ruleMethodDeclarationWOSemicolon returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_returnType_3_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) ) ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )? (otherlv_13= '{' ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_15_0= ruleDeclaration ) )* ( (lv_statements_16_0= ruleStatement ) )* otherlv_17= '}' )? ) ;
    public final EObject ruleMethodDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_17=null;
        EObject lv_annotations_1_0 = null;

        Enumerator lv_access_2_0 = null;

        Enumerator lv_returnType_3_0 = null;

        EObject lv_valuedObjects_4_0 = null;

        EObject lv_parameterDeclarations_6_0 = null;

        EObject lv_parameterDeclarations_8_0 = null;

        EObject lv_schedule_12_0 = null;

        EObject lv_annotations_14_0 = null;

        EObject lv_declarations_15_0 = null;

        EObject lv_statements_16_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:7116:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_returnType_3_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) ) ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )? (otherlv_13= '{' ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_15_0= ruleDeclaration ) )* ( (lv_statements_16_0= ruleStatement ) )* otherlv_17= '}' )? ) )
            // InternalSCTX.g:7117:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_returnType_3_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) ) ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )? (otherlv_13= '{' ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_15_0= ruleDeclaration ) )* ( (lv_statements_16_0= ruleStatement ) )* otherlv_17= '}' )? )
            {
            // InternalSCTX.g:7117:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_returnType_3_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) ) ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )? (otherlv_13= '{' ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_15_0= ruleDeclaration ) )* ( (lv_statements_16_0= ruleStatement ) )* otherlv_17= '}' )? )
            // InternalSCTX.g:7118:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_returnType_3_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) ) ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )? (otherlv_13= '{' ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_15_0= ruleDeclaration ) )* ( (lv_statements_16_0= ruleStatement ) )* otherlv_17= '}' )?
            {
            // InternalSCTX.g:7118:3: ()
            // InternalSCTX.g:7119:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getMethodDeclarationWOSemicolonAccess().getMethodImplementationDeclarationAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:7128:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop241:
            do {
                int alt241=2;
                int LA241_0 = input.LA(1);

                if ( (LA241_0==RULE_COMMENT_ANNOTATION) ) {
                    int LA241_2 = input.LA(2);

                    if ( (synpred262_InternalSCTX()) ) {
                        alt241=1;
                    }


                }
                else if ( (LA241_0==103) ) {
                    int LA241_3 = input.LA(2);

                    if ( (LA241_3==RULE_ID) ) {
                        int LA241_5 = input.LA(3);

                        if ( (synpred262_InternalSCTX()) ) {
                            alt241=1;
                        }


                    }


                }


                switch (alt241) {
            	case 1 :
            	    // InternalSCTX.g:7129:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:7129:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCTX.g:7130:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_129);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop241;
                }
            } while (true);

            // InternalSCTX.g:7147:3: ( (lv_access_2_0= ruleAccessModifier ) )?
            int alt242=2;
            int LA242_0 = input.LA(1);

            if ( ((LA242_0>=155 && LA242_0<=157)) ) {
                alt242=1;
            }
            switch (alt242) {
                case 1 :
                    // InternalSCTX.g:7148:4: (lv_access_2_0= ruleAccessModifier )
                    {
                    // InternalSCTX.g:7148:4: (lv_access_2_0= ruleAccessModifier )
                    // InternalSCTX.g:7149:5: lv_access_2_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getAccessAccessModifierEnumRuleCall_2_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_129);
                    lv_access_2_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_2_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:7166:3: ( (lv_returnType_3_0= ruleMethodReturnType ) )?
            int alt243=2;
            int LA243_0 = input.LA(1);

            if ( ((LA243_0>=117 && LA243_0<=120)||LA243_0==158) ) {
                alt243=1;
            }
            switch (alt243) {
                case 1 :
                    // InternalSCTX.g:7167:4: (lv_returnType_3_0= ruleMethodReturnType )
                    {
                    // InternalSCTX.g:7167:4: (lv_returnType_3_0= ruleMethodReturnType )
                    // InternalSCTX.g:7168:5: lv_returnType_3_0= ruleMethodReturnType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getReturnTypeMethodReturnTypeEnumRuleCall_3_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_129);
                    lv_returnType_3_0=ruleMethodReturnType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
                      					}
                      					set(
                      						current,
                      						"returnType",
                      						lv_returnType_3_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.MethodReturnType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:7185:3: ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) )
            // InternalSCTX.g:7186:4: (lv_valuedObjects_4_0= ruleSimpleValuedObject )
            {
            // InternalSCTX.g:7186:4: (lv_valuedObjects_4_0= ruleSimpleValuedObject )
            // InternalSCTX.g:7187:5: lv_valuedObjects_4_0= ruleSimpleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getValuedObjectsSimpleValuedObjectParserRuleCall_4_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_130);
            lv_valuedObjects_4_0=ruleSimpleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_4_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.SimpleValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:7204:3: ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' )
            int alt245=2;
            int LA245_0 = input.LA(1);

            if ( (LA245_0==31) ) {
                alt245=1;
            }
            else if ( (LA245_0==65) ) {
                alt245=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 245, 0, input);

                throw nvae;
            }
            switch (alt245) {
                case 1 :
                    // InternalSCTX.g:7205:4: (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' )
                    {
                    // InternalSCTX.g:7205:4: (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' )
                    // InternalSCTX.g:7206:5: otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')'
                    {
                    otherlv_5=(Token)match(input,31,FollowSets000.FOLLOW_131); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getMethodDeclarationWOSemicolonAccess().getLeftParenthesisKeyword_5_0_0());
                      				
                    }
                    // InternalSCTX.g:7210:5: ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) )
                    // InternalSCTX.g:7211:6: (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon )
                    {
                    // InternalSCTX.g:7211:6: (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon )
                    // InternalSCTX.g:7212:7: lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getParameterDeclarationsVariableDeclarationWOSemicolonParserRuleCall_5_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_31);
                    lv_parameterDeclarations_6_0=ruleVariableDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
                      							}
                      							add(
                      								current,
                      								"parameterDeclarations",
                      								lv_parameterDeclarations_6_0,
                      								"de.cau.cs.kieler.kexpressions.kext.KExt.VariableDeclarationWOSemicolon");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:7229:5: (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )*
                    loop244:
                    do {
                        int alt244=2;
                        int LA244_0 = input.LA(1);

                        if ( (LA244_0==20) ) {
                            alt244=1;
                        }


                        switch (alt244) {
                    	case 1 :
                    	    // InternalSCTX.g:7230:6: otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) )
                    	    {
                    	    otherlv_7=(Token)match(input,20,FollowSets000.FOLLOW_131); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_7, grammarAccess.getMethodDeclarationWOSemicolonAccess().getCommaKeyword_5_0_2_0());
                    	      					
                    	    }
                    	    // InternalSCTX.g:7234:6: ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) )
                    	    // InternalSCTX.g:7235:7: (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon )
                    	    {
                    	    // InternalSCTX.g:7235:7: (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon )
                    	    // InternalSCTX.g:7236:8: lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getParameterDeclarationsVariableDeclarationWOSemicolonParserRuleCall_5_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_31);
                    	    lv_parameterDeclarations_8_0=ruleVariableDeclarationWOSemicolon();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"parameterDeclarations",
                    	      									lv_parameterDeclarations_8_0,
                    	      									"de.cau.cs.kieler.kexpressions.kext.KExt.VariableDeclarationWOSemicolon");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop244;
                        }
                    } while (true);

                    otherlv_9=(Token)match(input,32,FollowSets000.FOLLOW_132); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_9, grammarAccess.getMethodDeclarationWOSemicolonAccess().getRightParenthesisKeyword_5_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:7260:4: otherlv_10= '()'
                    {
                    otherlv_10=(Token)match(input,65,FollowSets000.FOLLOW_132); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getMethodDeclarationWOSemicolonAccess().getLeftParenthesisRightParenthesisKeyword_5_1());
                      			
                    }

                    }
                    break;

            }

            // InternalSCTX.g:7265:3: (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )?
            int alt247=2;
            alt247 = dfa247.predict(input);
            switch (alt247) {
                case 1 :
                    // InternalSCTX.g:7266:4: otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_11=(Token)match(input,29,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getMethodDeclarationWOSemicolonAccess().getScheduleKeyword_6_0());
                      			
                    }
                    // InternalSCTX.g:7270:4: ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+
                    int cnt246=0;
                    loop246:
                    do {
                        int alt246=2;
                        alt246 = dfa246.predict(input);
                        switch (alt246) {
                    	case 1 :
                    	    // InternalSCTX.g:7271:5: (lv_schedule_12_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCTX.g:7271:5: (lv_schedule_12_0= ruleScheduleObjectReference )
                    	    // InternalSCTX.g:7272:6: lv_schedule_12_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getScheduleScheduleObjectReferenceParserRuleCall_6_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_133);
                    	    lv_schedule_12_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_12_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt246 >= 1 ) break loop246;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(246, input);
                                throw eee;
                        }
                        cnt246++;
                    } while (true);


                    }
                    break;

            }

            // InternalSCTX.g:7290:3: (otherlv_13= '{' ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_15_0= ruleDeclaration ) )* ( (lv_statements_16_0= ruleStatement ) )* otherlv_17= '}' )?
            int alt251=2;
            int LA251_0 = input.LA(1);

            if ( (LA251_0==21) ) {
                alt251=1;
            }
            switch (alt251) {
                case 1 :
                    // InternalSCTX.g:7291:4: otherlv_13= '{' ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_15_0= ruleDeclaration ) )* ( (lv_statements_16_0= ruleStatement ) )* otherlv_17= '}'
                    {
                    otherlv_13=(Token)match(input,21,FollowSets000.FOLLOW_134); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getMethodDeclarationWOSemicolonAccess().getLeftCurlyBracketKeyword_7_0());
                      			
                    }
                    // InternalSCTX.g:7295:4: ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )?
                    int alt248=2;
                    int LA248_0 = input.LA(1);

                    if ( (LA248_0==RULE_SL_COMMENT_ANNOTATION) ) {
                        alt248=1;
                    }
                    switch (alt248) {
                        case 1 :
                            // InternalSCTX.g:7296:5: (lv_annotations_14_0= ruleCommentAnnotatonSL )
                            {
                            // InternalSCTX.g:7296:5: (lv_annotations_14_0= ruleCommentAnnotatonSL )
                            // InternalSCTX.g:7297:6: lv_annotations_14_0= ruleCommentAnnotatonSL
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_7_1_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_106);
                            lv_annotations_14_0=ruleCommentAnnotatonSL();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
                              						}
                              						add(
                              							current,
                              							"annotations",
                              							lv_annotations_14_0,
                              							"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSCTX.g:7314:4: ( (lv_declarations_15_0= ruleDeclaration ) )*
                    loop249:
                    do {
                        int alt249=2;
                        alt249 = dfa249.predict(input);
                        switch (alt249) {
                    	case 1 :
                    	    // InternalSCTX.g:7315:5: (lv_declarations_15_0= ruleDeclaration )
                    	    {
                    	    // InternalSCTX.g:7315:5: (lv_declarations_15_0= ruleDeclaration )
                    	    // InternalSCTX.g:7316:6: lv_declarations_15_0= ruleDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getDeclarationsDeclarationParserRuleCall_7_2_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_106);
                    	    lv_declarations_15_0=ruleDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"declarations",
                    	      							lv_declarations_15_0,
                    	      							"de.cau.cs.kieler.sccharts.text.SCTX.Declaration");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop249;
                        }
                    } while (true);

                    // InternalSCTX.g:7333:4: ( (lv_statements_16_0= ruleStatement ) )*
                    loop250:
                    do {
                        int alt250=2;
                        int LA250_0 = input.LA(1);

                        if ( (LA250_0==RULE_ID||LA250_0==RULE_HOSTCODE||LA250_0==RULE_COMMENT_ANNOTATION||LA250_0==21||LA250_0==36||LA250_0==44||(LA250_0>=67 && LA250_0<=68)||LA250_0==70||LA250_0==76||(LA250_0>=80 && LA250_0<=81)||LA250_0==103) ) {
                            alt250=1;
                        }


                        switch (alt250) {
                    	case 1 :
                    	    // InternalSCTX.g:7334:5: (lv_statements_16_0= ruleStatement )
                    	    {
                    	    // InternalSCTX.g:7334:5: (lv_statements_16_0= ruleStatement )
                    	    // InternalSCTX.g:7335:6: lv_statements_16_0= ruleStatement
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getStatementsStatementParserRuleCall_7_3_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_107);
                    	    lv_statements_16_0=ruleStatement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"statements",
                    	      							lv_statements_16_0,
                    	      							"de.cau.cs.kieler.sccharts.text.SCTX.Statement");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop250;
                        }
                    } while (true);

                    otherlv_17=(Token)match(input,22,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_17, grammarAccess.getMethodDeclarationWOSemicolonAccess().getRightCurlyBracketKeyword_7_4());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMethodDeclarationWOSemicolon"


    // $ANTLR start "entryRuleRootScope"
    // InternalSCTX.g:7361:1: entryRuleRootScope returns [EObject current=null] : iv_ruleRootScope= ruleRootScope EOF ;
    public final EObject entryRuleRootScope() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRootScope = null;


        try {
            // InternalSCTX.g:7361:50: (iv_ruleRootScope= ruleRootScope EOF )
            // InternalSCTX.g:7362:2: iv_ruleRootScope= ruleRootScope EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRootScopeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRootScope=ruleRootScope();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRootScope; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRootScope"


    // $ANTLR start "ruleRootScope"
    // InternalSCTX.g:7368:1: ruleRootScope returns [EObject current=null] : ( () ( (lv_declarations_1_0= ruleDeclaration ) )* ( (lv_entities_2_0= ruleTestEntity ) )* (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )* ) ;
    public final EObject ruleRootScope() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        EObject lv_declarations_1_0 = null;

        EObject lv_entities_2_0 = null;

        EObject lv_scopes_4_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:7374:2: ( ( () ( (lv_declarations_1_0= ruleDeclaration ) )* ( (lv_entities_2_0= ruleTestEntity ) )* (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )* ) )
            // InternalSCTX.g:7375:2: ( () ( (lv_declarations_1_0= ruleDeclaration ) )* ( (lv_entities_2_0= ruleTestEntity ) )* (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )* )
            {
            // InternalSCTX.g:7375:2: ( () ( (lv_declarations_1_0= ruleDeclaration ) )* ( (lv_entities_2_0= ruleTestEntity ) )* (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )* )
            // InternalSCTX.g:7376:3: () ( (lv_declarations_1_0= ruleDeclaration ) )* ( (lv_entities_2_0= ruleTestEntity ) )* (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )*
            {
            // InternalSCTX.g:7376:3: ()
            // InternalSCTX.g:7377:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getRootScopeAccess().getKExtScopeAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:7386:3: ( (lv_declarations_1_0= ruleDeclaration ) )*
            loop252:
            do {
                int alt252=2;
                alt252 = dfa252.predict(input);
                switch (alt252) {
            	case 1 :
            	    // InternalSCTX.g:7387:4: (lv_declarations_1_0= ruleDeclaration )
            	    {
            	    // InternalSCTX.g:7387:4: (lv_declarations_1_0= ruleDeclaration )
            	    // InternalSCTX.g:7388:5: lv_declarations_1_0= ruleDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getRootScopeAccess().getDeclarationsDeclarationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_156);
            	    lv_declarations_1_0=ruleDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getRootScopeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_1_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.Declaration");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop252;
                }
            } while (true);

            // InternalSCTX.g:7405:3: ( (lv_entities_2_0= ruleTestEntity ) )*
            loop253:
            do {
                int alt253=2;
                int LA253_0 = input.LA(1);

                if ( (LA253_0==RULE_ID||LA253_0==RULE_HOSTCODE||LA253_0==RULE_COMMENT_ANNOTATION||LA253_0==21||(LA253_0>=72 && LA253_0<=73)||LA253_0==76||(LA253_0>=80 && LA253_0<=81)||LA253_0==103) ) {
                    alt253=1;
                }


                switch (alt253) {
            	case 1 :
            	    // InternalSCTX.g:7406:4: (lv_entities_2_0= ruleTestEntity )
            	    {
            	    // InternalSCTX.g:7406:4: (lv_entities_2_0= ruleTestEntity )
            	    // InternalSCTX.g:7407:5: lv_entities_2_0= ruleTestEntity
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getRootScopeAccess().getEntitiesTestEntityParserRuleCall_2_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_157);
            	    lv_entities_2_0=ruleTestEntity();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getRootScopeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"entities",
            	      						lv_entities_2_0,
            	      						"de.cau.cs.kieler.kexpressions.kext.KExt.TestEntity");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop253;
                }
            } while (true);

            // InternalSCTX.g:7424:3: (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )*
            loop254:
            do {
                int alt254=2;
                int LA254_0 = input.LA(1);

                if ( (LA254_0==71) ) {
                    alt254=1;
                }


                switch (alt254) {
            	case 1 :
            	    // InternalSCTX.g:7425:4: otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) )
            	    {
            	    otherlv_3=(Token)match(input,71,FollowSets000.FOLLOW_26); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getRootScopeAccess().getScopeKeyword_3_0());
            	      			
            	    }
            	    // InternalSCTX.g:7429:4: ( (lv_scopes_4_0= ruleScope ) )
            	    // InternalSCTX.g:7430:5: (lv_scopes_4_0= ruleScope )
            	    {
            	    // InternalSCTX.g:7430:5: (lv_scopes_4_0= ruleScope )
            	    // InternalSCTX.g:7431:6: lv_scopes_4_0= ruleScope
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getRootScopeAccess().getScopesScopeParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_158);
            	    lv_scopes_4_0=ruleScope();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getRootScopeRule());
            	      						}
            	      						add(
            	      							current,
            	      							"scopes",
            	      							lv_scopes_4_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.Scope");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop254;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRootScope"


    // $ANTLR start "entryRuleScope"
    // InternalSCTX.g:7453:1: entryRuleScope returns [EObject current=null] : iv_ruleScope= ruleScope EOF ;
    public final EObject entryRuleScope() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScope = null;


        try {
            // InternalSCTX.g:7453:46: (iv_ruleScope= ruleScope EOF )
            // InternalSCTX.g:7454:2: iv_ruleScope= ruleScope EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScopeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScope=ruleScope();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScope; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScope"


    // $ANTLR start "ruleScope"
    // InternalSCTX.g:7460:1: ruleScope returns [EObject current=null] : ( () ( (lv_name_1_0= RULE_ID ) )? otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_entities_4_0= ruleTestEntity ) )* (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )* otherlv_7= '}' ) ;
    public final EObject ruleScope() throws RecognitionException {
        EObject current = null;

        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_declarations_3_0 = null;

        EObject lv_entities_4_0 = null;

        EObject lv_scopes_6_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:7466:2: ( ( () ( (lv_name_1_0= RULE_ID ) )? otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_entities_4_0= ruleTestEntity ) )* (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )* otherlv_7= '}' ) )
            // InternalSCTX.g:7467:2: ( () ( (lv_name_1_0= RULE_ID ) )? otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_entities_4_0= ruleTestEntity ) )* (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )* otherlv_7= '}' )
            {
            // InternalSCTX.g:7467:2: ( () ( (lv_name_1_0= RULE_ID ) )? otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_entities_4_0= ruleTestEntity ) )* (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )* otherlv_7= '}' )
            // InternalSCTX.g:7468:3: () ( (lv_name_1_0= RULE_ID ) )? otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_entities_4_0= ruleTestEntity ) )* (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )* otherlv_7= '}'
            {
            // InternalSCTX.g:7468:3: ()
            // InternalSCTX.g:7469:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getScopeAccess().getKExtScopeAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:7478:3: ( (lv_name_1_0= RULE_ID ) )?
            int alt255=2;
            int LA255_0 = input.LA(1);

            if ( (LA255_0==RULE_ID) ) {
                alt255=1;
            }
            switch (alt255) {
                case 1 :
                    // InternalSCTX.g:7479:4: (lv_name_1_0= RULE_ID )
                    {
                    // InternalSCTX.g:7479:4: (lv_name_1_0= RULE_ID )
                    // InternalSCTX.g:7480:5: lv_name_1_0= RULE_ID
                    {
                    lv_name_1_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_110); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_1_0, grammarAccess.getScopeAccess().getNameIDTerminalRuleCall_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getScopeRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_1_0,
                      						"de.cau.cs.kieler.annotations.Annotations.ID");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,21,FollowSets000.FOLLOW_159); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getScopeAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalSCTX.g:7500:3: ( (lv_declarations_3_0= ruleDeclaration ) )*
            loop256:
            do {
                int alt256=2;
                alt256 = dfa256.predict(input);
                switch (alt256) {
            	case 1 :
            	    // InternalSCTX.g:7501:4: (lv_declarations_3_0= ruleDeclaration )
            	    {
            	    // InternalSCTX.g:7501:4: (lv_declarations_3_0= ruleDeclaration )
            	    // InternalSCTX.g:7502:5: lv_declarations_3_0= ruleDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getScopeAccess().getDeclarationsDeclarationParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_159);
            	    lv_declarations_3_0=ruleDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getScopeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_3_0,
            	      						"de.cau.cs.kieler.sccharts.text.SCTX.Declaration");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop256;
                }
            } while (true);

            // InternalSCTX.g:7519:3: ( (lv_entities_4_0= ruleTestEntity ) )*
            loop257:
            do {
                int alt257=2;
                int LA257_0 = input.LA(1);

                if ( (LA257_0==RULE_ID||LA257_0==RULE_HOSTCODE||LA257_0==RULE_COMMENT_ANNOTATION||LA257_0==21||(LA257_0>=72 && LA257_0<=73)||LA257_0==76||(LA257_0>=80 && LA257_0<=81)||LA257_0==103) ) {
                    alt257=1;
                }


                switch (alt257) {
            	case 1 :
            	    // InternalSCTX.g:7520:4: (lv_entities_4_0= ruleTestEntity )
            	    {
            	    // InternalSCTX.g:7520:4: (lv_entities_4_0= ruleTestEntity )
            	    // InternalSCTX.g:7521:5: lv_entities_4_0= ruleTestEntity
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getScopeAccess().getEntitiesTestEntityParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_160);
            	    lv_entities_4_0=ruleTestEntity();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getScopeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"entities",
            	      						lv_entities_4_0,
            	      						"de.cau.cs.kieler.kexpressions.kext.KExt.TestEntity");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop257;
                }
            } while (true);

            // InternalSCTX.g:7538:3: (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )*
            loop258:
            do {
                int alt258=2;
                int LA258_0 = input.LA(1);

                if ( (LA258_0==71) ) {
                    alt258=1;
                }


                switch (alt258) {
            	case 1 :
            	    // InternalSCTX.g:7539:4: otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) )
            	    {
            	    otherlv_5=(Token)match(input,71,FollowSets000.FOLLOW_26); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_5, grammarAccess.getScopeAccess().getScopeKeyword_5_0());
            	      			
            	    }
            	    // InternalSCTX.g:7543:4: ( (lv_scopes_6_0= ruleScope ) )
            	    // InternalSCTX.g:7544:5: (lv_scopes_6_0= ruleScope )
            	    {
            	    // InternalSCTX.g:7544:5: (lv_scopes_6_0= ruleScope )
            	    // InternalSCTX.g:7545:6: lv_scopes_6_0= ruleScope
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getScopeAccess().getScopesScopeParserRuleCall_5_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_161);
            	    lv_scopes_6_0=ruleScope();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getScopeRule());
            	      						}
            	      						add(
            	      							current,
            	      							"scopes",
            	      							lv_scopes_6_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.Scope");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop258;
                }
            } while (true);

            otherlv_7=(Token)match(input,22,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getScopeAccess().getRightCurlyBracketKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScope"


    // $ANTLR start "entryRuleTestEntity"
    // InternalSCTX.g:7571:1: entryRuleTestEntity returns [EObject current=null] : iv_ruleTestEntity= ruleTestEntity EOF ;
    public final EObject entryRuleTestEntity() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTestEntity = null;


        try {
            // InternalSCTX.g:7571:51: (iv_ruleTestEntity= ruleTestEntity EOF )
            // InternalSCTX.g:7572:2: iv_ruleTestEntity= ruleTestEntity EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTestEntityRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTestEntity=ruleTestEntity();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTestEntity; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTestEntity"


    // $ANTLR start "ruleTestEntity"
    // InternalSCTX.g:7578:1: ruleTestEntity returns [EObject current=null] : ( ( ( (lv_expression_0_1= ruleAnnotatedExpression | lv_expression_0_2= ruleAnnotatedJsonExpression ) ) ) | ( (lv_effect_1_0= ruleEffect ) ) ) ;
    public final EObject ruleTestEntity() throws RecognitionException {
        EObject current = null;

        EObject lv_expression_0_1 = null;

        EObject lv_expression_0_2 = null;

        EObject lv_effect_1_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:7584:2: ( ( ( ( (lv_expression_0_1= ruleAnnotatedExpression | lv_expression_0_2= ruleAnnotatedJsonExpression ) ) ) | ( (lv_effect_1_0= ruleEffect ) ) ) )
            // InternalSCTX.g:7585:2: ( ( ( (lv_expression_0_1= ruleAnnotatedExpression | lv_expression_0_2= ruleAnnotatedJsonExpression ) ) ) | ( (lv_effect_1_0= ruleEffect ) ) )
            {
            // InternalSCTX.g:7585:2: ( ( ( (lv_expression_0_1= ruleAnnotatedExpression | lv_expression_0_2= ruleAnnotatedJsonExpression ) ) ) | ( (lv_effect_1_0= ruleEffect ) ) )
            int alt260=2;
            alt260 = dfa260.predict(input);
            switch (alt260) {
                case 1 :
                    // InternalSCTX.g:7586:3: ( ( (lv_expression_0_1= ruleAnnotatedExpression | lv_expression_0_2= ruleAnnotatedJsonExpression ) ) )
                    {
                    // InternalSCTX.g:7586:3: ( ( (lv_expression_0_1= ruleAnnotatedExpression | lv_expression_0_2= ruleAnnotatedJsonExpression ) ) )
                    // InternalSCTX.g:7587:4: ( (lv_expression_0_1= ruleAnnotatedExpression | lv_expression_0_2= ruleAnnotatedJsonExpression ) )
                    {
                    // InternalSCTX.g:7587:4: ( (lv_expression_0_1= ruleAnnotatedExpression | lv_expression_0_2= ruleAnnotatedJsonExpression ) )
                    // InternalSCTX.g:7588:5: (lv_expression_0_1= ruleAnnotatedExpression | lv_expression_0_2= ruleAnnotatedJsonExpression )
                    {
                    // InternalSCTX.g:7588:5: (lv_expression_0_1= ruleAnnotatedExpression | lv_expression_0_2= ruleAnnotatedJsonExpression )
                    int alt259=2;
                    switch ( input.LA(1) ) {
                    case RULE_COMMENT_ANNOTATION:
                        {
                        int LA259_1 = input.LA(2);

                        if ( (synpred280_InternalSCTX()) ) {
                            alt259=1;
                        }
                        else if ( (true) ) {
                            alt259=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 259, 1, input);

                            throw nvae;
                        }
                        }
                        break;
                    case 103:
                        {
                        int LA259_2 = input.LA(2);

                        if ( (synpred280_InternalSCTX()) ) {
                            alt259=1;
                        }
                        else if ( (true) ) {
                            alt259=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 259, 2, input);

                            throw nvae;
                        }
                        }
                        break;
                    case 72:
                        {
                        alt259=1;
                        }
                        break;
                    case 73:
                        {
                        alt259=2;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 259, 0, input);

                        throw nvae;
                    }

                    switch (alt259) {
                        case 1 :
                            // InternalSCTX.g:7589:6: lv_expression_0_1= ruleAnnotatedExpression
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTestEntityAccess().getExpressionAnnotatedExpressionParserRuleCall_0_0_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_expression_0_1=ruleAnnotatedExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTestEntityRule());
                              						}
                              						set(
                              							current,
                              							"expression",
                              							lv_expression_0_1,
                              							"de.cau.cs.kieler.kexpressions.kext.KExt.AnnotatedExpression");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalSCTX.g:7605:6: lv_expression_0_2= ruleAnnotatedJsonExpression
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTestEntityAccess().getExpressionAnnotatedJsonExpressionParserRuleCall_0_0_1());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_expression_0_2=ruleAnnotatedJsonExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTestEntityRule());
                              						}
                              						set(
                              							current,
                              							"expression",
                              							lv_expression_0_2,
                              							"de.cau.cs.kieler.kexpressions.kext.KExt.AnnotatedJsonExpression");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:7624:3: ( (lv_effect_1_0= ruleEffect ) )
                    {
                    // InternalSCTX.g:7624:3: ( (lv_effect_1_0= ruleEffect ) )
                    // InternalSCTX.g:7625:4: (lv_effect_1_0= ruleEffect )
                    {
                    // InternalSCTX.g:7625:4: (lv_effect_1_0= ruleEffect )
                    // InternalSCTX.g:7626:5: lv_effect_1_0= ruleEffect
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTestEntityAccess().getEffectEffectParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_effect_1_0=ruleEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTestEntityRule());
                      					}
                      					set(
                      						current,
                      						"effect",
                      						lv_effect_1_0,
                      						"de.cau.cs.kieler.sccharts.text.SCTX.Effect");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTestEntity"


    // $ANTLR start "entryRuleAnnotatedExpression"
    // InternalSCTX.g:7647:1: entryRuleAnnotatedExpression returns [EObject current=null] : iv_ruleAnnotatedExpression= ruleAnnotatedExpression EOF ;
    public final EObject entryRuleAnnotatedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotatedExpression = null;


        try {
            // InternalSCTX.g:7647:60: (iv_ruleAnnotatedExpression= ruleAnnotatedExpression EOF )
            // InternalSCTX.g:7648:2: iv_ruleAnnotatedExpression= ruleAnnotatedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotatedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAnnotatedExpression=ruleAnnotatedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotatedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotatedExpression"


    // $ANTLR start "ruleAnnotatedExpression"
    // InternalSCTX.g:7654:1: ruleAnnotatedExpression returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'expression' ( (lv_expression_2_0= ruleExpression ) ) ) ;
    public final EObject ruleAnnotatedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_expression_2_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:7660:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'expression' ( (lv_expression_2_0= ruleExpression ) ) ) )
            // InternalSCTX.g:7661:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'expression' ( (lv_expression_2_0= ruleExpression ) ) )
            {
            // InternalSCTX.g:7661:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'expression' ( (lv_expression_2_0= ruleExpression ) ) )
            // InternalSCTX.g:7662:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'expression' ( (lv_expression_2_0= ruleExpression ) )
            {
            // InternalSCTX.g:7662:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop261:
            do {
                int alt261=2;
                int LA261_0 = input.LA(1);

                if ( (LA261_0==RULE_COMMENT_ANNOTATION||LA261_0==103) ) {
                    alt261=1;
                }


                switch (alt261) {
            	case 1 :
            	    // InternalSCTX.g:7663:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:7663:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:7664:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAnnotatedExpressionAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_162);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAnnotatedExpressionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop261;
                }
            } while (true);

            otherlv_1=(Token)match(input,72,FollowSets000.FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAnnotatedExpressionAccess().getExpressionKeyword_1());
              		
            }
            // InternalSCTX.g:7685:3: ( (lv_expression_2_0= ruleExpression ) )
            // InternalSCTX.g:7686:4: (lv_expression_2_0= ruleExpression )
            {
            // InternalSCTX.g:7686:4: (lv_expression_2_0= ruleExpression )
            // InternalSCTX.g:7687:5: lv_expression_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAnnotatedExpressionAccess().getExpressionExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_expression_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAnnotatedExpressionRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnnotatedExpression"


    // $ANTLR start "entryRuleAnnotatedJsonExpression"
    // InternalSCTX.g:7708:1: entryRuleAnnotatedJsonExpression returns [EObject current=null] : iv_ruleAnnotatedJsonExpression= ruleAnnotatedJsonExpression EOF ;
    public final EObject entryRuleAnnotatedJsonExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotatedJsonExpression = null;


        try {
            // InternalSCTX.g:7708:64: (iv_ruleAnnotatedJsonExpression= ruleAnnotatedJsonExpression EOF )
            // InternalSCTX.g:7709:2: iv_ruleAnnotatedJsonExpression= ruleAnnotatedJsonExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotatedJsonExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAnnotatedJsonExpression=ruleAnnotatedJsonExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotatedJsonExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotatedJsonExpression"


    // $ANTLR start "ruleAnnotatedJsonExpression"
    // InternalSCTX.g:7715:1: ruleAnnotatedJsonExpression returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'json' ( (lv_expression_2_0= ruleJsonObjectValue ) ) ) ;
    public final EObject ruleAnnotatedJsonExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_expression_2_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:7721:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'json' ( (lv_expression_2_0= ruleJsonObjectValue ) ) ) )
            // InternalSCTX.g:7722:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'json' ( (lv_expression_2_0= ruleJsonObjectValue ) ) )
            {
            // InternalSCTX.g:7722:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'json' ( (lv_expression_2_0= ruleJsonObjectValue ) ) )
            // InternalSCTX.g:7723:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'json' ( (lv_expression_2_0= ruleJsonObjectValue ) )
            {
            // InternalSCTX.g:7723:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop262:
            do {
                int alt262=2;
                int LA262_0 = input.LA(1);

                if ( (LA262_0==RULE_COMMENT_ANNOTATION||LA262_0==103) ) {
                    alt262=1;
                }


                switch (alt262) {
            	case 1 :
            	    // InternalSCTX.g:7724:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:7724:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:7725:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAnnotatedJsonExpressionAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_163);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAnnotatedJsonExpressionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop262;
                }
            } while (true);

            otherlv_1=(Token)match(input,73,FollowSets000.FOLLOW_110); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAnnotatedJsonExpressionAccess().getJsonKeyword_1());
              		
            }
            // InternalSCTX.g:7746:3: ( (lv_expression_2_0= ruleJsonObjectValue ) )
            // InternalSCTX.g:7747:4: (lv_expression_2_0= ruleJsonObjectValue )
            {
            // InternalSCTX.g:7747:4: (lv_expression_2_0= ruleJsonObjectValue )
            // InternalSCTX.g:7748:5: lv_expression_2_0= ruleJsonObjectValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAnnotatedJsonExpressionAccess().getExpressionJsonObjectValueParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_expression_2_0=ruleJsonObjectValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAnnotatedJsonExpressionRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.JsonObjectValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnnotatedJsonExpression"


    // $ANTLR start "entrySuperDeclaration"
    // InternalSCTX.g:7769:1: entrySuperDeclaration returns [EObject current=null] : iv_superDeclaration= superDeclaration EOF ;
    public final EObject entrySuperDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_superDeclaration = null;


        try {
            // InternalSCTX.g:7769:53: (iv_superDeclaration= superDeclaration EOF )
            // InternalSCTX.g:7770:2: iv_superDeclaration= superDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getKExtDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_superDeclaration=superDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_superDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entrySuperDeclaration"


    // $ANTLR start "superDeclaration"
    // InternalSCTX.g:7776:1: superDeclaration returns [EObject current=null] : (this_VariableDeclaration_0= ruleVariableDeclaration | this_ReferenceDeclaration_1= ruleReferenceDeclaration | this_ScheduleDeclaration_2= ruleScheduleDeclaration | this_ClassDeclaration_3= ruleClassDeclaration ) ;
    public final EObject superDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_VariableDeclaration_0 = null;

        EObject this_ReferenceDeclaration_1 = null;

        EObject this_ScheduleDeclaration_2 = null;

        EObject this_ClassDeclaration_3 = null;



        	enterRule();

        try {
            // InternalSCTX.g:7782:2: ( (this_VariableDeclaration_0= ruleVariableDeclaration | this_ReferenceDeclaration_1= ruleReferenceDeclaration | this_ScheduleDeclaration_2= ruleScheduleDeclaration | this_ClassDeclaration_3= ruleClassDeclaration ) )
            // InternalSCTX.g:7783:2: (this_VariableDeclaration_0= ruleVariableDeclaration | this_ReferenceDeclaration_1= ruleReferenceDeclaration | this_ScheduleDeclaration_2= ruleScheduleDeclaration | this_ClassDeclaration_3= ruleClassDeclaration )
            {
            // InternalSCTX.g:7783:2: (this_VariableDeclaration_0= ruleVariableDeclaration | this_ReferenceDeclaration_1= ruleReferenceDeclaration | this_ScheduleDeclaration_2= ruleScheduleDeclaration | this_ClassDeclaration_3= ruleClassDeclaration )
            int alt263=4;
            alt263 = dfa263.predict(input);
            switch (alt263) {
                case 1 :
                    // InternalSCTX.g:7784:3: this_VariableDeclaration_0= ruleVariableDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getKExtDeclarationAccess().getVariableDeclarationParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_VariableDeclaration_0=ruleVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_VariableDeclaration_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:7796:3: this_ReferenceDeclaration_1= ruleReferenceDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getKExtDeclarationAccess().getReferenceDeclarationParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ReferenceDeclaration_1=ruleReferenceDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ReferenceDeclaration_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:7808:3: this_ScheduleDeclaration_2= ruleScheduleDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getKExtDeclarationAccess().getScheduleDeclarationParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ScheduleDeclaration_2=ruleScheduleDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ScheduleDeclaration_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSCTX.g:7820:3: this_ClassDeclaration_3= ruleClassDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getKExtDeclarationAccess().getClassDeclarationParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ClassDeclaration_3=ruleClassDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ClassDeclaration_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "superDeclaration"


    // $ANTLR start "entryRuleDeclarationWOSemicolon"
    // InternalSCTX.g:7835:1: entryRuleDeclarationWOSemicolon returns [EObject current=null] : iv_ruleDeclarationWOSemicolon= ruleDeclarationWOSemicolon EOF ;
    public final EObject entryRuleDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDeclarationWOSemicolon = null;


        try {
            // InternalSCTX.g:7835:63: (iv_ruleDeclarationWOSemicolon= ruleDeclarationWOSemicolon EOF )
            // InternalSCTX.g:7836:2: iv_ruleDeclarationWOSemicolon= ruleDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDeclarationWOSemicolon=ruleDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDeclarationWOSemicolon"


    // $ANTLR start "ruleDeclarationWOSemicolon"
    // InternalSCTX.g:7842:1: ruleDeclarationWOSemicolon returns [EObject current=null] : (this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon | this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon | this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon | this_ClassDeclarationWOSemicolon_3= ruleClassDeclarationWOSemicolon ) ;
    public final EObject ruleDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject this_VariableDeclarationWOSemicolon_0 = null;

        EObject this_ReferenceDeclarationWOSemicolon_1 = null;

        EObject this_ScheduleDeclarationWOSemicolon_2 = null;

        EObject this_ClassDeclarationWOSemicolon_3 = null;



        	enterRule();

        try {
            // InternalSCTX.g:7848:2: ( (this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon | this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon | this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon | this_ClassDeclarationWOSemicolon_3= ruleClassDeclarationWOSemicolon ) )
            // InternalSCTX.g:7849:2: (this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon | this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon | this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon | this_ClassDeclarationWOSemicolon_3= ruleClassDeclarationWOSemicolon )
            {
            // InternalSCTX.g:7849:2: (this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon | this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon | this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon | this_ClassDeclarationWOSemicolon_3= ruleClassDeclarationWOSemicolon )
            int alt264=4;
            alt264 = dfa264.predict(input);
            switch (alt264) {
                case 1 :
                    // InternalSCTX.g:7850:3: this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationWOSemicolonAccess().getVariableDeclarationWOSemicolonParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_VariableDeclarationWOSemicolon_0=ruleVariableDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_VariableDeclarationWOSemicolon_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:7862:3: this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationWOSemicolonAccess().getReferenceDeclarationWOSemicolonParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ReferenceDeclarationWOSemicolon_1=ruleReferenceDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ReferenceDeclarationWOSemicolon_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:7874:3: this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationWOSemicolonAccess().getScheduleDeclarationWOSemicolonParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ScheduleDeclarationWOSemicolon_2=ruleScheduleDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ScheduleDeclarationWOSemicolon_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSCTX.g:7886:3: this_ClassDeclarationWOSemicolon_3= ruleClassDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationWOSemicolonAccess().getClassDeclarationWOSemicolonParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ClassDeclarationWOSemicolon_3=ruleClassDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ClassDeclarationWOSemicolon_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDeclarationWOSemicolon"


    // $ANTLR start "entryRuleVariableDeclaration"
    // InternalSCTX.g:7901:1: entryRuleVariableDeclaration returns [EObject current=null] : iv_ruleVariableDeclaration= ruleVariableDeclaration EOF ;
    public final EObject entryRuleVariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVariableDeclaration = null;


        try {
            // InternalSCTX.g:7901:60: (iv_ruleVariableDeclaration= ruleVariableDeclaration EOF )
            // InternalSCTX.g:7902:2: iv_ruleVariableDeclaration= ruleVariableDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVariableDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleVariableDeclaration=ruleVariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVariableDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVariableDeclaration"


    // $ANTLR start "ruleVariableDeclaration"
    // InternalSCTX.g:7908:1: ruleVariableDeclaration returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* otherlv_15= ';' ( (lv_annotations_16_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleVariableDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_const_2_0=null;
        Token lv_input_3_0=null;
        Token lv_output_4_0=null;
        Token lv_global_5_0=null;
        Token lv_static_6_0=null;
        Token lv_signal_7_0=null;
        Token lv_signal_9_0=null;
        Token lv_hostType_11_0=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        EObject lv_annotations_0_0 = null;

        Enumerator lv_access_1_0 = null;

        Enumerator lv_type_8_0 = null;

        Enumerator lv_type_10_0 = null;

        EObject lv_valuedObjects_12_0 = null;

        EObject lv_valuedObjects_14_0 = null;

        EObject lv_annotations_16_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:7914:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* otherlv_15= ';' ( (lv_annotations_16_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalSCTX.g:7915:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* otherlv_15= ';' ( (lv_annotations_16_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalSCTX.g:7915:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* otherlv_15= ';' ( (lv_annotations_16_0= ruleCommentAnnotatonSL ) )? )
            // InternalSCTX.g:7916:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* otherlv_15= ';' ( (lv_annotations_16_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalSCTX.g:7916:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop265:
            do {
                int alt265=2;
                int LA265_0 = input.LA(1);

                if ( (LA265_0==RULE_COMMENT_ANNOTATION||LA265_0==103) ) {
                    alt265=1;
                }


                switch (alt265) {
            	case 1 :
            	    // InternalSCTX.g:7917:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:7917:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:7918:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getVariableDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_131);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop265;
                }
            } while (true);

            // InternalSCTX.g:7935:3: ( (lv_access_1_0= ruleAccessModifier ) )?
            int alt266=2;
            int LA266_0 = input.LA(1);

            if ( ((LA266_0>=155 && LA266_0<=157)) ) {
                alt266=1;
            }
            switch (alt266) {
                case 1 :
                    // InternalSCTX.g:7936:4: (lv_access_1_0= ruleAccessModifier )
                    {
                    // InternalSCTX.g:7936:4: (lv_access_1_0= ruleAccessModifier )
                    // InternalSCTX.g:7937:5: lv_access_1_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getVariableDeclarationAccess().getAccessAccessModifierEnumRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_131);
                    lv_access_1_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_1_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:7954:3: ( (lv_const_2_0= 'const' ) )?
            int alt267=2;
            int LA267_0 = input.LA(1);

            if ( (LA267_0==56) ) {
                alt267=1;
            }
            switch (alt267) {
                case 1 :
                    // InternalSCTX.g:7955:4: (lv_const_2_0= 'const' )
                    {
                    // InternalSCTX.g:7955:4: (lv_const_2_0= 'const' )
                    // InternalSCTX.g:7956:5: lv_const_2_0= 'const'
                    {
                    lv_const_2_0=(Token)match(input,56,FollowSets000.FOLLOW_131); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_const_2_0, grammarAccess.getVariableDeclarationAccess().getConstConstKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "const", true, "const");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:7968:3: ( (lv_input_3_0= 'input' ) )?
            int alt268=2;
            int LA268_0 = input.LA(1);

            if ( (LA268_0==57) ) {
                alt268=1;
            }
            switch (alt268) {
                case 1 :
                    // InternalSCTX.g:7969:4: (lv_input_3_0= 'input' )
                    {
                    // InternalSCTX.g:7969:4: (lv_input_3_0= 'input' )
                    // InternalSCTX.g:7970:5: lv_input_3_0= 'input'
                    {
                    lv_input_3_0=(Token)match(input,57,FollowSets000.FOLLOW_131); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_input_3_0, grammarAccess.getVariableDeclarationAccess().getInputInputKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "input", true, "input");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:7982:3: ( (lv_output_4_0= 'output' ) )?
            int alt269=2;
            int LA269_0 = input.LA(1);

            if ( (LA269_0==58) ) {
                alt269=1;
            }
            switch (alt269) {
                case 1 :
                    // InternalSCTX.g:7983:4: (lv_output_4_0= 'output' )
                    {
                    // InternalSCTX.g:7983:4: (lv_output_4_0= 'output' )
                    // InternalSCTX.g:7984:5: lv_output_4_0= 'output'
                    {
                    lv_output_4_0=(Token)match(input,58,FollowSets000.FOLLOW_131); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_output_4_0, grammarAccess.getVariableDeclarationAccess().getOutputOutputKeyword_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "output", true, "output");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:7996:3: ( (lv_global_5_0= 'global' ) )?
            int alt270=2;
            int LA270_0 = input.LA(1);

            if ( (LA270_0==59) ) {
                alt270=1;
            }
            switch (alt270) {
                case 1 :
                    // InternalSCTX.g:7997:4: (lv_global_5_0= 'global' )
                    {
                    // InternalSCTX.g:7997:4: (lv_global_5_0= 'global' )
                    // InternalSCTX.g:7998:5: lv_global_5_0= 'global'
                    {
                    lv_global_5_0=(Token)match(input,59,FollowSets000.FOLLOW_131); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_global_5_0, grammarAccess.getVariableDeclarationAccess().getGlobalGlobalKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "global", true, "global");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:8010:3: ( (lv_static_6_0= 'static' ) )?
            int alt271=2;
            int LA271_0 = input.LA(1);

            if ( (LA271_0==60) ) {
                alt271=1;
            }
            switch (alt271) {
                case 1 :
                    // InternalSCTX.g:8011:4: (lv_static_6_0= 'static' )
                    {
                    // InternalSCTX.g:8011:4: (lv_static_6_0= 'static' )
                    // InternalSCTX.g:8012:5: lv_static_6_0= 'static'
                    {
                    lv_static_6_0=(Token)match(input,60,FollowSets000.FOLLOW_131); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_static_6_0, grammarAccess.getVariableDeclarationAccess().getStaticStaticKeyword_6_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "static", true, "static");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:8024:3: ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) )
            int alt273=3;
            switch ( input.LA(1) ) {
            case 74:
                {
                int LA273_1 = input.LA(2);

                if ( ((LA273_1>=116 && LA273_1<=121)) ) {
                    alt273=1;
                }
                else if ( (LA273_1==RULE_ID||LA273_1==RULE_COMMENT_ANNOTATION||LA273_1==103) ) {
                    alt273=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 273, 1, input);

                    throw nvae;
                }
                }
                break;
            case 116:
            case 117:
            case 118:
            case 119:
            case 120:
            case 121:
                {
                alt273=1;
                }
                break;
            case 61:
                {
                alt273=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 273, 0, input);

                throw nvae;
            }

            switch (alt273) {
                case 1 :
                    // InternalSCTX.g:8025:4: ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) )
                    {
                    // InternalSCTX.g:8025:4: ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) )
                    // InternalSCTX.g:8026:5: ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) )
                    {
                    // InternalSCTX.g:8026:5: ( (lv_signal_7_0= 'signal' ) )?
                    int alt272=2;
                    int LA272_0 = input.LA(1);

                    if ( (LA272_0==74) ) {
                        alt272=1;
                    }
                    switch (alt272) {
                        case 1 :
                            // InternalSCTX.g:8027:6: (lv_signal_7_0= 'signal' )
                            {
                            // InternalSCTX.g:8027:6: (lv_signal_7_0= 'signal' )
                            // InternalSCTX.g:8028:7: lv_signal_7_0= 'signal'
                            {
                            lv_signal_7_0=(Token)match(input,74,FollowSets000.FOLLOW_164); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_signal_7_0, grammarAccess.getVariableDeclarationAccess().getSignalSignalKeyword_7_0_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getVariableDeclarationRule());
                              							}
                              							setWithLastConsumed(current, "signal", true, "signal");
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalSCTX.g:8040:5: ( (lv_type_8_0= ruleValueType ) )
                    // InternalSCTX.g:8041:6: (lv_type_8_0= ruleValueType )
                    {
                    // InternalSCTX.g:8041:6: (lv_type_8_0= ruleValueType )
                    // InternalSCTX.g:8042:7: lv_type_8_0= ruleValueType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getVariableDeclarationAccess().getTypeValueTypeEnumRuleCall_7_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_116);
                    lv_type_8_0=ruleValueType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_8_0,
                      								"de.cau.cs.kieler.sccharts.text.SCTX.ValueType");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:8061:4: ( (lv_signal_9_0= 'signal' ) )
                    {
                    // InternalSCTX.g:8061:4: ( (lv_signal_9_0= 'signal' ) )
                    // InternalSCTX.g:8062:5: (lv_signal_9_0= 'signal' )
                    {
                    // InternalSCTX.g:8062:5: (lv_signal_9_0= 'signal' )
                    // InternalSCTX.g:8063:6: lv_signal_9_0= 'signal'
                    {
                    lv_signal_9_0=(Token)match(input,74,FollowSets000.FOLLOW_116); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_signal_9_0, grammarAccess.getVariableDeclarationAccess().getSignalSignalKeyword_7_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      						}
                      						setWithLastConsumed(current, "signal", true, "signal");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSCTX.g:8076:4: ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) )
                    {
                    // InternalSCTX.g:8076:4: ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) )
                    // InternalSCTX.g:8077:5: ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) )
                    {
                    // InternalSCTX.g:8077:5: ( (lv_type_10_0= ruleHostType ) )
                    // InternalSCTX.g:8078:6: (lv_type_10_0= ruleHostType )
                    {
                    // InternalSCTX.g:8078:6: (lv_type_10_0= ruleHostType )
                    // InternalSCTX.g:8079:7: lv_type_10_0= ruleHostType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getVariableDeclarationAccess().getTypeHostTypeEnumRuleCall_7_2_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_47);
                    lv_type_10_0=ruleHostType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_10_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.HostType");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:8096:5: ( (lv_hostType_11_0= RULE_STRING ) )
                    // InternalSCTX.g:8097:6: (lv_hostType_11_0= RULE_STRING )
                    {
                    // InternalSCTX.g:8097:6: (lv_hostType_11_0= RULE_STRING )
                    // InternalSCTX.g:8098:7: lv_hostType_11_0= RULE_STRING
                    {
                    lv_hostType_11_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_116); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_hostType_11_0, grammarAccess.getVariableDeclarationAccess().getHostTypeSTRINGTerminalRuleCall_7_2_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"hostType",
                      								lv_hostType_11_0,
                      								"de.cau.cs.kieler.annotations.Annotations.STRING");
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:8116:3: ( (lv_valuedObjects_12_0= ruleValuedObject ) )
            // InternalSCTX.g:8117:4: (lv_valuedObjects_12_0= ruleValuedObject )
            {
            // InternalSCTX.g:8117:4: (lv_valuedObjects_12_0= ruleValuedObject )
            // InternalSCTX.g:8118:5: lv_valuedObjects_12_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getVariableDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_8_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_165);
            lv_valuedObjects_12_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_12_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:8135:3: (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )*
            loop274:
            do {
                int alt274=2;
                int LA274_0 = input.LA(1);

                if ( (LA274_0==20) ) {
                    alt274=1;
                }


                switch (alt274) {
            	case 1 :
            	    // InternalSCTX.g:8136:4: otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) )
            	    {
            	    otherlv_13=(Token)match(input,20,FollowSets000.FOLLOW_116); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_13, grammarAccess.getVariableDeclarationAccess().getCommaKeyword_9_0());
            	      			
            	    }
            	    // InternalSCTX.g:8140:4: ( (lv_valuedObjects_14_0= ruleValuedObject ) )
            	    // InternalSCTX.g:8141:5: (lv_valuedObjects_14_0= ruleValuedObject )
            	    {
            	    // InternalSCTX.g:8141:5: (lv_valuedObjects_14_0= ruleValuedObject )
            	    // InternalSCTX.g:8142:6: lv_valuedObjects_14_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getVariableDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_9_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_165);
            	    lv_valuedObjects_14_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"valuedObjects",
            	      							lv_valuedObjects_14_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop274;
                }
            } while (true);

            otherlv_15=(Token)match(input,40,FollowSets000.FOLLOW_155); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_15, grammarAccess.getVariableDeclarationAccess().getSemicolonKeyword_10());
              		
            }
            // InternalSCTX.g:8164:3: ( (lv_annotations_16_0= ruleCommentAnnotatonSL ) )?
            int alt275=2;
            int LA275_0 = input.LA(1);

            if ( (LA275_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt275=1;
            }
            switch (alt275) {
                case 1 :
                    // InternalSCTX.g:8165:4: (lv_annotations_16_0= ruleCommentAnnotatonSL )
                    {
                    // InternalSCTX.g:8165:4: (lv_annotations_16_0= ruleCommentAnnotatonSL )
                    // InternalSCTX.g:8166:5: lv_annotations_16_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getVariableDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_11_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_16_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_16_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVariableDeclaration"


    // $ANTLR start "entryRuleVariableDeclarationWOSemicolon"
    // InternalSCTX.g:8187:1: entryRuleVariableDeclarationWOSemicolon returns [EObject current=null] : iv_ruleVariableDeclarationWOSemicolon= ruleVariableDeclarationWOSemicolon EOF ;
    public final EObject entryRuleVariableDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVariableDeclarationWOSemicolon = null;


        try {
            // InternalSCTX.g:8187:71: (iv_ruleVariableDeclarationWOSemicolon= ruleVariableDeclarationWOSemicolon EOF )
            // InternalSCTX.g:8188:2: iv_ruleVariableDeclarationWOSemicolon= ruleVariableDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleVariableDeclarationWOSemicolon=ruleVariableDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVariableDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVariableDeclarationWOSemicolon"


    // $ANTLR start "ruleVariableDeclarationWOSemicolon"
    // InternalSCTX.g:8194:1: ruleVariableDeclarationWOSemicolon returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleVariableDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        Token lv_const_2_0=null;
        Token lv_input_3_0=null;
        Token lv_output_4_0=null;
        Token lv_global_5_0=null;
        Token lv_static_6_0=null;
        Token lv_signal_7_0=null;
        Token lv_signal_9_0=null;
        Token lv_hostType_11_0=null;
        Token otherlv_13=null;
        EObject lv_annotations_0_0 = null;

        Enumerator lv_access_1_0 = null;

        Enumerator lv_type_8_0 = null;

        Enumerator lv_type_10_0 = null;

        EObject lv_valuedObjects_12_0 = null;

        EObject lv_valuedObjects_14_0 = null;

        EObject lv_annotations_15_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:8200:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalSCTX.g:8201:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalSCTX.g:8201:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? )
            // InternalSCTX.g:8202:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalSCTX.g:8202:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop276:
            do {
                int alt276=2;
                int LA276_0 = input.LA(1);

                if ( (LA276_0==RULE_COMMENT_ANNOTATION||LA276_0==103) ) {
                    alt276=1;
                }


                switch (alt276) {
            	case 1 :
            	    // InternalSCTX.g:8203:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:8203:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:8204:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_131);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop276;
                }
            } while (true);

            // InternalSCTX.g:8221:3: ( (lv_access_1_0= ruleAccessModifier ) )?
            int alt277=2;
            int LA277_0 = input.LA(1);

            if ( ((LA277_0>=155 && LA277_0<=157)) ) {
                alt277=1;
            }
            switch (alt277) {
                case 1 :
                    // InternalSCTX.g:8222:4: (lv_access_1_0= ruleAccessModifier )
                    {
                    // InternalSCTX.g:8222:4: (lv_access_1_0= ruleAccessModifier )
                    // InternalSCTX.g:8223:5: lv_access_1_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getAccessAccessModifierEnumRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_131);
                    lv_access_1_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_1_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:8240:3: ( (lv_const_2_0= 'const' ) )?
            int alt278=2;
            int LA278_0 = input.LA(1);

            if ( (LA278_0==56) ) {
                alt278=1;
            }
            switch (alt278) {
                case 1 :
                    // InternalSCTX.g:8241:4: (lv_const_2_0= 'const' )
                    {
                    // InternalSCTX.g:8241:4: (lv_const_2_0= 'const' )
                    // InternalSCTX.g:8242:5: lv_const_2_0= 'const'
                    {
                    lv_const_2_0=(Token)match(input,56,FollowSets000.FOLLOW_131); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_const_2_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getConstConstKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "const", true, "const");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:8254:3: ( (lv_input_3_0= 'input' ) )?
            int alt279=2;
            int LA279_0 = input.LA(1);

            if ( (LA279_0==57) ) {
                alt279=1;
            }
            switch (alt279) {
                case 1 :
                    // InternalSCTX.g:8255:4: (lv_input_3_0= 'input' )
                    {
                    // InternalSCTX.g:8255:4: (lv_input_3_0= 'input' )
                    // InternalSCTX.g:8256:5: lv_input_3_0= 'input'
                    {
                    lv_input_3_0=(Token)match(input,57,FollowSets000.FOLLOW_131); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_input_3_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getInputInputKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "input", true, "input");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:8268:3: ( (lv_output_4_0= 'output' ) )?
            int alt280=2;
            int LA280_0 = input.LA(1);

            if ( (LA280_0==58) ) {
                alt280=1;
            }
            switch (alt280) {
                case 1 :
                    // InternalSCTX.g:8269:4: (lv_output_4_0= 'output' )
                    {
                    // InternalSCTX.g:8269:4: (lv_output_4_0= 'output' )
                    // InternalSCTX.g:8270:5: lv_output_4_0= 'output'
                    {
                    lv_output_4_0=(Token)match(input,58,FollowSets000.FOLLOW_131); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_output_4_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getOutputOutputKeyword_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "output", true, "output");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:8282:3: ( (lv_global_5_0= 'global' ) )?
            int alt281=2;
            int LA281_0 = input.LA(1);

            if ( (LA281_0==59) ) {
                alt281=1;
            }
            switch (alt281) {
                case 1 :
                    // InternalSCTX.g:8283:4: (lv_global_5_0= 'global' )
                    {
                    // InternalSCTX.g:8283:4: (lv_global_5_0= 'global' )
                    // InternalSCTX.g:8284:5: lv_global_5_0= 'global'
                    {
                    lv_global_5_0=(Token)match(input,59,FollowSets000.FOLLOW_131); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_global_5_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getGlobalGlobalKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "global", true, "global");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:8296:3: ( (lv_static_6_0= 'static' ) )?
            int alt282=2;
            int LA282_0 = input.LA(1);

            if ( (LA282_0==60) ) {
                alt282=1;
            }
            switch (alt282) {
                case 1 :
                    // InternalSCTX.g:8297:4: (lv_static_6_0= 'static' )
                    {
                    // InternalSCTX.g:8297:4: (lv_static_6_0= 'static' )
                    // InternalSCTX.g:8298:5: lv_static_6_0= 'static'
                    {
                    lv_static_6_0=(Token)match(input,60,FollowSets000.FOLLOW_131); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_static_6_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getStaticStaticKeyword_6_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "static", true, "static");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:8310:3: ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) )
            int alt284=3;
            switch ( input.LA(1) ) {
            case 74:
                {
                int LA284_1 = input.LA(2);

                if ( (LA284_1==RULE_ID||LA284_1==RULE_COMMENT_ANNOTATION||LA284_1==103) ) {
                    alt284=2;
                }
                else if ( ((LA284_1>=116 && LA284_1<=121)) ) {
                    alt284=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 284, 1, input);

                    throw nvae;
                }
                }
                break;
            case 116:
            case 117:
            case 118:
            case 119:
            case 120:
            case 121:
                {
                alt284=1;
                }
                break;
            case 61:
                {
                alt284=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 284, 0, input);

                throw nvae;
            }

            switch (alt284) {
                case 1 :
                    // InternalSCTX.g:8311:4: ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) )
                    {
                    // InternalSCTX.g:8311:4: ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) )
                    // InternalSCTX.g:8312:5: ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) )
                    {
                    // InternalSCTX.g:8312:5: ( (lv_signal_7_0= 'signal' ) )?
                    int alt283=2;
                    int LA283_0 = input.LA(1);

                    if ( (LA283_0==74) ) {
                        alt283=1;
                    }
                    switch (alt283) {
                        case 1 :
                            // InternalSCTX.g:8313:6: (lv_signal_7_0= 'signal' )
                            {
                            // InternalSCTX.g:8313:6: (lv_signal_7_0= 'signal' )
                            // InternalSCTX.g:8314:7: lv_signal_7_0= 'signal'
                            {
                            lv_signal_7_0=(Token)match(input,74,FollowSets000.FOLLOW_164); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_signal_7_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getSignalSignalKeyword_7_0_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                              							}
                              							setWithLastConsumed(current, "signal", true, "signal");
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalSCTX.g:8326:5: ( (lv_type_8_0= ruleValueType ) )
                    // InternalSCTX.g:8327:6: (lv_type_8_0= ruleValueType )
                    {
                    // InternalSCTX.g:8327:6: (lv_type_8_0= ruleValueType )
                    // InternalSCTX.g:8328:7: lv_type_8_0= ruleValueType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getTypeValueTypeEnumRuleCall_7_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_116);
                    lv_type_8_0=ruleValueType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_8_0,
                      								"de.cau.cs.kieler.sccharts.text.SCTX.ValueType");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:8347:4: ( (lv_signal_9_0= 'signal' ) )
                    {
                    // InternalSCTX.g:8347:4: ( (lv_signal_9_0= 'signal' ) )
                    // InternalSCTX.g:8348:5: (lv_signal_9_0= 'signal' )
                    {
                    // InternalSCTX.g:8348:5: (lv_signal_9_0= 'signal' )
                    // InternalSCTX.g:8349:6: lv_signal_9_0= 'signal'
                    {
                    lv_signal_9_0=(Token)match(input,74,FollowSets000.FOLLOW_116); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_signal_9_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getSignalSignalKeyword_7_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      						}
                      						setWithLastConsumed(current, "signal", true, "signal");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSCTX.g:8362:4: ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) )
                    {
                    // InternalSCTX.g:8362:4: ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) )
                    // InternalSCTX.g:8363:5: ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) )
                    {
                    // InternalSCTX.g:8363:5: ( (lv_type_10_0= ruleHostType ) )
                    // InternalSCTX.g:8364:6: (lv_type_10_0= ruleHostType )
                    {
                    // InternalSCTX.g:8364:6: (lv_type_10_0= ruleHostType )
                    // InternalSCTX.g:8365:7: lv_type_10_0= ruleHostType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getTypeHostTypeEnumRuleCall_7_2_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_47);
                    lv_type_10_0=ruleHostType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_10_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.HostType");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:8382:5: ( (lv_hostType_11_0= RULE_STRING ) )
                    // InternalSCTX.g:8383:6: (lv_hostType_11_0= RULE_STRING )
                    {
                    // InternalSCTX.g:8383:6: (lv_hostType_11_0= RULE_STRING )
                    // InternalSCTX.g:8384:7: lv_hostType_11_0= RULE_STRING
                    {
                    lv_hostType_11_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_116); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_hostType_11_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getHostTypeSTRINGTerminalRuleCall_7_2_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"hostType",
                      								lv_hostType_11_0,
                      								"de.cau.cs.kieler.annotations.Annotations.STRING");
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:8402:3: ( (lv_valuedObjects_12_0= ruleValuedObject ) )
            // InternalSCTX.g:8403:4: (lv_valuedObjects_12_0= ruleValuedObject )
            {
            // InternalSCTX.g:8403:4: (lv_valuedObjects_12_0= ruleValuedObject )
            // InternalSCTX.g:8404:5: lv_valuedObjects_12_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_8_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_115);
            lv_valuedObjects_12_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_12_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:8421:3: (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )*
            loop285:
            do {
                int alt285=2;
                alt285 = dfa285.predict(input);
                switch (alt285) {
            	case 1 :
            	    // InternalSCTX.g:8422:4: otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) )
            	    {
            	    otherlv_13=(Token)match(input,20,FollowSets000.FOLLOW_116); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_13, grammarAccess.getVariableDeclarationWOSemicolonAccess().getCommaKeyword_9_0());
            	      			
            	    }
            	    // InternalSCTX.g:8426:4: ( (lv_valuedObjects_14_0= ruleValuedObject ) )
            	    // InternalSCTX.g:8427:5: (lv_valuedObjects_14_0= ruleValuedObject )
            	    {
            	    // InternalSCTX.g:8427:5: (lv_valuedObjects_14_0= ruleValuedObject )
            	    // InternalSCTX.g:8428:6: lv_valuedObjects_14_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_9_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_115);
            	    lv_valuedObjects_14_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
            	      						}
            	      						add(
            	      							current,
            	      							"valuedObjects",
            	      							lv_valuedObjects_14_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop285;
                }
            } while (true);

            // InternalSCTX.g:8446:3: ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )?
            int alt286=2;
            int LA286_0 = input.LA(1);

            if ( (LA286_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt286=1;
            }
            switch (alt286) {
                case 1 :
                    // InternalSCTX.g:8447:4: (lv_annotations_15_0= ruleCommentAnnotatonSL )
                    {
                    // InternalSCTX.g:8447:4: (lv_annotations_15_0= ruleCommentAnnotatonSL )
                    // InternalSCTX.g:8448:5: lv_annotations_15_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_10_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_15_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_15_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVariableDeclarationWOSemicolon"


    // $ANTLR start "entryRuleClassDeclaration"
    // InternalSCTX.g:8469:1: entryRuleClassDeclaration returns [EObject current=null] : iv_ruleClassDeclaration= ruleClassDeclaration EOF ;
    public final EObject entryRuleClassDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassDeclaration = null;


        try {
            // InternalSCTX.g:8469:57: (iv_ruleClassDeclaration= ruleClassDeclaration EOF )
            // InternalSCTX.g:8470:2: iv_ruleClassDeclaration= ruleClassDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleClassDeclaration=ruleClassDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassDeclaration"


    // $ANTLR start "ruleClassDeclaration"
    // InternalSCTX.g:8476:1: ruleClassDeclaration returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_host_8_0= 'host' ) )? ( ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= ruleEString ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationOrMethod ) )* otherlv_13= '}' ) | ( ( (lv_type_14_0= ruleStructType ) ) ( (lv_name_15_0= ruleEString ) )? otherlv_16= '{' ( (lv_declarations_17_0= ruleDeclaration ) )* otherlv_18= '}' ) ) ( ( (lv_valuedObjects_19_0= ruleValuedObject ) ) (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )* )? otherlv_22= ';' ( (lv_annotations_23_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleClassDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_const_3_0=null;
        Token lv_input_4_0=null;
        Token lv_output_5_0=null;
        Token lv_global_6_0=null;
        Token lv_static_7_0=null;
        Token lv_host_8_0=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        EObject lv_annotations_1_0 = null;

        Enumerator lv_access_2_0 = null;

        Enumerator lv_type_9_0 = null;

        AntlrDatatypeRuleToken lv_name_10_0 = null;

        EObject lv_declarations_12_0 = null;

        Enumerator lv_type_14_0 = null;

        AntlrDatatypeRuleToken lv_name_15_0 = null;

        EObject lv_declarations_17_0 = null;

        EObject lv_valuedObjects_19_0 = null;

        EObject lv_valuedObjects_21_0 = null;

        EObject lv_annotations_23_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:8482:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_host_8_0= 'host' ) )? ( ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= ruleEString ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationOrMethod ) )* otherlv_13= '}' ) | ( ( (lv_type_14_0= ruleStructType ) ) ( (lv_name_15_0= ruleEString ) )? otherlv_16= '{' ( (lv_declarations_17_0= ruleDeclaration ) )* otherlv_18= '}' ) ) ( ( (lv_valuedObjects_19_0= ruleValuedObject ) ) (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )* )? otherlv_22= ';' ( (lv_annotations_23_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalSCTX.g:8483:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_host_8_0= 'host' ) )? ( ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= ruleEString ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationOrMethod ) )* otherlv_13= '}' ) | ( ( (lv_type_14_0= ruleStructType ) ) ( (lv_name_15_0= ruleEString ) )? otherlv_16= '{' ( (lv_declarations_17_0= ruleDeclaration ) )* otherlv_18= '}' ) ) ( ( (lv_valuedObjects_19_0= ruleValuedObject ) ) (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )* )? otherlv_22= ';' ( (lv_annotations_23_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalSCTX.g:8483:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_host_8_0= 'host' ) )? ( ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= ruleEString ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationOrMethod ) )* otherlv_13= '}' ) | ( ( (lv_type_14_0= ruleStructType ) ) ( (lv_name_15_0= ruleEString ) )? otherlv_16= '{' ( (lv_declarations_17_0= ruleDeclaration ) )* otherlv_18= '}' ) ) ( ( (lv_valuedObjects_19_0= ruleValuedObject ) ) (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )* )? otherlv_22= ';' ( (lv_annotations_23_0= ruleCommentAnnotatonSL ) )? )
            // InternalSCTX.g:8484:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_host_8_0= 'host' ) )? ( ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= ruleEString ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationOrMethod ) )* otherlv_13= '}' ) | ( ( (lv_type_14_0= ruleStructType ) ) ( (lv_name_15_0= ruleEString ) )? otherlv_16= '{' ( (lv_declarations_17_0= ruleDeclaration ) )* otherlv_18= '}' ) ) ( ( (lv_valuedObjects_19_0= ruleValuedObject ) ) (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )* )? otherlv_22= ';' ( (lv_annotations_23_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalSCTX.g:8484:3: ()
            // InternalSCTX.g:8485:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getClassDeclarationAccess().getClassDeclarationAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:8494:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop287:
            do {
                int alt287=2;
                int LA287_0 = input.LA(1);

                if ( (LA287_0==RULE_COMMENT_ANNOTATION||LA287_0==103) ) {
                    alt287=1;
                }


                switch (alt287) {
            	case 1 :
            	    // InternalSCTX.g:8495:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:8495:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCTX.g:8496:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getClassDeclarationAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_108);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop287;
                }
            } while (true);

            // InternalSCTX.g:8513:3: ( (lv_access_2_0= ruleAccessModifier ) )?
            int alt288=2;
            int LA288_0 = input.LA(1);

            if ( ((LA288_0>=155 && LA288_0<=157)) ) {
                alt288=1;
            }
            switch (alt288) {
                case 1 :
                    // InternalSCTX.g:8514:4: (lv_access_2_0= ruleAccessModifier )
                    {
                    // InternalSCTX.g:8514:4: (lv_access_2_0= ruleAccessModifier )
                    // InternalSCTX.g:8515:5: lv_access_2_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassDeclarationAccess().getAccessAccessModifierEnumRuleCall_2_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_108);
                    lv_access_2_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_2_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:8532:3: ( (lv_const_3_0= 'const' ) )?
            int alt289=2;
            int LA289_0 = input.LA(1);

            if ( (LA289_0==56) ) {
                alt289=1;
            }
            switch (alt289) {
                case 1 :
                    // InternalSCTX.g:8533:4: (lv_const_3_0= 'const' )
                    {
                    // InternalSCTX.g:8533:4: (lv_const_3_0= 'const' )
                    // InternalSCTX.g:8534:5: lv_const_3_0= 'const'
                    {
                    lv_const_3_0=(Token)match(input,56,FollowSets000.FOLLOW_108); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_const_3_0, grammarAccess.getClassDeclarationAccess().getConstConstKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "const", true, "const");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:8546:3: ( (lv_input_4_0= 'input' ) )?
            int alt290=2;
            int LA290_0 = input.LA(1);

            if ( (LA290_0==57) ) {
                alt290=1;
            }
            switch (alt290) {
                case 1 :
                    // InternalSCTX.g:8547:4: (lv_input_4_0= 'input' )
                    {
                    // InternalSCTX.g:8547:4: (lv_input_4_0= 'input' )
                    // InternalSCTX.g:8548:5: lv_input_4_0= 'input'
                    {
                    lv_input_4_0=(Token)match(input,57,FollowSets000.FOLLOW_108); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_input_4_0, grammarAccess.getClassDeclarationAccess().getInputInputKeyword_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "input", true, "input");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:8560:3: ( (lv_output_5_0= 'output' ) )?
            int alt291=2;
            int LA291_0 = input.LA(1);

            if ( (LA291_0==58) ) {
                alt291=1;
            }
            switch (alt291) {
                case 1 :
                    // InternalSCTX.g:8561:4: (lv_output_5_0= 'output' )
                    {
                    // InternalSCTX.g:8561:4: (lv_output_5_0= 'output' )
                    // InternalSCTX.g:8562:5: lv_output_5_0= 'output'
                    {
                    lv_output_5_0=(Token)match(input,58,FollowSets000.FOLLOW_108); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_output_5_0, grammarAccess.getClassDeclarationAccess().getOutputOutputKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "output", true, "output");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:8574:3: ( (lv_global_6_0= 'global' ) )?
            int alt292=2;
            int LA292_0 = input.LA(1);

            if ( (LA292_0==59) ) {
                alt292=1;
            }
            switch (alt292) {
                case 1 :
                    // InternalSCTX.g:8575:4: (lv_global_6_0= 'global' )
                    {
                    // InternalSCTX.g:8575:4: (lv_global_6_0= 'global' )
                    // InternalSCTX.g:8576:5: lv_global_6_0= 'global'
                    {
                    lv_global_6_0=(Token)match(input,59,FollowSets000.FOLLOW_108); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_global_6_0, grammarAccess.getClassDeclarationAccess().getGlobalGlobalKeyword_6_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "global", true, "global");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:8588:3: ( (lv_static_7_0= 'static' ) )?
            int alt293=2;
            int LA293_0 = input.LA(1);

            if ( (LA293_0==60) ) {
                alt293=1;
            }
            switch (alt293) {
                case 1 :
                    // InternalSCTX.g:8589:4: (lv_static_7_0= 'static' )
                    {
                    // InternalSCTX.g:8589:4: (lv_static_7_0= 'static' )
                    // InternalSCTX.g:8590:5: lv_static_7_0= 'static'
                    {
                    lv_static_7_0=(Token)match(input,60,FollowSets000.FOLLOW_108); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_static_7_0, grammarAccess.getClassDeclarationAccess().getStaticStaticKeyword_7_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "static", true, "static");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:8602:3: ( (lv_host_8_0= 'host' ) )?
            int alt294=2;
            int LA294_0 = input.LA(1);

            if ( (LA294_0==61) ) {
                alt294=1;
            }
            switch (alt294) {
                case 1 :
                    // InternalSCTX.g:8603:4: (lv_host_8_0= 'host' )
                    {
                    // InternalSCTX.g:8603:4: (lv_host_8_0= 'host' )
                    // InternalSCTX.g:8604:5: lv_host_8_0= 'host'
                    {
                    lv_host_8_0=(Token)match(input,61,FollowSets000.FOLLOW_108); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_host_8_0, grammarAccess.getClassDeclarationAccess().getHostHostKeyword_8_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "host", true, "host");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:8616:3: ( ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= ruleEString ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationOrMethod ) )* otherlv_13= '}' ) | ( ( (lv_type_14_0= ruleStructType ) ) ( (lv_name_15_0= ruleEString ) )? otherlv_16= '{' ( (lv_declarations_17_0= ruleDeclaration ) )* otherlv_18= '}' ) )
            int alt299=2;
            int LA299_0 = input.LA(1);

            if ( (LA299_0==151) ) {
                alt299=1;
            }
            else if ( (LA299_0==150) ) {
                alt299=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 299, 0, input);

                throw nvae;
            }
            switch (alt299) {
                case 1 :
                    // InternalSCTX.g:8617:4: ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= ruleEString ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationOrMethod ) )* otherlv_13= '}' )
                    {
                    // InternalSCTX.g:8617:4: ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= ruleEString ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationOrMethod ) )* otherlv_13= '}' )
                    // InternalSCTX.g:8618:5: ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= ruleEString ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationOrMethod ) )* otherlv_13= '}'
                    {
                    // InternalSCTX.g:8618:5: ( (lv_type_9_0= ruleClassType ) )
                    // InternalSCTX.g:8619:6: (lv_type_9_0= ruleClassType )
                    {
                    // InternalSCTX.g:8619:6: (lv_type_9_0= ruleClassType )
                    // InternalSCTX.g:8620:7: lv_type_9_0= ruleClassType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getClassDeclarationAccess().getTypeClassTypeEnumRuleCall_9_0_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_109);
                    lv_type_9_0=ruleClassType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_9_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ClassType");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:8637:5: ( (lv_name_10_0= ruleEString ) )?
                    int alt295=2;
                    int LA295_0 = input.LA(1);

                    if ( ((LA295_0>=RULE_STRING && LA295_0<=RULE_ID)) ) {
                        alt295=1;
                    }
                    switch (alt295) {
                        case 1 :
                            // InternalSCTX.g:8638:6: (lv_name_10_0= ruleEString )
                            {
                            // InternalSCTX.g:8638:6: (lv_name_10_0= ruleEString )
                            // InternalSCTX.g:8639:7: lv_name_10_0= ruleEString
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getClassDeclarationAccess().getNameEStringParserRuleCall_9_0_1_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_110);
                            lv_name_10_0=ruleEString();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
                              							}
                              							set(
                              								current,
                              								"name",
                              								lv_name_10_0,
                              								"de.cau.cs.kieler.annotations.Annotations.EString");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }

                    otherlv_11=(Token)match(input,21,FollowSets000.FOLLOW_112); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_11, grammarAccess.getClassDeclarationAccess().getLeftCurlyBracketKeyword_9_0_2());
                      				
                    }
                    // InternalSCTX.g:8660:5: ( (lv_declarations_12_0= ruleDeclarationOrMethod ) )*
                    loop296:
                    do {
                        int alt296=2;
                        int LA296_0 = input.LA(1);

                        if ( (LA296_0==RULE_ID||LA296_0==RULE_COMMENT_ANNOTATION||LA296_0==29||(LA296_0>=56 && LA296_0<=61)||(LA296_0>=74 && LA296_0<=76)||LA296_0==103||(LA296_0>=116 && LA296_0<=121)||(LA296_0>=150 && LA296_0<=151)||(LA296_0>=155 && LA296_0<=158)) ) {
                            alt296=1;
                        }


                        switch (alt296) {
                    	case 1 :
                    	    // InternalSCTX.g:8661:6: (lv_declarations_12_0= ruleDeclarationOrMethod )
                    	    {
                    	    // InternalSCTX.g:8661:6: (lv_declarations_12_0= ruleDeclarationOrMethod )
                    	    // InternalSCTX.g:8662:7: lv_declarations_12_0= ruleDeclarationOrMethod
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getClassDeclarationAccess().getDeclarationsDeclarationOrMethodParserRuleCall_9_0_3_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_112);
                    	    lv_declarations_12_0=ruleDeclarationOrMethod();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"declarations",
                    	      								lv_declarations_12_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.DeclarationOrMethod");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop296;
                        }
                    } while (true);

                    otherlv_13=(Token)match(input,22,FollowSets000.FOLLOW_166); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_13, grammarAccess.getClassDeclarationAccess().getRightCurlyBracketKeyword_9_0_4());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:8685:4: ( ( (lv_type_14_0= ruleStructType ) ) ( (lv_name_15_0= ruleEString ) )? otherlv_16= '{' ( (lv_declarations_17_0= ruleDeclaration ) )* otherlv_18= '}' )
                    {
                    // InternalSCTX.g:8685:4: ( ( (lv_type_14_0= ruleStructType ) ) ( (lv_name_15_0= ruleEString ) )? otherlv_16= '{' ( (lv_declarations_17_0= ruleDeclaration ) )* otherlv_18= '}' )
                    // InternalSCTX.g:8686:5: ( (lv_type_14_0= ruleStructType ) ) ( (lv_name_15_0= ruleEString ) )? otherlv_16= '{' ( (lv_declarations_17_0= ruleDeclaration ) )* otherlv_18= '}'
                    {
                    // InternalSCTX.g:8686:5: ( (lv_type_14_0= ruleStructType ) )
                    // InternalSCTX.g:8687:6: (lv_type_14_0= ruleStructType )
                    {
                    // InternalSCTX.g:8687:6: (lv_type_14_0= ruleStructType )
                    // InternalSCTX.g:8688:7: lv_type_14_0= ruleStructType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getClassDeclarationAccess().getTypeStructTypeEnumRuleCall_9_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_109);
                    lv_type_14_0=ruleStructType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_14_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.StructType");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:8705:5: ( (lv_name_15_0= ruleEString ) )?
                    int alt297=2;
                    int LA297_0 = input.LA(1);

                    if ( ((LA297_0>=RULE_STRING && LA297_0<=RULE_ID)) ) {
                        alt297=1;
                    }
                    switch (alt297) {
                        case 1 :
                            // InternalSCTX.g:8706:6: (lv_name_15_0= ruleEString )
                            {
                            // InternalSCTX.g:8706:6: (lv_name_15_0= ruleEString )
                            // InternalSCTX.g:8707:7: lv_name_15_0= ruleEString
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getClassDeclarationAccess().getNameEStringParserRuleCall_9_1_1_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_110);
                            lv_name_15_0=ruleEString();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
                              							}
                              							set(
                              								current,
                              								"name",
                              								lv_name_15_0,
                              								"de.cau.cs.kieler.annotations.Annotations.EString");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }

                    otherlv_16=(Token)match(input,21,FollowSets000.FOLLOW_114); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_16, grammarAccess.getClassDeclarationAccess().getLeftCurlyBracketKeyword_9_1_2());
                      				
                    }
                    // InternalSCTX.g:8728:5: ( (lv_declarations_17_0= ruleDeclaration ) )*
                    loop298:
                    do {
                        int alt298=2;
                        int LA298_0 = input.LA(1);

                        if ( (LA298_0==RULE_COMMENT_ANNOTATION||LA298_0==29||(LA298_0>=56 && LA298_0<=61)||(LA298_0>=74 && LA298_0<=76)||LA298_0==103||(LA298_0>=116 && LA298_0<=121)||(LA298_0>=150 && LA298_0<=151)||(LA298_0>=155 && LA298_0<=157)) ) {
                            alt298=1;
                        }


                        switch (alt298) {
                    	case 1 :
                    	    // InternalSCTX.g:8729:6: (lv_declarations_17_0= ruleDeclaration )
                    	    {
                    	    // InternalSCTX.g:8729:6: (lv_declarations_17_0= ruleDeclaration )
                    	    // InternalSCTX.g:8730:7: lv_declarations_17_0= ruleDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getClassDeclarationAccess().getDeclarationsDeclarationParserRuleCall_9_1_3_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_114);
                    	    lv_declarations_17_0=ruleDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"declarations",
                    	      								lv_declarations_17_0,
                    	      								"de.cau.cs.kieler.sccharts.text.SCTX.Declaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop298;
                        }
                    } while (true);

                    otherlv_18=(Token)match(input,22,FollowSets000.FOLLOW_166); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_18, grammarAccess.getClassDeclarationAccess().getRightCurlyBracketKeyword_9_1_4());
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:8753:3: ( ( (lv_valuedObjects_19_0= ruleValuedObject ) ) (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )* )?
            int alt301=2;
            int LA301_0 = input.LA(1);

            if ( (LA301_0==RULE_ID||LA301_0==RULE_COMMENT_ANNOTATION||LA301_0==103) ) {
                alt301=1;
            }
            switch (alt301) {
                case 1 :
                    // InternalSCTX.g:8754:4: ( (lv_valuedObjects_19_0= ruleValuedObject ) ) (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )*
                    {
                    // InternalSCTX.g:8754:4: ( (lv_valuedObjects_19_0= ruleValuedObject ) )
                    // InternalSCTX.g:8755:5: (lv_valuedObjects_19_0= ruleValuedObject )
                    {
                    // InternalSCTX.g:8755:5: (lv_valuedObjects_19_0= ruleValuedObject )
                    // InternalSCTX.g:8756:6: lv_valuedObjects_19_0= ruleValuedObject
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_10_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_165);
                    lv_valuedObjects_19_0=ruleValuedObject();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
                      						}
                      						add(
                      							current,
                      							"valuedObjects",
                      							lv_valuedObjects_19_0,
                      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:8773:4: (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )*
                    loop300:
                    do {
                        int alt300=2;
                        int LA300_0 = input.LA(1);

                        if ( (LA300_0==20) ) {
                            alt300=1;
                        }


                        switch (alt300) {
                    	case 1 :
                    	    // InternalSCTX.g:8774:5: otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) )
                    	    {
                    	    otherlv_20=(Token)match(input,20,FollowSets000.FOLLOW_116); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_20, grammarAccess.getClassDeclarationAccess().getCommaKeyword_10_1_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:8778:5: ( (lv_valuedObjects_21_0= ruleValuedObject ) )
                    	    // InternalSCTX.g:8779:6: (lv_valuedObjects_21_0= ruleValuedObject )
                    	    {
                    	    // InternalSCTX.g:8779:6: (lv_valuedObjects_21_0= ruleValuedObject )
                    	    // InternalSCTX.g:8780:7: lv_valuedObjects_21_0= ruleValuedObject
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getClassDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_10_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_165);
                    	    lv_valuedObjects_21_0=ruleValuedObject();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"valuedObjects",
                    	      								lv_valuedObjects_21_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop300;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_22=(Token)match(input,40,FollowSets000.FOLLOW_155); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_22, grammarAccess.getClassDeclarationAccess().getSemicolonKeyword_11());
              		
            }
            // InternalSCTX.g:8803:3: ( (lv_annotations_23_0= ruleCommentAnnotatonSL ) )?
            int alt302=2;
            int LA302_0 = input.LA(1);

            if ( (LA302_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt302=1;
            }
            switch (alt302) {
                case 1 :
                    // InternalSCTX.g:8804:4: (lv_annotations_23_0= ruleCommentAnnotatonSL )
                    {
                    // InternalSCTX.g:8804:4: (lv_annotations_23_0= ruleCommentAnnotatonSL )
                    // InternalSCTX.g:8805:5: lv_annotations_23_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_12_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_23_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_23_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassDeclaration"


    // $ANTLR start "entryRuleDeclarationOrMethod"
    // InternalSCTX.g:8826:1: entryRuleDeclarationOrMethod returns [EObject current=null] : iv_ruleDeclarationOrMethod= ruleDeclarationOrMethod EOF ;
    public final EObject entryRuleDeclarationOrMethod() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDeclarationOrMethod = null;


        try {
            // InternalSCTX.g:8826:60: (iv_ruleDeclarationOrMethod= ruleDeclarationOrMethod EOF )
            // InternalSCTX.g:8827:2: iv_ruleDeclarationOrMethod= ruleDeclarationOrMethod EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclarationOrMethodRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDeclarationOrMethod=ruleDeclarationOrMethod();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDeclarationOrMethod; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDeclarationOrMethod"


    // $ANTLR start "ruleDeclarationOrMethod"
    // InternalSCTX.g:8833:1: ruleDeclarationOrMethod returns [EObject current=null] : (this_Declaration_0= ruleDeclaration | this_MethodDeclaration_1= ruleMethodDeclaration ) ;
    public final EObject ruleDeclarationOrMethod() throws RecognitionException {
        EObject current = null;

        EObject this_Declaration_0 = null;

        EObject this_MethodDeclaration_1 = null;



        	enterRule();

        try {
            // InternalSCTX.g:8839:2: ( (this_Declaration_0= ruleDeclaration | this_MethodDeclaration_1= ruleMethodDeclaration ) )
            // InternalSCTX.g:8840:2: (this_Declaration_0= ruleDeclaration | this_MethodDeclaration_1= ruleMethodDeclaration )
            {
            // InternalSCTX.g:8840:2: (this_Declaration_0= ruleDeclaration | this_MethodDeclaration_1= ruleMethodDeclaration )
            int alt303=2;
            alt303 = dfa303.predict(input);
            switch (alt303) {
                case 1 :
                    // InternalSCTX.g:8841:3: this_Declaration_0= ruleDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationOrMethodAccess().getDeclarationParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Declaration_0=ruleDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Declaration_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:8853:3: this_MethodDeclaration_1= ruleMethodDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationOrMethodAccess().getMethodDeclarationParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_MethodDeclaration_1=ruleMethodDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MethodDeclaration_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDeclarationOrMethod"


    // $ANTLR start "entryRuleDeclarationOrMethodWOSemicolon"
    // InternalSCTX.g:8868:1: entryRuleDeclarationOrMethodWOSemicolon returns [EObject current=null] : iv_ruleDeclarationOrMethodWOSemicolon= ruleDeclarationOrMethodWOSemicolon EOF ;
    public final EObject entryRuleDeclarationOrMethodWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDeclarationOrMethodWOSemicolon = null;


        try {
            // InternalSCTX.g:8868:71: (iv_ruleDeclarationOrMethodWOSemicolon= ruleDeclarationOrMethodWOSemicolon EOF )
            // InternalSCTX.g:8869:2: iv_ruleDeclarationOrMethodWOSemicolon= ruleDeclarationOrMethodWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclarationOrMethodWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDeclarationOrMethodWOSemicolon=ruleDeclarationOrMethodWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDeclarationOrMethodWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDeclarationOrMethodWOSemicolon"


    // $ANTLR start "ruleDeclarationOrMethodWOSemicolon"
    // InternalSCTX.g:8875:1: ruleDeclarationOrMethodWOSemicolon returns [EObject current=null] : (this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon | this_MethodDeclarationWOSemicolon_1= ruleMethodDeclarationWOSemicolon ) ;
    public final EObject ruleDeclarationOrMethodWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject this_DeclarationWOSemicolon_0 = null;

        EObject this_MethodDeclarationWOSemicolon_1 = null;



        	enterRule();

        try {
            // InternalSCTX.g:8881:2: ( (this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon | this_MethodDeclarationWOSemicolon_1= ruleMethodDeclarationWOSemicolon ) )
            // InternalSCTX.g:8882:2: (this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon | this_MethodDeclarationWOSemicolon_1= ruleMethodDeclarationWOSemicolon )
            {
            // InternalSCTX.g:8882:2: (this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon | this_MethodDeclarationWOSemicolon_1= ruleMethodDeclarationWOSemicolon )
            int alt304=2;
            alt304 = dfa304.predict(input);
            switch (alt304) {
                case 1 :
                    // InternalSCTX.g:8883:3: this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationOrMethodWOSemicolonAccess().getDeclarationWOSemicolonParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_DeclarationWOSemicolon_0=ruleDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DeclarationWOSemicolon_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:8895:3: this_MethodDeclarationWOSemicolon_1= ruleMethodDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationOrMethodWOSemicolonAccess().getMethodDeclarationWOSemicolonParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_MethodDeclarationWOSemicolon_1=ruleMethodDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MethodDeclarationWOSemicolon_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDeclarationOrMethodWOSemicolon"


    // $ANTLR start "entryRuleNamespaceID"
    // InternalSCTX.g:8910:1: entryRuleNamespaceID returns [String current=null] : iv_ruleNamespaceID= ruleNamespaceID EOF ;
    public final String entryRuleNamespaceID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNamespaceID = null;


        try {
            // InternalSCTX.g:8910:51: (iv_ruleNamespaceID= ruleNamespaceID EOF )
            // InternalSCTX.g:8911:2: iv_ruleNamespaceID= ruleNamespaceID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamespaceIDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNamespaceID=ruleNamespaceID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamespaceID.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNamespaceID"


    // $ANTLR start "ruleNamespaceID"
    // InternalSCTX.g:8917:1: ruleNamespaceID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ExtendedID_0= ruleExtendedID (kw= ':' this_PrimeID_2= rulePrimeID )* ) ;
    public final AntlrDatatypeRuleToken ruleNamespaceID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_ExtendedID_0 = null;

        AntlrDatatypeRuleToken this_PrimeID_2 = null;



        	enterRule();

        try {
            // InternalSCTX.g:8923:2: ( (this_ExtendedID_0= ruleExtendedID (kw= ':' this_PrimeID_2= rulePrimeID )* ) )
            // InternalSCTX.g:8924:2: (this_ExtendedID_0= ruleExtendedID (kw= ':' this_PrimeID_2= rulePrimeID )* )
            {
            // InternalSCTX.g:8924:2: (this_ExtendedID_0= ruleExtendedID (kw= ':' this_PrimeID_2= rulePrimeID )* )
            // InternalSCTX.g:8925:3: this_ExtendedID_0= ruleExtendedID (kw= ':' this_PrimeID_2= rulePrimeID )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getNamespaceIDAccess().getExtendedIDParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_167);
            this_ExtendedID_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_ExtendedID_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCTX.g:8935:3: (kw= ':' this_PrimeID_2= rulePrimeID )*
            loop305:
            do {
                int alt305=2;
                int LA305_0 = input.LA(1);

                if ( (LA305_0==45) ) {
                    alt305=1;
                }


                switch (alt305) {
            	case 1 :
            	    // InternalSCTX.g:8936:4: kw= ':' this_PrimeID_2= rulePrimeID
            	    {
            	    kw=(Token)match(input,45,FollowSets000.FOLLOW_9); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(kw);
            	      				newLeafNode(kw, grammarAccess.getNamespaceIDAccess().getColonKeyword_1_0());
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				newCompositeNode(grammarAccess.getNamespaceIDAccess().getPrimeIDParserRuleCall_1_1());
            	      			
            	    }
            	    pushFollow(FollowSets000.FOLLOW_167);
            	    this_PrimeID_2=rulePrimeID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(this_PrimeID_2);
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop305;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamespaceID"


    // $ANTLR start "entryRuleReferenceDeclaration"
    // InternalSCTX.g:8956:1: entryRuleReferenceDeclaration returns [EObject current=null] : iv_ruleReferenceDeclaration= ruleReferenceDeclaration EOF ;
    public final EObject entryRuleReferenceDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReferenceDeclaration = null;


        try {
            // InternalSCTX.g:8956:61: (iv_ruleReferenceDeclaration= ruleReferenceDeclaration EOF )
            // InternalSCTX.g:8957:2: iv_ruleReferenceDeclaration= ruleReferenceDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReferenceDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleReferenceDeclaration=ruleReferenceDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReferenceDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReferenceDeclaration"


    // $ANTLR start "ruleReferenceDeclaration"
    // InternalSCTX.g:8963:1: ruleReferenceDeclaration returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* otherlv_11= ';' ( (lv_annotations_12_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleReferenceDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        EObject lv_annotations_0_0 = null;

        Enumerator lv_access_1_0 = null;

        EObject lv_extern_5_0 = null;

        EObject lv_extern_7_0 = null;

        EObject lv_valuedObjects_8_0 = null;

        EObject lv_valuedObjects_10_0 = null;

        EObject lv_annotations_12_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:8969:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* otherlv_11= ';' ( (lv_annotations_12_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalSCTX.g:8970:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* otherlv_11= ';' ( (lv_annotations_12_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalSCTX.g:8970:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* otherlv_11= ';' ( (lv_annotations_12_0= ruleCommentAnnotatonSL ) )? )
            // InternalSCTX.g:8971:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* otherlv_11= ';' ( (lv_annotations_12_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalSCTX.g:8971:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop306:
            do {
                int alt306=2;
                int LA306_0 = input.LA(1);

                if ( (LA306_0==RULE_COMMENT_ANNOTATION||LA306_0==103) ) {
                    alt306=1;
                }


                switch (alt306) {
            	case 1 :
            	    // InternalSCTX.g:8972:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:8972:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:8973:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_168);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop306;
                }
            } while (true);

            // InternalSCTX.g:8990:3: ( (lv_access_1_0= ruleAccessModifier ) )?
            int alt307=2;
            int LA307_0 = input.LA(1);

            if ( ((LA307_0>=155 && LA307_0<=157)) ) {
                alt307=1;
            }
            switch (alt307) {
                case 1 :
                    // InternalSCTX.g:8991:4: (lv_access_1_0= ruleAccessModifier )
                    {
                    // InternalSCTX.g:8991:4: (lv_access_1_0= ruleAccessModifier )
                    // InternalSCTX.g:8992:5: lv_access_1_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getAccessAccessModifierEnumRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_169);
                    lv_access_1_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_1_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:9009:3: ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) )
            int alt309=2;
            int LA309_0 = input.LA(1);

            if ( (LA309_0==75) ) {
                alt309=1;
            }
            else if ( (LA309_0==76) ) {
                alt309=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 309, 0, input);

                throw nvae;
            }
            switch (alt309) {
                case 1 :
                    // InternalSCTX.g:9010:4: (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) )
                    {
                    // InternalSCTX.g:9010:4: (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) )
                    // InternalSCTX.g:9011:5: otherlv_2= 'ref' ( ( ruleNamespaceID ) )
                    {
                    otherlv_2=(Token)match(input,75,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getReferenceDeclarationAccess().getRefKeyword_2_0_0());
                      				
                    }
                    // InternalSCTX.g:9015:5: ( ( ruleNamespaceID ) )
                    // InternalSCTX.g:9016:6: ( ruleNamespaceID )
                    {
                    // InternalSCTX.g:9016:6: ( ruleNamespaceID )
                    // InternalSCTX.g:9017:7: ruleNamespaceID
                    {
                    if ( state.backtracking==0 ) {

                      							/* */
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getReferenceDeclarationRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getReferenceNamedObjectCrossReference_2_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_116);
                    ruleNamespaceID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:9036:4: (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* )
                    {
                    // InternalSCTX.g:9036:4: (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* )
                    // InternalSCTX.g:9037:5: otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )*
                    {
                    otherlv_4=(Token)match(input,76,FollowSets000.FOLLOW_170); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_4, grammarAccess.getReferenceDeclarationAccess().getExternKeyword_2_1_0());
                      				
                    }
                    // InternalSCTX.g:9041:5: ( (lv_extern_5_0= ruleExternString ) )
                    // InternalSCTX.g:9042:6: (lv_extern_5_0= ruleExternString )
                    {
                    // InternalSCTX.g:9042:6: (lv_extern_5_0= ruleExternString )
                    // InternalSCTX.g:9043:7: lv_extern_5_0= ruleExternString
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getExternExternStringParserRuleCall_2_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_171);
                    lv_extern_5_0=ruleExternString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
                      							}
                      							add(
                      								current,
                      								"extern",
                      								lv_extern_5_0,
                      								"de.cau.cs.kieler.kexpressions.kext.KExt.ExternString");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:9060:5: (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )*
                    loop308:
                    do {
                        int alt308=2;
                        int LA308_0 = input.LA(1);

                        if ( (LA308_0==20) ) {
                            alt308=1;
                        }


                        switch (alt308) {
                    	case 1 :
                    	    // InternalSCTX.g:9061:6: otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,20,FollowSets000.FOLLOW_170); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_6, grammarAccess.getReferenceDeclarationAccess().getCommaKeyword_2_1_2_0());
                    	      					
                    	    }
                    	    // InternalSCTX.g:9065:6: ( (lv_extern_7_0= ruleExternString ) )
                    	    // InternalSCTX.g:9066:7: (lv_extern_7_0= ruleExternString )
                    	    {
                    	    // InternalSCTX.g:9066:7: (lv_extern_7_0= ruleExternString )
                    	    // InternalSCTX.g:9067:8: lv_extern_7_0= ruleExternString
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getExternExternStringParserRuleCall_2_1_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_171);
                    	    lv_extern_7_0=ruleExternString();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"extern",
                    	      									lv_extern_7_0,
                    	      									"de.cau.cs.kieler.kexpressions.kext.KExt.ExternString");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop308;
                        }
                    } while (true);


                    }


                    }
                    break;

            }

            // InternalSCTX.g:9087:3: ( (lv_valuedObjects_8_0= ruleValuedObject ) )
            // InternalSCTX.g:9088:4: (lv_valuedObjects_8_0= ruleValuedObject )
            {
            // InternalSCTX.g:9088:4: (lv_valuedObjects_8_0= ruleValuedObject )
            // InternalSCTX.g:9089:5: lv_valuedObjects_8_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_165);
            lv_valuedObjects_8_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_8_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:9106:3: (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )*
            loop310:
            do {
                int alt310=2;
                int LA310_0 = input.LA(1);

                if ( (LA310_0==20) ) {
                    alt310=1;
                }


                switch (alt310) {
            	case 1 :
            	    // InternalSCTX.g:9107:4: otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) )
            	    {
            	    otherlv_9=(Token)match(input,20,FollowSets000.FOLLOW_116); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_9, grammarAccess.getReferenceDeclarationAccess().getCommaKeyword_4_0());
            	      			
            	    }
            	    // InternalSCTX.g:9111:4: ( (lv_valuedObjects_10_0= ruleValuedObject ) )
            	    // InternalSCTX.g:9112:5: (lv_valuedObjects_10_0= ruleValuedObject )
            	    {
            	    // InternalSCTX.g:9112:5: (lv_valuedObjects_10_0= ruleValuedObject )
            	    // InternalSCTX.g:9113:6: lv_valuedObjects_10_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_4_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_165);
            	    lv_valuedObjects_10_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"valuedObjects",
            	      							lv_valuedObjects_10_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop310;
                }
            } while (true);

            otherlv_11=(Token)match(input,40,FollowSets000.FOLLOW_155); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_11, grammarAccess.getReferenceDeclarationAccess().getSemicolonKeyword_5());
              		
            }
            // InternalSCTX.g:9135:3: ( (lv_annotations_12_0= ruleCommentAnnotatonSL ) )?
            int alt311=2;
            int LA311_0 = input.LA(1);

            if ( (LA311_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt311=1;
            }
            switch (alt311) {
                case 1 :
                    // InternalSCTX.g:9136:4: (lv_annotations_12_0= ruleCommentAnnotatonSL )
                    {
                    // InternalSCTX.g:9136:4: (lv_annotations_12_0= ruleCommentAnnotatonSL )
                    // InternalSCTX.g:9137:5: lv_annotations_12_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_6_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_12_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_12_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReferenceDeclaration"


    // $ANTLR start "entryRuleReferenceDeclarationWOSemicolon"
    // InternalSCTX.g:9158:1: entryRuleReferenceDeclarationWOSemicolon returns [EObject current=null] : iv_ruleReferenceDeclarationWOSemicolon= ruleReferenceDeclarationWOSemicolon EOF ;
    public final EObject entryRuleReferenceDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReferenceDeclarationWOSemicolon = null;


        try {
            // InternalSCTX.g:9158:72: (iv_ruleReferenceDeclarationWOSemicolon= ruleReferenceDeclarationWOSemicolon EOF )
            // InternalSCTX.g:9159:2: iv_ruleReferenceDeclarationWOSemicolon= ruleReferenceDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleReferenceDeclarationWOSemicolon=ruleReferenceDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReferenceDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReferenceDeclarationWOSemicolon"


    // $ANTLR start "ruleReferenceDeclarationWOSemicolon"
    // InternalSCTX.g:9165:1: ruleReferenceDeclarationWOSemicolon returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* ( (lv_annotations_11_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleReferenceDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_9=null;
        EObject lv_annotations_0_0 = null;

        Enumerator lv_access_1_0 = null;

        EObject lv_extern_5_0 = null;

        EObject lv_extern_7_0 = null;

        EObject lv_valuedObjects_8_0 = null;

        EObject lv_valuedObjects_10_0 = null;

        EObject lv_annotations_11_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:9171:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* ( (lv_annotations_11_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalSCTX.g:9172:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* ( (lv_annotations_11_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalSCTX.g:9172:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* ( (lv_annotations_11_0= ruleCommentAnnotatonSL ) )? )
            // InternalSCTX.g:9173:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* ( (lv_annotations_11_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalSCTX.g:9173:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop312:
            do {
                int alt312=2;
                int LA312_0 = input.LA(1);

                if ( (LA312_0==RULE_COMMENT_ANNOTATION||LA312_0==103) ) {
                    alt312=1;
                }


                switch (alt312) {
            	case 1 :
            	    // InternalSCTX.g:9174:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:9174:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:9175:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_168);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop312;
                }
            } while (true);

            // InternalSCTX.g:9192:3: ( (lv_access_1_0= ruleAccessModifier ) )?
            int alt313=2;
            int LA313_0 = input.LA(1);

            if ( ((LA313_0>=155 && LA313_0<=157)) ) {
                alt313=1;
            }
            switch (alt313) {
                case 1 :
                    // InternalSCTX.g:9193:4: (lv_access_1_0= ruleAccessModifier )
                    {
                    // InternalSCTX.g:9193:4: (lv_access_1_0= ruleAccessModifier )
                    // InternalSCTX.g:9194:5: lv_access_1_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getAccessAccessModifierEnumRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_169);
                    lv_access_1_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_1_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:9211:3: ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) )
            int alt315=2;
            int LA315_0 = input.LA(1);

            if ( (LA315_0==75) ) {
                alt315=1;
            }
            else if ( (LA315_0==76) ) {
                alt315=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 315, 0, input);

                throw nvae;
            }
            switch (alt315) {
                case 1 :
                    // InternalSCTX.g:9212:4: (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) )
                    {
                    // InternalSCTX.g:9212:4: (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) )
                    // InternalSCTX.g:9213:5: otherlv_2= 'ref' ( ( ruleNamespaceID ) )
                    {
                    otherlv_2=(Token)match(input,75,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getRefKeyword_2_0_0());
                      				
                    }
                    // InternalSCTX.g:9217:5: ( ( ruleNamespaceID ) )
                    // InternalSCTX.g:9218:6: ( ruleNamespaceID )
                    {
                    // InternalSCTX.g:9218:6: ( ruleNamespaceID )
                    // InternalSCTX.g:9219:7: ruleNamespaceID
                    {
                    if ( state.backtracking==0 ) {

                      							/* */
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getReferenceDeclarationWOSemicolonRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getReferenceNamedObjectCrossReference_2_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_116);
                    ruleNamespaceID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:9238:4: (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* )
                    {
                    // InternalSCTX.g:9238:4: (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* )
                    // InternalSCTX.g:9239:5: otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )*
                    {
                    otherlv_4=(Token)match(input,76,FollowSets000.FOLLOW_170); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_4, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getExternKeyword_2_1_0());
                      				
                    }
                    // InternalSCTX.g:9243:5: ( (lv_extern_5_0= ruleExternString ) )
                    // InternalSCTX.g:9244:6: (lv_extern_5_0= ruleExternString )
                    {
                    // InternalSCTX.g:9244:6: (lv_extern_5_0= ruleExternString )
                    // InternalSCTX.g:9245:7: lv_extern_5_0= ruleExternString
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getExternExternStringParserRuleCall_2_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_171);
                    lv_extern_5_0=ruleExternString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
                      							}
                      							add(
                      								current,
                      								"extern",
                      								lv_extern_5_0,
                      								"de.cau.cs.kieler.kexpressions.kext.KExt.ExternString");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:9262:5: (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )*
                    loop314:
                    do {
                        int alt314=2;
                        int LA314_0 = input.LA(1);

                        if ( (LA314_0==20) ) {
                            alt314=1;
                        }


                        switch (alt314) {
                    	case 1 :
                    	    // InternalSCTX.g:9263:6: otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,20,FollowSets000.FOLLOW_170); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_6, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getCommaKeyword_2_1_2_0());
                    	      					
                    	    }
                    	    // InternalSCTX.g:9267:6: ( (lv_extern_7_0= ruleExternString ) )
                    	    // InternalSCTX.g:9268:7: (lv_extern_7_0= ruleExternString )
                    	    {
                    	    // InternalSCTX.g:9268:7: (lv_extern_7_0= ruleExternString )
                    	    // InternalSCTX.g:9269:8: lv_extern_7_0= ruleExternString
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getExternExternStringParserRuleCall_2_1_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_171);
                    	    lv_extern_7_0=ruleExternString();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"extern",
                    	      									lv_extern_7_0,
                    	      									"de.cau.cs.kieler.kexpressions.kext.KExt.ExternString");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop314;
                        }
                    } while (true);


                    }


                    }
                    break;

            }

            // InternalSCTX.g:9289:3: ( (lv_valuedObjects_8_0= ruleValuedObject ) )
            // InternalSCTX.g:9290:4: (lv_valuedObjects_8_0= ruleValuedObject )
            {
            // InternalSCTX.g:9290:4: (lv_valuedObjects_8_0= ruleValuedObject )
            // InternalSCTX.g:9291:5: lv_valuedObjects_8_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_115);
            lv_valuedObjects_8_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_8_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:9308:3: (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )*
            loop316:
            do {
                int alt316=2;
                int LA316_0 = input.LA(1);

                if ( (LA316_0==20) ) {
                    alt316=1;
                }


                switch (alt316) {
            	case 1 :
            	    // InternalSCTX.g:9309:4: otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) )
            	    {
            	    otherlv_9=(Token)match(input,20,FollowSets000.FOLLOW_116); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_9, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getCommaKeyword_4_0());
            	      			
            	    }
            	    // InternalSCTX.g:9313:4: ( (lv_valuedObjects_10_0= ruleValuedObject ) )
            	    // InternalSCTX.g:9314:5: (lv_valuedObjects_10_0= ruleValuedObject )
            	    {
            	    // InternalSCTX.g:9314:5: (lv_valuedObjects_10_0= ruleValuedObject )
            	    // InternalSCTX.g:9315:6: lv_valuedObjects_10_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_4_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_115);
            	    lv_valuedObjects_10_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
            	      						}
            	      						add(
            	      							current,
            	      							"valuedObjects",
            	      							lv_valuedObjects_10_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop316;
                }
            } while (true);

            // InternalSCTX.g:9333:3: ( (lv_annotations_11_0= ruleCommentAnnotatonSL ) )?
            int alt317=2;
            int LA317_0 = input.LA(1);

            if ( (LA317_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt317=1;
            }
            switch (alt317) {
                case 1 :
                    // InternalSCTX.g:9334:4: (lv_annotations_11_0= ruleCommentAnnotatonSL )
                    {
                    // InternalSCTX.g:9334:4: (lv_annotations_11_0= ruleCommentAnnotatonSL )
                    // InternalSCTX.g:9335:5: lv_annotations_11_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_11_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_11_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReferenceDeclarationWOSemicolon"


    // $ANTLR start "entryRuleExternString"
    // InternalSCTX.g:9356:1: entryRuleExternString returns [EObject current=null] : iv_ruleExternString= ruleExternString EOF ;
    public final EObject entryRuleExternString() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExternString = null;


        try {
            // InternalSCTX.g:9356:53: (iv_ruleExternString= ruleExternString EOF )
            // InternalSCTX.g:9357:2: iv_ruleExternString= ruleExternString EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExternStringRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleExternString=ruleExternString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExternString; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExternString"


    // $ANTLR start "ruleExternString"
    // InternalSCTX.g:9363:1: ruleExternString returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleTagAnnotation ) )* ( (lv_code_1_0= RULE_STRING ) ) ) ;
    public final EObject ruleExternString() throws RecognitionException {
        EObject current = null;

        Token lv_code_1_0=null;
        EObject lv_annotations_0_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:9369:2: ( ( ( (lv_annotations_0_0= ruleTagAnnotation ) )* ( (lv_code_1_0= RULE_STRING ) ) ) )
            // InternalSCTX.g:9370:2: ( ( (lv_annotations_0_0= ruleTagAnnotation ) )* ( (lv_code_1_0= RULE_STRING ) ) )
            {
            // InternalSCTX.g:9370:2: ( ( (lv_annotations_0_0= ruleTagAnnotation ) )* ( (lv_code_1_0= RULE_STRING ) ) )
            // InternalSCTX.g:9371:3: ( (lv_annotations_0_0= ruleTagAnnotation ) )* ( (lv_code_1_0= RULE_STRING ) )
            {
            // InternalSCTX.g:9371:3: ( (lv_annotations_0_0= ruleTagAnnotation ) )*
            loop318:
            do {
                int alt318=2;
                int LA318_0 = input.LA(1);

                if ( (LA318_0==103) ) {
                    alt318=1;
                }


                switch (alt318) {
            	case 1 :
            	    // InternalSCTX.g:9372:4: (lv_annotations_0_0= ruleTagAnnotation )
            	    {
            	    // InternalSCTX.g:9372:4: (lv_annotations_0_0= ruleTagAnnotation )
            	    // InternalSCTX.g:9373:5: lv_annotations_0_0= ruleTagAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getExternStringAccess().getAnnotationsTagAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_170);
            	    lv_annotations_0_0=ruleTagAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getExternStringRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.TagAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop318;
                }
            } while (true);

            // InternalSCTX.g:9390:3: ( (lv_code_1_0= RULE_STRING ) )
            // InternalSCTX.g:9391:4: (lv_code_1_0= RULE_STRING )
            {
            // InternalSCTX.g:9391:4: (lv_code_1_0= RULE_STRING )
            // InternalSCTX.g:9392:5: lv_code_1_0= RULE_STRING
            {
            lv_code_1_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_code_1_0, grammarAccess.getExternStringAccess().getCodeSTRINGTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getExternStringRule());
              					}
              					setWithLastConsumed(
              						current,
              						"code",
              						lv_code_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.STRING");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExternString"


    // $ANTLR start "entryRuleScheduleDeclaration"
    // InternalSCTX.g:9412:1: entryRuleScheduleDeclaration returns [EObject current=null] : iv_ruleScheduleDeclaration= ruleScheduleDeclaration EOF ;
    public final EObject entryRuleScheduleDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScheduleDeclaration = null;


        try {
            // InternalSCTX.g:9412:60: (iv_ruleScheduleDeclaration= ruleScheduleDeclaration EOF )
            // InternalSCTX.g:9413:2: iv_ruleScheduleDeclaration= ruleScheduleDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScheduleDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScheduleDeclaration=ruleScheduleDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScheduleDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScheduleDeclaration"


    // $ANTLR start "ruleScheduleDeclaration"
    // InternalSCTX.g:9419:1: ruleScheduleDeclaration returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* otherlv_14= ';' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleScheduleDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_name_3_0=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        EObject lv_annotations_0_0 = null;

        Enumerator lv_access_1_0 = null;

        Enumerator lv_global_5_0 = null;

        Enumerator lv_priorities_7_0 = null;

        Enumerator lv_priorities_9_0 = null;

        EObject lv_valuedObjects_11_0 = null;

        EObject lv_valuedObjects_13_0 = null;

        EObject lv_annotations_15_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:9425:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* otherlv_14= ';' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalSCTX.g:9426:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* otherlv_14= ';' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalSCTX.g:9426:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* otherlv_14= ';' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? )
            // InternalSCTX.g:9427:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* otherlv_14= ';' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalSCTX.g:9427:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop319:
            do {
                int alt319=2;
                int LA319_0 = input.LA(1);

                if ( (LA319_0==RULE_COMMENT_ANNOTATION||LA319_0==103) ) {
                    alt319=1;
                }


                switch (alt319) {
            	case 1 :
            	    // InternalSCTX.g:9428:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:9428:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:9429:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_172);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop319;
                }
            } while (true);

            // InternalSCTX.g:9446:3: ( (lv_access_1_0= ruleAccessModifier ) )?
            int alt320=2;
            int LA320_0 = input.LA(1);

            if ( ((LA320_0>=155 && LA320_0<=157)) ) {
                alt320=1;
            }
            switch (alt320) {
                case 1 :
                    // InternalSCTX.g:9447:4: (lv_access_1_0= ruleAccessModifier )
                    {
                    // InternalSCTX.g:9447:4: (lv_access_1_0= ruleAccessModifier )
                    // InternalSCTX.g:9448:5: lv_access_1_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getAccessAccessModifierEnumRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_173);
                    lv_access_1_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_1_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,29,FollowSets000.FOLLOW_174); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getScheduleDeclarationAccess().getScheduleKeyword_2());
              		
            }
            // InternalSCTX.g:9469:3: ( (lv_name_3_0= RULE_STRING ) )?
            int alt321=2;
            int LA321_0 = input.LA(1);

            if ( (LA321_0==RULE_STRING) ) {
                alt321=1;
            }
            switch (alt321) {
                case 1 :
                    // InternalSCTX.g:9470:4: (lv_name_3_0= RULE_STRING )
                    {
                    // InternalSCTX.g:9470:4: (lv_name_3_0= RULE_STRING )
                    // InternalSCTX.g:9471:5: lv_name_3_0= RULE_STRING
                    {
                    lv_name_3_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_175); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_3_0, grammarAccess.getScheduleDeclarationAccess().getNameSTRINGTerminalRuleCall_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getScheduleDeclarationRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_3_0,
                      						"de.cau.cs.kieler.annotations.Annotations.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:9487:3: (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )?
            int alt322=2;
            int LA322_0 = input.LA(1);

            if ( (LA322_0==59) ) {
                alt322=1;
            }
            switch (alt322) {
                case 1 :
                    // InternalSCTX.g:9488:4: otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) )
                    {
                    otherlv_4=(Token)match(input,59,FollowSets000.FOLLOW_176); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getScheduleDeclarationAccess().getGlobalKeyword_4_0());
                      			
                    }
                    // InternalSCTX.g:9492:4: ( (lv_global_5_0= rulePriorityProtocol ) )
                    // InternalSCTX.g:9493:5: (lv_global_5_0= rulePriorityProtocol )
                    {
                    // InternalSCTX.g:9493:5: (lv_global_5_0= rulePriorityProtocol )
                    // InternalSCTX.g:9494:6: lv_global_5_0= rulePriorityProtocol
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getGlobalPriorityProtocolEnumRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_177);
                    lv_global_5_0=rulePriorityProtocol();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"global",
                      							lv_global_5_0,
                      							"de.cau.cs.kieler.kexpressions.kext.KExt.PriorityProtocol");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:9512:3: (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )?
            int alt324=2;
            int LA324_0 = input.LA(1);

            if ( (LA324_0==21) ) {
                alt324=1;
            }
            switch (alt324) {
                case 1 :
                    // InternalSCTX.g:9513:4: otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}'
                    {
                    otherlv_6=(Token)match(input,21,FollowSets000.FOLLOW_176); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getScheduleDeclarationAccess().getLeftCurlyBracketKeyword_5_0());
                      			
                    }
                    // InternalSCTX.g:9517:4: ( (lv_priorities_7_0= rulePriorityProtocol ) )
                    // InternalSCTX.g:9518:5: (lv_priorities_7_0= rulePriorityProtocol )
                    {
                    // InternalSCTX.g:9518:5: (lv_priorities_7_0= rulePriorityProtocol )
                    // InternalSCTX.g:9519:6: lv_priorities_7_0= rulePriorityProtocol
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getPrioritiesPriorityProtocolEnumRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_178);
                    lv_priorities_7_0=rulePriorityProtocol();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
                      						}
                      						add(
                      							current,
                      							"priorities",
                      							lv_priorities_7_0,
                      							"de.cau.cs.kieler.kexpressions.kext.KExt.PriorityProtocol");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:9536:4: (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )*
                    loop323:
                    do {
                        int alt323=2;
                        int LA323_0 = input.LA(1);

                        if ( (LA323_0==20) ) {
                            alt323=1;
                        }


                        switch (alt323) {
                    	case 1 :
                    	    // InternalSCTX.g:9537:5: otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) )
                    	    {
                    	    otherlv_8=(Token)match(input,20,FollowSets000.FOLLOW_176); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_8, grammarAccess.getScheduleDeclarationAccess().getCommaKeyword_5_2_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:9541:5: ( (lv_priorities_9_0= rulePriorityProtocol ) )
                    	    // InternalSCTX.g:9542:6: (lv_priorities_9_0= rulePriorityProtocol )
                    	    {
                    	    // InternalSCTX.g:9542:6: (lv_priorities_9_0= rulePriorityProtocol )
                    	    // InternalSCTX.g:9543:7: lv_priorities_9_0= rulePriorityProtocol
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getPrioritiesPriorityProtocolEnumRuleCall_5_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_178);
                    	    lv_priorities_9_0=rulePriorityProtocol();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"priorities",
                    	      								lv_priorities_9_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.PriorityProtocol");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop323;
                        }
                    } while (true);

                    otherlv_10=(Token)match(input,22,FollowSets000.FOLLOW_116); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getScheduleDeclarationAccess().getRightCurlyBracketKeyword_5_3());
                      			
                    }

                    }
                    break;

            }

            // InternalSCTX.g:9566:3: ( (lv_valuedObjects_11_0= ruleValuedObject ) )
            // InternalSCTX.g:9567:4: (lv_valuedObjects_11_0= ruleValuedObject )
            {
            // InternalSCTX.g:9567:4: (lv_valuedObjects_11_0= ruleValuedObject )
            // InternalSCTX.g:9568:5: lv_valuedObjects_11_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_6_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_165);
            lv_valuedObjects_11_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_11_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:9585:3: (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )*
            loop325:
            do {
                int alt325=2;
                int LA325_0 = input.LA(1);

                if ( (LA325_0==20) ) {
                    alt325=1;
                }


                switch (alt325) {
            	case 1 :
            	    // InternalSCTX.g:9586:4: otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) )
            	    {
            	    otherlv_12=(Token)match(input,20,FollowSets000.FOLLOW_116); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_12, grammarAccess.getScheduleDeclarationAccess().getCommaKeyword_7_0());
            	      			
            	    }
            	    // InternalSCTX.g:9590:4: ( (lv_valuedObjects_13_0= ruleValuedObject ) )
            	    // InternalSCTX.g:9591:5: (lv_valuedObjects_13_0= ruleValuedObject )
            	    {
            	    // InternalSCTX.g:9591:5: (lv_valuedObjects_13_0= ruleValuedObject )
            	    // InternalSCTX.g:9592:6: lv_valuedObjects_13_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_7_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_165);
            	    lv_valuedObjects_13_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"valuedObjects",
            	      							lv_valuedObjects_13_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop325;
                }
            } while (true);

            otherlv_14=(Token)match(input,40,FollowSets000.FOLLOW_155); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_14, grammarAccess.getScheduleDeclarationAccess().getSemicolonKeyword_8());
              		
            }
            // InternalSCTX.g:9614:3: ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )?
            int alt326=2;
            int LA326_0 = input.LA(1);

            if ( (LA326_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt326=1;
            }
            switch (alt326) {
                case 1 :
                    // InternalSCTX.g:9615:4: (lv_annotations_15_0= ruleCommentAnnotatonSL )
                    {
                    // InternalSCTX.g:9615:4: (lv_annotations_15_0= ruleCommentAnnotatonSL )
                    // InternalSCTX.g:9616:5: lv_annotations_15_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_9_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_15_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_15_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScheduleDeclaration"


    // $ANTLR start "entryRuleScheduleDeclarationWOSemicolon"
    // InternalSCTX.g:9637:1: entryRuleScheduleDeclarationWOSemicolon returns [EObject current=null] : iv_ruleScheduleDeclarationWOSemicolon= ruleScheduleDeclarationWOSemicolon EOF ;
    public final EObject entryRuleScheduleDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScheduleDeclarationWOSemicolon = null;


        try {
            // InternalSCTX.g:9637:71: (iv_ruleScheduleDeclarationWOSemicolon= ruleScheduleDeclarationWOSemicolon EOF )
            // InternalSCTX.g:9638:2: iv_ruleScheduleDeclarationWOSemicolon= ruleScheduleDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScheduleDeclarationWOSemicolon=ruleScheduleDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScheduleDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScheduleDeclarationWOSemicolon"


    // $ANTLR start "ruleScheduleDeclarationWOSemicolon"
    // InternalSCTX.g:9644:1: ruleScheduleDeclarationWOSemicolon returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleScheduleDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_name_3_0=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_annotations_0_0 = null;

        Enumerator lv_access_1_0 = null;

        Enumerator lv_global_5_0 = null;

        Enumerator lv_priorities_7_0 = null;

        Enumerator lv_priorities_9_0 = null;

        EObject lv_valuedObjects_11_0 = null;

        EObject lv_valuedObjects_13_0 = null;

        EObject lv_annotations_14_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:9650:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalSCTX.g:9651:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalSCTX.g:9651:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? )
            // InternalSCTX.g:9652:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalSCTX.g:9652:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop327:
            do {
                int alt327=2;
                int LA327_0 = input.LA(1);

                if ( (LA327_0==RULE_COMMENT_ANNOTATION||LA327_0==103) ) {
                    alt327=1;
                }


                switch (alt327) {
            	case 1 :
            	    // InternalSCTX.g:9653:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:9653:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:9654:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_172);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop327;
                }
            } while (true);

            // InternalSCTX.g:9671:3: ( (lv_access_1_0= ruleAccessModifier ) )?
            int alt328=2;
            int LA328_0 = input.LA(1);

            if ( ((LA328_0>=155 && LA328_0<=157)) ) {
                alt328=1;
            }
            switch (alt328) {
                case 1 :
                    // InternalSCTX.g:9672:4: (lv_access_1_0= ruleAccessModifier )
                    {
                    // InternalSCTX.g:9672:4: (lv_access_1_0= ruleAccessModifier )
                    // InternalSCTX.g:9673:5: lv_access_1_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getAccessAccessModifierEnumRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_173);
                    lv_access_1_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_1_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,29,FollowSets000.FOLLOW_174); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getScheduleKeyword_2());
              		
            }
            // InternalSCTX.g:9694:3: ( (lv_name_3_0= RULE_STRING ) )?
            int alt329=2;
            int LA329_0 = input.LA(1);

            if ( (LA329_0==RULE_STRING) ) {
                alt329=1;
            }
            switch (alt329) {
                case 1 :
                    // InternalSCTX.g:9695:4: (lv_name_3_0= RULE_STRING )
                    {
                    // InternalSCTX.g:9695:4: (lv_name_3_0= RULE_STRING )
                    // InternalSCTX.g:9696:5: lv_name_3_0= RULE_STRING
                    {
                    lv_name_3_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_175); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_3_0, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getNameSTRINGTerminalRuleCall_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getScheduleDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_3_0,
                      						"de.cau.cs.kieler.annotations.Annotations.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCTX.g:9712:3: (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )?
            int alt330=2;
            int LA330_0 = input.LA(1);

            if ( (LA330_0==59) ) {
                alt330=1;
            }
            switch (alt330) {
                case 1 :
                    // InternalSCTX.g:9713:4: otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) )
                    {
                    otherlv_4=(Token)match(input,59,FollowSets000.FOLLOW_176); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getGlobalKeyword_4_0());
                      			
                    }
                    // InternalSCTX.g:9717:4: ( (lv_global_5_0= rulePriorityProtocol ) )
                    // InternalSCTX.g:9718:5: (lv_global_5_0= rulePriorityProtocol )
                    {
                    // InternalSCTX.g:9718:5: (lv_global_5_0= rulePriorityProtocol )
                    // InternalSCTX.g:9719:6: lv_global_5_0= rulePriorityProtocol
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getGlobalPriorityProtocolEnumRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_177);
                    lv_global_5_0=rulePriorityProtocol();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
                      						}
                      						set(
                      							current,
                      							"global",
                      							lv_global_5_0,
                      							"de.cau.cs.kieler.kexpressions.kext.KExt.PriorityProtocol");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:9737:3: (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )?
            int alt332=2;
            int LA332_0 = input.LA(1);

            if ( (LA332_0==21) ) {
                alt332=1;
            }
            switch (alt332) {
                case 1 :
                    // InternalSCTX.g:9738:4: otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}'
                    {
                    otherlv_6=(Token)match(input,21,FollowSets000.FOLLOW_176); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getLeftCurlyBracketKeyword_5_0());
                      			
                    }
                    // InternalSCTX.g:9742:4: ( (lv_priorities_7_0= rulePriorityProtocol ) )
                    // InternalSCTX.g:9743:5: (lv_priorities_7_0= rulePriorityProtocol )
                    {
                    // InternalSCTX.g:9743:5: (lv_priorities_7_0= rulePriorityProtocol )
                    // InternalSCTX.g:9744:6: lv_priorities_7_0= rulePriorityProtocol
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getPrioritiesPriorityProtocolEnumRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_178);
                    lv_priorities_7_0=rulePriorityProtocol();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
                      						}
                      						add(
                      							current,
                      							"priorities",
                      							lv_priorities_7_0,
                      							"de.cau.cs.kieler.kexpressions.kext.KExt.PriorityProtocol");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:9761:4: (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )*
                    loop331:
                    do {
                        int alt331=2;
                        int LA331_0 = input.LA(1);

                        if ( (LA331_0==20) ) {
                            alt331=1;
                        }


                        switch (alt331) {
                    	case 1 :
                    	    // InternalSCTX.g:9762:5: otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) )
                    	    {
                    	    otherlv_8=(Token)match(input,20,FollowSets000.FOLLOW_176); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_8, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getCommaKeyword_5_2_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:9766:5: ( (lv_priorities_9_0= rulePriorityProtocol ) )
                    	    // InternalSCTX.g:9767:6: (lv_priorities_9_0= rulePriorityProtocol )
                    	    {
                    	    // InternalSCTX.g:9767:6: (lv_priorities_9_0= rulePriorityProtocol )
                    	    // InternalSCTX.g:9768:7: lv_priorities_9_0= rulePriorityProtocol
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getPrioritiesPriorityProtocolEnumRuleCall_5_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_178);
                    	    lv_priorities_9_0=rulePriorityProtocol();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"priorities",
                    	      								lv_priorities_9_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.PriorityProtocol");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop331;
                        }
                    } while (true);

                    otherlv_10=(Token)match(input,22,FollowSets000.FOLLOW_116); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getRightCurlyBracketKeyword_5_3());
                      			
                    }

                    }
                    break;

            }

            // InternalSCTX.g:9791:3: ( (lv_valuedObjects_11_0= ruleValuedObject ) )
            // InternalSCTX.g:9792:4: (lv_valuedObjects_11_0= ruleValuedObject )
            {
            // InternalSCTX.g:9792:4: (lv_valuedObjects_11_0= ruleValuedObject )
            // InternalSCTX.g:9793:5: lv_valuedObjects_11_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_6_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_115);
            lv_valuedObjects_11_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_11_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:9810:3: (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )*
            loop333:
            do {
                int alt333=2;
                int LA333_0 = input.LA(1);

                if ( (LA333_0==20) ) {
                    alt333=1;
                }


                switch (alt333) {
            	case 1 :
            	    // InternalSCTX.g:9811:4: otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) )
            	    {
            	    otherlv_12=(Token)match(input,20,FollowSets000.FOLLOW_116); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_12, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getCommaKeyword_7_0());
            	      			
            	    }
            	    // InternalSCTX.g:9815:4: ( (lv_valuedObjects_13_0= ruleValuedObject ) )
            	    // InternalSCTX.g:9816:5: (lv_valuedObjects_13_0= ruleValuedObject )
            	    {
            	    // InternalSCTX.g:9816:5: (lv_valuedObjects_13_0= ruleValuedObject )
            	    // InternalSCTX.g:9817:6: lv_valuedObjects_13_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_7_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_115);
            	    lv_valuedObjects_13_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
            	      						}
            	      						add(
            	      							current,
            	      							"valuedObjects",
            	      							lv_valuedObjects_13_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop333;
                }
            } while (true);

            // InternalSCTX.g:9835:3: ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )?
            int alt334=2;
            int LA334_0 = input.LA(1);

            if ( (LA334_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt334=1;
            }
            switch (alt334) {
                case 1 :
                    // InternalSCTX.g:9836:4: (lv_annotations_14_0= ruleCommentAnnotatonSL )
                    {
                    // InternalSCTX.g:9836:4: (lv_annotations_14_0= ruleCommentAnnotatonSL )
                    // InternalSCTX.g:9837:5: lv_annotations_14_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_8_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_14_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_14_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScheduleDeclarationWOSemicolon"


    // $ANTLR start "entryRuleValuedObject"
    // InternalSCTX.g:9858:1: entryRuleValuedObject returns [EObject current=null] : iv_ruleValuedObject= ruleValuedObject EOF ;
    public final EObject entryRuleValuedObject() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValuedObject = null;


        try {
            // InternalSCTX.g:9858:53: (iv_ruleValuedObject= ruleValuedObject EOF )
            // InternalSCTX.g:9859:2: iv_ruleValuedObject= ruleValuedObject EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValuedObjectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleValuedObject=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValuedObject; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValuedObject"


    // $ANTLR start "ruleValuedObject"
    // InternalSCTX.g:9865:1: ruleValuedObject returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )? (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )? (otherlv_9= 'label' ( (lv_label_10_0= RULE_STRING ) ) )? ) ;
    public final EObject ruleValuedObject() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token lv_label_10_0=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_cardinalities_3_0 = null;

        EObject lv_initialValue_6_0 = null;

        Enumerator lv_combineOperator_8_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:9871:2: ( ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )? (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )? (otherlv_9= 'label' ( (lv_label_10_0= RULE_STRING ) ) )? ) )
            // InternalSCTX.g:9872:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )? (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )? (otherlv_9= 'label' ( (lv_label_10_0= RULE_STRING ) ) )? )
            {
            // InternalSCTX.g:9872:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )? (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )? (otherlv_9= 'label' ( (lv_label_10_0= RULE_STRING ) ) )? )
            // InternalSCTX.g:9873:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )? (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )? (otherlv_9= 'label' ( (lv_label_10_0= RULE_STRING ) ) )?
            {
            // InternalSCTX.g:9873:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )*
            loop335:
            do {
                int alt335=2;
                int LA335_0 = input.LA(1);

                if ( (LA335_0==RULE_COMMENT_ANNOTATION||LA335_0==103) ) {
                    alt335=1;
                }


                switch (alt335) {
            	case 1 :
            	    // InternalSCTX.g:9874:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    {
            	    // InternalSCTX.g:9874:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    // InternalSCTX.g:9875:5: lv_annotations_0_0= ruleQuotedStringAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getValuedObjectAccess().getAnnotationsQuotedStringAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_116);
            	    lv_annotations_0_0=ruleQuotedStringAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getValuedObjectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.QuotedStringAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop335;
                }
            } while (true);

            // InternalSCTX.g:9892:3: ( (lv_name_1_0= rulePrimeID ) )
            // InternalSCTX.g:9893:4: (lv_name_1_0= rulePrimeID )
            {
            // InternalSCTX.g:9893:4: (lv_name_1_0= rulePrimeID )
            // InternalSCTX.g:9894:5: lv_name_1_0= rulePrimeID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getValuedObjectAccess().getNamePrimeIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_179);
            lv_name_1_0=rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getValuedObjectRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.PrimeID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:9911:3: (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )*
            loop336:
            do {
                int alt336=2;
                int LA336_0 = input.LA(1);

                if ( (LA336_0==34) ) {
                    alt336=1;
                }


                switch (alt336) {
            	case 1 :
            	    // InternalSCTX.g:9912:4: otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']'
            	    {
            	    otherlv_2=(Token)match(input,34,FollowSets000.FOLLOW_30); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getValuedObjectAccess().getLeftSquareBracketKeyword_2_0());
            	      			
            	    }
            	    // InternalSCTX.g:9916:4: ( (lv_cardinalities_3_0= ruleExpression ) )
            	    // InternalSCTX.g:9917:5: (lv_cardinalities_3_0= ruleExpression )
            	    {
            	    // InternalSCTX.g:9917:5: (lv_cardinalities_3_0= ruleExpression )
            	    // InternalSCTX.g:9918:6: lv_cardinalities_3_0= ruleExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getValuedObjectAccess().getCardinalitiesExpressionParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_36);
            	    lv_cardinalities_3_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getValuedObjectRule());
            	      						}
            	      						add(
            	      							current,
            	      							"cardinalities",
            	      							lv_cardinalities_3_0,
            	      							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_4=(Token)match(input,35,FollowSets000.FOLLOW_179); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_4, grammarAccess.getValuedObjectAccess().getRightSquareBracketKeyword_2_2());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop336;
                }
            } while (true);

            // InternalSCTX.g:9940:3: (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )?
            int alt337=2;
            int LA337_0 = input.LA(1);

            if ( (LA337_0==77) ) {
                alt337=1;
            }
            switch (alt337) {
                case 1 :
                    // InternalSCTX.g:9941:4: otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) )
                    {
                    otherlv_5=(Token)match(input,77,FollowSets000.FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getValuedObjectAccess().getEqualsSignKeyword_3_0());
                      			
                    }
                    // InternalSCTX.g:9945:4: ( (lv_initialValue_6_0= ruleExpression ) )
                    // InternalSCTX.g:9946:5: (lv_initialValue_6_0= ruleExpression )
                    {
                    // InternalSCTX.g:9946:5: (lv_initialValue_6_0= ruleExpression )
                    // InternalSCTX.g:9947:6: lv_initialValue_6_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getValuedObjectAccess().getInitialValueExpressionParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_180);
                    lv_initialValue_6_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getValuedObjectRule());
                      						}
                      						set(
                      							current,
                      							"initialValue",
                      							lv_initialValue_6_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:9965:3: (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )?
            int alt338=2;
            int LA338_0 = input.LA(1);

            if ( (LA338_0==78) ) {
                alt338=1;
            }
            switch (alt338) {
                case 1 :
                    // InternalSCTX.g:9966:4: otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) )
                    {
                    otherlv_7=(Token)match(input,78,FollowSets000.FOLLOW_181); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getValuedObjectAccess().getCombineKeyword_4_0());
                      			
                    }
                    // InternalSCTX.g:9970:4: ( (lv_combineOperator_8_0= ruleCombineOperator ) )
                    // InternalSCTX.g:9971:5: (lv_combineOperator_8_0= ruleCombineOperator )
                    {
                    // InternalSCTX.g:9971:5: (lv_combineOperator_8_0= ruleCombineOperator )
                    // InternalSCTX.g:9972:6: lv_combineOperator_8_0= ruleCombineOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getValuedObjectAccess().getCombineOperatorCombineOperatorEnumRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_46);
                    lv_combineOperator_8_0=ruleCombineOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getValuedObjectRule());
                      						}
                      						set(
                      							current,
                      							"combineOperator",
                      							lv_combineOperator_8_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.CombineOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:9990:3: (otherlv_9= 'label' ( (lv_label_10_0= RULE_STRING ) ) )?
            int alt339=2;
            int LA339_0 = input.LA(1);

            if ( (LA339_0==41) ) {
                alt339=1;
            }
            switch (alt339) {
                case 1 :
                    // InternalSCTX.g:9991:4: otherlv_9= 'label' ( (lv_label_10_0= RULE_STRING ) )
                    {
                    otherlv_9=(Token)match(input,41,FollowSets000.FOLLOW_47); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getValuedObjectAccess().getLabelKeyword_5_0());
                      			
                    }
                    // InternalSCTX.g:9995:4: ( (lv_label_10_0= RULE_STRING ) )
                    // InternalSCTX.g:9996:5: (lv_label_10_0= RULE_STRING )
                    {
                    // InternalSCTX.g:9996:5: (lv_label_10_0= RULE_STRING )
                    // InternalSCTX.g:9997:6: lv_label_10_0= RULE_STRING
                    {
                    lv_label_10_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_10_0, grammarAccess.getValuedObjectAccess().getLabelSTRINGTerminalRuleCall_5_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getValuedObjectRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_10_0,
                      							"de.cau.cs.kieler.annotations.Annotations.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValuedObject"


    // $ANTLR start "entryRuleSimpleValuedObject"
    // InternalSCTX.g:10018:1: entryRuleSimpleValuedObject returns [EObject current=null] : iv_ruleSimpleValuedObject= ruleSimpleValuedObject EOF ;
    public final EObject entryRuleSimpleValuedObject() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimpleValuedObject = null;


        try {
            // InternalSCTX.g:10018:59: (iv_ruleSimpleValuedObject= ruleSimpleValuedObject EOF )
            // InternalSCTX.g:10019:2: iv_ruleSimpleValuedObject= ruleSimpleValuedObject EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimpleValuedObjectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSimpleValuedObject=ruleSimpleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimpleValuedObject; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimpleValuedObject"


    // $ANTLR start "ruleSimpleValuedObject"
    // InternalSCTX.g:10025:1: ruleSimpleValuedObject returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) ) ;
    public final EObject ruleSimpleValuedObject() throws RecognitionException {
        EObject current = null;

        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:10031:2: ( ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) ) )
            // InternalSCTX.g:10032:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) )
            {
            // InternalSCTX.g:10032:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) )
            // InternalSCTX.g:10033:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) )
            {
            // InternalSCTX.g:10033:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )*
            loop340:
            do {
                int alt340=2;
                int LA340_0 = input.LA(1);

                if ( (LA340_0==RULE_COMMENT_ANNOTATION||LA340_0==103) ) {
                    alt340=1;
                }


                switch (alt340) {
            	case 1 :
            	    // InternalSCTX.g:10034:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    {
            	    // InternalSCTX.g:10034:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    // InternalSCTX.g:10035:5: lv_annotations_0_0= ruleQuotedStringAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSimpleValuedObjectAccess().getAnnotationsQuotedStringAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_116);
            	    lv_annotations_0_0=ruleQuotedStringAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSimpleValuedObjectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.QuotedStringAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop340;
                }
            } while (true);

            // InternalSCTX.g:10052:3: ( (lv_name_1_0= rulePrimeID ) )
            // InternalSCTX.g:10053:4: (lv_name_1_0= rulePrimeID )
            {
            // InternalSCTX.g:10053:4: (lv_name_1_0= rulePrimeID )
            // InternalSCTX.g:10054:5: lv_name_1_0= rulePrimeID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSimpleValuedObjectAccess().getNamePrimeIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_name_1_0=rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSimpleValuedObjectRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.PrimeID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimpleValuedObject"


    // $ANTLR start "entrySuperEffect"
    // InternalSCTX.g:10075:1: entrySuperEffect returns [EObject current=null] : iv_superEffect= superEffect EOF ;
    public final EObject entrySuperEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_superEffect = null;


        try {
            // InternalSCTX.g:10075:48: (iv_superEffect= superEffect EOF )
            // InternalSCTX.g:10076:2: iv_superEffect= superEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getKEffectsEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_superEffect=superEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_superEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entrySuperEffect"


    // $ANTLR start "superEffect"
    // InternalSCTX.g:10082:1: superEffect returns [EObject current=null] : (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | this_ValuedEmission_2= ruleValuedEmission | this_HostcodeEffect_3= ruleHostcodeEffect | this_ReferenceCallEffect_4= ruleReferenceCallEffect | this_FunctionCallEffect_5= ruleFunctionCallEffect | this_PrintCallEffect_6= rulePrintCallEffect | this_RandomizeCallEffect_7= ruleRandomizeCallEffect | this_PureEmission_8= rulePureEmission ) ;
    public final EObject superEffect() throws RecognitionException {
        EObject current = null;

        EObject this_Assignment_0 = null;

        EObject this_PostfixEffect_1 = null;

        EObject this_ValuedEmission_2 = null;

        EObject this_HostcodeEffect_3 = null;

        EObject this_ReferenceCallEffect_4 = null;

        EObject this_FunctionCallEffect_5 = null;

        EObject this_PrintCallEffect_6 = null;

        EObject this_RandomizeCallEffect_7 = null;

        EObject this_PureEmission_8 = null;



        	enterRule();

        try {
            // InternalSCTX.g:10088:2: ( (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | this_ValuedEmission_2= ruleValuedEmission | this_HostcodeEffect_3= ruleHostcodeEffect | this_ReferenceCallEffect_4= ruleReferenceCallEffect | this_FunctionCallEffect_5= ruleFunctionCallEffect | this_PrintCallEffect_6= rulePrintCallEffect | this_RandomizeCallEffect_7= ruleRandomizeCallEffect | this_PureEmission_8= rulePureEmission ) )
            // InternalSCTX.g:10089:2: (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | this_ValuedEmission_2= ruleValuedEmission | this_HostcodeEffect_3= ruleHostcodeEffect | this_ReferenceCallEffect_4= ruleReferenceCallEffect | this_FunctionCallEffect_5= ruleFunctionCallEffect | this_PrintCallEffect_6= rulePrintCallEffect | this_RandomizeCallEffect_7= ruleRandomizeCallEffect | this_PureEmission_8= rulePureEmission )
            {
            // InternalSCTX.g:10089:2: (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | this_ValuedEmission_2= ruleValuedEmission | this_HostcodeEffect_3= ruleHostcodeEffect | this_ReferenceCallEffect_4= ruleReferenceCallEffect | this_FunctionCallEffect_5= ruleFunctionCallEffect | this_PrintCallEffect_6= rulePrintCallEffect | this_RandomizeCallEffect_7= ruleRandomizeCallEffect | this_PureEmission_8= rulePureEmission )
            int alt341=9;
            alt341 = dfa341.predict(input);
            switch (alt341) {
                case 1 :
                    // InternalSCTX.g:10090:3: this_Assignment_0= ruleAssignment
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getKEffectsEffectAccess().getAssignmentParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Assignment_0=ruleAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Assignment_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:10102:3: this_PostfixEffect_1= rulePostfixEffect
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getKEffectsEffectAccess().getPostfixEffectParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PostfixEffect_1=rulePostfixEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PostfixEffect_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:10114:3: this_ValuedEmission_2= ruleValuedEmission
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getKEffectsEffectAccess().getValuedEmissionParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedEmission_2=ruleValuedEmission();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ValuedEmission_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSCTX.g:10126:3: this_HostcodeEffect_3= ruleHostcodeEffect
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getKEffectsEffectAccess().getHostcodeEffectParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_HostcodeEffect_3=ruleHostcodeEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_HostcodeEffect_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalSCTX.g:10138:3: this_ReferenceCallEffect_4= ruleReferenceCallEffect
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getKEffectsEffectAccess().getReferenceCallEffectParserRuleCall_4());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ReferenceCallEffect_4=ruleReferenceCallEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ReferenceCallEffect_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalSCTX.g:10150:3: this_FunctionCallEffect_5= ruleFunctionCallEffect
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getKEffectsEffectAccess().getFunctionCallEffectParserRuleCall_5());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_FunctionCallEffect_5=ruleFunctionCallEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FunctionCallEffect_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalSCTX.g:10162:3: this_PrintCallEffect_6= rulePrintCallEffect
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getKEffectsEffectAccess().getPrintCallEffectParserRuleCall_6());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PrintCallEffect_6=rulePrintCallEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PrintCallEffect_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalSCTX.g:10174:3: this_RandomizeCallEffect_7= ruleRandomizeCallEffect
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getKEffectsEffectAccess().getRandomizeCallEffectParserRuleCall_7());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_RandomizeCallEffect_7=ruleRandomizeCallEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_RandomizeCallEffect_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalSCTX.g:10186:3: this_PureEmission_8= rulePureEmission
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getKEffectsEffectAccess().getPureEmissionParserRuleCall_8());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PureEmission_8=rulePureEmission();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PureEmission_8;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "superEffect"


    // $ANTLR start "entryRulePureEmission"
    // InternalSCTX.g:10201:1: entryRulePureEmission returns [EObject current=null] : iv_rulePureEmission= rulePureEmission EOF ;
    public final EObject entryRulePureEmission() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePureEmission = null;


        try {
            // InternalSCTX.g:10201:53: (iv_rulePureEmission= rulePureEmission EOF )
            // InternalSCTX.g:10202:2: iv_rulePureEmission= rulePureEmission EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPureEmissionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePureEmission=rulePureEmission();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePureEmission; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePureEmission"


    // $ANTLR start "rulePureEmission"
    // InternalSCTX.g:10208:1: rulePureEmission returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )? ) ;
    public final EObject rulePureEmission() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_reference_1_0 = null;

        EObject lv_schedule_3_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:10214:2: ( ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )? ) )
            // InternalSCTX.g:10215:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )? )
            {
            // InternalSCTX.g:10215:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )? )
            // InternalSCTX.g:10216:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )?
            {
            // InternalSCTX.g:10216:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )*
            loop342:
            do {
                int alt342=2;
                int LA342_0 = input.LA(1);

                if ( (LA342_0==RULE_COMMENT_ANNOTATION||LA342_0==103) ) {
                    alt342=1;
                }


                switch (alt342) {
            	case 1 :
            	    // InternalSCTX.g:10217:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    {
            	    // InternalSCTX.g:10217:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    // InternalSCTX.g:10218:5: lv_annotations_0_0= ruleQuotedStringAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getPureEmissionAccess().getAnnotationsQuotedStringAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_69);
            	    lv_annotations_0_0=ruleQuotedStringAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getPureEmissionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.QuotedStringAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop342;
                }
            } while (true);

            // InternalSCTX.g:10235:3: ( (lv_reference_1_0= ruleValuedObjectReference ) )
            // InternalSCTX.g:10236:4: (lv_reference_1_0= ruleValuedObjectReference )
            {
            // InternalSCTX.g:10236:4: (lv_reference_1_0= ruleValuedObjectReference )
            // InternalSCTX.g:10237:5: lv_reference_1_0= ruleValuedObjectReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPureEmissionAccess().getReferenceValuedObjectReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_59);
            lv_reference_1_0=ruleValuedObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPureEmissionRule());
              					}
              					set(
              						current,
              						"reference",
              						lv_reference_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:10254:3: (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )?
            int alt344=2;
            int LA344_0 = input.LA(1);

            if ( (LA344_0==29) ) {
                alt344=1;
            }
            switch (alt344) {
                case 1 :
                    // InternalSCTX.g:10255:4: otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_2=(Token)match(input,29,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getPureEmissionAccess().getScheduleKeyword_2_0());
                      			
                    }
                    // InternalSCTX.g:10259:4: ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+
                    int cnt343=0;
                    loop343:
                    do {
                        int alt343=2;
                        alt343 = dfa343.predict(input);
                        switch (alt343) {
                    	case 1 :
                    	    // InternalSCTX.g:10260:5: (lv_schedule_3_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCTX.g:10260:5: (lv_schedule_3_0= ruleScheduleObjectReference )
                    	    // InternalSCTX.g:10261:6: lv_schedule_3_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getPureEmissionAccess().getScheduleScheduleObjectReferenceParserRuleCall_2_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_60);
                    	    lv_schedule_3_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getPureEmissionRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_3_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt343 >= 1 ) break loop343;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(343, input);
                                throw eee;
                        }
                        cnt343++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePureEmission"


    // $ANTLR start "entryRuleValuedEmission"
    // InternalSCTX.g:10283:1: entryRuleValuedEmission returns [EObject current=null] : iv_ruleValuedEmission= ruleValuedEmission EOF ;
    public final EObject entryRuleValuedEmission() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValuedEmission = null;


        try {
            // InternalSCTX.g:10283:55: (iv_ruleValuedEmission= ruleValuedEmission EOF )
            // InternalSCTX.g:10284:2: iv_ruleValuedEmission= ruleValuedEmission EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValuedEmissionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleValuedEmission=ruleValuedEmission();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValuedEmission; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValuedEmission"


    // $ANTLR start "ruleValuedEmission"
    // InternalSCTX.g:10290:1: ruleValuedEmission returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )? ) ;
    public final EObject ruleValuedEmission() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_reference_1_0 = null;

        EObject lv_newValue_3_0 = null;

        EObject lv_schedule_6_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:10296:2: ( ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )? ) )
            // InternalSCTX.g:10297:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )? )
            {
            // InternalSCTX.g:10297:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )? )
            // InternalSCTX.g:10298:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )?
            {
            // InternalSCTX.g:10298:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )*
            loop345:
            do {
                int alt345=2;
                int LA345_0 = input.LA(1);

                if ( (LA345_0==RULE_COMMENT_ANNOTATION||LA345_0==103) ) {
                    alt345=1;
                }


                switch (alt345) {
            	case 1 :
            	    // InternalSCTX.g:10299:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    {
            	    // InternalSCTX.g:10299:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    // InternalSCTX.g:10300:5: lv_annotations_0_0= ruleQuotedStringAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getValuedEmissionAccess().getAnnotationsQuotedStringAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_69);
            	    lv_annotations_0_0=ruleQuotedStringAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getValuedEmissionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.QuotedStringAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop345;
                }
            } while (true);

            // InternalSCTX.g:10317:3: ( (lv_reference_1_0= ruleValuedObjectReference ) )
            // InternalSCTX.g:10318:4: (lv_reference_1_0= ruleValuedObjectReference )
            {
            // InternalSCTX.g:10318:4: (lv_reference_1_0= ruleValuedObjectReference )
            // InternalSCTX.g:10319:5: lv_reference_1_0= ruleValuedObjectReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getValuedEmissionAccess().getReferenceValuedObjectReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_149);
            lv_reference_1_0=ruleValuedObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getValuedEmissionRule());
              					}
              					set(
              						current,
              						"reference",
              						lv_reference_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,31,FollowSets000.FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getValuedEmissionAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalSCTX.g:10340:3: ( (lv_newValue_3_0= ruleExpression ) )
            // InternalSCTX.g:10341:4: (lv_newValue_3_0= ruleExpression )
            {
            // InternalSCTX.g:10341:4: (lv_newValue_3_0= ruleExpression )
            // InternalSCTX.g:10342:5: lv_newValue_3_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getValuedEmissionAccess().getNewValueExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_32);
            lv_newValue_3_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getValuedEmissionRule());
              					}
              					set(
              						current,
              						"newValue",
              						lv_newValue_3_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,32,FollowSets000.FOLLOW_59); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getValuedEmissionAccess().getRightParenthesisKeyword_4());
              		
            }
            // InternalSCTX.g:10363:3: (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )?
            int alt347=2;
            int LA347_0 = input.LA(1);

            if ( (LA347_0==29) ) {
                alt347=1;
            }
            switch (alt347) {
                case 1 :
                    // InternalSCTX.g:10364:4: otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_5=(Token)match(input,29,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getValuedEmissionAccess().getScheduleKeyword_5_0());
                      			
                    }
                    // InternalSCTX.g:10368:4: ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+
                    int cnt346=0;
                    loop346:
                    do {
                        int alt346=2;
                        alt346 = dfa346.predict(input);
                        switch (alt346) {
                    	case 1 :
                    	    // InternalSCTX.g:10369:5: (lv_schedule_6_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCTX.g:10369:5: (lv_schedule_6_0= ruleScheduleObjectReference )
                    	    // InternalSCTX.g:10370:6: lv_schedule_6_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getValuedEmissionAccess().getScheduleScheduleObjectReferenceParserRuleCall_5_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_60);
                    	    lv_schedule_6_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getValuedEmissionRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_6_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt346 >= 1 ) break loop346;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(346, input);
                                throw eee;
                        }
                        cnt346++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValuedEmission"


    // $ANTLR start "entryRuleAssignment"
    // InternalSCTX.g:10392:1: entryRuleAssignment returns [EObject current=null] : iv_ruleAssignment= ruleAssignment EOF ;
    public final EObject entryRuleAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAssignment = null;


        try {
            // InternalSCTX.g:10392:51: (iv_ruleAssignment= ruleAssignment EOF )
            // InternalSCTX.g:10393:2: iv_ruleAssignment= ruleAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAssignmentRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAssignment=ruleAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAssignment; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAssignment"


    // $ANTLR start "ruleAssignment"
    // InternalSCTX.g:10399:1: ruleAssignment returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? ) ;
    public final EObject ruleAssignment() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_reference_1_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_expression_3_0 = null;

        EObject lv_schedule_5_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:10405:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? ) )
            // InternalSCTX.g:10406:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? )
            {
            // InternalSCTX.g:10406:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? )
            // InternalSCTX.g:10407:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )?
            {
            // InternalSCTX.g:10407:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop348:
            do {
                int alt348=2;
                int LA348_0 = input.LA(1);

                if ( (LA348_0==RULE_COMMENT_ANNOTATION||LA348_0==103) ) {
                    alt348=1;
                }


                switch (alt348) {
            	case 1 :
            	    // InternalSCTX.g:10408:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:10408:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:10409:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAssignmentAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_69);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAssignmentRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop348;
                }
            } while (true);

            // InternalSCTX.g:10426:3: ( (lv_reference_1_0= ruleValuedObjectReference ) )
            // InternalSCTX.g:10427:4: (lv_reference_1_0= ruleValuedObjectReference )
            {
            // InternalSCTX.g:10427:4: (lv_reference_1_0= ruleValuedObjectReference )
            // InternalSCTX.g:10428:5: lv_reference_1_0= ruleValuedObjectReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAssignmentAccess().getReferenceValuedObjectReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_70);
            lv_reference_1_0=ruleValuedObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAssignmentRule());
              					}
              					set(
              						current,
              						"reference",
              						lv_reference_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:10445:3: ( (lv_operator_2_0= ruleAssignOperator ) )
            // InternalSCTX.g:10446:4: (lv_operator_2_0= ruleAssignOperator )
            {
            // InternalSCTX.g:10446:4: (lv_operator_2_0= ruleAssignOperator )
            // InternalSCTX.g:10447:5: lv_operator_2_0= ruleAssignOperator
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAssignmentAccess().getOperatorAssignOperatorEnumRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_30);
            lv_operator_2_0=ruleAssignOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAssignmentRule());
              					}
              					set(
              						current,
              						"operator",
              						lv_operator_2_0,
              						"de.cau.cs.kieler.kexpressions.keffects.KEffects.AssignOperator");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:10464:3: ( (lv_expression_3_0= ruleExpression ) )
            // InternalSCTX.g:10465:4: (lv_expression_3_0= ruleExpression )
            {
            // InternalSCTX.g:10465:4: (lv_expression_3_0= ruleExpression )
            // InternalSCTX.g:10466:5: lv_expression_3_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAssignmentAccess().getExpressionExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_59);
            lv_expression_3_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAssignmentRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_3_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:10483:3: (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )?
            int alt350=2;
            int LA350_0 = input.LA(1);

            if ( (LA350_0==29) ) {
                alt350=1;
            }
            switch (alt350) {
                case 1 :
                    // InternalSCTX.g:10484:4: otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_4=(Token)match(input,29,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getAssignmentAccess().getScheduleKeyword_4_0());
                      			
                    }
                    // InternalSCTX.g:10488:4: ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+
                    int cnt349=0;
                    loop349:
                    do {
                        int alt349=2;
                        alt349 = dfa349.predict(input);
                        switch (alt349) {
                    	case 1 :
                    	    // InternalSCTX.g:10489:5: (lv_schedule_5_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCTX.g:10489:5: (lv_schedule_5_0= ruleScheduleObjectReference )
                    	    // InternalSCTX.g:10490:6: lv_schedule_5_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getAssignmentAccess().getScheduleScheduleObjectReferenceParserRuleCall_4_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_60);
                    	    lv_schedule_5_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getAssignmentRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_5_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt349 >= 1 ) break loop349;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(349, input);
                                throw eee;
                        }
                        cnt349++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAssignment"


    // $ANTLR start "entryRulePostfixEffect"
    // InternalSCTX.g:10512:1: entryRulePostfixEffect returns [EObject current=null] : iv_rulePostfixEffect= rulePostfixEffect EOF ;
    public final EObject entryRulePostfixEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePostfixEffect = null;


        try {
            // InternalSCTX.g:10512:54: (iv_rulePostfixEffect= rulePostfixEffect EOF )
            // InternalSCTX.g:10513:2: iv_rulePostfixEffect= rulePostfixEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPostfixEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePostfixEffect=rulePostfixEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePostfixEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePostfixEffect"


    // $ANTLR start "rulePostfixEffect"
    // InternalSCTX.g:10519:1: rulePostfixEffect returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )? ) ;
    public final EObject rulePostfixEffect() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_reference_1_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_schedule_4_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:10525:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )? ) )
            // InternalSCTX.g:10526:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )? )
            {
            // InternalSCTX.g:10526:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )? )
            // InternalSCTX.g:10527:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )?
            {
            // InternalSCTX.g:10527:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop351:
            do {
                int alt351=2;
                int LA351_0 = input.LA(1);

                if ( (LA351_0==RULE_COMMENT_ANNOTATION||LA351_0==103) ) {
                    alt351=1;
                }


                switch (alt351) {
            	case 1 :
            	    // InternalSCTX.g:10528:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:10528:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:10529:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getPostfixEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_69);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getPostfixEffectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop351;
                }
            } while (true);

            // InternalSCTX.g:10546:3: ( (lv_reference_1_0= ruleValuedObjectReference ) )
            // InternalSCTX.g:10547:4: (lv_reference_1_0= ruleValuedObjectReference )
            {
            // InternalSCTX.g:10547:4: (lv_reference_1_0= ruleValuedObjectReference )
            // InternalSCTX.g:10548:5: lv_reference_1_0= ruleValuedObjectReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPostfixEffectAccess().getReferenceValuedObjectReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_143);
            lv_reference_1_0=ruleValuedObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPostfixEffectRule());
              					}
              					set(
              						current,
              						"reference",
              						lv_reference_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:10565:3: ( (lv_operator_2_0= rulePostfixOperator ) )
            // InternalSCTX.g:10566:4: (lv_operator_2_0= rulePostfixOperator )
            {
            // InternalSCTX.g:10566:4: (lv_operator_2_0= rulePostfixOperator )
            // InternalSCTX.g:10567:5: lv_operator_2_0= rulePostfixOperator
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPostfixEffectAccess().getOperatorPostfixOperatorEnumRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_59);
            lv_operator_2_0=rulePostfixOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPostfixEffectRule());
              					}
              					set(
              						current,
              						"operator",
              						lv_operator_2_0,
              						"de.cau.cs.kieler.kexpressions.keffects.KEffects.PostfixOperator");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:10584:3: (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )?
            int alt353=2;
            int LA353_0 = input.LA(1);

            if ( (LA353_0==29) ) {
                alt353=1;
            }
            switch (alt353) {
                case 1 :
                    // InternalSCTX.g:10585:4: otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_3=(Token)match(input,29,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getPostfixEffectAccess().getScheduleKeyword_3_0());
                      			
                    }
                    // InternalSCTX.g:10589:4: ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+
                    int cnt352=0;
                    loop352:
                    do {
                        int alt352=2;
                        alt352 = dfa352.predict(input);
                        switch (alt352) {
                    	case 1 :
                    	    // InternalSCTX.g:10590:5: (lv_schedule_4_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCTX.g:10590:5: (lv_schedule_4_0= ruleScheduleObjectReference )
                    	    // InternalSCTX.g:10591:6: lv_schedule_4_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getPostfixEffectAccess().getScheduleScheduleObjectReferenceParserRuleCall_3_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_60);
                    	    lv_schedule_4_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getPostfixEffectRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_4_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt352 >= 1 ) break loop352;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(352, input);
                                throw eee;
                        }
                        cnt352++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePostfixEffect"


    // $ANTLR start "entryRuleHostcodeEffect"
    // InternalSCTX.g:10613:1: entryRuleHostcodeEffect returns [EObject current=null] : iv_ruleHostcodeEffect= ruleHostcodeEffect EOF ;
    public final EObject entryRuleHostcodeEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleHostcodeEffect = null;


        try {
            // InternalSCTX.g:10613:55: (iv_ruleHostcodeEffect= ruleHostcodeEffect EOF )
            // InternalSCTX.g:10614:2: iv_ruleHostcodeEffect= ruleHostcodeEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getHostcodeEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleHostcodeEffect=ruleHostcodeEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleHostcodeEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleHostcodeEffect"


    // $ANTLR start "ruleHostcodeEffect"
    // InternalSCTX.g:10620:1: ruleHostcodeEffect returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) ) ;
    public final EObject ruleHostcodeEffect() throws RecognitionException {
        EObject current = null;

        Token lv_text_1_0=null;
        EObject lv_annotations_0_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:10626:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) ) )
            // InternalSCTX.g:10627:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) )
            {
            // InternalSCTX.g:10627:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) )
            // InternalSCTX.g:10628:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) )
            {
            // InternalSCTX.g:10628:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop354:
            do {
                int alt354=2;
                int LA354_0 = input.LA(1);

                if ( (LA354_0==RULE_COMMENT_ANNOTATION||LA354_0==103) ) {
                    alt354=1;
                }


                switch (alt354) {
            	case 1 :
            	    // InternalSCTX.g:10629:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:10629:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:10630:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getHostcodeEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_182);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getHostcodeEffectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop354;
                }
            } while (true);

            // InternalSCTX.g:10647:3: ( (lv_text_1_0= RULE_HOSTCODE ) )
            // InternalSCTX.g:10648:4: (lv_text_1_0= RULE_HOSTCODE )
            {
            // InternalSCTX.g:10648:4: (lv_text_1_0= RULE_HOSTCODE )
            // InternalSCTX.g:10649:5: lv_text_1_0= RULE_HOSTCODE
            {
            lv_text_1_0=(Token)match(input,RULE_HOSTCODE,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_text_1_0, grammarAccess.getHostcodeEffectAccess().getTextHOSTCODETerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getHostcodeEffectRule());
              					}
              					setWithLastConsumed(
              						current,
              						"text",
              						lv_text_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.HOSTCODE");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleHostcodeEffect"


    // $ANTLR start "entryRuleReferenceCallEffect"
    // InternalSCTX.g:10669:1: entryRuleReferenceCallEffect returns [EObject current=null] : iv_ruleReferenceCallEffect= ruleReferenceCallEffect EOF ;
    public final EObject entryRuleReferenceCallEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReferenceCallEffect = null;


        try {
            // InternalSCTX.g:10669:60: (iv_ruleReferenceCallEffect= ruleReferenceCallEffect EOF )
            // InternalSCTX.g:10670:2: iv_ruleReferenceCallEffect= ruleReferenceCallEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReferenceCallEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleReferenceCallEffect=ruleReferenceCallEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReferenceCallEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReferenceCallEffect"


    // $ANTLR start "ruleReferenceCallEffect"
    // InternalSCTX.g:10676:1: ruleReferenceCallEffect returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) ) )? ( (otherlv_7= '(' ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) ) )* otherlv_11= ')' ) | otherlv_12= '()' ) (otherlv_13= 'schedule' ( (lv_schedule_14_0= ruleScheduleObjectReference ) )+ )? ) ;
    public final EObject ruleReferenceCallEffect() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_indices_3_0 = null;

        EObject lv_subReference_6_0 = null;

        EObject lv_parameters_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_schedule_14_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:10682:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) ) )? ( (otherlv_7= '(' ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) ) )* otherlv_11= ')' ) | otherlv_12= '()' ) (otherlv_13= 'schedule' ( (lv_schedule_14_0= ruleScheduleObjectReference ) )+ )? ) )
            // InternalSCTX.g:10683:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) ) )? ( (otherlv_7= '(' ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) ) )* otherlv_11= ')' ) | otherlv_12= '()' ) (otherlv_13= 'schedule' ( (lv_schedule_14_0= ruleScheduleObjectReference ) )+ )? )
            {
            // InternalSCTX.g:10683:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) ) )? ( (otherlv_7= '(' ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) ) )* otherlv_11= ')' ) | otherlv_12= '()' ) (otherlv_13= 'schedule' ( (lv_schedule_14_0= ruleScheduleObjectReference ) )+ )? )
            // InternalSCTX.g:10684:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) ) )? ( (otherlv_7= '(' ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) ) )* otherlv_11= ')' ) | otherlv_12= '()' ) (otherlv_13= 'schedule' ( (lv_schedule_14_0= ruleScheduleObjectReference ) )+ )?
            {
            // InternalSCTX.g:10684:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop355:
            do {
                int alt355=2;
                int LA355_0 = input.LA(1);

                if ( (LA355_0==RULE_COMMENT_ANNOTATION||LA355_0==103) ) {
                    alt355=1;
                }


                switch (alt355) {
            	case 1 :
            	    // InternalSCTX.g:10685:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:10685:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:10686:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_116);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getReferenceCallEffectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop355;
                }
            } while (true);

            // InternalSCTX.g:10703:3: ( ( rulePrimeID ) )
            // InternalSCTX.g:10704:4: ( rulePrimeID )
            {
            // InternalSCTX.g:10704:4: ( rulePrimeID )
            // InternalSCTX.g:10705:5: rulePrimeID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getReferenceCallEffectRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getValuedObjectValuedObjectCrossReference_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_183);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:10722:3: (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )*
            loop356:
            do {
                int alt356=2;
                int LA356_0 = input.LA(1);

                if ( (LA356_0==34) ) {
                    alt356=1;
                }


                switch (alt356) {
            	case 1 :
            	    // InternalSCTX.g:10723:4: otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']'
            	    {
            	    otherlv_2=(Token)match(input,34,FollowSets000.FOLLOW_30); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getReferenceCallEffectAccess().getLeftSquareBracketKeyword_2_0());
            	      			
            	    }
            	    // InternalSCTX.g:10727:4: ( (lv_indices_3_0= ruleExpression ) )
            	    // InternalSCTX.g:10728:5: (lv_indices_3_0= ruleExpression )
            	    {
            	    // InternalSCTX.g:10728:5: (lv_indices_3_0= ruleExpression )
            	    // InternalSCTX.g:10729:6: lv_indices_3_0= ruleExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getIndicesExpressionParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_36);
            	    lv_indices_3_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getReferenceCallEffectRule());
            	      						}
            	      						add(
            	      							current,
            	      							"indices",
            	      							lv_indices_3_0,
            	      							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_4=(Token)match(input,35,FollowSets000.FOLLOW_183); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_4, grammarAccess.getReferenceCallEffectAccess().getRightSquareBracketKeyword_2_2());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop356;
                }
            } while (true);

            // InternalSCTX.g:10751:3: (otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) ) )?
            int alt357=2;
            int LA357_0 = input.LA(1);

            if ( (LA357_0==79) ) {
                alt357=1;
            }
            switch (alt357) {
                case 1 :
                    // InternalSCTX.g:10752:4: otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) )
                    {
                    otherlv_5=(Token)match(input,79,FollowSets000.FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getReferenceCallEffectAccess().getFullStopKeyword_3_0());
                      			
                    }
                    // InternalSCTX.g:10756:4: ( (lv_subReference_6_0= ruleValuedObjectReference ) )
                    // InternalSCTX.g:10757:5: (lv_subReference_6_0= ruleValuedObjectReference )
                    {
                    // InternalSCTX.g:10757:5: (lv_subReference_6_0= ruleValuedObjectReference )
                    // InternalSCTX.g:10758:6: lv_subReference_6_0= ruleValuedObjectReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getSubReferenceValuedObjectReferenceParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_130);
                    lv_subReference_6_0=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getReferenceCallEffectRule());
                      						}
                      						set(
                      							current,
                      							"subReference",
                      							lv_subReference_6_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:10776:3: ( (otherlv_7= '(' ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) ) )* otherlv_11= ')' ) | otherlv_12= '()' )
            int alt359=2;
            int LA359_0 = input.LA(1);

            if ( (LA359_0==31) ) {
                alt359=1;
            }
            else if ( (LA359_0==65) ) {
                alt359=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 359, 0, input);

                throw nvae;
            }
            switch (alt359) {
                case 1 :
                    // InternalSCTX.g:10777:4: (otherlv_7= '(' ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) ) )* otherlv_11= ')' )
                    {
                    // InternalSCTX.g:10777:4: (otherlv_7= '(' ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) ) )* otherlv_11= ')' )
                    // InternalSCTX.g:10778:5: otherlv_7= '(' ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) ) )* otherlv_11= ')'
                    {
                    otherlv_7=(Token)match(input,31,FollowSets000.FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getReferenceCallEffectAccess().getLeftParenthesisKeyword_4_0_0());
                      				
                    }
                    // InternalSCTX.g:10782:5: ( (lv_parameters_8_0= ruleParameter ) )
                    // InternalSCTX.g:10783:6: (lv_parameters_8_0= ruleParameter )
                    {
                    // InternalSCTX.g:10783:6: (lv_parameters_8_0= ruleParameter )
                    // InternalSCTX.g:10784:7: lv_parameters_8_0= ruleParameter
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getParametersParameterParserRuleCall_4_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_31);
                    lv_parameters_8_0=ruleParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getReferenceCallEffectRule());
                      							}
                      							add(
                      								current,
                      								"parameters",
                      								lv_parameters_8_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:10801:5: (otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) ) )*
                    loop358:
                    do {
                        int alt358=2;
                        int LA358_0 = input.LA(1);

                        if ( (LA358_0==20) ) {
                            alt358=1;
                        }


                        switch (alt358) {
                    	case 1 :
                    	    // InternalSCTX.g:10802:6: otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) )
                    	    {
                    	    otherlv_9=(Token)match(input,20,FollowSets000.FOLLOW_30); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_9, grammarAccess.getReferenceCallEffectAccess().getCommaKeyword_4_0_2_0());
                    	      					
                    	    }
                    	    // InternalSCTX.g:10806:6: ( (lv_parameters_10_0= ruleParameter ) )
                    	    // InternalSCTX.g:10807:7: (lv_parameters_10_0= ruleParameter )
                    	    {
                    	    // InternalSCTX.g:10807:7: (lv_parameters_10_0= ruleParameter )
                    	    // InternalSCTX.g:10808:8: lv_parameters_10_0= ruleParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getParametersParameterParserRuleCall_4_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_31);
                    	    lv_parameters_10_0=ruleParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getReferenceCallEffectRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"parameters",
                    	      									lv_parameters_10_0,
                    	      									"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop358;
                        }
                    } while (true);

                    otherlv_11=(Token)match(input,32,FollowSets000.FOLLOW_59); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_11, grammarAccess.getReferenceCallEffectAccess().getRightParenthesisKeyword_4_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:10832:4: otherlv_12= '()'
                    {
                    otherlv_12=(Token)match(input,65,FollowSets000.FOLLOW_59); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getReferenceCallEffectAccess().getLeftParenthesisRightParenthesisKeyword_4_1());
                      			
                    }

                    }
                    break;

            }

            // InternalSCTX.g:10837:3: (otherlv_13= 'schedule' ( (lv_schedule_14_0= ruleScheduleObjectReference ) )+ )?
            int alt361=2;
            int LA361_0 = input.LA(1);

            if ( (LA361_0==29) ) {
                alt361=1;
            }
            switch (alt361) {
                case 1 :
                    // InternalSCTX.g:10838:4: otherlv_13= 'schedule' ( (lv_schedule_14_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_13=(Token)match(input,29,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getReferenceCallEffectAccess().getScheduleKeyword_5_0());
                      			
                    }
                    // InternalSCTX.g:10842:4: ( (lv_schedule_14_0= ruleScheduleObjectReference ) )+
                    int cnt360=0;
                    loop360:
                    do {
                        int alt360=2;
                        alt360 = dfa360.predict(input);
                        switch (alt360) {
                    	case 1 :
                    	    // InternalSCTX.g:10843:5: (lv_schedule_14_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCTX.g:10843:5: (lv_schedule_14_0= ruleScheduleObjectReference )
                    	    // InternalSCTX.g:10844:6: lv_schedule_14_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getScheduleScheduleObjectReferenceParserRuleCall_5_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_60);
                    	    lv_schedule_14_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getReferenceCallEffectRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_14_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt360 >= 1 ) break loop360;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(360, input);
                                throw eee;
                        }
                        cnt360++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReferenceCallEffect"


    // $ANTLR start "entryRuleFunctionCallEffect"
    // InternalSCTX.g:10866:1: entryRuleFunctionCallEffect returns [EObject current=null] : iv_ruleFunctionCallEffect= ruleFunctionCallEffect EOF ;
    public final EObject entryRuleFunctionCallEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionCallEffect = null;


        try {
            // InternalSCTX.g:10866:59: (iv_ruleFunctionCallEffect= ruleFunctionCallEffect EOF )
            // InternalSCTX.g:10867:2: iv_ruleFunctionCallEffect= ruleFunctionCallEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionCallEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFunctionCallEffect=ruleFunctionCallEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionCallEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionCallEffect"


    // $ANTLR start "ruleFunctionCallEffect"
    // InternalSCTX.g:10873:1: ruleFunctionCallEffect returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) ) ;
    public final EObject ruleFunctionCallEffect() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_functionName_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_parameters_4_0 = null;

        EObject lv_parameters_6_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:10879:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) ) )
            // InternalSCTX.g:10880:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) )
            {
            // InternalSCTX.g:10880:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) )
            // InternalSCTX.g:10881:3: ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) )
            {
            // InternalSCTX.g:10881:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop362:
            do {
                int alt362=2;
                int LA362_0 = input.LA(1);

                if ( (LA362_0==RULE_COMMENT_ANNOTATION||LA362_0==103) ) {
                    alt362=1;
                }


                switch (alt362) {
            	case 1 :
            	    // InternalSCTX.g:10882:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:10882:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:10883:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getFunctionCallEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_184);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getFunctionCallEffectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop362;
                }
            } while (true);

            // InternalSCTX.g:10900:3: (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) )
            // InternalSCTX.g:10901:4: otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' )
            {
            otherlv_1=(Token)match(input,76,FollowSets000.FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_1, grammarAccess.getFunctionCallEffectAccess().getExternKeyword_1_0());
              			
            }
            // InternalSCTX.g:10905:4: ( (lv_functionName_2_0= RULE_ID ) )
            // InternalSCTX.g:10906:5: (lv_functionName_2_0= RULE_ID )
            {
            // InternalSCTX.g:10906:5: (lv_functionName_2_0= RULE_ID )
            // InternalSCTX.g:10907:6: lv_functionName_2_0= RULE_ID
            {
            lv_functionName_2_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_130); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						newLeafNode(lv_functionName_2_0, grammarAccess.getFunctionCallEffectAccess().getFunctionNameIDTerminalRuleCall_1_1_0());
              					
            }
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElement(grammarAccess.getFunctionCallEffectRule());
              						}
              						setWithLastConsumed(
              							current,
              							"functionName",
              							lv_functionName_2_0,
              							"de.cau.cs.kieler.annotations.Annotations.ID");
              					
            }

            }


            }

            // InternalSCTX.g:10923:4: ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' )
            int alt364=2;
            int LA364_0 = input.LA(1);

            if ( (LA364_0==31) ) {
                alt364=1;
            }
            else if ( (LA364_0==65) ) {
                alt364=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 364, 0, input);

                throw nvae;
            }
            switch (alt364) {
                case 1 :
                    // InternalSCTX.g:10924:5: (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' )
                    {
                    // InternalSCTX.g:10924:5: (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' )
                    // InternalSCTX.g:10925:6: otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')'
                    {
                    otherlv_3=(Token)match(input,31,FollowSets000.FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_3, grammarAccess.getFunctionCallEffectAccess().getLeftParenthesisKeyword_1_2_0_0());
                      					
                    }
                    // InternalSCTX.g:10929:6: ( (lv_parameters_4_0= ruleParameter ) )
                    // InternalSCTX.g:10930:7: (lv_parameters_4_0= ruleParameter )
                    {
                    // InternalSCTX.g:10930:7: (lv_parameters_4_0= ruleParameter )
                    // InternalSCTX.g:10931:8: lv_parameters_4_0= ruleParameter
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getFunctionCallEffectAccess().getParametersParameterParserRuleCall_1_2_0_1_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_31);
                    lv_parameters_4_0=ruleParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getFunctionCallEffectRule());
                      								}
                      								add(
                      									current,
                      									"parameters",
                      									lv_parameters_4_0,
                      									"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    // InternalSCTX.g:10948:6: (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )*
                    loop363:
                    do {
                        int alt363=2;
                        int LA363_0 = input.LA(1);

                        if ( (LA363_0==20) ) {
                            alt363=1;
                        }


                        switch (alt363) {
                    	case 1 :
                    	    // InternalSCTX.g:10949:7: otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) )
                    	    {
                    	    otherlv_5=(Token)match(input,20,FollowSets000.FOLLOW_30); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							newLeafNode(otherlv_5, grammarAccess.getFunctionCallEffectAccess().getCommaKeyword_1_2_0_2_0());
                    	      						
                    	    }
                    	    // InternalSCTX.g:10953:7: ( (lv_parameters_6_0= ruleParameter ) )
                    	    // InternalSCTX.g:10954:8: (lv_parameters_6_0= ruleParameter )
                    	    {
                    	    // InternalSCTX.g:10954:8: (lv_parameters_6_0= ruleParameter )
                    	    // InternalSCTX.g:10955:9: lv_parameters_6_0= ruleParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      									newCompositeNode(grammarAccess.getFunctionCallEffectAccess().getParametersParameterParserRuleCall_1_2_0_2_1_0());
                    	      								
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_31);
                    	    lv_parameters_6_0=ruleParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									if (current==null) {
                    	      										current = createModelElementForParent(grammarAccess.getFunctionCallEffectRule());
                    	      									}
                    	      									add(
                    	      										current,
                    	      										"parameters",
                    	      										lv_parameters_6_0,
                    	      										"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                    	      									afterParserOrEnumRuleCall();
                    	      								
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop363;
                        }
                    } while (true);

                    otherlv_7=(Token)match(input,32,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_7, grammarAccess.getFunctionCallEffectAccess().getRightParenthesisKeyword_1_2_0_3());
                      					
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:10979:5: otherlv_8= '()'
                    {
                    otherlv_8=(Token)match(input,65,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_8, grammarAccess.getFunctionCallEffectAccess().getLeftParenthesisRightParenthesisKeyword_1_2_1());
                      				
                    }

                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionCallEffect"


    // $ANTLR start "entryRulePrintCallEffect"
    // InternalSCTX.g:10989:1: entryRulePrintCallEffect returns [EObject current=null] : iv_rulePrintCallEffect= rulePrintCallEffect EOF ;
    public final EObject entryRulePrintCallEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrintCallEffect = null;


        try {
            // InternalSCTX.g:10989:56: (iv_rulePrintCallEffect= rulePrintCallEffect EOF )
            // InternalSCTX.g:10990:2: iv_rulePrintCallEffect= rulePrintCallEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrintCallEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePrintCallEffect=rulePrintCallEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrintCallEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrintCallEffect"


    // $ANTLR start "rulePrintCallEffect"
    // InternalSCTX.g:10996:1: rulePrintCallEffect returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'print' (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) (otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+ )? ) ;
    public final EObject rulePrintCallEffect() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_parameters_3_0 = null;

        EObject lv_parameters_5_0 = null;

        EObject lv_schedule_8_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:11002:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'print' (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) (otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+ )? ) )
            // InternalSCTX.g:11003:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'print' (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) (otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+ )? )
            {
            // InternalSCTX.g:11003:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'print' (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) (otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+ )? )
            // InternalSCTX.g:11004:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'print' (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) (otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+ )?
            {
            // InternalSCTX.g:11004:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop365:
            do {
                int alt365=2;
                int LA365_0 = input.LA(1);

                if ( (LA365_0==RULE_COMMENT_ANNOTATION||LA365_0==103) ) {
                    alt365=1;
                }


                switch (alt365) {
            	case 1 :
            	    // InternalSCTX.g:11005:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:11005:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:11006:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getPrintCallEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_185);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getPrintCallEffectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop365;
                }
            } while (true);

            otherlv_1=(Token)match(input,80,FollowSets000.FOLLOW_149); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getPrintCallEffectAccess().getPrintKeyword_1());
              		
            }
            // InternalSCTX.g:11027:3: (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' )
            // InternalSCTX.g:11028:4: otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')'
            {
            otherlv_2=(Token)match(input,31,FollowSets000.FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_2, grammarAccess.getPrintCallEffectAccess().getLeftParenthesisKeyword_2_0());
              			
            }
            // InternalSCTX.g:11032:4: ( (lv_parameters_3_0= ruleParameter ) )
            // InternalSCTX.g:11033:5: (lv_parameters_3_0= ruleParameter )
            {
            // InternalSCTX.g:11033:5: (lv_parameters_3_0= ruleParameter )
            // InternalSCTX.g:11034:6: lv_parameters_3_0= ruleParameter
            {
            if ( state.backtracking==0 ) {

              						newCompositeNode(grammarAccess.getPrintCallEffectAccess().getParametersParameterParserRuleCall_2_1_0());
              					
            }
            pushFollow(FollowSets000.FOLLOW_31);
            lv_parameters_3_0=ruleParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElementForParent(grammarAccess.getPrintCallEffectRule());
              						}
              						add(
              							current,
              							"parameters",
              							lv_parameters_3_0,
              							"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
              						afterParserOrEnumRuleCall();
              					
            }

            }


            }

            // InternalSCTX.g:11051:4: (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )*
            loop366:
            do {
                int alt366=2;
                int LA366_0 = input.LA(1);

                if ( (LA366_0==20) ) {
                    alt366=1;
                }


                switch (alt366) {
            	case 1 :
            	    // InternalSCTX.g:11052:5: otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) )
            	    {
            	    otherlv_4=(Token)match(input,20,FollowSets000.FOLLOW_30); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_4, grammarAccess.getPrintCallEffectAccess().getCommaKeyword_2_2_0());
            	      				
            	    }
            	    // InternalSCTX.g:11056:5: ( (lv_parameters_5_0= ruleParameter ) )
            	    // InternalSCTX.g:11057:6: (lv_parameters_5_0= ruleParameter )
            	    {
            	    // InternalSCTX.g:11057:6: (lv_parameters_5_0= ruleParameter )
            	    // InternalSCTX.g:11058:7: lv_parameters_5_0= ruleParameter
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getPrintCallEffectAccess().getParametersParameterParserRuleCall_2_2_1_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_31);
            	    lv_parameters_5_0=ruleParameter();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getPrintCallEffectRule());
            	      							}
            	      							add(
            	      								current,
            	      								"parameters",
            	      								lv_parameters_5_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop366;
                }
            } while (true);

            otherlv_6=(Token)match(input,32,FollowSets000.FOLLOW_59); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_6, grammarAccess.getPrintCallEffectAccess().getRightParenthesisKeyword_2_3());
              			
            }

            }

            // InternalSCTX.g:11081:3: (otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+ )?
            int alt368=2;
            int LA368_0 = input.LA(1);

            if ( (LA368_0==29) ) {
                alt368=1;
            }
            switch (alt368) {
                case 1 :
                    // InternalSCTX.g:11082:4: otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_7=(Token)match(input,29,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getPrintCallEffectAccess().getScheduleKeyword_3_0());
                      			
                    }
                    // InternalSCTX.g:11086:4: ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+
                    int cnt367=0;
                    loop367:
                    do {
                        int alt367=2;
                        alt367 = dfa367.predict(input);
                        switch (alt367) {
                    	case 1 :
                    	    // InternalSCTX.g:11087:5: (lv_schedule_8_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCTX.g:11087:5: (lv_schedule_8_0= ruleScheduleObjectReference )
                    	    // InternalSCTX.g:11088:6: lv_schedule_8_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getPrintCallEffectAccess().getScheduleScheduleObjectReferenceParserRuleCall_3_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_60);
                    	    lv_schedule_8_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getPrintCallEffectRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_8_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt367 >= 1 ) break loop367;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(367, input);
                                throw eee;
                        }
                        cnt367++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrintCallEffect"


    // $ANTLR start "entryRuleRandomizeCallEffect"
    // InternalSCTX.g:11110:1: entryRuleRandomizeCallEffect returns [EObject current=null] : iv_ruleRandomizeCallEffect= ruleRandomizeCallEffect EOF ;
    public final EObject entryRuleRandomizeCallEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRandomizeCallEffect = null;


        try {
            // InternalSCTX.g:11110:60: (iv_ruleRandomizeCallEffect= ruleRandomizeCallEffect EOF )
            // InternalSCTX.g:11111:2: iv_ruleRandomizeCallEffect= ruleRandomizeCallEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRandomizeCallEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRandomizeCallEffect=ruleRandomizeCallEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRandomizeCallEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRandomizeCallEffect"


    // $ANTLR start "ruleRandomizeCallEffect"
    // InternalSCTX.g:11117:1: ruleRandomizeCallEffect returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'randomize' ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) ;
    public final EObject ruleRandomizeCallEffect() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        EObject lv_annotations_1_0 = null;

        EObject lv_parameters_4_0 = null;

        EObject lv_parameters_6_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:11123:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'randomize' ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) )
            // InternalSCTX.g:11124:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'randomize' ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) )
            {
            // InternalSCTX.g:11124:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'randomize' ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) )
            // InternalSCTX.g:11125:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'randomize' ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' )
            {
            // InternalSCTX.g:11125:3: ()
            // InternalSCTX.g:11126:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getRandomizeCallEffectAccess().getRandomizeCallEffectAction_0(),
              					current);
              			
            }

            }

            // InternalSCTX.g:11135:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop369:
            do {
                int alt369=2;
                int LA369_0 = input.LA(1);

                if ( (LA369_0==RULE_COMMENT_ANNOTATION||LA369_0==103) ) {
                    alt369=1;
                }


                switch (alt369) {
            	case 1 :
            	    // InternalSCTX.g:11136:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:11136:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCTX.g:11137:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getRandomizeCallEffectAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_186);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getRandomizeCallEffectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop369;
                }
            } while (true);

            otherlv_2=(Token)match(input,81,FollowSets000.FOLLOW_130); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getRandomizeCallEffectAccess().getRandomizeKeyword_2());
              		
            }
            // InternalSCTX.g:11158:3: ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' )
            int alt371=2;
            int LA371_0 = input.LA(1);

            if ( (LA371_0==31) ) {
                alt371=1;
            }
            else if ( (LA371_0==65) ) {
                alt371=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 371, 0, input);

                throw nvae;
            }
            switch (alt371) {
                case 1 :
                    // InternalSCTX.g:11159:4: (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' )
                    {
                    // InternalSCTX.g:11159:4: (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' )
                    // InternalSCTX.g:11160:5: otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')'
                    {
                    otherlv_3=(Token)match(input,31,FollowSets000.FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getRandomizeCallEffectAccess().getLeftParenthesisKeyword_3_0_0());
                      				
                    }
                    // InternalSCTX.g:11164:5: ( (lv_parameters_4_0= ruleParameter ) )
                    // InternalSCTX.g:11165:6: (lv_parameters_4_0= ruleParameter )
                    {
                    // InternalSCTX.g:11165:6: (lv_parameters_4_0= ruleParameter )
                    // InternalSCTX.g:11166:7: lv_parameters_4_0= ruleParameter
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRandomizeCallEffectAccess().getParametersParameterParserRuleCall_3_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_31);
                    lv_parameters_4_0=ruleParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRandomizeCallEffectRule());
                      							}
                      							add(
                      								current,
                      								"parameters",
                      								lv_parameters_4_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:11183:5: (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )*
                    loop370:
                    do {
                        int alt370=2;
                        int LA370_0 = input.LA(1);

                        if ( (LA370_0==20) ) {
                            alt370=1;
                        }


                        switch (alt370) {
                    	case 1 :
                    	    // InternalSCTX.g:11184:6: otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) )
                    	    {
                    	    otherlv_5=(Token)match(input,20,FollowSets000.FOLLOW_30); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_5, grammarAccess.getRandomizeCallEffectAccess().getCommaKeyword_3_0_2_0());
                    	      					
                    	    }
                    	    // InternalSCTX.g:11188:6: ( (lv_parameters_6_0= ruleParameter ) )
                    	    // InternalSCTX.g:11189:7: (lv_parameters_6_0= ruleParameter )
                    	    {
                    	    // InternalSCTX.g:11189:7: (lv_parameters_6_0= ruleParameter )
                    	    // InternalSCTX.g:11190:8: lv_parameters_6_0= ruleParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getRandomizeCallEffectAccess().getParametersParameterParserRuleCall_3_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_31);
                    	    lv_parameters_6_0=ruleParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getRandomizeCallEffectRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"parameters",
                    	      									lv_parameters_6_0,
                    	      									"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop370;
                        }
                    } while (true);

                    otherlv_7=(Token)match(input,32,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getRandomizeCallEffectAccess().getRightParenthesisKeyword_3_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:11214:4: otherlv_8= '()'
                    {
                    otherlv_8=(Token)match(input,65,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getRandomizeCallEffectAccess().getLeftParenthesisRightParenthesisKeyword_3_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRandomizeCallEffect"


    // $ANTLR start "entryRuleExpression"
    // InternalSCTX.g:11223:1: entryRuleExpression returns [EObject current=null] : iv_ruleExpression= ruleExpression EOF ;
    public final EObject entryRuleExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpression = null;


        try {
            // InternalSCTX.g:11223:51: (iv_ruleExpression= ruleExpression EOF )
            // InternalSCTX.g:11224:2: iv_ruleExpression= ruleExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleExpression=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpression"


    // $ANTLR start "ruleExpression"
    // InternalSCTX.g:11230:1: ruleExpression returns [EObject current=null] : (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression ) ;
    public final EObject ruleExpression() throws RecognitionException {
        EObject current = null;

        EObject this_BoolExpression_0 = null;

        EObject this_ValuedExpression_1 = null;



        	enterRule();

        try {
            // InternalSCTX.g:11236:2: ( (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression ) )
            // InternalSCTX.g:11237:2: (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression )
            {
            // InternalSCTX.g:11237:2: (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression )
            int alt372=2;
            alt372 = dfa372.predict(input);
            switch (alt372) {
                case 1 :
                    // InternalSCTX.g:11238:3: this_BoolExpression_0= ruleBoolExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getExpressionAccess().getBoolExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_BoolExpression_0=ruleBoolExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BoolExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:11250:3: this_ValuedExpression_1= ruleValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getExpressionAccess().getValuedExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedExpression_1=ruleValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ValuedExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpression"


    // $ANTLR start "entryRuleBoolExpression"
    // InternalSCTX.g:11265:1: entryRuleBoolExpression returns [EObject current=null] : iv_ruleBoolExpression= ruleBoolExpression EOF ;
    public final EObject entryRuleBoolExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBoolExpression = null;


        try {
            // InternalSCTX.g:11265:55: (iv_ruleBoolExpression= ruleBoolExpression EOF )
            // InternalSCTX.g:11266:2: iv_ruleBoolExpression= ruleBoolExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBoolExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBoolExpression=ruleBoolExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBoolExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBoolExpression"


    // $ANTLR start "ruleBoolExpression"
    // InternalSCTX.g:11272:1: ruleBoolExpression returns [EObject current=null] : this_LogicalOrExpression_0= ruleLogicalOrExpression ;
    public final EObject ruleBoolExpression() throws RecognitionException {
        EObject current = null;

        EObject this_LogicalOrExpression_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:11278:2: (this_LogicalOrExpression_0= ruleLogicalOrExpression )
            // InternalSCTX.g:11279:2: this_LogicalOrExpression_0= ruleLogicalOrExpression
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getBoolExpressionAccess().getLogicalOrExpressionParserRuleCall());
              	
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_LogicalOrExpression_0=ruleLogicalOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_LogicalOrExpression_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBoolExpression"


    // $ANTLR start "entryRuleLogicalOrExpression"
    // InternalSCTX.g:11293:1: entryRuleLogicalOrExpression returns [EObject current=null] : iv_ruleLogicalOrExpression= ruleLogicalOrExpression EOF ;
    public final EObject entryRuleLogicalOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLogicalOrExpression = null;


        try {
            // InternalSCTX.g:11293:60: (iv_ruleLogicalOrExpression= ruleLogicalOrExpression EOF )
            // InternalSCTX.g:11294:2: iv_ruleLogicalOrExpression= ruleLogicalOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLogicalOrExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLogicalOrExpression=ruleLogicalOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLogicalOrExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLogicalOrExpression"


    // $ANTLR start "ruleLogicalOrExpression"
    // InternalSCTX.g:11300:1: ruleLogicalOrExpression returns [EObject current=null] : (this_LogicalAndExpression_0= ruleLogicalAndExpression ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )? ) ;
    public final EObject ruleLogicalOrExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_LogicalAndExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:11306:2: ( (this_LogicalAndExpression_0= ruleLogicalAndExpression ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )? ) )
            // InternalSCTX.g:11307:2: (this_LogicalAndExpression_0= ruleLogicalAndExpression ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )? )
            {
            // InternalSCTX.g:11307:2: (this_LogicalAndExpression_0= ruleLogicalAndExpression ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )? )
            // InternalSCTX.g:11308:3: this_LogicalAndExpression_0= ruleLogicalAndExpression ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getLogicalOrExpressionAccess().getLogicalAndExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_187);
            this_LogicalAndExpression_0=ruleLogicalAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_LogicalAndExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCTX.g:11319:3: ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )?
            int alt374=2;
            int LA374_0 = input.LA(1);

            if ( (LA374_0==82) ) {
                alt374=1;
            }
            switch (alt374) {
                case 1 :
                    // InternalSCTX.g:11320:4: () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )*
                    {
                    // InternalSCTX.g:11320:4: ()
                    // InternalSCTX.g:11321:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getLogicalOrExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCTX.g:11330:4: ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) )
                    // InternalSCTX.g:11331:5: ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) )
                    {
                    // InternalSCTX.g:11331:5: ( (lv_operator_2_0= ruleLogicalOrOperator ) )
                    // InternalSCTX.g:11332:6: (lv_operator_2_0= ruleLogicalOrOperator )
                    {
                    // InternalSCTX.g:11332:6: (lv_operator_2_0= ruleLogicalOrOperator )
                    // InternalSCTX.g:11333:7: lv_operator_2_0= ruleLogicalOrOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalOrExpressionAccess().getOperatorLogicalOrOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_38);
                    lv_operator_2_0=ruleLogicalOrOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalOrExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.LogicalOrOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:11350:5: ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) )
                    // InternalSCTX.g:11351:6: (lv_subExpressions_3_0= ruleLogicalAndExpression )
                    {
                    // InternalSCTX.g:11351:6: (lv_subExpressions_3_0= ruleLogicalAndExpression )
                    // InternalSCTX.g:11352:7: lv_subExpressions_3_0= ruleLogicalAndExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalOrExpressionAccess().getSubExpressionsLogicalAndExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_187);
                    lv_subExpressions_3_0=ruleLogicalAndExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalOrExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.LogicalAndExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalSCTX.g:11370:4: (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )*
                    loop373:
                    do {
                        int alt373=2;
                        int LA373_0 = input.LA(1);

                        if ( (LA373_0==82) ) {
                            alt373=1;
                        }


                        switch (alt373) {
                    	case 1 :
                    	    // InternalSCTX.g:11371:5: otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,82,FollowSets000.FOLLOW_38); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getLogicalOrExpressionAccess().getVerticalLineVerticalLineKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:11375:5: ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) )
                    	    // InternalSCTX.g:11376:6: (lv_subExpressions_5_0= ruleLogicalAndExpression )
                    	    {
                    	    // InternalSCTX.g:11376:6: (lv_subExpressions_5_0= ruleLogicalAndExpression )
                    	    // InternalSCTX.g:11377:7: lv_subExpressions_5_0= ruleLogicalAndExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getLogicalOrExpressionAccess().getSubExpressionsLogicalAndExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_187);
                    	    lv_subExpressions_5_0=ruleLogicalAndExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getLogicalOrExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.LogicalAndExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop373;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalOrExpression"


    // $ANTLR start "entryRuleLogicalAndExpression"
    // InternalSCTX.g:11400:1: entryRuleLogicalAndExpression returns [EObject current=null] : iv_ruleLogicalAndExpression= ruleLogicalAndExpression EOF ;
    public final EObject entryRuleLogicalAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLogicalAndExpression = null;


        try {
            // InternalSCTX.g:11400:61: (iv_ruleLogicalAndExpression= ruleLogicalAndExpression EOF )
            // InternalSCTX.g:11401:2: iv_ruleLogicalAndExpression= ruleLogicalAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLogicalAndExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLogicalAndExpression=ruleLogicalAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLogicalAndExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLogicalAndExpression"


    // $ANTLR start "ruleLogicalAndExpression"
    // InternalSCTX.g:11407:1: ruleLogicalAndExpression returns [EObject current=null] : (this_BitwiseOrExpression_0= ruleBitwiseOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )* )? ) ;
    public final EObject ruleLogicalAndExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_BitwiseOrExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:11413:2: ( (this_BitwiseOrExpression_0= ruleBitwiseOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )* )? ) )
            // InternalSCTX.g:11414:2: (this_BitwiseOrExpression_0= ruleBitwiseOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )* )? )
            {
            // InternalSCTX.g:11414:2: (this_BitwiseOrExpression_0= ruleBitwiseOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )* )? )
            // InternalSCTX.g:11415:3: this_BitwiseOrExpression_0= ruleBitwiseOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getLogicalAndExpressionAccess().getBitwiseOrExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_188);
            this_BitwiseOrExpression_0=ruleBitwiseOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_BitwiseOrExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCTX.g:11426:3: ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )* )?
            int alt376=2;
            int LA376_0 = input.LA(1);

            if ( (LA376_0==83) ) {
                alt376=1;
            }
            switch (alt376) {
                case 1 :
                    // InternalSCTX.g:11427:4: () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )*
                    {
                    // InternalSCTX.g:11427:4: ()
                    // InternalSCTX.g:11428:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getLogicalAndExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCTX.g:11437:4: ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) )
                    // InternalSCTX.g:11438:5: ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) )
                    {
                    // InternalSCTX.g:11438:5: ( (lv_operator_2_0= ruleLogicalAndOperator ) )
                    // InternalSCTX.g:11439:6: (lv_operator_2_0= ruleLogicalAndOperator )
                    {
                    // InternalSCTX.g:11439:6: (lv_operator_2_0= ruleLogicalAndOperator )
                    // InternalSCTX.g:11440:7: lv_operator_2_0= ruleLogicalAndOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAndExpressionAccess().getOperatorLogicalAndOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_38);
                    lv_operator_2_0=ruleLogicalAndOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAndExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.LogicalAndOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:11457:5: ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) )
                    // InternalSCTX.g:11458:6: (lv_subExpressions_3_0= ruleBitwiseOrExpression )
                    {
                    // InternalSCTX.g:11458:6: (lv_subExpressions_3_0= ruleBitwiseOrExpression )
                    // InternalSCTX.g:11459:7: lv_subExpressions_3_0= ruleBitwiseOrExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAndExpressionAccess().getSubExpressionsBitwiseOrExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_188);
                    lv_subExpressions_3_0=ruleBitwiseOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAndExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseOrExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalSCTX.g:11477:4: (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )*
                    loop375:
                    do {
                        int alt375=2;
                        int LA375_0 = input.LA(1);

                        if ( (LA375_0==83) ) {
                            alt375=1;
                        }


                        switch (alt375) {
                    	case 1 :
                    	    // InternalSCTX.g:11478:5: otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,83,FollowSets000.FOLLOW_38); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getLogicalAndExpressionAccess().getAmpersandAmpersandKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:11482:5: ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) )
                    	    // InternalSCTX.g:11483:6: (lv_subExpressions_5_0= ruleBitwiseOrExpression )
                    	    {
                    	    // InternalSCTX.g:11483:6: (lv_subExpressions_5_0= ruleBitwiseOrExpression )
                    	    // InternalSCTX.g:11484:7: lv_subExpressions_5_0= ruleBitwiseOrExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getLogicalAndExpressionAccess().getSubExpressionsBitwiseOrExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_188);
                    	    lv_subExpressions_5_0=ruleBitwiseOrExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getLogicalAndExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseOrExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop375;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalAndExpression"


    // $ANTLR start "entryRuleBitwiseOrExpression"
    // InternalSCTX.g:11507:1: entryRuleBitwiseOrExpression returns [EObject current=null] : iv_ruleBitwiseOrExpression= ruleBitwiseOrExpression EOF ;
    public final EObject entryRuleBitwiseOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBitwiseOrExpression = null;


        try {
            // InternalSCTX.g:11507:60: (iv_ruleBitwiseOrExpression= ruleBitwiseOrExpression EOF )
            // InternalSCTX.g:11508:2: iv_ruleBitwiseOrExpression= ruleBitwiseOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBitwiseOrExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBitwiseOrExpression=ruleBitwiseOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBitwiseOrExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBitwiseOrExpression"


    // $ANTLR start "ruleBitwiseOrExpression"
    // InternalSCTX.g:11514:1: ruleBitwiseOrExpression returns [EObject current=null] : (this_BitwiseXOrExpression_0= ruleBitwiseXOrExpression ( () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) ) )* )? ) ;
    public final EObject ruleBitwiseOrExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_BitwiseXOrExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:11520:2: ( (this_BitwiseXOrExpression_0= ruleBitwiseXOrExpression ( () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) ) )* )? ) )
            // InternalSCTX.g:11521:2: (this_BitwiseXOrExpression_0= ruleBitwiseXOrExpression ( () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) ) )* )? )
            {
            // InternalSCTX.g:11521:2: (this_BitwiseXOrExpression_0= ruleBitwiseXOrExpression ( () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) ) )* )? )
            // InternalSCTX.g:11522:3: this_BitwiseXOrExpression_0= ruleBitwiseXOrExpression ( () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getBitwiseOrExpressionAccess().getBitwiseXOrExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_189);
            this_BitwiseXOrExpression_0=ruleBitwiseXOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_BitwiseXOrExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCTX.g:11533:3: ( () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) ) )* )?
            int alt378=2;
            int LA378_0 = input.LA(1);

            if ( (LA378_0==84) ) {
                alt378=1;
            }
            switch (alt378) {
                case 1 :
                    // InternalSCTX.g:11534:4: () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) ) )*
                    {
                    // InternalSCTX.g:11534:4: ()
                    // InternalSCTX.g:11535:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getBitwiseOrExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCTX.g:11544:4: ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) ) )
                    // InternalSCTX.g:11545:5: ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) )
                    {
                    // InternalSCTX.g:11545:5: ( (lv_operator_2_0= ruleBitwiseOrOperator ) )
                    // InternalSCTX.g:11546:6: (lv_operator_2_0= ruleBitwiseOrOperator )
                    {
                    // InternalSCTX.g:11546:6: (lv_operator_2_0= ruleBitwiseOrOperator )
                    // InternalSCTX.g:11547:7: lv_operator_2_0= ruleBitwiseOrOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getBitwiseOrExpressionAccess().getOperatorBitwiseOrOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_38);
                    lv_operator_2_0=ruleBitwiseOrOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getBitwiseOrExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseOrOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:11564:5: ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) )
                    // InternalSCTX.g:11565:6: (lv_subExpressions_3_0= ruleBitwiseXOrExpression )
                    {
                    // InternalSCTX.g:11565:6: (lv_subExpressions_3_0= ruleBitwiseXOrExpression )
                    // InternalSCTX.g:11566:7: lv_subExpressions_3_0= ruleBitwiseXOrExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getBitwiseOrExpressionAccess().getSubExpressionsBitwiseXOrExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_189);
                    lv_subExpressions_3_0=ruleBitwiseXOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getBitwiseOrExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseXOrExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalSCTX.g:11584:4: (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) ) )*
                    loop377:
                    do {
                        int alt377=2;
                        int LA377_0 = input.LA(1);

                        if ( (LA377_0==84) ) {
                            alt377=1;
                        }


                        switch (alt377) {
                    	case 1 :
                    	    // InternalSCTX.g:11585:5: otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,84,FollowSets000.FOLLOW_38); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getBitwiseOrExpressionAccess().getVerticalLineKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:11589:5: ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) )
                    	    // InternalSCTX.g:11590:6: (lv_subExpressions_5_0= ruleBitwiseXOrExpression )
                    	    {
                    	    // InternalSCTX.g:11590:6: (lv_subExpressions_5_0= ruleBitwiseXOrExpression )
                    	    // InternalSCTX.g:11591:7: lv_subExpressions_5_0= ruleBitwiseXOrExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getBitwiseOrExpressionAccess().getSubExpressionsBitwiseXOrExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_189);
                    	    lv_subExpressions_5_0=ruleBitwiseXOrExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getBitwiseOrExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseXOrExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop377;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseOrExpression"


    // $ANTLR start "entryRuleBitwiseXOrExpression"
    // InternalSCTX.g:11614:1: entryRuleBitwiseXOrExpression returns [EObject current=null] : iv_ruleBitwiseXOrExpression= ruleBitwiseXOrExpression EOF ;
    public final EObject entryRuleBitwiseXOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBitwiseXOrExpression = null;


        try {
            // InternalSCTX.g:11614:61: (iv_ruleBitwiseXOrExpression= ruleBitwiseXOrExpression EOF )
            // InternalSCTX.g:11615:2: iv_ruleBitwiseXOrExpression= ruleBitwiseXOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBitwiseXOrExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBitwiseXOrExpression=ruleBitwiseXOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBitwiseXOrExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBitwiseXOrExpression"


    // $ANTLR start "ruleBitwiseXOrExpression"
    // InternalSCTX.g:11621:1: ruleBitwiseXOrExpression returns [EObject current=null] : (this_BitwiseAndExpression_0= ruleBitwiseAndExpression ( () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )? ) ;
    public final EObject ruleBitwiseXOrExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_BitwiseAndExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:11627:2: ( (this_BitwiseAndExpression_0= ruleBitwiseAndExpression ( () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )? ) )
            // InternalSCTX.g:11628:2: (this_BitwiseAndExpression_0= ruleBitwiseAndExpression ( () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )? )
            {
            // InternalSCTX.g:11628:2: (this_BitwiseAndExpression_0= ruleBitwiseAndExpression ( () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )? )
            // InternalSCTX.g:11629:3: this_BitwiseAndExpression_0= ruleBitwiseAndExpression ( () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getBitwiseXOrExpressionAccess().getBitwiseAndExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_190);
            this_BitwiseAndExpression_0=ruleBitwiseAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_BitwiseAndExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCTX.g:11640:3: ( () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )?
            int alt380=2;
            int LA380_0 = input.LA(1);

            if ( (LA380_0==85) ) {
                alt380=1;
            }
            switch (alt380) {
                case 1 :
                    // InternalSCTX.g:11641:4: () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )*
                    {
                    // InternalSCTX.g:11641:4: ()
                    // InternalSCTX.g:11642:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getBitwiseXOrExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCTX.g:11651:4: ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) )
                    // InternalSCTX.g:11652:5: ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) )
                    {
                    // InternalSCTX.g:11652:5: ( (lv_operator_2_0= ruleBitwiseXOrOperator ) )
                    // InternalSCTX.g:11653:6: (lv_operator_2_0= ruleBitwiseXOrOperator )
                    {
                    // InternalSCTX.g:11653:6: (lv_operator_2_0= ruleBitwiseXOrOperator )
                    // InternalSCTX.g:11654:7: lv_operator_2_0= ruleBitwiseXOrOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getBitwiseXOrExpressionAccess().getOperatorBitwiseXOrOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_38);
                    lv_operator_2_0=ruleBitwiseXOrOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getBitwiseXOrExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseXOrOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:11671:5: ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) )
                    // InternalSCTX.g:11672:6: (lv_subExpressions_3_0= ruleBitwiseAndExpression )
                    {
                    // InternalSCTX.g:11672:6: (lv_subExpressions_3_0= ruleBitwiseAndExpression )
                    // InternalSCTX.g:11673:7: lv_subExpressions_3_0= ruleBitwiseAndExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getBitwiseXOrExpressionAccess().getSubExpressionsBitwiseAndExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_190);
                    lv_subExpressions_3_0=ruleBitwiseAndExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getBitwiseXOrExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseAndExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalSCTX.g:11691:4: (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )*
                    loop379:
                    do {
                        int alt379=2;
                        int LA379_0 = input.LA(1);

                        if ( (LA379_0==85) ) {
                            alt379=1;
                        }


                        switch (alt379) {
                    	case 1 :
                    	    // InternalSCTX.g:11692:5: otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,85,FollowSets000.FOLLOW_38); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getBitwiseXOrExpressionAccess().getCircumflexAccentKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:11696:5: ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) )
                    	    // InternalSCTX.g:11697:6: (lv_subExpressions_5_0= ruleBitwiseAndExpression )
                    	    {
                    	    // InternalSCTX.g:11697:6: (lv_subExpressions_5_0= ruleBitwiseAndExpression )
                    	    // InternalSCTX.g:11698:7: lv_subExpressions_5_0= ruleBitwiseAndExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getBitwiseXOrExpressionAccess().getSubExpressionsBitwiseAndExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_190);
                    	    lv_subExpressions_5_0=ruleBitwiseAndExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getBitwiseXOrExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseAndExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop379;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseXOrExpression"


    // $ANTLR start "entryRuleBitwiseAndExpression"
    // InternalSCTX.g:11721:1: entryRuleBitwiseAndExpression returns [EObject current=null] : iv_ruleBitwiseAndExpression= ruleBitwiseAndExpression EOF ;
    public final EObject entryRuleBitwiseAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBitwiseAndExpression = null;


        try {
            // InternalSCTX.g:11721:61: (iv_ruleBitwiseAndExpression= ruleBitwiseAndExpression EOF )
            // InternalSCTX.g:11722:2: iv_ruleBitwiseAndExpression= ruleBitwiseAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBitwiseAndExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBitwiseAndExpression=ruleBitwiseAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBitwiseAndExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBitwiseAndExpression"


    // $ANTLR start "ruleBitwiseAndExpression"
    // InternalSCTX.g:11728:1: ruleBitwiseAndExpression returns [EObject current=null] : (this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )? ) ;
    public final EObject ruleBitwiseAndExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_CompareOperation_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:11734:2: ( (this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )? ) )
            // InternalSCTX.g:11735:2: (this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )? )
            {
            // InternalSCTX.g:11735:2: (this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )? )
            // InternalSCTX.g:11736:3: this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getBitwiseAndExpressionAccess().getCompareOperationParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_191);
            this_CompareOperation_0=ruleCompareOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_CompareOperation_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCTX.g:11747:3: ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )?
            int alt382=2;
            int LA382_0 = input.LA(1);

            if ( (LA382_0==86) ) {
                alt382=1;
            }
            switch (alt382) {
                case 1 :
                    // InternalSCTX.g:11748:4: () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )*
                    {
                    // InternalSCTX.g:11748:4: ()
                    // InternalSCTX.g:11749:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getBitwiseAndExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCTX.g:11758:4: ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) )
                    // InternalSCTX.g:11759:5: ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) )
                    {
                    // InternalSCTX.g:11759:5: ( (lv_operator_2_0= ruleBitwiseAndOperator ) )
                    // InternalSCTX.g:11760:6: (lv_operator_2_0= ruleBitwiseAndOperator )
                    {
                    // InternalSCTX.g:11760:6: (lv_operator_2_0= ruleBitwiseAndOperator )
                    // InternalSCTX.g:11761:7: lv_operator_2_0= ruleBitwiseAndOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getBitwiseAndExpressionAccess().getOperatorBitwiseAndOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_38);
                    lv_operator_2_0=ruleBitwiseAndOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getBitwiseAndExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseAndOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:11778:5: ( (lv_subExpressions_3_0= ruleCompareOperation ) )
                    // InternalSCTX.g:11779:6: (lv_subExpressions_3_0= ruleCompareOperation )
                    {
                    // InternalSCTX.g:11779:6: (lv_subExpressions_3_0= ruleCompareOperation )
                    // InternalSCTX.g:11780:7: lv_subExpressions_3_0= ruleCompareOperation
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getBitwiseAndExpressionAccess().getSubExpressionsCompareOperationParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_191);
                    lv_subExpressions_3_0=ruleCompareOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getBitwiseAndExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.CompareOperation");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalSCTX.g:11798:4: (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )*
                    loop381:
                    do {
                        int alt381=2;
                        int LA381_0 = input.LA(1);

                        if ( (LA381_0==86) ) {
                            alt381=1;
                        }


                        switch (alt381) {
                    	case 1 :
                    	    // InternalSCTX.g:11799:5: otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) )
                    	    {
                    	    otherlv_4=(Token)match(input,86,FollowSets000.FOLLOW_38); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getBitwiseAndExpressionAccess().getAmpersandKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:11803:5: ( (lv_subExpressions_5_0= ruleCompareOperation ) )
                    	    // InternalSCTX.g:11804:6: (lv_subExpressions_5_0= ruleCompareOperation )
                    	    {
                    	    // InternalSCTX.g:11804:6: (lv_subExpressions_5_0= ruleCompareOperation )
                    	    // InternalSCTX.g:11805:7: lv_subExpressions_5_0= ruleCompareOperation
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getBitwiseAndExpressionAccess().getSubExpressionsCompareOperationParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_191);
                    	    lv_subExpressions_5_0=ruleCompareOperation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getBitwiseAndExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.CompareOperation");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop381;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseAndExpression"


    // $ANTLR start "entryRuleCompareOperation"
    // InternalSCTX.g:11828:1: entryRuleCompareOperation returns [EObject current=null] : iv_ruleCompareOperation= ruleCompareOperation EOF ;
    public final EObject entryRuleCompareOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCompareOperation = null;


        try {
            // InternalSCTX.g:11828:57: (iv_ruleCompareOperation= ruleCompareOperation EOF )
            // InternalSCTX.g:11829:2: iv_ruleCompareOperation= ruleCompareOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCompareOperationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCompareOperation=ruleCompareOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCompareOperation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCompareOperation"


    // $ANTLR start "ruleCompareOperation"
    // InternalSCTX.g:11835:1: ruleCompareOperation returns [EObject current=null] : (this_NotOrValuedExpression_0= ruleNotOrValuedExpression ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )? ) ;
    public final EObject ruleCompareOperation() throws RecognitionException {
        EObject current = null;

        EObject this_NotOrValuedExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:11841:2: ( (this_NotOrValuedExpression_0= ruleNotOrValuedExpression ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )? ) )
            // InternalSCTX.g:11842:2: (this_NotOrValuedExpression_0= ruleNotOrValuedExpression ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )? )
            {
            // InternalSCTX.g:11842:2: (this_NotOrValuedExpression_0= ruleNotOrValuedExpression ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )? )
            // InternalSCTX.g:11843:3: this_NotOrValuedExpression_0= ruleNotOrValuedExpression ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getCompareOperationAccess().getNotOrValuedExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_192);
            this_NotOrValuedExpression_0=ruleNotOrValuedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_NotOrValuedExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCTX.g:11854:3: ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )?
            int alt383=2;
            int LA383_0 = input.LA(1);

            if ( ((LA383_0>=139 && LA383_0<=144)) ) {
                alt383=1;
            }
            switch (alt383) {
                case 1 :
                    // InternalSCTX.g:11855:4: () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) )
                    {
                    // InternalSCTX.g:11855:4: ()
                    // InternalSCTX.g:11856:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getCompareOperationAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCTX.g:11865:4: ( (lv_operator_2_0= ruleCompareOperator ) )
                    // InternalSCTX.g:11866:5: (lv_operator_2_0= ruleCompareOperator )
                    {
                    // InternalSCTX.g:11866:5: (lv_operator_2_0= ruleCompareOperator )
                    // InternalSCTX.g:11867:6: lv_operator_2_0= ruleCompareOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getCompareOperationAccess().getOperatorCompareOperatorEnumRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_38);
                    lv_operator_2_0=ruleCompareOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getCompareOperationRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_2_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.CompareOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:11884:4: ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) )
                    // InternalSCTX.g:11885:5: (lv_subExpressions_3_0= ruleNotOrValuedExpression )
                    {
                    // InternalSCTX.g:11885:5: (lv_subExpressions_3_0= ruleNotOrValuedExpression )
                    // InternalSCTX.g:11886:6: lv_subExpressions_3_0= ruleNotOrValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getCompareOperationAccess().getSubExpressionsNotOrValuedExpressionParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_3_0=ruleNotOrValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getCompareOperationRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_3_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.NotOrValuedExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCompareOperation"


    // $ANTLR start "entryRuleNotOrValuedExpression"
    // InternalSCTX.g:11908:1: entryRuleNotOrValuedExpression returns [EObject current=null] : iv_ruleNotOrValuedExpression= ruleNotOrValuedExpression EOF ;
    public final EObject entryRuleNotOrValuedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNotOrValuedExpression = null;


        try {
            // InternalSCTX.g:11908:62: (iv_ruleNotOrValuedExpression= ruleNotOrValuedExpression EOF )
            // InternalSCTX.g:11909:2: iv_ruleNotOrValuedExpression= ruleNotOrValuedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNotOrValuedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNotOrValuedExpression=ruleNotOrValuedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNotOrValuedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNotOrValuedExpression"


    // $ANTLR start "ruleNotOrValuedExpression"
    // InternalSCTX.g:11915:1: ruleNotOrValuedExpression returns [EObject current=null] : (this_ValuedExpression_0= ruleValuedExpression | this_NotExpression_1= ruleNotExpression ) ;
    public final EObject ruleNotOrValuedExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ValuedExpression_0 = null;

        EObject this_NotExpression_1 = null;



        	enterRule();

        try {
            // InternalSCTX.g:11921:2: ( (this_ValuedExpression_0= ruleValuedExpression | this_NotExpression_1= ruleNotExpression ) )
            // InternalSCTX.g:11922:2: (this_ValuedExpression_0= ruleValuedExpression | this_NotExpression_1= ruleNotExpression )
            {
            // InternalSCTX.g:11922:2: (this_ValuedExpression_0= ruleValuedExpression | this_NotExpression_1= ruleNotExpression )
            int alt384=2;
            alt384 = dfa384.predict(input);
            switch (alt384) {
                case 1 :
                    // InternalSCTX.g:11923:3: this_ValuedExpression_0= ruleValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNotOrValuedExpressionAccess().getValuedExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedExpression_0=ruleValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ValuedExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:11935:3: this_NotExpression_1= ruleNotExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNotOrValuedExpressionAccess().getNotExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_NotExpression_1=ruleNotExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NotExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNotOrValuedExpression"


    // $ANTLR start "entryRuleBitwiseNotExpression"
    // InternalSCTX.g:11950:1: entryRuleBitwiseNotExpression returns [EObject current=null] : iv_ruleBitwiseNotExpression= ruleBitwiseNotExpression EOF ;
    public final EObject entryRuleBitwiseNotExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBitwiseNotExpression = null;


        try {
            // InternalSCTX.g:11950:61: (iv_ruleBitwiseNotExpression= ruleBitwiseNotExpression EOF )
            // InternalSCTX.g:11951:2: iv_ruleBitwiseNotExpression= ruleBitwiseNotExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBitwiseNotExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBitwiseNotExpression=ruleBitwiseNotExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBitwiseNotExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBitwiseNotExpression"


    // $ANTLR start "ruleBitwiseNotExpression"
    // InternalSCTX.g:11957:1: ruleBitwiseNotExpression returns [EObject current=null] : ( ( () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) ) ) | this_AtomicExpression_3= ruleAtomicExpression ) ;
    public final EObject ruleBitwiseNotExpression() throws RecognitionException {
        EObject current = null;

        Enumerator lv_operator_1_0 = null;

        EObject lv_subExpressions_2_0 = null;

        EObject this_AtomicExpression_3 = null;



        	enterRule();

        try {
            // InternalSCTX.g:11963:2: ( ( ( () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) ) ) | this_AtomicExpression_3= ruleAtomicExpression ) )
            // InternalSCTX.g:11964:2: ( ( () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) ) ) | this_AtomicExpression_3= ruleAtomicExpression )
            {
            // InternalSCTX.g:11964:2: ( ( () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) ) ) | this_AtomicExpression_3= ruleAtomicExpression )
            int alt385=2;
            int LA385_0 = input.LA(1);

            if ( (LA385_0==146) ) {
                alt385=1;
            }
            else if ( (LA385_0==RULE_ID||(LA385_0>=RULE_HOSTCODE && LA385_0<=RULE_COMMENT_ANNOTATION)||LA385_0==31||LA385_0==76||LA385_0==81||LA385_0==99||LA385_0==103||LA385_0==145||LA385_0==148) ) {
                alt385=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 385, 0, input);

                throw nvae;
            }
            switch (alt385) {
                case 1 :
                    // InternalSCTX.g:11965:3: ( () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) ) )
                    {
                    // InternalSCTX.g:11965:3: ( () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) ) )
                    // InternalSCTX.g:11966:4: () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) )
                    {
                    // InternalSCTX.g:11966:4: ()
                    // InternalSCTX.g:11967:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getBitwiseNotExpressionAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCTX.g:11976:4: ( (lv_operator_1_0= ruleBitwiseNotOperator ) )
                    // InternalSCTX.g:11977:5: (lv_operator_1_0= ruleBitwiseNotOperator )
                    {
                    // InternalSCTX.g:11977:5: (lv_operator_1_0= ruleBitwiseNotOperator )
                    // InternalSCTX.g:11978:6: lv_operator_1_0= ruleBitwiseNotOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getBitwiseNotExpressionAccess().getOperatorBitwiseNotOperatorEnumRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_38);
                    lv_operator_1_0=ruleBitwiseNotOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getBitwiseNotExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_1_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseNotOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:11995:4: ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) )
                    // InternalSCTX.g:11996:5: (lv_subExpressions_2_0= ruleBitwiseNotExpression )
                    {
                    // InternalSCTX.g:11996:5: (lv_subExpressions_2_0= ruleBitwiseNotExpression )
                    // InternalSCTX.g:11997:6: lv_subExpressions_2_0= ruleBitwiseNotExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getBitwiseNotExpressionAccess().getSubExpressionsBitwiseNotExpressionParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_2_0=ruleBitwiseNotExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getBitwiseNotExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_2_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseNotExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:12016:3: this_AtomicExpression_3= ruleAtomicExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBitwiseNotExpressionAccess().getAtomicExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AtomicExpression_3=ruleAtomicExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AtomicExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseNotExpression"


    // $ANTLR start "entryRuleNotExpression"
    // InternalSCTX.g:12031:1: entryRuleNotExpression returns [EObject current=null] : iv_ruleNotExpression= ruleNotExpression EOF ;
    public final EObject entryRuleNotExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNotExpression = null;


        try {
            // InternalSCTX.g:12031:54: (iv_ruleNotExpression= ruleNotExpression EOF )
            // InternalSCTX.g:12032:2: iv_ruleNotExpression= ruleNotExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNotExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNotExpression=ruleNotExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNotExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNotExpression"


    // $ANTLR start "ruleNotExpression"
    // InternalSCTX.g:12038:1: ruleNotExpression returns [EObject current=null] : ( ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) ) | this_BitwiseNotExpression_3= ruleBitwiseNotExpression ) ;
    public final EObject ruleNotExpression() throws RecognitionException {
        EObject current = null;

        Enumerator lv_operator_1_0 = null;

        EObject lv_subExpressions_2_0 = null;

        EObject this_BitwiseNotExpression_3 = null;



        	enterRule();

        try {
            // InternalSCTX.g:12044:2: ( ( ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) ) | this_BitwiseNotExpression_3= ruleBitwiseNotExpression ) )
            // InternalSCTX.g:12045:2: ( ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) ) | this_BitwiseNotExpression_3= ruleBitwiseNotExpression )
            {
            // InternalSCTX.g:12045:2: ( ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) ) | this_BitwiseNotExpression_3= ruleBitwiseNotExpression )
            int alt386=2;
            int LA386_0 = input.LA(1);

            if ( (LA386_0==147) ) {
                alt386=1;
            }
            else if ( (LA386_0==RULE_ID||(LA386_0>=RULE_HOSTCODE && LA386_0<=RULE_COMMENT_ANNOTATION)||LA386_0==31||LA386_0==76||LA386_0==81||LA386_0==99||LA386_0==103||(LA386_0>=145 && LA386_0<=146)||LA386_0==148) ) {
                alt386=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 386, 0, input);

                throw nvae;
            }
            switch (alt386) {
                case 1 :
                    // InternalSCTX.g:12046:3: ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) )
                    {
                    // InternalSCTX.g:12046:3: ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) )
                    // InternalSCTX.g:12047:4: () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) )
                    {
                    // InternalSCTX.g:12047:4: ()
                    // InternalSCTX.g:12048:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getNotExpressionAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCTX.g:12057:4: ( (lv_operator_1_0= ruleNotOperator ) )
                    // InternalSCTX.g:12058:5: (lv_operator_1_0= ruleNotOperator )
                    {
                    // InternalSCTX.g:12058:5: (lv_operator_1_0= ruleNotOperator )
                    // InternalSCTX.g:12059:6: lv_operator_1_0= ruleNotOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNotExpressionAccess().getOperatorNotOperatorEnumRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_38);
                    lv_operator_1_0=ruleNotOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNotExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_1_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.NotOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:12076:4: ( (lv_subExpressions_2_0= ruleNotExpression ) )
                    // InternalSCTX.g:12077:5: (lv_subExpressions_2_0= ruleNotExpression )
                    {
                    // InternalSCTX.g:12077:5: (lv_subExpressions_2_0= ruleNotExpression )
                    // InternalSCTX.g:12078:6: lv_subExpressions_2_0= ruleNotExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNotExpressionAccess().getSubExpressionsNotExpressionParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_2_0=ruleNotExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNotExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_2_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.NotExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:12097:3: this_BitwiseNotExpression_3= ruleBitwiseNotExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNotExpressionAccess().getBitwiseNotExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_BitwiseNotExpression_3=ruleBitwiseNotExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BitwiseNotExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNotExpression"


    // $ANTLR start "entryRuleValuedExpression"
    // InternalSCTX.g:12112:1: entryRuleValuedExpression returns [EObject current=null] : iv_ruleValuedExpression= ruleValuedExpression EOF ;
    public final EObject entryRuleValuedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValuedExpression = null;


        try {
            // InternalSCTX.g:12112:57: (iv_ruleValuedExpression= ruleValuedExpression EOF )
            // InternalSCTX.g:12113:2: iv_ruleValuedExpression= ruleValuedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValuedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleValuedExpression=ruleValuedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValuedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValuedExpression"


    // $ANTLR start "ruleValuedExpression"
    // InternalSCTX.g:12119:1: ruleValuedExpression returns [EObject current=null] : this_ShiftExpressions_0= ruleShiftExpressions ;
    public final EObject ruleValuedExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ShiftExpressions_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:12125:2: (this_ShiftExpressions_0= ruleShiftExpressions )
            // InternalSCTX.g:12126:2: this_ShiftExpressions_0= ruleShiftExpressions
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getValuedExpressionAccess().getShiftExpressionsParserRuleCall());
              	
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_ShiftExpressions_0=ruleShiftExpressions();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_ShiftExpressions_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValuedExpression"


    // $ANTLR start "entryRuleShiftExpressions"
    // InternalSCTX.g:12140:1: entryRuleShiftExpressions returns [EObject current=null] : iv_ruleShiftExpressions= ruleShiftExpressions EOF ;
    public final EObject entryRuleShiftExpressions() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleShiftExpressions = null;


        try {
            // InternalSCTX.g:12140:57: (iv_ruleShiftExpressions= ruleShiftExpressions EOF )
            // InternalSCTX.g:12141:2: iv_ruleShiftExpressions= ruleShiftExpressions EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getShiftExpressionsRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleShiftExpressions=ruleShiftExpressions();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleShiftExpressions; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleShiftExpressions"


    // $ANTLR start "ruleShiftExpressions"
    // InternalSCTX.g:12147:1: ruleShiftExpressions returns [EObject current=null] : (this_SumExpression_0= ruleSumExpression ( ( () ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleSumExpression ) ) (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleSumExpression ) ) )* ) | ( () ( (lv_operator_12_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_13_0= ruleSumExpression ) ) (otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleSumExpression ) ) )* ) )* ) ;
    public final EObject ruleShiftExpressions() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        Token otherlv_9=null;
        Token otherlv_14=null;
        EObject this_SumExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;

        Enumerator lv_operator_7_0 = null;

        EObject lv_subExpressions_8_0 = null;

        EObject lv_subExpressions_10_0 = null;

        Enumerator lv_operator_12_0 = null;

        EObject lv_subExpressions_13_0 = null;

        EObject lv_subExpressions_15_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:12153:2: ( (this_SumExpression_0= ruleSumExpression ( ( () ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleSumExpression ) ) (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleSumExpression ) ) )* ) | ( () ( (lv_operator_12_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_13_0= ruleSumExpression ) ) (otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleSumExpression ) ) )* ) )* ) )
            // InternalSCTX.g:12154:2: (this_SumExpression_0= ruleSumExpression ( ( () ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleSumExpression ) ) (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleSumExpression ) ) )* ) | ( () ( (lv_operator_12_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_13_0= ruleSumExpression ) ) (otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleSumExpression ) ) )* ) )* )
            {
            // InternalSCTX.g:12154:2: (this_SumExpression_0= ruleSumExpression ( ( () ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleSumExpression ) ) (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleSumExpression ) ) )* ) | ( () ( (lv_operator_12_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_13_0= ruleSumExpression ) ) (otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleSumExpression ) ) )* ) )* )
            // InternalSCTX.g:12155:3: this_SumExpression_0= ruleSumExpression ( ( () ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleSumExpression ) ) (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleSumExpression ) ) )* ) | ( () ( (lv_operator_12_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_13_0= ruleSumExpression ) ) (otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleSumExpression ) ) )* ) )*
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getShiftExpressionsAccess().getSumExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_193);
            this_SumExpression_0=ruleSumExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_SumExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCTX.g:12166:3: ( ( () ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleSumExpression ) ) (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleSumExpression ) ) )* ) | ( () ( (lv_operator_12_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_13_0= ruleSumExpression ) ) (otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleSumExpression ) ) )* ) )*
            loop390:
            do {
                int alt390=4;
                switch ( input.LA(1) ) {
                case 87:
                    {
                    alt390=1;
                    }
                    break;
                case 88:
                    {
                    alt390=2;
                    }
                    break;
                case 89:
                    {
                    alt390=3;
                    }
                    break;

                }

                switch (alt390) {
            	case 1 :
            	    // InternalSCTX.g:12167:4: ( () ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* )
            	    {
            	    // InternalSCTX.g:12167:4: ( () ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* )
            	    // InternalSCTX.g:12168:5: () ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )*
            	    {
            	    // InternalSCTX.g:12168:5: ()
            	    // InternalSCTX.g:12169:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						/* */
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndAdd(
            	      							grammarAccess.getShiftExpressionsAccess().getOperatorExpressionSubExpressionsAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalSCTX.g:12178:5: ( (lv_operator_2_0= ruleShiftLeftOperator ) )
            	    // InternalSCTX.g:12179:6: (lv_operator_2_0= ruleShiftLeftOperator )
            	    {
            	    // InternalSCTX.g:12179:6: (lv_operator_2_0= ruleShiftLeftOperator )
            	    // InternalSCTX.g:12180:7: lv_operator_2_0= ruleShiftLeftOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getShiftExpressionsAccess().getOperatorShiftLeftOperatorEnumRuleCall_1_0_1_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_104);
            	    lv_operator_2_0=ruleShiftLeftOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getShiftExpressionsRule());
            	      							}
            	      							set(
            	      								current,
            	      								"operator",
            	      								lv_operator_2_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.ShiftLeftOperator");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalSCTX.g:12197:5: ( (lv_subExpressions_3_0= ruleSumExpression ) )
            	    // InternalSCTX.g:12198:6: (lv_subExpressions_3_0= ruleSumExpression )
            	    {
            	    // InternalSCTX.g:12198:6: (lv_subExpressions_3_0= ruleSumExpression )
            	    // InternalSCTX.g:12199:7: lv_subExpressions_3_0= ruleSumExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getShiftExpressionsAccess().getSubExpressionsSumExpressionParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_193);
            	    lv_subExpressions_3_0=ruleSumExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getShiftExpressionsRule());
            	      							}
            	      							add(
            	      								current,
            	      								"subExpressions",
            	      								lv_subExpressions_3_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.SumExpression");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalSCTX.g:12216:5: (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )*
            	    loop387:
            	    do {
            	        int alt387=2;
            	        alt387 = dfa387.predict(input);
            	        switch (alt387) {
            	    	case 1 :
            	    	    // InternalSCTX.g:12217:6: otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleSumExpression ) )
            	    	    {
            	    	    otherlv_4=(Token)match(input,87,FollowSets000.FOLLOW_104); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      						newLeafNode(otherlv_4, grammarAccess.getShiftExpressionsAccess().getLessThanSignLessThanSignKeyword_1_0_3_0());
            	    	      					
            	    	    }
            	    	    // InternalSCTX.g:12221:6: ( (lv_subExpressions_5_0= ruleSumExpression ) )
            	    	    // InternalSCTX.g:12222:7: (lv_subExpressions_5_0= ruleSumExpression )
            	    	    {
            	    	    // InternalSCTX.g:12222:7: (lv_subExpressions_5_0= ruleSumExpression )
            	    	    // InternalSCTX.g:12223:8: lv_subExpressions_5_0= ruleSumExpression
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      								newCompositeNode(grammarAccess.getShiftExpressionsAccess().getSubExpressionsSumExpressionParserRuleCall_1_0_3_1_0());
            	    	      							
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_193);
            	    	    lv_subExpressions_5_0=ruleSumExpression();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      								if (current==null) {
            	    	      									current = createModelElementForParent(grammarAccess.getShiftExpressionsRule());
            	    	      								}
            	    	      								add(
            	    	      									current,
            	    	      									"subExpressions",
            	    	      									lv_subExpressions_5_0,
            	    	      									"de.cau.cs.kieler.kexpressions.KExpressions.SumExpression");
            	    	      								afterParserOrEnumRuleCall();
            	    	      							
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop387;
            	        }
            	    } while (true);


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalSCTX.g:12243:4: ( () ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleSumExpression ) ) (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleSumExpression ) ) )* )
            	    {
            	    // InternalSCTX.g:12243:4: ( () ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleSumExpression ) ) (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleSumExpression ) ) )* )
            	    // InternalSCTX.g:12244:5: () ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleSumExpression ) ) (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleSumExpression ) ) )*
            	    {
            	    // InternalSCTX.g:12244:5: ()
            	    // InternalSCTX.g:12245:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						/* */
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndAdd(
            	      							grammarAccess.getShiftExpressionsAccess().getOperatorExpressionSubExpressionsAction_1_1_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalSCTX.g:12254:5: ( (lv_operator_7_0= ruleShiftRightOperator ) )
            	    // InternalSCTX.g:12255:6: (lv_operator_7_0= ruleShiftRightOperator )
            	    {
            	    // InternalSCTX.g:12255:6: (lv_operator_7_0= ruleShiftRightOperator )
            	    // InternalSCTX.g:12256:7: lv_operator_7_0= ruleShiftRightOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getShiftExpressionsAccess().getOperatorShiftRightOperatorEnumRuleCall_1_1_1_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_104);
            	    lv_operator_7_0=ruleShiftRightOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getShiftExpressionsRule());
            	      							}
            	      							set(
            	      								current,
            	      								"operator",
            	      								lv_operator_7_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.ShiftRightOperator");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalSCTX.g:12273:5: ( (lv_subExpressions_8_0= ruleSumExpression ) )
            	    // InternalSCTX.g:12274:6: (lv_subExpressions_8_0= ruleSumExpression )
            	    {
            	    // InternalSCTX.g:12274:6: (lv_subExpressions_8_0= ruleSumExpression )
            	    // InternalSCTX.g:12275:7: lv_subExpressions_8_0= ruleSumExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getShiftExpressionsAccess().getSubExpressionsSumExpressionParserRuleCall_1_1_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_193);
            	    lv_subExpressions_8_0=ruleSumExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getShiftExpressionsRule());
            	      							}
            	      							add(
            	      								current,
            	      								"subExpressions",
            	      								lv_subExpressions_8_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.SumExpression");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalSCTX.g:12292:5: (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleSumExpression ) ) )*
            	    loop388:
            	    do {
            	        int alt388=2;
            	        alt388 = dfa388.predict(input);
            	        switch (alt388) {
            	    	case 1 :
            	    	    // InternalSCTX.g:12293:6: otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleSumExpression ) )
            	    	    {
            	    	    otherlv_9=(Token)match(input,88,FollowSets000.FOLLOW_104); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      						newLeafNode(otherlv_9, grammarAccess.getShiftExpressionsAccess().getGreaterThanSignGreaterThanSignKeyword_1_1_3_0());
            	    	      					
            	    	    }
            	    	    // InternalSCTX.g:12297:6: ( (lv_subExpressions_10_0= ruleSumExpression ) )
            	    	    // InternalSCTX.g:12298:7: (lv_subExpressions_10_0= ruleSumExpression )
            	    	    {
            	    	    // InternalSCTX.g:12298:7: (lv_subExpressions_10_0= ruleSumExpression )
            	    	    // InternalSCTX.g:12299:8: lv_subExpressions_10_0= ruleSumExpression
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      								newCompositeNode(grammarAccess.getShiftExpressionsAccess().getSubExpressionsSumExpressionParserRuleCall_1_1_3_1_0());
            	    	      							
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_193);
            	    	    lv_subExpressions_10_0=ruleSumExpression();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      								if (current==null) {
            	    	      									current = createModelElementForParent(grammarAccess.getShiftExpressionsRule());
            	    	      								}
            	    	      								add(
            	    	      									current,
            	    	      									"subExpressions",
            	    	      									lv_subExpressions_10_0,
            	    	      									"de.cau.cs.kieler.kexpressions.KExpressions.SumExpression");
            	    	      								afterParserOrEnumRuleCall();
            	    	      							
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop388;
            	        }
            	    } while (true);


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalSCTX.g:12319:4: ( () ( (lv_operator_12_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_13_0= ruleSumExpression ) ) (otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleSumExpression ) ) )* )
            	    {
            	    // InternalSCTX.g:12319:4: ( () ( (lv_operator_12_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_13_0= ruleSumExpression ) ) (otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleSumExpression ) ) )* )
            	    // InternalSCTX.g:12320:5: () ( (lv_operator_12_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_13_0= ruleSumExpression ) ) (otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleSumExpression ) ) )*
            	    {
            	    // InternalSCTX.g:12320:5: ()
            	    // InternalSCTX.g:12321:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						/* */
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndAdd(
            	      							grammarAccess.getShiftExpressionsAccess().getOperatorExpressionSubExpressionsAction_1_2_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalSCTX.g:12330:5: ( (lv_operator_12_0= ruleShiftRightUnsignedOperator ) )
            	    // InternalSCTX.g:12331:6: (lv_operator_12_0= ruleShiftRightUnsignedOperator )
            	    {
            	    // InternalSCTX.g:12331:6: (lv_operator_12_0= ruleShiftRightUnsignedOperator )
            	    // InternalSCTX.g:12332:7: lv_operator_12_0= ruleShiftRightUnsignedOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getShiftExpressionsAccess().getOperatorShiftRightUnsignedOperatorEnumRuleCall_1_2_1_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_104);
            	    lv_operator_12_0=ruleShiftRightUnsignedOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getShiftExpressionsRule());
            	      							}
            	      							set(
            	      								current,
            	      								"operator",
            	      								lv_operator_12_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.ShiftRightUnsignedOperator");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalSCTX.g:12349:5: ( (lv_subExpressions_13_0= ruleSumExpression ) )
            	    // InternalSCTX.g:12350:6: (lv_subExpressions_13_0= ruleSumExpression )
            	    {
            	    // InternalSCTX.g:12350:6: (lv_subExpressions_13_0= ruleSumExpression )
            	    // InternalSCTX.g:12351:7: lv_subExpressions_13_0= ruleSumExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getShiftExpressionsAccess().getSubExpressionsSumExpressionParserRuleCall_1_2_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_193);
            	    lv_subExpressions_13_0=ruleSumExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getShiftExpressionsRule());
            	      							}
            	      							add(
            	      								current,
            	      								"subExpressions",
            	      								lv_subExpressions_13_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.SumExpression");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalSCTX.g:12368:5: (otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleSumExpression ) ) )*
            	    loop389:
            	    do {
            	        int alt389=2;
            	        alt389 = dfa389.predict(input);
            	        switch (alt389) {
            	    	case 1 :
            	    	    // InternalSCTX.g:12369:6: otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleSumExpression ) )
            	    	    {
            	    	    otherlv_14=(Token)match(input,89,FollowSets000.FOLLOW_104); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      						newLeafNode(otherlv_14, grammarAccess.getShiftExpressionsAccess().getGreaterThanSignGreaterThanSignGreaterThanSignKeyword_1_2_3_0());
            	    	      					
            	    	    }
            	    	    // InternalSCTX.g:12373:6: ( (lv_subExpressions_15_0= ruleSumExpression ) )
            	    	    // InternalSCTX.g:12374:7: (lv_subExpressions_15_0= ruleSumExpression )
            	    	    {
            	    	    // InternalSCTX.g:12374:7: (lv_subExpressions_15_0= ruleSumExpression )
            	    	    // InternalSCTX.g:12375:8: lv_subExpressions_15_0= ruleSumExpression
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      								newCompositeNode(grammarAccess.getShiftExpressionsAccess().getSubExpressionsSumExpressionParserRuleCall_1_2_3_1_0());
            	    	      							
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_193);
            	    	    lv_subExpressions_15_0=ruleSumExpression();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      								if (current==null) {
            	    	      									current = createModelElementForParent(grammarAccess.getShiftExpressionsRule());
            	    	      								}
            	    	      								add(
            	    	      									current,
            	    	      									"subExpressions",
            	    	      									lv_subExpressions_15_0,
            	    	      									"de.cau.cs.kieler.kexpressions.KExpressions.SumExpression");
            	    	      								afterParserOrEnumRuleCall();
            	    	      							
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop389;
            	        }
            	    } while (true);


            	    }


            	    }
            	    break;

            	default :
            	    break loop390;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShiftExpressions"


    // $ANTLR start "entryRuleShiftRightExpression"
    // InternalSCTX.g:12399:1: entryRuleShiftRightExpression returns [EObject current=null] : iv_ruleShiftRightExpression= ruleShiftRightExpression EOF ;
    public final EObject entryRuleShiftRightExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleShiftRightExpression = null;


        try {
            // InternalSCTX.g:12399:61: (iv_ruleShiftRightExpression= ruleShiftRightExpression EOF )
            // InternalSCTX.g:12400:2: iv_ruleShiftRightExpression= ruleShiftRightExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getShiftRightExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleShiftRightExpression=ruleShiftRightExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleShiftRightExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleShiftRightExpression"


    // $ANTLR start "ruleShiftRightExpression"
    // InternalSCTX.g:12406:1: ruleShiftRightExpression returns [EObject current=null] : (this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )* )? ) ;
    public final EObject ruleShiftRightExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_SumExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:12412:2: ( (this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )* )? ) )
            // InternalSCTX.g:12413:2: (this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )* )? )
            {
            // InternalSCTX.g:12413:2: (this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )* )? )
            // InternalSCTX.g:12414:3: this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getShiftRightExpressionAccess().getSumExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_194);
            this_SumExpression_0=ruleSumExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_SumExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCTX.g:12425:3: ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )* )?
            int alt392=2;
            int LA392_0 = input.LA(1);

            if ( (LA392_0==88) ) {
                alt392=1;
            }
            switch (alt392) {
                case 1 :
                    // InternalSCTX.g:12426:4: () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )*
                    {
                    // InternalSCTX.g:12426:4: ()
                    // InternalSCTX.g:12427:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getShiftRightExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCTX.g:12436:4: ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) )
                    // InternalSCTX.g:12437:5: ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) )
                    {
                    // InternalSCTX.g:12437:5: ( (lv_operator_2_0= ruleShiftRightOperator ) )
                    // InternalSCTX.g:12438:6: (lv_operator_2_0= ruleShiftRightOperator )
                    {
                    // InternalSCTX.g:12438:6: (lv_operator_2_0= ruleShiftRightOperator )
                    // InternalSCTX.g:12439:7: lv_operator_2_0= ruleShiftRightOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getShiftRightExpressionAccess().getOperatorShiftRightOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_104);
                    lv_operator_2_0=ruleShiftRightOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getShiftRightExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ShiftRightOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:12456:5: ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) )
                    // InternalSCTX.g:12457:6: (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression )
                    {
                    // InternalSCTX.g:12457:6: (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression )
                    // InternalSCTX.g:12458:7: lv_subExpressions_3_0= ruleShiftRightUnsignedExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getShiftRightExpressionAccess().getSubExpressionsShiftRightUnsignedExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_194);
                    lv_subExpressions_3_0=ruleShiftRightUnsignedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getShiftRightExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ShiftRightUnsignedExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalSCTX.g:12476:4: (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )*
                    loop391:
                    do {
                        int alt391=2;
                        int LA391_0 = input.LA(1);

                        if ( (LA391_0==88) ) {
                            alt391=1;
                        }


                        switch (alt391) {
                    	case 1 :
                    	    // InternalSCTX.g:12477:5: otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,88,FollowSets000.FOLLOW_104); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getShiftRightExpressionAccess().getGreaterThanSignGreaterThanSignKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:12481:5: ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) )
                    	    // InternalSCTX.g:12482:6: (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression )
                    	    {
                    	    // InternalSCTX.g:12482:6: (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression )
                    	    // InternalSCTX.g:12483:7: lv_subExpressions_5_0= ruleShiftRightUnsignedExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getShiftRightExpressionAccess().getSubExpressionsShiftRightUnsignedExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_194);
                    	    lv_subExpressions_5_0=ruleShiftRightUnsignedExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getShiftRightExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.ShiftRightUnsignedExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop391;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShiftRightExpression"


    // $ANTLR start "entryRuleShiftRightUnsignedExpression"
    // InternalSCTX.g:12506:1: entryRuleShiftRightUnsignedExpression returns [EObject current=null] : iv_ruleShiftRightUnsignedExpression= ruleShiftRightUnsignedExpression EOF ;
    public final EObject entryRuleShiftRightUnsignedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleShiftRightUnsignedExpression = null;


        try {
            // InternalSCTX.g:12506:69: (iv_ruleShiftRightUnsignedExpression= ruleShiftRightUnsignedExpression EOF )
            // InternalSCTX.g:12507:2: iv_ruleShiftRightUnsignedExpression= ruleShiftRightUnsignedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getShiftRightUnsignedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleShiftRightUnsignedExpression=ruleShiftRightUnsignedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleShiftRightUnsignedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleShiftRightUnsignedExpression"


    // $ANTLR start "ruleShiftRightUnsignedExpression"
    // InternalSCTX.g:12513:1: ruleShiftRightUnsignedExpression returns [EObject current=null] : (this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* )? ) ;
    public final EObject ruleShiftRightUnsignedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_SumExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:12519:2: ( (this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* )? ) )
            // InternalSCTX.g:12520:2: (this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* )? )
            {
            // InternalSCTX.g:12520:2: (this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* )? )
            // InternalSCTX.g:12521:3: this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getShiftRightUnsignedExpressionAccess().getSumExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_193);
            this_SumExpression_0=ruleSumExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_SumExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCTX.g:12532:3: ( () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* )?
            int alt394=2;
            int LA394_0 = input.LA(1);

            if ( (LA394_0==89) ) {
                alt394=1;
            }
            switch (alt394) {
                case 1 :
                    // InternalSCTX.g:12533:4: () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )*
                    {
                    // InternalSCTX.g:12533:4: ()
                    // InternalSCTX.g:12534:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getShiftRightUnsignedExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCTX.g:12543:4: ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) )
                    // InternalSCTX.g:12544:5: ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) )
                    {
                    // InternalSCTX.g:12544:5: ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) )
                    // InternalSCTX.g:12545:6: (lv_operator_2_0= ruleShiftRightUnsignedOperator )
                    {
                    // InternalSCTX.g:12545:6: (lv_operator_2_0= ruleShiftRightUnsignedOperator )
                    // InternalSCTX.g:12546:7: lv_operator_2_0= ruleShiftRightUnsignedOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getShiftRightUnsignedExpressionAccess().getOperatorShiftRightUnsignedOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_104);
                    lv_operator_2_0=ruleShiftRightUnsignedOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getShiftRightUnsignedExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ShiftRightUnsignedOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:12563:5: ( (lv_subExpressions_3_0= ruleSumExpression ) )
                    // InternalSCTX.g:12564:6: (lv_subExpressions_3_0= ruleSumExpression )
                    {
                    // InternalSCTX.g:12564:6: (lv_subExpressions_3_0= ruleSumExpression )
                    // InternalSCTX.g:12565:7: lv_subExpressions_3_0= ruleSumExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getShiftRightUnsignedExpressionAccess().getSubExpressionsSumExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_195);
                    lv_subExpressions_3_0=ruleSumExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getShiftRightUnsignedExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.SumExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalSCTX.g:12583:4: (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )*
                    loop393:
                    do {
                        int alt393=2;
                        int LA393_0 = input.LA(1);

                        if ( (LA393_0==89) ) {
                            alt393=1;
                        }


                        switch (alt393) {
                    	case 1 :
                    	    // InternalSCTX.g:12584:5: otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,89,FollowSets000.FOLLOW_104); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getShiftRightUnsignedExpressionAccess().getGreaterThanSignGreaterThanSignGreaterThanSignKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:12588:5: ( (lv_subExpressions_5_0= ruleSumExpression ) )
                    	    // InternalSCTX.g:12589:6: (lv_subExpressions_5_0= ruleSumExpression )
                    	    {
                    	    // InternalSCTX.g:12589:6: (lv_subExpressions_5_0= ruleSumExpression )
                    	    // InternalSCTX.g:12590:7: lv_subExpressions_5_0= ruleSumExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getShiftRightUnsignedExpressionAccess().getSubExpressionsSumExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_195);
                    	    lv_subExpressions_5_0=ruleSumExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getShiftRightUnsignedExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.SumExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop393;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShiftRightUnsignedExpression"


    // $ANTLR start "entryRuleSumExpression"
    // InternalSCTX.g:12613:1: entryRuleSumExpression returns [EObject current=null] : iv_ruleSumExpression= ruleSumExpression EOF ;
    public final EObject entryRuleSumExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSumExpression = null;


        try {
            // InternalSCTX.g:12613:54: (iv_ruleSumExpression= ruleSumExpression EOF )
            // InternalSCTX.g:12614:2: iv_ruleSumExpression= ruleSumExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSumExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSumExpression=ruleSumExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSumExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSumExpression"


    // $ANTLR start "ruleSumExpression"
    // InternalSCTX.g:12620:1: ruleSumExpression returns [EObject current=null] : (this_ProductExpression_0= ruleProductExpression ( ( () ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleProductExpression ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )* ) )* ) ;
    public final EObject ruleSumExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        Token otherlv_9=null;
        EObject this_ProductExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;

        Enumerator lv_operator_7_0 = null;

        EObject lv_subExpressions_8_0 = null;

        EObject lv_subExpressions_10_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:12626:2: ( (this_ProductExpression_0= ruleProductExpression ( ( () ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleProductExpression ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )* ) )* ) )
            // InternalSCTX.g:12627:2: (this_ProductExpression_0= ruleProductExpression ( ( () ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleProductExpression ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )* ) )* )
            {
            // InternalSCTX.g:12627:2: (this_ProductExpression_0= ruleProductExpression ( ( () ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleProductExpression ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )* ) )* )
            // InternalSCTX.g:12628:3: this_ProductExpression_0= ruleProductExpression ( ( () ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleProductExpression ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )* ) )*
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getSumExpressionAccess().getProductExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_196);
            this_ProductExpression_0=ruleProductExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ProductExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCTX.g:12639:3: ( ( () ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleProductExpression ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )* ) )*
            loop397:
            do {
                int alt397=3;
                int LA397_0 = input.LA(1);

                if ( (LA397_0==90) ) {
                    alt397=1;
                }
                else if ( (LA397_0==91) ) {
                    alt397=2;
                }


                switch (alt397) {
            	case 1 :
            	    // InternalSCTX.g:12640:4: ( () ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )* )
            	    {
            	    // InternalSCTX.g:12640:4: ( () ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )* )
            	    // InternalSCTX.g:12641:5: () ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )*
            	    {
            	    // InternalSCTX.g:12641:5: ()
            	    // InternalSCTX.g:12642:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						/* */
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndAdd(
            	      							grammarAccess.getSumExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalSCTX.g:12651:5: ( (lv_operator_2_0= ruleAddOperator ) )
            	    // InternalSCTX.g:12652:6: (lv_operator_2_0= ruleAddOperator )
            	    {
            	    // InternalSCTX.g:12652:6: (lv_operator_2_0= ruleAddOperator )
            	    // InternalSCTX.g:12653:7: lv_operator_2_0= ruleAddOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getSumExpressionAccess().getOperatorAddOperatorEnumRuleCall_1_0_1_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_104);
            	    lv_operator_2_0=ruleAddOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getSumExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"operator",
            	      								lv_operator_2_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.AddOperator");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalSCTX.g:12670:5: ( (lv_subExpressions_3_0= ruleProductExpression ) )
            	    // InternalSCTX.g:12671:6: (lv_subExpressions_3_0= ruleProductExpression )
            	    {
            	    // InternalSCTX.g:12671:6: (lv_subExpressions_3_0= ruleProductExpression )
            	    // InternalSCTX.g:12672:7: lv_subExpressions_3_0= ruleProductExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getSumExpressionAccess().getSubExpressionsProductExpressionParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_196);
            	    lv_subExpressions_3_0=ruleProductExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getSumExpressionRule());
            	      							}
            	      							add(
            	      								current,
            	      								"subExpressions",
            	      								lv_subExpressions_3_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.ProductExpression");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalSCTX.g:12689:5: (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )*
            	    loop395:
            	    do {
            	        int alt395=2;
            	        alt395 = dfa395.predict(input);
            	        switch (alt395) {
            	    	case 1 :
            	    	    // InternalSCTX.g:12690:6: otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) )
            	    	    {
            	    	    otherlv_4=(Token)match(input,90,FollowSets000.FOLLOW_104); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      						newLeafNode(otherlv_4, grammarAccess.getSumExpressionAccess().getPlusSignKeyword_1_0_3_0());
            	    	      					
            	    	    }
            	    	    // InternalSCTX.g:12694:6: ( (lv_subExpressions_5_0= ruleProductExpression ) )
            	    	    // InternalSCTX.g:12695:7: (lv_subExpressions_5_0= ruleProductExpression )
            	    	    {
            	    	    // InternalSCTX.g:12695:7: (lv_subExpressions_5_0= ruleProductExpression )
            	    	    // InternalSCTX.g:12696:8: lv_subExpressions_5_0= ruleProductExpression
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      								newCompositeNode(grammarAccess.getSumExpressionAccess().getSubExpressionsProductExpressionParserRuleCall_1_0_3_1_0());
            	    	      							
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_196);
            	    	    lv_subExpressions_5_0=ruleProductExpression();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      								if (current==null) {
            	    	      									current = createModelElementForParent(grammarAccess.getSumExpressionRule());
            	    	      								}
            	    	      								add(
            	    	      									current,
            	    	      									"subExpressions",
            	    	      									lv_subExpressions_5_0,
            	    	      									"de.cau.cs.kieler.kexpressions.KExpressions.ProductExpression");
            	    	      								afterParserOrEnumRuleCall();
            	    	      							
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop395;
            	        }
            	    } while (true);


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalSCTX.g:12716:4: ( () ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleProductExpression ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )* )
            	    {
            	    // InternalSCTX.g:12716:4: ( () ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleProductExpression ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )* )
            	    // InternalSCTX.g:12717:5: () ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleProductExpression ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )*
            	    {
            	    // InternalSCTX.g:12717:5: ()
            	    // InternalSCTX.g:12718:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						/* */
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndAdd(
            	      							grammarAccess.getSumExpressionAccess().getOperatorExpressionSubExpressionsAction_1_1_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalSCTX.g:12727:5: ( (lv_operator_7_0= ruleSubOperator ) )
            	    // InternalSCTX.g:12728:6: (lv_operator_7_0= ruleSubOperator )
            	    {
            	    // InternalSCTX.g:12728:6: (lv_operator_7_0= ruleSubOperator )
            	    // InternalSCTX.g:12729:7: lv_operator_7_0= ruleSubOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getSumExpressionAccess().getOperatorSubOperatorEnumRuleCall_1_1_1_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_104);
            	    lv_operator_7_0=ruleSubOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getSumExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"operator",
            	      								lv_operator_7_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.SubOperator");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalSCTX.g:12746:5: ( (lv_subExpressions_8_0= ruleProductExpression ) )
            	    // InternalSCTX.g:12747:6: (lv_subExpressions_8_0= ruleProductExpression )
            	    {
            	    // InternalSCTX.g:12747:6: (lv_subExpressions_8_0= ruleProductExpression )
            	    // InternalSCTX.g:12748:7: lv_subExpressions_8_0= ruleProductExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getSumExpressionAccess().getSubExpressionsProductExpressionParserRuleCall_1_1_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_196);
            	    lv_subExpressions_8_0=ruleProductExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getSumExpressionRule());
            	      							}
            	      							add(
            	      								current,
            	      								"subExpressions",
            	      								lv_subExpressions_8_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.ProductExpression");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalSCTX.g:12765:5: (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )*
            	    loop396:
            	    do {
            	        int alt396=2;
            	        alt396 = dfa396.predict(input);
            	        switch (alt396) {
            	    	case 1 :
            	    	    // InternalSCTX.g:12766:6: otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) )
            	    	    {
            	    	    otherlv_9=(Token)match(input,91,FollowSets000.FOLLOW_104); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      						newLeafNode(otherlv_9, grammarAccess.getSumExpressionAccess().getHyphenMinusKeyword_1_1_3_0());
            	    	      					
            	    	    }
            	    	    // InternalSCTX.g:12770:6: ( (lv_subExpressions_10_0= ruleProductExpression ) )
            	    	    // InternalSCTX.g:12771:7: (lv_subExpressions_10_0= ruleProductExpression )
            	    	    {
            	    	    // InternalSCTX.g:12771:7: (lv_subExpressions_10_0= ruleProductExpression )
            	    	    // InternalSCTX.g:12772:8: lv_subExpressions_10_0= ruleProductExpression
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      								newCompositeNode(grammarAccess.getSumExpressionAccess().getSubExpressionsProductExpressionParserRuleCall_1_1_3_1_0());
            	    	      							
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_196);
            	    	    lv_subExpressions_10_0=ruleProductExpression();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      								if (current==null) {
            	    	      									current = createModelElementForParent(grammarAccess.getSumExpressionRule());
            	    	      								}
            	    	      								add(
            	    	      									current,
            	    	      									"subExpressions",
            	    	      									lv_subExpressions_10_0,
            	    	      									"de.cau.cs.kieler.kexpressions.KExpressions.ProductExpression");
            	    	      								afterParserOrEnumRuleCall();
            	    	      							
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop396;
            	        }
            	    } while (true);


            	    }


            	    }
            	    break;

            	default :
            	    break loop397;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSumExpression"


    // $ANTLR start "entryRuleProductExpression"
    // InternalSCTX.g:12796:1: entryRuleProductExpression returns [EObject current=null] : iv_ruleProductExpression= ruleProductExpression EOF ;
    public final EObject entryRuleProductExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleProductExpression = null;


        try {
            // InternalSCTX.g:12796:58: (iv_ruleProductExpression= ruleProductExpression EOF )
            // InternalSCTX.g:12797:2: iv_ruleProductExpression= ruleProductExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getProductExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleProductExpression=ruleProductExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleProductExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleProductExpression"


    // $ANTLR start "ruleProductExpression"
    // InternalSCTX.g:12803:1: ruleProductExpression returns [EObject current=null] : (this_NegExpression_0= ruleNegExpression ( ( () ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleNegExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleNegExpression ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleNegExpression ) ) )* ) | ( () ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleNegExpression ) ) (otherlv_14= '%' ( (lv_subExpressions_15_0= ruleNegExpression ) ) )* ) )* ) ;
    public final EObject ruleProductExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        Token otherlv_9=null;
        Token otherlv_14=null;
        EObject this_NegExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;

        Enumerator lv_operator_7_0 = null;

        EObject lv_subExpressions_8_0 = null;

        EObject lv_subExpressions_10_0 = null;

        Enumerator lv_operator_12_0 = null;

        EObject lv_subExpressions_13_0 = null;

        EObject lv_subExpressions_15_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:12809:2: ( (this_NegExpression_0= ruleNegExpression ( ( () ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleNegExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleNegExpression ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleNegExpression ) ) )* ) | ( () ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleNegExpression ) ) (otherlv_14= '%' ( (lv_subExpressions_15_0= ruleNegExpression ) ) )* ) )* ) )
            // InternalSCTX.g:12810:2: (this_NegExpression_0= ruleNegExpression ( ( () ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleNegExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleNegExpression ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleNegExpression ) ) )* ) | ( () ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleNegExpression ) ) (otherlv_14= '%' ( (lv_subExpressions_15_0= ruleNegExpression ) ) )* ) )* )
            {
            // InternalSCTX.g:12810:2: (this_NegExpression_0= ruleNegExpression ( ( () ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleNegExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleNegExpression ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleNegExpression ) ) )* ) | ( () ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleNegExpression ) ) (otherlv_14= '%' ( (lv_subExpressions_15_0= ruleNegExpression ) ) )* ) )* )
            // InternalSCTX.g:12811:3: this_NegExpression_0= ruleNegExpression ( ( () ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleNegExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleNegExpression ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleNegExpression ) ) )* ) | ( () ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleNegExpression ) ) (otherlv_14= '%' ( (lv_subExpressions_15_0= ruleNegExpression ) ) )* ) )*
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getProductExpressionAccess().getNegExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_197);
            this_NegExpression_0=ruleNegExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_NegExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCTX.g:12822:3: ( ( () ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleNegExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleNegExpression ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleNegExpression ) ) )* ) | ( () ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleNegExpression ) ) (otherlv_14= '%' ( (lv_subExpressions_15_0= ruleNegExpression ) ) )* ) )*
            loop401:
            do {
                int alt401=4;
                switch ( input.LA(1) ) {
                case 92:
                    {
                    alt401=1;
                    }
                    break;
                case 93:
                    {
                    alt401=2;
                    }
                    break;
                case 94:
                    {
                    alt401=3;
                    }
                    break;

                }

                switch (alt401) {
            	case 1 :
            	    // InternalSCTX.g:12823:4: ( () ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleNegExpression ) ) )* )
            	    {
            	    // InternalSCTX.g:12823:4: ( () ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleNegExpression ) ) )* )
            	    // InternalSCTX.g:12824:5: () ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleNegExpression ) ) )*
            	    {
            	    // InternalSCTX.g:12824:5: ()
            	    // InternalSCTX.g:12825:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						/* */
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndAdd(
            	      							grammarAccess.getProductExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalSCTX.g:12834:5: ( (lv_operator_2_0= ruleMultOperator ) )
            	    // InternalSCTX.g:12835:6: (lv_operator_2_0= ruleMultOperator )
            	    {
            	    // InternalSCTX.g:12835:6: (lv_operator_2_0= ruleMultOperator )
            	    // InternalSCTX.g:12836:7: lv_operator_2_0= ruleMultOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getProductExpressionAccess().getOperatorMultOperatorEnumRuleCall_1_0_1_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_104);
            	    lv_operator_2_0=ruleMultOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getProductExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"operator",
            	      								lv_operator_2_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.MultOperator");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalSCTX.g:12853:5: ( (lv_subExpressions_3_0= ruleNegExpression ) )
            	    // InternalSCTX.g:12854:6: (lv_subExpressions_3_0= ruleNegExpression )
            	    {
            	    // InternalSCTX.g:12854:6: (lv_subExpressions_3_0= ruleNegExpression )
            	    // InternalSCTX.g:12855:7: lv_subExpressions_3_0= ruleNegExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getProductExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_197);
            	    lv_subExpressions_3_0=ruleNegExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getProductExpressionRule());
            	      							}
            	      							add(
            	      								current,
            	      								"subExpressions",
            	      								lv_subExpressions_3_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.NegExpression");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalSCTX.g:12872:5: (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleNegExpression ) ) )*
            	    loop398:
            	    do {
            	        int alt398=2;
            	        alt398 = dfa398.predict(input);
            	        switch (alt398) {
            	    	case 1 :
            	    	    // InternalSCTX.g:12873:6: otherlv_4= '*' ( (lv_subExpressions_5_0= ruleNegExpression ) )
            	    	    {
            	    	    otherlv_4=(Token)match(input,92,FollowSets000.FOLLOW_104); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      						newLeafNode(otherlv_4, grammarAccess.getProductExpressionAccess().getAsteriskKeyword_1_0_3_0());
            	    	      					
            	    	    }
            	    	    // InternalSCTX.g:12877:6: ( (lv_subExpressions_5_0= ruleNegExpression ) )
            	    	    // InternalSCTX.g:12878:7: (lv_subExpressions_5_0= ruleNegExpression )
            	    	    {
            	    	    // InternalSCTX.g:12878:7: (lv_subExpressions_5_0= ruleNegExpression )
            	    	    // InternalSCTX.g:12879:8: lv_subExpressions_5_0= ruleNegExpression
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      								newCompositeNode(grammarAccess.getProductExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_1_0_3_1_0());
            	    	      							
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_197);
            	    	    lv_subExpressions_5_0=ruleNegExpression();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      								if (current==null) {
            	    	      									current = createModelElementForParent(grammarAccess.getProductExpressionRule());
            	    	      								}
            	    	      								add(
            	    	      									current,
            	    	      									"subExpressions",
            	    	      									lv_subExpressions_5_0,
            	    	      									"de.cau.cs.kieler.kexpressions.KExpressions.NegExpression");
            	    	      								afterParserOrEnumRuleCall();
            	    	      							
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop398;
            	        }
            	    } while (true);


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalSCTX.g:12899:4: ( () ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleNegExpression ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleNegExpression ) ) )* )
            	    {
            	    // InternalSCTX.g:12899:4: ( () ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleNegExpression ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleNegExpression ) ) )* )
            	    // InternalSCTX.g:12900:5: () ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleNegExpression ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleNegExpression ) ) )*
            	    {
            	    // InternalSCTX.g:12900:5: ()
            	    // InternalSCTX.g:12901:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						/* */
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndAdd(
            	      							grammarAccess.getProductExpressionAccess().getOperatorExpressionSubExpressionsAction_1_1_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalSCTX.g:12910:5: ( (lv_operator_7_0= ruleDivOperator ) )
            	    // InternalSCTX.g:12911:6: (lv_operator_7_0= ruleDivOperator )
            	    {
            	    // InternalSCTX.g:12911:6: (lv_operator_7_0= ruleDivOperator )
            	    // InternalSCTX.g:12912:7: lv_operator_7_0= ruleDivOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getProductExpressionAccess().getOperatorDivOperatorEnumRuleCall_1_1_1_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_104);
            	    lv_operator_7_0=ruleDivOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getProductExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"operator",
            	      								lv_operator_7_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.DivOperator");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalSCTX.g:12929:5: ( (lv_subExpressions_8_0= ruleNegExpression ) )
            	    // InternalSCTX.g:12930:6: (lv_subExpressions_8_0= ruleNegExpression )
            	    {
            	    // InternalSCTX.g:12930:6: (lv_subExpressions_8_0= ruleNegExpression )
            	    // InternalSCTX.g:12931:7: lv_subExpressions_8_0= ruleNegExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getProductExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_1_1_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_197);
            	    lv_subExpressions_8_0=ruleNegExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getProductExpressionRule());
            	      							}
            	      							add(
            	      								current,
            	      								"subExpressions",
            	      								lv_subExpressions_8_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.NegExpression");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalSCTX.g:12948:5: (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleNegExpression ) ) )*
            	    loop399:
            	    do {
            	        int alt399=2;
            	        alt399 = dfa399.predict(input);
            	        switch (alt399) {
            	    	case 1 :
            	    	    // InternalSCTX.g:12949:6: otherlv_9= '/' ( (lv_subExpressions_10_0= ruleNegExpression ) )
            	    	    {
            	    	    otherlv_9=(Token)match(input,93,FollowSets000.FOLLOW_104); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      						newLeafNode(otherlv_9, grammarAccess.getProductExpressionAccess().getSolidusKeyword_1_1_3_0());
            	    	      					
            	    	    }
            	    	    // InternalSCTX.g:12953:6: ( (lv_subExpressions_10_0= ruleNegExpression ) )
            	    	    // InternalSCTX.g:12954:7: (lv_subExpressions_10_0= ruleNegExpression )
            	    	    {
            	    	    // InternalSCTX.g:12954:7: (lv_subExpressions_10_0= ruleNegExpression )
            	    	    // InternalSCTX.g:12955:8: lv_subExpressions_10_0= ruleNegExpression
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      								newCompositeNode(grammarAccess.getProductExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_1_1_3_1_0());
            	    	      							
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_197);
            	    	    lv_subExpressions_10_0=ruleNegExpression();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      								if (current==null) {
            	    	      									current = createModelElementForParent(grammarAccess.getProductExpressionRule());
            	    	      								}
            	    	      								add(
            	    	      									current,
            	    	      									"subExpressions",
            	    	      									lv_subExpressions_10_0,
            	    	      									"de.cau.cs.kieler.kexpressions.KExpressions.NegExpression");
            	    	      								afterParserOrEnumRuleCall();
            	    	      							
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop399;
            	        }
            	    } while (true);


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalSCTX.g:12975:4: ( () ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleNegExpression ) ) (otherlv_14= '%' ( (lv_subExpressions_15_0= ruleNegExpression ) ) )* )
            	    {
            	    // InternalSCTX.g:12975:4: ( () ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleNegExpression ) ) (otherlv_14= '%' ( (lv_subExpressions_15_0= ruleNegExpression ) ) )* )
            	    // InternalSCTX.g:12976:5: () ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleNegExpression ) ) (otherlv_14= '%' ( (lv_subExpressions_15_0= ruleNegExpression ) ) )*
            	    {
            	    // InternalSCTX.g:12976:5: ()
            	    // InternalSCTX.g:12977:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						/* */
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndAdd(
            	      							grammarAccess.getProductExpressionAccess().getOperatorExpressionSubExpressionsAction_1_2_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalSCTX.g:12986:5: ( (lv_operator_12_0= ruleModOperator ) )
            	    // InternalSCTX.g:12987:6: (lv_operator_12_0= ruleModOperator )
            	    {
            	    // InternalSCTX.g:12987:6: (lv_operator_12_0= ruleModOperator )
            	    // InternalSCTX.g:12988:7: lv_operator_12_0= ruleModOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getProductExpressionAccess().getOperatorModOperatorEnumRuleCall_1_2_1_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_104);
            	    lv_operator_12_0=ruleModOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getProductExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"operator",
            	      								lv_operator_12_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.ModOperator");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalSCTX.g:13005:5: ( (lv_subExpressions_13_0= ruleNegExpression ) )
            	    // InternalSCTX.g:13006:6: (lv_subExpressions_13_0= ruleNegExpression )
            	    {
            	    // InternalSCTX.g:13006:6: (lv_subExpressions_13_0= ruleNegExpression )
            	    // InternalSCTX.g:13007:7: lv_subExpressions_13_0= ruleNegExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getProductExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_1_2_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_197);
            	    lv_subExpressions_13_0=ruleNegExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getProductExpressionRule());
            	      							}
            	      							add(
            	      								current,
            	      								"subExpressions",
            	      								lv_subExpressions_13_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.NegExpression");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalSCTX.g:13024:5: (otherlv_14= '%' ( (lv_subExpressions_15_0= ruleNegExpression ) ) )*
            	    loop400:
            	    do {
            	        int alt400=2;
            	        alt400 = dfa400.predict(input);
            	        switch (alt400) {
            	    	case 1 :
            	    	    // InternalSCTX.g:13025:6: otherlv_14= '%' ( (lv_subExpressions_15_0= ruleNegExpression ) )
            	    	    {
            	    	    otherlv_14=(Token)match(input,94,FollowSets000.FOLLOW_104); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      						newLeafNode(otherlv_14, grammarAccess.getProductExpressionAccess().getPercentSignKeyword_1_2_3_0());
            	    	      					
            	    	    }
            	    	    // InternalSCTX.g:13029:6: ( (lv_subExpressions_15_0= ruleNegExpression ) )
            	    	    // InternalSCTX.g:13030:7: (lv_subExpressions_15_0= ruleNegExpression )
            	    	    {
            	    	    // InternalSCTX.g:13030:7: (lv_subExpressions_15_0= ruleNegExpression )
            	    	    // InternalSCTX.g:13031:8: lv_subExpressions_15_0= ruleNegExpression
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      								newCompositeNode(grammarAccess.getProductExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_1_2_3_1_0());
            	    	      							
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_197);
            	    	    lv_subExpressions_15_0=ruleNegExpression();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      								if (current==null) {
            	    	      									current = createModelElementForParent(grammarAccess.getProductExpressionRule());
            	    	      								}
            	    	      								add(
            	    	      									current,
            	    	      									"subExpressions",
            	    	      									lv_subExpressions_15_0,
            	    	      									"de.cau.cs.kieler.kexpressions.KExpressions.NegExpression");
            	    	      								afterParserOrEnumRuleCall();
            	    	      							
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop400;
            	        }
            	    } while (true);


            	    }


            	    }
            	    break;

            	default :
            	    break loop401;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleProductExpression"


    // $ANTLR start "entryRuleNegExpression"
    // InternalSCTX.g:13055:1: entryRuleNegExpression returns [EObject current=null] : iv_ruleNegExpression= ruleNegExpression EOF ;
    public final EObject entryRuleNegExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNegExpression = null;


        try {
            // InternalSCTX.g:13055:54: (iv_ruleNegExpression= ruleNegExpression EOF )
            // InternalSCTX.g:13056:2: iv_ruleNegExpression= ruleNegExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNegExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNegExpression=ruleNegExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNegExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNegExpression"


    // $ANTLR start "ruleNegExpression"
    // InternalSCTX.g:13062:1: ruleNegExpression returns [EObject current=null] : ( ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) ) | this_TernaryOperation_3= ruleTernaryOperation ) ;
    public final EObject ruleNegExpression() throws RecognitionException {
        EObject current = null;

        Enumerator lv_operator_1_0 = null;

        EObject lv_subExpressions_2_0 = null;

        EObject this_TernaryOperation_3 = null;



        	enterRule();

        try {
            // InternalSCTX.g:13068:2: ( ( ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) ) | this_TernaryOperation_3= ruleTernaryOperation ) )
            // InternalSCTX.g:13069:2: ( ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) ) | this_TernaryOperation_3= ruleTernaryOperation )
            {
            // InternalSCTX.g:13069:2: ( ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) ) | this_TernaryOperation_3= ruleTernaryOperation )
            int alt402=2;
            int LA402_0 = input.LA(1);

            if ( (LA402_0==91) ) {
                alt402=1;
            }
            else if ( ((LA402_0>=RULE_STRING && LA402_0<=RULE_COMMENT_ANNOTATION)||LA402_0==21||LA402_0==31||LA402_0==76||LA402_0==81||LA402_0==99||LA402_0==103||LA402_0==145||LA402_0==148) ) {
                alt402=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 402, 0, input);

                throw nvae;
            }
            switch (alt402) {
                case 1 :
                    // InternalSCTX.g:13070:3: ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) )
                    {
                    // InternalSCTX.g:13070:3: ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) )
                    // InternalSCTX.g:13071:4: () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) )
                    {
                    // InternalSCTX.g:13071:4: ()
                    // InternalSCTX.g:13072:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getNegExpressionAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCTX.g:13081:4: ( (lv_operator_1_0= ruleSubOperator ) )
                    // InternalSCTX.g:13082:5: (lv_operator_1_0= ruleSubOperator )
                    {
                    // InternalSCTX.g:13082:5: (lv_operator_1_0= ruleSubOperator )
                    // InternalSCTX.g:13083:6: lv_operator_1_0= ruleSubOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNegExpressionAccess().getOperatorSubOperatorEnumRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_104);
                    lv_operator_1_0=ruleSubOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNegExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_1_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.SubOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:13100:4: ( (lv_subExpressions_2_0= ruleNegExpression ) )
                    // InternalSCTX.g:13101:5: (lv_subExpressions_2_0= ruleNegExpression )
                    {
                    // InternalSCTX.g:13101:5: (lv_subExpressions_2_0= ruleNegExpression )
                    // InternalSCTX.g:13102:6: lv_subExpressions_2_0= ruleNegExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNegExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_2_0=ruleNegExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNegExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_2_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.NegExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:13121:3: this_TernaryOperation_3= ruleTernaryOperation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNegExpressionAccess().getTernaryOperationParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TernaryOperation_3=ruleTernaryOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TernaryOperation_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNegExpression"


    // $ANTLR start "entryRuleTernaryOperation"
    // InternalSCTX.g:13136:1: entryRuleTernaryOperation returns [EObject current=null] : iv_ruleTernaryOperation= ruleTernaryOperation EOF ;
    public final EObject entryRuleTernaryOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTernaryOperation = null;


        try {
            // InternalSCTX.g:13136:57: (iv_ruleTernaryOperation= ruleTernaryOperation EOF )
            // InternalSCTX.g:13137:2: iv_ruleTernaryOperation= ruleTernaryOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTernaryOperationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTernaryOperation=ruleTernaryOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTernaryOperation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTernaryOperation"


    // $ANTLR start "ruleTernaryOperation"
    // InternalSCTX.g:13143:1: ruleTernaryOperation returns [EObject current=null] : ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )? ) | this_InitExpression_6= ruleInitExpression ) ;
    public final EObject ruleTernaryOperation() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject lv_subExpressions_1_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;

        EObject this_InitExpression_6 = null;



        	enterRule();

        try {
            // InternalSCTX.g:13149:2: ( ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )? ) | this_InitExpression_6= ruleInitExpression ) )
            // InternalSCTX.g:13150:2: ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )? ) | this_InitExpression_6= ruleInitExpression )
            {
            // InternalSCTX.g:13150:2: ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )? ) | this_InitExpression_6= ruleInitExpression )
            int alt404=2;
            alt404 = dfa404.predict(input);
            switch (alt404) {
                case 1 :
                    // InternalSCTX.g:13151:3: ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )? )
                    {
                    // InternalSCTX.g:13151:3: ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )? )
                    // InternalSCTX.g:13152:4: () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )?
                    {
                    // InternalSCTX.g:13152:4: ()
                    // InternalSCTX.g:13153:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getTernaryOperationAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCTX.g:13162:4: ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) )
                    // InternalSCTX.g:13163:5: (lv_subExpressions_1_0= ruleAtomicValuedExpression )
                    {
                    // InternalSCTX.g:13163:5: (lv_subExpressions_1_0= ruleAtomicValuedExpression )
                    // InternalSCTX.g:13164:6: lv_subExpressions_1_0= ruleAtomicValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTernaryOperationAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_198);
                    lv_subExpressions_1_0=ruleAtomicValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTernaryOperationRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_1_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.AtomicValuedExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:13181:4: ( (lv_operator_2_0= ruleConditionalOperator ) )
                    // InternalSCTX.g:13182:5: (lv_operator_2_0= ruleConditionalOperator )
                    {
                    // InternalSCTX.g:13182:5: (lv_operator_2_0= ruleConditionalOperator )
                    // InternalSCTX.g:13183:6: lv_operator_2_0= ruleConditionalOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTernaryOperationAccess().getOperatorConditionalOperatorEnumRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_199);
                    lv_operator_2_0=ruleConditionalOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTernaryOperationRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_2_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.ConditionalOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:13200:4: ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) )
                    // InternalSCTX.g:13201:5: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
                    {
                    // InternalSCTX.g:13201:5: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
                    // InternalSCTX.g:13202:6: lv_subExpressions_3_0= ruleAtomicValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTernaryOperationAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_3_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_167);
                    lv_subExpressions_3_0=ruleAtomicValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTernaryOperationRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_3_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.AtomicValuedExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:13219:4: (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )?
                    int alt403=2;
                    alt403 = dfa403.predict(input);
                    switch (alt403) {
                        case 1 :
                            // InternalSCTX.g:13220:5: otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) )
                            {
                            otherlv_4=(Token)match(input,45,FollowSets000.FOLLOW_199); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_4, grammarAccess.getTernaryOperationAccess().getColonKeyword_0_4_0());
                              				
                            }
                            // InternalSCTX.g:13224:5: ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) )
                            // InternalSCTX.g:13225:6: (lv_subExpressions_5_0= ruleAtomicValuedExpression )
                            {
                            // InternalSCTX.g:13225:6: (lv_subExpressions_5_0= ruleAtomicValuedExpression )
                            // InternalSCTX.g:13226:7: lv_subExpressions_5_0= ruleAtomicValuedExpression
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getTernaryOperationAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_4_1_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_subExpressions_5_0=ruleAtomicValuedExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getTernaryOperationRule());
                              							}
                              							add(
                              								current,
                              								"subExpressions",
                              								lv_subExpressions_5_0,
                              								"de.cau.cs.kieler.kexpressions.KExpressions.AtomicValuedExpression");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:13246:3: this_InitExpression_6= ruleInitExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTernaryOperationAccess().getInitExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_InitExpression_6=ruleInitExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_InitExpression_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTernaryOperation"


    // $ANTLR start "entryRuleInitExpression"
    // InternalSCTX.g:13261:1: entryRuleInitExpression returns [EObject current=null] : iv_ruleInitExpression= ruleInitExpression EOF ;
    public final EObject entryRuleInitExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInitExpression = null;


        try {
            // InternalSCTX.g:13261:55: (iv_ruleInitExpression= ruleInitExpression EOF )
            // InternalSCTX.g:13262:2: iv_ruleInitExpression= ruleInitExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInitExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleInitExpression=ruleInitExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInitExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInitExpression"


    // $ANTLR start "ruleInitExpression"
    // InternalSCTX.g:13268:1: ruleInitExpression returns [EObject current=null] : (this_FbyExpression_0= ruleFbyExpression ( () ( ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleFbyExpression ) ) ) (otherlv_4= '->' ( (lv_subExpressions_5_0= ruleFbyExpression ) ) )* )? ) ;
    public final EObject ruleInitExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_FbyExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:13274:2: ( (this_FbyExpression_0= ruleFbyExpression ( () ( ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleFbyExpression ) ) ) (otherlv_4= '->' ( (lv_subExpressions_5_0= ruleFbyExpression ) ) )* )? ) )
            // InternalSCTX.g:13275:2: (this_FbyExpression_0= ruleFbyExpression ( () ( ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleFbyExpression ) ) ) (otherlv_4= '->' ( (lv_subExpressions_5_0= ruleFbyExpression ) ) )* )? )
            {
            // InternalSCTX.g:13275:2: (this_FbyExpression_0= ruleFbyExpression ( () ( ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleFbyExpression ) ) ) (otherlv_4= '->' ( (lv_subExpressions_5_0= ruleFbyExpression ) ) )* )? )
            // InternalSCTX.g:13276:3: this_FbyExpression_0= ruleFbyExpression ( () ( ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleFbyExpression ) ) ) (otherlv_4= '->' ( (lv_subExpressions_5_0= ruleFbyExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getInitExpressionAccess().getFbyExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_200);
            this_FbyExpression_0=ruleFbyExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_FbyExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCTX.g:13287:3: ( () ( ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleFbyExpression ) ) ) (otherlv_4= '->' ( (lv_subExpressions_5_0= ruleFbyExpression ) ) )* )?
            int alt406=2;
            int LA406_0 = input.LA(1);

            if ( (LA406_0==95) ) {
                alt406=1;
            }
            switch (alt406) {
                case 1 :
                    // InternalSCTX.g:13288:4: () ( ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleFbyExpression ) ) ) (otherlv_4= '->' ( (lv_subExpressions_5_0= ruleFbyExpression ) ) )*
                    {
                    // InternalSCTX.g:13288:4: ()
                    // InternalSCTX.g:13289:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getInitExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCTX.g:13298:4: ( ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleFbyExpression ) ) )
                    // InternalSCTX.g:13299:5: ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleFbyExpression ) )
                    {
                    // InternalSCTX.g:13299:5: ( (lv_operator_2_0= ruleInitOperator ) )
                    // InternalSCTX.g:13300:6: (lv_operator_2_0= ruleInitOperator )
                    {
                    // InternalSCTX.g:13300:6: (lv_operator_2_0= ruleInitOperator )
                    // InternalSCTX.g:13301:7: lv_operator_2_0= ruleInitOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getInitExpressionAccess().getOperatorInitOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_104);
                    lv_operator_2_0=ruleInitOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getInitExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.InitOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:13318:5: ( (lv_subExpressions_3_0= ruleFbyExpression ) )
                    // InternalSCTX.g:13319:6: (lv_subExpressions_3_0= ruleFbyExpression )
                    {
                    // InternalSCTX.g:13319:6: (lv_subExpressions_3_0= ruleFbyExpression )
                    // InternalSCTX.g:13320:7: lv_subExpressions_3_0= ruleFbyExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getInitExpressionAccess().getSubExpressionsFbyExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_200);
                    lv_subExpressions_3_0=ruleFbyExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getInitExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.FbyExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalSCTX.g:13338:4: (otherlv_4= '->' ( (lv_subExpressions_5_0= ruleFbyExpression ) ) )*
                    loop405:
                    do {
                        int alt405=2;
                        int LA405_0 = input.LA(1);

                        if ( (LA405_0==95) ) {
                            alt405=1;
                        }


                        switch (alt405) {
                    	case 1 :
                    	    // InternalSCTX.g:13339:5: otherlv_4= '->' ( (lv_subExpressions_5_0= ruleFbyExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,95,FollowSets000.FOLLOW_104); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getInitExpressionAccess().getHyphenMinusGreaterThanSignKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:13343:5: ( (lv_subExpressions_5_0= ruleFbyExpression ) )
                    	    // InternalSCTX.g:13344:6: (lv_subExpressions_5_0= ruleFbyExpression )
                    	    {
                    	    // InternalSCTX.g:13344:6: (lv_subExpressions_5_0= ruleFbyExpression )
                    	    // InternalSCTX.g:13345:7: lv_subExpressions_5_0= ruleFbyExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getInitExpressionAccess().getSubExpressionsFbyExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_200);
                    	    lv_subExpressions_5_0=ruleFbyExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getInitExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.FbyExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop405;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInitExpression"


    // $ANTLR start "entryRuleFbyExpression"
    // InternalSCTX.g:13368:1: entryRuleFbyExpression returns [EObject current=null] : iv_ruleFbyExpression= ruleFbyExpression EOF ;
    public final EObject entryRuleFbyExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFbyExpression = null;


        try {
            // InternalSCTX.g:13368:54: (iv_ruleFbyExpression= ruleFbyExpression EOF )
            // InternalSCTX.g:13369:2: iv_ruleFbyExpression= ruleFbyExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFbyExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFbyExpression=ruleFbyExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFbyExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFbyExpression"


    // $ANTLR start "ruleFbyExpression"
    // InternalSCTX.g:13375:1: ruleFbyExpression returns [EObject current=null] : (this_SfbyExpression_0= ruleSfbyExpression ( () ( ( (lv_operator_2_0= ruleFbyOperator ) ) ( (lv_subExpressions_3_0= ruleSfbyExpression ) ) ) (otherlv_4= 'fby' ( (lv_subExpressions_5_0= ruleSfbyExpression ) ) )* )? ) ;
    public final EObject ruleFbyExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_SfbyExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:13381:2: ( (this_SfbyExpression_0= ruleSfbyExpression ( () ( ( (lv_operator_2_0= ruleFbyOperator ) ) ( (lv_subExpressions_3_0= ruleSfbyExpression ) ) ) (otherlv_4= 'fby' ( (lv_subExpressions_5_0= ruleSfbyExpression ) ) )* )? ) )
            // InternalSCTX.g:13382:2: (this_SfbyExpression_0= ruleSfbyExpression ( () ( ( (lv_operator_2_0= ruleFbyOperator ) ) ( (lv_subExpressions_3_0= ruleSfbyExpression ) ) ) (otherlv_4= 'fby' ( (lv_subExpressions_5_0= ruleSfbyExpression ) ) )* )? )
            {
            // InternalSCTX.g:13382:2: (this_SfbyExpression_0= ruleSfbyExpression ( () ( ( (lv_operator_2_0= ruleFbyOperator ) ) ( (lv_subExpressions_3_0= ruleSfbyExpression ) ) ) (otherlv_4= 'fby' ( (lv_subExpressions_5_0= ruleSfbyExpression ) ) )* )? )
            // InternalSCTX.g:13383:3: this_SfbyExpression_0= ruleSfbyExpression ( () ( ( (lv_operator_2_0= ruleFbyOperator ) ) ( (lv_subExpressions_3_0= ruleSfbyExpression ) ) ) (otherlv_4= 'fby' ( (lv_subExpressions_5_0= ruleSfbyExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getFbyExpressionAccess().getSfbyExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_201);
            this_SfbyExpression_0=ruleSfbyExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_SfbyExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCTX.g:13394:3: ( () ( ( (lv_operator_2_0= ruleFbyOperator ) ) ( (lv_subExpressions_3_0= ruleSfbyExpression ) ) ) (otherlv_4= 'fby' ( (lv_subExpressions_5_0= ruleSfbyExpression ) ) )* )?
            int alt408=2;
            int LA408_0 = input.LA(1);

            if ( (LA408_0==96) ) {
                alt408=1;
            }
            switch (alt408) {
                case 1 :
                    // InternalSCTX.g:13395:4: () ( ( (lv_operator_2_0= ruleFbyOperator ) ) ( (lv_subExpressions_3_0= ruleSfbyExpression ) ) ) (otherlv_4= 'fby' ( (lv_subExpressions_5_0= ruleSfbyExpression ) ) )*
                    {
                    // InternalSCTX.g:13395:4: ()
                    // InternalSCTX.g:13396:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getFbyExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCTX.g:13405:4: ( ( (lv_operator_2_0= ruleFbyOperator ) ) ( (lv_subExpressions_3_0= ruleSfbyExpression ) ) )
                    // InternalSCTX.g:13406:5: ( (lv_operator_2_0= ruleFbyOperator ) ) ( (lv_subExpressions_3_0= ruleSfbyExpression ) )
                    {
                    // InternalSCTX.g:13406:5: ( (lv_operator_2_0= ruleFbyOperator ) )
                    // InternalSCTX.g:13407:6: (lv_operator_2_0= ruleFbyOperator )
                    {
                    // InternalSCTX.g:13407:6: (lv_operator_2_0= ruleFbyOperator )
                    // InternalSCTX.g:13408:7: lv_operator_2_0= ruleFbyOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getFbyExpressionAccess().getOperatorFbyOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_104);
                    lv_operator_2_0=ruleFbyOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getFbyExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.FbyOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:13425:5: ( (lv_subExpressions_3_0= ruleSfbyExpression ) )
                    // InternalSCTX.g:13426:6: (lv_subExpressions_3_0= ruleSfbyExpression )
                    {
                    // InternalSCTX.g:13426:6: (lv_subExpressions_3_0= ruleSfbyExpression )
                    // InternalSCTX.g:13427:7: lv_subExpressions_3_0= ruleSfbyExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getFbyExpressionAccess().getSubExpressionsSfbyExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_201);
                    lv_subExpressions_3_0=ruleSfbyExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getFbyExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.SfbyExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalSCTX.g:13445:4: (otherlv_4= 'fby' ( (lv_subExpressions_5_0= ruleSfbyExpression ) ) )*
                    loop407:
                    do {
                        int alt407=2;
                        int LA407_0 = input.LA(1);

                        if ( (LA407_0==96) ) {
                            alt407=1;
                        }


                        switch (alt407) {
                    	case 1 :
                    	    // InternalSCTX.g:13446:5: otherlv_4= 'fby' ( (lv_subExpressions_5_0= ruleSfbyExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,96,FollowSets000.FOLLOW_104); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getFbyExpressionAccess().getFbyKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:13450:5: ( (lv_subExpressions_5_0= ruleSfbyExpression ) )
                    	    // InternalSCTX.g:13451:6: (lv_subExpressions_5_0= ruleSfbyExpression )
                    	    {
                    	    // InternalSCTX.g:13451:6: (lv_subExpressions_5_0= ruleSfbyExpression )
                    	    // InternalSCTX.g:13452:7: lv_subExpressions_5_0= ruleSfbyExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getFbyExpressionAccess().getSubExpressionsSfbyExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_201);
                    	    lv_subExpressions_5_0=ruleSfbyExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getFbyExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.SfbyExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop407;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFbyExpression"


    // $ANTLR start "entryRuleSfbyExpression"
    // InternalSCTX.g:13475:1: entryRuleSfbyExpression returns [EObject current=null] : iv_ruleSfbyExpression= ruleSfbyExpression EOF ;
    public final EObject entryRuleSfbyExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSfbyExpression = null;


        try {
            // InternalSCTX.g:13475:55: (iv_ruleSfbyExpression= ruleSfbyExpression EOF )
            // InternalSCTX.g:13476:2: iv_ruleSfbyExpression= ruleSfbyExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSfbyExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSfbyExpression=ruleSfbyExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSfbyExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSfbyExpression"


    // $ANTLR start "ruleSfbyExpression"
    // InternalSCTX.g:13482:1: ruleSfbyExpression returns [EObject current=null] : (this_AtomicValuedExpression_0= ruleAtomicValuedExpression ( () ( ( (lv_operator_2_0= ruleSfbyOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) (otherlv_4= 'sfby' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )* )? ) ;
    public final EObject ruleSfbyExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_AtomicValuedExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:13488:2: ( (this_AtomicValuedExpression_0= ruleAtomicValuedExpression ( () ( ( (lv_operator_2_0= ruleSfbyOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) (otherlv_4= 'sfby' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )* )? ) )
            // InternalSCTX.g:13489:2: (this_AtomicValuedExpression_0= ruleAtomicValuedExpression ( () ( ( (lv_operator_2_0= ruleSfbyOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) (otherlv_4= 'sfby' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )* )? )
            {
            // InternalSCTX.g:13489:2: (this_AtomicValuedExpression_0= ruleAtomicValuedExpression ( () ( ( (lv_operator_2_0= ruleSfbyOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) (otherlv_4= 'sfby' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )* )? )
            // InternalSCTX.g:13490:3: this_AtomicValuedExpression_0= ruleAtomicValuedExpression ( () ( ( (lv_operator_2_0= ruleSfbyOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) (otherlv_4= 'sfby' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getSfbyExpressionAccess().getAtomicValuedExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_202);
            this_AtomicValuedExpression_0=ruleAtomicValuedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AtomicValuedExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCTX.g:13501:3: ( () ( ( (lv_operator_2_0= ruleSfbyOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) (otherlv_4= 'sfby' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )* )?
            int alt410=2;
            int LA410_0 = input.LA(1);

            if ( (LA410_0==97) ) {
                alt410=1;
            }
            switch (alt410) {
                case 1 :
                    // InternalSCTX.g:13502:4: () ( ( (lv_operator_2_0= ruleSfbyOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) (otherlv_4= 'sfby' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )*
                    {
                    // InternalSCTX.g:13502:4: ()
                    // InternalSCTX.g:13503:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getSfbyExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCTX.g:13512:4: ( ( (lv_operator_2_0= ruleSfbyOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) )
                    // InternalSCTX.g:13513:5: ( (lv_operator_2_0= ruleSfbyOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) )
                    {
                    // InternalSCTX.g:13513:5: ( (lv_operator_2_0= ruleSfbyOperator ) )
                    // InternalSCTX.g:13514:6: (lv_operator_2_0= ruleSfbyOperator )
                    {
                    // InternalSCTX.g:13514:6: (lv_operator_2_0= ruleSfbyOperator )
                    // InternalSCTX.g:13515:7: lv_operator_2_0= ruleSfbyOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSfbyExpressionAccess().getOperatorSfbyOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_199);
                    lv_operator_2_0=ruleSfbyOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSfbyExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.SfbyOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:13532:5: ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) )
                    // InternalSCTX.g:13533:6: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
                    {
                    // InternalSCTX.g:13533:6: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
                    // InternalSCTX.g:13534:7: lv_subExpressions_3_0= ruleAtomicValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSfbyExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_202);
                    lv_subExpressions_3_0=ruleAtomicValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSfbyExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.AtomicValuedExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalSCTX.g:13552:4: (otherlv_4= 'sfby' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )*
                    loop409:
                    do {
                        int alt409=2;
                        int LA409_0 = input.LA(1);

                        if ( (LA409_0==97) ) {
                            alt409=1;
                        }


                        switch (alt409) {
                    	case 1 :
                    	    // InternalSCTX.g:13553:5: otherlv_4= 'sfby' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,97,FollowSets000.FOLLOW_199); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getSfbyExpressionAccess().getSfbyKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:13557:5: ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) )
                    	    // InternalSCTX.g:13558:6: (lv_subExpressions_5_0= ruleAtomicValuedExpression )
                    	    {
                    	    // InternalSCTX.g:13558:6: (lv_subExpressions_5_0= ruleAtomicValuedExpression )
                    	    // InternalSCTX.g:13559:7: lv_subExpressions_5_0= ruleAtomicValuedExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getSfbyExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_202);
                    	    lv_subExpressions_5_0=ruleAtomicValuedExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getSfbyExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.AtomicValuedExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop409;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSfbyExpression"


    // $ANTLR start "entryRuleAtomicExpression"
    // InternalSCTX.g:13582:1: entryRuleAtomicExpression returns [EObject current=null] : iv_ruleAtomicExpression= ruleAtomicExpression EOF ;
    public final EObject entryRuleAtomicExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAtomicExpression = null;


        try {
            // InternalSCTX.g:13582:57: (iv_ruleAtomicExpression= ruleAtomicExpression EOF )
            // InternalSCTX.g:13583:2: iv_ruleAtomicExpression= ruleAtomicExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAtomicExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAtomicExpression=ruleAtomicExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAtomicExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAtomicExpression"


    // $ANTLR start "ruleAtomicExpression"
    // InternalSCTX.g:13589:1: ruleAtomicExpression returns [EObject current=null] : (this_BoolValue_0= ruleBoolValue | (otherlv_1= '(' this_BoolExpression_2= ruleBoolExpression otherlv_3= ')' ) | this_ReferenceCall_4= ruleReferenceCall | this_FunctionCall_5= ruleFunctionCall | this_RandomCall_6= ruleRandomCall | this_RandomizeCall_7= ruleRandomizeCall | this_ValuedObjectTestExpression_8= ruleValuedObjectTestExpression | this_TextExpression_9= ruleTextExpression ) ;
    public final EObject ruleAtomicExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject this_BoolValue_0 = null;

        EObject this_BoolExpression_2 = null;

        EObject this_ReferenceCall_4 = null;

        EObject this_FunctionCall_5 = null;

        EObject this_RandomCall_6 = null;

        EObject this_RandomizeCall_7 = null;

        EObject this_ValuedObjectTestExpression_8 = null;

        EObject this_TextExpression_9 = null;



        	enterRule();

        try {
            // InternalSCTX.g:13595:2: ( (this_BoolValue_0= ruleBoolValue | (otherlv_1= '(' this_BoolExpression_2= ruleBoolExpression otherlv_3= ')' ) | this_ReferenceCall_4= ruleReferenceCall | this_FunctionCall_5= ruleFunctionCall | this_RandomCall_6= ruleRandomCall | this_RandomizeCall_7= ruleRandomizeCall | this_ValuedObjectTestExpression_8= ruleValuedObjectTestExpression | this_TextExpression_9= ruleTextExpression ) )
            // InternalSCTX.g:13596:2: (this_BoolValue_0= ruleBoolValue | (otherlv_1= '(' this_BoolExpression_2= ruleBoolExpression otherlv_3= ')' ) | this_ReferenceCall_4= ruleReferenceCall | this_FunctionCall_5= ruleFunctionCall | this_RandomCall_6= ruleRandomCall | this_RandomizeCall_7= ruleRandomizeCall | this_ValuedObjectTestExpression_8= ruleValuedObjectTestExpression | this_TextExpression_9= ruleTextExpression )
            {
            // InternalSCTX.g:13596:2: (this_BoolValue_0= ruleBoolValue | (otherlv_1= '(' this_BoolExpression_2= ruleBoolExpression otherlv_3= ')' ) | this_ReferenceCall_4= ruleReferenceCall | this_FunctionCall_5= ruleFunctionCall | this_RandomCall_6= ruleRandomCall | this_RandomizeCall_7= ruleRandomizeCall | this_ValuedObjectTestExpression_8= ruleValuedObjectTestExpression | this_TextExpression_9= ruleTextExpression )
            int alt411=8;
            alt411 = dfa411.predict(input);
            switch (alt411) {
                case 1 :
                    // InternalSCTX.g:13597:3: this_BoolValue_0= ruleBoolValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicExpressionAccess().getBoolValueParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_BoolValue_0=ruleBoolValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BoolValue_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:13609:3: (otherlv_1= '(' this_BoolExpression_2= ruleBoolExpression otherlv_3= ')' )
                    {
                    // InternalSCTX.g:13609:3: (otherlv_1= '(' this_BoolExpression_2= ruleBoolExpression otherlv_3= ')' )
                    // InternalSCTX.g:13610:4: otherlv_1= '(' this_BoolExpression_2= ruleBoolExpression otherlv_3= ')'
                    {
                    otherlv_1=(Token)match(input,31,FollowSets000.FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getAtomicExpressionAccess().getLeftParenthesisKeyword_1_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getAtomicExpressionAccess().getBoolExpressionParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_32);
                    this_BoolExpression_2=ruleBoolExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_BoolExpression_2;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_3=(Token)match(input,32,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getAtomicExpressionAccess().getRightParenthesisKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSCTX.g:13631:3: this_ReferenceCall_4= ruleReferenceCall
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicExpressionAccess().getReferenceCallParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ReferenceCall_4=ruleReferenceCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ReferenceCall_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSCTX.g:13643:3: this_FunctionCall_5= ruleFunctionCall
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicExpressionAccess().getFunctionCallParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_FunctionCall_5=ruleFunctionCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FunctionCall_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalSCTX.g:13655:3: this_RandomCall_6= ruleRandomCall
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicExpressionAccess().getRandomCallParserRuleCall_4());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_RandomCall_6=ruleRandomCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_RandomCall_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalSCTX.g:13667:3: this_RandomizeCall_7= ruleRandomizeCall
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicExpressionAccess().getRandomizeCallParserRuleCall_5());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_RandomizeCall_7=ruleRandomizeCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_RandomizeCall_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalSCTX.g:13679:3: this_ValuedObjectTestExpression_8= ruleValuedObjectTestExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicExpressionAccess().getValuedObjectTestExpressionParserRuleCall_6());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedObjectTestExpression_8=ruleValuedObjectTestExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ValuedObjectTestExpression_8;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalSCTX.g:13691:3: this_TextExpression_9= ruleTextExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicExpressionAccess().getTextExpressionParserRuleCall_7());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TextExpression_9=ruleTextExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TextExpression_9;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAtomicExpression"


    // $ANTLR start "entryRuleAtomicValuedExpression"
    // InternalSCTX.g:13706:1: entryRuleAtomicValuedExpression returns [EObject current=null] : iv_ruleAtomicValuedExpression= ruleAtomicValuedExpression EOF ;
    public final EObject entryRuleAtomicValuedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAtomicValuedExpression = null;


        try {
            // InternalSCTX.g:13706:63: (iv_ruleAtomicValuedExpression= ruleAtomicValuedExpression EOF )
            // InternalSCTX.g:13707:2: iv_ruleAtomicValuedExpression= ruleAtomicValuedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAtomicValuedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAtomicValuedExpression=ruleAtomicValuedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAtomicValuedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAtomicValuedExpression"


    // $ANTLR start "ruleAtomicValuedExpression"
    // InternalSCTX.g:13713:1: ruleAtomicValuedExpression returns [EObject current=null] : (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_StringValue_2= ruleStringValue | this_VectorValue_3= ruleVectorValue | (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' ) | this_AtomicExpression_7= ruleAtomicExpression ) ;
    public final EObject ruleAtomicValuedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject this_IntValue_0 = null;

        EObject this_FloatValue_1 = null;

        EObject this_StringValue_2 = null;

        EObject this_VectorValue_3 = null;

        EObject this_ValuedExpression_5 = null;

        EObject this_AtomicExpression_7 = null;



        	enterRule();

        try {
            // InternalSCTX.g:13719:2: ( (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_StringValue_2= ruleStringValue | this_VectorValue_3= ruleVectorValue | (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' ) | this_AtomicExpression_7= ruleAtomicExpression ) )
            // InternalSCTX.g:13720:2: (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_StringValue_2= ruleStringValue | this_VectorValue_3= ruleVectorValue | (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' ) | this_AtomicExpression_7= ruleAtomicExpression )
            {
            // InternalSCTX.g:13720:2: (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_StringValue_2= ruleStringValue | this_VectorValue_3= ruleVectorValue | (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' ) | this_AtomicExpression_7= ruleAtomicExpression )
            int alt412=6;
            alt412 = dfa412.predict(input);
            switch (alt412) {
                case 1 :
                    // InternalSCTX.g:13721:3: this_IntValue_0= ruleIntValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getIntValueParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_IntValue_0=ruleIntValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_IntValue_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:13733:3: this_FloatValue_1= ruleFloatValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getFloatValueParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_FloatValue_1=ruleFloatValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FloatValue_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:13745:3: this_StringValue_2= ruleStringValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getStringValueParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_StringValue_2=ruleStringValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_StringValue_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSCTX.g:13757:3: this_VectorValue_3= ruleVectorValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getVectorValueParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_VectorValue_3=ruleVectorValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_VectorValue_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalSCTX.g:13769:3: (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' )
                    {
                    // InternalSCTX.g:13769:3: (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' )
                    // InternalSCTX.g:13770:4: otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')'
                    {
                    otherlv_4=(Token)match(input,31,FollowSets000.FOLLOW_104); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getAtomicValuedExpressionAccess().getLeftParenthesisKeyword_4_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getValuedExpressionParserRuleCall_4_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_32);
                    this_ValuedExpression_5=ruleValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ValuedExpression_5;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_6=(Token)match(input,32,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getAtomicValuedExpressionAccess().getRightParenthesisKeyword_4_2());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSCTX.g:13791:3: this_AtomicExpression_7= ruleAtomicExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getAtomicExpressionParserRuleCall_5());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AtomicExpression_7=ruleAtomicExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AtomicExpression_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAtomicValuedExpression"


    // $ANTLR start "entryRuleBoolScheduleExpression"
    // InternalSCTX.g:13806:1: entryRuleBoolScheduleExpression returns [EObject current=null] : iv_ruleBoolScheduleExpression= ruleBoolScheduleExpression EOF ;
    public final EObject entryRuleBoolScheduleExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBoolScheduleExpression = null;


        try {
            // InternalSCTX.g:13806:63: (iv_ruleBoolScheduleExpression= ruleBoolScheduleExpression EOF )
            // InternalSCTX.g:13807:2: iv_ruleBoolScheduleExpression= ruleBoolScheduleExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBoolScheduleExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBoolScheduleExpression=ruleBoolScheduleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBoolScheduleExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBoolScheduleExpression"


    // $ANTLR start "ruleBoolScheduleExpression"
    // InternalSCTX.g:13813:1: ruleBoolScheduleExpression returns [EObject current=null] : (this_LogicalOrExpression_0= ruleLogicalOrExpression (otherlv_1= 'schedule' ( (lv_schedule_2_0= ruleScheduleObjectReference ) ) )? ) ;
    public final EObject ruleBoolScheduleExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_LogicalOrExpression_0 = null;

        EObject lv_schedule_2_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:13819:2: ( (this_LogicalOrExpression_0= ruleLogicalOrExpression (otherlv_1= 'schedule' ( (lv_schedule_2_0= ruleScheduleObjectReference ) ) )? ) )
            // InternalSCTX.g:13820:2: (this_LogicalOrExpression_0= ruleLogicalOrExpression (otherlv_1= 'schedule' ( (lv_schedule_2_0= ruleScheduleObjectReference ) ) )? )
            {
            // InternalSCTX.g:13820:2: (this_LogicalOrExpression_0= ruleLogicalOrExpression (otherlv_1= 'schedule' ( (lv_schedule_2_0= ruleScheduleObjectReference ) ) )? )
            // InternalSCTX.g:13821:3: this_LogicalOrExpression_0= ruleLogicalOrExpression (otherlv_1= 'schedule' ( (lv_schedule_2_0= ruleScheduleObjectReference ) ) )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getBoolScheduleExpressionAccess().getLogicalOrExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_59);
            this_LogicalOrExpression_0=ruleLogicalOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_LogicalOrExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCTX.g:13832:3: (otherlv_1= 'schedule' ( (lv_schedule_2_0= ruleScheduleObjectReference ) ) )?
            int alt413=2;
            int LA413_0 = input.LA(1);

            if ( (LA413_0==29) ) {
                alt413=1;
            }
            switch (alt413) {
                case 1 :
                    // InternalSCTX.g:13833:4: otherlv_1= 'schedule' ( (lv_schedule_2_0= ruleScheduleObjectReference ) )
                    {
                    otherlv_1=(Token)match(input,29,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getBoolScheduleExpressionAccess().getScheduleKeyword_1_0());
                      			
                    }
                    // InternalSCTX.g:13837:4: ( (lv_schedule_2_0= ruleScheduleObjectReference ) )
                    // InternalSCTX.g:13838:5: (lv_schedule_2_0= ruleScheduleObjectReference )
                    {
                    // InternalSCTX.g:13838:5: (lv_schedule_2_0= ruleScheduleObjectReference )
                    // InternalSCTX.g:13839:6: lv_schedule_2_0= ruleScheduleObjectReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getBoolScheduleExpressionAccess().getScheduleScheduleObjectReferenceParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_schedule_2_0=ruleScheduleObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getBoolScheduleExpressionRule());
                      						}
                      						add(
                      							current,
                      							"schedule",
                      							lv_schedule_2_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBoolScheduleExpression"


    // $ANTLR start "entryRuleValuedObjectTestExpression"
    // InternalSCTX.g:13861:1: entryRuleValuedObjectTestExpression returns [EObject current=null] : iv_ruleValuedObjectTestExpression= ruleValuedObjectTestExpression EOF ;
    public final EObject entryRuleValuedObjectTestExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValuedObjectTestExpression = null;


        try {
            // InternalSCTX.g:13861:67: (iv_ruleValuedObjectTestExpression= ruleValuedObjectTestExpression EOF )
            // InternalSCTX.g:13862:2: iv_ruleValuedObjectTestExpression= ruleValuedObjectTestExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValuedObjectTestExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleValuedObjectTestExpression=ruleValuedObjectTestExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValuedObjectTestExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValuedObjectTestExpression"


    // $ANTLR start "ruleValuedObjectTestExpression"
    // InternalSCTX.g:13868:1: ruleValuedObjectTestExpression returns [EObject current=null] : ( ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleValuedObjectReference ) ) )? otherlv_6= ')' ) | this_ValuedObjectReference_7= ruleValuedObjectReference ) ;
    public final EObject ruleValuedObjectTestExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Enumerator lv_operator_1_1 = null;

        Enumerator lv_operator_1_2 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;

        EObject this_ValuedObjectReference_7 = null;



        	enterRule();

        try {
            // InternalSCTX.g:13874:2: ( ( ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleValuedObjectReference ) ) )? otherlv_6= ')' ) | this_ValuedObjectReference_7= ruleValuedObjectReference ) )
            // InternalSCTX.g:13875:2: ( ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleValuedObjectReference ) ) )? otherlv_6= ')' ) | this_ValuedObjectReference_7= ruleValuedObjectReference )
            {
            // InternalSCTX.g:13875:2: ( ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleValuedObjectReference ) ) )? otherlv_6= ')' ) | this_ValuedObjectReference_7= ruleValuedObjectReference )
            int alt416=2;
            int LA416_0 = input.LA(1);

            if ( (LA416_0==145||LA416_0==148) ) {
                alt416=1;
            }
            else if ( (LA416_0==RULE_ID) ) {
                alt416=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 416, 0, input);

                throw nvae;
            }
            switch (alt416) {
                case 1 :
                    // InternalSCTX.g:13876:3: ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleValuedObjectReference ) ) )? otherlv_6= ')' )
                    {
                    // InternalSCTX.g:13876:3: ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleValuedObjectReference ) ) )? otherlv_6= ')' )
                    // InternalSCTX.g:13877:4: () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleValuedObjectReference ) ) )? otherlv_6= ')'
                    {
                    // InternalSCTX.g:13877:4: ()
                    // InternalSCTX.g:13878:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getValuedObjectTestExpressionAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCTX.g:13887:4: ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) )
                    // InternalSCTX.g:13888:5: ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) )
                    {
                    // InternalSCTX.g:13888:5: ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) )
                    // InternalSCTX.g:13889:6: (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator )
                    {
                    // InternalSCTX.g:13889:6: (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator )
                    int alt414=2;
                    int LA414_0 = input.LA(1);

                    if ( (LA414_0==145) ) {
                        alt414=1;
                    }
                    else if ( (LA414_0==148) ) {
                        alt414=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 414, 0, input);

                        throw nvae;
                    }
                    switch (alt414) {
                        case 1 :
                            // InternalSCTX.g:13890:7: lv_operator_1_1= rulePreOperator
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorPreOperatorEnumRuleCall_0_1_0_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_149);
                            lv_operator_1_1=rulePreOperator();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getValuedObjectTestExpressionRule());
                              							}
                              							set(
                              								current,
                              								"operator",
                              								lv_operator_1_1,
                              								"de.cau.cs.kieler.kexpressions.KExpressions.PreOperator");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalSCTX.g:13906:7: lv_operator_1_2= ruleValOperator
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorValOperatorEnumRuleCall_0_1_0_1());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_149);
                            lv_operator_1_2=ruleValOperator();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getValuedObjectTestExpressionRule());
                              							}
                              							set(
                              								current,
                              								"operator",
                              								lv_operator_1_2,
                              								"de.cau.cs.kieler.kexpressions.KExpressions.ValOperator");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;

                    }


                    }


                    }

                    otherlv_2=(Token)match(input,31,FollowSets000.FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getValuedObjectTestExpressionAccess().getLeftParenthesisKeyword_0_2());
                      			
                    }
                    // InternalSCTX.g:13928:4: ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) )
                    // InternalSCTX.g:13929:5: (lv_subExpressions_3_0= ruleValuedObjectTestExpression )
                    {
                    // InternalSCTX.g:13929:5: (lv_subExpressions_3_0= ruleValuedObjectTestExpression )
                    // InternalSCTX.g:13930:6: lv_subExpressions_3_0= ruleValuedObjectTestExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsValuedObjectTestExpressionParserRuleCall_0_3_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_31);
                    lv_subExpressions_3_0=ruleValuedObjectTestExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getValuedObjectTestExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_3_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectTestExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:13947:4: (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleValuedObjectReference ) ) )?
                    int alt415=2;
                    int LA415_0 = input.LA(1);

                    if ( (LA415_0==20) ) {
                        alt415=1;
                    }
                    switch (alt415) {
                        case 1 :
                            // InternalSCTX.g:13948:5: otherlv_4= ',' ( (lv_subExpressions_5_0= ruleValuedObjectReference ) )
                            {
                            otherlv_4=(Token)match(input,20,FollowSets000.FOLLOW_33); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_4, grammarAccess.getValuedObjectTestExpressionAccess().getCommaKeyword_0_4_0());
                              				
                            }
                            // InternalSCTX.g:13952:5: ( (lv_subExpressions_5_0= ruleValuedObjectReference ) )
                            // InternalSCTX.g:13953:6: (lv_subExpressions_5_0= ruleValuedObjectReference )
                            {
                            // InternalSCTX.g:13953:6: (lv_subExpressions_5_0= ruleValuedObjectReference )
                            // InternalSCTX.g:13954:7: lv_subExpressions_5_0= ruleValuedObjectReference
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsValuedObjectReferenceParserRuleCall_0_4_1_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_32);
                            lv_subExpressions_5_0=ruleValuedObjectReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getValuedObjectTestExpressionRule());
                              							}
                              							add(
                              								current,
                              								"subExpressions",
                              								lv_subExpressions_5_0,
                              								"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    otherlv_6=(Token)match(input,32,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getValuedObjectTestExpressionAccess().getRightParenthesisKeyword_0_5());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:13978:3: this_ValuedObjectReference_7= ruleValuedObjectReference
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getValuedObjectTestExpressionAccess().getValuedObjectReferenceParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedObjectReference_7=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ValuedObjectReference_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValuedObjectTestExpression"


    // $ANTLR start "entryRulePrimeID"
    // InternalSCTX.g:13993:1: entryRulePrimeID returns [String current=null] : iv_rulePrimeID= rulePrimeID EOF ;
    public final String entryRulePrimeID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePrimeID = null;


        try {
            // InternalSCTX.g:13993:47: (iv_rulePrimeID= rulePrimeID EOF )
            // InternalSCTX.g:13994:2: iv_rulePrimeID= rulePrimeID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimeIDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePrimeID=rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimeID.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrimeID"


    // $ANTLR start "rulePrimeID"
    // InternalSCTX.g:14000:1: rulePrimeID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ID_0= RULE_ID (kw= '\\'' )* ) ;
    public final AntlrDatatypeRuleToken rulePrimeID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;
        Token kw=null;


        	enterRule();

        try {
            // InternalSCTX.g:14006:2: ( (this_ID_0= RULE_ID (kw= '\\'' )* ) )
            // InternalSCTX.g:14007:2: (this_ID_0= RULE_ID (kw= '\\'' )* )
            {
            // InternalSCTX.g:14007:2: (this_ID_0= RULE_ID (kw= '\\'' )* )
            // InternalSCTX.g:14008:3: this_ID_0= RULE_ID (kw= '\\'' )*
            {
            this_ID_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_203); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_ID_0);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_ID_0, grammarAccess.getPrimeIDAccess().getIDTerminalRuleCall_0());
              		
            }
            // InternalSCTX.g:14015:3: (kw= '\\'' )*
            loop417:
            do {
                int alt417=2;
                int LA417_0 = input.LA(1);

                if ( (LA417_0==98) ) {
                    alt417=1;
                }


                switch (alt417) {
            	case 1 :
            	    // InternalSCTX.g:14016:4: kw= '\\''
            	    {
            	    kw=(Token)match(input,98,FollowSets000.FOLLOW_203); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(kw);
            	      				newLeafNode(kw, grammarAccess.getPrimeIDAccess().getApostropheKeyword_1());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop417;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrimeID"


    // $ANTLR start "entryRuleValuedObjectReference"
    // InternalSCTX.g:14026:1: entryRuleValuedObjectReference returns [EObject current=null] : iv_ruleValuedObjectReference= ruleValuedObjectReference EOF ;
    public final EObject entryRuleValuedObjectReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValuedObjectReference = null;


        try {
            // InternalSCTX.g:14026:62: (iv_ruleValuedObjectReference= ruleValuedObjectReference EOF )
            // InternalSCTX.g:14027:2: iv_ruleValuedObjectReference= ruleValuedObjectReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValuedObjectReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleValuedObjectReference=ruleValuedObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValuedObjectReference; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValuedObjectReference"


    // $ANTLR start "ruleValuedObjectReference"
    // InternalSCTX.g:14033:1: ruleValuedObjectReference returns [EObject current=null] : ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? ) ;
    public final EObject ruleValuedObjectReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_indices_2_0 = null;

        EObject lv_subReference_5_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:14039:2: ( ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? ) )
            // InternalSCTX.g:14040:2: ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? )
            {
            // InternalSCTX.g:14040:2: ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? )
            // InternalSCTX.g:14041:3: ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )?
            {
            // InternalSCTX.g:14041:3: ( ( rulePrimeID ) )
            // InternalSCTX.g:14042:4: ( rulePrimeID )
            {
            // InternalSCTX.g:14042:4: ( rulePrimeID )
            // InternalSCTX.g:14043:5: rulePrimeID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getValuedObjectReferenceRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getValuedObjectReferenceAccess().getValuedObjectValuedObjectCrossReference_0_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_204);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:14060:3: (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )*
            loop418:
            do {
                int alt418=2;
                int LA418_0 = input.LA(1);

                if ( (LA418_0==34) ) {
                    alt418=1;
                }


                switch (alt418) {
            	case 1 :
            	    // InternalSCTX.g:14061:4: otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']'
            	    {
            	    otherlv_1=(Token)match(input,34,FollowSets000.FOLLOW_30); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getValuedObjectReferenceAccess().getLeftSquareBracketKeyword_1_0());
            	      			
            	    }
            	    // InternalSCTX.g:14065:4: ( (lv_indices_2_0= ruleExpression ) )
            	    // InternalSCTX.g:14066:5: (lv_indices_2_0= ruleExpression )
            	    {
            	    // InternalSCTX.g:14066:5: (lv_indices_2_0= ruleExpression )
            	    // InternalSCTX.g:14067:6: lv_indices_2_0= ruleExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getValuedObjectReferenceAccess().getIndicesExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_36);
            	    lv_indices_2_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getValuedObjectReferenceRule());
            	      						}
            	      						add(
            	      							current,
            	      							"indices",
            	      							lv_indices_2_0,
            	      							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_3=(Token)match(input,35,FollowSets000.FOLLOW_204); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getValuedObjectReferenceAccess().getRightSquareBracketKeyword_1_2());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop418;
                }
            } while (true);

            // InternalSCTX.g:14089:3: (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )?
            int alt419=2;
            int LA419_0 = input.LA(1);

            if ( (LA419_0==79) ) {
                alt419=1;
            }
            switch (alt419) {
                case 1 :
                    // InternalSCTX.g:14090:4: otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) )
                    {
                    otherlv_4=(Token)match(input,79,FollowSets000.FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getValuedObjectReferenceAccess().getFullStopKeyword_2_0());
                      			
                    }
                    // InternalSCTX.g:14094:4: ( (lv_subReference_5_0= ruleValuedObjectReference ) )
                    // InternalSCTX.g:14095:5: (lv_subReference_5_0= ruleValuedObjectReference )
                    {
                    // InternalSCTX.g:14095:5: (lv_subReference_5_0= ruleValuedObjectReference )
                    // InternalSCTX.g:14096:6: lv_subReference_5_0= ruleValuedObjectReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getValuedObjectReferenceAccess().getSubReferenceValuedObjectReferenceParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subReference_5_0=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getValuedObjectReferenceRule());
                      						}
                      						set(
                      							current,
                      							"subReference",
                      							lv_subReference_5_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValuedObjectReference"


    // $ANTLR start "entryRuleScheduleObjectReference"
    // InternalSCTX.g:14118:1: entryRuleScheduleObjectReference returns [EObject current=null] : iv_ruleScheduleObjectReference= ruleScheduleObjectReference EOF ;
    public final EObject entryRuleScheduleObjectReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScheduleObjectReference = null;


        try {
            // InternalSCTX.g:14118:64: (iv_ruleScheduleObjectReference= ruleScheduleObjectReference EOF )
            // InternalSCTX.g:14119:2: iv_ruleScheduleObjectReference= ruleScheduleObjectReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScheduleObjectReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScheduleObjectReference=ruleScheduleObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScheduleObjectReference; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScheduleObjectReference"


    // $ANTLR start "ruleScheduleObjectReference"
    // InternalSCTX.g:14125:1: ruleScheduleObjectReference returns [EObject current=null] : ( ( ( rulePrimeID ) ) ( (lv_priority_1_0= RULE_INT ) ) ) ;
    public final EObject ruleScheduleObjectReference() throws RecognitionException {
        EObject current = null;

        Token lv_priority_1_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:14131:2: ( ( ( ( rulePrimeID ) ) ( (lv_priority_1_0= RULE_INT ) ) ) )
            // InternalSCTX.g:14132:2: ( ( ( rulePrimeID ) ) ( (lv_priority_1_0= RULE_INT ) ) )
            {
            // InternalSCTX.g:14132:2: ( ( ( rulePrimeID ) ) ( (lv_priority_1_0= RULE_INT ) ) )
            // InternalSCTX.g:14133:3: ( ( rulePrimeID ) ) ( (lv_priority_1_0= RULE_INT ) )
            {
            // InternalSCTX.g:14133:3: ( ( rulePrimeID ) )
            // InternalSCTX.g:14134:4: ( rulePrimeID )
            {
            // InternalSCTX.g:14134:4: ( rulePrimeID )
            // InternalSCTX.g:14135:5: rulePrimeID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getScheduleObjectReferenceRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getScheduleObjectReferenceAccess().getValuedObjectValuedObjectCrossReference_0_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_205);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:14152:3: ( (lv_priority_1_0= RULE_INT ) )
            // InternalSCTX.g:14153:4: (lv_priority_1_0= RULE_INT )
            {
            // InternalSCTX.g:14153:4: (lv_priority_1_0= RULE_INT )
            // InternalSCTX.g:14154:5: lv_priority_1_0= RULE_INT
            {
            lv_priority_1_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_priority_1_0, grammarAccess.getScheduleObjectReferenceAccess().getPriorityINTTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getScheduleObjectReferenceRule());
              					}
              					setWithLastConsumed(
              						current,
              						"priority",
              						lv_priority_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.INT");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScheduleObjectReference"


    // $ANTLR start "entryRuleReferenceCall"
    // InternalSCTX.g:14174:1: entryRuleReferenceCall returns [EObject current=null] : iv_ruleReferenceCall= ruleReferenceCall EOF ;
    public final EObject entryRuleReferenceCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReferenceCall = null;


        try {
            // InternalSCTX.g:14174:54: (iv_ruleReferenceCall= ruleReferenceCall EOF )
            // InternalSCTX.g:14175:2: iv_ruleReferenceCall= ruleReferenceCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReferenceCallRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleReferenceCall=ruleReferenceCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReferenceCall; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReferenceCall"


    // $ANTLR start "ruleReferenceCall"
    // InternalSCTX.g:14181:1: ruleReferenceCall returns [EObject current=null] : ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? ( (otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')' ) | otherlv_11= '()' ) ) ;
    public final EObject ruleReferenceCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        EObject lv_indices_2_0 = null;

        EObject lv_subReference_5_0 = null;

        EObject lv_parameters_7_0 = null;

        EObject lv_parameters_9_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:14187:2: ( ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? ( (otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')' ) | otherlv_11= '()' ) ) )
            // InternalSCTX.g:14188:2: ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? ( (otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')' ) | otherlv_11= '()' ) )
            {
            // InternalSCTX.g:14188:2: ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? ( (otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')' ) | otherlv_11= '()' ) )
            // InternalSCTX.g:14189:3: ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? ( (otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')' ) | otherlv_11= '()' )
            {
            // InternalSCTX.g:14189:3: ( ( rulePrimeID ) )
            // InternalSCTX.g:14190:4: ( rulePrimeID )
            {
            // InternalSCTX.g:14190:4: ( rulePrimeID )
            // InternalSCTX.g:14191:5: rulePrimeID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getReferenceCallRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getReferenceCallAccess().getValuedObjectValuedObjectCrossReference_0_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_183);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:14208:3: (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )*
            loop420:
            do {
                int alt420=2;
                int LA420_0 = input.LA(1);

                if ( (LA420_0==34) ) {
                    alt420=1;
                }


                switch (alt420) {
            	case 1 :
            	    // InternalSCTX.g:14209:4: otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']'
            	    {
            	    otherlv_1=(Token)match(input,34,FollowSets000.FOLLOW_30); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getReferenceCallAccess().getLeftSquareBracketKeyword_1_0());
            	      			
            	    }
            	    // InternalSCTX.g:14213:4: ( (lv_indices_2_0= ruleExpression ) )
            	    // InternalSCTX.g:14214:5: (lv_indices_2_0= ruleExpression )
            	    {
            	    // InternalSCTX.g:14214:5: (lv_indices_2_0= ruleExpression )
            	    // InternalSCTX.g:14215:6: lv_indices_2_0= ruleExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getReferenceCallAccess().getIndicesExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_36);
            	    lv_indices_2_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getReferenceCallRule());
            	      						}
            	      						add(
            	      							current,
            	      							"indices",
            	      							lv_indices_2_0,
            	      							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_3=(Token)match(input,35,FollowSets000.FOLLOW_183); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getReferenceCallAccess().getRightSquareBracketKeyword_1_2());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop420;
                }
            } while (true);

            // InternalSCTX.g:14237:3: (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )?
            int alt421=2;
            int LA421_0 = input.LA(1);

            if ( (LA421_0==79) ) {
                alt421=1;
            }
            switch (alt421) {
                case 1 :
                    // InternalSCTX.g:14238:4: otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) )
                    {
                    otherlv_4=(Token)match(input,79,FollowSets000.FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getReferenceCallAccess().getFullStopKeyword_2_0());
                      			
                    }
                    // InternalSCTX.g:14242:4: ( (lv_subReference_5_0= ruleValuedObjectReference ) )
                    // InternalSCTX.g:14243:5: (lv_subReference_5_0= ruleValuedObjectReference )
                    {
                    // InternalSCTX.g:14243:5: (lv_subReference_5_0= ruleValuedObjectReference )
                    // InternalSCTX.g:14244:6: lv_subReference_5_0= ruleValuedObjectReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getReferenceCallAccess().getSubReferenceValuedObjectReferenceParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_130);
                    lv_subReference_5_0=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getReferenceCallRule());
                      						}
                      						set(
                      							current,
                      							"subReference",
                      							lv_subReference_5_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCTX.g:14262:3: ( (otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')' ) | otherlv_11= '()' )
            int alt423=2;
            int LA423_0 = input.LA(1);

            if ( (LA423_0==31) ) {
                alt423=1;
            }
            else if ( (LA423_0==65) ) {
                alt423=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 423, 0, input);

                throw nvae;
            }
            switch (alt423) {
                case 1 :
                    // InternalSCTX.g:14263:4: (otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')' )
                    {
                    // InternalSCTX.g:14263:4: (otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')' )
                    // InternalSCTX.g:14264:5: otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')'
                    {
                    otherlv_6=(Token)match(input,31,FollowSets000.FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getReferenceCallAccess().getLeftParenthesisKeyword_3_0_0());
                      				
                    }
                    // InternalSCTX.g:14268:5: ( (lv_parameters_7_0= ruleParameter ) )
                    // InternalSCTX.g:14269:6: (lv_parameters_7_0= ruleParameter )
                    {
                    // InternalSCTX.g:14269:6: (lv_parameters_7_0= ruleParameter )
                    // InternalSCTX.g:14270:7: lv_parameters_7_0= ruleParameter
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getReferenceCallAccess().getParametersParameterParserRuleCall_3_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_31);
                    lv_parameters_7_0=ruleParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getReferenceCallRule());
                      							}
                      							add(
                      								current,
                      								"parameters",
                      								lv_parameters_7_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:14287:5: (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )*
                    loop422:
                    do {
                        int alt422=2;
                        int LA422_0 = input.LA(1);

                        if ( (LA422_0==20) ) {
                            alt422=1;
                        }


                        switch (alt422) {
                    	case 1 :
                    	    // InternalSCTX.g:14288:6: otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) )
                    	    {
                    	    otherlv_8=(Token)match(input,20,FollowSets000.FOLLOW_30); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_8, grammarAccess.getReferenceCallAccess().getCommaKeyword_3_0_2_0());
                    	      					
                    	    }
                    	    // InternalSCTX.g:14292:6: ( (lv_parameters_9_0= ruleParameter ) )
                    	    // InternalSCTX.g:14293:7: (lv_parameters_9_0= ruleParameter )
                    	    {
                    	    // InternalSCTX.g:14293:7: (lv_parameters_9_0= ruleParameter )
                    	    // InternalSCTX.g:14294:8: lv_parameters_9_0= ruleParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getReferenceCallAccess().getParametersParameterParserRuleCall_3_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_31);
                    	    lv_parameters_9_0=ruleParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getReferenceCallRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"parameters",
                    	      									lv_parameters_9_0,
                    	      									"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop422;
                        }
                    } while (true);

                    otherlv_10=(Token)match(input,32,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_10, grammarAccess.getReferenceCallAccess().getRightParenthesisKeyword_3_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:14318:4: otherlv_11= '()'
                    {
                    otherlv_11=(Token)match(input,65,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getReferenceCallAccess().getLeftParenthesisRightParenthesisKeyword_3_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReferenceCall"


    // $ANTLR start "entryRuleRandomCall"
    // InternalSCTX.g:14327:1: entryRuleRandomCall returns [EObject current=null] : iv_ruleRandomCall= ruleRandomCall EOF ;
    public final EObject entryRuleRandomCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRandomCall = null;


        try {
            // InternalSCTX.g:14327:51: (iv_ruleRandomCall= ruleRandomCall EOF )
            // InternalSCTX.g:14328:2: iv_ruleRandomCall= ruleRandomCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRandomCallRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRandomCall=ruleRandomCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRandomCall; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRandomCall"


    // $ANTLR start "ruleRandomCall"
    // InternalSCTX.g:14334:1: ruleRandomCall returns [EObject current=null] : ( () otherlv_1= 'random' (otherlv_2= '()' )? ) ;
    public final EObject ruleRandomCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;


        	enterRule();

        try {
            // InternalSCTX.g:14340:2: ( ( () otherlv_1= 'random' (otherlv_2= '()' )? ) )
            // InternalSCTX.g:14341:2: ( () otherlv_1= 'random' (otherlv_2= '()' )? )
            {
            // InternalSCTX.g:14341:2: ( () otherlv_1= 'random' (otherlv_2= '()' )? )
            // InternalSCTX.g:14342:3: () otherlv_1= 'random' (otherlv_2= '()' )?
            {
            // InternalSCTX.g:14342:3: ()
            // InternalSCTX.g:14343:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getRandomCallAccess().getRandomCallAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,99,FollowSets000.FOLLOW_206); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getRandomCallAccess().getRandomKeyword_1());
              		
            }
            // InternalSCTX.g:14356:3: (otherlv_2= '()' )?
            int alt424=2;
            int LA424_0 = input.LA(1);

            if ( (LA424_0==65) ) {
                alt424=1;
            }
            switch (alt424) {
                case 1 :
                    // InternalSCTX.g:14357:4: otherlv_2= '()'
                    {
                    otherlv_2=(Token)match(input,65,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getRandomCallAccess().getLeftParenthesisRightParenthesisKeyword_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRandomCall"


    // $ANTLR start "entryRuleRandomizeCall"
    // InternalSCTX.g:14366:1: entryRuleRandomizeCall returns [EObject current=null] : iv_ruleRandomizeCall= ruleRandomizeCall EOF ;
    public final EObject entryRuleRandomizeCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRandomizeCall = null;


        try {
            // InternalSCTX.g:14366:54: (iv_ruleRandomizeCall= ruleRandomizeCall EOF )
            // InternalSCTX.g:14367:2: iv_ruleRandomizeCall= ruleRandomizeCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRandomizeCallRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRandomizeCall=ruleRandomizeCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRandomizeCall; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRandomizeCall"


    // $ANTLR start "ruleRandomizeCall"
    // InternalSCTX.g:14373:1: ruleRandomizeCall returns [EObject current=null] : ( () otherlv_1= 'randomize' (otherlv_2= '()' )? ) ;
    public final EObject ruleRandomizeCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;


        	enterRule();

        try {
            // InternalSCTX.g:14379:2: ( ( () otherlv_1= 'randomize' (otherlv_2= '()' )? ) )
            // InternalSCTX.g:14380:2: ( () otherlv_1= 'randomize' (otherlv_2= '()' )? )
            {
            // InternalSCTX.g:14380:2: ( () otherlv_1= 'randomize' (otherlv_2= '()' )? )
            // InternalSCTX.g:14381:3: () otherlv_1= 'randomize' (otherlv_2= '()' )?
            {
            // InternalSCTX.g:14381:3: ()
            // InternalSCTX.g:14382:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getRandomizeCallAccess().getRandomizeCallAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,81,FollowSets000.FOLLOW_206); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getRandomizeCallAccess().getRandomizeKeyword_1());
              		
            }
            // InternalSCTX.g:14395:3: (otherlv_2= '()' )?
            int alt425=2;
            int LA425_0 = input.LA(1);

            if ( (LA425_0==65) ) {
                alt425=1;
            }
            switch (alt425) {
                case 1 :
                    // InternalSCTX.g:14396:4: otherlv_2= '()'
                    {
                    otherlv_2=(Token)match(input,65,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getRandomizeCallAccess().getLeftParenthesisRightParenthesisKeyword_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRandomizeCall"


    // $ANTLR start "entryRuleFunctionCall"
    // InternalSCTX.g:14405:1: entryRuleFunctionCall returns [EObject current=null] : iv_ruleFunctionCall= ruleFunctionCall EOF ;
    public final EObject entryRuleFunctionCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionCall = null;


        try {
            // InternalSCTX.g:14405:53: (iv_ruleFunctionCall= ruleFunctionCall EOF )
            // InternalSCTX.g:14406:2: iv_ruleFunctionCall= ruleFunctionCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionCallRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFunctionCall=ruleFunctionCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionCall; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionCall"


    // $ANTLR start "ruleFunctionCall"
    // InternalSCTX.g:14412:1: ruleFunctionCall returns [EObject current=null] : (otherlv_0= 'extern' ( (lv_functionName_1_0= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) ) ;
    public final EObject ruleFunctionCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_functionName_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        EObject lv_parameters_3_0 = null;

        EObject lv_parameters_5_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:14418:2: ( (otherlv_0= 'extern' ( (lv_functionName_1_0= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) ) )
            // InternalSCTX.g:14419:2: (otherlv_0= 'extern' ( (lv_functionName_1_0= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) )
            {
            // InternalSCTX.g:14419:2: (otherlv_0= 'extern' ( (lv_functionName_1_0= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) )
            // InternalSCTX.g:14420:3: otherlv_0= 'extern' ( (lv_functionName_1_0= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' )
            {
            otherlv_0=(Token)match(input,76,FollowSets000.FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getFunctionCallAccess().getExternKeyword_0());
              		
            }
            // InternalSCTX.g:14424:3: ( (lv_functionName_1_0= RULE_ID ) )
            // InternalSCTX.g:14425:4: (lv_functionName_1_0= RULE_ID )
            {
            // InternalSCTX.g:14425:4: (lv_functionName_1_0= RULE_ID )
            // InternalSCTX.g:14426:5: lv_functionName_1_0= RULE_ID
            {
            lv_functionName_1_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_130); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_functionName_1_0, grammarAccess.getFunctionCallAccess().getFunctionNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getFunctionCallRule());
              					}
              					setWithLastConsumed(
              						current,
              						"functionName",
              						lv_functionName_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ID");
              				
            }

            }


            }

            // InternalSCTX.g:14442:3: ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' )
            int alt427=2;
            int LA427_0 = input.LA(1);

            if ( (LA427_0==31) ) {
                alt427=1;
            }
            else if ( (LA427_0==65) ) {
                alt427=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 427, 0, input);

                throw nvae;
            }
            switch (alt427) {
                case 1 :
                    // InternalSCTX.g:14443:4: (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' )
                    {
                    // InternalSCTX.g:14443:4: (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' )
                    // InternalSCTX.g:14444:5: otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')'
                    {
                    otherlv_2=(Token)match(input,31,FollowSets000.FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_2_0_0());
                      				
                    }
                    // InternalSCTX.g:14448:5: ( (lv_parameters_3_0= ruleParameter ) )
                    // InternalSCTX.g:14449:6: (lv_parameters_3_0= ruleParameter )
                    {
                    // InternalSCTX.g:14449:6: (lv_parameters_3_0= ruleParameter )
                    // InternalSCTX.g:14450:7: lv_parameters_3_0= ruleParameter
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getFunctionCallAccess().getParametersParameterParserRuleCall_2_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_31);
                    lv_parameters_3_0=ruleParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getFunctionCallRule());
                      							}
                      							add(
                      								current,
                      								"parameters",
                      								lv_parameters_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:14467:5: (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )*
                    loop426:
                    do {
                        int alt426=2;
                        int LA426_0 = input.LA(1);

                        if ( (LA426_0==20) ) {
                            alt426=1;
                        }


                        switch (alt426) {
                    	case 1 :
                    	    // InternalSCTX.g:14468:6: otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) )
                    	    {
                    	    otherlv_4=(Token)match(input,20,FollowSets000.FOLLOW_30); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_4, grammarAccess.getFunctionCallAccess().getCommaKeyword_2_0_2_0());
                    	      					
                    	    }
                    	    // InternalSCTX.g:14472:6: ( (lv_parameters_5_0= ruleParameter ) )
                    	    // InternalSCTX.g:14473:7: (lv_parameters_5_0= ruleParameter )
                    	    {
                    	    // InternalSCTX.g:14473:7: (lv_parameters_5_0= ruleParameter )
                    	    // InternalSCTX.g:14474:8: lv_parameters_5_0= ruleParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getFunctionCallAccess().getParametersParameterParserRuleCall_2_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_31);
                    	    lv_parameters_5_0=ruleParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getFunctionCallRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"parameters",
                    	      									lv_parameters_5_0,
                    	      									"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop426;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,32,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_2_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:14498:4: otherlv_7= '()'
                    {
                    otherlv_7=(Token)match(input,65,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getFunctionCallAccess().getLeftParenthesisRightParenthesisKeyword_2_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionCall"


    // $ANTLR start "entryRulePrintCall"
    // InternalSCTX.g:14507:1: entryRulePrintCall returns [EObject current=null] : iv_rulePrintCall= rulePrintCall EOF ;
    public final EObject entryRulePrintCall() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrintCall = null;


        try {
            // InternalSCTX.g:14507:50: (iv_rulePrintCall= rulePrintCall EOF )
            // InternalSCTX.g:14508:2: iv_rulePrintCall= rulePrintCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrintCallRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePrintCall=rulePrintCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrintCall; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrintCall"


    // $ANTLR start "rulePrintCall"
    // InternalSCTX.g:14514:1: rulePrintCall returns [EObject current=null] : ( () otherlv_1= 'print' ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) ) ;
    public final EObject rulePrintCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        EObject lv_parameters_3_0 = null;

        EObject lv_parameters_5_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:14520:2: ( ( () otherlv_1= 'print' ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) ) )
            // InternalSCTX.g:14521:2: ( () otherlv_1= 'print' ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) )
            {
            // InternalSCTX.g:14521:2: ( () otherlv_1= 'print' ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) )
            // InternalSCTX.g:14522:3: () otherlv_1= 'print' ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' )
            {
            // InternalSCTX.g:14522:3: ()
            // InternalSCTX.g:14523:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getPrintCallAccess().getPrintCallAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,80,FollowSets000.FOLLOW_130); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getPrintCallAccess().getPrintKeyword_1());
              		
            }
            // InternalSCTX.g:14536:3: ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' )
            int alt429=2;
            int LA429_0 = input.LA(1);

            if ( (LA429_0==31) ) {
                alt429=1;
            }
            else if ( (LA429_0==65) ) {
                alt429=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 429, 0, input);

                throw nvae;
            }
            switch (alt429) {
                case 1 :
                    // InternalSCTX.g:14537:4: (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' )
                    {
                    // InternalSCTX.g:14537:4: (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' )
                    // InternalSCTX.g:14538:5: otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')'
                    {
                    otherlv_2=(Token)match(input,31,FollowSets000.FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getPrintCallAccess().getLeftParenthesisKeyword_2_0_0());
                      				
                    }
                    // InternalSCTX.g:14542:5: ( (lv_parameters_3_0= ruleParameter ) )
                    // InternalSCTX.g:14543:6: (lv_parameters_3_0= ruleParameter )
                    {
                    // InternalSCTX.g:14543:6: (lv_parameters_3_0= ruleParameter )
                    // InternalSCTX.g:14544:7: lv_parameters_3_0= ruleParameter
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getPrintCallAccess().getParametersParameterParserRuleCall_2_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_31);
                    lv_parameters_3_0=ruleParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getPrintCallRule());
                      							}
                      							add(
                      								current,
                      								"parameters",
                      								lv_parameters_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCTX.g:14561:5: (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )*
                    loop428:
                    do {
                        int alt428=2;
                        int LA428_0 = input.LA(1);

                        if ( (LA428_0==20) ) {
                            alt428=1;
                        }


                        switch (alt428) {
                    	case 1 :
                    	    // InternalSCTX.g:14562:6: otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) )
                    	    {
                    	    otherlv_4=(Token)match(input,20,FollowSets000.FOLLOW_30); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_4, grammarAccess.getPrintCallAccess().getCommaKeyword_2_0_2_0());
                    	      					
                    	    }
                    	    // InternalSCTX.g:14566:6: ( (lv_parameters_5_0= ruleParameter ) )
                    	    // InternalSCTX.g:14567:7: (lv_parameters_5_0= ruleParameter )
                    	    {
                    	    // InternalSCTX.g:14567:7: (lv_parameters_5_0= ruleParameter )
                    	    // InternalSCTX.g:14568:8: lv_parameters_5_0= ruleParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getPrintCallAccess().getParametersParameterParserRuleCall_2_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_31);
                    	    lv_parameters_5_0=ruleParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getPrintCallRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"parameters",
                    	      									lv_parameters_5_0,
                    	      									"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop428;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,32,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getPrintCallAccess().getRightParenthesisKeyword_2_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:14592:4: otherlv_7= '()'
                    {
                    otherlv_7=(Token)match(input,65,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getPrintCallAccess().getLeftParenthesisRightParenthesisKeyword_2_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrintCall"


    // $ANTLR start "entryRuleParameter"
    // InternalSCTX.g:14601:1: entryRuleParameter returns [EObject current=null] : iv_ruleParameter= ruleParameter EOF ;
    public final EObject entryRuleParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameter = null;


        try {
            // InternalSCTX.g:14601:50: (iv_ruleParameter= ruleParameter EOF )
            // InternalSCTX.g:14602:2: iv_ruleParameter= ruleParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleParameter=ruleParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameter; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParameter"


    // $ANTLR start "ruleParameter"
    // InternalSCTX.g:14608:1: ruleParameter returns [EObject current=null] : ( ( ( (lv_accessType_0_0= ruleParameterAccessType ) ) ( (lv_expression_1_0= ruleValuedObjectReference ) ) ) | ( (lv_expression_2_0= ruleExpression ) ) ) ;
    public final EObject ruleParameter() throws RecognitionException {
        EObject current = null;

        Enumerator lv_accessType_0_0 = null;

        EObject lv_expression_1_0 = null;

        EObject lv_expression_2_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:14614:2: ( ( ( ( (lv_accessType_0_0= ruleParameterAccessType ) ) ( (lv_expression_1_0= ruleValuedObjectReference ) ) ) | ( (lv_expression_2_0= ruleExpression ) ) ) )
            // InternalSCTX.g:14615:2: ( ( ( (lv_accessType_0_0= ruleParameterAccessType ) ) ( (lv_expression_1_0= ruleValuedObjectReference ) ) ) | ( (lv_expression_2_0= ruleExpression ) ) )
            {
            // InternalSCTX.g:14615:2: ( ( ( (lv_accessType_0_0= ruleParameterAccessType ) ) ( (lv_expression_1_0= ruleValuedObjectReference ) ) ) | ( (lv_expression_2_0= ruleExpression ) ) )
            int alt430=2;
            int LA430_0 = input.LA(1);

            if ( (LA430_0==86||LA430_0==159) ) {
                alt430=1;
            }
            else if ( ((LA430_0>=RULE_STRING && LA430_0<=RULE_COMMENT_ANNOTATION)||LA430_0==21||LA430_0==31||LA430_0==76||LA430_0==81||LA430_0==91||LA430_0==99||LA430_0==103||(LA430_0>=145 && LA430_0<=148)) ) {
                alt430=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 430, 0, input);

                throw nvae;
            }
            switch (alt430) {
                case 1 :
                    // InternalSCTX.g:14616:3: ( ( (lv_accessType_0_0= ruleParameterAccessType ) ) ( (lv_expression_1_0= ruleValuedObjectReference ) ) )
                    {
                    // InternalSCTX.g:14616:3: ( ( (lv_accessType_0_0= ruleParameterAccessType ) ) ( (lv_expression_1_0= ruleValuedObjectReference ) ) )
                    // InternalSCTX.g:14617:4: ( (lv_accessType_0_0= ruleParameterAccessType ) ) ( (lv_expression_1_0= ruleValuedObjectReference ) )
                    {
                    // InternalSCTX.g:14617:4: ( (lv_accessType_0_0= ruleParameterAccessType ) )
                    // InternalSCTX.g:14618:5: (lv_accessType_0_0= ruleParameterAccessType )
                    {
                    // InternalSCTX.g:14618:5: (lv_accessType_0_0= ruleParameterAccessType )
                    // InternalSCTX.g:14619:6: lv_accessType_0_0= ruleParameterAccessType
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getParameterAccess().getAccessTypeParameterAccessTypeEnumRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_33);
                    lv_accessType_0_0=ruleParameterAccessType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getParameterRule());
                      						}
                      						set(
                      							current,
                      							"accessType",
                      							lv_accessType_0_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.ParameterAccessType");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:14636:4: ( (lv_expression_1_0= ruleValuedObjectReference ) )
                    // InternalSCTX.g:14637:5: (lv_expression_1_0= ruleValuedObjectReference )
                    {
                    // InternalSCTX.g:14637:5: (lv_expression_1_0= ruleValuedObjectReference )
                    // InternalSCTX.g:14638:6: lv_expression_1_0= ruleValuedObjectReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getParameterAccess().getExpressionValuedObjectReferenceParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_expression_1_0=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getParameterRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_1_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:14657:3: ( (lv_expression_2_0= ruleExpression ) )
                    {
                    // InternalSCTX.g:14657:3: ( (lv_expression_2_0= ruleExpression ) )
                    // InternalSCTX.g:14658:4: (lv_expression_2_0= ruleExpression )
                    {
                    // InternalSCTX.g:14658:4: (lv_expression_2_0= ruleExpression )
                    // InternalSCTX.g:14659:5: lv_expression_2_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getParameterAccess().getExpressionExpressionParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_expression_2_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getParameterRule());
                      					}
                      					set(
                      						current,
                      						"expression",
                      						lv_expression_2_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameter"


    // $ANTLR start "entryRuleTextExpression"
    // InternalSCTX.g:14680:1: entryRuleTextExpression returns [EObject current=null] : iv_ruleTextExpression= ruleTextExpression EOF ;
    public final EObject entryRuleTextExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTextExpression = null;


        try {
            // InternalSCTX.g:14680:55: (iv_ruleTextExpression= ruleTextExpression EOF )
            // InternalSCTX.g:14681:2: iv_ruleTextExpression= ruleTextExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTextExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTextExpression=ruleTextExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTextExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTextExpression"


    // $ANTLR start "ruleTextExpression"
    // InternalSCTX.g:14687:1: ruleTextExpression returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) ) ;
    public final EObject ruleTextExpression() throws RecognitionException {
        EObject current = null;

        Token lv_text_1_0=null;
        EObject lv_annotations_0_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:14693:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) ) )
            // InternalSCTX.g:14694:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) )
            {
            // InternalSCTX.g:14694:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) )
            // InternalSCTX.g:14695:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) )
            {
            // InternalSCTX.g:14695:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop431:
            do {
                int alt431=2;
                int LA431_0 = input.LA(1);

                if ( (LA431_0==RULE_COMMENT_ANNOTATION||LA431_0==103) ) {
                    alt431=1;
                }


                switch (alt431) {
            	case 1 :
            	    // InternalSCTX.g:14696:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCTX.g:14696:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCTX.g:14697:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getTextExpressionAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_182);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getTextExpressionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop431;
                }
            } while (true);

            // InternalSCTX.g:14714:3: ( (lv_text_1_0= RULE_HOSTCODE ) )
            // InternalSCTX.g:14715:4: (lv_text_1_0= RULE_HOSTCODE )
            {
            // InternalSCTX.g:14715:4: (lv_text_1_0= RULE_HOSTCODE )
            // InternalSCTX.g:14716:5: lv_text_1_0= RULE_HOSTCODE
            {
            lv_text_1_0=(Token)match(input,RULE_HOSTCODE,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_text_1_0, grammarAccess.getTextExpressionAccess().getTextHOSTCODETerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getTextExpressionRule());
              					}
              					setWithLastConsumed(
              						current,
              						"text",
              						lv_text_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.HOSTCODE");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTextExpression"


    // $ANTLR start "entryRuleIntValue"
    // InternalSCTX.g:14736:1: entryRuleIntValue returns [EObject current=null] : iv_ruleIntValue= ruleIntValue EOF ;
    public final EObject entryRuleIntValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIntValue = null;


        try {
            // InternalSCTX.g:14736:49: (iv_ruleIntValue= ruleIntValue EOF )
            // InternalSCTX.g:14737:2: iv_ruleIntValue= ruleIntValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIntValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleIntValue=ruleIntValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIntValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIntValue"


    // $ANTLR start "ruleIntValue"
    // InternalSCTX.g:14743:1: ruleIntValue returns [EObject current=null] : ( (lv_value_0_0= RULE_INT ) ) ;
    public final EObject ruleIntValue() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:14749:2: ( ( (lv_value_0_0= RULE_INT ) ) )
            // InternalSCTX.g:14750:2: ( (lv_value_0_0= RULE_INT ) )
            {
            // InternalSCTX.g:14750:2: ( (lv_value_0_0= RULE_INT ) )
            // InternalSCTX.g:14751:3: (lv_value_0_0= RULE_INT )
            {
            // InternalSCTX.g:14751:3: (lv_value_0_0= RULE_INT )
            // InternalSCTX.g:14752:4: lv_value_0_0= RULE_INT
            {
            lv_value_0_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_value_0_0, grammarAccess.getIntValueAccess().getValueINTTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getIntValueRule());
              				}
              				setWithLastConsumed(
              					current,
              					"value",
              					lv_value_0_0,
              					"de.cau.cs.kieler.annotations.Annotations.INT");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIntValue"


    // $ANTLR start "entryRuleFloatValue"
    // InternalSCTX.g:14771:1: entryRuleFloatValue returns [EObject current=null] : iv_ruleFloatValue= ruleFloatValue EOF ;
    public final EObject entryRuleFloatValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFloatValue = null;


        try {
            // InternalSCTX.g:14771:51: (iv_ruleFloatValue= ruleFloatValue EOF )
            // InternalSCTX.g:14772:2: iv_ruleFloatValue= ruleFloatValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFloatValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFloatValue=ruleFloatValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFloatValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFloatValue"


    // $ANTLR start "ruleFloatValue"
    // InternalSCTX.g:14778:1: ruleFloatValue returns [EObject current=null] : ( (lv_value_0_0= RULE_FLOAT ) ) ;
    public final EObject ruleFloatValue() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:14784:2: ( ( (lv_value_0_0= RULE_FLOAT ) ) )
            // InternalSCTX.g:14785:2: ( (lv_value_0_0= RULE_FLOAT ) )
            {
            // InternalSCTX.g:14785:2: ( (lv_value_0_0= RULE_FLOAT ) )
            // InternalSCTX.g:14786:3: (lv_value_0_0= RULE_FLOAT )
            {
            // InternalSCTX.g:14786:3: (lv_value_0_0= RULE_FLOAT )
            // InternalSCTX.g:14787:4: lv_value_0_0= RULE_FLOAT
            {
            lv_value_0_0=(Token)match(input,RULE_FLOAT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_value_0_0, grammarAccess.getFloatValueAccess().getValueFLOATTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getFloatValueRule());
              				}
              				setWithLastConsumed(
              					current,
              					"value",
              					lv_value_0_0,
              					"de.cau.cs.kieler.annotations.Annotations.FLOAT");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFloatValue"


    // $ANTLR start "entryRuleBoolValue"
    // InternalSCTX.g:14806:1: entryRuleBoolValue returns [EObject current=null] : iv_ruleBoolValue= ruleBoolValue EOF ;
    public final EObject entryRuleBoolValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBoolValue = null;


        try {
            // InternalSCTX.g:14806:50: (iv_ruleBoolValue= ruleBoolValue EOF )
            // InternalSCTX.g:14807:2: iv_ruleBoolValue= ruleBoolValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBoolValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBoolValue=ruleBoolValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBoolValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBoolValue"


    // $ANTLR start "ruleBoolValue"
    // InternalSCTX.g:14813:1: ruleBoolValue returns [EObject current=null] : ( (lv_value_0_0= RULE_BOOLEAN ) ) ;
    public final EObject ruleBoolValue() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:14819:2: ( ( (lv_value_0_0= RULE_BOOLEAN ) ) )
            // InternalSCTX.g:14820:2: ( (lv_value_0_0= RULE_BOOLEAN ) )
            {
            // InternalSCTX.g:14820:2: ( (lv_value_0_0= RULE_BOOLEAN ) )
            // InternalSCTX.g:14821:3: (lv_value_0_0= RULE_BOOLEAN )
            {
            // InternalSCTX.g:14821:3: (lv_value_0_0= RULE_BOOLEAN )
            // InternalSCTX.g:14822:4: lv_value_0_0= RULE_BOOLEAN
            {
            lv_value_0_0=(Token)match(input,RULE_BOOLEAN,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_value_0_0, grammarAccess.getBoolValueAccess().getValueBOOLEANTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getBoolValueRule());
              				}
              				setWithLastConsumed(
              					current,
              					"value",
              					lv_value_0_0,
              					"de.cau.cs.kieler.annotations.Annotations.BOOLEAN");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBoolValue"


    // $ANTLR start "entryRuleStringValue"
    // InternalSCTX.g:14841:1: entryRuleStringValue returns [EObject current=null] : iv_ruleStringValue= ruleStringValue EOF ;
    public final EObject entryRuleStringValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStringValue = null;


        try {
            // InternalSCTX.g:14841:52: (iv_ruleStringValue= ruleStringValue EOF )
            // InternalSCTX.g:14842:2: iv_ruleStringValue= ruleStringValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStringValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStringValue=ruleStringValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStringValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStringValue"


    // $ANTLR start "ruleStringValue"
    // InternalSCTX.g:14848:1: ruleStringValue returns [EObject current=null] : ( (lv_value_0_0= RULE_STRING ) ) ;
    public final EObject ruleStringValue() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:14854:2: ( ( (lv_value_0_0= RULE_STRING ) ) )
            // InternalSCTX.g:14855:2: ( (lv_value_0_0= RULE_STRING ) )
            {
            // InternalSCTX.g:14855:2: ( (lv_value_0_0= RULE_STRING ) )
            // InternalSCTX.g:14856:3: (lv_value_0_0= RULE_STRING )
            {
            // InternalSCTX.g:14856:3: (lv_value_0_0= RULE_STRING )
            // InternalSCTX.g:14857:4: lv_value_0_0= RULE_STRING
            {
            lv_value_0_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_value_0_0, grammarAccess.getStringValueAccess().getValueSTRINGTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getStringValueRule());
              				}
              				setWithLastConsumed(
              					current,
              					"value",
              					lv_value_0_0,
              					"de.cau.cs.kieler.annotations.Annotations.STRING");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStringValue"


    // $ANTLR start "entryRuleVectorValue"
    // InternalSCTX.g:14876:1: entryRuleVectorValue returns [EObject current=null] : iv_ruleVectorValue= ruleVectorValue EOF ;
    public final EObject entryRuleVectorValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVectorValue = null;


        try {
            // InternalSCTX.g:14876:52: (iv_ruleVectorValue= ruleVectorValue EOF )
            // InternalSCTX.g:14877:2: iv_ruleVectorValue= ruleVectorValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVectorValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleVectorValue=ruleVectorValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVectorValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVectorValue"


    // $ANTLR start "ruleVectorValue"
    // InternalSCTX.g:14883:1: ruleVectorValue returns [EObject current=null] : (otherlv_0= '{' ( (lv_values_1_0= ruleVectorValueMember ) ) (otherlv_2= ',' ( (lv_values_3_0= ruleVectorValueMember ) ) )* otherlv_4= '}' ) ;
    public final EObject ruleVectorValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_values_1_0 = null;

        EObject lv_values_3_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:14889:2: ( (otherlv_0= '{' ( (lv_values_1_0= ruleVectorValueMember ) ) (otherlv_2= ',' ( (lv_values_3_0= ruleVectorValueMember ) ) )* otherlv_4= '}' ) )
            // InternalSCTX.g:14890:2: (otherlv_0= '{' ( (lv_values_1_0= ruleVectorValueMember ) ) (otherlv_2= ',' ( (lv_values_3_0= ruleVectorValueMember ) ) )* otherlv_4= '}' )
            {
            // InternalSCTX.g:14890:2: (otherlv_0= '{' ( (lv_values_1_0= ruleVectorValueMember ) ) (otherlv_2= ',' ( (lv_values_3_0= ruleVectorValueMember ) ) )* otherlv_4= '}' )
            // InternalSCTX.g:14891:3: otherlv_0= '{' ( (lv_values_1_0= ruleVectorValueMember ) ) (otherlv_2= ',' ( (lv_values_3_0= ruleVectorValueMember ) ) )* otherlv_4= '}'
            {
            otherlv_0=(Token)match(input,21,FollowSets000.FOLLOW_207); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getVectorValueAccess().getLeftCurlyBracketKeyword_0());
              		
            }
            // InternalSCTX.g:14895:3: ( (lv_values_1_0= ruleVectorValueMember ) )
            // InternalSCTX.g:14896:4: (lv_values_1_0= ruleVectorValueMember )
            {
            // InternalSCTX.g:14896:4: (lv_values_1_0= ruleVectorValueMember )
            // InternalSCTX.g:14897:5: lv_values_1_0= ruleVectorValueMember
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getVectorValueAccess().getValuesVectorValueMemberParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_178);
            lv_values_1_0=ruleVectorValueMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getVectorValueRule());
              					}
              					add(
              						current,
              						"values",
              						lv_values_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.VectorValueMember");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:14914:3: (otherlv_2= ',' ( (lv_values_3_0= ruleVectorValueMember ) ) )*
            loop432:
            do {
                int alt432=2;
                int LA432_0 = input.LA(1);

                if ( (LA432_0==20) ) {
                    alt432=1;
                }


                switch (alt432) {
            	case 1 :
            	    // InternalSCTX.g:14915:4: otherlv_2= ',' ( (lv_values_3_0= ruleVectorValueMember ) )
            	    {
            	    otherlv_2=(Token)match(input,20,FollowSets000.FOLLOW_207); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getVectorValueAccess().getCommaKeyword_2_0());
            	      			
            	    }
            	    // InternalSCTX.g:14919:4: ( (lv_values_3_0= ruleVectorValueMember ) )
            	    // InternalSCTX.g:14920:5: (lv_values_3_0= ruleVectorValueMember )
            	    {
            	    // InternalSCTX.g:14920:5: (lv_values_3_0= ruleVectorValueMember )
            	    // InternalSCTX.g:14921:6: lv_values_3_0= ruleVectorValueMember
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getVectorValueAccess().getValuesVectorValueMemberParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_178);
            	    lv_values_3_0=ruleVectorValueMember();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getVectorValueRule());
            	      						}
            	      						add(
            	      							current,
            	      							"values",
            	      							lv_values_3_0,
            	      							"de.cau.cs.kieler.kexpressions.KExpressions.VectorValueMember");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop432;
                }
            } while (true);

            otherlv_4=(Token)match(input,22,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getVectorValueAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVectorValue"


    // $ANTLR start "entryRuleVectorValueMember"
    // InternalSCTX.g:14947:1: entryRuleVectorValueMember returns [EObject current=null] : iv_ruleVectorValueMember= ruleVectorValueMember EOF ;
    public final EObject entryRuleVectorValueMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVectorValueMember = null;


        try {
            // InternalSCTX.g:14947:58: (iv_ruleVectorValueMember= ruleVectorValueMember EOF )
            // InternalSCTX.g:14948:2: iv_ruleVectorValueMember= ruleVectorValueMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVectorValueMemberRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleVectorValueMember=ruleVectorValueMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVectorValueMember; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVectorValueMember"


    // $ANTLR start "ruleVectorValueMember"
    // InternalSCTX.g:14954:1: ruleVectorValueMember returns [EObject current=null] : (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression | this_IgnoreValue_2= ruleIgnoreValue ) ;
    public final EObject ruleVectorValueMember() throws RecognitionException {
        EObject current = null;

        EObject this_BoolExpression_0 = null;

        EObject this_ValuedExpression_1 = null;

        EObject this_IgnoreValue_2 = null;



        	enterRule();

        try {
            // InternalSCTX.g:14960:2: ( (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression | this_IgnoreValue_2= ruleIgnoreValue ) )
            // InternalSCTX.g:14961:2: (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression | this_IgnoreValue_2= ruleIgnoreValue )
            {
            // InternalSCTX.g:14961:2: (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression | this_IgnoreValue_2= ruleIgnoreValue )
            int alt433=3;
            alt433 = dfa433.predict(input);
            switch (alt433) {
                case 1 :
                    // InternalSCTX.g:14962:3: this_BoolExpression_0= ruleBoolExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getVectorValueMemberAccess().getBoolExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_BoolExpression_0=ruleBoolExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BoolExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:14974:3: this_ValuedExpression_1= ruleValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getVectorValueMemberAccess().getValuedExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedExpression_1=ruleValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ValuedExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:14986:3: this_IgnoreValue_2= ruleIgnoreValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getVectorValueMemberAccess().getIgnoreValueParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_IgnoreValue_2=ruleIgnoreValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_IgnoreValue_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVectorValueMember"


    // $ANTLR start "entryRuleIgnoreValue"
    // InternalSCTX.g:15001:1: entryRuleIgnoreValue returns [EObject current=null] : iv_ruleIgnoreValue= ruleIgnoreValue EOF ;
    public final EObject entryRuleIgnoreValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIgnoreValue = null;


        try {
            // InternalSCTX.g:15001:52: (iv_ruleIgnoreValue= ruleIgnoreValue EOF )
            // InternalSCTX.g:15002:2: iv_ruleIgnoreValue= ruleIgnoreValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIgnoreValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleIgnoreValue=ruleIgnoreValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIgnoreValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIgnoreValue"


    // $ANTLR start "ruleIgnoreValue"
    // InternalSCTX.g:15008:1: ruleIgnoreValue returns [EObject current=null] : ( () otherlv_1= '_' ) ;
    public final EObject ruleIgnoreValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;


        	enterRule();

        try {
            // InternalSCTX.g:15014:2: ( ( () otherlv_1= '_' ) )
            // InternalSCTX.g:15015:2: ( () otherlv_1= '_' )
            {
            // InternalSCTX.g:15015:2: ( () otherlv_1= '_' )
            // InternalSCTX.g:15016:3: () otherlv_1= '_'
            {
            // InternalSCTX.g:15016:3: ()
            // InternalSCTX.g:15017:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getIgnoreValueAccess().getIgnoreValueAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,100,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getIgnoreValueAccess().get_Keyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIgnoreValue"


    // $ANTLR start "entryRuleAnyValue"
    // InternalSCTX.g:15034:1: entryRuleAnyValue returns [EObject current=null] : iv_ruleAnyValue= ruleAnyValue EOF ;
    public final EObject entryRuleAnyValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnyValue = null;


        try {
            // InternalSCTX.g:15034:49: (iv_ruleAnyValue= ruleAnyValue EOF )
            // InternalSCTX.g:15035:2: iv_ruleAnyValue= ruleAnyValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnyValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAnyValue=ruleAnyValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnyValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnyValue"


    // $ANTLR start "ruleAnyValue"
    // InternalSCTX.g:15041:1: ruleAnyValue returns [EObject current=null] : (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_BoolValue_2= ruleBoolValue | this_StringValue_3= ruleStringValue ) ;
    public final EObject ruleAnyValue() throws RecognitionException {
        EObject current = null;

        EObject this_IntValue_0 = null;

        EObject this_FloatValue_1 = null;

        EObject this_BoolValue_2 = null;

        EObject this_StringValue_3 = null;



        	enterRule();

        try {
            // InternalSCTX.g:15047:2: ( (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_BoolValue_2= ruleBoolValue | this_StringValue_3= ruleStringValue ) )
            // InternalSCTX.g:15048:2: (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_BoolValue_2= ruleBoolValue | this_StringValue_3= ruleStringValue )
            {
            // InternalSCTX.g:15048:2: (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_BoolValue_2= ruleBoolValue | this_StringValue_3= ruleStringValue )
            int alt434=4;
            switch ( input.LA(1) ) {
            case RULE_INT:
                {
                alt434=1;
                }
                break;
            case RULE_FLOAT:
                {
                alt434=2;
                }
                break;
            case RULE_BOOLEAN:
                {
                alt434=3;
                }
                break;
            case RULE_STRING:
                {
                alt434=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 434, 0, input);

                throw nvae;
            }

            switch (alt434) {
                case 1 :
                    // InternalSCTX.g:15049:3: this_IntValue_0= ruleIntValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnyValueAccess().getIntValueParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_IntValue_0=ruleIntValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_IntValue_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:15061:3: this_FloatValue_1= ruleFloatValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnyValueAccess().getFloatValueParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_FloatValue_1=ruleFloatValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FloatValue_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:15073:3: this_BoolValue_2= ruleBoolValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnyValueAccess().getBoolValueParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_BoolValue_2=ruleBoolValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BoolValue_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSCTX.g:15085:3: this_StringValue_3= ruleStringValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnyValueAccess().getStringValueParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_StringValue_3=ruleStringValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_StringValue_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnyValue"


    // $ANTLR start "entryRuleJsonObjectValue"
    // InternalSCTX.g:15100:1: entryRuleJsonObjectValue returns [EObject current=null] : iv_ruleJsonObjectValue= ruleJsonObjectValue EOF ;
    public final EObject entryRuleJsonObjectValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJsonObjectValue = null;


        try {
            // InternalSCTX.g:15100:56: (iv_ruleJsonObjectValue= ruleJsonObjectValue EOF )
            // InternalSCTX.g:15101:2: iv_ruleJsonObjectValue= ruleJsonObjectValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJsonObjectValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleJsonObjectValue=ruleJsonObjectValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJsonObjectValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJsonObjectValue"


    // $ANTLR start "ruleJsonObjectValue"
    // InternalSCTX.g:15107:1: ruleJsonObjectValue returns [EObject current=null] : ( () otherlv_1= '{' ( ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )* )? otherlv_5= '}' ) ;
    public final EObject ruleJsonObjectValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_members_2_0 = null;

        EObject lv_members_4_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:15113:2: ( ( () otherlv_1= '{' ( ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )* )? otherlv_5= '}' ) )
            // InternalSCTX.g:15114:2: ( () otherlv_1= '{' ( ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )* )? otherlv_5= '}' )
            {
            // InternalSCTX.g:15114:2: ( () otherlv_1= '{' ( ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )* )? otherlv_5= '}' )
            // InternalSCTX.g:15115:3: () otherlv_1= '{' ( ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )* )? otherlv_5= '}'
            {
            // InternalSCTX.g:15115:3: ()
            // InternalSCTX.g:15116:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getJsonObjectValueAccess().getJsonObjectValueAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,21,FollowSets000.FOLLOW_208); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getJsonObjectValueAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalSCTX.g:15129:3: ( ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )* )?
            int alt436=2;
            int LA436_0 = input.LA(1);

            if ( (LA436_0==RULE_STRING) ) {
                alt436=1;
            }
            switch (alt436) {
                case 1 :
                    // InternalSCTX.g:15130:4: ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )*
                    {
                    // InternalSCTX.g:15130:4: ( (lv_members_2_0= ruleJsonObjectMember ) )
                    // InternalSCTX.g:15131:5: (lv_members_2_0= ruleJsonObjectMember )
                    {
                    // InternalSCTX.g:15131:5: (lv_members_2_0= ruleJsonObjectMember )
                    // InternalSCTX.g:15132:6: lv_members_2_0= ruleJsonObjectMember
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getJsonObjectValueAccess().getMembersJsonObjectMemberParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_178);
                    lv_members_2_0=ruleJsonObjectMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getJsonObjectValueRule());
                      						}
                      						add(
                      							current,
                      							"members",
                      							lv_members_2_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.JsonObjectMember");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:15149:4: (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )*
                    loop435:
                    do {
                        int alt435=2;
                        int LA435_0 = input.LA(1);

                        if ( (LA435_0==20) ) {
                            alt435=1;
                        }


                        switch (alt435) {
                    	case 1 :
                    	    // InternalSCTX.g:15150:5: otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) )
                    	    {
                    	    otherlv_3=(Token)match(input,20,FollowSets000.FOLLOW_47); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getJsonObjectValueAccess().getCommaKeyword_2_1_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:15154:5: ( (lv_members_4_0= ruleJsonObjectMember ) )
                    	    // InternalSCTX.g:15155:6: (lv_members_4_0= ruleJsonObjectMember )
                    	    {
                    	    // InternalSCTX.g:15155:6: (lv_members_4_0= ruleJsonObjectMember )
                    	    // InternalSCTX.g:15156:7: lv_members_4_0= ruleJsonObjectMember
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJsonObjectValueAccess().getMembersJsonObjectMemberParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_178);
                    	    lv_members_4_0=ruleJsonObjectMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getJsonObjectValueRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"members",
                    	      								lv_members_4_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.JsonObjectMember");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop435;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,22,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getJsonObjectValueAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJsonObjectValue"


    // $ANTLR start "entryRuleJsonObjectMember"
    // InternalSCTX.g:15183:1: entryRuleJsonObjectMember returns [EObject current=null] : iv_ruleJsonObjectMember= ruleJsonObjectMember EOF ;
    public final EObject entryRuleJsonObjectMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJsonObjectMember = null;


        try {
            // InternalSCTX.g:15183:57: (iv_ruleJsonObjectMember= ruleJsonObjectMember EOF )
            // InternalSCTX.g:15184:2: iv_ruleJsonObjectMember= ruleJsonObjectMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJsonObjectMemberRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleJsonObjectMember=ruleJsonObjectMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJsonObjectMember; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJsonObjectMember"


    // $ANTLR start "ruleJsonObjectMember"
    // InternalSCTX.g:15190:1: ruleJsonObjectMember returns [EObject current=null] : ( ( (lv_key_0_0= RULE_STRING ) ) otherlv_1= ':' ( (lv_value_2_0= ruleJsonValue ) ) ) ;
    public final EObject ruleJsonObjectMember() throws RecognitionException {
        EObject current = null;

        Token lv_key_0_0=null;
        Token otherlv_1=null;
        EObject lv_value_2_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:15196:2: ( ( ( (lv_key_0_0= RULE_STRING ) ) otherlv_1= ':' ( (lv_value_2_0= ruleJsonValue ) ) ) )
            // InternalSCTX.g:15197:2: ( ( (lv_key_0_0= RULE_STRING ) ) otherlv_1= ':' ( (lv_value_2_0= ruleJsonValue ) ) )
            {
            // InternalSCTX.g:15197:2: ( ( (lv_key_0_0= RULE_STRING ) ) otherlv_1= ':' ( (lv_value_2_0= ruleJsonValue ) ) )
            // InternalSCTX.g:15198:3: ( (lv_key_0_0= RULE_STRING ) ) otherlv_1= ':' ( (lv_value_2_0= ruleJsonValue ) )
            {
            // InternalSCTX.g:15198:3: ( (lv_key_0_0= RULE_STRING ) )
            // InternalSCTX.g:15199:4: (lv_key_0_0= RULE_STRING )
            {
            // InternalSCTX.g:15199:4: (lv_key_0_0= RULE_STRING )
            // InternalSCTX.g:15200:5: lv_key_0_0= RULE_STRING
            {
            lv_key_0_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_56); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_key_0_0, grammarAccess.getJsonObjectMemberAccess().getKeySTRINGTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getJsonObjectMemberRule());
              					}
              					setWithLastConsumed(
              						current,
              						"key",
              						lv_key_0_0,
              						"de.cau.cs.kieler.annotations.Annotations.STRING");
              				
            }

            }


            }

            otherlv_1=(Token)match(input,45,FollowSets000.FOLLOW_209); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getJsonObjectMemberAccess().getColonKeyword_1());
              		
            }
            // InternalSCTX.g:15220:3: ( (lv_value_2_0= ruleJsonValue ) )
            // InternalSCTX.g:15221:4: (lv_value_2_0= ruleJsonValue )
            {
            // InternalSCTX.g:15221:4: (lv_value_2_0= ruleJsonValue )
            // InternalSCTX.g:15222:5: lv_value_2_0= ruleJsonValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJsonObjectMemberAccess().getValueJsonValueParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_value_2_0=ruleJsonValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJsonObjectMemberRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_2_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.JsonValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJsonObjectMember"


    // $ANTLR start "entryRuleJsonArrayValue"
    // InternalSCTX.g:15243:1: entryRuleJsonArrayValue returns [EObject current=null] : iv_ruleJsonArrayValue= ruleJsonArrayValue EOF ;
    public final EObject entryRuleJsonArrayValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJsonArrayValue = null;


        try {
            // InternalSCTX.g:15243:55: (iv_ruleJsonArrayValue= ruleJsonArrayValue EOF )
            // InternalSCTX.g:15244:2: iv_ruleJsonArrayValue= ruleJsonArrayValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJsonArrayValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleJsonArrayValue=ruleJsonArrayValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJsonArrayValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJsonArrayValue"


    // $ANTLR start "ruleJsonArrayValue"
    // InternalSCTX.g:15250:1: ruleJsonArrayValue returns [EObject current=null] : ( () otherlv_1= '[' ( ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )* )? otherlv_5= ']' ) ;
    public final EObject ruleJsonArrayValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_elements_2_0 = null;

        EObject lv_elements_4_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:15256:2: ( ( () otherlv_1= '[' ( ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )* )? otherlv_5= ']' ) )
            // InternalSCTX.g:15257:2: ( () otherlv_1= '[' ( ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )* )? otherlv_5= ']' )
            {
            // InternalSCTX.g:15257:2: ( () otherlv_1= '[' ( ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )* )? otherlv_5= ']' )
            // InternalSCTX.g:15258:3: () otherlv_1= '[' ( ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )* )? otherlv_5= ']'
            {
            // InternalSCTX.g:15258:3: ()
            // InternalSCTX.g:15259:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getJsonArrayValueAccess().getJsonArrayValueAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,34,FollowSets000.FOLLOW_210); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getJsonArrayValueAccess().getLeftSquareBracketKeyword_1());
              		
            }
            // InternalSCTX.g:15272:3: ( ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )* )?
            int alt438=2;
            int LA438_0 = input.LA(1);

            if ( (LA438_0==RULE_STRING||(LA438_0>=RULE_INT && LA438_0<=RULE_FLOAT)||LA438_0==RULE_BOOLEAN||LA438_0==21||LA438_0==34||LA438_0==101) ) {
                alt438=1;
            }
            switch (alt438) {
                case 1 :
                    // InternalSCTX.g:15273:4: ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )*
                    {
                    // InternalSCTX.g:15273:4: ( (lv_elements_2_0= ruleJsonValue ) )
                    // InternalSCTX.g:15274:5: (lv_elements_2_0= ruleJsonValue )
                    {
                    // InternalSCTX.g:15274:5: (lv_elements_2_0= ruleJsonValue )
                    // InternalSCTX.g:15275:6: lv_elements_2_0= ruleJsonValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getJsonArrayValueAccess().getElementsJsonValueParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_211);
                    lv_elements_2_0=ruleJsonValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getJsonArrayValueRule());
                      						}
                      						add(
                      							current,
                      							"elements",
                      							lv_elements_2_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.JsonValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCTX.g:15292:4: (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )*
                    loop437:
                    do {
                        int alt437=2;
                        int LA437_0 = input.LA(1);

                        if ( (LA437_0==20) ) {
                            alt437=1;
                        }


                        switch (alt437) {
                    	case 1 :
                    	    // InternalSCTX.g:15293:5: otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) )
                    	    {
                    	    otherlv_3=(Token)match(input,20,FollowSets000.FOLLOW_209); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getJsonArrayValueAccess().getCommaKeyword_2_1_0());
                    	      				
                    	    }
                    	    // InternalSCTX.g:15297:5: ( (lv_elements_4_0= ruleJsonValue ) )
                    	    // InternalSCTX.g:15298:6: (lv_elements_4_0= ruleJsonValue )
                    	    {
                    	    // InternalSCTX.g:15298:6: (lv_elements_4_0= ruleJsonValue )
                    	    // InternalSCTX.g:15299:7: lv_elements_4_0= ruleJsonValue
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJsonArrayValueAccess().getElementsJsonValueParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_211);
                    	    lv_elements_4_0=ruleJsonValue();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getJsonArrayValueRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"elements",
                    	      								lv_elements_4_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.JsonValue");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop437;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,35,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getJsonArrayValueAccess().getRightSquareBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJsonArrayValue"


    // $ANTLR start "entryRuleJsonValue"
    // InternalSCTX.g:15326:1: entryRuleJsonValue returns [EObject current=null] : iv_ruleJsonValue= ruleJsonValue EOF ;
    public final EObject entryRuleJsonValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJsonValue = null;


        try {
            // InternalSCTX.g:15326:50: (iv_ruleJsonValue= ruleJsonValue EOF )
            // InternalSCTX.g:15327:2: iv_ruleJsonValue= ruleJsonValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJsonValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleJsonValue=ruleJsonValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJsonValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJsonValue"


    // $ANTLR start "ruleJsonValue"
    // InternalSCTX.g:15333:1: ruleJsonValue returns [EObject current=null] : (this_JsonObjectValue_0= ruleJsonObjectValue | this_JsonArrayValue_1= ruleJsonArrayValue | this_NullValue_2= ruleNullValue | this_AnyValue_3= ruleAnyValue ) ;
    public final EObject ruleJsonValue() throws RecognitionException {
        EObject current = null;

        EObject this_JsonObjectValue_0 = null;

        EObject this_JsonArrayValue_1 = null;

        EObject this_NullValue_2 = null;

        EObject this_AnyValue_3 = null;



        	enterRule();

        try {
            // InternalSCTX.g:15339:2: ( (this_JsonObjectValue_0= ruleJsonObjectValue | this_JsonArrayValue_1= ruleJsonArrayValue | this_NullValue_2= ruleNullValue | this_AnyValue_3= ruleAnyValue ) )
            // InternalSCTX.g:15340:2: (this_JsonObjectValue_0= ruleJsonObjectValue | this_JsonArrayValue_1= ruleJsonArrayValue | this_NullValue_2= ruleNullValue | this_AnyValue_3= ruleAnyValue )
            {
            // InternalSCTX.g:15340:2: (this_JsonObjectValue_0= ruleJsonObjectValue | this_JsonArrayValue_1= ruleJsonArrayValue | this_NullValue_2= ruleNullValue | this_AnyValue_3= ruleAnyValue )
            int alt439=4;
            switch ( input.LA(1) ) {
            case 21:
                {
                alt439=1;
                }
                break;
            case 34:
                {
                alt439=2;
                }
                break;
            case 101:
                {
                alt439=3;
                }
                break;
            case RULE_STRING:
            case RULE_INT:
            case RULE_FLOAT:
            case RULE_BOOLEAN:
                {
                alt439=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 439, 0, input);

                throw nvae;
            }

            switch (alt439) {
                case 1 :
                    // InternalSCTX.g:15341:3: this_JsonObjectValue_0= ruleJsonObjectValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJsonValueAccess().getJsonObjectValueParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_JsonObjectValue_0=ruleJsonObjectValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JsonObjectValue_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:15353:3: this_JsonArrayValue_1= ruleJsonArrayValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJsonValueAccess().getJsonArrayValueParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_JsonArrayValue_1=ruleJsonArrayValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JsonArrayValue_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:15365:3: this_NullValue_2= ruleNullValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJsonValueAccess().getNullValueParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_NullValue_2=ruleNullValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NullValue_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSCTX.g:15377:3: this_AnyValue_3= ruleAnyValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJsonValueAccess().getAnyValueParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AnyValue_3=ruleAnyValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AnyValue_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJsonValue"


    // $ANTLR start "entryRuleNullValue"
    // InternalSCTX.g:15392:1: entryRuleNullValue returns [EObject current=null] : iv_ruleNullValue= ruleNullValue EOF ;
    public final EObject entryRuleNullValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNullValue = null;


        try {
            // InternalSCTX.g:15392:50: (iv_ruleNullValue= ruleNullValue EOF )
            // InternalSCTX.g:15393:2: iv_ruleNullValue= ruleNullValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNullValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNullValue=ruleNullValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNullValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNullValue"


    // $ANTLR start "ruleNullValue"
    // InternalSCTX.g:15399:1: ruleNullValue returns [EObject current=null] : ( () otherlv_1= 'null' ) ;
    public final EObject ruleNullValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;


        	enterRule();

        try {
            // InternalSCTX.g:15405:2: ( ( () otherlv_1= 'null' ) )
            // InternalSCTX.g:15406:2: ( () otherlv_1= 'null' )
            {
            // InternalSCTX.g:15406:2: ( () otherlv_1= 'null' )
            // InternalSCTX.g:15407:3: () otherlv_1= 'null'
            {
            // InternalSCTX.g:15407:3: ()
            // InternalSCTX.g:15408:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getNullValueAccess().getNullValueAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,101,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getNullValueAccess().getNullKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNullValue"


    // $ANTLR start "entryRuleJsonPragma"
    // InternalSCTX.g:15425:1: entryRuleJsonPragma returns [EObject current=null] : iv_ruleJsonPragma= ruleJsonPragma EOF ;
    public final EObject entryRuleJsonPragma() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJsonPragma = null;


        try {
            // InternalSCTX.g:15425:51: (iv_ruleJsonPragma= ruleJsonPragma EOF )
            // InternalSCTX.g:15426:2: iv_ruleJsonPragma= ruleJsonPragma EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJsonPragmaRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleJsonPragma=ruleJsonPragma();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJsonPragma; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJsonPragma"


    // $ANTLR start "ruleJsonPragma"
    // InternalSCTX.g:15432:1: ruleJsonPragma returns [EObject current=null] : (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) ) ) ;
    public final EObject ruleJsonPragma() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_value_2_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:15438:2: ( (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) ) ) )
            // InternalSCTX.g:15439:2: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) ) )
            {
            // InternalSCTX.g:15439:2: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) ) )
            // InternalSCTX.g:15440:3: otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) )
            {
            otherlv_0=(Token)match(input,102,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getJsonPragmaAccess().getNumberSignKeyword_0());
              		
            }
            // InternalSCTX.g:15444:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:15445:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:15445:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:15446:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJsonPragmaAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_110);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJsonPragmaRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:15463:3: ( (lv_value_2_0= ruleJsonObjectValue ) )
            // InternalSCTX.g:15464:4: (lv_value_2_0= ruleJsonObjectValue )
            {
            // InternalSCTX.g:15464:4: (lv_value_2_0= ruleJsonObjectValue )
            // InternalSCTX.g:15465:5: lv_value_2_0= ruleJsonObjectValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJsonPragmaAccess().getValueJsonObjectValueParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_value_2_0=ruleJsonObjectValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJsonPragmaRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_2_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.JsonObjectValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJsonPragma"


    // $ANTLR start "entryRuleJsonAnnotation"
    // InternalSCTX.g:15486:1: entryRuleJsonAnnotation returns [EObject current=null] : iv_ruleJsonAnnotation= ruleJsonAnnotation EOF ;
    public final EObject entryRuleJsonAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJsonAnnotation = null;


        try {
            // InternalSCTX.g:15486:55: (iv_ruleJsonAnnotation= ruleJsonAnnotation EOF )
            // InternalSCTX.g:15487:2: iv_ruleJsonAnnotation= ruleJsonAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJsonAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleJsonAnnotation=ruleJsonAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJsonAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJsonAnnotation"


    // $ANTLR start "ruleJsonAnnotation"
    // InternalSCTX.g:15493:1: ruleJsonAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) ) ) ;
    public final EObject ruleJsonAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_value_2_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:15499:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) ) ) )
            // InternalSCTX.g:15500:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) ) )
            {
            // InternalSCTX.g:15500:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) ) )
            // InternalSCTX.g:15501:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) )
            {
            otherlv_0=(Token)match(input,103,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getJsonAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
            // InternalSCTX.g:15505:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:15506:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:15506:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:15507:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJsonAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_110);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJsonAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:15524:3: ( (lv_value_2_0= ruleJsonObjectValue ) )
            // InternalSCTX.g:15525:4: (lv_value_2_0= ruleJsonObjectValue )
            {
            // InternalSCTX.g:15525:4: (lv_value_2_0= ruleJsonObjectValue )
            // InternalSCTX.g:15526:5: lv_value_2_0= ruleJsonObjectValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJsonAnnotationAccess().getValueJsonObjectValueParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_value_2_0=ruleJsonObjectValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJsonAnnotationRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_2_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.JsonObjectValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJsonAnnotation"


    // $ANTLR start "entryRulePragma"
    // InternalSCTX.g:15547:1: entryRulePragma returns [EObject current=null] : iv_rulePragma= rulePragma EOF ;
    public final EObject entryRulePragma() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePragma = null;


        try {
            // InternalSCTX.g:15547:47: (iv_rulePragma= rulePragma EOF )
            // InternalSCTX.g:15548:2: iv_rulePragma= rulePragma EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPragmaRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePragma=rulePragma();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePragma; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePragma"


    // $ANTLR start "rulePragma"
    // InternalSCTX.g:15554:1: rulePragma returns [EObject current=null] : (this_Pragma_0= superPragma | this_JsonPragma_1= ruleJsonPragma ) ;
    public final EObject rulePragma() throws RecognitionException {
        EObject current = null;

        EObject this_Pragma_0 = null;

        EObject this_JsonPragma_1 = null;



        	enterRule();

        try {
            // InternalSCTX.g:15560:2: ( (this_Pragma_0= superPragma | this_JsonPragma_1= ruleJsonPragma ) )
            // InternalSCTX.g:15561:2: (this_Pragma_0= superPragma | this_JsonPragma_1= ruleJsonPragma )
            {
            // InternalSCTX.g:15561:2: (this_Pragma_0= superPragma | this_JsonPragma_1= ruleJsonPragma )
            int alt440=2;
            alt440 = dfa440.predict(input);
            switch (alt440) {
                case 1 :
                    // InternalSCTX.g:15562:3: this_Pragma_0= superPragma
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPragmaAccess().getPragmaParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Pragma_0=superPragma();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Pragma_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:15574:3: this_JsonPragma_1= ruleJsonPragma
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPragmaAccess().getJsonPragmaParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_JsonPragma_1=ruleJsonPragma();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JsonPragma_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePragma"


    // $ANTLR start "entryRuleAnnotation"
    // InternalSCTX.g:15589:1: entryRuleAnnotation returns [EObject current=null] : iv_ruleAnnotation= ruleAnnotation EOF ;
    public final EObject entryRuleAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotation = null;


        try {
            // InternalSCTX.g:15589:51: (iv_ruleAnnotation= ruleAnnotation EOF )
            // InternalSCTX.g:15590:2: iv_ruleAnnotation= ruleAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAnnotation=ruleAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotation"


    // $ANTLR start "ruleAnnotation"
    // InternalSCTX.g:15596:1: ruleAnnotation returns [EObject current=null] : (this_Annotation_0= superAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation ) ;
    public final EObject ruleAnnotation() throws RecognitionException {
        EObject current = null;

        EObject this_Annotation_0 = null;

        EObject this_JsonAnnotation_1 = null;



        	enterRule();

        try {
            // InternalSCTX.g:15602:2: ( (this_Annotation_0= superAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation ) )
            // InternalSCTX.g:15603:2: (this_Annotation_0= superAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation )
            {
            // InternalSCTX.g:15603:2: (this_Annotation_0= superAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation )
            int alt441=2;
            alt441 = dfa441.predict(input);
            switch (alt441) {
                case 1 :
                    // InternalSCTX.g:15604:3: this_Annotation_0= superAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationAccess().getAnnotationParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Annotation_0=superAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Annotation_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:15616:3: this_JsonAnnotation_1= ruleJsonAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationAccess().getJsonAnnotationParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_JsonAnnotation_1=ruleJsonAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JsonAnnotation_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnnotation"


    // $ANTLR start "entryRuleQuotedStringAnnotation"
    // InternalSCTX.g:15631:1: entryRuleQuotedStringAnnotation returns [EObject current=null] : iv_ruleQuotedStringAnnotation= ruleQuotedStringAnnotation EOF ;
    public final EObject entryRuleQuotedStringAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQuotedStringAnnotation = null;


        try {
            // InternalSCTX.g:15631:63: (iv_ruleQuotedStringAnnotation= ruleQuotedStringAnnotation EOF )
            // InternalSCTX.g:15632:2: iv_ruleQuotedStringAnnotation= ruleQuotedStringAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQuotedStringAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleQuotedStringAnnotation=ruleQuotedStringAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQuotedStringAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQuotedStringAnnotation"


    // $ANTLR start "ruleQuotedStringAnnotation"
    // InternalSCTX.g:15638:1: ruleQuotedStringAnnotation returns [EObject current=null] : (this_QuotedStringAnnotation_0= superQuotedStringAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation ) ;
    public final EObject ruleQuotedStringAnnotation() throws RecognitionException {
        EObject current = null;

        EObject this_QuotedStringAnnotation_0 = null;

        EObject this_JsonAnnotation_1 = null;



        	enterRule();

        try {
            // InternalSCTX.g:15644:2: ( (this_QuotedStringAnnotation_0= superQuotedStringAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation ) )
            // InternalSCTX.g:15645:2: (this_QuotedStringAnnotation_0= superQuotedStringAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation )
            {
            // InternalSCTX.g:15645:2: (this_QuotedStringAnnotation_0= superQuotedStringAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation )
            int alt442=2;
            alt442 = dfa442.predict(input);
            switch (alt442) {
                case 1 :
                    // InternalSCTX.g:15646:3: this_QuotedStringAnnotation_0= superQuotedStringAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getQuotedStringAnnotationAccess().getQuotedStringAnnotationParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_QuotedStringAnnotation_0=superQuotedStringAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_QuotedStringAnnotation_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:15658:3: this_JsonAnnotation_1= ruleJsonAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getQuotedStringAnnotationAccess().getJsonAnnotationParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_JsonAnnotation_1=ruleJsonAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JsonAnnotation_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQuotedStringAnnotation"


    // $ANTLR start "entrySuperAnnotation"
    // InternalSCTX.g:15673:1: entrySuperAnnotation returns [EObject current=null] : iv_superAnnotation= superAnnotation EOF ;
    public final EObject entrySuperAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_superAnnotation = null;


        try {
            // InternalSCTX.g:15673:52: (iv_superAnnotation= superAnnotation EOF )
            // InternalSCTX.g:15674:2: iv_superAnnotation= superAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationsAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_superAnnotation=superAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_superAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entrySuperAnnotation"


    // $ANTLR start "superAnnotation"
    // InternalSCTX.g:15680:1: superAnnotation returns [EObject current=null] : (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) ;
    public final EObject superAnnotation() throws RecognitionException {
        EObject current = null;

        EObject this_CommentAnnotation_0 = null;

        EObject this_KeyStringValueAnnotation_1 = null;

        EObject this_TypedKeyStringValueAnnotation_2 = null;

        EObject this_TagAnnotation_3 = null;



        	enterRule();

        try {
            // InternalSCTX.g:15686:2: ( (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) )
            // InternalSCTX.g:15687:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            {
            // InternalSCTX.g:15687:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            int alt443=4;
            int LA443_0 = input.LA(1);

            if ( (LA443_0==RULE_COMMENT_ANNOTATION) ) {
                alt443=1;
            }
            else if ( (LA443_0==103) ) {
                int LA443_2 = input.LA(2);

                if ( (synpred498_InternalSCTX()) ) {
                    alt443=2;
                }
                else if ( (synpred499_InternalSCTX()) ) {
                    alt443=3;
                }
                else if ( (true) ) {
                    alt443=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 443, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 443, 0, input);

                throw nvae;
            }
            switch (alt443) {
                case 1 :
                    // InternalSCTX.g:15688:3: this_CommentAnnotation_0= ruleCommentAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsAnnotationAccess().getCommentAnnotationParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CommentAnnotation_0=ruleCommentAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_CommentAnnotation_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:15700:3: this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsAnnotationAccess().getKeyStringValueAnnotationParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_KeyStringValueAnnotation_1=ruleKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_KeyStringValueAnnotation_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:15712:3: this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsAnnotationAccess().getTypedKeyStringValueAnnotationParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TypedKeyStringValueAnnotation_2=ruleTypedKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TypedKeyStringValueAnnotation_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSCTX.g:15724:3: this_TagAnnotation_3= ruleTagAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsAnnotationAccess().getTagAnnotationParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TagAnnotation_3=ruleTagAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TagAnnotation_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "superAnnotation"


    // $ANTLR start "entrySuperPragma"
    // InternalSCTX.g:15739:1: entrySuperPragma returns [EObject current=null] : iv_superPragma= superPragma EOF ;
    public final EObject entrySuperPragma() throws RecognitionException {
        EObject current = null;

        EObject iv_superPragma = null;


        try {
            // InternalSCTX.g:15739:48: (iv_superPragma= superPragma EOF )
            // InternalSCTX.g:15740:2: iv_superPragma= superPragma EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationsPragmaRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_superPragma=superPragma();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_superPragma; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entrySuperPragma"


    // $ANTLR start "superPragma"
    // InternalSCTX.g:15746:1: superPragma returns [EObject current=null] : (this_StringPragma_0= ruleStringPragma | this_PragmaTag_1= rulePragmaTag ) ;
    public final EObject superPragma() throws RecognitionException {
        EObject current = null;

        EObject this_StringPragma_0 = null;

        EObject this_PragmaTag_1 = null;



        	enterRule();

        try {
            // InternalSCTX.g:15752:2: ( (this_StringPragma_0= ruleStringPragma | this_PragmaTag_1= rulePragmaTag ) )
            // InternalSCTX.g:15753:2: (this_StringPragma_0= ruleStringPragma | this_PragmaTag_1= rulePragmaTag )
            {
            // InternalSCTX.g:15753:2: (this_StringPragma_0= ruleStringPragma | this_PragmaTag_1= rulePragmaTag )
            int alt444=2;
            alt444 = dfa444.predict(input);
            switch (alt444) {
                case 1 :
                    // InternalSCTX.g:15754:3: this_StringPragma_0= ruleStringPragma
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsPragmaAccess().getStringPragmaParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_StringPragma_0=ruleStringPragma();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_StringPragma_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:15766:3: this_PragmaTag_1= rulePragmaTag
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsPragmaAccess().getPragmaTagParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PragmaTag_1=rulePragmaTag();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PragmaTag_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "superPragma"


    // $ANTLR start "entrySuperValuedAnnotation"
    // InternalSCTX.g:15781:1: entrySuperValuedAnnotation returns [EObject current=null] : iv_superValuedAnnotation= superValuedAnnotation EOF ;
    public final EObject entrySuperValuedAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_superValuedAnnotation = null;


        try {
            // InternalSCTX.g:15781:58: (iv_superValuedAnnotation= superValuedAnnotation EOF )
            // InternalSCTX.g:15782:2: iv_superValuedAnnotation= superValuedAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationsValuedAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_superValuedAnnotation=superValuedAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_superValuedAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entrySuperValuedAnnotation"


    // $ANTLR start "superValuedAnnotation"
    // InternalSCTX.g:15788:1: superValuedAnnotation returns [EObject current=null] : (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation ) ;
    public final EObject superValuedAnnotation() throws RecognitionException {
        EObject current = null;

        EObject this_CommentAnnotation_0 = null;

        EObject this_KeyStringValueAnnotation_1 = null;

        EObject this_TypedKeyStringValueAnnotation_2 = null;



        	enterRule();

        try {
            // InternalSCTX.g:15794:2: ( (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation ) )
            // InternalSCTX.g:15795:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation )
            {
            // InternalSCTX.g:15795:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation )
            int alt445=3;
            alt445 = dfa445.predict(input);
            switch (alt445) {
                case 1 :
                    // InternalSCTX.g:15796:3: this_CommentAnnotation_0= ruleCommentAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsValuedAnnotationAccess().getCommentAnnotationParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CommentAnnotation_0=ruleCommentAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_CommentAnnotation_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:15808:3: this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsValuedAnnotationAccess().getKeyStringValueAnnotationParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_KeyStringValueAnnotation_1=ruleKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_KeyStringValueAnnotation_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:15820:3: this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsValuedAnnotationAccess().getTypedKeyStringValueAnnotationParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TypedKeyStringValueAnnotation_2=ruleTypedKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TypedKeyStringValueAnnotation_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "superValuedAnnotation"


    // $ANTLR start "entryRuleRestrictedTypeAnnotation"
    // InternalSCTX.g:15835:1: entryRuleRestrictedTypeAnnotation returns [EObject current=null] : iv_ruleRestrictedTypeAnnotation= ruleRestrictedTypeAnnotation EOF ;
    public final EObject entryRuleRestrictedTypeAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRestrictedTypeAnnotation = null;


        try {
            // InternalSCTX.g:15835:65: (iv_ruleRestrictedTypeAnnotation= ruleRestrictedTypeAnnotation EOF )
            // InternalSCTX.g:15836:2: iv_ruleRestrictedTypeAnnotation= ruleRestrictedTypeAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRestrictedTypeAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRestrictedTypeAnnotation=ruleRestrictedTypeAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRestrictedTypeAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRestrictedTypeAnnotation"


    // $ANTLR start "ruleRestrictedTypeAnnotation"
    // InternalSCTX.g:15842:1: ruleRestrictedTypeAnnotation returns [EObject current=null] : (this_CommentAnnotation_0= ruleCommentAnnotation | this_RestrictedKeyStringValueAnnotation_1= ruleRestrictedKeyStringValueAnnotation | this_RestrictedTypedKeyStringValueAnnotation_2= ruleRestrictedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) ;
    public final EObject ruleRestrictedTypeAnnotation() throws RecognitionException {
        EObject current = null;

        EObject this_CommentAnnotation_0 = null;

        EObject this_RestrictedKeyStringValueAnnotation_1 = null;

        EObject this_RestrictedTypedKeyStringValueAnnotation_2 = null;

        EObject this_TagAnnotation_3 = null;



        	enterRule();

        try {
            // InternalSCTX.g:15848:2: ( (this_CommentAnnotation_0= ruleCommentAnnotation | this_RestrictedKeyStringValueAnnotation_1= ruleRestrictedKeyStringValueAnnotation | this_RestrictedTypedKeyStringValueAnnotation_2= ruleRestrictedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) )
            // InternalSCTX.g:15849:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_RestrictedKeyStringValueAnnotation_1= ruleRestrictedKeyStringValueAnnotation | this_RestrictedTypedKeyStringValueAnnotation_2= ruleRestrictedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            {
            // InternalSCTX.g:15849:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_RestrictedKeyStringValueAnnotation_1= ruleRestrictedKeyStringValueAnnotation | this_RestrictedTypedKeyStringValueAnnotation_2= ruleRestrictedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            int alt446=4;
            alt446 = dfa446.predict(input);
            switch (alt446) {
                case 1 :
                    // InternalSCTX.g:15850:3: this_CommentAnnotation_0= ruleCommentAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getRestrictedTypeAnnotationAccess().getCommentAnnotationParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CommentAnnotation_0=ruleCommentAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_CommentAnnotation_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:15862:3: this_RestrictedKeyStringValueAnnotation_1= ruleRestrictedKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getRestrictedTypeAnnotationAccess().getRestrictedKeyStringValueAnnotationParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_RestrictedKeyStringValueAnnotation_1=ruleRestrictedKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_RestrictedKeyStringValueAnnotation_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:15874:3: this_RestrictedTypedKeyStringValueAnnotation_2= ruleRestrictedTypedKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getRestrictedTypeAnnotationAccess().getRestrictedTypedKeyStringValueAnnotationParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_RestrictedTypedKeyStringValueAnnotation_2=ruleRestrictedTypedKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_RestrictedTypedKeyStringValueAnnotation_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSCTX.g:15886:3: this_TagAnnotation_3= ruleTagAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getRestrictedTypeAnnotationAccess().getTagAnnotationParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TagAnnotation_3=ruleTagAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TagAnnotation_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRestrictedTypeAnnotation"


    // $ANTLR start "entrySuperQuotedStringAnnotation"
    // InternalSCTX.g:15901:1: entrySuperQuotedStringAnnotation returns [EObject current=null] : iv_superQuotedStringAnnotation= superQuotedStringAnnotation EOF ;
    public final EObject entrySuperQuotedStringAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_superQuotedStringAnnotation = null;


        try {
            // InternalSCTX.g:15901:64: (iv_superQuotedStringAnnotation= superQuotedStringAnnotation EOF )
            // InternalSCTX.g:15902:2: iv_superQuotedStringAnnotation= superQuotedStringAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationsQuotedStringAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_superQuotedStringAnnotation=superQuotedStringAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_superQuotedStringAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entrySuperQuotedStringAnnotation"


    // $ANTLR start "superQuotedStringAnnotation"
    // InternalSCTX.g:15908:1: superQuotedStringAnnotation returns [EObject current=null] : (this_CommentAnnotation_0= ruleCommentAnnotation | this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation | this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) ;
    public final EObject superQuotedStringAnnotation() throws RecognitionException {
        EObject current = null;

        EObject this_CommentAnnotation_0 = null;

        EObject this_QuotedKeyStringValueAnnotation_1 = null;

        EObject this_QuotedTypedKeyStringValueAnnotation_2 = null;

        EObject this_TagAnnotation_3 = null;



        	enterRule();

        try {
            // InternalSCTX.g:15914:2: ( (this_CommentAnnotation_0= ruleCommentAnnotation | this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation | this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) )
            // InternalSCTX.g:15915:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation | this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            {
            // InternalSCTX.g:15915:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation | this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            int alt447=4;
            alt447 = dfa447.predict(input);
            switch (alt447) {
                case 1 :
                    // InternalSCTX.g:15916:3: this_CommentAnnotation_0= ruleCommentAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsQuotedStringAnnotationAccess().getCommentAnnotationParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CommentAnnotation_0=ruleCommentAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_CommentAnnotation_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:15928:3: this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsQuotedStringAnnotationAccess().getQuotedKeyStringValueAnnotationParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_QuotedKeyStringValueAnnotation_1=ruleQuotedKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_QuotedKeyStringValueAnnotation_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:15940:3: this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsQuotedStringAnnotationAccess().getQuotedTypedKeyStringValueAnnotationParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_QuotedTypedKeyStringValueAnnotation_2=ruleQuotedTypedKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_QuotedTypedKeyStringValueAnnotation_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSCTX.g:15952:3: this_TagAnnotation_3= ruleTagAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsQuotedStringAnnotationAccess().getTagAnnotationParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TagAnnotation_3=ruleTagAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TagAnnotation_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "superQuotedStringAnnotation"


    // $ANTLR start "entryRuleCommentAnnotation"
    // InternalSCTX.g:15967:1: entryRuleCommentAnnotation returns [EObject current=null] : iv_ruleCommentAnnotation= ruleCommentAnnotation EOF ;
    public final EObject entryRuleCommentAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCommentAnnotation = null;


        try {
            // InternalSCTX.g:15967:58: (iv_ruleCommentAnnotation= ruleCommentAnnotation EOF )
            // InternalSCTX.g:15968:2: iv_ruleCommentAnnotation= ruleCommentAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCommentAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCommentAnnotation=ruleCommentAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCommentAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCommentAnnotation"


    // $ANTLR start "ruleCommentAnnotation"
    // InternalSCTX.g:15974:1: ruleCommentAnnotation returns [EObject current=null] : ( (lv_values_0_0= RULE_COMMENT_ANNOTATION ) ) ;
    public final EObject ruleCommentAnnotation() throws RecognitionException {
        EObject current = null;

        Token lv_values_0_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:15980:2: ( ( (lv_values_0_0= RULE_COMMENT_ANNOTATION ) ) )
            // InternalSCTX.g:15981:2: ( (lv_values_0_0= RULE_COMMENT_ANNOTATION ) )
            {
            // InternalSCTX.g:15981:2: ( (lv_values_0_0= RULE_COMMENT_ANNOTATION ) )
            // InternalSCTX.g:15982:3: (lv_values_0_0= RULE_COMMENT_ANNOTATION )
            {
            // InternalSCTX.g:15982:3: (lv_values_0_0= RULE_COMMENT_ANNOTATION )
            // InternalSCTX.g:15983:4: lv_values_0_0= RULE_COMMENT_ANNOTATION
            {
            lv_values_0_0=(Token)match(input,RULE_COMMENT_ANNOTATION,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_values_0_0, grammarAccess.getCommentAnnotationAccess().getValuesCOMMENT_ANNOTATIONTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getCommentAnnotationRule());
              				}
              				addWithLastConsumed(
              					current,
              					"values",
              					lv_values_0_0,
              					"de.cau.cs.kieler.annotations.Annotations.COMMENT_ANNOTATION");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCommentAnnotation"


    // $ANTLR start "entryRuleCommentAnnotatonSL"
    // InternalSCTX.g:16002:1: entryRuleCommentAnnotatonSL returns [EObject current=null] : iv_ruleCommentAnnotatonSL= ruleCommentAnnotatonSL EOF ;
    public final EObject entryRuleCommentAnnotatonSL() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCommentAnnotatonSL = null;


        try {
            // InternalSCTX.g:16002:59: (iv_ruleCommentAnnotatonSL= ruleCommentAnnotatonSL EOF )
            // InternalSCTX.g:16003:2: iv_ruleCommentAnnotatonSL= ruleCommentAnnotatonSL EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCommentAnnotatonSLRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCommentAnnotatonSL=ruleCommentAnnotatonSL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCommentAnnotatonSL; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCommentAnnotatonSL"


    // $ANTLR start "ruleCommentAnnotatonSL"
    // InternalSCTX.g:16009:1: ruleCommentAnnotatonSL returns [EObject current=null] : ( (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION ) ) ;
    public final EObject ruleCommentAnnotatonSL() throws RecognitionException {
        EObject current = null;

        Token lv_values_0_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:16015:2: ( ( (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION ) ) )
            // InternalSCTX.g:16016:2: ( (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION ) )
            {
            // InternalSCTX.g:16016:2: ( (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION ) )
            // InternalSCTX.g:16017:3: (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION )
            {
            // InternalSCTX.g:16017:3: (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION )
            // InternalSCTX.g:16018:4: lv_values_0_0= RULE_SL_COMMENT_ANNOTATION
            {
            lv_values_0_0=(Token)match(input,RULE_SL_COMMENT_ANNOTATION,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_values_0_0, grammarAccess.getCommentAnnotatonSLAccess().getValuesSL_COMMENT_ANNOTATIONTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getCommentAnnotatonSLRule());
              				}
              				addWithLastConsumed(
              					current,
              					"values",
              					lv_values_0_0,
              					"de.cau.cs.kieler.annotations.Annotations.SL_COMMENT_ANNOTATION");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCommentAnnotatonSL"


    // $ANTLR start "entryRuleTagAnnotation"
    // InternalSCTX.g:16037:1: entryRuleTagAnnotation returns [EObject current=null] : iv_ruleTagAnnotation= ruleTagAnnotation EOF ;
    public final EObject entryRuleTagAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTagAnnotation = null;


        try {
            // InternalSCTX.g:16037:54: (iv_ruleTagAnnotation= ruleTagAnnotation EOF )
            // InternalSCTX.g:16038:2: iv_ruleTagAnnotation= ruleTagAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTagAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTagAnnotation=ruleTagAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTagAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTagAnnotation"


    // $ANTLR start "ruleTagAnnotation"
    // InternalSCTX.g:16044:1: ruleTagAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ) ;
    public final EObject ruleTagAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:16050:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ) )
            // InternalSCTX.g:16051:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) )
            {
            // InternalSCTX.g:16051:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) )
            // InternalSCTX.g:16052:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) )
            {
            otherlv_0=(Token)match(input,103,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getTagAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
            // InternalSCTX.g:16056:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:16057:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:16057:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:16058:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTagAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTagAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTagAnnotation"


    // $ANTLR start "entryRulePragmaTag"
    // InternalSCTX.g:16079:1: entryRulePragmaTag returns [EObject current=null] : iv_rulePragmaTag= rulePragmaTag EOF ;
    public final EObject entryRulePragmaTag() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePragmaTag = null;


        try {
            // InternalSCTX.g:16079:50: (iv_rulePragmaTag= rulePragmaTag EOF )
            // InternalSCTX.g:16080:2: iv_rulePragmaTag= rulePragmaTag EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPragmaTagRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePragmaTag=rulePragmaTag();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePragmaTag; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePragmaTag"


    // $ANTLR start "rulePragmaTag"
    // InternalSCTX.g:16086:1: rulePragmaTag returns [EObject current=null] : (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ) ;
    public final EObject rulePragmaTag() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:16092:2: ( (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ) )
            // InternalSCTX.g:16093:2: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) )
            {
            // InternalSCTX.g:16093:2: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) )
            // InternalSCTX.g:16094:3: otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) )
            {
            otherlv_0=(Token)match(input,102,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getPragmaTagAccess().getNumberSignKeyword_0());
              		
            }
            // InternalSCTX.g:16098:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:16099:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:16099:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:16100:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPragmaTagAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPragmaTagRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePragmaTag"


    // $ANTLR start "entryRuleKeyStringValueAnnotation"
    // InternalSCTX.g:16121:1: entryRuleKeyStringValueAnnotation returns [EObject current=null] : iv_ruleKeyStringValueAnnotation= ruleKeyStringValueAnnotation EOF ;
    public final EObject entryRuleKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleKeyStringValueAnnotation = null;


        try {
            // InternalSCTX.g:16121:65: (iv_ruleKeyStringValueAnnotation= ruleKeyStringValueAnnotation EOF )
            // InternalSCTX.g:16122:2: iv_ruleKeyStringValueAnnotation= ruleKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleKeyStringValueAnnotation=ruleKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleKeyStringValueAnnotation"


    // $ANTLR start "ruleKeyStringValueAnnotation"
    // InternalSCTX.g:16128:1: ruleKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* ) ;
    public final EObject ruleKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_values_2_0 = null;

        AntlrDatatypeRuleToken lv_values_4_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:16134:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* ) )
            // InternalSCTX.g:16135:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* )
            {
            // InternalSCTX.g:16135:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* )
            // InternalSCTX.g:16136:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )*
            {
            otherlv_0=(Token)match(input,103,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
            // InternalSCTX.g:16140:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:16141:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:16141:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:16142:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_212);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:16159:3: ( (lv_values_2_0= ruleEStringAllTypes ) )
            // InternalSCTX.g:16160:4: (lv_values_2_0= ruleEStringAllTypes )
            {
            // InternalSCTX.g:16160:4: (lv_values_2_0= ruleEStringAllTypes )
            // InternalSCTX.g:16161:5: lv_values_2_0= ruleEStringAllTypes
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_213);
            lv_values_2_0=ruleEStringAllTypes();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getKeyStringValueAnnotationRule());
              					}
              					add(
              						current,
              						"values",
              						lv_values_2_0,
              						"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:16178:3: (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )*
            loop448:
            do {
                int alt448=2;
                int LA448_0 = input.LA(1);

                if ( (LA448_0==20) ) {
                    alt448=1;
                }


                switch (alt448) {
            	case 1 :
            	    // InternalSCTX.g:16179:4: otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) )
            	    {
            	    otherlv_3=(Token)match(input,20,FollowSets000.FOLLOW_212); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getKeyStringValueAnnotationAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalSCTX.g:16183:4: ( (lv_values_4_0= ruleEStringAllTypes ) )
            	    // InternalSCTX.g:16184:5: (lv_values_4_0= ruleEStringAllTypes )
            	    {
            	    // InternalSCTX.g:16184:5: (lv_values_4_0= ruleEStringAllTypes )
            	    // InternalSCTX.g:16185:6: lv_values_4_0= ruleEStringAllTypes
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_213);
            	    lv_values_4_0=ruleEStringAllTypes();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getKeyStringValueAnnotationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"values",
            	      							lv_values_4_0,
            	      							"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop448;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleKeyStringValueAnnotation"


    // $ANTLR start "entryRuleRestrictedKeyStringValueAnnotation"
    // InternalSCTX.g:16207:1: entryRuleRestrictedKeyStringValueAnnotation returns [EObject current=null] : iv_ruleRestrictedKeyStringValueAnnotation= ruleRestrictedKeyStringValueAnnotation EOF ;
    public final EObject entryRuleRestrictedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRestrictedKeyStringValueAnnotation = null;


        try {
            // InternalSCTX.g:16207:75: (iv_ruleRestrictedKeyStringValueAnnotation= ruleRestrictedKeyStringValueAnnotation EOF )
            // InternalSCTX.g:16208:2: iv_ruleRestrictedKeyStringValueAnnotation= ruleRestrictedKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRestrictedKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRestrictedKeyStringValueAnnotation=ruleRestrictedKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRestrictedKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRestrictedKeyStringValueAnnotation"


    // $ANTLR start "ruleRestrictedKeyStringValueAnnotation"
    // InternalSCTX.g:16214:1: ruleRestrictedKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringBoolean ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )* ) ;
    public final EObject ruleRestrictedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_values_2_0 = null;

        AntlrDatatypeRuleToken lv_values_4_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:16220:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringBoolean ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )* ) )
            // InternalSCTX.g:16221:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringBoolean ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )* )
            {
            // InternalSCTX.g:16221:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringBoolean ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )* )
            // InternalSCTX.g:16222:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringBoolean ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )*
            {
            otherlv_0=(Token)match(input,103,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
            // InternalSCTX.g:16226:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:16227:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:16227:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:16228:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_214);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRestrictedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:16245:3: ( (lv_values_2_0= ruleEStringBoolean ) )
            // InternalSCTX.g:16246:4: (lv_values_2_0= ruleEStringBoolean )
            {
            // InternalSCTX.g:16246:4: (lv_values_2_0= ruleEStringBoolean )
            // InternalSCTX.g:16247:5: lv_values_2_0= ruleEStringBoolean
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_213);
            lv_values_2_0=ruleEStringBoolean();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRestrictedKeyStringValueAnnotationRule());
              					}
              					add(
              						current,
              						"values",
              						lv_values_2_0,
              						"de.cau.cs.kieler.annotations.Annotations.EStringBoolean");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:16264:3: (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )*
            loop449:
            do {
                int alt449=2;
                int LA449_0 = input.LA(1);

                if ( (LA449_0==20) ) {
                    alt449=1;
                }


                switch (alt449) {
            	case 1 :
            	    // InternalSCTX.g:16265:4: otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) )
            	    {
            	    otherlv_3=(Token)match(input,20,FollowSets000.FOLLOW_214); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalSCTX.g:16269:4: ( (lv_values_4_0= ruleEStringBoolean ) )
            	    // InternalSCTX.g:16270:5: (lv_values_4_0= ruleEStringBoolean )
            	    {
            	    // InternalSCTX.g:16270:5: (lv_values_4_0= ruleEStringBoolean )
            	    // InternalSCTX.g:16271:6: lv_values_4_0= ruleEStringBoolean
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_213);
            	    lv_values_4_0=ruleEStringBoolean();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getRestrictedKeyStringValueAnnotationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"values",
            	      							lv_values_4_0,
            	      							"de.cau.cs.kieler.annotations.Annotations.EStringBoolean");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop449;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRestrictedKeyStringValueAnnotation"


    // $ANTLR start "entryRuleStringPragma"
    // InternalSCTX.g:16293:1: entryRuleStringPragma returns [EObject current=null] : iv_ruleStringPragma= ruleStringPragma EOF ;
    public final EObject entryRuleStringPragma() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStringPragma = null;


        try {
            // InternalSCTX.g:16293:53: (iv_ruleStringPragma= ruleStringPragma EOF )
            // InternalSCTX.g:16294:2: iv_ruleStringPragma= ruleStringPragma EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStringPragmaRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStringPragma=ruleStringPragma();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStringPragma; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStringPragma"


    // $ANTLR start "ruleStringPragma"
    // InternalSCTX.g:16300:1: ruleStringPragma returns [EObject current=null] : (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* ) ;
    public final EObject ruleStringPragma() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_values_2_0 = null;

        AntlrDatatypeRuleToken lv_values_4_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:16306:2: ( (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* ) )
            // InternalSCTX.g:16307:2: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* )
            {
            // InternalSCTX.g:16307:2: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* )
            // InternalSCTX.g:16308:3: otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )*
            {
            otherlv_0=(Token)match(input,102,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getStringPragmaAccess().getNumberSignKeyword_0());
              		
            }
            // InternalSCTX.g:16312:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:16313:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:16313:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:16314:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getStringPragmaAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_212);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getStringPragmaRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:16331:3: ( (lv_values_2_0= ruleEStringAllTypes ) )
            // InternalSCTX.g:16332:4: (lv_values_2_0= ruleEStringAllTypes )
            {
            // InternalSCTX.g:16332:4: (lv_values_2_0= ruleEStringAllTypes )
            // InternalSCTX.g:16333:5: lv_values_2_0= ruleEStringAllTypes
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getStringPragmaAccess().getValuesEStringAllTypesParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_213);
            lv_values_2_0=ruleEStringAllTypes();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getStringPragmaRule());
              					}
              					add(
              						current,
              						"values",
              						lv_values_2_0,
              						"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:16350:3: (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )*
            loop450:
            do {
                int alt450=2;
                int LA450_0 = input.LA(1);

                if ( (LA450_0==20) ) {
                    alt450=1;
                }


                switch (alt450) {
            	case 1 :
            	    // InternalSCTX.g:16351:4: otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) )
            	    {
            	    otherlv_3=(Token)match(input,20,FollowSets000.FOLLOW_212); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getStringPragmaAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalSCTX.g:16355:4: ( (lv_values_4_0= ruleEStringAllTypes ) )
            	    // InternalSCTX.g:16356:5: (lv_values_4_0= ruleEStringAllTypes )
            	    {
            	    // InternalSCTX.g:16356:5: (lv_values_4_0= ruleEStringAllTypes )
            	    // InternalSCTX.g:16357:6: lv_values_4_0= ruleEStringAllTypes
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getStringPragmaAccess().getValuesEStringAllTypesParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_213);
            	    lv_values_4_0=ruleEStringAllTypes();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getStringPragmaRule());
            	      						}
            	      						add(
            	      							current,
            	      							"values",
            	      							lv_values_4_0,
            	      							"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop450;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStringPragma"


    // $ANTLR start "entryRuleTypedKeyStringValueAnnotation"
    // InternalSCTX.g:16379:1: entryRuleTypedKeyStringValueAnnotation returns [EObject current=null] : iv_ruleTypedKeyStringValueAnnotation= ruleTypedKeyStringValueAnnotation EOF ;
    public final EObject entryRuleTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypedKeyStringValueAnnotation = null;


        try {
            // InternalSCTX.g:16379:70: (iv_ruleTypedKeyStringValueAnnotation= ruleTypedKeyStringValueAnnotation EOF )
            // InternalSCTX.g:16380:2: iv_ruleTypedKeyStringValueAnnotation= ruleTypedKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypedKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypedKeyStringValueAnnotation=ruleTypedKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypedKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypedKeyStringValueAnnotation"


    // $ANTLR start "ruleTypedKeyStringValueAnnotation"
    // InternalSCTX.g:16386:1: ruleTypedKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringAllTypes ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )* ) ;
    public final EObject ruleTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_type_3_0 = null;

        AntlrDatatypeRuleToken lv_values_5_0 = null;

        AntlrDatatypeRuleToken lv_values_7_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:16392:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringAllTypes ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )* ) )
            // InternalSCTX.g:16393:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringAllTypes ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )* )
            {
            // InternalSCTX.g:16393:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringAllTypes ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )* )
            // InternalSCTX.g:16394:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringAllTypes ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )*
            {
            otherlv_0=(Token)match(input,103,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getTypedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
            // InternalSCTX.g:16398:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:16399:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:16399:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:16400:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_215);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,34,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getTypedKeyStringValueAnnotationAccess().getLeftSquareBracketKeyword_2());
              		
            }
            // InternalSCTX.g:16421:3: ( (lv_type_3_0= ruleExtendedID ) )
            // InternalSCTX.g:16422:4: (lv_type_3_0= ruleExtendedID )
            {
            // InternalSCTX.g:16422:4: (lv_type_3_0= ruleExtendedID )
            // InternalSCTX.g:16423:5: lv_type_3_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypedKeyStringValueAnnotationAccess().getTypeExtendedIDParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_36);
            lv_type_3_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_3_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,35,FollowSets000.FOLLOW_212); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getTypedKeyStringValueAnnotationAccess().getRightSquareBracketKeyword_4());
              		
            }
            // InternalSCTX.g:16444:3: ( (lv_values_5_0= ruleEStringAllTypes ) )
            // InternalSCTX.g:16445:4: (lv_values_5_0= ruleEStringAllTypes )
            {
            // InternalSCTX.g:16445:4: (lv_values_5_0= ruleEStringAllTypes )
            // InternalSCTX.g:16446:5: lv_values_5_0= ruleEStringAllTypes
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_5_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_213);
            lv_values_5_0=ruleEStringAllTypes();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypedKeyStringValueAnnotationRule());
              					}
              					add(
              						current,
              						"values",
              						lv_values_5_0,
              						"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:16463:3: (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )*
            loop451:
            do {
                int alt451=2;
                int LA451_0 = input.LA(1);

                if ( (LA451_0==20) ) {
                    alt451=1;
                }


                switch (alt451) {
            	case 1 :
            	    // InternalSCTX.g:16464:4: otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) )
            	    {
            	    otherlv_6=(Token)match(input,20,FollowSets000.FOLLOW_212); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_6, grammarAccess.getTypedKeyStringValueAnnotationAccess().getCommaKeyword_6_0());
            	      			
            	    }
            	    // InternalSCTX.g:16468:4: ( (lv_values_7_0= ruleEStringAllTypes ) )
            	    // InternalSCTX.g:16469:5: (lv_values_7_0= ruleEStringAllTypes )
            	    {
            	    // InternalSCTX.g:16469:5: (lv_values_7_0= ruleEStringAllTypes )
            	    // InternalSCTX.g:16470:6: lv_values_7_0= ruleEStringAllTypes
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_6_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_213);
            	    lv_values_7_0=ruleEStringAllTypes();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTypedKeyStringValueAnnotationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"values",
            	      							lv_values_7_0,
            	      							"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop451;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypedKeyStringValueAnnotation"


    // $ANTLR start "entryRuleRestrictedTypedKeyStringValueAnnotation"
    // InternalSCTX.g:16492:1: entryRuleRestrictedTypedKeyStringValueAnnotation returns [EObject current=null] : iv_ruleRestrictedTypedKeyStringValueAnnotation= ruleRestrictedTypedKeyStringValueAnnotation EOF ;
    public final EObject entryRuleRestrictedTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRestrictedTypedKeyStringValueAnnotation = null;


        try {
            // InternalSCTX.g:16492:80: (iv_ruleRestrictedTypedKeyStringValueAnnotation= ruleRestrictedTypedKeyStringValueAnnotation EOF )
            // InternalSCTX.g:16493:2: iv_ruleRestrictedTypedKeyStringValueAnnotation= ruleRestrictedTypedKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRestrictedTypedKeyStringValueAnnotation=ruleRestrictedTypedKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRestrictedTypedKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRestrictedTypedKeyStringValueAnnotation"


    // $ANTLR start "ruleRestrictedTypedKeyStringValueAnnotation"
    // InternalSCTX.g:16499:1: ruleRestrictedTypedKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringBoolean ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )* ) ;
    public final EObject ruleRestrictedTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_type_3_0 = null;

        AntlrDatatypeRuleToken lv_values_5_0 = null;

        AntlrDatatypeRuleToken lv_values_7_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:16505:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringBoolean ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )* ) )
            // InternalSCTX.g:16506:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringBoolean ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )* )
            {
            // InternalSCTX.g:16506:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringBoolean ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )* )
            // InternalSCTX.g:16507:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringBoolean ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )*
            {
            otherlv_0=(Token)match(input,103,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
            // InternalSCTX.g:16511:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:16512:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:16512:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:16513:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_215);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,34,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getLeftSquareBracketKeyword_2());
              		
            }
            // InternalSCTX.g:16534:3: ( (lv_type_3_0= ruleExtendedID ) )
            // InternalSCTX.g:16535:4: (lv_type_3_0= ruleExtendedID )
            {
            // InternalSCTX.g:16535:4: (lv_type_3_0= ruleExtendedID )
            // InternalSCTX.g:16536:5: lv_type_3_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getTypeExtendedIDParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_36);
            lv_type_3_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_3_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,35,FollowSets000.FOLLOW_214); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getRightSquareBracketKeyword_4());
              		
            }
            // InternalSCTX.g:16557:3: ( (lv_values_5_0= ruleEStringBoolean ) )
            // InternalSCTX.g:16558:4: (lv_values_5_0= ruleEStringBoolean )
            {
            // InternalSCTX.g:16558:4: (lv_values_5_0= ruleEStringBoolean )
            // InternalSCTX.g:16559:5: lv_values_5_0= ruleEStringBoolean
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_5_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_213);
            lv_values_5_0=ruleEStringBoolean();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule());
              					}
              					add(
              						current,
              						"values",
              						lv_values_5_0,
              						"de.cau.cs.kieler.annotations.Annotations.EStringBoolean");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:16576:3: (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )*
            loop452:
            do {
                int alt452=2;
                int LA452_0 = input.LA(1);

                if ( (LA452_0==20) ) {
                    alt452=1;
                }


                switch (alt452) {
            	case 1 :
            	    // InternalSCTX.g:16577:4: otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) )
            	    {
            	    otherlv_6=(Token)match(input,20,FollowSets000.FOLLOW_214); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_6, grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getCommaKeyword_6_0());
            	      			
            	    }
            	    // InternalSCTX.g:16581:4: ( (lv_values_7_0= ruleEStringBoolean ) )
            	    // InternalSCTX.g:16582:5: (lv_values_7_0= ruleEStringBoolean )
            	    {
            	    // InternalSCTX.g:16582:5: (lv_values_7_0= ruleEStringBoolean )
            	    // InternalSCTX.g:16583:6: lv_values_7_0= ruleEStringBoolean
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_6_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_213);
            	    lv_values_7_0=ruleEStringBoolean();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"values",
            	      							lv_values_7_0,
            	      							"de.cau.cs.kieler.annotations.Annotations.EStringBoolean");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop452;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRestrictedTypedKeyStringValueAnnotation"


    // $ANTLR start "entryRuleQuotedKeyStringValueAnnotation"
    // InternalSCTX.g:16605:1: entryRuleQuotedKeyStringValueAnnotation returns [EObject current=null] : iv_ruleQuotedKeyStringValueAnnotation= ruleQuotedKeyStringValueAnnotation EOF ;
    public final EObject entryRuleQuotedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQuotedKeyStringValueAnnotation = null;


        try {
            // InternalSCTX.g:16605:71: (iv_ruleQuotedKeyStringValueAnnotation= ruleQuotedKeyStringValueAnnotation EOF )
            // InternalSCTX.g:16606:2: iv_ruleQuotedKeyStringValueAnnotation= ruleQuotedKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQuotedKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleQuotedKeyStringValueAnnotation=ruleQuotedKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQuotedKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQuotedKeyStringValueAnnotation"


    // $ANTLR start "ruleQuotedKeyStringValueAnnotation"
    // InternalSCTX.g:16612:1: ruleQuotedKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )* ) ;
    public final EObject ruleQuotedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_values_2_0=null;
        Token otherlv_3=null;
        Token lv_values_4_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:16618:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )* ) )
            // InternalSCTX.g:16619:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )* )
            {
            // InternalSCTX.g:16619:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )* )
            // InternalSCTX.g:16620:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )*
            {
            otherlv_0=(Token)match(input,103,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getQuotedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
            // InternalSCTX.g:16624:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:16625:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:16625:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:16626:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_47);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getQuotedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCTX.g:16643:3: ( (lv_values_2_0= RULE_STRING ) )
            // InternalSCTX.g:16644:4: (lv_values_2_0= RULE_STRING )
            {
            // InternalSCTX.g:16644:4: (lv_values_2_0= RULE_STRING )
            // InternalSCTX.g:16645:5: lv_values_2_0= RULE_STRING
            {
            lv_values_2_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_213); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_values_2_0, grammarAccess.getQuotedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getQuotedKeyStringValueAnnotationRule());
              					}
              					addWithLastConsumed(
              						current,
              						"values",
              						lv_values_2_0,
              						"de.cau.cs.kieler.annotations.Annotations.STRING");
              				
            }

            }


            }

            // InternalSCTX.g:16661:3: (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )*
            loop453:
            do {
                int alt453=2;
                int LA453_0 = input.LA(1);

                if ( (LA453_0==20) ) {
                    alt453=1;
                }


                switch (alt453) {
            	case 1 :
            	    // InternalSCTX.g:16662:4: otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) )
            	    {
            	    otherlv_3=(Token)match(input,20,FollowSets000.FOLLOW_47); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getQuotedKeyStringValueAnnotationAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalSCTX.g:16666:4: ( (lv_values_4_0= RULE_STRING ) )
            	    // InternalSCTX.g:16667:5: (lv_values_4_0= RULE_STRING )
            	    {
            	    // InternalSCTX.g:16667:5: (lv_values_4_0= RULE_STRING )
            	    // InternalSCTX.g:16668:6: lv_values_4_0= RULE_STRING
            	    {
            	    lv_values_4_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_213); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_values_4_0, grammarAccess.getQuotedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_3_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getQuotedKeyStringValueAnnotationRule());
            	      						}
            	      						addWithLastConsumed(
            	      							current,
            	      							"values",
            	      							lv_values_4_0,
            	      							"de.cau.cs.kieler.annotations.Annotations.STRING");
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop453;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQuotedKeyStringValueAnnotation"


    // $ANTLR start "entryRuleQuotedTypedKeyStringValueAnnotation"
    // InternalSCTX.g:16689:1: entryRuleQuotedTypedKeyStringValueAnnotation returns [EObject current=null] : iv_ruleQuotedTypedKeyStringValueAnnotation= ruleQuotedTypedKeyStringValueAnnotation EOF ;
    public final EObject entryRuleQuotedTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQuotedTypedKeyStringValueAnnotation = null;


        try {
            // InternalSCTX.g:16689:76: (iv_ruleQuotedTypedKeyStringValueAnnotation= ruleQuotedTypedKeyStringValueAnnotation EOF )
            // InternalSCTX.g:16690:2: iv_ruleQuotedTypedKeyStringValueAnnotation= ruleQuotedTypedKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleQuotedTypedKeyStringValueAnnotation=ruleQuotedTypedKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQuotedTypedKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQuotedTypedKeyStringValueAnnotation"


    // $ANTLR start "ruleQuotedTypedKeyStringValueAnnotation"
    // InternalSCTX.g:16696:1: ruleQuotedTypedKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= RULE_STRING ) ) (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )* ) ;
    public final EObject ruleQuotedTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_values_5_0=null;
        Token otherlv_6=null;
        Token lv_values_7_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_type_3_0 = null;



        	enterRule();

        try {
            // InternalSCTX.g:16702:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= RULE_STRING ) ) (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )* ) )
            // InternalSCTX.g:16703:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= RULE_STRING ) ) (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )* )
            {
            // InternalSCTX.g:16703:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= RULE_STRING ) ) (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )* )
            // InternalSCTX.g:16704:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= RULE_STRING ) ) (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )*
            {
            otherlv_0=(Token)match(input,103,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
            // InternalSCTX.g:16708:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCTX.g:16709:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCTX.g:16709:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCTX.g:16710:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_215);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,34,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getLeftSquareBracketKeyword_2());
              		
            }
            // InternalSCTX.g:16731:3: ( (lv_type_3_0= ruleExtendedID ) )
            // InternalSCTX.g:16732:4: (lv_type_3_0= ruleExtendedID )
            {
            // InternalSCTX.g:16732:4: (lv_type_3_0= ruleExtendedID )
            // InternalSCTX.g:16733:5: lv_type_3_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getTypeExtendedIDParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_36);
            lv_type_3_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_3_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,35,FollowSets000.FOLLOW_47); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getRightSquareBracketKeyword_4());
              		
            }
            // InternalSCTX.g:16754:3: ( (lv_values_5_0= RULE_STRING ) )
            // InternalSCTX.g:16755:4: (lv_values_5_0= RULE_STRING )
            {
            // InternalSCTX.g:16755:4: (lv_values_5_0= RULE_STRING )
            // InternalSCTX.g:16756:5: lv_values_5_0= RULE_STRING
            {
            lv_values_5_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_213); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_values_5_0, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_5_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule());
              					}
              					addWithLastConsumed(
              						current,
              						"values",
              						lv_values_5_0,
              						"de.cau.cs.kieler.annotations.Annotations.STRING");
              				
            }

            }


            }

            // InternalSCTX.g:16772:3: (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )*
            loop454:
            do {
                int alt454=2;
                int LA454_0 = input.LA(1);

                if ( (LA454_0==20) ) {
                    alt454=1;
                }


                switch (alt454) {
            	case 1 :
            	    // InternalSCTX.g:16773:4: otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) )
            	    {
            	    otherlv_6=(Token)match(input,20,FollowSets000.FOLLOW_47); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_6, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getCommaKeyword_6_0());
            	      			
            	    }
            	    // InternalSCTX.g:16777:4: ( (lv_values_7_0= RULE_STRING ) )
            	    // InternalSCTX.g:16778:5: (lv_values_7_0= RULE_STRING )
            	    {
            	    // InternalSCTX.g:16778:5: (lv_values_7_0= RULE_STRING )
            	    // InternalSCTX.g:16779:6: lv_values_7_0= RULE_STRING
            	    {
            	    lv_values_7_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_213); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_values_7_0, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_6_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule());
            	      						}
            	      						addWithLastConsumed(
            	      							current,
            	      							"values",
            	      							lv_values_7_0,
            	      							"de.cau.cs.kieler.annotations.Annotations.STRING");
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop454;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQuotedTypedKeyStringValueAnnotation"


    // $ANTLR start "entryRuleEString"
    // InternalSCTX.g:16800:1: entryRuleEString returns [String current=null] : iv_ruleEString= ruleEString EOF ;
    public final String entryRuleEString() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEString = null;


        try {
            // InternalSCTX.g:16800:47: (iv_ruleEString= ruleEString EOF )
            // InternalSCTX.g:16801:2: iv_ruleEString= ruleEString EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEStringRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEString=ruleEString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEString.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEString"


    // $ANTLR start "ruleEString"
    // InternalSCTX.g:16807:1: ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID ) ;
    public final AntlrDatatypeRuleToken ruleEString() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_0=null;
        AntlrDatatypeRuleToken this_ExtendedID_1 = null;



        	enterRule();

        try {
            // InternalSCTX.g:16813:2: ( (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID ) )
            // InternalSCTX.g:16814:2: (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID )
            {
            // InternalSCTX.g:16814:2: (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID )
            int alt455=2;
            int LA455_0 = input.LA(1);

            if ( (LA455_0==RULE_STRING) ) {
                alt455=1;
            }
            else if ( (LA455_0==RULE_ID) ) {
                alt455=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 455, 0, input);

                throw nvae;
            }
            switch (alt455) {
                case 1 :
                    // InternalSCTX.g:16815:3: this_STRING_0= RULE_STRING
                    {
                    this_STRING_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_STRING_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:16823:3: this_ExtendedID_1= ruleExtendedID
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEStringAccess().getExtendedIDParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ExtendedID_1=ruleExtendedID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ExtendedID_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEString"


    // $ANTLR start "entryRuleEStringBoolean"
    // InternalSCTX.g:16837:1: entryRuleEStringBoolean returns [String current=null] : iv_ruleEStringBoolean= ruleEStringBoolean EOF ;
    public final String entryRuleEStringBoolean() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEStringBoolean = null;


        try {
            // InternalSCTX.g:16837:54: (iv_ruleEStringBoolean= ruleEStringBoolean EOF )
            // InternalSCTX.g:16838:2: iv_ruleEStringBoolean= ruleEStringBoolean EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEStringBooleanRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEStringBoolean=ruleEStringBoolean();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEStringBoolean.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEStringBoolean"


    // $ANTLR start "ruleEStringBoolean"
    // InternalSCTX.g:16844:1: ruleEStringBoolean returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN ) ;
    public final AntlrDatatypeRuleToken ruleEStringBoolean() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_0=null;
        Token this_BOOLEAN_2=null;
        AntlrDatatypeRuleToken this_ExtendedID_1 = null;



        	enterRule();

        try {
            // InternalSCTX.g:16850:2: ( (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN ) )
            // InternalSCTX.g:16851:2: (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN )
            {
            // InternalSCTX.g:16851:2: (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN )
            int alt456=3;
            switch ( input.LA(1) ) {
            case RULE_STRING:
                {
                alt456=1;
                }
                break;
            case RULE_ID:
                {
                alt456=2;
                }
                break;
            case RULE_BOOLEAN:
                {
                alt456=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 456, 0, input);

                throw nvae;
            }

            switch (alt456) {
                case 1 :
                    // InternalSCTX.g:16852:3: this_STRING_0= RULE_STRING
                    {
                    this_STRING_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_STRING_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_STRING_0, grammarAccess.getEStringBooleanAccess().getSTRINGTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:16860:3: this_ExtendedID_1= ruleExtendedID
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEStringBooleanAccess().getExtendedIDParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ExtendedID_1=ruleExtendedID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ExtendedID_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:16871:3: this_BOOLEAN_2= RULE_BOOLEAN
                    {
                    this_BOOLEAN_2=(Token)match(input,RULE_BOOLEAN,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_BOOLEAN_2);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_BOOLEAN_2, grammarAccess.getEStringBooleanAccess().getBOOLEANTerminalRuleCall_2());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEStringBoolean"


    // $ANTLR start "entryRuleEStringAllTypes"
    // InternalSCTX.g:16882:1: entryRuleEStringAllTypes returns [String current=null] : iv_ruleEStringAllTypes= ruleEStringAllTypes EOF ;
    public final String entryRuleEStringAllTypes() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEStringAllTypes = null;


        try {
            // InternalSCTX.g:16882:55: (iv_ruleEStringAllTypes= ruleEStringAllTypes EOF )
            // InternalSCTX.g:16883:2: iv_ruleEStringAllTypes= ruleEStringAllTypes EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEStringAllTypesRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEStringAllTypes=ruleEStringAllTypes();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEStringAllTypes.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEStringAllTypes"


    // $ANTLR start "ruleEStringAllTypes"
    // InternalSCTX.g:16889:1: ruleEStringAllTypes returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN | this_Integer_3= ruleInteger | this_Floateger_4= ruleFloateger ) ;
    public final AntlrDatatypeRuleToken ruleEStringAllTypes() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_0=null;
        Token this_BOOLEAN_2=null;
        AntlrDatatypeRuleToken this_ExtendedID_1 = null;

        AntlrDatatypeRuleToken this_Integer_3 = null;

        AntlrDatatypeRuleToken this_Floateger_4 = null;



        	enterRule();

        try {
            // InternalSCTX.g:16895:2: ( (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN | this_Integer_3= ruleInteger | this_Floateger_4= ruleFloateger ) )
            // InternalSCTX.g:16896:2: (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN | this_Integer_3= ruleInteger | this_Floateger_4= ruleFloateger )
            {
            // InternalSCTX.g:16896:2: (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN | this_Integer_3= ruleInteger | this_Floateger_4= ruleFloateger )
            int alt457=5;
            switch ( input.LA(1) ) {
            case RULE_STRING:
                {
                alt457=1;
                }
                break;
            case RULE_ID:
                {
                alt457=2;
                }
                break;
            case RULE_BOOLEAN:
                {
                alt457=3;
                }
                break;
            case 91:
                {
                int LA457_4 = input.LA(2);

                if ( (LA457_4==RULE_INT) ) {
                    alt457=4;
                }
                else if ( (LA457_4==RULE_FLOAT) ) {
                    alt457=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 457, 4, input);

                    throw nvae;
                }
                }
                break;
            case RULE_INT:
                {
                alt457=4;
                }
                break;
            case RULE_FLOAT:
                {
                alt457=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 457, 0, input);

                throw nvae;
            }

            switch (alt457) {
                case 1 :
                    // InternalSCTX.g:16897:3: this_STRING_0= RULE_STRING
                    {
                    this_STRING_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_STRING_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_STRING_0, grammarAccess.getEStringAllTypesAccess().getSTRINGTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCTX.g:16905:3: this_ExtendedID_1= ruleExtendedID
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEStringAllTypesAccess().getExtendedIDParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ExtendedID_1=ruleExtendedID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ExtendedID_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCTX.g:16916:3: this_BOOLEAN_2= RULE_BOOLEAN
                    {
                    this_BOOLEAN_2=(Token)match(input,RULE_BOOLEAN,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_BOOLEAN_2);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_BOOLEAN_2, grammarAccess.getEStringAllTypesAccess().getBOOLEANTerminalRuleCall_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSCTX.g:16924:3: this_Integer_3= ruleInteger
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEStringAllTypesAccess().getIntegerParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Integer_3=ruleInteger();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_Integer_3);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalSCTX.g:16935:3: this_Floateger_4= ruleFloateger
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEStringAllTypesAccess().getFloategerParserRuleCall_4());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Floateger_4=ruleFloateger();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_Floateger_4);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEStringAllTypes"


    // $ANTLR start "entryRuleExtendedID"
    // InternalSCTX.g:16949:1: entryRuleExtendedID returns [String current=null] : iv_ruleExtendedID= ruleExtendedID EOF ;
    public final String entryRuleExtendedID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleExtendedID = null;


        try {
            // InternalSCTX.g:16949:50: (iv_ruleExtendedID= ruleExtendedID EOF )
            // InternalSCTX.g:16950:2: iv_ruleExtendedID= ruleExtendedID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExtendedIDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleExtendedID=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExtendedID.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExtendedID"


    // $ANTLR start "ruleExtendedID"
    // InternalSCTX.g:16956:1: ruleExtendedID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ID_0= RULE_ID ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )* (kw= '#' this_INT_5= RULE_INT )? ) ;
    public final AntlrDatatypeRuleToken ruleExtendedID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;
        Token kw=null;
        Token this_ID_3=null;
        Token this_INT_5=null;


        	enterRule();

        try {
            // InternalSCTX.g:16962:2: ( (this_ID_0= RULE_ID ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )* (kw= '#' this_INT_5= RULE_INT )? ) )
            // InternalSCTX.g:16963:2: (this_ID_0= RULE_ID ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )* (kw= '#' this_INT_5= RULE_INT )? )
            {
            // InternalSCTX.g:16963:2: (this_ID_0= RULE_ID ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )* (kw= '#' this_INT_5= RULE_INT )? )
            // InternalSCTX.g:16964:3: this_ID_0= RULE_ID ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )* (kw= '#' this_INT_5= RULE_INT )?
            {
            this_ID_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_216); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_ID_0);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_ID_0, grammarAccess.getExtendedIDAccess().getIDTerminalRuleCall_0());
              		
            }
            // InternalSCTX.g:16971:3: ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )*
            loop459:
            do {
                int alt459=2;
                alt459 = dfa459.predict(input);
                switch (alt459) {
            	case 1 :
            	    // InternalSCTX.g:16972:4: (kw= '.' | kw= '-' ) this_ID_3= RULE_ID
            	    {
            	    // InternalSCTX.g:16972:4: (kw= '.' | kw= '-' )
            	    int alt458=2;
            	    int LA458_0 = input.LA(1);

            	    if ( (LA458_0==79) ) {
            	        alt458=1;
            	    }
            	    else if ( (LA458_0==91) ) {
            	        alt458=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 458, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt458) {
            	        case 1 :
            	            // InternalSCTX.g:16973:5: kw= '.'
            	            {
            	            kw=(Token)match(input,79,FollowSets000.FOLLOW_9); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(kw);
            	              					newLeafNode(kw, grammarAccess.getExtendedIDAccess().getFullStopKeyword_1_0_0());
            	              				
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalSCTX.g:16979:5: kw= '-'
            	            {
            	            kw=(Token)match(input,91,FollowSets000.FOLLOW_9); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(kw);
            	              					newLeafNode(kw, grammarAccess.getExtendedIDAccess().getHyphenMinusKeyword_1_0_1());
            	              				
            	            }

            	            }
            	            break;

            	    }

            	    this_ID_3=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_216); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(this_ID_3);
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(this_ID_3, grammarAccess.getExtendedIDAccess().getIDTerminalRuleCall_1_1());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop459;
                }
            } while (true);

            // InternalSCTX.g:16993:3: (kw= '#' this_INT_5= RULE_INT )?
            int alt460=2;
            int LA460_0 = input.LA(1);

            if ( (LA460_0==102) ) {
                int LA460_1 = input.LA(2);

                if ( (LA460_1==RULE_INT) ) {
                    alt460=1;
                }
            }
            switch (alt460) {
                case 1 :
                    // InternalSCTX.g:16994:4: kw= '#' this_INT_5= RULE_INT
                    {
                    kw=(Token)match(input,102,FollowSets000.FOLLOW_205); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getExtendedIDAccess().getNumberSignKeyword_2_0());
                      			
                    }
                    this_INT_5=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_INT_5);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_INT_5, grammarAccess.getExtendedIDAccess().getINTTerminalRuleCall_2_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExtendedID"


    // $ANTLR start "entryRuleInteger"
    // InternalSCTX.g:17011:1: entryRuleInteger returns [String current=null] : iv_ruleInteger= ruleInteger EOF ;
    public final String entryRuleInteger() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleInteger = null;


        try {
            // InternalSCTX.g:17011:47: (iv_ruleInteger= ruleInteger EOF )
            // InternalSCTX.g:17012:2: iv_ruleInteger= ruleInteger EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIntegerRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleInteger=ruleInteger();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInteger.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInteger"


    // $ANTLR start "ruleInteger"
    // InternalSCTX.g:17018:1: ruleInteger returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= '-' )? this_INT_1= RULE_INT ) ;
    public final AntlrDatatypeRuleToken ruleInteger() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_INT_1=null;


        	enterRule();

        try {
            // InternalSCTX.g:17024:2: ( ( (kw= '-' )? this_INT_1= RULE_INT ) )
            // InternalSCTX.g:17025:2: ( (kw= '-' )? this_INT_1= RULE_INT )
            {
            // InternalSCTX.g:17025:2: ( (kw= '-' )? this_INT_1= RULE_INT )
            // InternalSCTX.g:17026:3: (kw= '-' )? this_INT_1= RULE_INT
            {
            // InternalSCTX.g:17026:3: (kw= '-' )?
            int alt461=2;
            int LA461_0 = input.LA(1);

            if ( (LA461_0==91) ) {
                alt461=1;
            }
            switch (alt461) {
                case 1 :
                    // InternalSCTX.g:17027:4: kw= '-'
                    {
                    kw=(Token)match(input,91,FollowSets000.FOLLOW_205); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getIntegerAccess().getHyphenMinusKeyword_0());
                      			
                    }

                    }
                    break;

            }

            this_INT_1=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_INT_1);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_INT_1, grammarAccess.getIntegerAccess().getINTTerminalRuleCall_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInteger"


    // $ANTLR start "entryRuleFloateger"
    // InternalSCTX.g:17044:1: entryRuleFloateger returns [String current=null] : iv_ruleFloateger= ruleFloateger EOF ;
    public final String entryRuleFloateger() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleFloateger = null;


        try {
            // InternalSCTX.g:17044:49: (iv_ruleFloateger= ruleFloateger EOF )
            // InternalSCTX.g:17045:2: iv_ruleFloateger= ruleFloateger EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFloategerRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFloateger=ruleFloateger();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFloateger.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFloateger"


    // $ANTLR start "ruleFloateger"
    // InternalSCTX.g:17051:1: ruleFloateger returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= '-' )? this_FLOAT_1= RULE_FLOAT ) ;
    public final AntlrDatatypeRuleToken ruleFloateger() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_FLOAT_1=null;


        	enterRule();

        try {
            // InternalSCTX.g:17057:2: ( ( (kw= '-' )? this_FLOAT_1= RULE_FLOAT ) )
            // InternalSCTX.g:17058:2: ( (kw= '-' )? this_FLOAT_1= RULE_FLOAT )
            {
            // InternalSCTX.g:17058:2: ( (kw= '-' )? this_FLOAT_1= RULE_FLOAT )
            // InternalSCTX.g:17059:3: (kw= '-' )? this_FLOAT_1= RULE_FLOAT
            {
            // InternalSCTX.g:17059:3: (kw= '-' )?
            int alt462=2;
            int LA462_0 = input.LA(1);

            if ( (LA462_0==91) ) {
                alt462=1;
            }
            switch (alt462) {
                case 1 :
                    // InternalSCTX.g:17060:4: kw= '-'
                    {
                    kw=(Token)match(input,91,FollowSets000.FOLLOW_40); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getFloategerAccess().getHyphenMinusKeyword_0());
                      			
                    }

                    }
                    break;

            }

            this_FLOAT_1=(Token)match(input,RULE_FLOAT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_FLOAT_1);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_FLOAT_1, grammarAccess.getFloategerAccess().getFLOATTerminalRuleCall_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFloateger"


    // $ANTLR start "rulePreemptionType"
    // InternalSCTX.g:17077:1: rulePreemptionType returns [Enumerator current=null] : ( (enumLiteral_0= 'go to' ) | (enumLiteral_1= 'abort to' ) | (enumLiteral_2= 'join to' ) ) ;
    public final Enumerator rulePreemptionType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;


        	enterRule();

        try {
            // InternalSCTX.g:17083:2: ( ( (enumLiteral_0= 'go to' ) | (enumLiteral_1= 'abort to' ) | (enumLiteral_2= 'join to' ) ) )
            // InternalSCTX.g:17084:2: ( (enumLiteral_0= 'go to' ) | (enumLiteral_1= 'abort to' ) | (enumLiteral_2= 'join to' ) )
            {
            // InternalSCTX.g:17084:2: ( (enumLiteral_0= 'go to' ) | (enumLiteral_1= 'abort to' ) | (enumLiteral_2= 'join to' ) )
            int alt463=3;
            switch ( input.LA(1) ) {
            case 63:
                {
                alt463=1;
                }
                break;
            case 104:
                {
                alt463=2;
                }
                break;
            case 105:
                {
                alt463=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 463, 0, input);

                throw nvae;
            }

            switch (alt463) {
                case 1 :
                    // InternalSCTX.g:17085:3: (enumLiteral_0= 'go to' )
                    {
                    // InternalSCTX.g:17085:3: (enumLiteral_0= 'go to' )
                    // InternalSCTX.g:17086:4: enumLiteral_0= 'go to'
                    {
                    enumLiteral_0=(Token)match(input,63,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getPreemptionTypeAccess().getWEAKEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getPreemptionTypeAccess().getWEAKEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:17093:3: (enumLiteral_1= 'abort to' )
                    {
                    // InternalSCTX.g:17093:3: (enumLiteral_1= 'abort to' )
                    // InternalSCTX.g:17094:4: enumLiteral_1= 'abort to'
                    {
                    enumLiteral_1=(Token)match(input,104,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getPreemptionTypeAccess().getSTRONGEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getPreemptionTypeAccess().getSTRONGEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSCTX.g:17101:3: (enumLiteral_2= 'join to' )
                    {
                    // InternalSCTX.g:17101:3: (enumLiteral_2= 'join to' )
                    // InternalSCTX.g:17102:4: enumLiteral_2= 'join to'
                    {
                    enumLiteral_2=(Token)match(input,105,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getPreemptionTypeAccess().getTERMINATIONEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getPreemptionTypeAccess().getTERMINATIONEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePreemptionType"


    // $ANTLR start "rulePreemptionActionType"
    // InternalSCTX.g:17112:1: rulePreemptionActionType returns [Enumerator current=null] : ( (enumLiteral_0= 'weak' ) | (enumLiteral_1= 'strong' ) ) ;
    public final Enumerator rulePreemptionActionType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;


        	enterRule();

        try {
            // InternalSCTX.g:17118:2: ( ( (enumLiteral_0= 'weak' ) | (enumLiteral_1= 'strong' ) ) )
            // InternalSCTX.g:17119:2: ( (enumLiteral_0= 'weak' ) | (enumLiteral_1= 'strong' ) )
            {
            // InternalSCTX.g:17119:2: ( (enumLiteral_0= 'weak' ) | (enumLiteral_1= 'strong' ) )
            int alt464=2;
            int LA464_0 = input.LA(1);

            if ( (LA464_0==53) ) {
                alt464=1;
            }
            else if ( (LA464_0==106) ) {
                alt464=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 464, 0, input);

                throw nvae;
            }
            switch (alt464) {
                case 1 :
                    // InternalSCTX.g:17120:3: (enumLiteral_0= 'weak' )
                    {
                    // InternalSCTX.g:17120:3: (enumLiteral_0= 'weak' )
                    // InternalSCTX.g:17121:4: enumLiteral_0= 'weak'
                    {
                    enumLiteral_0=(Token)match(input,53,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getPreemptionActionTypeAccess().getWEAKEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getPreemptionActionTypeAccess().getWEAKEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:17128:3: (enumLiteral_1= 'strong' )
                    {
                    // InternalSCTX.g:17128:3: (enumLiteral_1= 'strong' )
                    // InternalSCTX.g:17129:4: enumLiteral_1= 'strong'
                    {
                    enumLiteral_1=(Token)match(input,106,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getPreemptionActionTypeAccess().getSTRONGEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getPreemptionActionTypeAccess().getSTRONGEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePreemptionActionType"


    // $ANTLR start "ruleDelayType"
    // InternalSCTX.g:17139:1: ruleDelayType returns [Enumerator current=null] : ( (enumLiteral_0= 'undefined' ) | (enumLiteral_1= 'delayed' ) | (enumLiteral_2= 'immediate' ) | (enumLiteral_3= 'auto' ) ) ;
    public final Enumerator ruleDelayType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;


        	enterRule();

        try {
            // InternalSCTX.g:17145:2: ( ( (enumLiteral_0= 'undefined' ) | (enumLiteral_1= 'delayed' ) | (enumLiteral_2= 'immediate' ) | (enumLiteral_3= 'auto' ) ) )
            // InternalSCTX.g:17146:2: ( (enumLiteral_0= 'undefined' ) | (enumLiteral_1= 'delayed' ) | (enumLiteral_2= 'immediate' ) | (enumLiteral_3= 'auto' ) )
            {
            // InternalSCTX.g:17146:2: ( (enumLiteral_0= 'undefined' ) | (enumLiteral_1= 'delayed' ) | (enumLiteral_2= 'immediate' ) | (enumLiteral_3= 'auto' ) )
            int alt465=4;
            switch ( input.LA(1) ) {
            case 107:
                {
                alt465=1;
                }
                break;
            case 108:
                {
                alt465=2;
                }
                break;
            case 109:
                {
                alt465=3;
                }
                break;
            case 110:
                {
                alt465=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 465, 0, input);

                throw nvae;
            }

            switch (alt465) {
                case 1 :
                    // InternalSCTX.g:17147:3: (enumLiteral_0= 'undefined' )
                    {
                    // InternalSCTX.g:17147:3: (enumLiteral_0= 'undefined' )
                    // InternalSCTX.g:17148:4: enumLiteral_0= 'undefined'
                    {
                    enumLiteral_0=(Token)match(input,107,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDelayTypeAccess().getUNDEFINEDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getDelayTypeAccess().getUNDEFINEDEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:17155:3: (enumLiteral_1= 'delayed' )
                    {
                    // InternalSCTX.g:17155:3: (enumLiteral_1= 'delayed' )
                    // InternalSCTX.g:17156:4: enumLiteral_1= 'delayed'
                    {
                    enumLiteral_1=(Token)match(input,108,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDelayTypeAccess().getDELAYEDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getDelayTypeAccess().getDELAYEDEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSCTX.g:17163:3: (enumLiteral_2= 'immediate' )
                    {
                    // InternalSCTX.g:17163:3: (enumLiteral_2= 'immediate' )
                    // InternalSCTX.g:17164:4: enumLiteral_2= 'immediate'
                    {
                    enumLiteral_2=(Token)match(input,109,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDelayTypeAccess().getIMMEDIATEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getDelayTypeAccess().getIMMEDIATEEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSCTX.g:17171:3: (enumLiteral_3= 'auto' )
                    {
                    // InternalSCTX.g:17171:3: (enumLiteral_3= 'auto' )
                    // InternalSCTX.g:17172:4: enumLiteral_3= 'auto'
                    {
                    enumLiteral_3=(Token)match(input,110,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDelayTypeAccess().getAUTOMATICEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getDelayTypeAccess().getAUTOMATICEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDelayType"


    // $ANTLR start "ruleHistoryType"
    // InternalSCTX.g:17182:1: ruleHistoryType returns [Enumerator current=null] : ( (enumLiteral_0= 'reset' ) | (enumLiteral_1= 'shallow history' ) | (enumLiteral_2= 'history' ) ) ;
    public final Enumerator ruleHistoryType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;


        	enterRule();

        try {
            // InternalSCTX.g:17188:2: ( ( (enumLiteral_0= 'reset' ) | (enumLiteral_1= 'shallow history' ) | (enumLiteral_2= 'history' ) ) )
            // InternalSCTX.g:17189:2: ( (enumLiteral_0= 'reset' ) | (enumLiteral_1= 'shallow history' ) | (enumLiteral_2= 'history' ) )
            {
            // InternalSCTX.g:17189:2: ( (enumLiteral_0= 'reset' ) | (enumLiteral_1= 'shallow history' ) | (enumLiteral_2= 'history' ) )
            int alt466=3;
            switch ( input.LA(1) ) {
            case 111:
                {
                alt466=1;
                }
                break;
            case 112:
                {
                alt466=2;
                }
                break;
            case 113:
                {
                alt466=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 466, 0, input);

                throw nvae;
            }

            switch (alt466) {
                case 1 :
                    // InternalSCTX.g:17190:3: (enumLiteral_0= 'reset' )
                    {
                    // InternalSCTX.g:17190:3: (enumLiteral_0= 'reset' )
                    // InternalSCTX.g:17191:4: enumLiteral_0= 'reset'
                    {
                    enumLiteral_0=(Token)match(input,111,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getHistoryTypeAccess().getRESETEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getHistoryTypeAccess().getRESETEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:17198:3: (enumLiteral_1= 'shallow history' )
                    {
                    // InternalSCTX.g:17198:3: (enumLiteral_1= 'shallow history' )
                    // InternalSCTX.g:17199:4: enumLiteral_1= 'shallow history'
                    {
                    enumLiteral_1=(Token)match(input,112,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getHistoryTypeAccess().getSHALLOWEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getHistoryTypeAccess().getSHALLOWEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSCTX.g:17206:3: (enumLiteral_2= 'history' )
                    {
                    // InternalSCTX.g:17206:3: (enumLiteral_2= 'history' )
                    // InternalSCTX.g:17207:4: enumLiteral_2= 'history'
                    {
                    enumLiteral_2=(Token)match(input,113,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getHistoryTypeAccess().getDEEPEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getHistoryTypeAccess().getDEEPEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleHistoryType"


    // $ANTLR start "ruleDeferredType"
    // InternalSCTX.g:17217:1: ruleDeferredType returns [Enumerator current=null] : ( (enumLiteral_0= 'deferred' ) | (enumLiteral_1= 'deep deferred' ) ) ;
    public final Enumerator ruleDeferredType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;


        	enterRule();

        try {
            // InternalSCTX.g:17223:2: ( ( (enumLiteral_0= 'deferred' ) | (enumLiteral_1= 'deep deferred' ) ) )
            // InternalSCTX.g:17224:2: ( (enumLiteral_0= 'deferred' ) | (enumLiteral_1= 'deep deferred' ) )
            {
            // InternalSCTX.g:17224:2: ( (enumLiteral_0= 'deferred' ) | (enumLiteral_1= 'deep deferred' ) )
            int alt467=2;
            int LA467_0 = input.LA(1);

            if ( (LA467_0==114) ) {
                alt467=1;
            }
            else if ( (LA467_0==115) ) {
                alt467=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 467, 0, input);

                throw nvae;
            }
            switch (alt467) {
                case 1 :
                    // InternalSCTX.g:17225:3: (enumLiteral_0= 'deferred' )
                    {
                    // InternalSCTX.g:17225:3: (enumLiteral_0= 'deferred' )
                    // InternalSCTX.g:17226:4: enumLiteral_0= 'deferred'
                    {
                    enumLiteral_0=(Token)match(input,114,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDeferredTypeAccess().getSHALLOWEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getDeferredTypeAccess().getSHALLOWEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:17233:3: (enumLiteral_1= 'deep deferred' )
                    {
                    // InternalSCTX.g:17233:3: (enumLiteral_1= 'deep deferred' )
                    // InternalSCTX.g:17234:4: enumLiteral_1= 'deep deferred'
                    {
                    enumLiteral_1=(Token)match(input,115,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDeferredTypeAccess().getDEEPEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getDeferredTypeAccess().getDEEPEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDeferredType"


    // $ANTLR start "ruleValueType"
    // InternalSCTX.g:17244:1: ruleValueType returns [Enumerator current=null] : ( (enumLiteral_0= 'pure' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'int' ) | (enumLiteral_3= 'float' ) | (enumLiteral_4= 'string' ) | (enumLiteral_5= 'clock' ) ) ;
    public final Enumerator ruleValueType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;


        	enterRule();

        try {
            // InternalSCTX.g:17250:2: ( ( (enumLiteral_0= 'pure' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'int' ) | (enumLiteral_3= 'float' ) | (enumLiteral_4= 'string' ) | (enumLiteral_5= 'clock' ) ) )
            // InternalSCTX.g:17251:2: ( (enumLiteral_0= 'pure' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'int' ) | (enumLiteral_3= 'float' ) | (enumLiteral_4= 'string' ) | (enumLiteral_5= 'clock' ) )
            {
            // InternalSCTX.g:17251:2: ( (enumLiteral_0= 'pure' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'int' ) | (enumLiteral_3= 'float' ) | (enumLiteral_4= 'string' ) | (enumLiteral_5= 'clock' ) )
            int alt468=6;
            switch ( input.LA(1) ) {
            case 116:
                {
                alt468=1;
                }
                break;
            case 117:
                {
                alt468=2;
                }
                break;
            case 118:
                {
                alt468=3;
                }
                break;
            case 119:
                {
                alt468=4;
                }
                break;
            case 120:
                {
                alt468=5;
                }
                break;
            case 121:
                {
                alt468=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 468, 0, input);

                throw nvae;
            }

            switch (alt468) {
                case 1 :
                    // InternalSCTX.g:17252:3: (enumLiteral_0= 'pure' )
                    {
                    // InternalSCTX.g:17252:3: (enumLiteral_0= 'pure' )
                    // InternalSCTX.g:17253:4: enumLiteral_0= 'pure'
                    {
                    enumLiteral_0=(Token)match(input,116,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getValueTypeAccess().getPUREEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getValueTypeAccess().getPUREEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:17260:3: (enumLiteral_1= 'bool' )
                    {
                    // InternalSCTX.g:17260:3: (enumLiteral_1= 'bool' )
                    // InternalSCTX.g:17261:4: enumLiteral_1= 'bool'
                    {
                    enumLiteral_1=(Token)match(input,117,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getValueTypeAccess().getBOOLEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getValueTypeAccess().getBOOLEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSCTX.g:17268:3: (enumLiteral_2= 'int' )
                    {
                    // InternalSCTX.g:17268:3: (enumLiteral_2= 'int' )
                    // InternalSCTX.g:17269:4: enumLiteral_2= 'int'
                    {
                    enumLiteral_2=(Token)match(input,118,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getValueTypeAccess().getINTEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getValueTypeAccess().getINTEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSCTX.g:17276:3: (enumLiteral_3= 'float' )
                    {
                    // InternalSCTX.g:17276:3: (enumLiteral_3= 'float' )
                    // InternalSCTX.g:17277:4: enumLiteral_3= 'float'
                    {
                    enumLiteral_3=(Token)match(input,119,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getValueTypeAccess().getFLOATEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getValueTypeAccess().getFLOATEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSCTX.g:17284:3: (enumLiteral_4= 'string' )
                    {
                    // InternalSCTX.g:17284:3: (enumLiteral_4= 'string' )
                    // InternalSCTX.g:17285:4: enumLiteral_4= 'string'
                    {
                    enumLiteral_4=(Token)match(input,120,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getValueTypeAccess().getSTRINGEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getValueTypeAccess().getSTRINGEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSCTX.g:17292:3: (enumLiteral_5= 'clock' )
                    {
                    // InternalSCTX.g:17292:3: (enumLiteral_5= 'clock' )
                    // InternalSCTX.g:17293:4: enumLiteral_5= 'clock'
                    {
                    enumLiteral_5=(Token)match(input,121,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getValueTypeAccess().getCLOCKEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_5, grammarAccess.getValueTypeAccess().getCLOCKEnumLiteralDeclaration_5());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValueType"


    // $ANTLR start "rulePriorityProtocol"
    // InternalSCTX.g:17303:1: rulePriorityProtocol returns [Enumerator current=null] : ( (enumLiteral_0= 'conflicting' ) | (enumLiteral_1= 'commuting' ) ) ;
    public final Enumerator rulePriorityProtocol() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;


        	enterRule();

        try {
            // InternalSCTX.g:17309:2: ( ( (enumLiteral_0= 'conflicting' ) | (enumLiteral_1= 'commuting' ) ) )
            // InternalSCTX.g:17310:2: ( (enumLiteral_0= 'conflicting' ) | (enumLiteral_1= 'commuting' ) )
            {
            // InternalSCTX.g:17310:2: ( (enumLiteral_0= 'conflicting' ) | (enumLiteral_1= 'commuting' ) )
            int alt469=2;
            int LA469_0 = input.LA(1);

            if ( (LA469_0==122) ) {
                alt469=1;
            }
            else if ( (LA469_0==123) ) {
                alt469=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 469, 0, input);

                throw nvae;
            }
            switch (alt469) {
                case 1 :
                    // InternalSCTX.g:17311:3: (enumLiteral_0= 'conflicting' )
                    {
                    // InternalSCTX.g:17311:3: (enumLiteral_0= 'conflicting' )
                    // InternalSCTX.g:17312:4: enumLiteral_0= 'conflicting'
                    {
                    enumLiteral_0=(Token)match(input,122,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getPriorityProtocolAccess().getCONFLICTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getPriorityProtocolAccess().getCONFLICTEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:17319:3: (enumLiteral_1= 'commuting' )
                    {
                    // InternalSCTX.g:17319:3: (enumLiteral_1= 'commuting' )
                    // InternalSCTX.g:17320:4: enumLiteral_1= 'commuting'
                    {
                    enumLiteral_1=(Token)match(input,123,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getPriorityProtocolAccess().getCONFLUENTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getPriorityProtocolAccess().getCONFLUENTEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePriorityProtocol"


    // $ANTLR start "ruleAssignOperator"
    // InternalSCTX.g:17330:1: ruleAssignOperator returns [Enumerator current=null] : ( (enumLiteral_0= '=' ) | (enumLiteral_1= '+=' ) | (enumLiteral_2= '-=' ) | (enumLiteral_3= '*=' ) | (enumLiteral_4= '/=' ) | (enumLiteral_5= '%=' ) | (enumLiteral_6= '&=' ) | (enumLiteral_7= '|=' ) | (enumLiteral_8= '^=' ) | (enumLiteral_9= '<<=' ) | (enumLiteral_10= '>>=' ) | (enumLiteral_11= '>>>=' ) | (enumLiteral_12= 'min=' ) | (enumLiteral_13= 'max=' ) ) ;
    public final Enumerator ruleAssignOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;
        Token enumLiteral_6=null;
        Token enumLiteral_7=null;
        Token enumLiteral_8=null;
        Token enumLiteral_9=null;
        Token enumLiteral_10=null;
        Token enumLiteral_11=null;
        Token enumLiteral_12=null;
        Token enumLiteral_13=null;


        	enterRule();

        try {
            // InternalSCTX.g:17336:2: ( ( (enumLiteral_0= '=' ) | (enumLiteral_1= '+=' ) | (enumLiteral_2= '-=' ) | (enumLiteral_3= '*=' ) | (enumLiteral_4= '/=' ) | (enumLiteral_5= '%=' ) | (enumLiteral_6= '&=' ) | (enumLiteral_7= '|=' ) | (enumLiteral_8= '^=' ) | (enumLiteral_9= '<<=' ) | (enumLiteral_10= '>>=' ) | (enumLiteral_11= '>>>=' ) | (enumLiteral_12= 'min=' ) | (enumLiteral_13= 'max=' ) ) )
            // InternalSCTX.g:17337:2: ( (enumLiteral_0= '=' ) | (enumLiteral_1= '+=' ) | (enumLiteral_2= '-=' ) | (enumLiteral_3= '*=' ) | (enumLiteral_4= '/=' ) | (enumLiteral_5= '%=' ) | (enumLiteral_6= '&=' ) | (enumLiteral_7= '|=' ) | (enumLiteral_8= '^=' ) | (enumLiteral_9= '<<=' ) | (enumLiteral_10= '>>=' ) | (enumLiteral_11= '>>>=' ) | (enumLiteral_12= 'min=' ) | (enumLiteral_13= 'max=' ) )
            {
            // InternalSCTX.g:17337:2: ( (enumLiteral_0= '=' ) | (enumLiteral_1= '+=' ) | (enumLiteral_2= '-=' ) | (enumLiteral_3= '*=' ) | (enumLiteral_4= '/=' ) | (enumLiteral_5= '%=' ) | (enumLiteral_6= '&=' ) | (enumLiteral_7= '|=' ) | (enumLiteral_8= '^=' ) | (enumLiteral_9= '<<=' ) | (enumLiteral_10= '>>=' ) | (enumLiteral_11= '>>>=' ) | (enumLiteral_12= 'min=' ) | (enumLiteral_13= 'max=' ) )
            int alt470=14;
            switch ( input.LA(1) ) {
            case 77:
                {
                alt470=1;
                }
                break;
            case 124:
                {
                alt470=2;
                }
                break;
            case 125:
                {
                alt470=3;
                }
                break;
            case 126:
                {
                alt470=4;
                }
                break;
            case 127:
                {
                alt470=5;
                }
                break;
            case 128:
                {
                alt470=6;
                }
                break;
            case 129:
                {
                alt470=7;
                }
                break;
            case 130:
                {
                alt470=8;
                }
                break;
            case 131:
                {
                alt470=9;
                }
                break;
            case 132:
                {
                alt470=10;
                }
                break;
            case 133:
                {
                alt470=11;
                }
                break;
            case 134:
                {
                alt470=12;
                }
                break;
            case 135:
                {
                alt470=13;
                }
                break;
            case 136:
                {
                alt470=14;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 470, 0, input);

                throw nvae;
            }

            switch (alt470) {
                case 1 :
                    // InternalSCTX.g:17338:3: (enumLiteral_0= '=' )
                    {
                    // InternalSCTX.g:17338:3: (enumLiteral_0= '=' )
                    // InternalSCTX.g:17339:4: enumLiteral_0= '='
                    {
                    enumLiteral_0=(Token)match(input,77,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getAssignOperatorAccess().getASSIGNEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:17346:3: (enumLiteral_1= '+=' )
                    {
                    // InternalSCTX.g:17346:3: (enumLiteral_1= '+=' )
                    // InternalSCTX.g:17347:4: enumLiteral_1= '+='
                    {
                    enumLiteral_1=(Token)match(input,124,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNADDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getAssignOperatorAccess().getASSIGNADDEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSCTX.g:17354:3: (enumLiteral_2= '-=' )
                    {
                    // InternalSCTX.g:17354:3: (enumLiteral_2= '-=' )
                    // InternalSCTX.g:17355:4: enumLiteral_2= '-='
                    {
                    enumLiteral_2=(Token)match(input,125,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNSUBEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getAssignOperatorAccess().getASSIGNSUBEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSCTX.g:17362:3: (enumLiteral_3= '*=' )
                    {
                    // InternalSCTX.g:17362:3: (enumLiteral_3= '*=' )
                    // InternalSCTX.g:17363:4: enumLiteral_3= '*='
                    {
                    enumLiteral_3=(Token)match(input,126,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNMULEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getAssignOperatorAccess().getASSIGNMULEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSCTX.g:17370:3: (enumLiteral_4= '/=' )
                    {
                    // InternalSCTX.g:17370:3: (enumLiteral_4= '/=' )
                    // InternalSCTX.g:17371:4: enumLiteral_4= '/='
                    {
                    enumLiteral_4=(Token)match(input,127,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNDIVEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getAssignOperatorAccess().getASSIGNDIVEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSCTX.g:17378:3: (enumLiteral_5= '%=' )
                    {
                    // InternalSCTX.g:17378:3: (enumLiteral_5= '%=' )
                    // InternalSCTX.g:17379:4: enumLiteral_5= '%='
                    {
                    enumLiteral_5=(Token)match(input,128,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNMODEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_5, grammarAccess.getAssignOperatorAccess().getASSIGNMODEnumLiteralDeclaration_5());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSCTX.g:17386:3: (enumLiteral_6= '&=' )
                    {
                    // InternalSCTX.g:17386:3: (enumLiteral_6= '&=' )
                    // InternalSCTX.g:17387:4: enumLiteral_6= '&='
                    {
                    enumLiteral_6=(Token)match(input,129,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNANDEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_6, grammarAccess.getAssignOperatorAccess().getASSIGNANDEnumLiteralDeclaration_6());
                      			
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSCTX.g:17394:3: (enumLiteral_7= '|=' )
                    {
                    // InternalSCTX.g:17394:3: (enumLiteral_7= '|=' )
                    // InternalSCTX.g:17395:4: enumLiteral_7= '|='
                    {
                    enumLiteral_7=(Token)match(input,130,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNOREnumLiteralDeclaration_7().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_7, grammarAccess.getAssignOperatorAccess().getASSIGNOREnumLiteralDeclaration_7());
                      			
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalSCTX.g:17402:3: (enumLiteral_8= '^=' )
                    {
                    // InternalSCTX.g:17402:3: (enumLiteral_8= '^=' )
                    // InternalSCTX.g:17403:4: enumLiteral_8= '^='
                    {
                    enumLiteral_8=(Token)match(input,131,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNXOREnumLiteralDeclaration_8().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_8, grammarAccess.getAssignOperatorAccess().getASSIGNXOREnumLiteralDeclaration_8());
                      			
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalSCTX.g:17410:3: (enumLiteral_9= '<<=' )
                    {
                    // InternalSCTX.g:17410:3: (enumLiteral_9= '<<=' )
                    // InternalSCTX.g:17411:4: enumLiteral_9= '<<='
                    {
                    enumLiteral_9=(Token)match(input,132,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNSHIFTLEFTEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_9, grammarAccess.getAssignOperatorAccess().getASSIGNSHIFTLEFTEnumLiteralDeclaration_9());
                      			
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalSCTX.g:17418:3: (enumLiteral_10= '>>=' )
                    {
                    // InternalSCTX.g:17418:3: (enumLiteral_10= '>>=' )
                    // InternalSCTX.g:17419:4: enumLiteral_10= '>>='
                    {
                    enumLiteral_10=(Token)match(input,133,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNSHIFTRIGHTEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_10, grammarAccess.getAssignOperatorAccess().getASSIGNSHIFTRIGHTEnumLiteralDeclaration_10());
                      			
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalSCTX.g:17426:3: (enumLiteral_11= '>>>=' )
                    {
                    // InternalSCTX.g:17426:3: (enumLiteral_11= '>>>=' )
                    // InternalSCTX.g:17427:4: enumLiteral_11= '>>>='
                    {
                    enumLiteral_11=(Token)match(input,134,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNSHIFTRIGHTUNSIGNEDEnumLiteralDeclaration_11().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_11, grammarAccess.getAssignOperatorAccess().getASSIGNSHIFTRIGHTUNSIGNEDEnumLiteralDeclaration_11());
                      			
                    }

                    }


                    }
                    break;
                case 13 :
                    // InternalSCTX.g:17434:3: (enumLiteral_12= 'min=' )
                    {
                    // InternalSCTX.g:17434:3: (enumLiteral_12= 'min=' )
                    // InternalSCTX.g:17435:4: enumLiteral_12= 'min='
                    {
                    enumLiteral_12=(Token)match(input,135,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNMINEnumLiteralDeclaration_12().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_12, grammarAccess.getAssignOperatorAccess().getASSIGNMINEnumLiteralDeclaration_12());
                      			
                    }

                    }


                    }
                    break;
                case 14 :
                    // InternalSCTX.g:17442:3: (enumLiteral_13= 'max=' )
                    {
                    // InternalSCTX.g:17442:3: (enumLiteral_13= 'max=' )
                    // InternalSCTX.g:17443:4: enumLiteral_13= 'max='
                    {
                    enumLiteral_13=(Token)match(input,136,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNMAXEnumLiteralDeclaration_13().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_13, grammarAccess.getAssignOperatorAccess().getASSIGNMAXEnumLiteralDeclaration_13());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAssignOperator"


    // $ANTLR start "rulePostfixOperator"
    // InternalSCTX.g:17453:1: rulePostfixOperator returns [Enumerator current=null] : ( (enumLiteral_0= '++' ) | (enumLiteral_1= '--' ) ) ;
    public final Enumerator rulePostfixOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;


        	enterRule();

        try {
            // InternalSCTX.g:17459:2: ( ( (enumLiteral_0= '++' ) | (enumLiteral_1= '--' ) ) )
            // InternalSCTX.g:17460:2: ( (enumLiteral_0= '++' ) | (enumLiteral_1= '--' ) )
            {
            // InternalSCTX.g:17460:2: ( (enumLiteral_0= '++' ) | (enumLiteral_1= '--' ) )
            int alt471=2;
            int LA471_0 = input.LA(1);

            if ( (LA471_0==137) ) {
                alt471=1;
            }
            else if ( (LA471_0==138) ) {
                alt471=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 471, 0, input);

                throw nvae;
            }
            switch (alt471) {
                case 1 :
                    // InternalSCTX.g:17461:3: (enumLiteral_0= '++' )
                    {
                    // InternalSCTX.g:17461:3: (enumLiteral_0= '++' )
                    // InternalSCTX.g:17462:4: enumLiteral_0= '++'
                    {
                    enumLiteral_0=(Token)match(input,137,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getPostfixOperatorAccess().getPOSTFIXADDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getPostfixOperatorAccess().getPOSTFIXADDEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:17469:3: (enumLiteral_1= '--' )
                    {
                    // InternalSCTX.g:17469:3: (enumLiteral_1= '--' )
                    // InternalSCTX.g:17470:4: enumLiteral_1= '--'
                    {
                    enumLiteral_1=(Token)match(input,138,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getPostfixOperatorAccess().getPOSTFIXSUBEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getPostfixOperatorAccess().getPOSTFIXSUBEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePostfixOperator"


    // $ANTLR start "ruleCompareOperator"
    // InternalSCTX.g:17480:1: ruleCompareOperator returns [Enumerator current=null] : ( (enumLiteral_0= '==' ) | (enumLiteral_1= '<' ) | (enumLiteral_2= '<=' ) | (enumLiteral_3= '>' ) | (enumLiteral_4= '>=' ) | (enumLiteral_5= '!=' ) ) ;
    public final Enumerator ruleCompareOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;


        	enterRule();

        try {
            // InternalSCTX.g:17486:2: ( ( (enumLiteral_0= '==' ) | (enumLiteral_1= '<' ) | (enumLiteral_2= '<=' ) | (enumLiteral_3= '>' ) | (enumLiteral_4= '>=' ) | (enumLiteral_5= '!=' ) ) )
            // InternalSCTX.g:17487:2: ( (enumLiteral_0= '==' ) | (enumLiteral_1= '<' ) | (enumLiteral_2= '<=' ) | (enumLiteral_3= '>' ) | (enumLiteral_4= '>=' ) | (enumLiteral_5= '!=' ) )
            {
            // InternalSCTX.g:17487:2: ( (enumLiteral_0= '==' ) | (enumLiteral_1= '<' ) | (enumLiteral_2= '<=' ) | (enumLiteral_3= '>' ) | (enumLiteral_4= '>=' ) | (enumLiteral_5= '!=' ) )
            int alt472=6;
            switch ( input.LA(1) ) {
            case 139:
                {
                alt472=1;
                }
                break;
            case 140:
                {
                alt472=2;
                }
                break;
            case 141:
                {
                alt472=3;
                }
                break;
            case 142:
                {
                alt472=4;
                }
                break;
            case 143:
                {
                alt472=5;
                }
                break;
            case 144:
                {
                alt472=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 472, 0, input);

                throw nvae;
            }

            switch (alt472) {
                case 1 :
                    // InternalSCTX.g:17488:3: (enumLiteral_0= '==' )
                    {
                    // InternalSCTX.g:17488:3: (enumLiteral_0= '==' )
                    // InternalSCTX.g:17489:4: enumLiteral_0= '=='
                    {
                    enumLiteral_0=(Token)match(input,139,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCompareOperatorAccess().getEQEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getCompareOperatorAccess().getEQEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:17496:3: (enumLiteral_1= '<' )
                    {
                    // InternalSCTX.g:17496:3: (enumLiteral_1= '<' )
                    // InternalSCTX.g:17497:4: enumLiteral_1= '<'
                    {
                    enumLiteral_1=(Token)match(input,140,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCompareOperatorAccess().getLTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getCompareOperatorAccess().getLTEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSCTX.g:17504:3: (enumLiteral_2= '<=' )
                    {
                    // InternalSCTX.g:17504:3: (enumLiteral_2= '<=' )
                    // InternalSCTX.g:17505:4: enumLiteral_2= '<='
                    {
                    enumLiteral_2=(Token)match(input,141,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCompareOperatorAccess().getLEQEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getCompareOperatorAccess().getLEQEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSCTX.g:17512:3: (enumLiteral_3= '>' )
                    {
                    // InternalSCTX.g:17512:3: (enumLiteral_3= '>' )
                    // InternalSCTX.g:17513:4: enumLiteral_3= '>'
                    {
                    enumLiteral_3=(Token)match(input,142,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCompareOperatorAccess().getGTEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getCompareOperatorAccess().getGTEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSCTX.g:17520:3: (enumLiteral_4= '>=' )
                    {
                    // InternalSCTX.g:17520:3: (enumLiteral_4= '>=' )
                    // InternalSCTX.g:17521:4: enumLiteral_4= '>='
                    {
                    enumLiteral_4=(Token)match(input,143,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCompareOperatorAccess().getGEQEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getCompareOperatorAccess().getGEQEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSCTX.g:17528:3: (enumLiteral_5= '!=' )
                    {
                    // InternalSCTX.g:17528:3: (enumLiteral_5= '!=' )
                    // InternalSCTX.g:17529:4: enumLiteral_5= '!='
                    {
                    enumLiteral_5=(Token)match(input,144,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCompareOperatorAccess().getNEEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_5, grammarAccess.getCompareOperatorAccess().getNEEnumLiteralDeclaration_5());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCompareOperator"


    // $ANTLR start "rulePreOperator"
    // InternalSCTX.g:17539:1: rulePreOperator returns [Enumerator current=null] : (enumLiteral_0= 'pre' ) ;
    public final Enumerator rulePreOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:17545:2: ( (enumLiteral_0= 'pre' ) )
            // InternalSCTX.g:17546:2: (enumLiteral_0= 'pre' )
            {
            // InternalSCTX.g:17546:2: (enumLiteral_0= 'pre' )
            // InternalSCTX.g:17547:3: enumLiteral_0= 'pre'
            {
            enumLiteral_0=(Token)match(input,145,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getPreOperatorAccess().getPREEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getPreOperatorAccess().getPREEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePreOperator"


    // $ANTLR start "ruleBitwiseNotOperator"
    // InternalSCTX.g:17556:1: ruleBitwiseNotOperator returns [Enumerator current=null] : (enumLiteral_0= '~' ) ;
    public final Enumerator ruleBitwiseNotOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:17562:2: ( (enumLiteral_0= '~' ) )
            // InternalSCTX.g:17563:2: (enumLiteral_0= '~' )
            {
            // InternalSCTX.g:17563:2: (enumLiteral_0= '~' )
            // InternalSCTX.g:17564:3: enumLiteral_0= '~'
            {
            enumLiteral_0=(Token)match(input,146,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getBitwiseNotOperatorAccess().getBITWISE_NOTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getBitwiseNotOperatorAccess().getBITWISE_NOTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseNotOperator"


    // $ANTLR start "ruleBitwiseXOrOperator"
    // InternalSCTX.g:17573:1: ruleBitwiseXOrOperator returns [Enumerator current=null] : (enumLiteral_0= '^' ) ;
    public final Enumerator ruleBitwiseXOrOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:17579:2: ( (enumLiteral_0= '^' ) )
            // InternalSCTX.g:17580:2: (enumLiteral_0= '^' )
            {
            // InternalSCTX.g:17580:2: (enumLiteral_0= '^' )
            // InternalSCTX.g:17581:3: enumLiteral_0= '^'
            {
            enumLiteral_0=(Token)match(input,85,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getBitwiseXOrOperatorAccess().getBITWISE_XOREnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getBitwiseXOrOperatorAccess().getBITWISE_XOREnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseXOrOperator"


    // $ANTLR start "ruleBitwiseOrOperator"
    // InternalSCTX.g:17590:1: ruleBitwiseOrOperator returns [Enumerator current=null] : (enumLiteral_0= '|' ) ;
    public final Enumerator ruleBitwiseOrOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:17596:2: ( (enumLiteral_0= '|' ) )
            // InternalSCTX.g:17597:2: (enumLiteral_0= '|' )
            {
            // InternalSCTX.g:17597:2: (enumLiteral_0= '|' )
            // InternalSCTX.g:17598:3: enumLiteral_0= '|'
            {
            enumLiteral_0=(Token)match(input,84,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getBitwiseOrOperatorAccess().getBITWISE_OREnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getBitwiseOrOperatorAccess().getBITWISE_OREnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseOrOperator"


    // $ANTLR start "ruleBitwiseAndOperator"
    // InternalSCTX.g:17607:1: ruleBitwiseAndOperator returns [Enumerator current=null] : (enumLiteral_0= '&' ) ;
    public final Enumerator ruleBitwiseAndOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:17613:2: ( (enumLiteral_0= '&' ) )
            // InternalSCTX.g:17614:2: (enumLiteral_0= '&' )
            {
            // InternalSCTX.g:17614:2: (enumLiteral_0= '&' )
            // InternalSCTX.g:17615:3: enumLiteral_0= '&'
            {
            enumLiteral_0=(Token)match(input,86,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getBitwiseAndOperatorAccess().getBITWISE_ANDEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getBitwiseAndOperatorAccess().getBITWISE_ANDEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseAndOperator"


    // $ANTLR start "ruleNotOperator"
    // InternalSCTX.g:17624:1: ruleNotOperator returns [Enumerator current=null] : (enumLiteral_0= '!' ) ;
    public final Enumerator ruleNotOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:17630:2: ( (enumLiteral_0= '!' ) )
            // InternalSCTX.g:17631:2: (enumLiteral_0= '!' )
            {
            // InternalSCTX.g:17631:2: (enumLiteral_0= '!' )
            // InternalSCTX.g:17632:3: enumLiteral_0= '!'
            {
            enumLiteral_0=(Token)match(input,147,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getNotOperatorAccess().getNOTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getNotOperatorAccess().getNOTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNotOperator"


    // $ANTLR start "ruleAddOperator"
    // InternalSCTX.g:17641:1: ruleAddOperator returns [Enumerator current=null] : (enumLiteral_0= '+' ) ;
    public final Enumerator ruleAddOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:17647:2: ( (enumLiteral_0= '+' ) )
            // InternalSCTX.g:17648:2: (enumLiteral_0= '+' )
            {
            // InternalSCTX.g:17648:2: (enumLiteral_0= '+' )
            // InternalSCTX.g:17649:3: enumLiteral_0= '+'
            {
            enumLiteral_0=(Token)match(input,90,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getAddOperatorAccess().getADDEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getAddOperatorAccess().getADDEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAddOperator"


    // $ANTLR start "ruleSubOperator"
    // InternalSCTX.g:17658:1: ruleSubOperator returns [Enumerator current=null] : (enumLiteral_0= '-' ) ;
    public final Enumerator ruleSubOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:17664:2: ( (enumLiteral_0= '-' ) )
            // InternalSCTX.g:17665:2: (enumLiteral_0= '-' )
            {
            // InternalSCTX.g:17665:2: (enumLiteral_0= '-' )
            // InternalSCTX.g:17666:3: enumLiteral_0= '-'
            {
            enumLiteral_0=(Token)match(input,91,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getSubOperatorAccess().getSUBEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getSubOperatorAccess().getSUBEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSubOperator"


    // $ANTLR start "ruleMultOperator"
    // InternalSCTX.g:17675:1: ruleMultOperator returns [Enumerator current=null] : (enumLiteral_0= '*' ) ;
    public final Enumerator ruleMultOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:17681:2: ( (enumLiteral_0= '*' ) )
            // InternalSCTX.g:17682:2: (enumLiteral_0= '*' )
            {
            // InternalSCTX.g:17682:2: (enumLiteral_0= '*' )
            // InternalSCTX.g:17683:3: enumLiteral_0= '*'
            {
            enumLiteral_0=(Token)match(input,92,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getMultOperatorAccess().getMULTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getMultOperatorAccess().getMULTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultOperator"


    // $ANTLR start "ruleModOperator"
    // InternalSCTX.g:17692:1: ruleModOperator returns [Enumerator current=null] : (enumLiteral_0= '%' ) ;
    public final Enumerator ruleModOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:17698:2: ( (enumLiteral_0= '%' ) )
            // InternalSCTX.g:17699:2: (enumLiteral_0= '%' )
            {
            // InternalSCTX.g:17699:2: (enumLiteral_0= '%' )
            // InternalSCTX.g:17700:3: enumLiteral_0= '%'
            {
            enumLiteral_0=(Token)match(input,94,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getModOperatorAccess().getMODEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getModOperatorAccess().getMODEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModOperator"


    // $ANTLR start "ruleDivOperator"
    // InternalSCTX.g:17709:1: ruleDivOperator returns [Enumerator current=null] : (enumLiteral_0= '/' ) ;
    public final Enumerator ruleDivOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:17715:2: ( (enumLiteral_0= '/' ) )
            // InternalSCTX.g:17716:2: (enumLiteral_0= '/' )
            {
            // InternalSCTX.g:17716:2: (enumLiteral_0= '/' )
            // InternalSCTX.g:17717:3: enumLiteral_0= '/'
            {
            enumLiteral_0=(Token)match(input,93,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getDivOperatorAccess().getDIVEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getDivOperatorAccess().getDIVEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDivOperator"


    // $ANTLR start "ruleValOperator"
    // InternalSCTX.g:17726:1: ruleValOperator returns [Enumerator current=null] : (enumLiteral_0= 'val' ) ;
    public final Enumerator ruleValOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:17732:2: ( (enumLiteral_0= 'val' ) )
            // InternalSCTX.g:17733:2: (enumLiteral_0= 'val' )
            {
            // InternalSCTX.g:17733:2: (enumLiteral_0= 'val' )
            // InternalSCTX.g:17734:3: enumLiteral_0= 'val'
            {
            enumLiteral_0=(Token)match(input,148,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getValOperatorAccess().getVALEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getValOperatorAccess().getVALEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValOperator"


    // $ANTLR start "ruleLogicalOrOperator"
    // InternalSCTX.g:17743:1: ruleLogicalOrOperator returns [Enumerator current=null] : (enumLiteral_0= '||' ) ;
    public final Enumerator ruleLogicalOrOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:17749:2: ( (enumLiteral_0= '||' ) )
            // InternalSCTX.g:17750:2: (enumLiteral_0= '||' )
            {
            // InternalSCTX.g:17750:2: (enumLiteral_0= '||' )
            // InternalSCTX.g:17751:3: enumLiteral_0= '||'
            {
            enumLiteral_0=(Token)match(input,82,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getLogicalOrOperatorAccess().getLOGICAL_OREnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getLogicalOrOperatorAccess().getLOGICAL_OREnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalOrOperator"


    // $ANTLR start "ruleLogicalAndOperator"
    // InternalSCTX.g:17760:1: ruleLogicalAndOperator returns [Enumerator current=null] : (enumLiteral_0= '&&' ) ;
    public final Enumerator ruleLogicalAndOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:17766:2: ( (enumLiteral_0= '&&' ) )
            // InternalSCTX.g:17767:2: (enumLiteral_0= '&&' )
            {
            // InternalSCTX.g:17767:2: (enumLiteral_0= '&&' )
            // InternalSCTX.g:17768:3: enumLiteral_0= '&&'
            {
            enumLiteral_0=(Token)match(input,83,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getLogicalAndOperatorAccess().getLOGICAL_ANDEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getLogicalAndOperatorAccess().getLOGICAL_ANDEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalAndOperator"


    // $ANTLR start "ruleShiftLeftOperator"
    // InternalSCTX.g:17777:1: ruleShiftLeftOperator returns [Enumerator current=null] : (enumLiteral_0= '<<' ) ;
    public final Enumerator ruleShiftLeftOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:17783:2: ( (enumLiteral_0= '<<' ) )
            // InternalSCTX.g:17784:2: (enumLiteral_0= '<<' )
            {
            // InternalSCTX.g:17784:2: (enumLiteral_0= '<<' )
            // InternalSCTX.g:17785:3: enumLiteral_0= '<<'
            {
            enumLiteral_0=(Token)match(input,87,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getShiftLeftOperatorAccess().getSHIFT_LEFTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getShiftLeftOperatorAccess().getSHIFT_LEFTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShiftLeftOperator"


    // $ANTLR start "ruleShiftRightOperator"
    // InternalSCTX.g:17794:1: ruleShiftRightOperator returns [Enumerator current=null] : (enumLiteral_0= '>>' ) ;
    public final Enumerator ruleShiftRightOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:17800:2: ( (enumLiteral_0= '>>' ) )
            // InternalSCTX.g:17801:2: (enumLiteral_0= '>>' )
            {
            // InternalSCTX.g:17801:2: (enumLiteral_0= '>>' )
            // InternalSCTX.g:17802:3: enumLiteral_0= '>>'
            {
            enumLiteral_0=(Token)match(input,88,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getShiftRightOperatorAccess().getSHIFT_RIGHTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getShiftRightOperatorAccess().getSHIFT_RIGHTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShiftRightOperator"


    // $ANTLR start "ruleShiftRightUnsignedOperator"
    // InternalSCTX.g:17811:1: ruleShiftRightUnsignedOperator returns [Enumerator current=null] : (enumLiteral_0= '>>>' ) ;
    public final Enumerator ruleShiftRightUnsignedOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:17817:2: ( (enumLiteral_0= '>>>' ) )
            // InternalSCTX.g:17818:2: (enumLiteral_0= '>>>' )
            {
            // InternalSCTX.g:17818:2: (enumLiteral_0= '>>>' )
            // InternalSCTX.g:17819:3: enumLiteral_0= '>>>'
            {
            enumLiteral_0=(Token)match(input,89,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getShiftRightUnsignedOperatorAccess().getSHIFT_RIGHT_UNSIGNEDEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getShiftRightUnsignedOperatorAccess().getSHIFT_RIGHT_UNSIGNEDEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShiftRightUnsignedOperator"


    // $ANTLR start "ruleConditionalOperator"
    // InternalSCTX.g:17828:1: ruleConditionalOperator returns [Enumerator current=null] : (enumLiteral_0= '?' ) ;
    public final Enumerator ruleConditionalOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:17834:2: ( (enumLiteral_0= '?' ) )
            // InternalSCTX.g:17835:2: (enumLiteral_0= '?' )
            {
            // InternalSCTX.g:17835:2: (enumLiteral_0= '?' )
            // InternalSCTX.g:17836:3: enumLiteral_0= '?'
            {
            enumLiteral_0=(Token)match(input,149,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getConditionalOperatorAccess().getCONDITIONALEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getConditionalOperatorAccess().getCONDITIONALEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConditionalOperator"


    // $ANTLR start "ruleInitOperator"
    // InternalSCTX.g:17845:1: ruleInitOperator returns [Enumerator current=null] : (enumLiteral_0= '->' ) ;
    public final Enumerator ruleInitOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:17851:2: ( (enumLiteral_0= '->' ) )
            // InternalSCTX.g:17852:2: (enumLiteral_0= '->' )
            {
            // InternalSCTX.g:17852:2: (enumLiteral_0= '->' )
            // InternalSCTX.g:17853:3: enumLiteral_0= '->'
            {
            enumLiteral_0=(Token)match(input,95,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getInitOperatorAccess().getINITEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getInitOperatorAccess().getINITEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInitOperator"


    // $ANTLR start "ruleFbyOperator"
    // InternalSCTX.g:17862:1: ruleFbyOperator returns [Enumerator current=null] : (enumLiteral_0= 'fby' ) ;
    public final Enumerator ruleFbyOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:17868:2: ( (enumLiteral_0= 'fby' ) )
            // InternalSCTX.g:17869:2: (enumLiteral_0= 'fby' )
            {
            // InternalSCTX.g:17869:2: (enumLiteral_0= 'fby' )
            // InternalSCTX.g:17870:3: enumLiteral_0= 'fby'
            {
            enumLiteral_0=(Token)match(input,96,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getFbyOperatorAccess().getFBYEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getFbyOperatorAccess().getFBYEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFbyOperator"


    // $ANTLR start "ruleSfbyOperator"
    // InternalSCTX.g:17879:1: ruleSfbyOperator returns [Enumerator current=null] : (enumLiteral_0= 'sfby' ) ;
    public final Enumerator ruleSfbyOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:17885:2: ( (enumLiteral_0= 'sfby' ) )
            // InternalSCTX.g:17886:2: (enumLiteral_0= 'sfby' )
            {
            // InternalSCTX.g:17886:2: (enumLiteral_0= 'sfby' )
            // InternalSCTX.g:17887:3: enumLiteral_0= 'sfby'
            {
            enumLiteral_0=(Token)match(input,97,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getSfbyOperatorAccess().getSFBYEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getSfbyOperatorAccess().getSFBYEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSfbyOperator"


    // $ANTLR start "ruleHostType"
    // InternalSCTX.g:17896:1: ruleHostType returns [Enumerator current=null] : (enumLiteral_0= 'host' ) ;
    public final Enumerator ruleHostType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:17902:2: ( (enumLiteral_0= 'host' ) )
            // InternalSCTX.g:17903:2: (enumLiteral_0= 'host' )
            {
            // InternalSCTX.g:17903:2: (enumLiteral_0= 'host' )
            // InternalSCTX.g:17904:3: enumLiteral_0= 'host'
            {
            enumLiteral_0=(Token)match(input,61,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getHostTypeAccess().getHOSTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getHostTypeAccess().getHOSTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleHostType"


    // $ANTLR start "ruleStructType"
    // InternalSCTX.g:17913:1: ruleStructType returns [Enumerator current=null] : (enumLiteral_0= 'struct' ) ;
    public final Enumerator ruleStructType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:17919:2: ( (enumLiteral_0= 'struct' ) )
            // InternalSCTX.g:17920:2: (enumLiteral_0= 'struct' )
            {
            // InternalSCTX.g:17920:2: (enumLiteral_0= 'struct' )
            // InternalSCTX.g:17921:3: enumLiteral_0= 'struct'
            {
            enumLiteral_0=(Token)match(input,150,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getStructTypeAccess().getSTRUCTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getStructTypeAccess().getSTRUCTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStructType"


    // $ANTLR start "ruleClassType"
    // InternalSCTX.g:17930:1: ruleClassType returns [Enumerator current=null] : (enumLiteral_0= 'class' ) ;
    public final Enumerator ruleClassType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCTX.g:17936:2: ( (enumLiteral_0= 'class' ) )
            // InternalSCTX.g:17937:2: (enumLiteral_0= 'class' )
            {
            // InternalSCTX.g:17937:2: (enumLiteral_0= 'class' )
            // InternalSCTX.g:17938:3: enumLiteral_0= 'class'
            {
            enumLiteral_0=(Token)match(input,151,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getClassTypeAccess().getCLASSEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getClassTypeAccess().getCLASSEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassType"


    // $ANTLR start "ruleCombineOperator"
    // InternalSCTX.g:17947:1: ruleCombineOperator returns [Enumerator current=null] : ( (enumLiteral_0= 'none' ) | (enumLiteral_1= '+' ) | (enumLiteral_2= '*' ) | (enumLiteral_3= 'max' ) | (enumLiteral_4= 'min' ) | (enumLiteral_5= '|' ) | (enumLiteral_6= '&' ) | (enumLiteral_7= 'host' ) ) ;
    public final Enumerator ruleCombineOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;
        Token enumLiteral_6=null;
        Token enumLiteral_7=null;


        	enterRule();

        try {
            // InternalSCTX.g:17953:2: ( ( (enumLiteral_0= 'none' ) | (enumLiteral_1= '+' ) | (enumLiteral_2= '*' ) | (enumLiteral_3= 'max' ) | (enumLiteral_4= 'min' ) | (enumLiteral_5= '|' ) | (enumLiteral_6= '&' ) | (enumLiteral_7= 'host' ) ) )
            // InternalSCTX.g:17954:2: ( (enumLiteral_0= 'none' ) | (enumLiteral_1= '+' ) | (enumLiteral_2= '*' ) | (enumLiteral_3= 'max' ) | (enumLiteral_4= 'min' ) | (enumLiteral_5= '|' ) | (enumLiteral_6= '&' ) | (enumLiteral_7= 'host' ) )
            {
            // InternalSCTX.g:17954:2: ( (enumLiteral_0= 'none' ) | (enumLiteral_1= '+' ) | (enumLiteral_2= '*' ) | (enumLiteral_3= 'max' ) | (enumLiteral_4= 'min' ) | (enumLiteral_5= '|' ) | (enumLiteral_6= '&' ) | (enumLiteral_7= 'host' ) )
            int alt473=8;
            switch ( input.LA(1) ) {
            case 152:
                {
                alt473=1;
                }
                break;
            case 90:
                {
                alt473=2;
                }
                break;
            case 92:
                {
                alt473=3;
                }
                break;
            case 153:
                {
                alt473=4;
                }
                break;
            case 154:
                {
                alt473=5;
                }
                break;
            case 84:
                {
                alt473=6;
                }
                break;
            case 86:
                {
                alt473=7;
                }
                break;
            case 61:
                {
                alt473=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 473, 0, input);

                throw nvae;
            }

            switch (alt473) {
                case 1 :
                    // InternalSCTX.g:17955:3: (enumLiteral_0= 'none' )
                    {
                    // InternalSCTX.g:17955:3: (enumLiteral_0= 'none' )
                    // InternalSCTX.g:17956:4: enumLiteral_0= 'none'
                    {
                    enumLiteral_0=(Token)match(input,152,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getNONEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getCombineOperatorAccess().getNONEEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:17963:3: (enumLiteral_1= '+' )
                    {
                    // InternalSCTX.g:17963:3: (enumLiteral_1= '+' )
                    // InternalSCTX.g:17964:4: enumLiteral_1= '+'
                    {
                    enumLiteral_1=(Token)match(input,90,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getADDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getCombineOperatorAccess().getADDEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSCTX.g:17971:3: (enumLiteral_2= '*' )
                    {
                    // InternalSCTX.g:17971:3: (enumLiteral_2= '*' )
                    // InternalSCTX.g:17972:4: enumLiteral_2= '*'
                    {
                    enumLiteral_2=(Token)match(input,92,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getMULTEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getCombineOperatorAccess().getMULTEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSCTX.g:17979:3: (enumLiteral_3= 'max' )
                    {
                    // InternalSCTX.g:17979:3: (enumLiteral_3= 'max' )
                    // InternalSCTX.g:17980:4: enumLiteral_3= 'max'
                    {
                    enumLiteral_3=(Token)match(input,153,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getMAXEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getCombineOperatorAccess().getMAXEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSCTX.g:17987:3: (enumLiteral_4= 'min' )
                    {
                    // InternalSCTX.g:17987:3: (enumLiteral_4= 'min' )
                    // InternalSCTX.g:17988:4: enumLiteral_4= 'min'
                    {
                    enumLiteral_4=(Token)match(input,154,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getMINEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getCombineOperatorAccess().getMINEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSCTX.g:17995:3: (enumLiteral_5= '|' )
                    {
                    // InternalSCTX.g:17995:3: (enumLiteral_5= '|' )
                    // InternalSCTX.g:17996:4: enumLiteral_5= '|'
                    {
                    enumLiteral_5=(Token)match(input,84,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getOREnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_5, grammarAccess.getCombineOperatorAccess().getOREnumLiteralDeclaration_5());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSCTX.g:18003:3: (enumLiteral_6= '&' )
                    {
                    // InternalSCTX.g:18003:3: (enumLiteral_6= '&' )
                    // InternalSCTX.g:18004:4: enumLiteral_6= '&'
                    {
                    enumLiteral_6=(Token)match(input,86,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getANDEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_6, grammarAccess.getCombineOperatorAccess().getANDEnumLiteralDeclaration_6());
                      			
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSCTX.g:18011:3: (enumLiteral_7= 'host' )
                    {
                    // InternalSCTX.g:18011:3: (enumLiteral_7= 'host' )
                    // InternalSCTX.g:18012:4: enumLiteral_7= 'host'
                    {
                    enumLiteral_7=(Token)match(input,61,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getHOSTEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_7, grammarAccess.getCombineOperatorAccess().getHOSTEnumLiteralDeclaration_7());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCombineOperator"


    // $ANTLR start "ruleAccessModifier"
    // InternalSCTX.g:18022:1: ruleAccessModifier returns [Enumerator current=null] : ( (enumLiteral_0= 'public' ) | (enumLiteral_1= 'protected' ) | (enumLiteral_2= 'private' ) ) ;
    public final Enumerator ruleAccessModifier() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;


        	enterRule();

        try {
            // InternalSCTX.g:18028:2: ( ( (enumLiteral_0= 'public' ) | (enumLiteral_1= 'protected' ) | (enumLiteral_2= 'private' ) ) )
            // InternalSCTX.g:18029:2: ( (enumLiteral_0= 'public' ) | (enumLiteral_1= 'protected' ) | (enumLiteral_2= 'private' ) )
            {
            // InternalSCTX.g:18029:2: ( (enumLiteral_0= 'public' ) | (enumLiteral_1= 'protected' ) | (enumLiteral_2= 'private' ) )
            int alt474=3;
            switch ( input.LA(1) ) {
            case 155:
                {
                alt474=1;
                }
                break;
            case 156:
                {
                alt474=2;
                }
                break;
            case 157:
                {
                alt474=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 474, 0, input);

                throw nvae;
            }

            switch (alt474) {
                case 1 :
                    // InternalSCTX.g:18030:3: (enumLiteral_0= 'public' )
                    {
                    // InternalSCTX.g:18030:3: (enumLiteral_0= 'public' )
                    // InternalSCTX.g:18031:4: enumLiteral_0= 'public'
                    {
                    enumLiteral_0=(Token)match(input,155,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAccessModifierAccess().getPUBLICEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getAccessModifierAccess().getPUBLICEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:18038:3: (enumLiteral_1= 'protected' )
                    {
                    // InternalSCTX.g:18038:3: (enumLiteral_1= 'protected' )
                    // InternalSCTX.g:18039:4: enumLiteral_1= 'protected'
                    {
                    enumLiteral_1=(Token)match(input,156,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAccessModifierAccess().getPROTECTEDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getAccessModifierAccess().getPROTECTEDEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSCTX.g:18046:3: (enumLiteral_2= 'private' )
                    {
                    // InternalSCTX.g:18046:3: (enumLiteral_2= 'private' )
                    // InternalSCTX.g:18047:4: enumLiteral_2= 'private'
                    {
                    enumLiteral_2=(Token)match(input,157,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAccessModifierAccess().getPRIVATEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getAccessModifierAccess().getPRIVATEEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAccessModifier"


    // $ANTLR start "ruleMethodReturnType"
    // InternalSCTX.g:18057:1: ruleMethodReturnType returns [Enumerator current=null] : ( (enumLiteral_0= 'void' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'int' ) | (enumLiteral_3= 'float' ) | (enumLiteral_4= 'string' ) ) ;
    public final Enumerator ruleMethodReturnType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;


        	enterRule();

        try {
            // InternalSCTX.g:18063:2: ( ( (enumLiteral_0= 'void' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'int' ) | (enumLiteral_3= 'float' ) | (enumLiteral_4= 'string' ) ) )
            // InternalSCTX.g:18064:2: ( (enumLiteral_0= 'void' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'int' ) | (enumLiteral_3= 'float' ) | (enumLiteral_4= 'string' ) )
            {
            // InternalSCTX.g:18064:2: ( (enumLiteral_0= 'void' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'int' ) | (enumLiteral_3= 'float' ) | (enumLiteral_4= 'string' ) )
            int alt475=5;
            switch ( input.LA(1) ) {
            case 158:
                {
                alt475=1;
                }
                break;
            case 117:
                {
                alt475=2;
                }
                break;
            case 118:
                {
                alt475=3;
                }
                break;
            case 119:
                {
                alt475=4;
                }
                break;
            case 120:
                {
                alt475=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 475, 0, input);

                throw nvae;
            }

            switch (alt475) {
                case 1 :
                    // InternalSCTX.g:18065:3: (enumLiteral_0= 'void' )
                    {
                    // InternalSCTX.g:18065:3: (enumLiteral_0= 'void' )
                    // InternalSCTX.g:18066:4: enumLiteral_0= 'void'
                    {
                    enumLiteral_0=(Token)match(input,158,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getMethodReturnTypeAccess().getVOIDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getMethodReturnTypeAccess().getVOIDEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:18073:3: (enumLiteral_1= 'bool' )
                    {
                    // InternalSCTX.g:18073:3: (enumLiteral_1= 'bool' )
                    // InternalSCTX.g:18074:4: enumLiteral_1= 'bool'
                    {
                    enumLiteral_1=(Token)match(input,117,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getMethodReturnTypeAccess().getBOOLEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getMethodReturnTypeAccess().getBOOLEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSCTX.g:18081:3: (enumLiteral_2= 'int' )
                    {
                    // InternalSCTX.g:18081:3: (enumLiteral_2= 'int' )
                    // InternalSCTX.g:18082:4: enumLiteral_2= 'int'
                    {
                    enumLiteral_2=(Token)match(input,118,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getMethodReturnTypeAccess().getINTEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getMethodReturnTypeAccess().getINTEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSCTX.g:18089:3: (enumLiteral_3= 'float' )
                    {
                    // InternalSCTX.g:18089:3: (enumLiteral_3= 'float' )
                    // InternalSCTX.g:18090:4: enumLiteral_3= 'float'
                    {
                    enumLiteral_3=(Token)match(input,119,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getMethodReturnTypeAccess().getFLOATEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getMethodReturnTypeAccess().getFLOATEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSCTX.g:18097:3: (enumLiteral_4= 'string' )
                    {
                    // InternalSCTX.g:18097:3: (enumLiteral_4= 'string' )
                    // InternalSCTX.g:18098:4: enumLiteral_4= 'string'
                    {
                    enumLiteral_4=(Token)match(input,120,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getMethodReturnTypeAccess().getSTRINGEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getMethodReturnTypeAccess().getSTRINGEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMethodReturnType"


    // $ANTLR start "ruleParameterAccessType"
    // InternalSCTX.g:18108:1: ruleParameterAccessType returns [Enumerator current=null] : ( (enumLiteral_0= '&' ) | (enumLiteral_1= '!&' ) ) ;
    public final Enumerator ruleParameterAccessType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;


        	enterRule();

        try {
            // InternalSCTX.g:18114:2: ( ( (enumLiteral_0= '&' ) | (enumLiteral_1= '!&' ) ) )
            // InternalSCTX.g:18115:2: ( (enumLiteral_0= '&' ) | (enumLiteral_1= '!&' ) )
            {
            // InternalSCTX.g:18115:2: ( (enumLiteral_0= '&' ) | (enumLiteral_1= '!&' ) )
            int alt476=2;
            int LA476_0 = input.LA(1);

            if ( (LA476_0==86) ) {
                alt476=1;
            }
            else if ( (LA476_0==159) ) {
                alt476=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 476, 0, input);

                throw nvae;
            }
            switch (alt476) {
                case 1 :
                    // InternalSCTX.g:18116:3: (enumLiteral_0= '&' )
                    {
                    // InternalSCTX.g:18116:3: (enumLiteral_0= '&' )
                    // InternalSCTX.g:18117:4: enumLiteral_0= '&'
                    {
                    enumLiteral_0=(Token)match(input,86,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getParameterAccessTypeAccess().getCALL_BY_REFERENCEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getParameterAccessTypeAccess().getCALL_BY_REFERENCEEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCTX.g:18124:3: (enumLiteral_1= '!&' )
                    {
                    // InternalSCTX.g:18124:3: (enumLiteral_1= '!&' )
                    // InternalSCTX.g:18125:4: enumLiteral_1= '!&'
                    {
                    enumLiteral_1=(Token)match(input,159,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getParameterAccessTypeAccess().getPURE_OUTPUTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getParameterAccessTypeAccess().getPURE_OUTPUTEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameterAccessType"

    // $ANTLR start synpred8_InternalSCTX
    public final void synpred8_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_9_0 = null;


        // InternalSCTX.g:280:4: ( (lv_declarations_9_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )
        // InternalSCTX.g:280:4: (lv_declarations_9_0= ruleDeclarationOrMethodWithKeywordWOSemicolon )
        {
        // InternalSCTX.g:280:4: (lv_declarations_9_0= ruleDeclarationOrMethodWithKeywordWOSemicolon )
        // InternalSCTX.g:281:5: lv_declarations_9_0= ruleDeclarationOrMethodWithKeywordWOSemicolon
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getRootStateAccess().getDeclarationsDeclarationOrMethodWithKeywordWOSemicolonParserRuleCall_6_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_9_0=ruleDeclarationOrMethodWithKeywordWOSemicolon();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred8_InternalSCTX

    // $ANTLR start synpred10_InternalSCTX
    public final void synpred10_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_regions_11_0 = null;


        // InternalSCTX.g:318:4: ( ( (lv_regions_11_0= ruleImplicitControlflowRegion ) ) )
        // InternalSCTX.g:318:4: ( (lv_regions_11_0= ruleImplicitControlflowRegion ) )
        {
        // InternalSCTX.g:318:4: ( (lv_regions_11_0= ruleImplicitControlflowRegion ) )
        // InternalSCTX.g:319:5: (lv_regions_11_0= ruleImplicitControlflowRegion )
        {
        // InternalSCTX.g:319:5: (lv_regions_11_0= ruleImplicitControlflowRegion )
        // InternalSCTX.g:320:6: lv_regions_11_0= ruleImplicitControlflowRegion
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getRootStateAccess().getRegionsImplicitControlflowRegionParserRuleCall_8_0_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_regions_11_0=ruleImplicitControlflowRegion();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred10_InternalSCTX

    // $ANTLR start synpred17_InternalSCTX
    public final void synpred17_InternalSCTX_fragment() throws RecognitionException {   
        // InternalSCTX.g:457:4: ( 'state' )
        // InternalSCTX.g:457:5: 'state'
        {
        match(input,27,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred17_InternalSCTX

    // $ANTLR start synpred26_InternalSCTX
    public final void synpred26_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_19_0 = null;


        // InternalSCTX.g:626:6: ( (lv_declarations_19_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )
        // InternalSCTX.g:626:6: (lv_declarations_19_0= ruleDeclarationOrMethodWithKeywordWOSemicolon )
        {
        // InternalSCTX.g:626:6: (lv_declarations_19_0= ruleDeclarationOrMethodWithKeywordWOSemicolon )
        // InternalSCTX.g:627:7: lv_declarations_19_0= ruleDeclarationOrMethodWithKeywordWOSemicolon
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getStateAccess().getDeclarationsDeclarationOrMethodWithKeywordWOSemicolonParserRuleCall_8_1_3_0());
          						
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_19_0=ruleDeclarationOrMethodWithKeywordWOSemicolon();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred26_InternalSCTX

    // $ANTLR start synpred28_InternalSCTX
    public final void synpred28_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_regions_21_0 = null;


        // InternalSCTX.g:664:6: ( ( (lv_regions_21_0= ruleImplicitControlflowRegion ) ) )
        // InternalSCTX.g:664:6: ( (lv_regions_21_0= ruleImplicitControlflowRegion ) )
        {
        // InternalSCTX.g:664:6: ( (lv_regions_21_0= ruleImplicitControlflowRegion ) )
        // InternalSCTX.g:665:7: (lv_regions_21_0= ruleImplicitControlflowRegion )
        {
        // InternalSCTX.g:665:7: (lv_regions_21_0= ruleImplicitControlflowRegion )
        // InternalSCTX.g:666:8: lv_regions_21_0= ruleImplicitControlflowRegion
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getStateAccess().getRegionsImplicitControlflowRegionParserRuleCall_8_1_5_0_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_regions_21_0=ruleImplicitControlflowRegion();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred28_InternalSCTX

    // $ANTLR start synpred42_InternalSCTX
    public final void synpred42_InternalSCTX_fragment() throws RecognitionException {   
        Token lv_triggerDelay_4_0=null;

        // InternalSCTX.g:1098:5: ( (lv_triggerDelay_4_0= RULE_INT ) )
        // InternalSCTX.g:1098:5: (lv_triggerDelay_4_0= RULE_INT )
        {
        // InternalSCTX.g:1098:5: (lv_triggerDelay_4_0= RULE_INT )
        // InternalSCTX.g:1099:6: lv_triggerDelay_4_0= RULE_INT
        {
        lv_triggerDelay_4_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred42_InternalSCTX

    // $ANTLR start synpred43_InternalSCTX
    public final void synpred43_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_trigger_5_0 = null;


        // InternalSCTX.g:1116:5: ( ( (lv_trigger_5_0= ruleBoolScheduleExpression ) ) )
        // InternalSCTX.g:1116:5: ( (lv_trigger_5_0= ruleBoolScheduleExpression ) )
        {
        // InternalSCTX.g:1116:5: ( (lv_trigger_5_0= ruleBoolScheduleExpression ) )
        // InternalSCTX.g:1117:6: (lv_trigger_5_0= ruleBoolScheduleExpression )
        {
        // InternalSCTX.g:1117:6: (lv_trigger_5_0= ruleBoolScheduleExpression )
        // InternalSCTX.g:1118:7: lv_trigger_5_0= ruleBoolScheduleExpression
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getTransitionAccess().getTriggerBoolScheduleExpressionParserRuleCall_3_2_0_0());
          						
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_trigger_5_0=ruleBoolScheduleExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred43_InternalSCTX

    // $ANTLR start synpred52_InternalSCTX
    public final void synpred52_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_ControlflowRegion_0 = null;


        // InternalSCTX.g:1361:3: (this_ControlflowRegion_0= ruleControlflowRegion )
        // InternalSCTX.g:1361:3: this_ControlflowRegion_0= ruleControlflowRegion
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ControlflowRegion_0=ruleControlflowRegion();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred52_InternalSCTX

    // $ANTLR start synpred68_InternalSCTX
    public final void synpred68_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_26_0 = null;


        // InternalSCTX.g:1780:8: ( (lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )
        // InternalSCTX.g:1780:8: (lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon )
        {
        // InternalSCTX.g:1780:8: (lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon )
        // InternalSCTX.g:1781:9: lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon
        {
        if ( state.backtracking==0 ) {

          									newCompositeNode(grammarAccess.getControlflowRegionAccess().getDeclarationsDeclarationOrMethodWithKeywordWOSemicolonParserRuleCall_7_1_2_0_1_0());
          								
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_26_0=ruleDeclarationOrMethodWithKeywordWOSemicolon();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred68_InternalSCTX

    // $ANTLR start synpred70_InternalSCTX
    public final void synpred70_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_states_28_0 = null;


        // InternalSCTX.g:1818:8: ( ( (lv_states_28_0= ruleImplicitState ) ) )
        // InternalSCTX.g:1818:8: ( (lv_states_28_0= ruleImplicitState ) )
        {
        // InternalSCTX.g:1818:8: ( (lv_states_28_0= ruleImplicitState ) )
        // InternalSCTX.g:1819:9: (lv_states_28_0= ruleImplicitState )
        {
        // InternalSCTX.g:1819:9: (lv_states_28_0= ruleImplicitState )
        // InternalSCTX.g:1820:10: lv_states_28_0= ruleImplicitState
        {
        if ( state.backtracking==0 ) {

          										newCompositeNode(grammarAccess.getControlflowRegionAccess().getStatesImplicitStateParserRuleCall_7_1_2_0_3_0_0());
          									
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_states_28_0=ruleImplicitState();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred70_InternalSCTX

    // $ANTLR start synpred73_InternalSCTX
    public final void synpred73_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_32_0 = null;


        // InternalSCTX.g:1870:8: ( (lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )
        // InternalSCTX.g:1870:8: (lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon )
        {
        // InternalSCTX.g:1870:8: (lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon )
        // InternalSCTX.g:1871:9: lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon
        {
        if ( state.backtracking==0 ) {

          									newCompositeNode(grammarAccess.getControlflowRegionAccess().getDeclarationsDeclarationOrMethodWithKeywordWOSemicolonParserRuleCall_7_1_2_1_1_0());
          								
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_32_0=ruleDeclarationOrMethodWithKeywordWOSemicolon();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred73_InternalSCTX

    // $ANTLR start synpred75_InternalSCTX
    public final void synpred75_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_states_34_0 = null;


        // InternalSCTX.g:1908:8: ( (lv_states_34_0= ruleState ) )
        // InternalSCTX.g:1908:8: (lv_states_34_0= ruleState )
        {
        // InternalSCTX.g:1908:8: (lv_states_34_0= ruleState )
        // InternalSCTX.g:1909:9: lv_states_34_0= ruleState
        {
        if ( state.backtracking==0 ) {

          									newCompositeNode(grammarAccess.getControlflowRegionAccess().getStatesStateParserRuleCall_7_1_2_1_3_0());
          								
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_states_34_0=ruleState();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred75_InternalSCTX

    // $ANTLR start synpred89_InternalSCTX
    public final void synpred89_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_16_0 = null;


        // InternalSCTX.g:2286:6: ( (lv_declarations_16_0= ruleDeclarationWOSemicolon ) )
        // InternalSCTX.g:2286:6: (lv_declarations_16_0= ruleDeclarationWOSemicolon )
        {
        // InternalSCTX.g:2286:6: (lv_declarations_16_0= ruleDeclarationWOSemicolon )
        // InternalSCTX.g:2287:7: lv_declarations_16_0= ruleDeclarationWOSemicolon
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getDataflowRegionAccess().getDeclarationsDeclarationWOSemicolonParserRuleCall_9_0_1_0());
          						
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_16_0=ruleDeclarationWOSemicolon();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred89_InternalSCTX

    // $ANTLR start synpred90_InternalSCTX
    public final void synpred90_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_equations_17_1 = null;


        // InternalSCTX.g:2307:8: (lv_equations_17_1= ruleDataflowAssignment )
        // InternalSCTX.g:2307:8: lv_equations_17_1= ruleDataflowAssignment
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getDataflowRegionAccess().getEquationsDataflowAssignmentParserRuleCall_9_0_2_0_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_equations_17_1=ruleDataflowAssignment();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred90_InternalSCTX

    // $ANTLR start synpred93_InternalSCTX
    public final void synpred93_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_20_0 = null;


        // InternalSCTX.g:2353:6: ( (lv_declarations_20_0= ruleDeclarationWOSemicolon ) )
        // InternalSCTX.g:2353:6: (lv_declarations_20_0= ruleDeclarationWOSemicolon )
        {
        // InternalSCTX.g:2353:6: (lv_declarations_20_0= ruleDeclarationWOSemicolon )
        // InternalSCTX.g:2354:7: lv_declarations_20_0= ruleDeclarationWOSemicolon
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getDataflowRegionAccess().getDeclarationsDeclarationWOSemicolonParserRuleCall_9_1_1_0());
          						
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_20_0=ruleDeclarationWOSemicolon();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred93_InternalSCTX

    // $ANTLR start synpred94_InternalSCTX
    public final void synpred94_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_equations_21_1 = null;


        // InternalSCTX.g:2374:8: (lv_equations_21_1= ruleDataflowAssignment )
        // InternalSCTX.g:2374:8: lv_equations_21_1= ruleDataflowAssignment
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getDataflowRegionAccess().getEquationsDataflowAssignmentParserRuleCall_9_1_2_0_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_equations_21_1=ruleDataflowAssignment();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred94_InternalSCTX

    // $ANTLR start synpred95_InternalSCTX
    public final void synpred95_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_equations_21_1 = null;

        EObject lv_equations_21_2 = null;


        // InternalSCTX.g:2372:6: ( ( (lv_equations_21_1= ruleDataflowAssignment | lv_equations_21_2= ruleAssignment ) ) )
        // InternalSCTX.g:2372:6: ( (lv_equations_21_1= ruleDataflowAssignment | lv_equations_21_2= ruleAssignment ) )
        {
        // InternalSCTX.g:2372:6: ( (lv_equations_21_1= ruleDataflowAssignment | lv_equations_21_2= ruleAssignment ) )
        // InternalSCTX.g:2373:7: (lv_equations_21_1= ruleDataflowAssignment | lv_equations_21_2= ruleAssignment )
        {
        // InternalSCTX.g:2373:7: (lv_equations_21_1= ruleDataflowAssignment | lv_equations_21_2= ruleAssignment )
        int alt517=2;
        switch ( input.LA(1) ) {
        case RULE_COMMENT_ANNOTATION:
            {
            int LA517_1 = input.LA(2);

            if ( (synpred94_InternalSCTX()) ) {
                alt517=1;
            }
            else if ( (true) ) {
                alt517=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 517, 1, input);

                throw nvae;
            }
            }
            break;
        case 103:
            {
            int LA517_2 = input.LA(2);

            if ( (synpred94_InternalSCTX()) ) {
                alt517=1;
            }
            else if ( (true) ) {
                alt517=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 517, 2, input);

                throw nvae;
            }
            }
            break;
        case RULE_ID:
            {
            int LA517_3 = input.LA(2);

            if ( (synpred94_InternalSCTX()) ) {
                alt517=1;
            }
            else if ( (true) ) {
                alt517=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 517, 3, input);

                throw nvae;
            }
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 517, 0, input);

            throw nvae;
        }

        switch (alt517) {
            case 1 :
                // InternalSCTX.g:2374:8: lv_equations_21_1= ruleDataflowAssignment
                {
                pushFollow(FollowSets000.FOLLOW_2);
                lv_equations_21_1=ruleDataflowAssignment();

                state._fsp--;
                if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalSCTX.g:2390:8: lv_equations_21_2= ruleAssignment
                {
                if ( state.backtracking==0 ) {

                  								newCompositeNode(grammarAccess.getDataflowRegionAccess().getEquationsAssignmentParserRuleCall_9_1_2_0_1());
                  							
                }
                pushFollow(FollowSets000.FOLLOW_2);
                lv_equations_21_2=ruleAssignment();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred95_InternalSCTX

    // $ANTLR start synpred110_InternalSCTX
    public final void synpred110_InternalSCTX_fragment() throws RecognitionException {   
        Token lv_triggerDelay_5_0=null;

        // InternalSCTX.g:2837:5: ( (lv_triggerDelay_5_0= RULE_INT ) )
        // InternalSCTX.g:2837:5: (lv_triggerDelay_5_0= RULE_INT )
        {
        // InternalSCTX.g:2837:5: (lv_triggerDelay_5_0= RULE_INT )
        // InternalSCTX.g:2838:6: lv_triggerDelay_5_0= RULE_INT
        {
        lv_triggerDelay_5_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred110_InternalSCTX

    // $ANTLR start synpred126_InternalSCTX
    public final void synpred126_InternalSCTX_fragment() throws RecognitionException {   
        Token lv_triggerDelay_6_0=null;

        // InternalSCTX.g:3257:5: ( (lv_triggerDelay_6_0= RULE_INT ) )
        // InternalSCTX.g:3257:5: (lv_triggerDelay_6_0= RULE_INT )
        {
        // InternalSCTX.g:3257:5: (lv_triggerDelay_6_0= RULE_INT )
        // InternalSCTX.g:3258:6: lv_triggerDelay_6_0= RULE_INT
        {
        lv_triggerDelay_6_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred126_InternalSCTX

    // $ANTLR start synpred133_InternalSCTX
    public final void synpred133_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_Declaration_0 = null;


        // InternalSCTX.g:3475:3: (this_Declaration_0= superDeclaration )
        // InternalSCTX.g:3475:3: this_Declaration_0= superDeclaration
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Declaration_0=superDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred133_InternalSCTX

    // $ANTLR start synpred134_InternalSCTX
    public final void synpred134_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_SclAssignment_0 = null;


        // InternalSCTX.g:3517:3: (this_SclAssignment_0= ruleSclAssignment )
        // InternalSCTX.g:3517:3: this_SclAssignment_0= ruleSclAssignment
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_SclAssignment_0=ruleSclAssignment();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred134_InternalSCTX

    // $ANTLR start synpred135_InternalSCTX
    public final void synpred135_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_SclPostfixAssignment_1 = null;


        // InternalSCTX.g:3529:3: (this_SclPostfixAssignment_1= ruleSclPostfixAssignment )
        // InternalSCTX.g:3529:3: this_SclPostfixAssignment_1= ruleSclPostfixAssignment
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_SclPostfixAssignment_1=ruleSclPostfixAssignment();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred135_InternalSCTX

    // $ANTLR start synpred136_InternalSCTX
    public final void synpred136_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_Label_2 = null;


        // InternalSCTX.g:3541:3: (this_Label_2= ruleLabel )
        // InternalSCTX.g:3541:3: this_Label_2= ruleLabel
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Label_2=ruleLabel();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred136_InternalSCTX

    // $ANTLR start synpred137_InternalSCTX
    public final void synpred137_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_SclEffectAssignment_3 = null;


        // InternalSCTX.g:3553:3: (this_SclEffectAssignment_3= ruleSclEffectAssignment )
        // InternalSCTX.g:3553:3: this_SclEffectAssignment_3= ruleSclEffectAssignment
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_SclEffectAssignment_3=ruleSclEffectAssignment();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred137_InternalSCTX

    // $ANTLR start synpred138_InternalSCTX
    public final void synpred138_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_Conditional_4 = null;


        // InternalSCTX.g:3565:3: (this_Conditional_4= ruleConditional )
        // InternalSCTX.g:3565:3: this_Conditional_4= ruleConditional
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Conditional_4=ruleConditional();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred138_InternalSCTX

    // $ANTLR start synpred139_InternalSCTX
    public final void synpred139_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_Goto_5 = null;


        // InternalSCTX.g:3577:3: (this_Goto_5= ruleGoto )
        // InternalSCTX.g:3577:3: this_Goto_5= ruleGoto
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Goto_5=ruleGoto();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred139_InternalSCTX

    // $ANTLR start synpred140_InternalSCTX
    public final void synpred140_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_ScopeStatement_6 = null;


        // InternalSCTX.g:3589:3: (this_ScopeStatement_6= ruleScopeStatement )
        // InternalSCTX.g:3589:3: this_ScopeStatement_6= ruleScopeStatement
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ScopeStatement_6=ruleScopeStatement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred140_InternalSCTX

    // $ANTLR start synpred141_InternalSCTX
    public final void synpred141_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_Return_7 = null;


        // InternalSCTX.g:3601:3: (this_Return_7= ruleReturn )
        // InternalSCTX.g:3601:3: this_Return_7= ruleReturn
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Return_7=ruleReturn();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred141_InternalSCTX

    // $ANTLR start synpred143_InternalSCTX
    public final void synpred143_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_Effect_0 = null;


        // InternalSCTX.g:3655:3: (this_Effect_0= superEffect )
        // InternalSCTX.g:3655:3: this_Effect_0= superEffect
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Effect_0=superEffect();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred143_InternalSCTX

    // $ANTLR start synpred145_InternalSCTX
    public final void synpred145_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_3_0 = null;


        // InternalSCTX.g:3731:4: ( (lv_declarations_3_0= ruleDeclaration ) )
        // InternalSCTX.g:3731:4: (lv_declarations_3_0= ruleDeclaration )
        {
        // InternalSCTX.g:3731:4: (lv_declarations_3_0= ruleDeclaration )
        // InternalSCTX.g:3732:5: lv_declarations_3_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getCodeEffectAccess().getDeclarationsDeclarationParserRuleCall_3_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_3_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred145_InternalSCTX

    // $ANTLR start synpred162_InternalSCTX
    public final void synpred162_InternalSCTX_fragment() throws RecognitionException {   
        Token otherlv_21=null;
        EObject lv_valuedObjects_20_0 = null;

        EObject lv_valuedObjects_22_0 = null;


        // InternalSCTX.g:4080:4: ( ( (lv_valuedObjects_20_0= ruleValuedObject ) ) (otherlv_21= ',' ( (lv_valuedObjects_22_0= ruleValuedObject ) ) )* )
        // InternalSCTX.g:4080:4: ( (lv_valuedObjects_20_0= ruleValuedObject ) ) (otherlv_21= ',' ( (lv_valuedObjects_22_0= ruleValuedObject ) ) )*
        {
        // InternalSCTX.g:4080:4: ( (lv_valuedObjects_20_0= ruleValuedObject ) )
        // InternalSCTX.g:4081:5: (lv_valuedObjects_20_0= ruleValuedObject )
        {
        // InternalSCTX.g:4081:5: (lv_valuedObjects_20_0= ruleValuedObject )
        // InternalSCTX.g:4082:6: lv_valuedObjects_20_0= ruleValuedObject
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_10_0_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_213);
        lv_valuedObjects_20_0=ruleValuedObject();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSCTX.g:4099:4: (otherlv_21= ',' ( (lv_valuedObjects_22_0= ruleValuedObject ) ) )*
        loop530:
        do {
            int alt530=2;
            int LA530_0 = input.LA(1);

            if ( (LA530_0==20) ) {
                alt530=1;
            }


            switch (alt530) {
        	case 1 :
        	    // InternalSCTX.g:4100:5: otherlv_21= ',' ( (lv_valuedObjects_22_0= ruleValuedObject ) )
        	    {
        	    otherlv_21=(Token)match(input,20,FollowSets000.FOLLOW_116); if (state.failed) return ;
        	    // InternalSCTX.g:4104:5: ( (lv_valuedObjects_22_0= ruleValuedObject ) )
        	    // InternalSCTX.g:4105:6: (lv_valuedObjects_22_0= ruleValuedObject )
        	    {
        	    // InternalSCTX.g:4105:6: (lv_valuedObjects_22_0= ruleValuedObject )
        	    // InternalSCTX.g:4106:7: lv_valuedObjects_22_0= ruleValuedObject
        	    {
        	    if ( state.backtracking==0 ) {

        	      							newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_10_1_1_0());
        	      						
        	    }
        	    pushFollow(FollowSets000.FOLLOW_213);
        	    lv_valuedObjects_22_0=ruleValuedObject();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop530;
            }
        } while (true);


        }
    }
    // $ANTLR end synpred162_InternalSCTX

    // $ANTLR start synpred165_InternalSCTX
    public final void synpred165_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_4_0 = null;


        // InternalSCTX.g:4208:4: ( (lv_declarations_4_0= ruleDeclarationWOSemicolon ) )
        // InternalSCTX.g:4208:4: (lv_declarations_4_0= ruleDeclarationWOSemicolon )
        {
        // InternalSCTX.g:4208:4: (lv_declarations_4_0= ruleDeclarationWOSemicolon )
        // InternalSCTX.g:4209:5: lv_declarations_4_0= ruleDeclarationWOSemicolon
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getPolicyRegionAccess().getDeclarationsDeclarationWOSemicolonParserRuleCall_4_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_4_0=ruleDeclarationWOSemicolon();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred165_InternalSCTX

    // $ANTLR start synpred172_InternalSCTX
    public final void synpred172_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_trigger_3_0 = null;


        // InternalSCTX.g:4414:5: ( ( (lv_trigger_3_0= ruleLogicalOrExpression ) ) )
        // InternalSCTX.g:4414:5: ( (lv_trigger_3_0= ruleLogicalOrExpression ) )
        {
        // InternalSCTX.g:4414:5: ( (lv_trigger_3_0= ruleLogicalOrExpression ) )
        // InternalSCTX.g:4415:6: (lv_trigger_3_0= ruleLogicalOrExpression )
        {
        // InternalSCTX.g:4415:6: (lv_trigger_3_0= ruleLogicalOrExpression )
        // InternalSCTX.g:4416:7: lv_trigger_3_0= ruleLogicalOrExpression
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getPolicyTransitionAccess().getTriggerLogicalOrExpressionParserRuleCall_2_1_0_0());
          						
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_trigger_3_0=ruleLogicalOrExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred172_InternalSCTX

    // $ANTLR start synpred177_InternalSCTX
    public final void synpred177_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_DeclarationWOSemicolon_0 = null;


        // InternalSCTX.g:4568:3: (this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon )
        // InternalSCTX.g:4568:3: this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_DeclarationWOSemicolon_0=ruleDeclarationWOSemicolon();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred177_InternalSCTX

    // $ANTLR start synpred186_InternalSCTX
    public final void synpred186_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_16_0 = null;


        // InternalSCTX.g:4811:5: ( (lv_declarations_16_0= ruleDeclaration ) )
        // InternalSCTX.g:4811:5: (lv_declarations_16_0= ruleDeclaration )
        {
        // InternalSCTX.g:4811:5: (lv_declarations_16_0= ruleDeclaration )
        // InternalSCTX.g:4812:6: lv_declarations_16_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getDeclarationsDeclarationParserRuleCall_8_2_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_16_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred186_InternalSCTX

    // $ANTLR start synpred191_InternalSCTX
    public final void synpred191_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_4_0 = null;


        // InternalSCTX.g:4920:4: ( (lv_declarations_4_0= ruleDeclaration ) )
        // InternalSCTX.g:4920:4: (lv_declarations_4_0= ruleDeclaration )
        {
        // InternalSCTX.g:4920:4: (lv_declarations_4_0= ruleDeclaration )
        // InternalSCTX.g:4921:5: lv_declarations_4_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getModuleAccess().getDeclarationsDeclarationParserRuleCall_4_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_4_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred191_InternalSCTX

    // $ANTLR start synpred204_InternalSCTX
    public final void synpred204_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_annotations_0_0 = null;


        // InternalSCTX.g:5358:4: ( (lv_annotations_0_0= ruleAnnotation ) )
        // InternalSCTX.g:5358:4: (lv_annotations_0_0= ruleAnnotation )
        {
        // InternalSCTX.g:5358:4: (lv_annotations_0_0= ruleAnnotation )
        // InternalSCTX.g:5359:5: lv_annotations_0_0= ruleAnnotation
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getSclEffectAssignmentAccess().getAnnotationsAnnotationParserRuleCall_0_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_annotations_0_0=ruleAnnotation();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred204_InternalSCTX

    // $ANTLR start synpred214_InternalSCTX
    public final void synpred214_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_expression_2_1 = null;


        // InternalSCTX.g:5606:6: (lv_expression_2_1= ruleBoolScheduleExpression )
        // InternalSCTX.g:5606:6: lv_expression_2_1= ruleBoolScheduleExpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getConditionalAccess().getExpressionBoolScheduleExpressionParserRuleCall_2_0_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_expression_2_1=ruleBoolScheduleExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred214_InternalSCTX

    // $ANTLR start synpred215_InternalSCTX
    public final void synpred215_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_4_0 = null;


        // InternalSCTX.g:5645:4: ( (lv_declarations_4_0= ruleDeclaration ) )
        // InternalSCTX.g:5645:4: (lv_declarations_4_0= ruleDeclaration )
        {
        // InternalSCTX.g:5645:4: (lv_declarations_4_0= ruleDeclaration )
        // InternalSCTX.g:5646:5: lv_declarations_4_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getConditionalAccess().getDeclarationsDeclarationParserRuleCall_4_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_4_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred215_InternalSCTX

    // $ANTLR start synpred217_InternalSCTX
    public final void synpred217_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_else_7_0 = null;


        // InternalSCTX.g:5687:4: ( ( (lv_else_7_0= ruleElseScope ) ) )
        // InternalSCTX.g:5687:4: ( (lv_else_7_0= ruleElseScope ) )
        {
        // InternalSCTX.g:5687:4: ( (lv_else_7_0= ruleElseScope ) )
        // InternalSCTX.g:5688:5: (lv_else_7_0= ruleElseScope )
        {
        // InternalSCTX.g:5688:5: (lv_else_7_0= ruleElseScope )
        // InternalSCTX.g:5689:6: lv_else_7_0= ruleElseScope
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getConditionalAccess().getElseElseScopeParserRuleCall_7_0_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_else_7_0=ruleElseScope();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred217_InternalSCTX

    // $ANTLR start synpred220_InternalSCTX
    public final void synpred220_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_4_0 = null;


        // InternalSCTX.g:5779:4: ( (lv_declarations_4_0= ruleDeclaration ) )
        // InternalSCTX.g:5779:4: (lv_declarations_4_0= ruleDeclaration )
        {
        // InternalSCTX.g:5779:4: (lv_declarations_4_0= ruleDeclaration )
        // InternalSCTX.g:5780:5: lv_declarations_4_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getElseScopeAccess().getDeclarationsDeclarationParserRuleCall_4_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_4_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred220_InternalSCTX

    // $ANTLR start synpred226_InternalSCTX
    public final void synpred226_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_3_0 = null;


        // InternalSCTX.g:5960:6: ( (lv_declarations_3_0= ruleDeclaration ) )
        // InternalSCTX.g:5960:6: (lv_declarations_3_0= ruleDeclaration )
        {
        // InternalSCTX.g:5960:6: (lv_declarations_3_0= ruleDeclaration )
        // InternalSCTX.g:5961:7: lv_declarations_3_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getThreadAccess().getDeclarationsDeclarationParserRuleCall_1_0_2_0());
          						
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_3_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred226_InternalSCTX

    // $ANTLR start synpred228_InternalSCTX
    public final void synpred228_InternalSCTX_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        Token otherlv_5=null;
        EObject lv_annotations_1_0 = null;

        EObject lv_declarations_3_0 = null;

        EObject lv_statements_4_0 = null;


        // InternalSCTX.g:5935:4: ( ( ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' ) )
        // InternalSCTX.g:5935:4: ( ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' )
        {
        // InternalSCTX.g:5935:4: ( ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' )
        // InternalSCTX.g:5936:5: ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}'
        {
        // InternalSCTX.g:5936:5: ( (lv_annotations_1_0= ruleAnnotation ) )*
        loop543:
        do {
            int alt543=2;
            int LA543_0 = input.LA(1);

            if ( (LA543_0==RULE_COMMENT_ANNOTATION||LA543_0==103) ) {
                alt543=1;
            }


            switch (alt543) {
        	case 1 :
        	    // InternalSCTX.g:5937:6: (lv_annotations_1_0= ruleAnnotation )
        	    {
        	    // InternalSCTX.g:5937:6: (lv_annotations_1_0= ruleAnnotation )
        	    // InternalSCTX.g:5938:7: lv_annotations_1_0= ruleAnnotation
        	    {
        	    if ( state.backtracking==0 ) {

        	      							newCompositeNode(grammarAccess.getThreadAccess().getAnnotationsAnnotationParserRuleCall_1_0_0_0());
        	      						
        	    }
        	    pushFollow(FollowSets000.FOLLOW_105);
        	    lv_annotations_1_0=ruleAnnotation();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop543;
            }
        } while (true);

        otherlv_2=(Token)match(input,21,FollowSets000.FOLLOW_106); if (state.failed) return ;
        // InternalSCTX.g:5959:5: ( (lv_declarations_3_0= ruleDeclaration ) )*
        loop544:
        do {
            int alt544=2;
            alt544 = dfa544.predict(input);
            switch (alt544) {
        	case 1 :
        	    // InternalSCTX.g:5960:6: (lv_declarations_3_0= ruleDeclaration )
        	    {
        	    // InternalSCTX.g:5960:6: (lv_declarations_3_0= ruleDeclaration )
        	    // InternalSCTX.g:5961:7: lv_declarations_3_0= ruleDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      							newCompositeNode(grammarAccess.getThreadAccess().getDeclarationsDeclarationParserRuleCall_1_0_2_0());
        	      						
        	    }
        	    pushFollow(FollowSets000.FOLLOW_106);
        	    lv_declarations_3_0=ruleDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop544;
            }
        } while (true);

        // InternalSCTX.g:5978:5: ( (lv_statements_4_0= ruleStatement ) )*
        loop545:
        do {
            int alt545=2;
            int LA545_0 = input.LA(1);

            if ( (LA545_0==RULE_ID||LA545_0==RULE_HOSTCODE||LA545_0==RULE_COMMENT_ANNOTATION||LA545_0==21||LA545_0==36||LA545_0==44||(LA545_0>=67 && LA545_0<=68)||LA545_0==70||LA545_0==76||(LA545_0>=80 && LA545_0<=81)||LA545_0==103) ) {
                alt545=1;
            }


            switch (alt545) {
        	case 1 :
        	    // InternalSCTX.g:5979:6: (lv_statements_4_0= ruleStatement )
        	    {
        	    // InternalSCTX.g:5979:6: (lv_statements_4_0= ruleStatement )
        	    // InternalSCTX.g:5980:7: lv_statements_4_0= ruleStatement
        	    {
        	    if ( state.backtracking==0 ) {

        	      							newCompositeNode(grammarAccess.getThreadAccess().getStatementsStatementParserRuleCall_1_0_3_0());
        	      						
        	    }
        	    pushFollow(FollowSets000.FOLLOW_107);
        	    lv_statements_4_0=ruleStatement();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop545;
            }
        } while (true);

        otherlv_5=(Token)match(input,22,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred228_InternalSCTX

    // $ANTLR start synpred231_InternalSCTX
    public final void synpred231_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_3_0 = null;


        // InternalSCTX.g:6076:4: ( (lv_declarations_3_0= ruleDeclaration ) )
        // InternalSCTX.g:6076:4: (lv_declarations_3_0= ruleDeclaration )
        {
        // InternalSCTX.g:6076:4: (lv_declarations_3_0= ruleDeclaration )
        // InternalSCTX.g:6077:5: lv_declarations_3_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getScopeStatementAccess().getDeclarationsDeclarationParserRuleCall_3_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_3_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred231_InternalSCTX

    // $ANTLR start synpred233_InternalSCTX
    public final void synpred233_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_initializationDeclaration_2_0 = null;


        // InternalSCTX.g:6145:4: ( ( (lv_initializationDeclaration_2_0= ruleLoopDeclaration ) ) )
        // InternalSCTX.g:6145:4: ( (lv_initializationDeclaration_2_0= ruleLoopDeclaration ) )
        {
        // InternalSCTX.g:6145:4: ( (lv_initializationDeclaration_2_0= ruleLoopDeclaration ) )
        // InternalSCTX.g:6146:5: (lv_initializationDeclaration_2_0= ruleLoopDeclaration )
        {
        // InternalSCTX.g:6146:5: (lv_initializationDeclaration_2_0= ruleLoopDeclaration )
        // InternalSCTX.g:6147:6: lv_initializationDeclaration_2_0= ruleLoopDeclaration
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getForLoopAccess().getInitializationDeclarationLoopDeclarationParserRuleCall_2_0_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_initializationDeclaration_2_0=ruleLoopDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred233_InternalSCTX

    // $ANTLR start synpred234_InternalSCTX
    public final void synpred234_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_initialization_3_0 = null;


        // InternalSCTX.g:6165:4: ( ( (lv_initialization_3_0= ruleEffectOrAssignment ) ) )
        // InternalSCTX.g:6165:4: ( (lv_initialization_3_0= ruleEffectOrAssignment ) )
        {
        // InternalSCTX.g:6165:4: ( (lv_initialization_3_0= ruleEffectOrAssignment ) )
        // InternalSCTX.g:6166:5: (lv_initialization_3_0= ruleEffectOrAssignment )
        {
        // InternalSCTX.g:6166:5: (lv_initialization_3_0= ruleEffectOrAssignment )
        // InternalSCTX.g:6167:6: lv_initialization_3_0= ruleEffectOrAssignment
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getForLoopAccess().getInitializationEffectOrAssignmentParserRuleCall_2_1_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_initialization_3_0=ruleEffectOrAssignment();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred234_InternalSCTX

    // $ANTLR start synpred236_InternalSCTX
    public final void synpred236_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_10_0 = null;


        // InternalSCTX.g:6240:4: ( (lv_declarations_10_0= ruleDeclaration ) )
        // InternalSCTX.g:6240:4: (lv_declarations_10_0= ruleDeclaration )
        {
        // InternalSCTX.g:6240:4: (lv_declarations_10_0= ruleDeclaration )
        // InternalSCTX.g:6241:5: lv_declarations_10_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getForLoopAccess().getDeclarationsDeclarationParserRuleCall_9_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_10_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred236_InternalSCTX

    // $ANTLR start synpred241_InternalSCTX
    public final void synpred241_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_annotations_0_0 = null;


        // InternalSCTX.g:6433:4: ( (lv_annotations_0_0= ruleAnnotation ) )
        // InternalSCTX.g:6433:4: (lv_annotations_0_0= ruleAnnotation )
        {
        // InternalSCTX.g:6433:4: (lv_annotations_0_0= ruleAnnotation )
        // InternalSCTX.g:6434:5: lv_annotations_0_0= ruleAnnotation
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getEffectOrAssignmentAccess().getAnnotationsAnnotationParserRuleCall_0_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_annotations_0_0=ruleAnnotation();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred241_InternalSCTX

    // $ANTLR start synpred242_InternalSCTX
    public final void synpred242_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_reference_1_0 = null;

        Enumerator lv_operator_2_0 = null;


        // InternalSCTX.g:6452:4: ( ( ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) ) )
        // InternalSCTX.g:6452:4: ( ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) )
        {
        // InternalSCTX.g:6452:4: ( ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) )
        // InternalSCTX.g:6453:5: ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) )
        {
        // InternalSCTX.g:6453:5: ( (lv_reference_1_0= ruleValuedObjectReference ) )
        // InternalSCTX.g:6454:6: (lv_reference_1_0= ruleValuedObjectReference )
        {
        // InternalSCTX.g:6454:6: (lv_reference_1_0= ruleValuedObjectReference )
        // InternalSCTX.g:6455:7: lv_reference_1_0= ruleValuedObjectReference
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getEffectOrAssignmentAccess().getReferenceValuedObjectReferenceParserRuleCall_1_0_0_0());
          						
        }
        pushFollow(FollowSets000.FOLLOW_143);
        lv_reference_1_0=ruleValuedObjectReference();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSCTX.g:6472:5: ( (lv_operator_2_0= rulePostfixOperator ) )
        // InternalSCTX.g:6473:6: (lv_operator_2_0= rulePostfixOperator )
        {
        // InternalSCTX.g:6473:6: (lv_operator_2_0= rulePostfixOperator )
        // InternalSCTX.g:6474:7: lv_operator_2_0= rulePostfixOperator
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getEffectOrAssignmentAccess().getOperatorPostfixOperatorEnumRuleCall_1_0_1_0());
          						
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_operator_2_0=rulePostfixOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred242_InternalSCTX

    // $ANTLR start synpred243_InternalSCTX
    public final void synpred243_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_reference_3_0 = null;

        Enumerator lv_operator_4_0 = null;

        EObject lv_expression_5_0 = null;


        // InternalSCTX.g:6493:4: ( ( ( (lv_reference_3_0= ruleValuedObjectReference ) ) ( (lv_operator_4_0= ruleAssignOperator ) ) ( (lv_expression_5_0= ruleExpression ) ) ) )
        // InternalSCTX.g:6493:4: ( ( (lv_reference_3_0= ruleValuedObjectReference ) ) ( (lv_operator_4_0= ruleAssignOperator ) ) ( (lv_expression_5_0= ruleExpression ) ) )
        {
        // InternalSCTX.g:6493:4: ( ( (lv_reference_3_0= ruleValuedObjectReference ) ) ( (lv_operator_4_0= ruleAssignOperator ) ) ( (lv_expression_5_0= ruleExpression ) ) )
        // InternalSCTX.g:6494:5: ( (lv_reference_3_0= ruleValuedObjectReference ) ) ( (lv_operator_4_0= ruleAssignOperator ) ) ( (lv_expression_5_0= ruleExpression ) )
        {
        // InternalSCTX.g:6494:5: ( (lv_reference_3_0= ruleValuedObjectReference ) )
        // InternalSCTX.g:6495:6: (lv_reference_3_0= ruleValuedObjectReference )
        {
        // InternalSCTX.g:6495:6: (lv_reference_3_0= ruleValuedObjectReference )
        // InternalSCTX.g:6496:7: lv_reference_3_0= ruleValuedObjectReference
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getEffectOrAssignmentAccess().getReferenceValuedObjectReferenceParserRuleCall_1_1_0_0());
          						
        }
        pushFollow(FollowSets000.FOLLOW_70);
        lv_reference_3_0=ruleValuedObjectReference();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSCTX.g:6513:5: ( (lv_operator_4_0= ruleAssignOperator ) )
        // InternalSCTX.g:6514:6: (lv_operator_4_0= ruleAssignOperator )
        {
        // InternalSCTX.g:6514:6: (lv_operator_4_0= ruleAssignOperator )
        // InternalSCTX.g:6515:7: lv_operator_4_0= ruleAssignOperator
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getEffectOrAssignmentAccess().getOperatorAssignOperatorEnumRuleCall_1_1_1_0());
          						
        }
        pushFollow(FollowSets000.FOLLOW_30);
        lv_operator_4_0=ruleAssignOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSCTX.g:6532:5: ( (lv_expression_5_0= ruleExpression ) )
        // InternalSCTX.g:6533:6: (lv_expression_5_0= ruleExpression )
        {
        // InternalSCTX.g:6533:6: (lv_expression_5_0= ruleExpression )
        // InternalSCTX.g:6534:7: lv_expression_5_0= ruleExpression
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getEffectOrAssignmentAccess().getExpressionExpressionParserRuleCall_1_1_2_0());
          						
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_expression_5_0=ruleExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred243_InternalSCTX

    // $ANTLR start synpred244_InternalSCTX
    public final void synpred244_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_5_0 = null;


        // InternalSCTX.g:6628:4: ( (lv_declarations_5_0= ruleDeclaration ) )
        // InternalSCTX.g:6628:4: (lv_declarations_5_0= ruleDeclaration )
        {
        // InternalSCTX.g:6628:4: (lv_declarations_5_0= ruleDeclaration )
        // InternalSCTX.g:6629:5: lv_declarations_5_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getWhileLoopAccess().getDeclarationsDeclarationParserRuleCall_5_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_5_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred244_InternalSCTX

    // $ANTLR start synpred250_InternalSCTX
    public final void synpred250_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_annotations_1_0 = null;


        // InternalSCTX.g:6845:4: ( (lv_annotations_1_0= ruleAnnotation ) )
        // InternalSCTX.g:6845:4: (lv_annotations_1_0= ruleAnnotation )
        {
        // InternalSCTX.g:6845:4: (lv_annotations_1_0= ruleAnnotation )
        // InternalSCTX.g:6846:5: lv_annotations_1_0= ruleAnnotation
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getMethodDeclarationAccess().getAnnotationsAnnotationParserRuleCall_1_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_annotations_1_0=ruleAnnotation();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred250_InternalSCTX

    // $ANTLR start synpred259_InternalSCTX
    public final void synpred259_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_16_0 = null;


        // InternalSCTX.g:7037:6: ( (lv_declarations_16_0= ruleDeclaration ) )
        // InternalSCTX.g:7037:6: (lv_declarations_16_0= ruleDeclaration )
        {
        // InternalSCTX.g:7037:6: (lv_declarations_16_0= ruleDeclaration )
        // InternalSCTX.g:7038:7: lv_declarations_16_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getMethodDeclarationAccess().getDeclarationsDeclarationParserRuleCall_7_1_2_0());
          						
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_16_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred259_InternalSCTX

    // $ANTLR start synpred262_InternalSCTX
    public final void synpred262_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_annotations_1_0 = null;


        // InternalSCTX.g:7129:4: ( (lv_annotations_1_0= ruleAnnotation ) )
        // InternalSCTX.g:7129:4: (lv_annotations_1_0= ruleAnnotation )
        {
        // InternalSCTX.g:7129:4: (lv_annotations_1_0= ruleAnnotation )
        // InternalSCTX.g:7130:5: lv_annotations_1_0= ruleAnnotation
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_1_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_annotations_1_0=ruleAnnotation();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred262_InternalSCTX

    // $ANTLR start synpred270_InternalSCTX
    public final void synpred270_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_15_0 = null;


        // InternalSCTX.g:7315:5: ( (lv_declarations_15_0= ruleDeclaration ) )
        // InternalSCTX.g:7315:5: (lv_declarations_15_0= ruleDeclaration )
        {
        // InternalSCTX.g:7315:5: (lv_declarations_15_0= ruleDeclaration )
        // InternalSCTX.g:7316:6: lv_declarations_15_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getDeclarationsDeclarationParserRuleCall_7_2_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_15_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred270_InternalSCTX

    // $ANTLR start synpred273_InternalSCTX
    public final void synpred273_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_1_0 = null;


        // InternalSCTX.g:7387:4: ( (lv_declarations_1_0= ruleDeclaration ) )
        // InternalSCTX.g:7387:4: (lv_declarations_1_0= ruleDeclaration )
        {
        // InternalSCTX.g:7387:4: (lv_declarations_1_0= ruleDeclaration )
        // InternalSCTX.g:7388:5: lv_declarations_1_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getRootScopeAccess().getDeclarationsDeclarationParserRuleCall_1_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_1_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred273_InternalSCTX

    // $ANTLR start synpred277_InternalSCTX
    public final void synpred277_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_declarations_3_0 = null;


        // InternalSCTX.g:7501:4: ( (lv_declarations_3_0= ruleDeclaration ) )
        // InternalSCTX.g:7501:4: (lv_declarations_3_0= ruleDeclaration )
        {
        // InternalSCTX.g:7501:4: (lv_declarations_3_0= ruleDeclaration )
        // InternalSCTX.g:7502:5: lv_declarations_3_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getScopeAccess().getDeclarationsDeclarationParserRuleCall_3_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_3_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred277_InternalSCTX

    // $ANTLR start synpred280_InternalSCTX
    public final void synpred280_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_expression_0_1 = null;


        // InternalSCTX.g:7589:6: (lv_expression_0_1= ruleAnnotatedExpression )
        // InternalSCTX.g:7589:6: lv_expression_0_1= ruleAnnotatedExpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getTestEntityAccess().getExpressionAnnotatedExpressionParserRuleCall_0_0_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_expression_0_1=ruleAnnotatedExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred280_InternalSCTX

    // $ANTLR start synpred281_InternalSCTX
    public final void synpred281_InternalSCTX_fragment() throws RecognitionException {   
        EObject lv_expression_0_1 = null;

        EObject lv_expression_0_2 = null;


        // InternalSCTX.g:7586:3: ( ( ( (lv_expression_0_1= ruleAnnotatedExpression | lv_expression_0_2= ruleAnnotatedJsonExpression ) ) ) )
        // InternalSCTX.g:7586:3: ( ( (lv_expression_0_1= ruleAnnotatedExpression | lv_expression_0_2= ruleAnnotatedJsonExpression ) ) )
        {
        // InternalSCTX.g:7586:3: ( ( (lv_expression_0_1= ruleAnnotatedExpression | lv_expression_0_2= ruleAnnotatedJsonExpression ) ) )
        // InternalSCTX.g:7587:4: ( (lv_expression_0_1= ruleAnnotatedExpression | lv_expression_0_2= ruleAnnotatedJsonExpression ) )
        {
        // InternalSCTX.g:7587:4: ( (lv_expression_0_1= ruleAnnotatedExpression | lv_expression_0_2= ruleAnnotatedJsonExpression ) )
        // InternalSCTX.g:7588:5: (lv_expression_0_1= ruleAnnotatedExpression | lv_expression_0_2= ruleAnnotatedJsonExpression )
        {
        // InternalSCTX.g:7588:5: (lv_expression_0_1= ruleAnnotatedExpression | lv_expression_0_2= ruleAnnotatedJsonExpression )
        int alt554=2;
        switch ( input.LA(1) ) {
        case RULE_COMMENT_ANNOTATION:
            {
            int LA554_1 = input.LA(2);

            if ( (synpred280_InternalSCTX()) ) {
                alt554=1;
            }
            else if ( (true) ) {
                alt554=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 554, 1, input);

                throw nvae;
            }
            }
            break;
        case 103:
            {
            int LA554_2 = input.LA(2);

            if ( (synpred280_InternalSCTX()) ) {
                alt554=1;
            }
            else if ( (true) ) {
                alt554=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 554, 2, input);

                throw nvae;
            }
            }
            break;
        case 72:
            {
            alt554=1;
            }
            break;
        case 73:
            {
            alt554=2;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 554, 0, input);

            throw nvae;
        }

        switch (alt554) {
            case 1 :
                // InternalSCTX.g:7589:6: lv_expression_0_1= ruleAnnotatedExpression
                {
                pushFollow(FollowSets000.FOLLOW_2);
                lv_expression_0_1=ruleAnnotatedExpression();

                state._fsp--;
                if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalSCTX.g:7605:6: lv_expression_0_2= ruleAnnotatedJsonExpression
                {
                if ( state.backtracking==0 ) {

                  						newCompositeNode(grammarAccess.getTestEntityAccess().getExpressionAnnotatedJsonExpressionParserRuleCall_0_0_1());
                  					
                }
                pushFollow(FollowSets000.FOLLOW_2);
                lv_expression_0_2=ruleAnnotatedJsonExpression();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }


        }


        }


        }
    }
    // $ANTLR end synpred281_InternalSCTX

    // $ANTLR start synpred284_InternalSCTX
    public final void synpred284_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_VariableDeclaration_0 = null;


        // InternalSCTX.g:7784:3: (this_VariableDeclaration_0= ruleVariableDeclaration )
        // InternalSCTX.g:7784:3: this_VariableDeclaration_0= ruleVariableDeclaration
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_VariableDeclaration_0=ruleVariableDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred284_InternalSCTX

    // $ANTLR start synpred285_InternalSCTX
    public final void synpred285_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_ReferenceDeclaration_1 = null;


        // InternalSCTX.g:7796:3: (this_ReferenceDeclaration_1= ruleReferenceDeclaration )
        // InternalSCTX.g:7796:3: this_ReferenceDeclaration_1= ruleReferenceDeclaration
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ReferenceDeclaration_1=ruleReferenceDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred285_InternalSCTX

    // $ANTLR start synpred286_InternalSCTX
    public final void synpred286_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_ScheduleDeclaration_2 = null;


        // InternalSCTX.g:7808:3: (this_ScheduleDeclaration_2= ruleScheduleDeclaration )
        // InternalSCTX.g:7808:3: this_ScheduleDeclaration_2= ruleScheduleDeclaration
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ScheduleDeclaration_2=ruleScheduleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred286_InternalSCTX

    // $ANTLR start synpred287_InternalSCTX
    public final void synpred287_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_VariableDeclarationWOSemicolon_0 = null;


        // InternalSCTX.g:7850:3: (this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon )
        // InternalSCTX.g:7850:3: this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_VariableDeclarationWOSemicolon_0=ruleVariableDeclarationWOSemicolon();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred287_InternalSCTX

    // $ANTLR start synpred288_InternalSCTX
    public final void synpred288_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_ReferenceDeclarationWOSemicolon_1 = null;


        // InternalSCTX.g:7862:3: (this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon )
        // InternalSCTX.g:7862:3: this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ReferenceDeclarationWOSemicolon_1=ruleReferenceDeclarationWOSemicolon();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred288_InternalSCTX

    // $ANTLR start synpred289_InternalSCTX
    public final void synpred289_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_ScheduleDeclarationWOSemicolon_2 = null;


        // InternalSCTX.g:7874:3: (this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon )
        // InternalSCTX.g:7874:3: this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ScheduleDeclarationWOSemicolon_2=ruleScheduleDeclarationWOSemicolon();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred289_InternalSCTX

    // $ANTLR start synpred312_InternalSCTX
    public final void synpred312_InternalSCTX_fragment() throws RecognitionException {   
        Token otherlv_13=null;
        EObject lv_valuedObjects_14_0 = null;


        // InternalSCTX.g:8422:4: (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )
        // InternalSCTX.g:8422:4: otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) )
        {
        otherlv_13=(Token)match(input,20,FollowSets000.FOLLOW_116); if (state.failed) return ;
        // InternalSCTX.g:8426:4: ( (lv_valuedObjects_14_0= ruleValuedObject ) )
        // InternalSCTX.g:8427:5: (lv_valuedObjects_14_0= ruleValuedObject )
        {
        // InternalSCTX.g:8427:5: (lv_valuedObjects_14_0= ruleValuedObject )
        // InternalSCTX.g:8428:6: lv_valuedObjects_14_0= ruleValuedObject
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_9_1_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_valuedObjects_14_0=ruleValuedObject();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred312_InternalSCTX

    // $ANTLR start synpred330_InternalSCTX
    public final void synpred330_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_Declaration_0 = null;


        // InternalSCTX.g:8841:3: (this_Declaration_0= ruleDeclaration )
        // InternalSCTX.g:8841:3: this_Declaration_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Declaration_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred330_InternalSCTX

    // $ANTLR start synpred331_InternalSCTX
    public final void synpred331_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_DeclarationWOSemicolon_0 = null;


        // InternalSCTX.g:8883:3: (this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon )
        // InternalSCTX.g:8883:3: this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_DeclarationWOSemicolon_0=ruleDeclarationWOSemicolon();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred331_InternalSCTX

    // $ANTLR start synpred368_InternalSCTX
    public final void synpred368_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_Assignment_0 = null;


        // InternalSCTX.g:10090:3: (this_Assignment_0= ruleAssignment )
        // InternalSCTX.g:10090:3: this_Assignment_0= ruleAssignment
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Assignment_0=ruleAssignment();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred368_InternalSCTX

    // $ANTLR start synpred369_InternalSCTX
    public final void synpred369_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_PostfixEffect_1 = null;


        // InternalSCTX.g:10102:3: (this_PostfixEffect_1= rulePostfixEffect )
        // InternalSCTX.g:10102:3: this_PostfixEffect_1= rulePostfixEffect
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_PostfixEffect_1=rulePostfixEffect();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred369_InternalSCTX

    // $ANTLR start synpred370_InternalSCTX
    public final void synpred370_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_ValuedEmission_2 = null;


        // InternalSCTX.g:10114:3: (this_ValuedEmission_2= ruleValuedEmission )
        // InternalSCTX.g:10114:3: this_ValuedEmission_2= ruleValuedEmission
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ValuedEmission_2=ruleValuedEmission();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred370_InternalSCTX

    // $ANTLR start synpred371_InternalSCTX
    public final void synpred371_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_HostcodeEffect_3 = null;


        // InternalSCTX.g:10126:3: (this_HostcodeEffect_3= ruleHostcodeEffect )
        // InternalSCTX.g:10126:3: this_HostcodeEffect_3= ruleHostcodeEffect
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_HostcodeEffect_3=ruleHostcodeEffect();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred371_InternalSCTX

    // $ANTLR start synpred372_InternalSCTX
    public final void synpred372_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_ReferenceCallEffect_4 = null;


        // InternalSCTX.g:10138:3: (this_ReferenceCallEffect_4= ruleReferenceCallEffect )
        // InternalSCTX.g:10138:3: this_ReferenceCallEffect_4= ruleReferenceCallEffect
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ReferenceCallEffect_4=ruleReferenceCallEffect();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred372_InternalSCTX

    // $ANTLR start synpred373_InternalSCTX
    public final void synpred373_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_FunctionCallEffect_5 = null;


        // InternalSCTX.g:10150:3: (this_FunctionCallEffect_5= ruleFunctionCallEffect )
        // InternalSCTX.g:10150:3: this_FunctionCallEffect_5= ruleFunctionCallEffect
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_FunctionCallEffect_5=ruleFunctionCallEffect();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred373_InternalSCTX

    // $ANTLR start synpred374_InternalSCTX
    public final void synpred374_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_PrintCallEffect_6 = null;


        // InternalSCTX.g:10162:3: (this_PrintCallEffect_6= rulePrintCallEffect )
        // InternalSCTX.g:10162:3: this_PrintCallEffect_6= rulePrintCallEffect
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_PrintCallEffect_6=rulePrintCallEffect();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred374_InternalSCTX

    // $ANTLR start synpred375_InternalSCTX
    public final void synpred375_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_RandomizeCallEffect_7 = null;


        // InternalSCTX.g:10174:3: (this_RandomizeCallEffect_7= ruleRandomizeCallEffect )
        // InternalSCTX.g:10174:3: this_RandomizeCallEffect_7= ruleRandomizeCallEffect
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_RandomizeCallEffect_7=ruleRandomizeCallEffect();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred375_InternalSCTX

    // $ANTLR start synpred406_InternalSCTX
    public final void synpred406_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_BoolExpression_0 = null;


        // InternalSCTX.g:11238:3: (this_BoolExpression_0= ruleBoolExpression )
        // InternalSCTX.g:11238:3: this_BoolExpression_0= ruleBoolExpression
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_BoolExpression_0=ruleBoolExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred406_InternalSCTX

    // $ANTLR start synpred418_InternalSCTX
    public final void synpred418_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_ValuedExpression_0 = null;


        // InternalSCTX.g:11923:3: (this_ValuedExpression_0= ruleValuedExpression )
        // InternalSCTX.g:11923:3: this_ValuedExpression_0= ruleValuedExpression
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ValuedExpression_0=ruleValuedExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred418_InternalSCTX

    // $ANTLR start synpred421_InternalSCTX
    public final void synpred421_InternalSCTX_fragment() throws RecognitionException {   
        Token otherlv_4=null;
        EObject lv_subExpressions_5_0 = null;


        // InternalSCTX.g:12217:6: (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )
        // InternalSCTX.g:12217:6: otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleSumExpression ) )
        {
        otherlv_4=(Token)match(input,87,FollowSets000.FOLLOW_104); if (state.failed) return ;
        // InternalSCTX.g:12221:6: ( (lv_subExpressions_5_0= ruleSumExpression ) )
        // InternalSCTX.g:12222:7: (lv_subExpressions_5_0= ruleSumExpression )
        {
        // InternalSCTX.g:12222:7: (lv_subExpressions_5_0= ruleSumExpression )
        // InternalSCTX.g:12223:8: lv_subExpressions_5_0= ruleSumExpression
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getShiftExpressionsAccess().getSubExpressionsSumExpressionParserRuleCall_1_0_3_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_5_0=ruleSumExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred421_InternalSCTX

    // $ANTLR start synpred423_InternalSCTX
    public final void synpred423_InternalSCTX_fragment() throws RecognitionException {   
        Token otherlv_9=null;
        EObject lv_subExpressions_10_0 = null;


        // InternalSCTX.g:12293:6: (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleSumExpression ) ) )
        // InternalSCTX.g:12293:6: otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleSumExpression ) )
        {
        otherlv_9=(Token)match(input,88,FollowSets000.FOLLOW_104); if (state.failed) return ;
        // InternalSCTX.g:12297:6: ( (lv_subExpressions_10_0= ruleSumExpression ) )
        // InternalSCTX.g:12298:7: (lv_subExpressions_10_0= ruleSumExpression )
        {
        // InternalSCTX.g:12298:7: (lv_subExpressions_10_0= ruleSumExpression )
        // InternalSCTX.g:12299:8: lv_subExpressions_10_0= ruleSumExpression
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getShiftExpressionsAccess().getSubExpressionsSumExpressionParserRuleCall_1_1_3_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_10_0=ruleSumExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred423_InternalSCTX

    // $ANTLR start synpred425_InternalSCTX
    public final void synpred425_InternalSCTX_fragment() throws RecognitionException {   
        Token otherlv_14=null;
        EObject lv_subExpressions_15_0 = null;


        // InternalSCTX.g:12369:6: (otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleSumExpression ) ) )
        // InternalSCTX.g:12369:6: otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleSumExpression ) )
        {
        otherlv_14=(Token)match(input,89,FollowSets000.FOLLOW_104); if (state.failed) return ;
        // InternalSCTX.g:12373:6: ( (lv_subExpressions_15_0= ruleSumExpression ) )
        // InternalSCTX.g:12374:7: (lv_subExpressions_15_0= ruleSumExpression )
        {
        // InternalSCTX.g:12374:7: (lv_subExpressions_15_0= ruleSumExpression )
        // InternalSCTX.g:12375:8: lv_subExpressions_15_0= ruleSumExpression
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getShiftExpressionsAccess().getSubExpressionsSumExpressionParserRuleCall_1_2_3_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_15_0=ruleSumExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred425_InternalSCTX

    // $ANTLR start synpred431_InternalSCTX
    public final void synpred431_InternalSCTX_fragment() throws RecognitionException {   
        Token otherlv_4=null;
        EObject lv_subExpressions_5_0 = null;


        // InternalSCTX.g:12690:6: (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )
        // InternalSCTX.g:12690:6: otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) )
        {
        otherlv_4=(Token)match(input,90,FollowSets000.FOLLOW_104); if (state.failed) return ;
        // InternalSCTX.g:12694:6: ( (lv_subExpressions_5_0= ruleProductExpression ) )
        // InternalSCTX.g:12695:7: (lv_subExpressions_5_0= ruleProductExpression )
        {
        // InternalSCTX.g:12695:7: (lv_subExpressions_5_0= ruleProductExpression )
        // InternalSCTX.g:12696:8: lv_subExpressions_5_0= ruleProductExpression
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getSumExpressionAccess().getSubExpressionsProductExpressionParserRuleCall_1_0_3_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_5_0=ruleProductExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred431_InternalSCTX

    // $ANTLR start synpred433_InternalSCTX
    public final void synpred433_InternalSCTX_fragment() throws RecognitionException {   
        Token otherlv_9=null;
        EObject lv_subExpressions_10_0 = null;


        // InternalSCTX.g:12766:6: (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )
        // InternalSCTX.g:12766:6: otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) )
        {
        otherlv_9=(Token)match(input,91,FollowSets000.FOLLOW_104); if (state.failed) return ;
        // InternalSCTX.g:12770:6: ( (lv_subExpressions_10_0= ruleProductExpression ) )
        // InternalSCTX.g:12771:7: (lv_subExpressions_10_0= ruleProductExpression )
        {
        // InternalSCTX.g:12771:7: (lv_subExpressions_10_0= ruleProductExpression )
        // InternalSCTX.g:12772:8: lv_subExpressions_10_0= ruleProductExpression
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getSumExpressionAccess().getSubExpressionsProductExpressionParserRuleCall_1_1_3_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_10_0=ruleProductExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred433_InternalSCTX

    // $ANTLR start synpred435_InternalSCTX
    public final void synpred435_InternalSCTX_fragment() throws RecognitionException {   
        Token otherlv_4=null;
        EObject lv_subExpressions_5_0 = null;


        // InternalSCTX.g:12873:6: (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleNegExpression ) ) )
        // InternalSCTX.g:12873:6: otherlv_4= '*' ( (lv_subExpressions_5_0= ruleNegExpression ) )
        {
        otherlv_4=(Token)match(input,92,FollowSets000.FOLLOW_104); if (state.failed) return ;
        // InternalSCTX.g:12877:6: ( (lv_subExpressions_5_0= ruleNegExpression ) )
        // InternalSCTX.g:12878:7: (lv_subExpressions_5_0= ruleNegExpression )
        {
        // InternalSCTX.g:12878:7: (lv_subExpressions_5_0= ruleNegExpression )
        // InternalSCTX.g:12879:8: lv_subExpressions_5_0= ruleNegExpression
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getProductExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_1_0_3_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_5_0=ruleNegExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred435_InternalSCTX

    // $ANTLR start synpred437_InternalSCTX
    public final void synpred437_InternalSCTX_fragment() throws RecognitionException {   
        Token otherlv_9=null;
        EObject lv_subExpressions_10_0 = null;


        // InternalSCTX.g:12949:6: (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleNegExpression ) ) )
        // InternalSCTX.g:12949:6: otherlv_9= '/' ( (lv_subExpressions_10_0= ruleNegExpression ) )
        {
        otherlv_9=(Token)match(input,93,FollowSets000.FOLLOW_104); if (state.failed) return ;
        // InternalSCTX.g:12953:6: ( (lv_subExpressions_10_0= ruleNegExpression ) )
        // InternalSCTX.g:12954:7: (lv_subExpressions_10_0= ruleNegExpression )
        {
        // InternalSCTX.g:12954:7: (lv_subExpressions_10_0= ruleNegExpression )
        // InternalSCTX.g:12955:8: lv_subExpressions_10_0= ruleNegExpression
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getProductExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_1_1_3_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_10_0=ruleNegExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred437_InternalSCTX

    // $ANTLR start synpred439_InternalSCTX
    public final void synpred439_InternalSCTX_fragment() throws RecognitionException {   
        Token otherlv_14=null;
        EObject lv_subExpressions_15_0 = null;


        // InternalSCTX.g:13025:6: (otherlv_14= '%' ( (lv_subExpressions_15_0= ruleNegExpression ) ) )
        // InternalSCTX.g:13025:6: otherlv_14= '%' ( (lv_subExpressions_15_0= ruleNegExpression ) )
        {
        otherlv_14=(Token)match(input,94,FollowSets000.FOLLOW_104); if (state.failed) return ;
        // InternalSCTX.g:13029:6: ( (lv_subExpressions_15_0= ruleNegExpression ) )
        // InternalSCTX.g:13030:7: (lv_subExpressions_15_0= ruleNegExpression )
        {
        // InternalSCTX.g:13030:7: (lv_subExpressions_15_0= ruleNegExpression )
        // InternalSCTX.g:13031:8: lv_subExpressions_15_0= ruleNegExpression
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getProductExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_1_2_3_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_15_0=ruleNegExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred439_InternalSCTX

    // $ANTLR start synpred442_InternalSCTX
    public final void synpred442_InternalSCTX_fragment() throws RecognitionException {   
        Token otherlv_4=null;
        EObject lv_subExpressions_5_0 = null;


        // InternalSCTX.g:13220:5: (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )
        // InternalSCTX.g:13220:5: otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) )
        {
        otherlv_4=(Token)match(input,45,FollowSets000.FOLLOW_199); if (state.failed) return ;
        // InternalSCTX.g:13224:5: ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) )
        // InternalSCTX.g:13225:6: (lv_subExpressions_5_0= ruleAtomicValuedExpression )
        {
        // InternalSCTX.g:13225:6: (lv_subExpressions_5_0= ruleAtomicValuedExpression )
        // InternalSCTX.g:13226:7: lv_subExpressions_5_0= ruleAtomicValuedExpression
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getTernaryOperationAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_4_1_0());
          						
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_5_0=ruleAtomicValuedExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred442_InternalSCTX

    // $ANTLR start synpred443_InternalSCTX
    public final void synpred443_InternalSCTX_fragment() throws RecognitionException {   
        Token otherlv_4=null;
        EObject lv_subExpressions_1_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;


        // InternalSCTX.g:13151:3: ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )? ) )
        // InternalSCTX.g:13151:3: ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )? )
        {
        // InternalSCTX.g:13151:3: ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )? )
        // InternalSCTX.g:13152:4: () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )?
        {
        // InternalSCTX.g:13152:4: ()
        // InternalSCTX.g:13153:5: 
        {
        if ( state.backtracking==0 ) {

          					/* */
          				
        }

        }

        // InternalSCTX.g:13162:4: ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) )
        // InternalSCTX.g:13163:5: (lv_subExpressions_1_0= ruleAtomicValuedExpression )
        {
        // InternalSCTX.g:13163:5: (lv_subExpressions_1_0= ruleAtomicValuedExpression )
        // InternalSCTX.g:13164:6: lv_subExpressions_1_0= ruleAtomicValuedExpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getTernaryOperationAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_1_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_198);
        lv_subExpressions_1_0=ruleAtomicValuedExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSCTX.g:13181:4: ( (lv_operator_2_0= ruleConditionalOperator ) )
        // InternalSCTX.g:13182:5: (lv_operator_2_0= ruleConditionalOperator )
        {
        // InternalSCTX.g:13182:5: (lv_operator_2_0= ruleConditionalOperator )
        // InternalSCTX.g:13183:6: lv_operator_2_0= ruleConditionalOperator
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getTernaryOperationAccess().getOperatorConditionalOperatorEnumRuleCall_0_2_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_199);
        lv_operator_2_0=ruleConditionalOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSCTX.g:13200:4: ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) )
        // InternalSCTX.g:13201:5: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
        {
        // InternalSCTX.g:13201:5: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
        // InternalSCTX.g:13202:6: lv_subExpressions_3_0= ruleAtomicValuedExpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getTernaryOperationAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_3_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_167);
        lv_subExpressions_3_0=ruleAtomicValuedExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSCTX.g:13219:4: (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )?
        int alt586=2;
        int LA586_0 = input.LA(1);

        if ( (LA586_0==45) ) {
            alt586=1;
        }
        switch (alt586) {
            case 1 :
                // InternalSCTX.g:13220:5: otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) )
                {
                otherlv_4=(Token)match(input,45,FollowSets000.FOLLOW_199); if (state.failed) return ;
                // InternalSCTX.g:13224:5: ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) )
                // InternalSCTX.g:13225:6: (lv_subExpressions_5_0= ruleAtomicValuedExpression )
                {
                // InternalSCTX.g:13225:6: (lv_subExpressions_5_0= ruleAtomicValuedExpression )
                // InternalSCTX.g:13226:7: lv_subExpressions_5_0= ruleAtomicValuedExpression
                {
                if ( state.backtracking==0 ) {

                  							newCompositeNode(grammarAccess.getTernaryOperationAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_4_1_0());
                  						
                }
                pushFollow(FollowSets000.FOLLOW_2);
                lv_subExpressions_5_0=ruleAtomicValuedExpression();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred443_InternalSCTX

    // $ANTLR start synpred452_InternalSCTX
    public final void synpred452_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_ReferenceCall_4 = null;


        // InternalSCTX.g:13631:3: (this_ReferenceCall_4= ruleReferenceCall )
        // InternalSCTX.g:13631:3: this_ReferenceCall_4= ruleReferenceCall
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ReferenceCall_4=ruleReferenceCall();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred452_InternalSCTX

    // $ANTLR start synpred456_InternalSCTX
    public final void synpred456_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_ValuedObjectTestExpression_8 = null;


        // InternalSCTX.g:13679:3: (this_ValuedObjectTestExpression_8= ruleValuedObjectTestExpression )
        // InternalSCTX.g:13679:3: this_ValuedObjectTestExpression_8= ruleValuedObjectTestExpression
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ValuedObjectTestExpression_8=ruleValuedObjectTestExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred456_InternalSCTX

    // $ANTLR start synpred461_InternalSCTX
    public final void synpred461_InternalSCTX_fragment() throws RecognitionException {   
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject this_ValuedExpression_5 = null;


        // InternalSCTX.g:13769:3: ( (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' ) )
        // InternalSCTX.g:13769:3: (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' )
        {
        // InternalSCTX.g:13769:3: (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' )
        // InternalSCTX.g:13770:4: otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')'
        {
        otherlv_4=(Token)match(input,31,FollowSets000.FOLLOW_104); if (state.failed) return ;
        pushFollow(FollowSets000.FOLLOW_32);
        this_ValuedExpression_5=ruleValuedExpression();

        state._fsp--;
        if (state.failed) return ;
        otherlv_6=(Token)match(input,32,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred461_InternalSCTX

    // $ANTLR start synpred482_InternalSCTX
    public final void synpred482_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_BoolExpression_0 = null;


        // InternalSCTX.g:14962:3: (this_BoolExpression_0= ruleBoolExpression )
        // InternalSCTX.g:14962:3: this_BoolExpression_0= ruleBoolExpression
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_BoolExpression_0=ruleBoolExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred482_InternalSCTX

    // $ANTLR start synpred483_InternalSCTX
    public final void synpred483_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_ValuedExpression_1 = null;


        // InternalSCTX.g:14974:3: (this_ValuedExpression_1= ruleValuedExpression )
        // InternalSCTX.g:14974:3: this_ValuedExpression_1= ruleValuedExpression
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ValuedExpression_1=ruleValuedExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred483_InternalSCTX

    // $ANTLR start synpred495_InternalSCTX
    public final void synpred495_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_Annotation_0 = null;


        // InternalSCTX.g:15604:3: (this_Annotation_0= superAnnotation )
        // InternalSCTX.g:15604:3: this_Annotation_0= superAnnotation
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Annotation_0=superAnnotation();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred495_InternalSCTX

    // $ANTLR start synpred498_InternalSCTX
    public final void synpred498_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_KeyStringValueAnnotation_1 = null;


        // InternalSCTX.g:15700:3: (this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation )
        // InternalSCTX.g:15700:3: this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_KeyStringValueAnnotation_1=ruleKeyStringValueAnnotation();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred498_InternalSCTX

    // $ANTLR start synpred499_InternalSCTX
    public final void synpred499_InternalSCTX_fragment() throws RecognitionException {   
        EObject this_TypedKeyStringValueAnnotation_2 = null;


        // InternalSCTX.g:15712:3: (this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation )
        // InternalSCTX.g:15712:3: this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_TypedKeyStringValueAnnotation_2=ruleTypedKeyStringValueAnnotation();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred499_InternalSCTX

    // $ANTLR start synpred524_InternalSCTX
    public final void synpred524_InternalSCTX_fragment() throws RecognitionException {   
        Token kw=null;
        Token this_ID_3=null;

        // InternalSCTX.g:16972:4: ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )
        // InternalSCTX.g:16972:4: (kw= '.' | kw= '-' ) this_ID_3= RULE_ID
        {
        // InternalSCTX.g:16972:4: (kw= '.' | kw= '-' )
        int alt597=2;
        int LA597_0 = input.LA(1);

        if ( (LA597_0==79) ) {
            alt597=1;
        }
        else if ( (LA597_0==91) ) {
            alt597=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 597, 0, input);

            throw nvae;
        }
        switch (alt597) {
            case 1 :
                // InternalSCTX.g:16973:5: kw= '.'
                {
                kw=(Token)match(input,79,FollowSets000.FOLLOW_9); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalSCTX.g:16979:5: kw= '-'
                {
                kw=(Token)match(input,91,FollowSets000.FOLLOW_9); if (state.failed) return ;

                }
                break;

        }

        this_ID_3=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred524_InternalSCTX

    // Delegated rules

    public final boolean synpred406_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred406_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred70_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred70_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred421_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred421_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred133_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred133_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred280_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred280_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred456_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred456_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred437_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred437_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred17_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred17_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred370_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred370_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred452_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred452_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred110_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred110_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred242_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred242_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred374_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred374_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred145_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred145_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred433_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred433_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred277_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred277_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred204_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred204_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred141_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred141_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred140_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred140_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred90_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred90_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred93_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred93_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred312_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred312_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred43_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred43_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred94_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred94_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred215_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred215_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred425_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred425_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred191_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred191_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred250_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred250_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred52_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred52_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred281_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred281_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred8_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred186_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred186_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred228_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred228_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred226_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred226_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred68_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred68_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred331_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred331_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred220_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred220_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred273_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred273_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred236_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred236_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred483_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred483_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred442_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred442_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred495_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred495_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred285_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred285_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred234_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred234_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred499_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred499_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred289_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred289_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred139_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred139_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred135_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred135_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred287_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred287_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred137_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred137_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred172_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred172_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred244_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred244_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred143_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred143_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred435_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred435_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred431_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred431_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred162_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred162_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred372_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred372_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred461_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred461_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred369_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred369_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred368_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred368_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred524_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred524_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred217_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred217_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred439_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred439_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred214_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred214_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred423_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred423_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred42_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred42_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred95_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred95_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred262_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred262_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred134_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred134_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred73_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred73_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred371_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred371_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred89_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred89_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred165_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred165_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred243_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred243_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred375_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred375_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred259_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred259_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred241_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred241_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred373_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred373_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred177_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred177_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred330_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred330_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred126_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred126_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred270_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred270_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred418_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred418_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred10_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred28_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred28_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred482_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred482_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred231_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred231_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred284_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred284_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred26_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred26_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred233_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred233_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred443_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred443_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred75_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred75_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred288_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred288_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred498_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred498_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred136_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred136_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred138_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred138_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred286_InternalSCTX() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred286_InternalSCTX_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA7 dfa7 = new DFA7(this);
    protected DFA8 dfa8 = new DFA8(this);
    protected DFA10 dfa10 = new DFA10(this);
    protected DFA23 dfa23 = new DFA23(this);
    protected DFA24 dfa24 = new DFA24(this);
    protected DFA26 dfa26 = new DFA26(this);
    protected DFA28 dfa28 = new DFA28(this);
    protected DFA38 dfa38 = new DFA38(this);
    protected DFA39 dfa39 = new DFA39(this);
    protected DFA63 dfa63 = new DFA63(this);
    protected DFA64 dfa64 = new DFA64(this);
    protected DFA66 dfa66 = new DFA66(this);
    protected DFA67 dfa67 = new DFA67(this);
    protected DFA68 dfa68 = new DFA68(this);
    protected DFA69 dfa69 = new DFA69(this);
    protected DFA73 dfa73 = new DFA73(this);
    protected DFA85 dfa85 = new DFA85(this);
    protected DFA88 dfa88 = new DFA88(this);
    protected DFA90 dfa90 = new DFA90(this);
    protected DFA93 dfa93 = new DFA93(this);
    protected DFA103 dfa103 = new DFA103(this);
    protected DFA119 dfa119 = new DFA119(this);
    protected DFA126 dfa126 = new DFA126(this);
    protected DFA127 dfa127 = new DFA127(this);
    protected DFA130 dfa130 = new DFA130(this);
    protected DFA147 dfa147 = new DFA147(this);
    protected DFA150 dfa150 = new DFA150(this);
    protected DFA155 dfa155 = new DFA155(this);
    protected DFA162 dfa162 = new DFA162(this);
    protected DFA169 dfa169 = new DFA169(this);
    protected DFA171 dfa171 = new DFA171(this);
    protected DFA176 dfa176 = new DFA176(this);
    protected DFA182 dfa182 = new DFA182(this);
    protected DFA186 dfa186 = new DFA186(this);
    protected DFA191 dfa191 = new DFA191(this);
    protected DFA196 dfa196 = new DFA196(this);
    protected DFA197 dfa197 = new DFA197(this);
    protected DFA199 dfa199 = new DFA199(this);
    protected DFA201 dfa201 = new DFA201(this);
    protected DFA210 dfa210 = new DFA210(this);
    protected DFA207 dfa207 = new DFA207(this);
    protected DFA212 dfa212 = new DFA212(this);
    protected DFA214 dfa214 = new DFA214(this);
    protected DFA216 dfa216 = new DFA216(this);
    protected DFA222 dfa222 = new DFA222(this);
    protected DFA223 dfa223 = new DFA223(this);
    protected DFA237 dfa237 = new DFA237(this);
    protected DFA247 dfa247 = new DFA247(this);
    protected DFA246 dfa246 = new DFA246(this);
    protected DFA249 dfa249 = new DFA249(this);
    protected DFA252 dfa252 = new DFA252(this);
    protected DFA256 dfa256 = new DFA256(this);
    protected DFA260 dfa260 = new DFA260(this);
    protected DFA263 dfa263 = new DFA263(this);
    protected DFA264 dfa264 = new DFA264(this);
    protected DFA285 dfa285 = new DFA285(this);
    protected DFA303 dfa303 = new DFA303(this);
    protected DFA304 dfa304 = new DFA304(this);
    protected DFA341 dfa341 = new DFA341(this);
    protected DFA343 dfa343 = new DFA343(this);
    protected DFA346 dfa346 = new DFA346(this);
    protected DFA349 dfa349 = new DFA349(this);
    protected DFA352 dfa352 = new DFA352(this);
    protected DFA360 dfa360 = new DFA360(this);
    protected DFA367 dfa367 = new DFA367(this);
    protected DFA372 dfa372 = new DFA372(this);
    protected DFA384 dfa384 = new DFA384(this);
    protected DFA387 dfa387 = new DFA387(this);
    protected DFA388 dfa388 = new DFA388(this);
    protected DFA389 dfa389 = new DFA389(this);
    protected DFA395 dfa395 = new DFA395(this);
    protected DFA396 dfa396 = new DFA396(this);
    protected DFA398 dfa398 = new DFA398(this);
    protected DFA399 dfa399 = new DFA399(this);
    protected DFA400 dfa400 = new DFA400(this);
    protected DFA404 dfa404 = new DFA404(this);
    protected DFA403 dfa403 = new DFA403(this);
    protected DFA411 dfa411 = new DFA411(this);
    protected DFA412 dfa412 = new DFA412(this);
    protected DFA433 dfa433 = new DFA433(this);
    protected DFA440 dfa440 = new DFA440(this);
    protected DFA441 dfa441 = new DFA441(this);
    protected DFA442 dfa442 = new DFA442(this);
    protected DFA444 dfa444 = new DFA444(this);
    protected DFA445 dfa445 = new DFA445(this);
    protected DFA446 dfa446 = new DFA446(this);
    protected DFA447 dfa447 = new DFA447(this);
    protected DFA459 dfa459 = new DFA459(this);
    protected DFA544 dfa544 = new DFA544(this);
    static final String dfa_1s = "\55\uffff";
    static final String dfa_2s = "\1\12\2\0\52\uffff";
    static final String dfa_3s = "\1\u009d\2\0\52\uffff";
    static final String dfa_4s = "\3\uffff\1\2\23\uffff\1\1\25\uffff";
    static final String dfa_5s = "\1\uffff\1\0\1\1\52\uffff}>";
    static final String[] dfa_6s = {
            "\1\1\13\uffff\6\3\1\uffff\1\27\14\uffff\2\3\3\uffff\1\3\1\uffff\1\3\1\uffff\5\3\6\27\2\uffff\1\27\11\uffff\3\27\32\uffff\1\2\2\uffff\5\3\5\uffff\6\27\34\uffff\2\27\3\uffff\3\27",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA7 extends DFA {

        public DFA7(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 7;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "()* loopback of 279:3: ( (lv_declarations_9_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA7_1 = input.LA(1);

                         
                        int index7_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred8_InternalSCTX()) ) {s = 23;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index7_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA7_2 = input.LA(1);

                         
                        int index7_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred8_InternalSCTX()) ) {s = 23;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index7_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 7, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_7s = "\65\uffff";
    static final String dfa_8s = "\2\12\1\5\2\uffff\1\4\2\5\1\6\3\12\1\5\3\4\2\5\1\6\1\43\5\12\2\5\1\6\1\4\2\5\1\6\2\43\5\12\1\4\2\5\1\6\5\12\2\5\1\6\2\12";
    static final String dfa_9s = "\2\156\1\5\2\uffff\1\156\1\5\1\7\1\6\3\156\1\5\2\156\1\133\2\5\1\6\1\146\5\156\2\5\1\6\1\133\2\5\1\6\1\146\1\43\5\156\1\133\2\5\1\6\5\156\2\5\1\6\2\156";
    static final String dfa_10s = "\3\uffff\1\2\1\1\60\uffff";
    static final String dfa_11s = "\65\uffff}>";
    static final String[] dfa_12s = {
            "\1\1\13\uffff\6\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\57\uffff\1\2\2\uffff\5\4",
            "\1\1\14\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\57\uffff\1\2\2\uffff\5\4",
            "\1\5",
            "",
            "",
            "\1\11\1\12\2\3\1\uffff\1\13\1\1\12\uffff\1\3\1\uffff\5\3\6\uffff\1\14\7\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\27\uffff\1\6\13\uffff\1\7\12\uffff\1\10\1\2\2\uffff\5\4",
            "\1\15",
            "\1\15\2\3",
            "\1\16",
            "\1\1\11\uffff\1\17\2\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\57\uffff\1\2\2\uffff\5\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\27\uffff\1\20\13\uffff\1\21\12\uffff\1\22\1\2\2\uffff\5\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\57\uffff\1\2\2\uffff\5\4",
            "\1\23",
            "\1\11\1\12\2\3\1\uffff\1\13\1\1\12\uffff\1\3\1\uffff\5\3\6\uffff\1\14\7\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\27\uffff\1\6\13\uffff\1\7\12\uffff\1\10\1\2\2\uffff\5\4",
            "\1\11\1\12\2\3\1\uffff\1\13\1\1\12\uffff\1\3\1\uffff\5\3\6\uffff\1\14\7\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\43\uffff\1\3\13\uffff\1\2\2\uffff\5\4",
            "\1\24\1\25\2\3\1\uffff\1\26\121\uffff\1\3",
            "\1\27",
            "\1\27",
            "\1\30",
            "\1\34\53\uffff\1\31\13\uffff\1\32\12\uffff\1\33",
            "\1\1\11\uffff\1\17\2\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\57\uffff\1\2\2\uffff\5\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\27\uffff\1\35\13\uffff\1\36\12\uffff\1\37\1\2\2\uffff\5\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\57\uffff\1\2\2\uffff\5\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\27\uffff\1\20\13\uffff\1\21\12\uffff\1\22\1\2\2\uffff\5\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\57\uffff\1\2\2\uffff\5\4",
            "\1\40",
            "\1\40",
            "\1\41",
            "\1\42\1\43\2\3\1\uffff\1\44\121\uffff\1\3",
            "\1\45",
            "\1\45",
            "\1\46",
            "\1\34\53\uffff\1\31\13\uffff\1\32\12\uffff\1\33",
            "\1\34",
            "\1\1\11\uffff\1\47\2\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\57\uffff\1\2\2\uffff\5\4",
            "\1\1\11\uffff\1\47\2\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\27\uffff\1\50\13\uffff\1\51\12\uffff\1\52\1\2\2\uffff\5\4",
            "\1\1\11\uffff\1\47\2\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\57\uffff\1\2\2\uffff\5\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\27\uffff\1\35\13\uffff\1\36\12\uffff\1\37\1\2\2\uffff\5\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\57\uffff\1\2\2\uffff\5\4",
            "\1\53\1\54\2\3\1\uffff\1\55\121\uffff\1\3",
            "\1\56",
            "\1\56",
            "\1\57",
            "\1\1\11\uffff\1\47\2\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\57\uffff\1\2\2\uffff\5\4",
            "\1\1\11\uffff\1\47\2\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\27\uffff\1\60\13\uffff\1\61\12\uffff\1\62\1\2\2\uffff\5\4",
            "\1\1\11\uffff\1\47\2\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\57\uffff\1\2\2\uffff\5\4",
            "\1\1\11\uffff\1\47\2\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\27\uffff\1\50\13\uffff\1\51\12\uffff\1\52\1\2\2\uffff\5\4",
            "\1\1\11\uffff\1\47\2\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\57\uffff\1\2\2\uffff\5\4",
            "\1\63",
            "\1\63",
            "\1\64",
            "\1\1\11\uffff\1\47\2\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\27\uffff\1\60\13\uffff\1\61\12\uffff\1\62\1\2\2\uffff\5\4",
            "\1\1\11\uffff\1\47\2\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\57\uffff\1\2\2\uffff\5\4"
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final char[] dfa_8 = DFA.unpackEncodedStringToUnsignedChars(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final short[] dfa_10 = DFA.unpackEncodedString(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[][] dfa_12 = unpackEncodedStringArray(dfa_12s);

    class DFA8 extends DFA {

        public DFA8(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 8;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_8;
            this.max = dfa_9;
            this.accept = dfa_10;
            this.special = dfa_11;
            this.transition = dfa_12;
        }
        public String getDescription() {
            return "()* loopback of 298:3: ( (lv_actions_10_0= ruleLocalAction ) )*";
        }
    }
    static final String dfa_13s = "\14\uffff";
    static final String dfa_14s = "\1\12\2\0\1\uffff\1\0\7\uffff";
    static final String dfa_15s = "\1\147\2\0\1\uffff\1\0\7\uffff";
    static final String dfa_16s = "\3\uffff\1\1\4\uffff\1\2\3\uffff";
    static final String dfa_17s = "\1\uffff\1\0\1\1\1\uffff\1\2\7\uffff}>";
    static final String[] dfa_18s = {
            "\1\1\13\uffff\1\10\1\3\1\4\3\3\16\uffff\2\10\3\uffff\1\10\67\uffff\1\2",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final char[] dfa_14 = DFA.unpackEncodedStringToUnsignedChars(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final short[] dfa_16 = DFA.unpackEncodedString(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[][] dfa_18 = unpackEncodedStringArray(dfa_18s);

    class DFA10 extends DFA {

        public DFA10(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 10;
            this.eot = dfa_13;
            this.eof = dfa_13;
            this.min = dfa_14;
            this.max = dfa_15;
            this.accept = dfa_16;
            this.special = dfa_17;
            this.transition = dfa_18;
        }
        public String getDescription() {
            return "317:3: ( ( (lv_regions_11_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_12_0= ruleRegion ) )* )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA10_1 = input.LA(1);

                         
                        int index10_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalSCTX()) ) {s = 3;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index10_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA10_2 = input.LA(1);

                         
                        int index10_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalSCTX()) ) {s = 3;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index10_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA10_4 = input.LA(1);

                         
                        int index10_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalSCTX()) ) {s = 3;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index10_4);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 10, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA23 extends DFA {

        public DFA23(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 23;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "()* loopback of 625:5: ( (lv_declarations_19_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA23_1 = input.LA(1);

                         
                        int index23_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred26_InternalSCTX()) ) {s = 23;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index23_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA23_2 = input.LA(1);

                         
                        int index23_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred26_InternalSCTX()) ) {s = 23;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index23_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 23, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_19s = "\2\12\1\5\2\uffff\1\4\2\5\1\6\1\5\3\12\2\4\1\43\1\4\2\5\1\6\2\5\1\6\1\4\5\12\2\43\3\12\2\5\1\6\1\4\2\5\1\6\7\12\2\5\1\6\2\12";
    static final String dfa_20s = "\2\156\1\5\2\uffff\1\156\1\5\1\7\1\6\1\5\5\156\1\146\1\133\2\5\1\6\2\5\1\6\1\133\5\156\1\146\1\43\3\156\2\5\1\6\1\133\2\5\1\6\7\156\2\5\1\6\2\156";
    static final String[] dfa_21s = {
            "\1\1\13\uffff\6\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\57\uffff\1\2\2\uffff\5\4",
            "\1\1\14\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\57\uffff\1\2\2\uffff\5\4",
            "\1\5",
            "",
            "",
            "\1\12\1\13\2\3\1\uffff\1\14\1\1\12\uffff\1\3\1\uffff\5\3\6\uffff\1\11\7\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\27\uffff\1\6\13\uffff\1\7\12\uffff\1\10\1\2\2\uffff\5\4",
            "\1\15",
            "\1\15\2\3",
            "\1\16",
            "\1\17",
            "\1\1\11\uffff\1\20\2\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\57\uffff\1\2\2\uffff\5\4",
            "\1\1\11\uffff\1\20\2\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\27\uffff\1\21\13\uffff\1\22\12\uffff\1\23\1\2\2\uffff\5\4",
            "\1\1\11\uffff\1\20\2\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\57\uffff\1\2\2\uffff\5\4",
            "\1\12\1\13\2\3\1\uffff\1\14\1\1\12\uffff\1\3\1\uffff\5\3\6\uffff\1\11\7\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\27\uffff\1\6\13\uffff\1\7\12\uffff\1\10\1\2\2\uffff\5\4",
            "\1\12\1\13\2\3\1\uffff\1\14\1\1\12\uffff\1\3\1\uffff\5\3\6\uffff\1\11\7\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\43\uffff\1\3\13\uffff\1\2\2\uffff\5\4",
            "\1\27\53\uffff\1\24\13\uffff\1\25\12\uffff\1\26",
            "\1\30\1\31\2\3\1\uffff\1\32\121\uffff\1\3",
            "\1\33",
            "\1\33",
            "\1\34",
            "\1\35",
            "\1\35",
            "\1\36",
            "\1\37\1\40\2\3\1\uffff\1\41\121\uffff\1\3",
            "\1\1\11\uffff\1\20\2\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\57\uffff\1\2\2\uffff\5\4",
            "\1\1\11\uffff\1\20\2\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\27\uffff\1\42\13\uffff\1\43\12\uffff\1\44\1\2\2\uffff\5\4",
            "\1\1\11\uffff\1\20\2\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\57\uffff\1\2\2\uffff\5\4",
            "\1\1\11\uffff\1\20\2\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\27\uffff\1\21\13\uffff\1\22\12\uffff\1\23\1\2\2\uffff\5\4",
            "\1\1\11\uffff\1\20\2\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\57\uffff\1\2\2\uffff\5\4",
            "\1\27\53\uffff\1\24\13\uffff\1\25\12\uffff\1\26",
            "\1\27",
            "\1\1\11\uffff\1\45\2\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\57\uffff\1\2\2\uffff\5\4",
            "\1\1\11\uffff\1\45\2\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\27\uffff\1\46\13\uffff\1\47\12\uffff\1\50\1\2\2\uffff\5\4",
            "\1\1\11\uffff\1\45\2\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\57\uffff\1\2\2\uffff\5\4",
            "\1\51",
            "\1\51",
            "\1\52",
            "\1\53\1\54\2\3\1\uffff\1\55\121\uffff\1\3",
            "\1\56",
            "\1\56",
            "\1\57",
            "\1\1\11\uffff\1\20\2\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\27\uffff\1\42\13\uffff\1\43\12\uffff\1\44\1\2\2\uffff\5\4",
            "\1\1\11\uffff\1\20\2\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\57\uffff\1\2\2\uffff\5\4",
            "\1\1\11\uffff\1\45\2\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\57\uffff\1\2\2\uffff\5\4",
            "\1\1\11\uffff\1\45\2\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\27\uffff\1\60\13\uffff\1\61\12\uffff\1\62\1\2\2\uffff\5\4",
            "\1\1\11\uffff\1\45\2\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\57\uffff\1\2\2\uffff\5\4",
            "\1\1\11\uffff\1\45\2\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\27\uffff\1\46\13\uffff\1\47\12\uffff\1\50\1\2\2\uffff\5\4",
            "\1\1\11\uffff\1\45\2\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\57\uffff\1\2\2\uffff\5\4",
            "\1\63",
            "\1\63",
            "\1\64",
            "\1\1\11\uffff\1\45\2\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\27\uffff\1\60\13\uffff\1\61\12\uffff\1\62\1\2\2\uffff\5\4",
            "\1\1\11\uffff\1\45\2\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\57\uffff\1\2\2\uffff\5\4"
    };
    static final char[] dfa_19 = DFA.unpackEncodedStringToUnsignedChars(dfa_19s);
    static final char[] dfa_20 = DFA.unpackEncodedStringToUnsignedChars(dfa_20s);
    static final short[][] dfa_21 = unpackEncodedStringArray(dfa_21s);

    class DFA24 extends DFA {

        public DFA24(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 24;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_19;
            this.max = dfa_20;
            this.accept = dfa_10;
            this.special = dfa_11;
            this.transition = dfa_21;
        }
        public String getDescription() {
            return "()* loopback of 644:5: ( (lv_actions_20_0= ruleLocalAction ) )*";
        }
    }

    class DFA26 extends DFA {

        public DFA26(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 26;
            this.eot = dfa_13;
            this.eof = dfa_13;
            this.min = dfa_14;
            this.max = dfa_15;
            this.accept = dfa_16;
            this.special = dfa_17;
            this.transition = dfa_18;
        }
        public String getDescription() {
            return "663:5: ( ( (lv_regions_21_0= ruleImplicitControlflowRegion ) ) | ( (lv_regions_22_0= ruleRegion ) )* )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA26_1 = input.LA(1);

                         
                        int index26_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred28_InternalSCTX()) ) {s = 3;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index26_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA26_2 = input.LA(1);

                         
                        int index26_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred28_InternalSCTX()) ) {s = 3;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index26_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA26_4 = input.LA(1);

                         
                        int index26_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred28_InternalSCTX()) ) {s = 3;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index26_4);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 26, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_22s = "\1\1\64\uffff";
    static final String dfa_23s = "\1\12\1\uffff\1\12\1\5\1\uffff\1\4\2\5\1\6\3\12\1\5\3\4\2\5\1\6\1\43\5\12\2\5\1\6\1\4\2\5\1\6\2\43\5\12\1\4\2\5\1\6\5\12\2\5\1\6\2\12";
    static final String dfa_24s = "\1\156\1\uffff\1\156\1\5\1\uffff\1\156\1\5\1\7\1\6\3\156\1\5\2\156\1\133\2\5\1\6\1\146\5\156\2\5\1\6\1\133\2\5\1\6\1\146\1\43\5\156\1\133\2\5\1\6\5\156\2\5\1\6\2\156";
    static final String dfa_25s = "\1\uffff\1\2\2\uffff\1\1\60\uffff";
    static final String[] dfa_26s = {
            "\1\2\13\uffff\6\1\10\uffff\1\4\2\uffff\1\4\2\uffff\2\1\3\uffff\1\1\17\uffff\1\4\47\uffff\1\3\2\4\1\uffff\4\4",
            "",
            "\1\2\14\uffff\5\1\10\uffff\1\4\2\uffff\1\4\2\uffff\2\1\3\uffff\1\1\17\uffff\1\4\47\uffff\1\3\2\4\1\uffff\4\4",
            "\1\5",
            "",
            "\1\11\1\12\2\1\1\uffff\1\13\1\2\12\uffff\1\1\1\uffff\5\1\6\uffff\1\14\1\uffff\1\4\2\uffff\1\4\2\uffff\2\1\3\uffff\1\1\17\uffff\1\4\17\uffff\1\6\13\uffff\1\7\12\uffff\1\10\1\3\2\4\1\uffff\4\4",
            "\1\15",
            "\1\15\2\1",
            "\1\16",
            "\1\2\11\uffff\1\17\2\uffff\5\1\10\uffff\1\4\2\uffff\1\4\2\uffff\2\1\3\uffff\1\1\17\uffff\1\4\47\uffff\1\3\2\4\1\uffff\4\4",
            "\1\2\11\uffff\1\17\2\uffff\5\1\10\uffff\1\4\2\uffff\1\4\2\uffff\2\1\3\uffff\1\1\17\uffff\1\4\17\uffff\1\20\13\uffff\1\21\12\uffff\1\22\1\3\2\4\1\uffff\4\4",
            "\1\2\11\uffff\1\17\2\uffff\5\1\10\uffff\1\4\2\uffff\1\4\2\uffff\2\1\3\uffff\1\1\17\uffff\1\4\47\uffff\1\3\2\4\1\uffff\4\4",
            "\1\23",
            "\1\11\1\12\2\1\1\uffff\1\13\1\2\12\uffff\1\1\1\uffff\5\1\6\uffff\1\14\1\uffff\1\4\2\uffff\1\4\2\uffff\2\1\3\uffff\1\1\17\uffff\1\4\17\uffff\1\6\13\uffff\1\7\12\uffff\1\10\1\3\2\4\1\uffff\4\4",
            "\1\11\1\12\2\1\1\uffff\1\13\1\2\12\uffff\1\1\1\uffff\5\1\6\uffff\1\14\1\uffff\1\4\2\uffff\1\4\2\uffff\2\1\3\uffff\1\1\17\uffff\1\4\33\uffff\1\1\13\uffff\1\3\2\4\1\uffff\4\4",
            "\1\24\1\25\2\1\1\uffff\1\26\121\uffff\1\1",
            "\1\27",
            "\1\27",
            "\1\30",
            "\1\34\53\uffff\1\31\13\uffff\1\32\12\uffff\1\33",
            "\1\2\11\uffff\1\17\2\uffff\5\1\10\uffff\1\4\2\uffff\1\4\2\uffff\2\1\3\uffff\1\1\17\uffff\1\4\47\uffff\1\3\2\4\1\uffff\4\4",
            "\1\2\11\uffff\1\17\2\uffff\5\1\10\uffff\1\4\2\uffff\1\4\2\uffff\2\1\3\uffff\1\1\17\uffff\1\4\17\uffff\1\35\13\uffff\1\36\12\uffff\1\37\1\3\2\4\1\uffff\4\4",
            "\1\2\11\uffff\1\17\2\uffff\5\1\10\uffff\1\4\2\uffff\1\4\2\uffff\2\1\3\uffff\1\1\17\uffff\1\4\47\uffff\1\3\2\4\1\uffff\4\4",
            "\1\2\11\uffff\1\17\2\uffff\5\1\10\uffff\1\4\2\uffff\1\4\2\uffff\2\1\3\uffff\1\1\17\uffff\1\4\17\uffff\1\20\13\uffff\1\21\12\uffff\1\22\1\3\2\4\1\uffff\4\4",
            "\1\2\11\uffff\1\17\2\uffff\5\1\10\uffff\1\4\2\uffff\1\4\2\uffff\2\1\3\uffff\1\1\17\uffff\1\4\47\uffff\1\3\2\4\1\uffff\4\4",
            "\1\40",
            "\1\40",
            "\1\41",
            "\1\42\1\43\2\1\1\uffff\1\44\121\uffff\1\1",
            "\1\45",
            "\1\45",
            "\1\46",
            "\1\34\53\uffff\1\31\13\uffff\1\32\12\uffff\1\33",
            "\1\34",
            "\1\2\11\uffff\1\47\2\uffff\5\1\10\uffff\1\4\2\uffff\1\4\2\uffff\2\1\3\uffff\1\1\17\uffff\1\4\47\uffff\1\3\2\4\1\uffff\4\4",
            "\1\2\11\uffff\1\47\2\uffff\5\1\10\uffff\1\4\2\uffff\1\4\2\uffff\2\1\3\uffff\1\1\17\uffff\1\4\17\uffff\1\50\13\uffff\1\51\12\uffff\1\52\1\3\2\4\1\uffff\4\4",
            "\1\2\11\uffff\1\47\2\uffff\5\1\10\uffff\1\4\2\uffff\1\4\2\uffff\2\1\3\uffff\1\1\17\uffff\1\4\47\uffff\1\3\2\4\1\uffff\4\4",
            "\1\2\11\uffff\1\17\2\uffff\5\1\10\uffff\1\4\2\uffff\1\4\2\uffff\2\1\3\uffff\1\1\17\uffff\1\4\17\uffff\1\35\13\uffff\1\36\12\uffff\1\37\1\3\2\4\1\uffff\4\4",
            "\1\2\11\uffff\1\17\2\uffff\5\1\10\uffff\1\4\2\uffff\1\4\2\uffff\2\1\3\uffff\1\1\17\uffff\1\4\47\uffff\1\3\2\4\1\uffff\4\4",
            "\1\53\1\54\2\1\1\uffff\1\55\121\uffff\1\1",
            "\1\56",
            "\1\56",
            "\1\57",
            "\1\2\11\uffff\1\47\2\uffff\5\1\10\uffff\1\4\2\uffff\1\4\2\uffff\2\1\3\uffff\1\1\17\uffff\1\4\47\uffff\1\3\2\4\1\uffff\4\4",
            "\1\2\11\uffff\1\47\2\uffff\5\1\10\uffff\1\4\2\uffff\1\4\2\uffff\2\1\3\uffff\1\1\17\uffff\1\4\17\uffff\1\60\13\uffff\1\61\12\uffff\1\62\1\3\2\4\1\uffff\4\4",
            "\1\2\11\uffff\1\47\2\uffff\5\1\10\uffff\1\4\2\uffff\1\4\2\uffff\2\1\3\uffff\1\1\17\uffff\1\4\47\uffff\1\3\2\4\1\uffff\4\4",
            "\1\2\11\uffff\1\47\2\uffff\5\1\10\uffff\1\4\2\uffff\1\4\2\uffff\2\1\3\uffff\1\1\17\uffff\1\4\17\uffff\1\50\13\uffff\1\51\12\uffff\1\52\1\3\2\4\1\uffff\4\4",
            "\1\2\11\uffff\1\47\2\uffff\5\1\10\uffff\1\4\2\uffff\1\4\2\uffff\2\1\3\uffff\1\1\17\uffff\1\4\47\uffff\1\3\2\4\1\uffff\4\4",
            "\1\63",
            "\1\63",
            "\1\64",
            "\1\2\11\uffff\1\47\2\uffff\5\1\10\uffff\1\4\2\uffff\1\4\2\uffff\2\1\3\uffff\1\1\17\uffff\1\4\17\uffff\1\60\13\uffff\1\61\12\uffff\1\62\1\3\2\4\1\uffff\4\4",
            "\1\2\11\uffff\1\47\2\uffff\5\1\10\uffff\1\4\2\uffff\1\4\2\uffff\2\1\3\uffff\1\1\17\uffff\1\4\47\uffff\1\3\2\4\1\uffff\4\4"
    };
    static final short[] dfa_22 = DFA.unpackEncodedString(dfa_22s);
    static final char[] dfa_23 = DFA.unpackEncodedStringToUnsignedChars(dfa_23s);
    static final char[] dfa_24 = DFA.unpackEncodedStringToUnsignedChars(dfa_24s);
    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final short[][] dfa_26 = unpackEncodedStringArray(dfa_26s);

    class DFA28 extends DFA {

        public DFA28(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 28;
            this.eot = dfa_7;
            this.eof = dfa_22;
            this.min = dfa_23;
            this.max = dfa_24;
            this.accept = dfa_25;
            this.special = dfa_11;
            this.transition = dfa_26;
        }
        public String getDescription() {
            return "()* loopback of 710:3: ( (lv_outgoingTransitions_24_0= ruleTransition ) )*";
        }
    }
    static final String dfa_27s = "\24\uffff";
    static final String dfa_28s = "\1\4\1\0\22\uffff";
    static final String dfa_29s = "\1\u0094\1\0\22\uffff";
    static final String dfa_30s = "\2\uffff\1\2\20\uffff\1\1";
    static final String dfa_31s = "\1\uffff\1\0\22\uffff}>";
    static final String[] dfa_32s = {
            "\2\2\1\1\4\2\12\uffff\1\2\11\uffff\1\2\54\uffff\1\2\4\uffff\1\2\11\uffff\1\2\7\uffff\1\2\3\uffff\1\2\51\uffff\4\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_27 = DFA.unpackEncodedString(dfa_27s);
    static final char[] dfa_28 = DFA.unpackEncodedStringToUnsignedChars(dfa_28s);
    static final char[] dfa_29 = DFA.unpackEncodedStringToUnsignedChars(dfa_29s);
    static final short[] dfa_30 = DFA.unpackEncodedString(dfa_30s);
    static final short[] dfa_31 = DFA.unpackEncodedString(dfa_31s);
    static final short[][] dfa_32 = unpackEncodedStringArray(dfa_32s);

    class DFA38 extends DFA {

        public DFA38(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 38;
            this.eot = dfa_27;
            this.eof = dfa_27;
            this.min = dfa_28;
            this.max = dfa_29;
            this.accept = dfa_30;
            this.special = dfa_31;
            this.transition = dfa_32;
        }
        public String getDescription() {
            return "1097:4: ( (lv_triggerDelay_4_0= RULE_INT ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA38_1 = input.LA(1);

                         
                        int index38_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred42_InternalSCTX()) ) {s = 19;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index38_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 38, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_33s = "\1\4\5\uffff\13\0\3\uffff";
    static final String dfa_34s = "\1\u0094\5\uffff\13\0\3\uffff";
    static final String dfa_35s = "\1\uffff\1\1\21\uffff\1\2";
    static final String dfa_36s = "\6\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\3\uffff}>";
    static final String[] dfa_37s = {
            "\1\1\1\10\2\1\1\20\1\7\1\16\12\uffff\1\1\11\uffff\1\6\54\uffff\1\11\4\uffff\1\13\11\uffff\1\1\7\uffff\1\12\3\uffff\1\17\51\uffff\1\14\2\1\1\15",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };
    static final char[] dfa_33 = DFA.unpackEncodedStringToUnsignedChars(dfa_33s);
    static final char[] dfa_34 = DFA.unpackEncodedStringToUnsignedChars(dfa_34s);
    static final short[] dfa_35 = DFA.unpackEncodedString(dfa_35s);
    static final short[] dfa_36 = DFA.unpackEncodedString(dfa_36s);
    static final short[][] dfa_37 = unpackEncodedStringArray(dfa_37s);

    class DFA39 extends DFA {

        public DFA39(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 39;
            this.eot = dfa_27;
            this.eof = dfa_27;
            this.min = dfa_33;
            this.max = dfa_34;
            this.accept = dfa_35;
            this.special = dfa_36;
            this.transition = dfa_37;
        }
        public String getDescription() {
            return "1115:4: ( ( (lv_trigger_5_0= ruleBoolScheduleExpression ) ) | ( (lv_trigger_6_0= ruleAtomicExpression ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA39_6 = input.LA(1);

                         
                        int index39_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index39_6);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA39_7 = input.LA(1);

                         
                        int index39_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index39_7);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA39_8 = input.LA(1);

                         
                        int index39_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index39_8);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA39_9 = input.LA(1);

                         
                        int index39_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index39_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA39_10 = input.LA(1);

                         
                        int index39_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index39_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA39_11 = input.LA(1);

                         
                        int index39_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index39_11);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA39_12 = input.LA(1);

                         
                        int index39_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index39_12);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA39_13 = input.LA(1);

                         
                        int index39_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index39_13);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA39_14 = input.LA(1);

                         
                        int index39_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index39_14);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA39_15 = input.LA(1);

                         
                        int index39_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index39_15);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA39_16 = input.LA(1);

                         
                        int index39_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index39_16);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 39, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_38s = "\54\uffff";
    static final String dfa_39s = "\1\12\2\0\51\uffff";
    static final String dfa_40s = "\1\u009d\2\0\51\uffff";
    static final String dfa_41s = "\3\uffff\1\2\22\uffff\1\1\25\uffff";
    static final String dfa_42s = "\1\uffff\1\0\1\1\51\uffff}>";
    static final String[] dfa_43s = {
            "\1\1\14\uffff\5\3\1\uffff\1\26\14\uffff\2\3\3\uffff\1\3\1\uffff\1\3\1\uffff\5\3\6\26\2\uffff\1\26\11\uffff\3\26\32\uffff\1\2\2\uffff\5\3\5\uffff\6\26\34\uffff\2\26\3\uffff\3\26",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_38 = DFA.unpackEncodedString(dfa_38s);
    static final char[] dfa_39 = DFA.unpackEncodedStringToUnsignedChars(dfa_39s);
    static final char[] dfa_40 = DFA.unpackEncodedStringToUnsignedChars(dfa_40s);
    static final short[] dfa_41 = DFA.unpackEncodedString(dfa_41s);
    static final short[] dfa_42 = DFA.unpackEncodedString(dfa_42s);
    static final short[][] dfa_43 = unpackEncodedStringArray(dfa_43s);

    class DFA63 extends DFA {

        public DFA63(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 63;
            this.eot = dfa_38;
            this.eof = dfa_38;
            this.min = dfa_39;
            this.max = dfa_40;
            this.accept = dfa_41;
            this.special = dfa_42;
            this.transition = dfa_43;
        }
        public String getDescription() {
            return "()* loopback of 1779:7: ( (lv_declarations_26_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA63_1 = input.LA(1);

                         
                        int index63_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalSCTX()) ) {s = 22;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index63_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA63_2 = input.LA(1);

                         
                        int index63_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalSCTX()) ) {s = 22;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index63_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 63, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_44s = {
            "\1\1\14\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\57\uffff\1\2\2\uffff\5\4",
            "\1\1\14\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\57\uffff\1\2\2\uffff\5\4",
            "\1\5",
            "",
            "",
            "\1\11\1\12\2\3\1\uffff\1\13\1\1\12\uffff\1\3\1\uffff\5\3\6\uffff\1\14\7\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\27\uffff\1\6\13\uffff\1\7\12\uffff\1\10\1\2\2\uffff\5\4",
            "\1\15",
            "\1\15\2\3",
            "\1\16",
            "\1\1\11\uffff\1\17\2\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\57\uffff\1\2\2\uffff\5\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\27\uffff\1\20\13\uffff\1\21\12\uffff\1\22\1\2\2\uffff\5\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\57\uffff\1\2\2\uffff\5\4",
            "\1\23",
            "\1\11\1\12\2\3\1\uffff\1\13\1\1\12\uffff\1\3\1\uffff\5\3\6\uffff\1\14\7\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\27\uffff\1\6\13\uffff\1\7\12\uffff\1\10\1\2\2\uffff\5\4",
            "\1\11\1\12\2\3\1\uffff\1\13\1\1\12\uffff\1\3\1\uffff\5\3\6\uffff\1\14\7\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\43\uffff\1\3\13\uffff\1\2\2\uffff\5\4",
            "\1\24\1\25\2\3\1\uffff\1\26\121\uffff\1\3",
            "\1\27",
            "\1\27",
            "\1\30",
            "\1\34\53\uffff\1\31\13\uffff\1\32\12\uffff\1\33",
            "\1\1\11\uffff\1\17\2\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\57\uffff\1\2\2\uffff\5\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\27\uffff\1\35\13\uffff\1\36\12\uffff\1\37\1\2\2\uffff\5\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\57\uffff\1\2\2\uffff\5\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\27\uffff\1\20\13\uffff\1\21\12\uffff\1\22\1\2\2\uffff\5\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\57\uffff\1\2\2\uffff\5\4",
            "\1\40",
            "\1\40",
            "\1\41",
            "\1\42\1\43\2\3\1\uffff\1\44\121\uffff\1\3",
            "\1\45",
            "\1\45",
            "\1\46",
            "\1\34\53\uffff\1\31\13\uffff\1\32\12\uffff\1\33",
            "\1\34",
            "\1\1\11\uffff\1\47\2\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\57\uffff\1\2\2\uffff\5\4",
            "\1\1\11\uffff\1\47\2\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\27\uffff\1\50\13\uffff\1\51\12\uffff\1\52\1\2\2\uffff\5\4",
            "\1\1\11\uffff\1\47\2\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\57\uffff\1\2\2\uffff\5\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\27\uffff\1\35\13\uffff\1\36\12\uffff\1\37\1\2\2\uffff\5\4",
            "\1\1\11\uffff\1\17\2\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\57\uffff\1\2\2\uffff\5\4",
            "\1\53\1\54\2\3\1\uffff\1\55\121\uffff\1\3",
            "\1\56",
            "\1\56",
            "\1\57",
            "\1\1\11\uffff\1\47\2\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\57\uffff\1\2\2\uffff\5\4",
            "\1\1\11\uffff\1\47\2\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\27\uffff\1\60\13\uffff\1\61\12\uffff\1\62\1\2\2\uffff\5\4",
            "\1\1\11\uffff\1\47\2\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\57\uffff\1\2\2\uffff\5\4",
            "\1\1\11\uffff\1\47\2\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\27\uffff\1\50\13\uffff\1\51\12\uffff\1\52\1\2\2\uffff\5\4",
            "\1\1\11\uffff\1\47\2\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\57\uffff\1\2\2\uffff\5\4",
            "\1\63",
            "\1\63",
            "\1\64",
            "\1\1\11\uffff\1\47\2\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\27\uffff\1\60\13\uffff\1\61\12\uffff\1\62\1\2\2\uffff\5\4",
            "\1\1\11\uffff\1\47\2\uffff\5\3\16\uffff\2\3\3\uffff\1\3\1\uffff\1\4\1\uffff\5\4\57\uffff\1\2\2\uffff\5\4"
    };
    static final short[][] dfa_44 = unpackEncodedStringArray(dfa_44s);

    class DFA64 extends DFA {

        public DFA64(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 64;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_8;
            this.max = dfa_9;
            this.accept = dfa_10;
            this.special = dfa_11;
            this.transition = dfa_44;
        }
        public String getDescription() {
            return "()* loopback of 1798:7: ( (lv_actions_27_0= ruleLocalAction ) )*";
        }
    }
    static final String dfa_45s = "\13\uffff";
    static final String dfa_46s = "\1\12\2\0\1\uffff\1\0\6\uffff";
    static final String dfa_47s = "\1\147\2\0\1\uffff\1\0\6\uffff";
    static final String dfa_48s = "\3\uffff\1\1\3\uffff\1\2\3\uffff";
    static final String dfa_49s = "\1\uffff\1\0\1\1\1\uffff\1\2\6\uffff}>";
    static final String[] dfa_50s = {
            "\1\1\14\uffff\1\7\1\4\3\7\16\uffff\2\3\3\uffff\1\3\67\uffff\1\2",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_45 = DFA.unpackEncodedString(dfa_45s);
    static final char[] dfa_46 = DFA.unpackEncodedStringToUnsignedChars(dfa_46s);
    static final char[] dfa_47 = DFA.unpackEncodedStringToUnsignedChars(dfa_47s);
    static final short[] dfa_48 = DFA.unpackEncodedString(dfa_48s);
    static final short[] dfa_49 = DFA.unpackEncodedString(dfa_49s);
    static final short[][] dfa_50 = unpackEncodedStringArray(dfa_50s);

    class DFA66 extends DFA {

        public DFA66(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 66;
            this.eot = dfa_45;
            this.eof = dfa_45;
            this.min = dfa_46;
            this.max = dfa_47;
            this.accept = dfa_48;
            this.special = dfa_49;
            this.transition = dfa_50;
        }
        public String getDescription() {
            return "1817:7: ( ( (lv_states_28_0= ruleImplicitState ) ) | ( (lv_states_29_0= ruleState ) )+ )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA66_1 = input.LA(1);

                         
                        int index66_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalSCTX()) ) {s = 3;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index66_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA66_2 = input.LA(1);

                         
                        int index66_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalSCTX()) ) {s = 3;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index66_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA66_4 = input.LA(1);

                         
                        int index66_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalSCTX()) ) {s = 3;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index66_4);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 66, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_51s = "\56\uffff";
    static final String dfa_52s = "\1\3\55\uffff";
    static final String dfa_53s = "\1\12\2\0\53\uffff";
    static final String dfa_54s = "\1\u009d\2\0\53\uffff";
    static final String dfa_55s = "\3\uffff\1\2\24\uffff\1\1\25\uffff";
    static final String dfa_56s = "\1\uffff\1\0\1\1\53\uffff}>";
    static final String[] dfa_57s = {
            "\1\1\13\uffff\6\3\1\uffff\1\30\14\uffff\2\3\3\uffff\1\3\1\uffff\1\3\1\uffff\5\3\6\30\2\uffff\1\30\11\uffff\3\30\32\uffff\1\2\2\uffff\5\3\5\uffff\6\30\34\uffff\2\30\3\uffff\3\30",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_51 = DFA.unpackEncodedString(dfa_51s);
    static final short[] dfa_52 = DFA.unpackEncodedString(dfa_52s);
    static final char[] dfa_53 = DFA.unpackEncodedStringToUnsignedChars(dfa_53s);
    static final char[] dfa_54 = DFA.unpackEncodedStringToUnsignedChars(dfa_54s);
    static final short[] dfa_55 = DFA.unpackEncodedString(dfa_55s);
    static final short[] dfa_56 = DFA.unpackEncodedString(dfa_56s);
    static final short[][] dfa_57 = unpackEncodedStringArray(dfa_57s);

    class DFA67 extends DFA {

        public DFA67(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 67;
            this.eot = dfa_51;
            this.eof = dfa_52;
            this.min = dfa_53;
            this.max = dfa_54;
            this.accept = dfa_55;
            this.special = dfa_56;
            this.transition = dfa_57;
        }
        public String getDescription() {
            return "()* loopback of 1869:7: ( (lv_declarations_32_0= ruleDeclarationOrMethodWithKeywordWOSemicolon ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA67_1 = input.LA(1);

                         
                        int index67_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred73_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index67_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA67_2 = input.LA(1);

                         
                        int index67_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred73_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index67_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 67, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_58s = "\1\3\64\uffff";
    static final short[] dfa_58 = DFA.unpackEncodedString(dfa_58s);

    class DFA68 extends DFA {

        public DFA68(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 68;
            this.eot = dfa_7;
            this.eof = dfa_58;
            this.min = dfa_19;
            this.max = dfa_20;
            this.accept = dfa_10;
            this.special = dfa_11;
            this.transition = dfa_21;
        }
        public String getDescription() {
            return "()* loopback of 1888:7: ( (lv_actions_33_0= ruleLocalAction ) )*";
        }
    }
    static final String dfa_59s = "\15\uffff";
    static final String dfa_60s = "\1\1\14\uffff";
    static final String dfa_61s = "\1\12\1\uffff\2\0\1\uffff\1\0\7\uffff";
    static final String dfa_62s = "\1\147\1\uffff\2\0\1\uffff\1\0\7\uffff";
    static final String dfa_63s = "\1\uffff\1\2\7\uffff\1\1\3\uffff";
    static final String dfa_64s = "\2\uffff\1\0\1\1\1\uffff\1\2\7\uffff}>";
    static final String[] dfa_65s = {
            "\1\2\13\uffff\1\1\1\11\1\5\3\11\16\uffff\2\1\3\uffff\1\1\67\uffff\1\3",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_59 = DFA.unpackEncodedString(dfa_59s);
    static final short[] dfa_60 = DFA.unpackEncodedString(dfa_60s);
    static final char[] dfa_61 = DFA.unpackEncodedStringToUnsignedChars(dfa_61s);
    static final char[] dfa_62 = DFA.unpackEncodedStringToUnsignedChars(dfa_62s);
    static final short[] dfa_63 = DFA.unpackEncodedString(dfa_63s);
    static final short[] dfa_64 = DFA.unpackEncodedString(dfa_64s);
    static final short[][] dfa_65 = unpackEncodedStringArray(dfa_65s);

    class DFA69 extends DFA {

        public DFA69(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 69;
            this.eot = dfa_59;
            this.eof = dfa_60;
            this.min = dfa_61;
            this.max = dfa_62;
            this.accept = dfa_63;
            this.special = dfa_64;
            this.transition = dfa_65;
        }
        public String getDescription() {
            return "()* loopback of 1907:7: ( (lv_states_34_0= ruleState ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA69_2 = input.LA(1);

                         
                        int index69_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred75_InternalSCTX()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index69_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA69_3 = input.LA(1);

                         
                        int index69_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred75_InternalSCTX()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index69_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA69_5 = input.LA(1);

                         
                        int index69_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred75_InternalSCTX()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index69_5);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 69, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_66s = "\5\uffff";
    static final String dfa_67s = "\1\1\4\uffff";
    static final String dfa_68s = "\1\5\1\uffff\2\6\1\uffff";
    static final String dfa_69s = "\1\147\1\uffff\2\u0088\1\uffff";
    static final String dfa_70s = "\1\uffff\1\2\2\uffff\1\1";
    static final String dfa_71s = "\5\uffff}>";
    static final String[] dfa_72s = {
            "\1\2\4\uffff\1\1\13\uffff\1\1\1\uffff\1\1\21\uffff\2\1\2\uffff\2\1\67\uffff\1\1",
            "",
            "\1\4\33\uffff\1\1\52\uffff\1\1\1\uffff\1\1\22\uffff\1\3\31\uffff\15\1",
            "\1\4\33\uffff\1\1\52\uffff\1\1\1\uffff\1\1\22\uffff\1\3\31\uffff\15\1",
            ""
    };

    static final short[] dfa_66 = DFA.unpackEncodedString(dfa_66s);
    static final short[] dfa_67 = DFA.unpackEncodedString(dfa_67s);
    static final char[] dfa_68 = DFA.unpackEncodedStringToUnsignedChars(dfa_68s);
    static final char[] dfa_69 = DFA.unpackEncodedStringToUnsignedChars(dfa_69s);
    static final short[] dfa_70 = DFA.unpackEncodedString(dfa_70s);
    static final short[] dfa_71 = DFA.unpackEncodedString(dfa_71s);
    static final short[][] dfa_72 = unpackEncodedStringArray(dfa_72s);

    class DFA73 extends DFA {

        public DFA73(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 73;
            this.eot = dfa_66;
            this.eof = dfa_67;
            this.min = dfa_68;
            this.max = dfa_69;
            this.accept = dfa_70;
            this.special = dfa_71;
            this.transition = dfa_72;
        }
        public String getDescription() {
            return "()+ loopback of 2030:4: ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+";
        }
    }
    static final String dfa_73s = "\32\uffff";
    static final String dfa_74s = "\1\5\2\0\27\uffff";
    static final String dfa_75s = "\1\u009d\2\0\27\uffff";
    static final String dfa_76s = "\3\uffff\1\2\1\uffff\1\1\24\uffff";
    static final String dfa_77s = "\1\uffff\1\0\1\1\27\uffff}>";
    static final String[] dfa_78s = {
            "\1\3\4\uffff\1\1\13\uffff\1\3\6\uffff\1\5\32\uffff\6\5\14\uffff\3\5\32\uffff\1\2\14\uffff\6\5\34\uffff\2\5\3\uffff\3\5",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_73 = DFA.unpackEncodedString(dfa_73s);
    static final char[] dfa_74 = DFA.unpackEncodedStringToUnsignedChars(dfa_74s);
    static final char[] dfa_75 = DFA.unpackEncodedStringToUnsignedChars(dfa_75s);
    static final short[] dfa_76 = DFA.unpackEncodedString(dfa_76s);
    static final short[] dfa_77 = DFA.unpackEncodedString(dfa_77s);
    static final short[][] dfa_78 = unpackEncodedStringArray(dfa_78s);

    class DFA85 extends DFA {

        public DFA85(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 85;
            this.eot = dfa_73;
            this.eof = dfa_73;
            this.min = dfa_74;
            this.max = dfa_75;
            this.accept = dfa_76;
            this.special = dfa_77;
            this.transition = dfa_78;
        }
        public String getDescription() {
            return "()* loopback of 2285:5: ( (lv_declarations_16_0= ruleDeclarationWOSemicolon ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA85_1 = input.LA(1);

                         
                        int index85_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_InternalSCTX()) ) {s = 5;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index85_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA85_2 = input.LA(1);

                         
                        int index85_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_InternalSCTX()) ) {s = 5;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index85_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 85, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_79s = "\37\uffff";
    static final String dfa_80s = "\1\3\36\uffff";
    static final String dfa_81s = "\1\5\2\0\34\uffff";
    static final String dfa_82s = "\1\u009d\2\0\34\uffff";
    static final String dfa_83s = "\3\uffff\1\2\6\uffff\1\1\24\uffff";
    static final String dfa_84s = "\1\uffff\1\0\1\1\34\uffff}>";
    static final String[] dfa_85s = {
            "\1\3\4\uffff\1\1\13\uffff\1\3\1\uffff\1\3\4\uffff\1\12\14\uffff\2\3\3\uffff\1\3\10\uffff\6\12\14\uffff\3\12\32\uffff\1\2\14\uffff\6\12\34\uffff\2\12\3\uffff\3\12",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_79 = DFA.unpackEncodedString(dfa_79s);
    static final short[] dfa_80 = DFA.unpackEncodedString(dfa_80s);
    static final char[] dfa_81 = DFA.unpackEncodedStringToUnsignedChars(dfa_81s);
    static final char[] dfa_82 = DFA.unpackEncodedStringToUnsignedChars(dfa_82s);
    static final short[] dfa_83 = DFA.unpackEncodedString(dfa_83s);
    static final short[] dfa_84 = DFA.unpackEncodedString(dfa_84s);
    static final short[][] dfa_85 = unpackEncodedStringArray(dfa_85s);

    class DFA88 extends DFA {

        public DFA88(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 88;
            this.eot = dfa_79;
            this.eof = dfa_80;
            this.min = dfa_81;
            this.max = dfa_82;
            this.accept = dfa_83;
            this.special = dfa_84;
            this.transition = dfa_85;
        }
        public String getDescription() {
            return "()* loopback of 2352:5: ( (lv_declarations_20_0= ruleDeclarationWOSemicolon ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA88_1 = input.LA(1);

                         
                        int index88_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred93_InternalSCTX()) ) {s = 10;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index88_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA88_2 = input.LA(1);

                         
                        int index88_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred93_InternalSCTX()) ) {s = 10;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index88_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 88, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_86s = "\12\uffff";
    static final String dfa_87s = "\1\1\11\uffff";
    static final String dfa_88s = "\1\5\1\uffff\2\0\6\uffff";
    static final String dfa_89s = "\1\147\1\uffff\2\0\6\uffff";
    static final String dfa_90s = "\1\uffff\1\2\7\uffff\1\1";
    static final String dfa_91s = "\2\uffff\1\0\1\1\6\uffff}>";
    static final String[] dfa_92s = {
            "\1\11\4\uffff\1\2\13\uffff\1\1\1\uffff\1\1\21\uffff\2\1\3\uffff\1\1\67\uffff\1\3",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_86 = DFA.unpackEncodedString(dfa_86s);
    static final short[] dfa_87 = DFA.unpackEncodedString(dfa_87s);
    static final char[] dfa_88 = DFA.unpackEncodedStringToUnsignedChars(dfa_88s);
    static final char[] dfa_89 = DFA.unpackEncodedStringToUnsignedChars(dfa_89s);
    static final short[] dfa_90 = DFA.unpackEncodedString(dfa_90s);
    static final short[] dfa_91 = DFA.unpackEncodedString(dfa_91s);
    static final short[][] dfa_92 = unpackEncodedStringArray(dfa_92s);

    class DFA90 extends DFA {

        public DFA90(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 90;
            this.eot = dfa_86;
            this.eof = dfa_87;
            this.min = dfa_88;
            this.max = dfa_89;
            this.accept = dfa_90;
            this.special = dfa_91;
            this.transition = dfa_92;
        }
        public String getDescription() {
            return "()* loopback of 2371:5: ( ( (lv_equations_21_1= ruleDataflowAssignment | lv_equations_21_2= ruleAssignment ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA90_2 = input.LA(1);

                         
                        int index90_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalSCTX()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index90_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA90_3 = input.LA(1);

                         
                        int index90_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalSCTX()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index90_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 90, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_93s = "\76\uffff";
    static final String dfa_94s = "\2\12\1\5\2\61\1\uffff\4\63\4\uffff\1\4\2\5\1\6\3\12\1\5\3\4\2\5\1\6\1\43\5\12\2\5\1\6\1\4\2\5\1\6\2\43\5\12\1\4\2\5\1\6\5\12\2\5\1\6\2\12";
    static final String dfa_95s = "\2\156\1\5\1\66\1\64\1\uffff\4\67\4\uffff\1\156\2\5\1\6\3\156\1\5\2\156\1\11\2\5\1\6\1\146\5\156\2\5\1\6\1\11\2\5\1\6\1\146\1\43\5\156\1\11\2\5\1\6\5\156\2\5\1\6\2\156";
    static final String dfa_96s = "\5\uffff\1\1\4\uffff\1\2\1\3\1\4\1\5\60\uffff";
    static final String dfa_97s = "\76\uffff}>";
    static final String[] dfa_98s = {
            "\1\1\46\uffff\1\5\1\uffff\1\12\1\13\1\3\1\14\1\15\57\uffff\1\2\2\uffff\1\4\1\6\1\7\1\10\1\11",
            "\1\1\46\uffff\1\5\1\uffff\1\12\1\13\1\3\1\14\1\15\57\uffff\1\2\2\uffff\1\4\1\6\1\7\1\10\1\11",
            "\1\16",
            "\1\5\2\uffff\1\13\1\uffff\1\14",
            "\1\5\2\uffff\1\13",
            "",
            "\1\12\1\uffff\2\14\1\15",
            "\1\12\1\uffff\2\14\1\15",
            "\1\12\1\uffff\2\14\1\15",
            "\1\12\1\uffff\2\14\1\15",
            "",
            "",
            "",
            "",
            "\1\22\1\23\3\uffff\1\24\1\1\27\uffff\1\25\16\uffff\1\5\1\uffff\1\12\1\13\1\3\1\14\1\15\27\uffff\1\17\13\uffff\1\20\12\uffff\1\21\1\2\2\uffff\1\4\1\6\1\7\1\10\1\11",
            "\1\26",
            "\1\26",
            "\1\27",
            "\1\1\11\uffff\1\30\34\uffff\1\5\1\uffff\1\12\1\13\1\3\1\14\1\15\57\uffff\1\2\2\uffff\1\4\1\6\1\7\1\10\1\11",
            "\1\1\11\uffff\1\30\34\uffff\1\5\1\uffff\1\12\1\13\1\3\1\14\1\15\27\uffff\1\31\13\uffff\1\32\12\uffff\1\33\1\2\2\uffff\1\4\1\6\1\7\1\10\1\11",
            "\1\1\11\uffff\1\30\34\uffff\1\5\1\uffff\1\12\1\13\1\3\1\14\1\15\57\uffff\1\2\2\uffff\1\4\1\6\1\7\1\10\1\11",
            "\1\34",
            "\1\22\1\23\3\uffff\1\24\1\1\27\uffff\1\25\16\uffff\1\5\1\uffff\1\12\1\13\1\3\1\14\1\15\27\uffff\1\17\13\uffff\1\20\12\uffff\1\21\1\2\2\uffff\1\4\1\6\1\7\1\10\1\11",
            "\1\22\1\23\3\uffff\1\24\1\1\27\uffff\1\25\16\uffff\1\5\1\uffff\1\12\1\13\1\3\1\14\1\15\57\uffff\1\2\2\uffff\1\4\1\6\1\7\1\10\1\11",
            "\1\35\1\36\3\uffff\1\37",
            "\1\40",
            "\1\40",
            "\1\41",
            "\1\45\53\uffff\1\42\13\uffff\1\43\12\uffff\1\44",
            "\1\1\11\uffff\1\30\34\uffff\1\5\1\uffff\1\12\1\13\1\3\1\14\1\15\57\uffff\1\2\2\uffff\1\4\1\6\1\7\1\10\1\11",
            "\1\1\11\uffff\1\30\34\uffff\1\5\1\uffff\1\12\1\13\1\3\1\14\1\15\27\uffff\1\46\13\uffff\1\47\12\uffff\1\50\1\2\2\uffff\1\4\1\6\1\7\1\10\1\11",
            "\1\1\11\uffff\1\30\34\uffff\1\5\1\uffff\1\12\1\13\1\3\1\14\1\15\57\uffff\1\2\2\uffff\1\4\1\6\1\7\1\10\1\11",
            "\1\1\11\uffff\1\30\34\uffff\1\5\1\uffff\1\12\1\13\1\3\1\14\1\15\27\uffff\1\31\13\uffff\1\32\12\uffff\1\33\1\2\2\uffff\1\4\1\6\1\7\1\10\1\11",
            "\1\1\11\uffff\1\30\34\uffff\1\5\1\uffff\1\12\1\13\1\3\1\14\1\15\57\uffff\1\2\2\uffff\1\4\1\6\1\7\1\10\1\11",
            "\1\51",
            "\1\51",
            "\1\52",
            "\1\53\1\54\3\uffff\1\55",
            "\1\56",
            "\1\56",
            "\1\57",
            "\1\45\53\uffff\1\42\13\uffff\1\43\12\uffff\1\44",
            "\1\45",
            "\1\1\11\uffff\1\60\34\uffff\1\5\1\uffff\1\12\1\13\1\3\1\14\1\15\57\uffff\1\2\2\uffff\1\4\1\6\1\7\1\10\1\11",
            "\1\1\11\uffff\1\60\34\uffff\1\5\1\uffff\1\12\1\13\1\3\1\14\1\15\27\uffff\1\61\13\uffff\1\62\12\uffff\1\63\1\2\2\uffff\1\4\1\6\1\7\1\10\1\11",
            "\1\1\11\uffff\1\60\34\uffff\1\5\1\uffff\1\12\1\13\1\3\1\14\1\15\57\uffff\1\2\2\uffff\1\4\1\6\1\7\1\10\1\11",
            "\1\1\11\uffff\1\30\34\uffff\1\5\1\uffff\1\12\1\13\1\3\1\14\1\15\27\uffff\1\46\13\uffff\1\47\12\uffff\1\50\1\2\2\uffff\1\4\1\6\1\7\1\10\1\11",
            "\1\1\11\uffff\1\30\34\uffff\1\5\1\uffff\1\12\1\13\1\3\1\14\1\15\57\uffff\1\2\2\uffff\1\4\1\6\1\7\1\10\1\11",
            "\1\64\1\65\3\uffff\1\66",
            "\1\67",
            "\1\67",
            "\1\70",
            "\1\1\11\uffff\1\60\34\uffff\1\5\1\uffff\1\12\1\13\1\3\1\14\1\15\57\uffff\1\2\2\uffff\1\4\1\6\1\7\1\10\1\11",
            "\1\1\11\uffff\1\60\34\uffff\1\5\1\uffff\1\12\1\13\1\3\1\14\1\15\27\uffff\1\71\13\uffff\1\72\12\uffff\1\73\1\2\2\uffff\1\4\1\6\1\7\1\10\1\11",
            "\1\1\11\uffff\1\60\34\uffff\1\5\1\uffff\1\12\1\13\1\3\1\14\1\15\57\uffff\1\2\2\uffff\1\4\1\6\1\7\1\10\1\11",
            "\1\1\11\uffff\1\60\34\uffff\1\5\1\uffff\1\12\1\13\1\3\1\14\1\15\27\uffff\1\61\13\uffff\1\62\12\uffff\1\63\1\2\2\uffff\1\4\1\6\1\7\1\10\1\11",
            "\1\1\11\uffff\1\60\34\uffff\1\5\1\uffff\1\12\1\13\1\3\1\14\1\15\57\uffff\1\2\2\uffff\1\4\1\6\1\7\1\10\1\11",
            "\1\74",
            "\1\74",
            "\1\75",
            "\1\1\11\uffff\1\60\34\uffff\1\5\1\uffff\1\12\1\13\1\3\1\14\1\15\27\uffff\1\71\13\uffff\1\72\12\uffff\1\73\1\2\2\uffff\1\4\1\6\1\7\1\10\1\11",
            "\1\1\11\uffff\1\60\34\uffff\1\5\1\uffff\1\12\1\13\1\3\1\14\1\15\57\uffff\1\2\2\uffff\1\4\1\6\1\7\1\10\1\11"
    };

    static final short[] dfa_93 = DFA.unpackEncodedString(dfa_93s);
    static final char[] dfa_94 = DFA.unpackEncodedStringToUnsignedChars(dfa_94s);
    static final char[] dfa_95 = DFA.unpackEncodedStringToUnsignedChars(dfa_95s);
    static final short[] dfa_96 = DFA.unpackEncodedString(dfa_96s);
    static final short[] dfa_97 = DFA.unpackEncodedString(dfa_97s);
    static final short[][] dfa_98 = unpackEncodedStringArray(dfa_98s);

    class DFA93 extends DFA {

        public DFA93(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 93;
            this.eot = dfa_93;
            this.eof = dfa_93;
            this.min = dfa_94;
            this.max = dfa_95;
            this.accept = dfa_96;
            this.special = dfa_97;
            this.transition = dfa_98;
        }
        public String getDescription() {
            return "2506:2: (this_EntryAction_0= ruleEntryAction | this_DuringAction_1= ruleDuringAction | this_ExitAction_2= ruleExitAction | this_SuspendAction_3= ruleSuspendAction | this_PeriodAction_4= rulePeriodAction )";
        }
    }

    class DFA103 extends DFA {

        public DFA103(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 103;
            this.eot = dfa_27;
            this.eof = dfa_27;
            this.min = dfa_28;
            this.max = dfa_29;
            this.accept = dfa_30;
            this.special = dfa_31;
            this.transition = dfa_32;
        }
        public String getDescription() {
            return "2836:4: ( (lv_triggerDelay_5_0= RULE_INT ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA103_1 = input.LA(1);

                         
                        int index103_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred110_InternalSCTX()) ) {s = 19;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index103_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 103, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA119 extends DFA {

        public DFA119(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 119;
            this.eot = dfa_27;
            this.eof = dfa_27;
            this.min = dfa_28;
            this.max = dfa_29;
            this.accept = dfa_30;
            this.special = dfa_31;
            this.transition = dfa_32;
        }
        public String getDescription() {
            return "3256:4: ( (lv_triggerDelay_6_0= RULE_INT ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA119_1 = input.LA(1);

                         
                        int index119_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred126_InternalSCTX()) ) {s = 19;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index119_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 119, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_99s = "\1\12\27\0\2\uffff";
    static final String dfa_100s = "\1\u009d\27\0\2\uffff";
    static final String dfa_101s = "\30\uffff\1\1\1\2";
    static final String dfa_102s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\2\uffff}>";
    static final String[] dfa_103s = {
            "\1\1\22\uffff\1\25\32\uffff\1\6\1\7\1\10\1\11\1\12\1\22\14\uffff\1\13\1\23\1\24\32\uffff\1\2\14\uffff\1\14\1\15\1\16\1\17\1\20\1\21\34\uffff\1\27\1\26\3\uffff\1\3\1\4\1\5",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };
    static final char[] dfa_99 = DFA.unpackEncodedStringToUnsignedChars(dfa_99s);
    static final char[] dfa_100 = DFA.unpackEncodedStringToUnsignedChars(dfa_100s);
    static final short[] dfa_101 = DFA.unpackEncodedString(dfa_101s);
    static final short[] dfa_102 = DFA.unpackEncodedString(dfa_102s);
    static final short[][] dfa_103 = unpackEncodedStringArray(dfa_103s);

    class DFA126 extends DFA {

        public DFA126(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 126;
            this.eot = dfa_73;
            this.eof = dfa_73;
            this.min = dfa_99;
            this.max = dfa_100;
            this.accept = dfa_101;
            this.special = dfa_102;
            this.transition = dfa_103;
        }
        public String getDescription() {
            return "3474:2: (this_Declaration_0= superDeclaration | this_DeclarationWOSemicolon_1= ruleDeclarationWOSemicolon )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA126_1 = input.LA(1);

                         
                        int index126_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred133_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index126_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA126_2 = input.LA(1);

                         
                        int index126_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred133_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index126_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA126_3 = input.LA(1);

                         
                        int index126_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred133_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index126_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA126_4 = input.LA(1);

                         
                        int index126_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred133_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index126_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA126_5 = input.LA(1);

                         
                        int index126_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred133_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index126_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA126_6 = input.LA(1);

                         
                        int index126_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred133_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index126_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA126_7 = input.LA(1);

                         
                        int index126_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred133_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index126_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA126_8 = input.LA(1);

                         
                        int index126_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred133_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index126_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA126_9 = input.LA(1);

                         
                        int index126_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred133_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index126_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA126_10 = input.LA(1);

                         
                        int index126_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred133_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index126_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA126_11 = input.LA(1);

                         
                        int index126_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred133_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index126_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA126_12 = input.LA(1);

                         
                        int index126_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred133_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index126_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA126_13 = input.LA(1);

                         
                        int index126_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred133_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index126_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA126_14 = input.LA(1);

                         
                        int index126_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred133_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index126_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA126_15 = input.LA(1);

                         
                        int index126_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred133_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index126_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA126_16 = input.LA(1);

                         
                        int index126_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred133_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index126_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA126_17 = input.LA(1);

                         
                        int index126_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred133_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index126_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA126_18 = input.LA(1);

                         
                        int index126_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred133_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index126_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA126_19 = input.LA(1);

                         
                        int index126_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred133_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index126_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA126_20 = input.LA(1);

                         
                        int index126_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred133_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index126_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA126_21 = input.LA(1);

                         
                        int index126_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred133_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index126_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA126_22 = input.LA(1);

                         
                        int index126_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred133_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index126_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA126_23 = input.LA(1);

                         
                        int index126_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred133_InternalSCTX()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index126_23);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 126, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_104s = "\21\uffff";
    static final String dfa_105s = "\1\5\3\0\15\uffff";
    static final String dfa_106s = "\1\147\3\0\15\uffff";
    static final String dfa_107s = "\4\uffff\1\4\3\uffff\1\5\1\6\1\7\1\10\1\11\1\12\1\1\1\2\1\3";
    static final String dfa_108s = "\1\uffff\1\0\1\1\1\2\15\uffff}>";
    static final String[] dfa_109s = {
            "\1\3\2\uffff\1\4\1\uffff\1\1\12\uffff\1\12\16\uffff\1\10\7\uffff\1\14\26\uffff\1\11\1\13\1\uffff\1\15\5\uffff\1\4\3\uffff\2\4\25\uffff\1\2",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_104 = DFA.unpackEncodedString(dfa_104s);
    static final char[] dfa_105 = DFA.unpackEncodedStringToUnsignedChars(dfa_105s);
    static final char[] dfa_106 = DFA.unpackEncodedStringToUnsignedChars(dfa_106s);
    static final short[] dfa_107 = DFA.unpackEncodedString(dfa_107s);
    static final short[] dfa_108 = DFA.unpackEncodedString(dfa_108s);
    static final short[][] dfa_109 = unpackEncodedStringArray(dfa_109s);

    class DFA127 extends DFA {

        public DFA127(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 127;
            this.eot = dfa_104;
            this.eof = dfa_104;
            this.min = dfa_105;
            this.max = dfa_106;
            this.accept = dfa_107;
            this.special = dfa_108;
            this.transition = dfa_109;
        }
        public String getDescription() {
            return "3516:2: (this_SclAssignment_0= ruleSclAssignment | this_SclPostfixAssignment_1= ruleSclPostfixAssignment | this_Label_2= ruleLabel | this_SclEffectAssignment_3= ruleSclEffectAssignment | this_Conditional_4= ruleConditional | this_Goto_5= ruleGoto | this_ScopeStatement_6= ruleScopeStatement | this_Return_7= ruleReturn | this_ForLoop_8= ruleForLoop | this_WhileLoop_9= ruleWhileLoop )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA127_1 = input.LA(1);

                         
                        int index127_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred134_InternalSCTX()) ) {s = 14;}

                        else if ( (synpred135_InternalSCTX()) ) {s = 15;}

                        else if ( (synpred136_InternalSCTX()) ) {s = 16;}

                        else if ( (synpred137_InternalSCTX()) ) {s = 4;}

                        else if ( (synpred138_InternalSCTX()) ) {s = 8;}

                        else if ( (synpred139_InternalSCTX()) ) {s = 9;}

                        else if ( (synpred140_InternalSCTX()) ) {s = 10;}

                        else if ( (synpred141_InternalSCTX()) ) {s = 11;}

                         
                        input.seek(index127_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA127_2 = input.LA(1);

                         
                        int index127_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred134_InternalSCTX()) ) {s = 14;}

                        else if ( (synpred135_InternalSCTX()) ) {s = 15;}

                        else if ( (synpred136_InternalSCTX()) ) {s = 16;}

                        else if ( (synpred137_InternalSCTX()) ) {s = 4;}

                        else if ( (synpred138_InternalSCTX()) ) {s = 8;}

                        else if ( (synpred139_InternalSCTX()) ) {s = 9;}

                        else if ( (synpred140_InternalSCTX()) ) {s = 10;}

                        else if ( (synpred141_InternalSCTX()) ) {s = 11;}

                         
                        input.seek(index127_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA127_3 = input.LA(1);

                         
                        int index127_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred134_InternalSCTX()) ) {s = 14;}

                        else if ( (synpred135_InternalSCTX()) ) {s = 15;}

                        else if ( (synpred136_InternalSCTX()) ) {s = 16;}

                        else if ( (synpred137_InternalSCTX()) ) {s = 4;}

                         
                        input.seek(index127_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 127, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_110s = "\43\uffff";
    static final String dfa_111s = "\1\5\2\0\4\uffff\1\0\33\uffff";
    static final String dfa_112s = "\1\u009d\2\0\4\uffff\1\0\33\uffff";
    static final String dfa_113s = "\3\uffff\1\2\13\uffff\1\1\23\uffff";
    static final String dfa_114s = "\1\uffff\1\0\1\1\4\uffff\1\2\33\uffff}>";
    static final String[] dfa_115s = {
            "\1\3\2\uffff\1\3\1\uffff\1\1\12\uffff\2\3\6\uffff\1\17\6\uffff\1\3\7\uffff\1\3\13\uffff\6\17\5\uffff\2\3\1\uffff\1\3\3\uffff\2\17\1\7\3\uffff\2\3\25\uffff\1\2\14\uffff\6\17\34\uffff\2\17\3\uffff\3\17",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_110 = DFA.unpackEncodedString(dfa_110s);
    static final char[] dfa_111 = DFA.unpackEncodedStringToUnsignedChars(dfa_111s);
    static final char[] dfa_112 = DFA.unpackEncodedStringToUnsignedChars(dfa_112s);
    static final short[] dfa_113 = DFA.unpackEncodedString(dfa_113s);
    static final short[] dfa_114 = DFA.unpackEncodedString(dfa_114s);
    static final short[][] dfa_115 = unpackEncodedStringArray(dfa_115s);

    class DFA130 extends DFA {

        public DFA130(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 130;
            this.eot = dfa_110;
            this.eof = dfa_110;
            this.min = dfa_111;
            this.max = dfa_112;
            this.accept = dfa_113;
            this.special = dfa_114;
            this.transition = dfa_115;
        }
        public String getDescription() {
            return "()* loopback of 3730:3: ( (lv_declarations_3_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA130_1 = input.LA(1);

                         
                        int index130_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred145_InternalSCTX()) ) {s = 15;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index130_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA130_2 = input.LA(1);

                         
                        int index130_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred145_InternalSCTX()) ) {s = 15;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index130_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA130_7 = input.LA(1);

                         
                        int index130_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred145_InternalSCTX()) ) {s = 15;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index130_7);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 130, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_116s = "\1\4\75\uffff";
    static final String dfa_117s = "\1\5\3\0\72\uffff";
    static final String dfa_118s = "\1\u009e\3\0\72\uffff";
    static final String dfa_119s = "\4\uffff\1\2\70\uffff\1\1";
    static final String dfa_120s = "\1\uffff\1\0\1\1\1\2\72\uffff}>";
    static final String[] dfa_121s = {
            "\1\3\2\uffff\1\4\1\uffff\1\1\1\4\11\uffff\7\4\1\uffff\1\4\6\uffff\1\4\5\uffff\3\4\2\uffff\1\4\1\uffff\1\4\1\uffff\13\4\2\uffff\1\4\2\uffff\2\4\1\uffff\7\4\3\uffff\2\4\25\uffff\1\2\2\uffff\5\4\5\uffff\6\4\34\uffff\2\4\3\uffff\4\4",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_116 = DFA.unpackEncodedString(dfa_116s);
    static final char[] dfa_117 = DFA.unpackEncodedStringToUnsignedChars(dfa_117s);
    static final char[] dfa_118 = DFA.unpackEncodedStringToUnsignedChars(dfa_118s);
    static final short[] dfa_119 = DFA.unpackEncodedString(dfa_119s);
    static final short[] dfa_120 = DFA.unpackEncodedString(dfa_120s);
    static final short[][] dfa_121 = unpackEncodedStringArray(dfa_121s);

    class DFA147 extends DFA {

        public DFA147(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 147;
            this.eot = dfa_93;
            this.eof = dfa_116;
            this.min = dfa_117;
            this.max = dfa_118;
            this.accept = dfa_119;
            this.special = dfa_120;
            this.transition = dfa_121;
        }
        public String getDescription() {
            return "4079:3: ( ( (lv_valuedObjects_20_0= ruleValuedObject ) ) (otherlv_21= ',' ( (lv_valuedObjects_22_0= ruleValuedObject ) ) )* )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA147_1 = input.LA(1);

                         
                        int index147_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred162_InternalSCTX()) ) {s = 61;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index147_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA147_2 = input.LA(1);

                         
                        int index147_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred162_InternalSCTX()) ) {s = 61;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index147_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA147_3 = input.LA(1);

                         
                        int index147_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred162_InternalSCTX()) ) {s = 61;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index147_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 147, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_122s = "\1\12\2\0\27\uffff";
    static final String[] dfa_123s = {
            "\1\1\14\uffff\1\3\3\uffff\1\3\1\uffff\1\5\32\uffff\6\5\14\uffff\3\5\32\uffff\1\2\14\uffff\6\5\34\uffff\2\5\3\uffff\3\5",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_122 = DFA.unpackEncodedStringToUnsignedChars(dfa_122s);
    static final short[][] dfa_123 = unpackEncodedStringArray(dfa_123s);

    class DFA150 extends DFA {

        public DFA150(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 150;
            this.eot = dfa_73;
            this.eof = dfa_73;
            this.min = dfa_122;
            this.max = dfa_75;
            this.accept = dfa_76;
            this.special = dfa_77;
            this.transition = dfa_123;
        }
        public String getDescription() {
            return "()* loopback of 4207:3: ( (lv_declarations_4_0= ruleDeclarationWOSemicolon ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA150_1 = input.LA(1);

                         
                        int index150_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred165_InternalSCTX()) ) {s = 5;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index150_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA150_2 = input.LA(1);

                         
                        int index150_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred165_InternalSCTX()) ) {s = 5;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index150_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 150, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_124s = "\1\147\1\uffff\1\147\1\5\1\uffff\1\147\1\5\1\7\1\6\3\147\1\5\2\147\1\133\2\5\1\6\1\146\5\147\2\5\1\6\1\133\2\5\1\6\1\146\1\43\5\147\1\133\2\5\1\6\5\147\2\5\1\6\2\147";
    static final String[] dfa_125s = {
            "\1\2\13\uffff\2\1\3\uffff\1\1\10\uffff\1\4\32\uffff\1\4\47\uffff\1\3",
            "",
            "\1\2\14\uffff\1\1\3\uffff\1\1\10\uffff\1\4\32\uffff\1\4\47\uffff\1\3",
            "\1\5",
            "",
            "\1\11\1\12\2\1\1\uffff\1\13\1\2\12\uffff\1\1\1\uffff\1\1\3\uffff\1\1\6\uffff\1\14\1\uffff\1\4\32\uffff\1\4\17\uffff\1\6\13\uffff\1\7\12\uffff\1\10\1\3",
            "\1\15",
            "\1\15\2\1",
            "\1\16",
            "\1\2\11\uffff\1\17\2\uffff\1\1\3\uffff\1\1\10\uffff\1\4\32\uffff\1\4\47\uffff\1\3",
            "\1\2\11\uffff\1\17\2\uffff\1\1\3\uffff\1\1\10\uffff\1\4\32\uffff\1\4\17\uffff\1\20\13\uffff\1\21\12\uffff\1\22\1\3",
            "\1\2\11\uffff\1\17\2\uffff\1\1\3\uffff\1\1\10\uffff\1\4\32\uffff\1\4\47\uffff\1\3",
            "\1\23",
            "\1\11\1\12\2\1\1\uffff\1\13\1\2\12\uffff\1\1\1\uffff\1\1\3\uffff\1\1\6\uffff\1\14\1\uffff\1\4\32\uffff\1\4\17\uffff\1\6\13\uffff\1\7\12\uffff\1\10\1\3",
            "\1\11\1\12\2\1\1\uffff\1\13\1\2\12\uffff\1\1\1\uffff\1\1\3\uffff\1\1\6\uffff\1\14\1\uffff\1\4\32\uffff\1\4\33\uffff\1\1\13\uffff\1\3",
            "\1\24\1\25\2\1\1\uffff\1\26\121\uffff\1\1",
            "\1\27",
            "\1\27",
            "\1\30",
            "\1\34\53\uffff\1\31\13\uffff\1\32\12\uffff\1\33",
            "\1\2\11\uffff\1\17\2\uffff\1\1\3\uffff\1\1\10\uffff\1\4\32\uffff\1\4\47\uffff\1\3",
            "\1\2\11\uffff\1\17\2\uffff\1\1\3\uffff\1\1\10\uffff\1\4\32\uffff\1\4\17\uffff\1\35\13\uffff\1\36\12\uffff\1\37\1\3",
            "\1\2\11\uffff\1\17\2\uffff\1\1\3\uffff\1\1\10\uffff\1\4\32\uffff\1\4\47\uffff\1\3",
            "\1\2\11\uffff\1\17\2\uffff\1\1\3\uffff\1\1\10\uffff\1\4\32\uffff\1\4\17\uffff\1\20\13\uffff\1\21\12\uffff\1\22\1\3",
            "\1\2\11\uffff\1\17\2\uffff\1\1\3\uffff\1\1\10\uffff\1\4\32\uffff\1\4\47\uffff\1\3",
            "\1\40",
            "\1\40",
            "\1\41",
            "\1\42\1\43\2\1\1\uffff\1\44\121\uffff\1\1",
            "\1\45",
            "\1\45",
            "\1\46",
            "\1\34\53\uffff\1\31\13\uffff\1\32\12\uffff\1\33",
            "\1\34",
            "\1\2\11\uffff\1\47\2\uffff\1\1\3\uffff\1\1\10\uffff\1\4\32\uffff\1\4\47\uffff\1\3",
            "\1\2\11\uffff\1\47\2\uffff\1\1\3\uffff\1\1\10\uffff\1\4\32\uffff\1\4\17\uffff\1\50\13\uffff\1\51\12\uffff\1\52\1\3",
            "\1\2\11\uffff\1\47\2\uffff\1\1\3\uffff\1\1\10\uffff\1\4\32\uffff\1\4\47\uffff\1\3",
            "\1\2\11\uffff\1\17\2\uffff\1\1\3\uffff\1\1\10\uffff\1\4\32\uffff\1\4\17\uffff\1\35\13\uffff\1\36\12\uffff\1\37\1\3",
            "\1\2\11\uffff\1\17\2\uffff\1\1\3\uffff\1\1\10\uffff\1\4\32\uffff\1\4\47\uffff\1\3",
            "\1\53\1\54\2\1\1\uffff\1\55\121\uffff\1\1",
            "\1\56",
            "\1\56",
            "\1\57",
            "\1\2\11\uffff\1\47\2\uffff\1\1\3\uffff\1\1\10\uffff\1\4\32\uffff\1\4\47\uffff\1\3",
            "\1\2\11\uffff\1\47\2\uffff\1\1\3\uffff\1\1\10\uffff\1\4\32\uffff\1\4\17\uffff\1\60\13\uffff\1\61\12\uffff\1\62\1\3",
            "\1\2\11\uffff\1\47\2\uffff\1\1\3\uffff\1\1\10\uffff\1\4\32\uffff\1\4\47\uffff\1\3",
            "\1\2\11\uffff\1\47\2\uffff\1\1\3\uffff\1\1\10\uffff\1\4\32\uffff\1\4\17\uffff\1\50\13\uffff\1\51\12\uffff\1\52\1\3",
            "\1\2\11\uffff\1\47\2\uffff\1\1\3\uffff\1\1\10\uffff\1\4\32\uffff\1\4\47\uffff\1\3",
            "\1\63",
            "\1\63",
            "\1\64",
            "\1\2\11\uffff\1\47\2\uffff\1\1\3\uffff\1\1\10\uffff\1\4\32\uffff\1\4\17\uffff\1\60\13\uffff\1\61\12\uffff\1\62\1\3",
            "\1\2\11\uffff\1\47\2\uffff\1\1\3\uffff\1\1\10\uffff\1\4\32\uffff\1\4\47\uffff\1\3"
    };
    static final char[] dfa_124 = DFA.unpackEncodedStringToUnsignedChars(dfa_124s);
    static final short[][] dfa_125 = unpackEncodedStringArray(dfa_125s);

    class DFA155 extends DFA {

        public DFA155(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 155;
            this.eot = dfa_7;
            this.eof = dfa_22;
            this.min = dfa_23;
            this.max = dfa_124;
            this.accept = dfa_25;
            this.special = dfa_11;
            this.transition = dfa_125;
        }
        public String getDescription() {
            return "()* loopback of 4341:3: ( (lv_outgoingTransitions_5_0= rulePolicyTransition ) )*";
        }
    }
    static final String dfa_126s = "\31\uffff";
    static final String dfa_127s = "\1\12\5\0\23\uffff";
    static final String dfa_128s = "\1\u009d\5\0\23\uffff";
    static final String dfa_129s = "\6\uffff\1\1\21\uffff\1\2";
    static final String dfa_130s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\23\uffff}>";
    static final String[] dfa_131s = {
            "\1\1\22\uffff\1\6\32\uffff\6\6\2\uffff\1\30\11\uffff\3\6\32\uffff\1\2\14\uffff\6\6\34\uffff\2\6\3\uffff\1\3\1\4\1\5",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_126 = DFA.unpackEncodedString(dfa_126s);
    static final char[] dfa_127 = DFA.unpackEncodedStringToUnsignedChars(dfa_127s);
    static final char[] dfa_128 = DFA.unpackEncodedStringToUnsignedChars(dfa_128s);
    static final short[] dfa_129 = DFA.unpackEncodedString(dfa_129s);
    static final short[] dfa_130 = DFA.unpackEncodedString(dfa_130s);
    static final short[][] dfa_131 = unpackEncodedStringArray(dfa_131s);

    class DFA162 extends DFA {

        public DFA162(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 162;
            this.eot = dfa_126;
            this.eof = dfa_126;
            this.min = dfa_127;
            this.max = dfa_128;
            this.accept = dfa_129;
            this.special = dfa_130;
            this.transition = dfa_131;
        }
        public String getDescription() {
            return "4567:2: (this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon | this_KeywordMethodDeclarationWOSemicolon_1= ruleKeywordMethodDeclarationWOSemicolon )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA162_1 = input.LA(1);

                         
                        int index162_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index162_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA162_2 = input.LA(1);

                         
                        int index162_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index162_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA162_3 = input.LA(1);

                         
                        int index162_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index162_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA162_4 = input.LA(1);

                         
                        int index162_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index162_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA162_5 = input.LA(1);

                         
                        int index162_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index162_5);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 162, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_132s = "\6\uffff";
    static final String dfa_133s = "\1\2\2\uffff\2\2\1\uffff";
    static final String dfa_134s = "\1\12\1\4\1\uffff\2\6\1\uffff";
    static final String dfa_135s = "\1\u009d\1\147\1\uffff\2\u009d\1\uffff";
    static final String dfa_136s = "\2\uffff\1\2\2\uffff\1\1";
    static final String dfa_137s = "\6\uffff}>";
    static final String[] dfa_138s = {
            "\1\2\12\uffff\7\2\1\uffff\1\1\14\uffff\2\2\3\uffff\1\2\1\uffff\1\2\1\uffff\13\2\2\uffff\1\2\11\uffff\3\2\32\uffff\1\2\2\uffff\5\2\5\uffff\6\2\34\uffff\2\2\3\uffff\3\2",
            "\1\2\1\3\4\uffff\1\2\12\uffff\1\2\45\uffff\1\2\53\uffff\1\2",
            "",
            "\1\5\3\uffff\2\2\10\uffff\1\2\1\uffff\6\2\1\uffff\1\2\4\uffff\1\2\6\uffff\3\2\3\uffff\1\2\1\uffff\1\2\1\uffff\13\2\2\uffff\1\2\11\uffff\5\2\23\uffff\1\4\4\uffff\1\2\2\uffff\5\2\5\uffff\6\2\34\uffff\2\2\3\uffff\3\2",
            "\1\5\3\uffff\2\2\10\uffff\1\2\1\uffff\6\2\1\uffff\1\2\4\uffff\1\2\6\uffff\3\2\3\uffff\1\2\1\uffff\1\2\1\uffff\13\2\2\uffff\1\2\11\uffff\5\2\23\uffff\1\4\4\uffff\1\2\2\uffff\5\2\5\uffff\6\2\34\uffff\2\2\3\uffff\3\2",
            ""
    };

    static final short[] dfa_132 = DFA.unpackEncodedString(dfa_132s);
    static final short[] dfa_133 = DFA.unpackEncodedString(dfa_133s);
    static final char[] dfa_134 = DFA.unpackEncodedStringToUnsignedChars(dfa_134s);
    static final char[] dfa_135 = DFA.unpackEncodedStringToUnsignedChars(dfa_135s);
    static final short[] dfa_136 = DFA.unpackEncodedString(dfa_136s);
    static final short[] dfa_137 = DFA.unpackEncodedString(dfa_137s);
    static final short[][] dfa_138 = unpackEncodedStringArray(dfa_138s);

    class DFA169 extends DFA {

        public DFA169(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 169;
            this.eot = dfa_132;
            this.eof = dfa_133;
            this.min = dfa_134;
            this.max = dfa_135;
            this.accept = dfa_136;
            this.special = dfa_137;
            this.transition = dfa_138;
        }
        public String getDescription() {
            return "4761:3: (otherlv_12= 'schedule' ( (lv_schedule_13_0= ruleScheduleObjectReference ) )+ )?";
        }
    }

    class DFA171 extends DFA {

        public DFA171(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 171;
            this.eot = dfa_110;
            this.eof = dfa_110;
            this.min = dfa_111;
            this.max = dfa_112;
            this.accept = dfa_113;
            this.special = dfa_114;
            this.transition = dfa_115;
        }
        public String getDescription() {
            return "()* loopback of 4810:4: ( (lv_declarations_16_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA171_1 = input.LA(1);

                         
                        int index171_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred186_InternalSCTX()) ) {s = 15;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index171_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA171_2 = input.LA(1);

                         
                        int index171_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred186_InternalSCTX()) ) {s = 15;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index171_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA171_7 = input.LA(1);

                         
                        int index171_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred186_InternalSCTX()) ) {s = 15;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index171_7);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 171, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_139s = "\1\3\42\uffff";
    static final String[] dfa_140s = {
            "\1\3\2\uffff\1\3\1\uffff\1\1\12\uffff\1\3\7\uffff\1\17\6\uffff\1\3\7\uffff\1\3\13\uffff\6\17\5\uffff\2\3\1\uffff\1\3\3\uffff\2\17\1\7\3\uffff\2\3\25\uffff\1\2\14\uffff\6\17\34\uffff\2\17\3\uffff\3\17",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_139 = DFA.unpackEncodedString(dfa_139s);
    static final short[][] dfa_140 = unpackEncodedStringArray(dfa_140s);

    class DFA176 extends DFA {

        public DFA176(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 176;
            this.eot = dfa_110;
            this.eof = dfa_139;
            this.min = dfa_111;
            this.max = dfa_112;
            this.accept = dfa_113;
            this.special = dfa_114;
            this.transition = dfa_140;
        }
        public String getDescription() {
            return "()* loopback of 4919:3: ( (lv_declarations_4_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA176_1 = input.LA(1);

                         
                        int index176_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred191_InternalSCTX()) ) {s = 15;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index176_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA176_2 = input.LA(1);

                         
                        int index176_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred191_InternalSCTX()) ) {s = 15;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index176_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA176_7 = input.LA(1);

                         
                        int index176_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred191_InternalSCTX()) ) {s = 15;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index176_7);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 176, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_141s = "\1\147\1\uffff\2\u008a\1\uffff";
    static final String[] dfa_142s = {
            "\1\2\2\uffff\1\1\1\uffff\1\1\12\uffff\2\1\15\uffff\1\1\3\uffff\1\1\3\uffff\1\1\26\uffff\2\1\1\uffff\1\1\5\uffff\1\1\3\uffff\2\1\25\uffff\1\1",
            "",
            "\1\4\30\uffff\1\1\2\uffff\1\1\12\uffff\1\1\23\uffff\1\1\13\uffff\1\1\1\uffff\1\1\22\uffff\1\3\31\uffff\17\1",
            "\1\4\30\uffff\1\1\2\uffff\1\1\36\uffff\1\1\13\uffff\1\1\1\uffff\1\1\22\uffff\1\3\31\uffff\17\1",
            ""
    };
    static final char[] dfa_141 = DFA.unpackEncodedStringToUnsignedChars(dfa_141s);
    static final short[][] dfa_142 = unpackEncodedStringArray(dfa_142s);

    class DFA182 extends DFA {

        public DFA182(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 182;
            this.eot = dfa_66;
            this.eof = dfa_67;
            this.min = dfa_68;
            this.max = dfa_141;
            this.accept = dfa_70;
            this.special = dfa_71;
            this.transition = dfa_142;
        }
        public String getDescription() {
            return "()+ loopback of 5189:4: ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+";
        }
    }

    class DFA186 extends DFA {

        public DFA186(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 186;
            this.eot = dfa_66;
            this.eof = dfa_67;
            this.min = dfa_68;
            this.max = dfa_141;
            this.accept = dfa_70;
            this.special = dfa_71;
            this.transition = dfa_142;
        }
        public String getDescription() {
            return "()+ loopback of 5304:4: ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+";
        }
    }

    class DFA191 extends DFA {

        public DFA191(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 191;
            this.eot = dfa_66;
            this.eof = dfa_67;
            this.min = dfa_68;
            this.max = dfa_141;
            this.accept = dfa_70;
            this.special = dfa_71;
            this.transition = dfa_142;
        }
        public String getDescription() {
            return "()+ loopback of 5466:4: ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+";
        }
    }

    class DFA196 extends DFA {

        public DFA196(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 196;
            this.eot = dfa_27;
            this.eof = dfa_27;
            this.min = dfa_33;
            this.max = dfa_34;
            this.accept = dfa_35;
            this.special = dfa_36;
            this.transition = dfa_37;
        }
        public String getDescription() {
            return "5605:5: (lv_expression_2_1= ruleBoolScheduleExpression | lv_expression_2_2= ruleAtomicExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA196_6 = input.LA(1);

                         
                        int index196_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred214_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index196_6);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA196_7 = input.LA(1);

                         
                        int index196_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred214_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index196_7);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA196_8 = input.LA(1);

                         
                        int index196_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred214_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index196_8);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA196_9 = input.LA(1);

                         
                        int index196_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred214_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index196_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA196_10 = input.LA(1);

                         
                        int index196_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred214_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index196_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA196_11 = input.LA(1);

                         
                        int index196_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred214_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index196_11);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA196_12 = input.LA(1);

                         
                        int index196_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred214_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index196_12);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA196_13 = input.LA(1);

                         
                        int index196_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred214_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index196_13);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA196_14 = input.LA(1);

                         
                        int index196_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred214_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index196_14);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA196_15 = input.LA(1);

                         
                        int index196_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred214_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index196_15);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA196_16 = input.LA(1);

                         
                        int index196_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred214_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index196_16);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 196, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA197 extends DFA {

        public DFA197(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 197;
            this.eot = dfa_110;
            this.eof = dfa_110;
            this.min = dfa_111;
            this.max = dfa_112;
            this.accept = dfa_113;
            this.special = dfa_114;
            this.transition = dfa_115;
        }
        public String getDescription() {
            return "()* loopback of 5644:3: ( (lv_declarations_4_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA197_1 = input.LA(1);

                         
                        int index197_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred215_InternalSCTX()) ) {s = 15;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index197_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA197_2 = input.LA(1);

                         
                        int index197_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred215_InternalSCTX()) ) {s = 15;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index197_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA197_7 = input.LA(1);

                         
                        int index197_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred215_InternalSCTX()) ) {s = 15;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index197_7);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 197, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_143s = "\22\uffff";
    static final String dfa_144s = "\1\5\21\uffff";
    static final String dfa_145s = "\1\5\2\0\17\uffff";
    static final String dfa_146s = "\1\147\2\0\17\uffff";
    static final String dfa_147s = "\3\uffff\1\1\1\2\1\3\14\uffff";
    static final String dfa_148s = "\1\uffff\1\0\1\1\17\uffff}>";
    static final String[] dfa_149s = {
            "\1\5\2\uffff\1\5\1\uffff\1\1\12\uffff\2\5\15\uffff\1\5\3\uffff\1\4\3\uffff\1\5\26\uffff\2\5\1\3\1\5\5\uffff\1\5\3\uffff\2\5\25\uffff\1\2",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_143 = DFA.unpackEncodedString(dfa_143s);
    static final short[] dfa_144 = DFA.unpackEncodedString(dfa_144s);
    static final char[] dfa_145 = DFA.unpackEncodedStringToUnsignedChars(dfa_145s);
    static final char[] dfa_146 = DFA.unpackEncodedStringToUnsignedChars(dfa_146s);
    static final short[] dfa_147 = DFA.unpackEncodedString(dfa_147s);
    static final short[] dfa_148 = DFA.unpackEncodedString(dfa_148s);
    static final short[][] dfa_149 = unpackEncodedStringArray(dfa_149s);

    class DFA199 extends DFA {

        public DFA199(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 199;
            this.eot = dfa_143;
            this.eof = dfa_144;
            this.min = dfa_145;
            this.max = dfa_146;
            this.accept = dfa_147;
            this.special = dfa_148;
            this.transition = dfa_149;
        }
        public String getDescription() {
            return "5686:3: ( ( (lv_else_7_0= ruleElseScope ) ) | ( (lv_semicolon_8_0= ';' ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA199_1 = input.LA(1);

                         
                        int index199_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred217_InternalSCTX()) ) {s = 3;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index199_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA199_2 = input.LA(1);

                         
                        int index199_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred217_InternalSCTX()) ) {s = 3;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index199_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 199, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA201 extends DFA {

        public DFA201(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 201;
            this.eot = dfa_110;
            this.eof = dfa_110;
            this.min = dfa_111;
            this.max = dfa_112;
            this.accept = dfa_113;
            this.special = dfa_114;
            this.transition = dfa_115;
        }
        public String getDescription() {
            return "()* loopback of 5778:3: ( (lv_declarations_4_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA201_1 = input.LA(1);

                         
                        int index201_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred220_InternalSCTX()) ) {s = 15;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index201_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA201_2 = input.LA(1);

                         
                        int index201_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred220_InternalSCTX()) ) {s = 15;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index201_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA201_7 = input.LA(1);

                         
                        int index201_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred220_InternalSCTX()) ) {s = 15;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index201_7);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 201, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_150s = "\20\uffff";
    static final String dfa_151s = "\1\4\17\uffff";
    static final String dfa_152s = "\1\5\3\0\14\uffff";
    static final String dfa_153s = "\1\147\3\0\14\uffff";
    static final String dfa_154s = "\4\uffff\1\2\12\uffff\1\1";
    static final String dfa_155s = "\1\uffff\1\0\1\1\1\2\14\uffff}>";
    static final String[] dfa_156s = {
            "\1\4\2\uffff\1\4\1\uffff\1\1\12\uffff\1\3\16\uffff\1\4\7\uffff\1\4\26\uffff\2\4\1\uffff\1\4\5\uffff\1\4\3\uffff\2\4\25\uffff\1\2",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_150 = DFA.unpackEncodedString(dfa_150s);
    static final short[] dfa_151 = DFA.unpackEncodedString(dfa_151s);
    static final char[] dfa_152 = DFA.unpackEncodedStringToUnsignedChars(dfa_152s);
    static final char[] dfa_153 = DFA.unpackEncodedStringToUnsignedChars(dfa_153s);
    static final short[] dfa_154 = DFA.unpackEncodedString(dfa_154s);
    static final short[] dfa_155 = DFA.unpackEncodedString(dfa_155s);
    static final short[][] dfa_156 = unpackEncodedStringArray(dfa_156s);

    class DFA210 extends DFA {

        public DFA210(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 210;
            this.eot = dfa_150;
            this.eof = dfa_151;
            this.min = dfa_152;
            this.max = dfa_153;
            this.accept = dfa_154;
            this.special = dfa_155;
            this.transition = dfa_156;
        }
        public String getDescription() {
            return "5934:3: ( ( ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' ) | ( (lv_statements_6_0= ruleStatement ) )* )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA210_1 = input.LA(1);

                         
                        int index210_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred228_InternalSCTX()) ) {s = 15;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index210_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA210_2 = input.LA(1);

                         
                        int index210_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred228_InternalSCTX()) ) {s = 15;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index210_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA210_3 = input.LA(1);

                         
                        int index210_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred228_InternalSCTX()) ) {s = 15;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index210_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 210, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA207 extends DFA {

        public DFA207(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 207;
            this.eot = dfa_110;
            this.eof = dfa_110;
            this.min = dfa_111;
            this.max = dfa_112;
            this.accept = dfa_113;
            this.special = dfa_114;
            this.transition = dfa_115;
        }
        public String getDescription() {
            return "()* loopback of 5959:5: ( (lv_declarations_3_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA207_1 = input.LA(1);

                         
                        int index207_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred226_InternalSCTX()) ) {s = 15;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index207_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA207_2 = input.LA(1);

                         
                        int index207_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred226_InternalSCTX()) ) {s = 15;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index207_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA207_7 = input.LA(1);

                         
                        int index207_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred226_InternalSCTX()) ) {s = 15;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index207_7);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 207, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA212 extends DFA {

        public DFA212(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 212;
            this.eot = dfa_110;
            this.eof = dfa_110;
            this.min = dfa_111;
            this.max = dfa_112;
            this.accept = dfa_113;
            this.special = dfa_114;
            this.transition = dfa_115;
        }
        public String getDescription() {
            return "()* loopback of 6075:3: ( (lv_declarations_3_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA212_1 = input.LA(1);

                         
                        int index212_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred231_InternalSCTX()) ) {s = 15;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index212_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA212_2 = input.LA(1);

                         
                        int index212_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred231_InternalSCTX()) ) {s = 15;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index212_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA212_7 = input.LA(1);

                         
                        int index212_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred231_InternalSCTX()) ) {s = 15;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index212_7);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 212, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_157s = "\33\uffff";
    static final String dfa_158s = "\1\4\2\0\30\uffff";
    static final String dfa_159s = "\1\u0094\2\0\30\uffff";
    static final String dfa_160s = "\3\uffff\1\1\6\uffff\1\2\17\uffff\1\3";
    static final String dfa_161s = "\1\uffff\1\0\1\1\30\uffff}>";
    static final String[] dfa_162s = {
            "\6\12\1\1\12\uffff\1\12\11\uffff\1\12\10\uffff\1\32\24\uffff\1\3\16\uffff\1\12\4\uffff\1\12\11\uffff\1\12\7\uffff\1\12\3\uffff\1\2\14\uffff\6\3\27\uffff\4\12",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_157 = DFA.unpackEncodedString(dfa_157s);
    static final char[] dfa_158 = DFA.unpackEncodedStringToUnsignedChars(dfa_158s);
    static final char[] dfa_159 = DFA.unpackEncodedStringToUnsignedChars(dfa_159s);
    static final short[] dfa_160 = DFA.unpackEncodedString(dfa_160s);
    static final short[] dfa_161 = DFA.unpackEncodedString(dfa_161s);
    static final short[][] dfa_162 = unpackEncodedStringArray(dfa_162s);

    class DFA214 extends DFA {

        public DFA214(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 214;
            this.eot = dfa_157;
            this.eof = dfa_157;
            this.min = dfa_158;
            this.max = dfa_159;
            this.accept = dfa_160;
            this.special = dfa_161;
            this.transition = dfa_162;
        }
        public String getDescription() {
            return "6144:3: ( ( (lv_initializationDeclaration_2_0= ruleLoopDeclaration ) ) | ( (lv_initialization_3_0= ruleEffectOrAssignment ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA214_1 = input.LA(1);

                         
                        int index214_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred233_InternalSCTX()) ) {s = 3;}

                        else if ( (synpred234_InternalSCTX()) ) {s = 10;}

                         
                        input.seek(index214_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA214_2 = input.LA(1);

                         
                        int index214_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred233_InternalSCTX()) ) {s = 3;}

                        else if ( (synpred234_InternalSCTX()) ) {s = 10;}

                         
                        input.seek(index214_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 214, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA216 extends DFA {

        public DFA216(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 216;
            this.eot = dfa_110;
            this.eof = dfa_110;
            this.min = dfa_111;
            this.max = dfa_112;
            this.accept = dfa_113;
            this.special = dfa_114;
            this.transition = dfa_115;
        }
        public String getDescription() {
            return "()* loopback of 6239:3: ( (lv_declarations_10_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA216_1 = input.LA(1);

                         
                        int index216_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred236_InternalSCTX()) ) {s = 15;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index216_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA216_2 = input.LA(1);

                         
                        int index216_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred236_InternalSCTX()) ) {s = 15;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index216_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA216_7 = input.LA(1);

                         
                        int index216_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred236_InternalSCTX()) ) {s = 15;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index216_7);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 216, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_163s = "\25\uffff";
    static final String dfa_164s = "\1\4\1\0\23\uffff";
    static final String dfa_165s = "\1\u0094\1\0\23\uffff";
    static final String dfa_166s = "\2\uffff\1\3\20\uffff\1\1\1\2";
    static final String dfa_167s = "\1\uffff\1\0\23\uffff}>";
    static final String[] dfa_168s = {
            "\1\2\1\1\5\2\12\uffff\1\2\11\uffff\1\2\54\uffff\1\2\4\uffff\1\2\11\uffff\1\2\7\uffff\1\2\3\uffff\1\2\51\uffff\4\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_163 = DFA.unpackEncodedString(dfa_163s);
    static final char[] dfa_164 = DFA.unpackEncodedStringToUnsignedChars(dfa_164s);
    static final char[] dfa_165 = DFA.unpackEncodedStringToUnsignedChars(dfa_165s);
    static final short[] dfa_166 = DFA.unpackEncodedString(dfa_166s);
    static final short[] dfa_167 = DFA.unpackEncodedString(dfa_167s);
    static final short[][] dfa_168 = unpackEncodedStringArray(dfa_168s);

    class DFA222 extends DFA {

        public DFA222(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 222;
            this.eot = dfa_163;
            this.eof = dfa_163;
            this.min = dfa_164;
            this.max = dfa_165;
            this.accept = dfa_166;
            this.special = dfa_167;
            this.transition = dfa_168;
        }
        public String getDescription() {
            return "6451:3: ( ( ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) ) | ( ( (lv_reference_3_0= ruleValuedObjectReference ) ) ( (lv_operator_4_0= ruleAssignOperator ) ) ( (lv_expression_5_0= ruleExpression ) ) ) | ( (lv_expression_6_0= ruleExpression ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA222_1 = input.LA(1);

                         
                        int index222_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred242_InternalSCTX()) ) {s = 19;}

                        else if ( (synpred243_InternalSCTX()) ) {s = 20;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index222_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 222, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA223 extends DFA {

        public DFA223(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 223;
            this.eot = dfa_110;
            this.eof = dfa_110;
            this.min = dfa_111;
            this.max = dfa_112;
            this.accept = dfa_113;
            this.special = dfa_114;
            this.transition = dfa_115;
        }
        public String getDescription() {
            return "()* loopback of 6627:3: ( (lv_declarations_5_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA223_1 = input.LA(1);

                         
                        int index223_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred244_InternalSCTX()) ) {s = 15;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index223_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA223_2 = input.LA(1);

                         
                        int index223_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred244_InternalSCTX()) ) {s = 15;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index223_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA223_7 = input.LA(1);

                         
                        int index223_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred244_InternalSCTX()) ) {s = 15;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index223_7);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 223, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA237 extends DFA {

        public DFA237(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 237;
            this.eot = dfa_110;
            this.eof = dfa_110;
            this.min = dfa_111;
            this.max = dfa_112;
            this.accept = dfa_113;
            this.special = dfa_114;
            this.transition = dfa_115;
        }
        public String getDescription() {
            return "()* loopback of 7036:5: ( (lv_declarations_16_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA237_1 = input.LA(1);

                         
                        int index237_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred259_InternalSCTX()) ) {s = 15;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index237_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA237_2 = input.LA(1);

                         
                        int index237_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred259_InternalSCTX()) ) {s = 15;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index237_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA237_7 = input.LA(1);

                         
                        int index237_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred259_InternalSCTX()) ) {s = 15;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index237_7);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 237, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_169s = "\1\2\5\uffff";
    static final String dfa_170s = "\1\5\1\4\1\uffff\2\5\1\uffff";
    static final String dfa_171s = "\1\u009e\1\147\1\uffff\2\u009e\1\uffff";
    static final String[] dfa_172s = {
            "\1\2\4\uffff\1\2\12\uffff\2\2\6\uffff\1\1\32\uffff\6\2\14\uffff\3\2\32\uffff\1\2\14\uffff\6\2\34\uffff\2\2\3\uffff\4\2",
            "\1\2\1\3\4\uffff\1\2\12\uffff\1\2\45\uffff\1\2\53\uffff\1\2",
            "",
            "\1\2\1\5\3\uffff\2\2\10\uffff\1\2\1\uffff\1\2\6\uffff\1\2\4\uffff\1\2\6\uffff\1\2\16\uffff\6\2\14\uffff\5\2\23\uffff\1\4\4\uffff\1\2\14\uffff\6\2\34\uffff\2\2\3\uffff\4\2",
            "\1\2\1\5\3\uffff\2\2\10\uffff\1\2\1\uffff\1\2\6\uffff\1\2\4\uffff\1\2\6\uffff\1\2\16\uffff\6\2\14\uffff\5\2\23\uffff\1\4\4\uffff\1\2\14\uffff\6\2\34\uffff\2\2\3\uffff\4\2",
            ""
    };
    static final short[] dfa_169 = DFA.unpackEncodedString(dfa_169s);
    static final char[] dfa_170 = DFA.unpackEncodedStringToUnsignedChars(dfa_170s);
    static final char[] dfa_171 = DFA.unpackEncodedStringToUnsignedChars(dfa_171s);
    static final short[][] dfa_172 = unpackEncodedStringArray(dfa_172s);

    class DFA247 extends DFA {

        public DFA247(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 247;
            this.eot = dfa_132;
            this.eof = dfa_169;
            this.min = dfa_170;
            this.max = dfa_171;
            this.accept = dfa_136;
            this.special = dfa_137;
            this.transition = dfa_172;
        }
        public String getDescription() {
            return "7265:3: (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )?";
        }
    }
    static final String dfa_173s = "\1\u009e\1\uffff\2\142\1\uffff";
    static final String[] dfa_174s = {
            "\1\2\4\uffff\1\1\12\uffff\2\1\6\uffff\1\1\32\uffff\6\1\14\uffff\3\1\32\uffff\1\1\14\uffff\6\1\34\uffff\2\1\3\uffff\4\1",
            "",
            "\1\4\30\uffff\1\1\41\uffff\1\1\40\uffff\1\3",
            "\1\4\30\uffff\1\1\41\uffff\1\1\40\uffff\1\3",
            ""
    };
    static final char[] dfa_173 = DFA.unpackEncodedStringToUnsignedChars(dfa_173s);
    static final short[][] dfa_174 = unpackEncodedStringArray(dfa_174s);

    class DFA246 extends DFA {

        public DFA246(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 246;
            this.eot = dfa_66;
            this.eof = dfa_67;
            this.min = dfa_68;
            this.max = dfa_173;
            this.accept = dfa_70;
            this.special = dfa_71;
            this.transition = dfa_174;
        }
        public String getDescription() {
            return "()+ loopback of 7270:4: ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+";
        }
    }

    class DFA249 extends DFA {

        public DFA249(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 249;
            this.eot = dfa_110;
            this.eof = dfa_110;
            this.min = dfa_111;
            this.max = dfa_112;
            this.accept = dfa_113;
            this.special = dfa_114;
            this.transition = dfa_115;
        }
        public String getDescription() {
            return "()* loopback of 7314:4: ( (lv_declarations_15_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA249_1 = input.LA(1);

                         
                        int index249_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred270_InternalSCTX()) ) {s = 15;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index249_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA249_2 = input.LA(1);

                         
                        int index249_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred270_InternalSCTX()) ) {s = 15;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index249_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA249_7 = input.LA(1);

                         
                        int index249_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred270_InternalSCTX()) ) {s = 15;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index249_7);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 249, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_175s = "\41\uffff";
    static final String dfa_176s = "\1\3\40\uffff";
    static final String dfa_177s = "\1\5\2\0\4\uffff\1\0\31\uffff";
    static final String dfa_178s = "\1\u009d\2\0\4\uffff\1\0\31\uffff";
    static final String dfa_179s = "\3\uffff\1\2\11\uffff\1\1\23\uffff";
    static final String dfa_180s = "\1\uffff\1\0\1\1\4\uffff\1\2\31\uffff}>";
    static final String[] dfa_181s = {
            "\1\3\2\uffff\1\3\1\uffff\1\1\12\uffff\1\3\7\uffff\1\15\32\uffff\6\15\11\uffff\3\3\2\15\1\7\3\uffff\2\3\25\uffff\1\2\14\uffff\6\15\34\uffff\2\15\3\uffff\3\15",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_175 = DFA.unpackEncodedString(dfa_175s);
    static final short[] dfa_176 = DFA.unpackEncodedString(dfa_176s);
    static final char[] dfa_177 = DFA.unpackEncodedStringToUnsignedChars(dfa_177s);
    static final char[] dfa_178 = DFA.unpackEncodedStringToUnsignedChars(dfa_178s);
    static final short[] dfa_179 = DFA.unpackEncodedString(dfa_179s);
    static final short[] dfa_180 = DFA.unpackEncodedString(dfa_180s);
    static final short[][] dfa_181 = unpackEncodedStringArray(dfa_181s);

    class DFA252 extends DFA {

        public DFA252(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 252;
            this.eot = dfa_175;
            this.eof = dfa_176;
            this.min = dfa_177;
            this.max = dfa_178;
            this.accept = dfa_179;
            this.special = dfa_180;
            this.transition = dfa_181;
        }
        public String getDescription() {
            return "()* loopback of 7386:3: ( (lv_declarations_1_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA252_1 = input.LA(1);

                         
                        int index252_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred273_InternalSCTX()) ) {s = 13;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index252_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA252_2 = input.LA(1);

                         
                        int index252_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred273_InternalSCTX()) ) {s = 13;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index252_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA252_7 = input.LA(1);

                         
                        int index252_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred273_InternalSCTX()) ) {s = 13;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index252_7);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 252, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_182s = {
            "\1\3\2\uffff\1\3\1\uffff\1\1\12\uffff\2\3\6\uffff\1\15\32\uffff\6\15\11\uffff\3\3\2\15\1\7\3\uffff\2\3\25\uffff\1\2\14\uffff\6\15\34\uffff\2\15\3\uffff\3\15",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_182 = unpackEncodedStringArray(dfa_182s);

    class DFA256 extends DFA {

        public DFA256(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 256;
            this.eot = dfa_175;
            this.eof = dfa_175;
            this.min = dfa_177;
            this.max = dfa_178;
            this.accept = dfa_179;
            this.special = dfa_180;
            this.transition = dfa_182;
        }
        public String getDescription() {
            return "()* loopback of 7500:3: ( (lv_declarations_3_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA256_1 = input.LA(1);

                         
                        int index256_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred277_InternalSCTX()) ) {s = 13;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index256_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA256_2 = input.LA(1);

                         
                        int index256_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred277_InternalSCTX()) ) {s = 13;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index256_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA256_7 = input.LA(1);

                         
                        int index256_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred277_InternalSCTX()) ) {s = 13;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index256_7);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 256, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_183s = "\1\5\2\0\10\uffff";
    static final String dfa_184s = "\1\147\2\0\10\uffff";
    static final String dfa_185s = "\3\uffff\1\1\1\uffff\1\2\5\uffff";
    static final String dfa_186s = "\1\uffff\1\0\1\1\10\uffff}>";
    static final String[] dfa_187s = {
            "\1\5\2\uffff\1\5\1\uffff\1\1\12\uffff\1\5\62\uffff\2\3\2\uffff\1\5\3\uffff\2\5\25\uffff\1\2",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_183 = DFA.unpackEncodedStringToUnsignedChars(dfa_183s);
    static final char[] dfa_184 = DFA.unpackEncodedStringToUnsignedChars(dfa_184s);
    static final short[] dfa_185 = DFA.unpackEncodedString(dfa_185s);
    static final short[] dfa_186 = DFA.unpackEncodedString(dfa_186s);
    static final short[][] dfa_187 = unpackEncodedStringArray(dfa_187s);

    class DFA260 extends DFA {

        public DFA260(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 260;
            this.eot = dfa_45;
            this.eof = dfa_45;
            this.min = dfa_183;
            this.max = dfa_184;
            this.accept = dfa_185;
            this.special = dfa_186;
            this.transition = dfa_187;
        }
        public String getDescription() {
            return "7585:2: ( ( ( (lv_expression_0_1= ruleAnnotatedExpression | lv_expression_0_2= ruleAnnotatedJsonExpression ) ) ) | ( (lv_effect_1_0= ruleEffect ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA260_1 = input.LA(1);

                         
                        int index260_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred281_InternalSCTX()) ) {s = 3;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index260_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA260_2 = input.LA(1);

                         
                        int index260_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred281_InternalSCTX()) ) {s = 3;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index260_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 260, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_188s = "\30\uffff";
    static final String dfa_189s = "\1\12\12\0\7\uffff\1\0\5\uffff";
    static final String dfa_190s = "\1\u009d\12\0\7\uffff\1\0\5\uffff";
    static final String dfa_191s = "\13\uffff\1\1\7\uffff\1\2\1\uffff\1\3\1\4\1\uffff";
    static final String dfa_192s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\7\uffff\1\12\5\uffff}>";
    static final String[] dfa_193s = {
            "\1\1\22\uffff\1\25\32\uffff\1\6\1\7\1\10\1\11\1\12\1\22\14\uffff\1\13\2\23\32\uffff\1\2\14\uffff\6\13\34\uffff\2\26\3\uffff\1\3\1\4\1\5",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_188 = DFA.unpackEncodedString(dfa_188s);
    static final char[] dfa_189 = DFA.unpackEncodedStringToUnsignedChars(dfa_189s);
    static final char[] dfa_190 = DFA.unpackEncodedStringToUnsignedChars(dfa_190s);
    static final short[] dfa_191 = DFA.unpackEncodedString(dfa_191s);
    static final short[] dfa_192 = DFA.unpackEncodedString(dfa_192s);
    static final short[][] dfa_193 = unpackEncodedStringArray(dfa_193s);

    class DFA263 extends DFA {

        public DFA263(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 263;
            this.eot = dfa_188;
            this.eof = dfa_188;
            this.min = dfa_189;
            this.max = dfa_190;
            this.accept = dfa_191;
            this.special = dfa_192;
            this.transition = dfa_193;
        }
        public String getDescription() {
            return "7783:2: (this_VariableDeclaration_0= ruleVariableDeclaration | this_ReferenceDeclaration_1= ruleReferenceDeclaration | this_ScheduleDeclaration_2= ruleScheduleDeclaration | this_ClassDeclaration_3= ruleClassDeclaration )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA263_1 = input.LA(1);

                         
                        int index263_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred284_InternalSCTX()) ) {s = 11;}

                        else if ( (synpred285_InternalSCTX()) ) {s = 19;}

                        else if ( (synpred286_InternalSCTX()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index263_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA263_2 = input.LA(1);

                         
                        int index263_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred284_InternalSCTX()) ) {s = 11;}

                        else if ( (synpred285_InternalSCTX()) ) {s = 19;}

                        else if ( (synpred286_InternalSCTX()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index263_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA263_3 = input.LA(1);

                         
                        int index263_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred284_InternalSCTX()) ) {s = 11;}

                        else if ( (synpred285_InternalSCTX()) ) {s = 19;}

                        else if ( (synpred286_InternalSCTX()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index263_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA263_4 = input.LA(1);

                         
                        int index263_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred284_InternalSCTX()) ) {s = 11;}

                        else if ( (synpred285_InternalSCTX()) ) {s = 19;}

                        else if ( (synpred286_InternalSCTX()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index263_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA263_5 = input.LA(1);

                         
                        int index263_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred284_InternalSCTX()) ) {s = 11;}

                        else if ( (synpred285_InternalSCTX()) ) {s = 19;}

                        else if ( (synpred286_InternalSCTX()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index263_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA263_6 = input.LA(1);

                         
                        int index263_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred284_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index263_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA263_7 = input.LA(1);

                         
                        int index263_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred284_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index263_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA263_8 = input.LA(1);

                         
                        int index263_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred284_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index263_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA263_9 = input.LA(1);

                         
                        int index263_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred284_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index263_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA263_10 = input.LA(1);

                         
                        int index263_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred284_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index263_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA263_18 = input.LA(1);

                         
                        int index263_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred284_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index263_18);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 263, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA264 extends DFA {

        public DFA264(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 264;
            this.eot = dfa_188;
            this.eof = dfa_188;
            this.min = dfa_189;
            this.max = dfa_190;
            this.accept = dfa_191;
            this.special = dfa_192;
            this.transition = dfa_193;
        }
        public String getDescription() {
            return "7849:2: (this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon | this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon | this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon | this_ClassDeclarationWOSemicolon_3= ruleClassDeclarationWOSemicolon )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA264_1 = input.LA(1);

                         
                        int index264_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred287_InternalSCTX()) ) {s = 11;}

                        else if ( (synpred288_InternalSCTX()) ) {s = 19;}

                        else if ( (synpred289_InternalSCTX()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index264_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA264_2 = input.LA(1);

                         
                        int index264_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred287_InternalSCTX()) ) {s = 11;}

                        else if ( (synpred288_InternalSCTX()) ) {s = 19;}

                        else if ( (synpred289_InternalSCTX()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index264_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA264_3 = input.LA(1);

                         
                        int index264_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred287_InternalSCTX()) ) {s = 11;}

                        else if ( (synpred288_InternalSCTX()) ) {s = 19;}

                        else if ( (synpred289_InternalSCTX()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index264_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA264_4 = input.LA(1);

                         
                        int index264_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred287_InternalSCTX()) ) {s = 11;}

                        else if ( (synpred288_InternalSCTX()) ) {s = 19;}

                        else if ( (synpred289_InternalSCTX()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index264_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA264_5 = input.LA(1);

                         
                        int index264_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred287_InternalSCTX()) ) {s = 11;}

                        else if ( (synpred288_InternalSCTX()) ) {s = 19;}

                        else if ( (synpred289_InternalSCTX()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index264_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA264_6 = input.LA(1);

                         
                        int index264_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred287_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index264_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA264_7 = input.LA(1);

                         
                        int index264_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred287_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index264_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA264_8 = input.LA(1);

                         
                        int index264_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred287_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index264_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA264_9 = input.LA(1);

                         
                        int index264_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred287_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index264_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA264_10 = input.LA(1);

                         
                        int index264_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred287_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index264_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA264_18 = input.LA(1);

                         
                        int index264_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred287_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index264_18);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 264, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_194s = "\100\uffff";
    static final String dfa_195s = "\1\1\77\uffff";
    static final String dfa_196s = "\1\5\1\uffff\1\0\75\uffff";
    static final String dfa_197s = "\1\u009e\1\uffff\1\0\75\uffff";
    static final String dfa_198s = "\1\uffff\1\2\75\uffff\1\1";
    static final String dfa_199s = "\2\uffff\1\0\75\uffff}>";
    static final String[] dfa_200s = {
            "\1\1\2\uffff\1\1\1\uffff\2\1\10\uffff\1\2\7\1\1\uffff\1\1\2\uffff\1\1\3\uffff\1\1\5\uffff\3\1\2\uffff\1\1\1\uffff\1\1\1\uffff\13\1\2\uffff\1\1\2\uffff\2\1\1\uffff\7\1\3\uffff\2\1\25\uffff\1\1\2\uffff\5\1\5\uffff\6\1\34\uffff\2\1\3\uffff\4\1",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_194 = DFA.unpackEncodedString(dfa_194s);
    static final short[] dfa_195 = DFA.unpackEncodedString(dfa_195s);
    static final char[] dfa_196 = DFA.unpackEncodedStringToUnsignedChars(dfa_196s);
    static final char[] dfa_197 = DFA.unpackEncodedStringToUnsignedChars(dfa_197s);
    static final short[] dfa_198 = DFA.unpackEncodedString(dfa_198s);
    static final short[] dfa_199 = DFA.unpackEncodedString(dfa_199s);
    static final short[][] dfa_200 = unpackEncodedStringArray(dfa_200s);

    class DFA285 extends DFA {

        public DFA285(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 285;
            this.eot = dfa_194;
            this.eof = dfa_195;
            this.min = dfa_196;
            this.max = dfa_197;
            this.accept = dfa_198;
            this.special = dfa_199;
            this.transition = dfa_200;
        }
        public String getDescription() {
            return "()* loopback of 8421:3: (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA285_2 = input.LA(1);

                         
                        int index285_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred312_InternalSCTX()) ) {s = 63;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index285_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 285, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_201s = "\1\5\5\0\7\uffff\4\0\11\uffff";
    static final String dfa_202s = "\1\u009e\5\0\7\uffff\4\0\11\uffff";
    static final String dfa_203s = "\6\uffff\1\1\21\uffff\1\2\1\uffff";
    static final String dfa_204s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\7\uffff\1\5\1\6\1\7\1\10\11\uffff}>";
    static final String[] dfa_205s = {
            "\1\30\4\uffff\1\1\22\uffff\1\6\32\uffff\6\6\14\uffff\3\6\32\uffff\1\2\14\uffff\1\6\1\15\1\16\1\17\1\20\1\6\34\uffff\2\6\3\uffff\1\3\1\4\1\5\1\30",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_201 = DFA.unpackEncodedStringToUnsignedChars(dfa_201s);
    static final char[] dfa_202 = DFA.unpackEncodedStringToUnsignedChars(dfa_202s);
    static final short[] dfa_203 = DFA.unpackEncodedString(dfa_203s);
    static final short[] dfa_204 = DFA.unpackEncodedString(dfa_204s);
    static final short[][] dfa_205 = unpackEncodedStringArray(dfa_205s);

    class DFA303 extends DFA {

        public DFA303(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 303;
            this.eot = dfa_73;
            this.eof = dfa_73;
            this.min = dfa_201;
            this.max = dfa_202;
            this.accept = dfa_203;
            this.special = dfa_204;
            this.transition = dfa_205;
        }
        public String getDescription() {
            return "8840:2: (this_Declaration_0= ruleDeclaration | this_MethodDeclaration_1= ruleMethodDeclaration )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA303_1 = input.LA(1);

                         
                        int index303_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred330_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index303_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA303_2 = input.LA(1);

                         
                        int index303_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred330_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index303_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA303_3 = input.LA(1);

                         
                        int index303_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred330_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index303_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA303_4 = input.LA(1);

                         
                        int index303_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred330_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index303_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA303_5 = input.LA(1);

                         
                        int index303_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred330_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index303_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA303_13 = input.LA(1);

                         
                        int index303_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred330_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index303_13);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA303_14 = input.LA(1);

                         
                        int index303_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred330_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index303_14);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA303_15 = input.LA(1);

                         
                        int index303_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred330_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index303_15);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA303_16 = input.LA(1);

                         
                        int index303_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred330_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index303_16);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 303, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA304 extends DFA {

        public DFA304(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 304;
            this.eot = dfa_73;
            this.eof = dfa_73;
            this.min = dfa_201;
            this.max = dfa_202;
            this.accept = dfa_203;
            this.special = dfa_204;
            this.transition = dfa_205;
        }
        public String getDescription() {
            return "8882:2: (this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon | this_MethodDeclarationWOSemicolon_1= ruleMethodDeclarationWOSemicolon )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA304_1 = input.LA(1);

                         
                        int index304_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred331_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index304_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA304_2 = input.LA(1);

                         
                        int index304_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred331_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index304_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA304_3 = input.LA(1);

                         
                        int index304_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred331_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index304_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA304_4 = input.LA(1);

                         
                        int index304_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred331_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index304_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA304_5 = input.LA(1);

                         
                        int index304_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred331_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index304_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA304_13 = input.LA(1);

                         
                        int index304_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred331_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index304_13);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA304_14 = input.LA(1);

                         
                        int index304_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred331_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index304_14);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA304_15 = input.LA(1);

                         
                        int index304_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred331_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index304_15);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA304_16 = input.LA(1);

                         
                        int index304_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred331_InternalSCTX()) ) {s = 6;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index304_16);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 304, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_206s = "\1\5\3\0\11\uffff";
    static final String dfa_207s = "\1\147\3\0\11\uffff";
    static final String dfa_208s = "\4\uffff\1\4\1\6\1\7\1\10\1\1\1\2\1\3\1\5\1\11";
    static final String dfa_209s = "\1\uffff\1\0\1\1\1\2\11\uffff}>";
    static final String[] dfa_210s = {
            "\1\3\2\uffff\1\4\1\uffff\1\1\101\uffff\1\5\3\uffff\1\6\1\7\25\uffff\1\2",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_206 = DFA.unpackEncodedStringToUnsignedChars(dfa_206s);
    static final char[] dfa_207 = DFA.unpackEncodedStringToUnsignedChars(dfa_207s);
    static final short[] dfa_208 = DFA.unpackEncodedString(dfa_208s);
    static final short[] dfa_209 = DFA.unpackEncodedString(dfa_209s);
    static final short[][] dfa_210 = unpackEncodedStringArray(dfa_210s);

    class DFA341 extends DFA {

        public DFA341(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 341;
            this.eot = dfa_59;
            this.eof = dfa_59;
            this.min = dfa_206;
            this.max = dfa_207;
            this.accept = dfa_208;
            this.special = dfa_209;
            this.transition = dfa_210;
        }
        public String getDescription() {
            return "10089:2: (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | this_ValuedEmission_2= ruleValuedEmission | this_HostcodeEffect_3= ruleHostcodeEffect | this_ReferenceCallEffect_4= ruleReferenceCallEffect | this_FunctionCallEffect_5= ruleFunctionCallEffect | this_PrintCallEffect_6= rulePrintCallEffect | this_RandomizeCallEffect_7= ruleRandomizeCallEffect | this_PureEmission_8= rulePureEmission )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA341_1 = input.LA(1);

                         
                        int index341_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred368_InternalSCTX()) ) {s = 8;}

                        else if ( (synpred369_InternalSCTX()) ) {s = 9;}

                        else if ( (synpred370_InternalSCTX()) ) {s = 10;}

                        else if ( (synpred371_InternalSCTX()) ) {s = 4;}

                        else if ( (synpred372_InternalSCTX()) ) {s = 11;}

                        else if ( (synpred373_InternalSCTX()) ) {s = 5;}

                        else if ( (synpred374_InternalSCTX()) ) {s = 6;}

                        else if ( (synpred375_InternalSCTX()) ) {s = 7;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index341_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA341_2 = input.LA(1);

                         
                        int index341_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred368_InternalSCTX()) ) {s = 8;}

                        else if ( (synpred369_InternalSCTX()) ) {s = 9;}

                        else if ( (synpred370_InternalSCTX()) ) {s = 10;}

                        else if ( (synpred371_InternalSCTX()) ) {s = 4;}

                        else if ( (synpred372_InternalSCTX()) ) {s = 11;}

                        else if ( (synpred373_InternalSCTX()) ) {s = 5;}

                        else if ( (synpred374_InternalSCTX()) ) {s = 6;}

                        else if ( (synpred375_InternalSCTX()) ) {s = 7;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index341_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA341_3 = input.LA(1);

                         
                        int index341_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred368_InternalSCTX()) ) {s = 8;}

                        else if ( (synpred369_InternalSCTX()) ) {s = 9;}

                        else if ( (synpred370_InternalSCTX()) ) {s = 10;}

                        else if ( (synpred372_InternalSCTX()) ) {s = 11;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index341_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 341, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_211s = "\1\1\1\uffff\2\1\1\uffff";
    static final String dfa_212s = "\1\5\1\uffff\2\5\1\uffff";
    static final String dfa_213s = "\1\156\1\uffff\2\u008a\1\uffff";
    static final String[] dfa_214s = {
            "\1\2\2\uffff\1\1\1\uffff\1\1\11\uffff\10\1\14\uffff\4\1\3\uffff\1\1\1\uffff\1\1\1\uffff\5\1\7\uffff\1\1\7\uffff\3\1\2\uffff\1\1\3\uffff\2\1\25\uffff\10\1",
            "",
            "\1\1\1\4\1\uffff\1\1\1\uffff\1\1\12\uffff\2\1\6\uffff\1\1\1\uffff\1\1\2\uffff\1\1\36\uffff\1\1\5\uffff\3\1\2\uffff\2\1\1\uffff\3\1\20\uffff\1\3\4\uffff\1\1\24\uffff\17\1",
            "\1\1\1\4\1\uffff\1\1\1\uffff\1\1\12\uffff\2\1\6\uffff\1\1\1\uffff\1\1\2\uffff\1\1\36\uffff\1\1\5\uffff\3\1\2\uffff\2\1\1\uffff\3\1\20\uffff\1\3\4\uffff\1\1\24\uffff\17\1",
            ""
    };
    static final short[] dfa_211 = DFA.unpackEncodedString(dfa_211s);
    static final char[] dfa_212 = DFA.unpackEncodedStringToUnsignedChars(dfa_212s);
    static final char[] dfa_213 = DFA.unpackEncodedStringToUnsignedChars(dfa_213s);
    static final short[][] dfa_214 = unpackEncodedStringArray(dfa_214s);

    class DFA343 extends DFA {

        public DFA343(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 343;
            this.eot = dfa_66;
            this.eof = dfa_211;
            this.min = dfa_212;
            this.max = dfa_213;
            this.accept = dfa_70;
            this.special = dfa_71;
            this.transition = dfa_214;
        }
        public String getDescription() {
            return "()+ loopback of 10259:4: ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+";
        }
    }
    static final String[] dfa_215s = {
            "\1\2\2\uffff\1\1\1\uffff\1\1\12\uffff\7\1\14\uffff\4\1\3\uffff\1\1\1\uffff\1\1\1\uffff\5\1\7\uffff\1\1\7\uffff\3\1\2\uffff\1\1\3\uffff\2\1\25\uffff\10\1",
            "",
            "\1\1\1\4\1\uffff\1\1\1\uffff\1\1\12\uffff\2\1\6\uffff\1\1\1\uffff\1\1\2\uffff\1\1\36\uffff\1\1\5\uffff\3\1\2\uffff\2\1\1\uffff\3\1\20\uffff\1\3\4\uffff\1\1\24\uffff\17\1",
            "\1\1\1\4\1\uffff\1\1\1\uffff\1\1\12\uffff\2\1\6\uffff\1\1\1\uffff\1\1\2\uffff\1\1\36\uffff\1\1\5\uffff\3\1\2\uffff\2\1\1\uffff\3\1\20\uffff\1\3\4\uffff\1\1\24\uffff\17\1",
            ""
    };
    static final short[][] dfa_215 = unpackEncodedStringArray(dfa_215s);

    class DFA346 extends DFA {

        public DFA346(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 346;
            this.eot = dfa_66;
            this.eof = dfa_211;
            this.min = dfa_212;
            this.max = dfa_213;
            this.accept = dfa_70;
            this.special = dfa_71;
            this.transition = dfa_215;
        }
        public String getDescription() {
            return "()+ loopback of 10368:4: ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+";
        }
    }

    class DFA349 extends DFA {

        public DFA349(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 349;
            this.eot = dfa_66;
            this.eof = dfa_211;
            this.min = dfa_212;
            this.max = dfa_213;
            this.accept = dfa_70;
            this.special = dfa_71;
            this.transition = dfa_215;
        }
        public String getDescription() {
            return "()+ loopback of 10488:4: ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+";
        }
    }

    class DFA352 extends DFA {

        public DFA352(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 352;
            this.eot = dfa_66;
            this.eof = dfa_211;
            this.min = dfa_212;
            this.max = dfa_213;
            this.accept = dfa_70;
            this.special = dfa_71;
            this.transition = dfa_215;
        }
        public String getDescription() {
            return "()+ loopback of 10589:4: ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+";
        }
    }

    class DFA360 extends DFA {

        public DFA360(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 360;
            this.eot = dfa_66;
            this.eof = dfa_211;
            this.min = dfa_212;
            this.max = dfa_213;
            this.accept = dfa_70;
            this.special = dfa_71;
            this.transition = dfa_215;
        }
        public String getDescription() {
            return "()+ loopback of 10842:4: ( (lv_schedule_14_0= ruleScheduleObjectReference ) )+";
        }
    }

    class DFA367 extends DFA {

        public DFA367(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 367;
            this.eot = dfa_66;
            this.eof = dfa_211;
            this.min = dfa_212;
            this.max = dfa_213;
            this.accept = dfa_70;
            this.special = dfa_71;
            this.transition = dfa_215;
        }
        public String getDescription() {
            return "()+ loopback of 11086:4: ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+";
        }
    }
    static final String dfa_216s = "\1\4\20\0\3\uffff";
    static final String dfa_217s = "\1\u0094\20\0\3\uffff";
    static final String dfa_218s = "\21\uffff\1\1\1\uffff\1\2";
    static final String dfa_219s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\3\uffff}>";
    static final String[] dfa_220s = {
            "\1\4\1\10\1\2\1\3\1\20\1\7\1\16\12\uffff\1\5\11\uffff\1\6\54\uffff\1\11\4\uffff\1\13\11\uffff\1\1\7\uffff\1\12\3\uffff\1\17\51\uffff\1\14\2\21\1\15",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };
    static final char[] dfa_216 = DFA.unpackEncodedStringToUnsignedChars(dfa_216s);
    static final char[] dfa_217 = DFA.unpackEncodedStringToUnsignedChars(dfa_217s);
    static final short[] dfa_218 = DFA.unpackEncodedString(dfa_218s);
    static final short[] dfa_219 = DFA.unpackEncodedString(dfa_219s);
    static final short[][] dfa_220 = unpackEncodedStringArray(dfa_220s);

    class DFA372 extends DFA {

        public DFA372(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 372;
            this.eot = dfa_27;
            this.eof = dfa_27;
            this.min = dfa_216;
            this.max = dfa_217;
            this.accept = dfa_218;
            this.special = dfa_219;
            this.transition = dfa_220;
        }
        public String getDescription() {
            return "11237:2: (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA372_1 = input.LA(1);

                         
                        int index372_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred406_InternalSCTX()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index372_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA372_2 = input.LA(1);

                         
                        int index372_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred406_InternalSCTX()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index372_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA372_3 = input.LA(1);

                         
                        int index372_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred406_InternalSCTX()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index372_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA372_4 = input.LA(1);

                         
                        int index372_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred406_InternalSCTX()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index372_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA372_5 = input.LA(1);

                         
                        int index372_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred406_InternalSCTX()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index372_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA372_6 = input.LA(1);

                         
                        int index372_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred406_InternalSCTX()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index372_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA372_7 = input.LA(1);

                         
                        int index372_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred406_InternalSCTX()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index372_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA372_8 = input.LA(1);

                         
                        int index372_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred406_InternalSCTX()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index372_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA372_9 = input.LA(1);

                         
                        int index372_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred406_InternalSCTX()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index372_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA372_10 = input.LA(1);

                         
                        int index372_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred406_InternalSCTX()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index372_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA372_11 = input.LA(1);

                         
                        int index372_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred406_InternalSCTX()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index372_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA372_12 = input.LA(1);

                         
                        int index372_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred406_InternalSCTX()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index372_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA372_13 = input.LA(1);

                         
                        int index372_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred406_InternalSCTX()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index372_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA372_14 = input.LA(1);

                         
                        int index372_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred406_InternalSCTX()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index372_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA372_15 = input.LA(1);

                         
                        int index372_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred406_InternalSCTX()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index372_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA372_16 = input.LA(1);

                         
                        int index372_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred406_InternalSCTX()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index372_16);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 372, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_221s = "\23\uffff";
    static final String dfa_222s = "\1\4\5\uffff\13\0\2\uffff";
    static final String dfa_223s = "\1\u0094\5\uffff\13\0\2\uffff";
    static final String dfa_224s = "\1\uffff\1\1\17\uffff\1\2\1\uffff";
    static final String dfa_225s = "\6\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\2\uffff}>";
    static final String[] dfa_226s = {
            "\1\1\1\10\2\1\1\20\1\7\1\16\12\uffff\1\1\11\uffff\1\6\54\uffff\1\11\4\uffff\1\13\11\uffff\1\1\7\uffff\1\12\3\uffff\1\17\51\uffff\1\14\2\21\1\15",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_221 = DFA.unpackEncodedString(dfa_221s);
    static final char[] dfa_222 = DFA.unpackEncodedStringToUnsignedChars(dfa_222s);
    static final char[] dfa_223 = DFA.unpackEncodedStringToUnsignedChars(dfa_223s);
    static final short[] dfa_224 = DFA.unpackEncodedString(dfa_224s);
    static final short[] dfa_225 = DFA.unpackEncodedString(dfa_225s);
    static final short[][] dfa_226 = unpackEncodedStringArray(dfa_226s);

    class DFA384 extends DFA {

        public DFA384(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 384;
            this.eot = dfa_221;
            this.eof = dfa_221;
            this.min = dfa_222;
            this.max = dfa_223;
            this.accept = dfa_224;
            this.special = dfa_225;
            this.transition = dfa_226;
        }
        public String getDescription() {
            return "11922:2: (this_ValuedExpression_0= ruleValuedExpression | this_NotExpression_1= ruleNotExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA384_6 = input.LA(1);

                         
                        int index384_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred418_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index384_6);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA384_7 = input.LA(1);

                         
                        int index384_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred418_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index384_7);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA384_8 = input.LA(1);

                         
                        int index384_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred418_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index384_8);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA384_9 = input.LA(1);

                         
                        int index384_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred418_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index384_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA384_10 = input.LA(1);

                         
                        int index384_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred418_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index384_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA384_11 = input.LA(1);

                         
                        int index384_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred418_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index384_11);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA384_12 = input.LA(1);

                         
                        int index384_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred418_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index384_12);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA384_13 = input.LA(1);

                         
                        int index384_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred418_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index384_13);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA384_14 = input.LA(1);

                         
                        int index384_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred418_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index384_14);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA384_15 = input.LA(1);

                         
                        int index384_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred418_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index384_15);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA384_16 = input.LA(1);

                         
                        int index384_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred418_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index384_16);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 384, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_227s = "\134\uffff";
    static final String dfa_228s = "\1\1\133\uffff";
    static final String dfa_229s = "\1\5\127\uffff\1\0\3\uffff";
    static final String dfa_230s = "\1\u009e\127\uffff\1\0\3\uffff";
    static final String dfa_231s = "\1\uffff\1\2\131\uffff\1\1";
    static final String dfa_232s = "\130\uffff\1\0\3\uffff}>";
    static final String[] dfa_233s = {
            "\1\1\2\uffff\1\1\1\uffff\2\1\10\uffff\10\1\1\uffff\1\1\2\uffff\2\1\1\uffff\15\1\1\uffff\15\1\1\uffff\2\1\2\uffff\2\1\1\uffff\7\1\1\uffff\1\1\1\uffff\7\1\1\130\2\1\15\uffff\10\1\5\uffff\6\1\21\uffff\6\1\5\uffff\2\1\3\uffff\4\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_227 = DFA.unpackEncodedString(dfa_227s);
    static final short[] dfa_228 = DFA.unpackEncodedString(dfa_228s);
    static final char[] dfa_229 = DFA.unpackEncodedStringToUnsignedChars(dfa_229s);
    static final char[] dfa_230 = DFA.unpackEncodedStringToUnsignedChars(dfa_230s);
    static final short[] dfa_231 = DFA.unpackEncodedString(dfa_231s);
    static final short[] dfa_232 = DFA.unpackEncodedString(dfa_232s);
    static final short[][] dfa_233 = unpackEncodedStringArray(dfa_233s);

    class DFA387 extends DFA {

        public DFA387(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 387;
            this.eot = dfa_227;
            this.eof = dfa_228;
            this.min = dfa_229;
            this.max = dfa_230;
            this.accept = dfa_231;
            this.special = dfa_232;
            this.transition = dfa_233;
        }
        public String getDescription() {
            return "()* loopback of 12216:5: (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA387_88 = input.LA(1);

                         
                        int index387_88 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred421_InternalSCTX()) ) {s = 91;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index387_88);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 387, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_234s = "\1\5\130\uffff\1\0\2\uffff";
    static final String dfa_235s = "\1\u009e\130\uffff\1\0\2\uffff";
    static final String dfa_236s = "\131\uffff\1\0\2\uffff}>";
    static final String[] dfa_237s = {
            "\1\1\2\uffff\1\1\1\uffff\2\1\10\uffff\10\1\1\uffff\1\1\2\uffff\2\1\1\uffff\15\1\1\uffff\15\1\1\uffff\2\1\2\uffff\2\1\1\uffff\7\1\1\uffff\1\1\1\uffff\10\1\1\131\1\1\15\uffff\10\1\5\uffff\6\1\21\uffff\6\1\5\uffff\2\1\3\uffff\4\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            ""
    };
    static final char[] dfa_234 = DFA.unpackEncodedStringToUnsignedChars(dfa_234s);
    static final char[] dfa_235 = DFA.unpackEncodedStringToUnsignedChars(dfa_235s);
    static final short[] dfa_236 = DFA.unpackEncodedString(dfa_236s);
    static final short[][] dfa_237 = unpackEncodedStringArray(dfa_237s);

    class DFA388 extends DFA {

        public DFA388(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 388;
            this.eot = dfa_227;
            this.eof = dfa_228;
            this.min = dfa_234;
            this.max = dfa_235;
            this.accept = dfa_231;
            this.special = dfa_236;
            this.transition = dfa_237;
        }
        public String getDescription() {
            return "()* loopback of 12292:5: (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleSumExpression ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA388_89 = input.LA(1);

                         
                        int index388_89 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred423_InternalSCTX()) ) {s = 91;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index388_89);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 388, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_238s = "\1\5\131\uffff\1\0\1\uffff";
    static final String dfa_239s = "\1\u009e\131\uffff\1\0\1\uffff";
    static final String dfa_240s = "\132\uffff\1\0\1\uffff}>";
    static final String[] dfa_241s = {
            "\1\1\2\uffff\1\1\1\uffff\2\1\10\uffff\10\1\1\uffff\1\1\2\uffff\2\1\1\uffff\15\1\1\uffff\15\1\1\uffff\2\1\2\uffff\2\1\1\uffff\7\1\1\uffff\1\1\1\uffff\11\1\1\132\15\uffff\10\1\5\uffff\6\1\21\uffff\6\1\5\uffff\2\1\3\uffff\4\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            ""
    };
    static final char[] dfa_238 = DFA.unpackEncodedStringToUnsignedChars(dfa_238s);
    static final char[] dfa_239 = DFA.unpackEncodedStringToUnsignedChars(dfa_239s);
    static final short[] dfa_240 = DFA.unpackEncodedString(dfa_240s);
    static final short[][] dfa_241 = unpackEncodedStringArray(dfa_241s);

    class DFA389 extends DFA {

        public DFA389(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 389;
            this.eot = dfa_227;
            this.eof = dfa_228;
            this.min = dfa_238;
            this.max = dfa_239;
            this.accept = dfa_231;
            this.special = dfa_240;
            this.transition = dfa_241;
        }
        public String getDescription() {
            return "()* loopback of 12368:5: (otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleSumExpression ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA389_90 = input.LA(1);

                         
                        int index389_90 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred425_InternalSCTX()) ) {s = 91;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index389_90);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 389, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_242s = "\136\uffff";
    static final String dfa_243s = "\1\1\135\uffff";
    static final String dfa_244s = "\1\5\132\uffff\1\0\2\uffff";
    static final String dfa_245s = "\1\u009e\132\uffff\1\0\2\uffff";
    static final String dfa_246s = "\1\uffff\1\2\133\uffff\1\1";
    static final String dfa_247s = "\133\uffff\1\0\2\uffff}>";
    static final String[] dfa_248s = {
            "\1\1\2\uffff\1\1\1\uffff\2\1\10\uffff\10\1\1\uffff\1\1\2\uffff\2\1\1\uffff\15\1\1\uffff\15\1\1\uffff\2\1\2\uffff\2\1\1\uffff\7\1\1\uffff\1\1\1\uffff\12\1\1\133\1\1\13\uffff\10\1\5\uffff\6\1\21\uffff\6\1\5\uffff\2\1\3\uffff\4\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_242 = DFA.unpackEncodedString(dfa_242s);
    static final short[] dfa_243 = DFA.unpackEncodedString(dfa_243s);
    static final char[] dfa_244 = DFA.unpackEncodedStringToUnsignedChars(dfa_244s);
    static final char[] dfa_245 = DFA.unpackEncodedStringToUnsignedChars(dfa_245s);
    static final short[] dfa_246 = DFA.unpackEncodedString(dfa_246s);
    static final short[] dfa_247 = DFA.unpackEncodedString(dfa_247s);
    static final short[][] dfa_248 = unpackEncodedStringArray(dfa_248s);

    class DFA395 extends DFA {

        public DFA395(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 395;
            this.eot = dfa_242;
            this.eof = dfa_243;
            this.min = dfa_244;
            this.max = dfa_245;
            this.accept = dfa_246;
            this.special = dfa_247;
            this.transition = dfa_248;
        }
        public String getDescription() {
            return "()* loopback of 12689:5: (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA395_91 = input.LA(1);

                         
                        int index395_91 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred431_InternalSCTX()) ) {s = 93;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index395_91);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 395, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_249s = "\1\5\133\uffff\1\0\1\uffff";
    static final String dfa_250s = "\1\u009e\133\uffff\1\0\1\uffff";
    static final String dfa_251s = "\134\uffff\1\0\1\uffff}>";
    static final String[] dfa_252s = {
            "\1\1\2\uffff\1\1\1\uffff\2\1\10\uffff\10\1\1\uffff\1\1\2\uffff\2\1\1\uffff\15\1\1\uffff\15\1\1\uffff\2\1\2\uffff\2\1\1\uffff\7\1\1\uffff\1\1\1\uffff\13\1\1\134\13\uffff\10\1\5\uffff\6\1\21\uffff\6\1\5\uffff\2\1\3\uffff\4\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            ""
    };
    static final char[] dfa_249 = DFA.unpackEncodedStringToUnsignedChars(dfa_249s);
    static final char[] dfa_250 = DFA.unpackEncodedStringToUnsignedChars(dfa_250s);
    static final short[] dfa_251 = DFA.unpackEncodedString(dfa_251s);
    static final short[][] dfa_252 = unpackEncodedStringArray(dfa_252s);

    class DFA396 extends DFA {

        public DFA396(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 396;
            this.eot = dfa_242;
            this.eof = dfa_243;
            this.min = dfa_249;
            this.max = dfa_250;
            this.accept = dfa_246;
            this.special = dfa_251;
            this.transition = dfa_252;
        }
        public String getDescription() {
            return "()* loopback of 12765:5: (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA396_92 = input.LA(1);

                         
                        int index396_92 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred433_InternalSCTX()) ) {s = 93;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index396_92);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 396, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_253s = "\141\uffff";
    static final String dfa_254s = "\1\1\140\uffff";
    static final String dfa_255s = "\1\5\134\uffff\1\0\3\uffff";
    static final String dfa_256s = "\1\u009e\134\uffff\1\0\3\uffff";
    static final String dfa_257s = "\1\uffff\1\2\136\uffff\1\1";
    static final String dfa_258s = "\135\uffff\1\0\3\uffff}>";
    static final String[] dfa_259s = {
            "\1\1\2\uffff\1\1\1\uffff\2\1\10\uffff\10\1\1\uffff\1\1\2\uffff\2\1\1\uffff\15\1\1\uffff\15\1\1\uffff\2\1\2\uffff\2\1\1\uffff\7\1\1\uffff\1\1\1\uffff\14\1\1\135\2\1\10\uffff\10\1\5\uffff\6\1\21\uffff\6\1\5\uffff\2\1\3\uffff\4\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_253 = DFA.unpackEncodedString(dfa_253s);
    static final short[] dfa_254 = DFA.unpackEncodedString(dfa_254s);
    static final char[] dfa_255 = DFA.unpackEncodedStringToUnsignedChars(dfa_255s);
    static final char[] dfa_256 = DFA.unpackEncodedStringToUnsignedChars(dfa_256s);
    static final short[] dfa_257 = DFA.unpackEncodedString(dfa_257s);
    static final short[] dfa_258 = DFA.unpackEncodedString(dfa_258s);
    static final short[][] dfa_259 = unpackEncodedStringArray(dfa_259s);

    class DFA398 extends DFA {

        public DFA398(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 398;
            this.eot = dfa_253;
            this.eof = dfa_254;
            this.min = dfa_255;
            this.max = dfa_256;
            this.accept = dfa_257;
            this.special = dfa_258;
            this.transition = dfa_259;
        }
        public String getDescription() {
            return "()* loopback of 12872:5: (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleNegExpression ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA398_93 = input.LA(1);

                         
                        int index398_93 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred435_InternalSCTX()) ) {s = 96;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index398_93);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 398, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_260s = "\1\5\135\uffff\1\0\2\uffff";
    static final String dfa_261s = "\1\u009e\135\uffff\1\0\2\uffff";
    static final String dfa_262s = "\136\uffff\1\0\2\uffff}>";
    static final String[] dfa_263s = {
            "\1\1\2\uffff\1\1\1\uffff\2\1\10\uffff\10\1\1\uffff\1\1\2\uffff\2\1\1\uffff\15\1\1\uffff\15\1\1\uffff\2\1\2\uffff\2\1\1\uffff\7\1\1\uffff\1\1\1\uffff\15\1\1\136\1\1\10\uffff\10\1\5\uffff\6\1\21\uffff\6\1\5\uffff\2\1\3\uffff\4\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            ""
    };
    static final char[] dfa_260 = DFA.unpackEncodedStringToUnsignedChars(dfa_260s);
    static final char[] dfa_261 = DFA.unpackEncodedStringToUnsignedChars(dfa_261s);
    static final short[] dfa_262 = DFA.unpackEncodedString(dfa_262s);
    static final short[][] dfa_263 = unpackEncodedStringArray(dfa_263s);

    class DFA399 extends DFA {

        public DFA399(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 399;
            this.eot = dfa_253;
            this.eof = dfa_254;
            this.min = dfa_260;
            this.max = dfa_261;
            this.accept = dfa_257;
            this.special = dfa_262;
            this.transition = dfa_263;
        }
        public String getDescription() {
            return "()* loopback of 12948:5: (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleNegExpression ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA399_94 = input.LA(1);

                         
                        int index399_94 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred437_InternalSCTX()) ) {s = 96;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index399_94);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 399, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_264s = "\1\5\136\uffff\1\0\1\uffff";
    static final String dfa_265s = "\1\u009e\136\uffff\1\0\1\uffff";
    static final String dfa_266s = "\137\uffff\1\0\1\uffff}>";
    static final String[] dfa_267s = {
            "\1\1\2\uffff\1\1\1\uffff\2\1\10\uffff\10\1\1\uffff\1\1\2\uffff\2\1\1\uffff\15\1\1\uffff\15\1\1\uffff\2\1\2\uffff\2\1\1\uffff\7\1\1\uffff\1\1\1\uffff\16\1\1\137\10\uffff\10\1\5\uffff\6\1\21\uffff\6\1\5\uffff\2\1\3\uffff\4\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            ""
    };
    static final char[] dfa_264 = DFA.unpackEncodedStringToUnsignedChars(dfa_264s);
    static final char[] dfa_265 = DFA.unpackEncodedStringToUnsignedChars(dfa_265s);
    static final short[] dfa_266 = DFA.unpackEncodedString(dfa_266s);
    static final short[][] dfa_267 = unpackEncodedStringArray(dfa_267s);

    class DFA400 extends DFA {

        public DFA400(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 400;
            this.eot = dfa_253;
            this.eof = dfa_254;
            this.min = dfa_264;
            this.max = dfa_265;
            this.accept = dfa_257;
            this.special = dfa_266;
            this.transition = dfa_267;
        }
        public String getDescription() {
            return "()* loopback of 13024:5: (otherlv_14= '%' ( (lv_subExpressions_15_0= ruleNegExpression ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA400_95 = input.LA(1);

                         
                        int index400_95 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred439_InternalSCTX()) ) {s = 96;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index400_95);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 400, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_268s = "\1\4\17\0\2\uffff";
    static final String dfa_269s = "\1\u0094\17\0\2\uffff";
    static final String dfa_270s = "\20\uffff\1\1\1\2";
    static final String dfa_271s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\2\uffff}>";
    static final String[] dfa_272s = {
            "\1\3\1\7\1\1\1\2\1\17\1\6\1\15\12\uffff\1\4\11\uffff\1\5\54\uffff\1\10\4\uffff\1\12\21\uffff\1\11\3\uffff\1\16\51\uffff\1\13\2\uffff\1\14",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };
    static final char[] dfa_268 = DFA.unpackEncodedStringToUnsignedChars(dfa_268s);
    static final char[] dfa_269 = DFA.unpackEncodedStringToUnsignedChars(dfa_269s);
    static final short[] dfa_270 = DFA.unpackEncodedString(dfa_270s);
    static final short[] dfa_271 = DFA.unpackEncodedString(dfa_271s);
    static final short[][] dfa_272 = unpackEncodedStringArray(dfa_272s);

    class DFA404 extends DFA {

        public DFA404(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 404;
            this.eot = dfa_143;
            this.eof = dfa_143;
            this.min = dfa_268;
            this.max = dfa_269;
            this.accept = dfa_270;
            this.special = dfa_271;
            this.transition = dfa_272;
        }
        public String getDescription() {
            return "13150:2: ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )? ) | this_InitExpression_6= ruleInitExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA404_1 = input.LA(1);

                         
                        int index404_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred443_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index404_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA404_2 = input.LA(1);

                         
                        int index404_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred443_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index404_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA404_3 = input.LA(1);

                         
                        int index404_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred443_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index404_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA404_4 = input.LA(1);

                         
                        int index404_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred443_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index404_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA404_5 = input.LA(1);

                         
                        int index404_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred443_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index404_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA404_6 = input.LA(1);

                         
                        int index404_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred443_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index404_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA404_7 = input.LA(1);

                         
                        int index404_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred443_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index404_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA404_8 = input.LA(1);

                         
                        int index404_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred443_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index404_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA404_9 = input.LA(1);

                         
                        int index404_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred443_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index404_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA404_10 = input.LA(1);

                         
                        int index404_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred443_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index404_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA404_11 = input.LA(1);

                         
                        int index404_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred443_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index404_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA404_12 = input.LA(1);

                         
                        int index404_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred443_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index404_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA404_13 = input.LA(1);

                         
                        int index404_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred443_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index404_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA404_14 = input.LA(1);

                         
                        int index404_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred443_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index404_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA404_15 = input.LA(1);

                         
                        int index404_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred443_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index404_15);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 404, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_273s = "\1\2\140\uffff";
    static final String dfa_274s = "\1\5\1\0\137\uffff";
    static final String dfa_275s = "\1\u009e\1\0\137\uffff";
    static final String dfa_276s = "\2\uffff\1\2\135\uffff\1\1";
    static final String dfa_277s = "\1\uffff\1\0\137\uffff}>";
    static final String[] dfa_278s = {
            "\1\2\2\uffff\1\2\1\uffff\2\2\10\uffff\10\2\1\uffff\1\2\2\uffff\2\2\1\uffff\12\2\1\1\2\2\1\uffff\15\2\1\uffff\2\2\2\uffff\2\2\1\uffff\7\2\1\uffff\1\2\1\uffff\17\2\10\uffff\10\2\5\uffff\6\2\21\uffff\6\2\5\uffff\2\2\3\uffff\4\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_273 = DFA.unpackEncodedString(dfa_273s);
    static final char[] dfa_274 = DFA.unpackEncodedStringToUnsignedChars(dfa_274s);
    static final char[] dfa_275 = DFA.unpackEncodedStringToUnsignedChars(dfa_275s);
    static final short[] dfa_276 = DFA.unpackEncodedString(dfa_276s);
    static final short[] dfa_277 = DFA.unpackEncodedString(dfa_277s);
    static final short[][] dfa_278 = unpackEncodedStringArray(dfa_278s);

    class DFA403 extends DFA {

        public DFA403(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 403;
            this.eot = dfa_253;
            this.eof = dfa_273;
            this.min = dfa_274;
            this.max = dfa_275;
            this.accept = dfa_276;
            this.special = dfa_277;
            this.transition = dfa_278;
        }
        public String getDescription() {
            return "13219:4: (otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA403_1 = input.LA(1);

                         
                        int index403_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred442_InternalSCTX()) ) {s = 96;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index403_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 403, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_279s = "\1\5\2\uffff\1\0\11\uffff";
    static final String dfa_280s = "\1\u0094\2\uffff\1\0\11\uffff";
    static final String dfa_281s = "\1\uffff\1\1\1\2\1\uffff\1\4\1\5\1\6\1\7\1\uffff\1\10\2\uffff\1\3";
    static final String dfa_282s = "\3\uffff\1\0\11\uffff}>";
    static final String[] dfa_283s = {
            "\1\3\2\uffff\1\11\1\1\1\11\24\uffff\1\2\54\uffff\1\4\4\uffff\1\6\21\uffff\1\5\3\uffff\1\11\51\uffff\1\7\2\uffff\1\7",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_279 = DFA.unpackEncodedStringToUnsignedChars(dfa_279s);
    static final char[] dfa_280 = DFA.unpackEncodedStringToUnsignedChars(dfa_280s);
    static final short[] dfa_281 = DFA.unpackEncodedString(dfa_281s);
    static final short[] dfa_282 = DFA.unpackEncodedString(dfa_282s);
    static final short[][] dfa_283 = unpackEncodedStringArray(dfa_283s);

    class DFA411 extends DFA {

        public DFA411(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 411;
            this.eot = dfa_59;
            this.eof = dfa_59;
            this.min = dfa_279;
            this.max = dfa_280;
            this.accept = dfa_281;
            this.special = dfa_282;
            this.transition = dfa_283;
        }
        public String getDescription() {
            return "13596:2: (this_BoolValue_0= ruleBoolValue | (otherlv_1= '(' this_BoolExpression_2= ruleBoolExpression otherlv_3= ')' ) | this_ReferenceCall_4= ruleReferenceCall | this_FunctionCall_5= ruleFunctionCall | this_RandomCall_6= ruleRandomCall | this_RandomizeCall_7= ruleRandomizeCall | this_ValuedObjectTestExpression_8= ruleValuedObjectTestExpression | this_TextExpression_9= ruleTextExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA411_3 = input.LA(1);

                         
                        int index411_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred452_InternalSCTX()) ) {s = 12;}

                        else if ( (synpred456_InternalSCTX()) ) {s = 7;}

                         
                        input.seek(index411_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 411, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_284s = "\1\4\4\uffff\1\0\13\uffff";
    static final String dfa_285s = "\1\u0094\4\uffff\1\0\13\uffff";
    static final String dfa_286s = "\1\uffff\1\1\1\2\1\3\1\4\1\uffff\1\6\11\uffff\1\5";
    static final String dfa_287s = "\5\uffff\1\0\13\uffff}>";
    static final String[] dfa_288s = {
            "\1\3\1\6\1\1\1\2\3\6\12\uffff\1\4\11\uffff\1\5\54\uffff\1\6\4\uffff\1\6\21\uffff\1\6\3\uffff\1\6\51\uffff\1\6\2\uffff\1\6",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_284 = DFA.unpackEncodedStringToUnsignedChars(dfa_284s);
    static final char[] dfa_285 = DFA.unpackEncodedStringToUnsignedChars(dfa_285s);
    static final short[] dfa_286 = DFA.unpackEncodedString(dfa_286s);
    static final short[] dfa_287 = DFA.unpackEncodedString(dfa_287s);
    static final short[][] dfa_288 = unpackEncodedStringArray(dfa_288s);

    class DFA412 extends DFA {

        public DFA412(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 412;
            this.eot = dfa_104;
            this.eof = dfa_104;
            this.min = dfa_284;
            this.max = dfa_285;
            this.accept = dfa_286;
            this.special = dfa_287;
            this.transition = dfa_288;
        }
        public String getDescription() {
            return "13720:2: (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_StringValue_2= ruleStringValue | this_VectorValue_3= ruleVectorValue | (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' ) | this_AtomicExpression_7= ruleAtomicExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA412_5 = input.LA(1);

                         
                        int index412_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred461_InternalSCTX()) ) {s = 16;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index412_5);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 412, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_289s = "\1\4\20\0\4\uffff";
    static final String dfa_290s = "\1\u0094\20\0\4\uffff";
    static final String dfa_291s = "\21\uffff\1\1\1\uffff\1\3\1\2";
    static final String dfa_292s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\4\uffff}>";
    static final String[] dfa_293s = {
            "\1\4\1\10\1\2\1\3\1\20\1\7\1\16\12\uffff\1\5\11\uffff\1\6\54\uffff\1\11\4\uffff\1\13\11\uffff\1\1\7\uffff\1\12\1\23\2\uffff\1\17\51\uffff\1\14\2\21\1\15",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_289 = DFA.unpackEncodedStringToUnsignedChars(dfa_289s);
    static final char[] dfa_290 = DFA.unpackEncodedStringToUnsignedChars(dfa_290s);
    static final short[] dfa_291 = DFA.unpackEncodedString(dfa_291s);
    static final short[] dfa_292 = DFA.unpackEncodedString(dfa_292s);
    static final short[][] dfa_293 = unpackEncodedStringArray(dfa_293s);

    class DFA433 extends DFA {

        public DFA433(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 433;
            this.eot = dfa_163;
            this.eof = dfa_163;
            this.min = dfa_289;
            this.max = dfa_290;
            this.accept = dfa_291;
            this.special = dfa_292;
            this.transition = dfa_293;
        }
        public String getDescription() {
            return "14961:2: (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression | this_IgnoreValue_2= ruleIgnoreValue )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA433_1 = input.LA(1);

                         
                        int index433_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred482_InternalSCTX()) ) {s = 17;}

                        else if ( (synpred483_InternalSCTX()) ) {s = 20;}

                         
                        input.seek(index433_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA433_2 = input.LA(1);

                         
                        int index433_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred482_InternalSCTX()) ) {s = 17;}

                        else if ( (synpred483_InternalSCTX()) ) {s = 20;}

                         
                        input.seek(index433_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA433_3 = input.LA(1);

                         
                        int index433_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred482_InternalSCTX()) ) {s = 17;}

                        else if ( (synpred483_InternalSCTX()) ) {s = 20;}

                         
                        input.seek(index433_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA433_4 = input.LA(1);

                         
                        int index433_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred482_InternalSCTX()) ) {s = 17;}

                        else if ( (synpred483_InternalSCTX()) ) {s = 20;}

                         
                        input.seek(index433_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA433_5 = input.LA(1);

                         
                        int index433_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred482_InternalSCTX()) ) {s = 17;}

                        else if ( (synpred483_InternalSCTX()) ) {s = 20;}

                         
                        input.seek(index433_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA433_6 = input.LA(1);

                         
                        int index433_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred482_InternalSCTX()) ) {s = 17;}

                        else if ( (synpred483_InternalSCTX()) ) {s = 20;}

                         
                        input.seek(index433_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA433_7 = input.LA(1);

                         
                        int index433_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred482_InternalSCTX()) ) {s = 17;}

                        else if ( (synpred483_InternalSCTX()) ) {s = 20;}

                         
                        input.seek(index433_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA433_8 = input.LA(1);

                         
                        int index433_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred482_InternalSCTX()) ) {s = 17;}

                        else if ( (synpred483_InternalSCTX()) ) {s = 20;}

                         
                        input.seek(index433_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA433_9 = input.LA(1);

                         
                        int index433_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred482_InternalSCTX()) ) {s = 17;}

                        else if ( (synpred483_InternalSCTX()) ) {s = 20;}

                         
                        input.seek(index433_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA433_10 = input.LA(1);

                         
                        int index433_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred482_InternalSCTX()) ) {s = 17;}

                        else if ( (synpred483_InternalSCTX()) ) {s = 20;}

                         
                        input.seek(index433_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA433_11 = input.LA(1);

                         
                        int index433_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred482_InternalSCTX()) ) {s = 17;}

                        else if ( (synpred483_InternalSCTX()) ) {s = 20;}

                         
                        input.seek(index433_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA433_12 = input.LA(1);

                         
                        int index433_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred482_InternalSCTX()) ) {s = 17;}

                        else if ( (synpred483_InternalSCTX()) ) {s = 20;}

                         
                        input.seek(index433_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA433_13 = input.LA(1);

                         
                        int index433_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred482_InternalSCTX()) ) {s = 17;}

                        else if ( (synpred483_InternalSCTX()) ) {s = 20;}

                         
                        input.seek(index433_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA433_14 = input.LA(1);

                         
                        int index433_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred482_InternalSCTX()) ) {s = 17;}

                        else if ( (synpred483_InternalSCTX()) ) {s = 20;}

                         
                        input.seek(index433_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA433_15 = input.LA(1);

                         
                        int index433_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred482_InternalSCTX()) ) {s = 17;}

                        else if ( (synpred483_InternalSCTX()) ) {s = 20;}

                         
                        input.seek(index433_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA433_16 = input.LA(1);

                         
                        int index433_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred482_InternalSCTX()) ) {s = 17;}

                        else if ( (synpred483_InternalSCTX()) ) {s = 20;}

                         
                        input.seek(index433_16);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 433, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_294s = "\2\uffff\1\6\5\uffff\2\6";
    static final String dfa_295s = "\1\146\1\5\1\4\3\5\2\uffff\2\4";
    static final String dfa_296s = "\1\146\1\5\1\147\1\5\1\7\1\6\2\uffff\2\147";
    static final String dfa_297s = "\6\uffff\1\1\1\2\2\uffff";
    static final String dfa_298s = "\12\uffff}>";
    static final String[] dfa_299s = {
            "\1\1",
            "\1\2",
            "\4\6\1\uffff\2\6\6\uffff\2\6\2\uffff\1\7\71\uffff\1\3\13\uffff\1\4\12\uffff\1\5\1\6",
            "\1\10",
            "\1\10\2\6",
            "\1\6\1\11",
            "",
            "",
            "\4\6\1\uffff\2\6\6\uffff\2\6\2\uffff\1\7\71\uffff\1\3\13\uffff\1\4\12\uffff\1\5\1\6",
            "\4\6\1\uffff\2\6\6\uffff\2\6\2\uffff\1\7\105\uffff\1\6\12\uffff\2\6"
    };
    static final short[] dfa_294 = DFA.unpackEncodedString(dfa_294s);
    static final char[] dfa_295 = DFA.unpackEncodedStringToUnsignedChars(dfa_295s);
    static final char[] dfa_296 = DFA.unpackEncodedStringToUnsignedChars(dfa_296s);
    static final short[] dfa_297 = DFA.unpackEncodedString(dfa_297s);
    static final short[] dfa_298 = DFA.unpackEncodedString(dfa_298s);
    static final short[][] dfa_299 = unpackEncodedStringArray(dfa_299s);

    class DFA440 extends DFA {

        public DFA440(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 440;
            this.eot = dfa_86;
            this.eof = dfa_294;
            this.min = dfa_295;
            this.max = dfa_296;
            this.accept = dfa_297;
            this.special = dfa_298;
            this.transition = dfa_299;
        }
        public String getDescription() {
            return "15561:2: (this_Pragma_0= superPragma | this_JsonPragma_1= ruleJsonPragma )";
        }
    }
    static final String dfa_300s = "\3\uffff\1\1\4\uffff\3\1\5\uffff\2\1\3\uffff\3\1\3\uffff\3\1\3\uffff\3\1\3\uffff\2\1\2\uffff\1\1\1\uffff";
    static final String dfa_301s = "\1\12\1\uffff\1\5\1\4\1\5\1\4\1\6\4\4\1\24\1\0\1\5\1\4\1\uffff\2\4\2\5\4\4\3\5\3\4\3\5\3\4\1\0\2\5\2\4\1\0\1\5\1\4\1\0";
    static final String dfa_302s = "\1\147\1\uffff\1\5\1\u009e\1\5\1\u0094\1\6\1\u009d\3\u009e\1\u0095\1\0\1\5\1\u0094\1\uffff\2\u009e\2\5\1\u0094\3\u009e\3\5\3\u009e\3\5\3\u009e\1\0\2\5\2\u009e\1\0\1\5\1\u009e\1\0";
    static final String dfa_303s = "\1\uffff\1\1\15\uffff\1\2\35\uffff";
    static final String dfa_304s = "\14\uffff\1\3\27\uffff\1\0\4\uffff\1\1\2\uffff\1\2}>";
    static final String[] dfa_305s = {
            "\1\1\134\uffff\1\2",
            "",
            "\1\3",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\1\1\2\uffff\1\1\1\uffff\1\1\5\uffff\2\1\3\uffff\1\1\10\uffff\6\1\2\uffff\1\1\1\uffff\4\1\2\uffff\5\1\2\uffff\1\4\2\1\11\uffff\1\5\7\uffff\1\1\2\uffff\1\6\1\1\14\uffff\6\1\27\uffff\4\1\1\uffff\2\1\3\uffff\4\1",
            "\1\10",
            "\1\1\1\11\5\1\12\uffff\1\1\11\uffff\1\1\54\uffff\1\1\4\uffff\1\1\11\uffff\1\1\7\uffff\1\1\3\uffff\1\1\51\uffff\1\1\2\uffff\1\1",
            "\1\12",
            "\1\13\6\1\12\uffff\1\1\1\14\6\uffff\1\1\1\uffff\1\1\4\uffff\1\1\7\uffff\1\1\13\uffff\6\1\5\uffff\2\1\1\uffff\1\1\3\uffff\3\1\3\uffff\2\1\11\uffff\1\1\7\uffff\2\1\2\uffff\1\1\14\uffff\6\1\27\uffff\4\1\1\uffff\2\1\3\uffff\3\1",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\1\1\2\uffff\1\1\1\uffff\1\1\5\uffff\2\1\3\uffff\1\1\10\uffff\6\1\2\uffff\1\1\1\uffff\4\1\2\uffff\5\1\2\uffff\1\4\2\1\11\uffff\1\5\7\uffff\1\1\2\uffff\1\6\1\1\14\uffff\6\1\27\uffff\4\1\1\uffff\2\1\3\uffff\4\1",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\2\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\1\uffff\2\1\3\uffff\1\1\10\uffff\6\1\2\uffff\6\1\2\uffff\5\1\2\uffff\1\15\13\1\1\16\10\1\2\uffff\1\6\1\1\14\uffff\6\1\21\uffff\15\1\3\uffff\4\1",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\1\1\2\uffff\1\1\1\uffff\1\1\5\uffff\2\1\3\uffff\1\1\10\uffff\6\1\2\uffff\1\1\1\uffff\4\1\2\uffff\5\1\3\uffff\2\1\11\uffff\1\1\7\uffff\1\1\3\uffff\1\1\14\uffff\6\1\27\uffff\4\1\1\uffff\2\1\3\uffff\4\1",
            "\1\1\1\uffff\1\1\26\uffff\1\17\44\uffff\20\1\51\uffff\6\1\4\uffff\1\1",
            "\1\uffff",
            "\1\20",
            "\1\1\1\21\5\1\12\uffff\1\1\11\uffff\1\1\54\uffff\1\1\4\uffff\1\1\11\uffff\1\1\7\uffff\1\1\3\uffff\1\1\51\uffff\1\1\2\uffff\1\1",
            "",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\2\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\1\uffff\2\1\3\uffff\1\1\10\uffff\6\1\2\uffff\6\1\2\uffff\5\1\2\uffff\1\22\13\1\1\16\10\1\2\uffff\1\6\1\1\14\uffff\6\1\21\uffff\15\1\3\uffff\4\1",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\2\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\1\uffff\2\1\3\uffff\1\1\10\uffff\6\1\2\uffff\6\1\2\uffff\5\1\2\uffff\1\23\13\1\1\24\10\1\2\uffff\1\6\1\1\14\uffff\6\1\21\uffff\15\1\3\uffff\4\1",
            "\1\25",
            "\1\26",
            "\1\1\1\27\5\1\12\uffff\1\1\11\uffff\1\1\54\uffff\1\1\4\uffff\1\1\11\uffff\1\1\7\uffff\1\1\3\uffff\1\1\51\uffff\1\1\2\uffff\1\1",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\2\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\1\uffff\2\1\3\uffff\1\1\10\uffff\6\1\2\uffff\6\1\2\uffff\5\1\2\uffff\1\30\13\1\1\16\10\1\2\uffff\1\6\1\1\14\uffff\6\1\21\uffff\15\1\3\uffff\4\1",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\2\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\1\uffff\2\1\3\uffff\1\1\10\uffff\6\1\2\uffff\6\1\2\uffff\5\1\2\uffff\1\31\13\1\1\24\10\1\2\uffff\1\6\1\1\14\uffff\6\1\21\uffff\15\1\3\uffff\4\1",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\2\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\1\uffff\2\1\3\uffff\1\1\10\uffff\6\1\2\uffff\6\1\2\uffff\5\1\2\uffff\1\32\13\1\1\24\10\1\2\uffff\1\6\1\1\14\uffff\6\1\21\uffff\15\1\3\uffff\4\1",
            "\1\33",
            "\1\34",
            "\1\35",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\2\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\1\uffff\2\1\3\uffff\1\1\10\uffff\6\1\2\uffff\6\1\2\uffff\5\1\2\uffff\1\36\13\1\1\16\10\1\2\uffff\1\6\1\1\14\uffff\6\1\21\uffff\15\1\3\uffff\4\1",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\2\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\1\uffff\2\1\3\uffff\1\1\10\uffff\6\1\2\uffff\6\1\2\uffff\5\1\2\uffff\1\37\13\1\1\24\10\1\2\uffff\1\6\1\1\14\uffff\6\1\21\uffff\15\1\3\uffff\4\1",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\2\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\1\uffff\2\1\3\uffff\1\1\10\uffff\6\1\2\uffff\6\1\2\uffff\5\1\2\uffff\1\40\13\1\1\24\10\1\2\uffff\1\6\1\1\14\uffff\6\1\21\uffff\15\1\3\uffff\4\1",
            "\1\41",
            "\1\42",
            "\1\43",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\2\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\1\uffff\2\1\3\uffff\1\1\10\uffff\6\1\2\uffff\6\1\2\uffff\5\1\2\uffff\1\44\13\1\1\16\10\1\2\uffff\1\6\1\1\14\uffff\6\1\21\uffff\15\1\3\uffff\4\1",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\2\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\1\uffff\2\1\3\uffff\1\1\10\uffff\6\1\2\uffff\6\1\2\uffff\5\1\2\uffff\1\45\13\1\1\24\10\1\2\uffff\1\6\1\1\14\uffff\6\1\21\uffff\15\1\3\uffff\4\1",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\2\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\1\uffff\2\1\3\uffff\1\1\10\uffff\6\1\2\uffff\6\1\2\uffff\5\1\2\uffff\1\46\13\1\1\24\10\1\2\uffff\1\6\1\1\14\uffff\6\1\21\uffff\15\1\3\uffff\4\1",
            "\1\uffff",
            "\1\47",
            "\1\50",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\2\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\1\uffff\2\1\3\uffff\1\1\10\uffff\6\1\2\uffff\6\1\2\uffff\5\1\2\uffff\1\51\13\1\1\24\10\1\2\uffff\1\6\1\1\14\uffff\6\1\21\uffff\15\1\3\uffff\4\1",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\2\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\1\uffff\2\1\3\uffff\1\1\10\uffff\6\1\2\uffff\6\1\2\uffff\5\1\2\uffff\1\52\13\1\1\24\10\1\2\uffff\1\6\1\1\14\uffff\6\1\21\uffff\15\1\3\uffff\4\1",
            "\1\uffff",
            "\1\53",
            "\7\1\7\uffff\1\1\2\uffff\1\7\1\uffff\5\1\1\uffff\1\1\1\uffff\2\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\1\uffff\2\1\3\uffff\1\1\10\uffff\6\1\2\uffff\6\1\2\uffff\5\1\2\uffff\1\54\13\1\1\24\10\1\2\uffff\1\6\1\1\14\uffff\6\1\21\uffff\15\1\3\uffff\4\1",
            "\1\uffff"
    };
    static final short[] dfa_300 = DFA.unpackEncodedString(dfa_300s);
    static final char[] dfa_301 = DFA.unpackEncodedStringToUnsignedChars(dfa_301s);
    static final char[] dfa_302 = DFA.unpackEncodedStringToUnsignedChars(dfa_302s);
    static final short[] dfa_303 = DFA.unpackEncodedString(dfa_303s);
    static final short[] dfa_304 = DFA.unpackEncodedString(dfa_304s);
    static final short[][] dfa_305 = unpackEncodedStringArray(dfa_305s);

    class DFA441 extends DFA {

        public DFA441(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 441;
            this.eot = dfa_1;
            this.eof = dfa_300;
            this.min = dfa_301;
            this.max = dfa_302;
            this.accept = dfa_303;
            this.special = dfa_304;
            this.transition = dfa_305;
        }
        public String getDescription() {
            return "15603:2: (this_Annotation_0= superAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA441_36 = input.LA(1);

                         
                        int index441_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred495_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index441_36);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA441_41 = input.LA(1);

                         
                        int index441_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred495_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index441_41);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA441_44 = input.LA(1);

                         
                        int index441_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred495_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index441_44);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA441_12 = input.LA(1);

                         
                        int index441_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred495_InternalSCTX()) ) {s = 1;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index441_12);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 441, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_306s = "\3\uffff\1\1\4\uffff\2\1";
    static final String dfa_307s = "\1\12\1\uffff\1\5\1\4\2\5\1\6\1\uffff\2\4";
    static final String dfa_308s = "\1\147\1\uffff\1\5\1\147\2\5\1\6\1\uffff\2\147";
    static final String dfa_309s = "\1\uffff\1\1\5\uffff\1\2\2\uffff";
    static final String[] dfa_310s = {
            "\1\1\134\uffff\1\2",
            "",
            "\1\3",
            "\2\1\4\uffff\1\1\12\uffff\1\7\14\uffff\1\1\54\uffff\1\4\13\uffff\1\5\12\uffff\1\6\1\1",
            "\1\10",
            "\1\10",
            "\1\11",
            "",
            "\2\1\4\uffff\1\1\12\uffff\1\7\14\uffff\1\1\54\uffff\1\4\13\uffff\1\5\12\uffff\1\6\1\1",
            "\2\1\4\uffff\1\1\12\uffff\1\7\14\uffff\1\1\104\uffff\1\1"
    };
    static final short[] dfa_306 = DFA.unpackEncodedString(dfa_306s);
    static final char[] dfa_307 = DFA.unpackEncodedStringToUnsignedChars(dfa_307s);
    static final char[] dfa_308 = DFA.unpackEncodedStringToUnsignedChars(dfa_308s);
    static final short[] dfa_309 = DFA.unpackEncodedString(dfa_309s);
    static final short[][] dfa_310 = unpackEncodedStringArray(dfa_310s);

    class DFA442 extends DFA {

        public DFA442(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 442;
            this.eot = dfa_86;
            this.eof = dfa_306;
            this.min = dfa_307;
            this.max = dfa_308;
            this.accept = dfa_309;
            this.special = dfa_298;
            this.transition = dfa_310;
        }
        public String getDescription() {
            return "15645:2: (this_QuotedStringAnnotation_0= superQuotedStringAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation )";
        }
    }
    static final String dfa_311s = "\2\uffff\1\7\5\uffff\2\7";
    static final String[] dfa_312s = {
            "\1\1",
            "\1\2",
            "\4\6\1\uffff\1\6\1\7\6\uffff\2\7\74\uffff\1\3\13\uffff\1\4\12\uffff\1\5\1\7",
            "\1\10",
            "\1\10\2\6",
            "\1\7\1\11",
            "",
            "",
            "\4\6\1\uffff\1\6\1\7\6\uffff\2\7\74\uffff\1\3\13\uffff\1\4\12\uffff\1\5\1\7",
            "\4\6\1\uffff\1\6\1\7\6\uffff\2\7\110\uffff\1\6\12\uffff\2\7"
    };
    static final short[] dfa_311 = DFA.unpackEncodedString(dfa_311s);
    static final short[][] dfa_312 = unpackEncodedStringArray(dfa_312s);

    class DFA444 extends DFA {

        public DFA444(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 444;
            this.eot = dfa_86;
            this.eof = dfa_311;
            this.min = dfa_295;
            this.max = dfa_296;
            this.accept = dfa_297;
            this.special = dfa_298;
            this.transition = dfa_312;
        }
        public String getDescription() {
            return "15753:2: (this_StringPragma_0= ruleStringPragma | this_PragmaTag_1= rulePragmaTag )";
        }
    }
    static final String dfa_313s = "\1\12\1\uffff\1\5\1\4\2\5\1\6\2\uffff\2\4";
    static final String dfa_314s = "\1\147\1\uffff\1\5\1\146\1\5\1\7\1\6\2\uffff\1\146\1\133";
    static final String dfa_315s = "\1\uffff\1\1\5\uffff\1\2\1\3\2\uffff";
    static final String dfa_316s = "\13\uffff}>";
    static final String[] dfa_317s = {
            "\1\1\134\uffff\1\2",
            "",
            "\1\3",
            "\4\7\1\uffff\1\7\30\uffff\1\10\54\uffff\1\4\13\uffff\1\5\12\uffff\1\6",
            "\1\11",
            "\1\11\2\7",
            "\1\12",
            "",
            "",
            "\4\7\1\uffff\1\7\30\uffff\1\10\54\uffff\1\4\13\uffff\1\5\12\uffff\1\6",
            "\4\7\1\uffff\1\7\30\uffff\1\10\70\uffff\1\7"
    };
    static final char[] dfa_313 = DFA.unpackEncodedStringToUnsignedChars(dfa_313s);
    static final char[] dfa_314 = DFA.unpackEncodedStringToUnsignedChars(dfa_314s);
    static final short[] dfa_315 = DFA.unpackEncodedString(dfa_315s);
    static final short[] dfa_316 = DFA.unpackEncodedString(dfa_316s);
    static final short[][] dfa_317 = unpackEncodedStringArray(dfa_317s);

    class DFA445 extends DFA {

        public DFA445(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 445;
            this.eot = dfa_45;
            this.eof = dfa_45;
            this.min = dfa_313;
            this.max = dfa_314;
            this.accept = dfa_315;
            this.special = dfa_316;
            this.transition = dfa_317;
        }
        public String getDescription() {
            return "15795:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation )";
        }
    }
    static final String dfa_318s = "\3\uffff\1\10\6\uffff\2\10";
    static final String dfa_319s = "\1\12\1\uffff\1\5\1\4\2\5\1\6\3\uffff\2\4";
    static final String dfa_320s = "\1\147\1\uffff\1\5\1\156\2\5\1\6\3\uffff\2\156";
    static final String dfa_321s = "\1\uffff\1\1\5\uffff\1\3\1\4\1\2\2\uffff";
    static final String dfa_322s = "\14\uffff}>";
    static final String[] dfa_323s = {
            "\1\1\134\uffff\1\2",
            "",
            "\1\3",
            "\2\11\3\uffff\1\11\1\10\27\uffff\1\7\1\uffff\1\10\2\uffff\1\10\11\uffff\1\10\1\uffff\5\10\7\uffff\1\10\17\uffff\1\4\13\uffff\1\5\12\uffff\1\6\10\10",
            "\1\12",
            "\1\12",
            "\1\13",
            "",
            "",
            "",
            "\2\11\3\uffff\1\11\1\10\27\uffff\1\7\1\uffff\1\10\2\uffff\1\10\11\uffff\1\10\1\uffff\5\10\7\uffff\1\10\17\uffff\1\4\13\uffff\1\5\12\uffff\1\6\10\10",
            "\2\11\3\uffff\1\11\1\10\27\uffff\1\7\1\uffff\1\10\2\uffff\1\10\11\uffff\1\10\1\uffff\5\10\7\uffff\1\10\47\uffff\10\10"
    };
    static final short[] dfa_318 = DFA.unpackEncodedString(dfa_318s);
    static final char[] dfa_319 = DFA.unpackEncodedStringToUnsignedChars(dfa_319s);
    static final char[] dfa_320 = DFA.unpackEncodedStringToUnsignedChars(dfa_320s);
    static final short[] dfa_321 = DFA.unpackEncodedString(dfa_321s);
    static final short[] dfa_322 = DFA.unpackEncodedString(dfa_322s);
    static final short[][] dfa_323 = unpackEncodedStringArray(dfa_323s);

    class DFA446 extends DFA {

        public DFA446(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 446;
            this.eot = dfa_13;
            this.eof = dfa_318;
            this.min = dfa_319;
            this.max = dfa_320;
            this.accept = dfa_321;
            this.special = dfa_322;
            this.transition = dfa_323;
        }
        public String getDescription() {
            return "15849:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_RestrictedKeyStringValueAnnotation_1= ruleRestrictedKeyStringValueAnnotation | this_RestrictedTypedKeyStringValueAnnotation_2= ruleRestrictedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )";
        }
    }
    static final String dfa_324s = "\3\uffff\1\11\6\uffff\2\11";
    static final String dfa_325s = "\1\147\1\uffff\1\5\1\147\2\5\1\6\3\uffff\2\147";
    static final String dfa_326s = "\1\uffff\1\1\5\uffff\1\3\1\2\1\4\2\uffff";
    static final String[] dfa_327s = {
            "\1\1\134\uffff\1\2",
            "",
            "\1\3",
            "\1\10\1\11\4\uffff\1\11\27\uffff\1\7\54\uffff\1\4\13\uffff\1\5\12\uffff\1\6\1\11",
            "\1\12",
            "\1\12",
            "\1\13",
            "",
            "",
            "",
            "\1\10\1\11\4\uffff\1\11\27\uffff\1\7\54\uffff\1\4\13\uffff\1\5\12\uffff\1\6\1\11",
            "\1\10\1\11\4\uffff\1\11\27\uffff\1\7\104\uffff\1\11"
    };
    static final short[] dfa_324 = DFA.unpackEncodedString(dfa_324s);
    static final char[] dfa_325 = DFA.unpackEncodedStringToUnsignedChars(dfa_325s);
    static final short[] dfa_326 = DFA.unpackEncodedString(dfa_326s);
    static final short[][] dfa_327 = unpackEncodedStringArray(dfa_327s);

    class DFA447 extends DFA {

        public DFA447(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 447;
            this.eot = dfa_13;
            this.eof = dfa_324;
            this.min = dfa_319;
            this.max = dfa_325;
            this.accept = dfa_326;
            this.special = dfa_322;
            this.transition = dfa_327;
        }
        public String getDescription() {
            return "15915:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation | this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )";
        }
    }
    static final String dfa_328s = "\125\uffff";
    static final String dfa_329s = "\1\1\124\uffff";
    static final String dfa_330s = "\1\4\61\uffff\1\0\42\uffff";
    static final String dfa_331s = "\1\u009e\61\uffff\1\0\42\uffff";
    static final String dfa_332s = "\1\uffff\1\2\122\uffff\1\1";
    static final String dfa_333s = "\62\uffff\1\0\42\uffff}>";
    static final String[] dfa_334s = {
            "\7\1\6\uffff\5\1\1\uffff\7\1\1\uffff\1\1\2\uffff\3\1\2\uffff\1\1\2\uffff\4\1\1\uffff\3\1\1\uffff\13\1\1\uffff\2\1\1\uffff\4\1\2\uffff\5\1\2\uffff\1\124\2\1\11\uffff\1\62\7\uffff\1\1\2\uffff\11\1\5\uffff\6\1\27\uffff\4\1\1\uffff\2\1\3\uffff\4\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_328 = DFA.unpackEncodedString(dfa_328s);
    static final short[] dfa_329 = DFA.unpackEncodedString(dfa_329s);
    static final char[] dfa_330 = DFA.unpackEncodedStringToUnsignedChars(dfa_330s);
    static final char[] dfa_331 = DFA.unpackEncodedStringToUnsignedChars(dfa_331s);
    static final short[] dfa_332 = DFA.unpackEncodedString(dfa_332s);
    static final short[] dfa_333 = DFA.unpackEncodedString(dfa_333s);
    static final short[][] dfa_334 = unpackEncodedStringArray(dfa_334s);

    class DFA459 extends DFA {

        public DFA459(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 459;
            this.eot = dfa_328;
            this.eof = dfa_329;
            this.min = dfa_330;
            this.max = dfa_331;
            this.accept = dfa_332;
            this.special = dfa_333;
            this.transition = dfa_334;
        }
        public String getDescription() {
            return "()* loopback of 16971:3: ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA459_50 = input.LA(1);

                         
                        int index459_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred524_InternalSCTX()) ) {s = 84;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index459_50);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 459, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA544 extends DFA {

        public DFA544(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 544;
            this.eot = dfa_110;
            this.eof = dfa_110;
            this.min = dfa_111;
            this.max = dfa_112;
            this.accept = dfa_113;
            this.special = dfa_114;
            this.transition = dfa_115;
        }
        public String getDescription() {
            return "()* loopback of 5959:5: ( (lv_declarations_3_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA544_1 = input.LA(1);

                         
                        int index544_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred226_InternalSCTX()) ) {s = 15;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index544_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA544_2 = input.LA(1);

                         
                        int index544_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred226_InternalSCTX()) ) {s = 15;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index544_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA544_7 = input.LA(1);

                         
                        int index544_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred226_InternalSCTX()) ) {s = 15;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index544_7);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 544, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    
    private static class FollowSets000 {
        public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000060402L,0x000000C000000000L});
        public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000040402L,0x0000008000000000L});
        public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000040400L,0x0000008000000000L});
        public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000280010L});
        public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000280000L});
        public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000300000L});
        public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x3FFA8C002FC00400L,0x03F07C8000001C01L,0x0000000038C00000L});
        public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x00FA8C000FC00400L,0x00007C8000000000L});
        public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000000400000L});
        public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x00008C0001400400L,0x0000008000000000L});
        public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x000000000F800400L,0x0000008000000000L});
        public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x000000000F000000L});
        public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x000000000E000000L});
        public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x000000000C000000L});
        public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000008000000L});
        public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x8000009030280412L,0x00007B8000000000L});
        public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x8000009030280402L,0x00007B8000000000L});
        public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000040000020L});
        public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x8000009020000402L,0x00007B8000000000L});
        public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x8000009000000422L,0x00007B8000000000L});
        public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000020300000L});
        public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000000200020L});
        public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x8000009000000402L,0x00007B8000000000L});
        public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x00008C0001000402L,0x0000008000000000L});
        public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000080000002L});
        public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x00000000802007F0L,0x0000008808421000L,0x00000000801E0000L});
        public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000100100000L});
        public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000000100000000L});
        public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000000000000020L,0x0000000000000000L,0x0000000000120000L});
        public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000000200000002L});
        public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000000400000002L});
        public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000000800000000L});
        public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x8000009000000400L,0x00007B8000000000L});
        public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x00000000802007F0L,0x0000008808021000L,0x00000000001E0000L});
        public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x800000F000000400L,0x00007B8000000000L});
        public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000000000000080L});
        public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x800000D000000400L,0x00007B8000000000L});
        public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000000200520L,0x0000008000031000L,0x0000000000120000L});
        public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x8000019000000400L,0x00007B8000000000L});
        public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000020000000002L,0x000F800000000000L});
        public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000020000000002L,0x0003800000000000L});
        public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000020000000002L});
        public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x000000000F800402L,0x0000008000000000L});
        public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x00000C0001000400L,0x0000008000000000L});
        public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000080001000000L});
        public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000080000000000L});
        public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000300030200030L});
        public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000300030200010L});
        public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000300030200000L});
        public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000100020000002L});
        public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000200000000000L});
        public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000000000000060L,0x0000000000000000L,0x0000000000120000L});
        public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000220000002L});
        public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000000020000002L});
        public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000000000022L});
        public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000200220200000L});
        public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000200020200000L});
        public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000200000200020L});
        public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x3FFA8C002F800400L,0x03F07C8000001C01L,0x0000000038C00000L});
        public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x00FA8C000F800400L,0x00007C8000000000L});
        public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x000000000FC00400L,0x0000008000000000L});
        public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x3FFA00002F800402L,0x03F07C8000001C01L,0x0000000038C00000L});
        public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x00FA00000F800402L,0x00007C8000000000L});
        public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000000000000420L,0x0000008000000000L,0x0000000000120000L});
        public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000000000000L,0xF000000000002000L,0x00000000000001FFL});
        public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000400020000002L});
        public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000400000000022L});
        public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0000840000000400L,0x0000008000000000L});
        public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000800000000000L});
        public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0001300020200030L});
        public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0001300020200010L});
        public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0001300020200000L});
        public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0001200220200000L});
        public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0001200020200000L});
        public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0001200000200020L});
        public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0000200000200000L});
        public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x3F00000020400420L,0x03F0008000001C00L,0x0000000038D20000L});
        public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000000000400420L,0x0000008000000000L,0x0000000000120000L});
        public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x3F00000020000422L,0x03F0008000001C00L,0x0000000038D20000L});
        public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0000000000000422L,0x0000008000000000L,0x0000000000120000L});
        public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0022000000000400L,0x0000048000000000L});
        public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0002000000000000L});
        public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000029000000002L});
        public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0004028000000002L});
        public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x0000028000000002L});
        public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0000030000000002L});
        public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x0008000000000400L,0x0000788000000000L});
        public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x0008000000000000L});
        public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x000002A000000002L});
        public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x0030000000000400L,0x0000048000000000L});
        public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0010000000000000L});
        public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x0060000000000400L,0x0000788000000000L});
        public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x0060000000000000L});
        public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x0040000000000000L});
        public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x0000021000000002L});
        public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x0000022000000002L});
        public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x0080000000000400L,0x0000788000000000L});
        public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x0080000000000000L});
        public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x00000000802007F0L,0x0000008808021000L,0x0000000000120000L});
        public static final BitSet FOLLOW_105 = new BitSet(new long[]{0x0000000000200400L,0x0000008000000000L});
        public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x3F001010A06007F0L,0x03F0008800031C58L,0x0000000038D20000L});
        public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x00001010806007F0L,0x0000008800031058L,0x0000000000120000L});
        public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x3F00000020000400L,0x03F0008000001C00L,0x0000000038C00000L});
        public static final BitSet FOLLOW_109 = new BitSet(new long[]{0x0000000000200030L});
        public static final BitSet FOLLOW_110 = new BitSet(new long[]{0x0000000000200000L});
        public static final BitSet FOLLOW_111 = new BitSet(new long[]{0x7F00000020400420L,0x03F0008000001C00L,0x0000000078C00000L});
        public static final BitSet FOLLOW_112 = new BitSet(new long[]{0x3F00000020400420L,0x03F0008000001C00L,0x0000000078C00000L});
        public static final BitSet FOLLOW_113 = new BitSet(new long[]{0x0000000000000C22L,0x0000008000000000L});
        public static final BitSet FOLLOW_114 = new BitSet(new long[]{0x3F00000020400400L,0x03F0008000001C00L,0x0000000038C00000L});
        public static final BitSet FOLLOW_115 = new BitSet(new long[]{0x0000000000100802L});
        public static final BitSet FOLLOW_116 = new BitSet(new long[]{0x0000000000000420L,0x0000008000000000L});
        public static final BitSet FOLLOW_117 = new BitSet(new long[]{0x0000000000200010L});
        public static final BitSet FOLLOW_118 = new BitSet(new long[]{0x3F00000028800400L,0x03F0008000001C00L,0x0000000038C00000L});
        public static final BitSet FOLLOW_119 = new BitSet(new long[]{0x3F00000028C00400L,0x03F0008000001C00L,0x0000000038C00000L});
        public static final BitSet FOLLOW_120 = new BitSet(new long[]{0x0000000008800400L,0x0000008000000000L});
        public static final BitSet FOLLOW_121 = new BitSet(new long[]{0x8000001000000412L,0x0000008000000000L});
        public static final BitSet FOLLOW_122 = new BitSet(new long[]{0x8000001000000402L,0x0000008000000000L});
        public static final BitSet FOLLOW_123 = new BitSet(new long[]{0x8000001000000400L,0x0000008000000000L});
        public static final BitSet FOLLOW_124 = new BitSet(new long[]{0x8000200000000000L});
        public static final BitSet FOLLOW_125 = new BitSet(new long[]{0x0000000000000520L,0x0000008000031000L,0x0000000000120000L});
        public static final BitSet FOLLOW_126 = new BitSet(new long[]{0x8000000000100000L});
        public static final BitSet FOLLOW_127 = new BitSet(new long[]{0x0000000000000400L,0x0000008000000001L,0x0000000038000000L});
        public static final BitSet FOLLOW_128 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_129 = new BitSet(new long[]{0x3F00000020000420L,0x03F0008000001C00L,0x0000000078C00000L});
        public static final BitSet FOLLOW_130 = new BitSet(new long[]{0x0000000080000000L,0x0000000000000002L});
        public static final BitSet FOLLOW_131 = new BitSet(new long[]{0x3F00000000000400L,0x03F0008000000400L,0x0000000038000000L});
        public static final BitSet FOLLOW_132 = new BitSet(new long[]{0x0000000020200002L});
        public static final BitSet FOLLOW_133 = new BitSet(new long[]{0x0000000000200022L});
        public static final BitSet FOLLOW_134 = new BitSet(new long[]{0x3F001010A0600FF0L,0x03F0008800031C58L,0x0000000038D20000L});
        public static final BitSet FOLLOW_135 = new BitSet(new long[]{0x0000000000000400L,0x0000008000000004L});
        public static final BitSet FOLLOW_136 = new BitSet(new long[]{0x3F003010A02007F2L,0x03F0008800031C58L,0x0000000038D20000L});
        public static final BitSet FOLLOW_137 = new BitSet(new long[]{0x3F001010A02007F2L,0x03F0008800031C58L,0x0000000038D20000L});
        public static final BitSet FOLLOW_138 = new BitSet(new long[]{0x00001010802007F2L,0x0000008800031058L,0x0000000000120000L});
        public static final BitSet FOLLOW_139 = new BitSet(new long[]{0x0000000000000400L,0x0000008000000008L});
        public static final BitSet FOLLOW_140 = new BitSet(new long[]{0x0000010000000002L});
        public static final BitSet FOLLOW_141 = new BitSet(new long[]{0x0000010020000002L});
        public static final BitSet FOLLOW_142 = new BitSet(new long[]{0x0000010000000022L});
        public static final BitSet FOLLOW_143 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000600L});
        public static final BitSet FOLLOW_144 = new BitSet(new long[]{0x00000000802007F0L,0x0000008800031000L,0x0000000000120000L});
        public static final BitSet FOLLOW_145 = new BitSet(new long[]{0x0000000000000400L,0x0000008000000010L});
        public static final BitSet FOLLOW_146 = new BitSet(new long[]{0x0000001000000400L,0x0000008000000000L});
        public static final BitSet FOLLOW_147 = new BitSet(new long[]{0x0000010000000402L,0x0000008000000020L});
        public static final BitSet FOLLOW_148 = new BitSet(new long[]{0x0000000000000400L,0x0000008000000020L});
        public static final BitSet FOLLOW_149 = new BitSet(new long[]{0x0000000080000000L});
        public static final BitSet FOLLOW_150 = new BitSet(new long[]{0x3F000100802007F0L,0x03F0008808421400L,0x00000000B81E0000L});
        public static final BitSet FOLLOW_151 = new BitSet(new long[]{0x0000010000000000L});
        public static final BitSet FOLLOW_152 = new BitSet(new long[]{0x00000001802007F0L,0x0000008808421000L,0x00000000801E0000L});
        public static final BitSet FOLLOW_153 = new BitSet(new long[]{0x0000010020200000L});
        public static final BitSet FOLLOW_154 = new BitSet(new long[]{0x0000010000200020L});
        public static final BitSet FOLLOW_155 = new BitSet(new long[]{0x0000000000000802L});
        public static final BitSet FOLLOW_156 = new BitSet(new long[]{0x3F00000020200522L,0x03F0008000031F80L,0x0000000038D20000L});
        public static final BitSet FOLLOW_157 = new BitSet(new long[]{0x0000000000200522L,0x0000008000031380L,0x0000000000120000L});
        public static final BitSet FOLLOW_158 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000080L});
        public static final BitSet FOLLOW_159 = new BitSet(new long[]{0x3F00000020600520L,0x03F0008000031F80L,0x0000000038D20000L});
        public static final BitSet FOLLOW_160 = new BitSet(new long[]{0x0000000000600520L,0x0000008000031380L,0x0000000000120000L});
        public static final BitSet FOLLOW_161 = new BitSet(new long[]{0x0000000000400000L,0x0000000000000080L});
        public static final BitSet FOLLOW_162 = new BitSet(new long[]{0x0000000000000400L,0x0000008000000100L});
        public static final BitSet FOLLOW_163 = new BitSet(new long[]{0x0000000000000400L,0x0000008000000200L});
        public static final BitSet FOLLOW_164 = new BitSet(new long[]{0x0000000000000000L,0x03F0000000000400L});
        public static final BitSet FOLLOW_165 = new BitSet(new long[]{0x0000010000100000L});
        public static final BitSet FOLLOW_166 = new BitSet(new long[]{0x0000010000000420L,0x0000008000000000L});
        public static final BitSet FOLLOW_167 = new BitSet(new long[]{0x0000200000000002L});
        public static final BitSet FOLLOW_168 = new BitSet(new long[]{0x0000000000000400L,0x0000008000001800L,0x0000000038000000L});
        public static final BitSet FOLLOW_169 = new BitSet(new long[]{0x0000000000000000L,0x0000000000001800L});
        public static final BitSet FOLLOW_170 = new BitSet(new long[]{0x0000000000000410L,0x0000008000000000L});
        public static final BitSet FOLLOW_171 = new BitSet(new long[]{0x0000000000100420L,0x0000008000000000L});
        public static final BitSet FOLLOW_172 = new BitSet(new long[]{0x0000000020000400L,0x0000008000000000L,0x0000000038000000L});
        public static final BitSet FOLLOW_173 = new BitSet(new long[]{0x0000000020000000L});
        public static final BitSet FOLLOW_174 = new BitSet(new long[]{0x0800000000200430L,0x0000008000000000L});
        public static final BitSet FOLLOW_175 = new BitSet(new long[]{0x0800000000200420L,0x0000008000000000L});
        public static final BitSet FOLLOW_176 = new BitSet(new long[]{0x0000000000000000L,0x0C00000000000000L});
        public static final BitSet FOLLOW_177 = new BitSet(new long[]{0x0000000000200420L,0x0000008000000000L});
        public static final BitSet FOLLOW_178 = new BitSet(new long[]{0x0000000000500000L});
        public static final BitSet FOLLOW_179 = new BitSet(new long[]{0x0000020400000002L,0x0000000000006000L});
        public static final BitSet FOLLOW_180 = new BitSet(new long[]{0x0000020000000002L,0x0000000000004000L});
        public static final BitSet FOLLOW_181 = new BitSet(new long[]{0x2000000000000000L,0x0000000014500000L,0x0000000007000000L});
        public static final BitSet FOLLOW_182 = new BitSet(new long[]{0x0000000000000500L,0x0000008000000000L});
        public static final BitSet FOLLOW_183 = new BitSet(new long[]{0x0000000480000000L,0x0000000000008002L});
        public static final BitSet FOLLOW_184 = new BitSet(new long[]{0x0000000000000400L,0x0000008000001000L});
        public static final BitSet FOLLOW_185 = new BitSet(new long[]{0x0000000000000400L,0x0000008000010000L});
        public static final BitSet FOLLOW_186 = new BitSet(new long[]{0x0000000000000400L,0x0000008000020000L});
        public static final BitSet FOLLOW_187 = new BitSet(new long[]{0x0000000000000002L,0x0000000000040000L});
        public static final BitSet FOLLOW_188 = new BitSet(new long[]{0x0000000000000002L,0x0000000000080000L});
        public static final BitSet FOLLOW_189 = new BitSet(new long[]{0x0000000000000002L,0x0000000000100000L});
        public static final BitSet FOLLOW_190 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L});
        public static final BitSet FOLLOW_191 = new BitSet(new long[]{0x0000000000000002L,0x0000000000400000L});
        public static final BitSet FOLLOW_192 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x000000000001F800L});
        public static final BitSet FOLLOW_193 = new BitSet(new long[]{0x0000000000000002L,0x0000000003800000L});
        public static final BitSet FOLLOW_194 = new BitSet(new long[]{0x0000000000000002L,0x0000000001000000L});
        public static final BitSet FOLLOW_195 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
        public static final BitSet FOLLOW_196 = new BitSet(new long[]{0x0000000000000002L,0x000000000C000000L});
        public static final BitSet FOLLOW_197 = new BitSet(new long[]{0x0000000000000002L,0x0000000070000000L});
        public static final BitSet FOLLOW_198 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000200000L});
        public static final BitSet FOLLOW_199 = new BitSet(new long[]{0x00000000802007F0L,0x0000008800021000L,0x0000000000120000L});
        public static final BitSet FOLLOW_200 = new BitSet(new long[]{0x0000000000000002L,0x0000000080000000L});
        public static final BitSet FOLLOW_201 = new BitSet(new long[]{0x0000000000000002L,0x0000000100000000L});
        public static final BitSet FOLLOW_202 = new BitSet(new long[]{0x0000000000000002L,0x0000000200000000L});
        public static final BitSet FOLLOW_203 = new BitSet(new long[]{0x0000000000000002L,0x0000000400000000L});
        public static final BitSet FOLLOW_204 = new BitSet(new long[]{0x0000000400000002L,0x0000000000008000L});
        public static final BitSet FOLLOW_205 = new BitSet(new long[]{0x0000000000000040L});
        public static final BitSet FOLLOW_206 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000002L});
        public static final BitSet FOLLOW_207 = new BitSet(new long[]{0x00000000802007F0L,0x0000009808021000L,0x00000000001E0000L});
        public static final BitSet FOLLOW_208 = new BitSet(new long[]{0x0000000000400010L});
        public static final BitSet FOLLOW_209 = new BitSet(new long[]{0x00000004002002D0L,0x0000002000000000L});
        public static final BitSet FOLLOW_210 = new BitSet(new long[]{0x0000000C002002D0L,0x0000002000000000L});
        public static final BitSet FOLLOW_211 = new BitSet(new long[]{0x0000000800100000L});
        public static final BitSet FOLLOW_212 = new BitSet(new long[]{0x00000000000002F0L,0x0000000008000000L});
        public static final BitSet FOLLOW_213 = new BitSet(new long[]{0x0000000000100002L});
        public static final BitSet FOLLOW_214 = new BitSet(new long[]{0x0000000000000230L});
        public static final BitSet FOLLOW_215 = new BitSet(new long[]{0x0000000400000000L});
        public static final BitSet FOLLOW_216 = new BitSet(new long[]{0x0000000000000002L,0x0000004008008000L});
    }


}