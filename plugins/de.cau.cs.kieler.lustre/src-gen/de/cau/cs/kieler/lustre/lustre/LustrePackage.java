/**
 * generated by Xtext 2.10.0
 */
package de.cau.cs.kieler.lustre.lustre;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see de.cau.cs.kieler.lustre.lustre.LustreFactory
 * @model kind="package"
 * @generated
 */
public interface LustrePackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "lustre";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.cau.de/cs/kieler/lustre/Lustre";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "lustre";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  LustrePackage eINSTANCE = de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl.init();

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.lustre.lustre.impl.ProgramImpl <em>Program</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.lustre.lustre.impl.ProgramImpl
   * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getProgram()
   * @generated
   */
  int PROGRAM = 0;

  /**
   * The feature id for the '<em><b>Nodes</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROGRAM__NODES = 0;

  /**
   * The number of structural features of the '<em>Program</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROGRAM_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.lustre.lustre.impl.Package_DeclarationImpl <em>Package Declaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.lustre.lustre.impl.Package_DeclarationImpl
   * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getPackage_Declaration()
   * @generated
   */
  int PACKAGE_DECLARATION = 1;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PACKAGE_DECLARATION__NAME = 0;

  /**
   * The feature id for the '<em><b>Uses</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PACKAGE_DECLARATION__USES = 1;

  /**
   * The feature id for the '<em><b>Provides</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PACKAGE_DECLARATION__PROVIDES = 2;

  /**
   * The feature id for the '<em><b>Nodes</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PACKAGE_DECLARATION__NODES = 3;

  /**
   * The feature id for the '<em><b>Types</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PACKAGE_DECLARATION__TYPES = 4;

  /**
   * The feature id for the '<em><b>Constants</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PACKAGE_DECLARATION__CONSTANTS = 5;

  /**
   * The number of structural features of the '<em>Package Declaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PACKAGE_DECLARATION_FEATURE_COUNT = 6;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.lustre.lustre.impl.Package_ProvidedImpl <em>Package Provided</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.lustre.lustre.impl.Package_ProvidedImpl
   * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getPackage_Provided()
   * @generated
   */
  int PACKAGE_PROVIDED = 2;

  /**
   * The feature id for the '<em><b>Name</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PACKAGE_PROVIDED__NAME = 0;

  /**
   * The feature id for the '<em><b>Parameters</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PACKAGE_PROVIDED__PARAMETERS = 1;

  /**
   * The feature id for the '<em><b>Returned</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PACKAGE_PROVIDED__RETURNED = 2;

  /**
   * The number of structural features of the '<em>Package Provided</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PACKAGE_PROVIDED_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.lustre.lustre.impl.Package_Provided_IOImpl <em>Package Provided IO</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.lustre.lustre.impl.Package_Provided_IOImpl
   * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getPackage_Provided_IO()
   * @generated
   */
  int PACKAGE_PROVIDED_IO = 3;

  /**
   * The feature id for the '<em><b>Name</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PACKAGE_PROVIDED_IO__NAME = 0;

  /**
   * The feature id for the '<em><b>Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PACKAGE_PROVIDED_IO__TYPE = 1;

  /**
   * The number of structural features of the '<em>Package Provided IO</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PACKAGE_PROVIDED_IO_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.lustre.lustre.impl.Entity_DeclarationImpl <em>Entity Declaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.lustre.lustre.impl.Entity_DeclarationImpl
   * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getEntity_Declaration()
   * @generated
   */
  int ENTITY_DECLARATION = 4;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENTITY_DECLARATION__NAME = 0;

  /**
   * The number of structural features of the '<em>Entity Declaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENTITY_DECLARATION_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.lustre.lustre.impl.Type_DeclarationImpl <em>Type Declaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.lustre.lustre.impl.Type_DeclarationImpl
   * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getType_Declaration()
   * @generated
   */
  int TYPE_DECLARATION = 5;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_DECLARATION__NAME = ENTITY_DECLARATION__NAME;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_DECLARATION__TYPE = ENTITY_DECLARATION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Type Declaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_DECLARATION_FEATURE_COUNT = ENTITY_DECLARATION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.lustre.lustre.impl.TypeImpl <em>Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.lustre.lustre.impl.TypeImpl
   * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getType()
   * @generated
   */
  int TYPE = 6;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE__NAME = 0;

  /**
   * The number of structural features of the '<em>Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.lustre.lustre.impl.Array_TypeImpl <em>Array Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.lustre.lustre.impl.Array_TypeImpl
   * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getArray_Type()
   * @generated
   */
  int ARRAY_TYPE = 7;

  /**
   * The feature id for the '<em><b>Type</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARRAY_TYPE__TYPE = 0;

  /**
   * The feature id for the '<em><b>Length</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARRAY_TYPE__LENGTH = 1;

  /**
   * The number of structural features of the '<em>Array Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARRAY_TYPE_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.lustre.lustre.impl.Record_TypeImpl <em>Record Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.lustre.lustre.impl.Record_TypeImpl
   * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getRecord_Type()
   * @generated
   */
  int RECORD_TYPE = 8;

  /**
   * The feature id for the '<em><b>Fields</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RECORD_TYPE__FIELDS = 0;

  /**
   * The number of structural features of the '<em>Record Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RECORD_TYPE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.lustre.lustre.impl.FieldImpl <em>Field</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.lustre.lustre.impl.FieldImpl
   * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getField()
   * @generated
   */
  int FIELD = 9;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FIELD__NAME = 0;

  /**
   * The feature id for the '<em><b>Type</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FIELD__TYPE = 1;

  /**
   * The number of structural features of the '<em>Field</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FIELD_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.lustre.lustre.impl.Constant_DeclarationImpl <em>Constant Declaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.lustre.lustre.impl.Constant_DeclarationImpl
   * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getConstant_Declaration()
   * @generated
   */
  int CONSTANT_DECLARATION = 10;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT_DECLARATION__NAME = ENTITY_DECLARATION__NAME;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT_DECLARATION__TYPE = ENTITY_DECLARATION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT_DECLARATION__EXPR = ENTITY_DECLARATION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Constant Declaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT_DECLARATION_FEATURE_COUNT = ENTITY_DECLARATION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.lustre.lustre.impl.Variable_DeclarationImpl <em>Variable Declaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.lustre.lustre.impl.Variable_DeclarationImpl
   * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getVariable_Declaration()
   * @generated
   */
  int VARIABLE_DECLARATION = 11;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_DECLARATION__NAME = 0;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_DECLARATION__TYPE = 1;

  /**
   * The feature id for the '<em><b>Clock</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_DECLARATION__CLOCK = 2;

  /**
   * The number of structural features of the '<em>Variable Declaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_DECLARATION_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.lustre.lustre.impl.Node_DeclarationImpl <em>Node Declaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.lustre.lustre.impl.Node_DeclarationImpl
   * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getNode_Declaration()
   * @generated
   */
  int NODE_DECLARATION = 12;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_DECLARATION__NAME = ENTITY_DECLARATION__NAME;

  /**
   * The feature id for the '<em><b>Parameters</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_DECLARATION__PARAMETERS = ENTITY_DECLARATION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Returned</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_DECLARATION__RETURNED = ENTITY_DECLARATION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Constants</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_DECLARATION__CONSTANTS = ENTITY_DECLARATION_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Variables</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_DECLARATION__VARIABLES = ENTITY_DECLARATION_FEATURE_COUNT + 3;

  /**
   * The feature id for the '<em><b>Equations</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_DECLARATION__EQUATIONS = ENTITY_DECLARATION_FEATURE_COUNT + 4;

  /**
   * The feature id for the '<em><b>Assertions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_DECLARATION__ASSERTIONS = ENTITY_DECLARATION_FEATURE_COUNT + 5;

  /**
   * The feature id for the '<em><b>Automatons</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_DECLARATION__AUTOMATONS = ENTITY_DECLARATION_FEATURE_COUNT + 6;

  /**
   * The number of structural features of the '<em>Node Declaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_DECLARATION_FEATURE_COUNT = ENTITY_DECLARATION_FEATURE_COUNT + 7;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.lustre.lustre.impl.EquationImpl <em>Equation</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.lustre.lustre.impl.EquationImpl
   * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getEquation()
   * @generated
   */
  int EQUATION = 13;

  /**
   * The feature id for the '<em><b>Left</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUATION__LEFT = 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUATION__RIGHT = 1;

  /**
   * The number of structural features of the '<em>Equation</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUATION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.lustre.lustre.impl.AssertionImpl <em>Assertion</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.lustre.lustre.impl.AssertionImpl
   * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getAssertion()
   * @generated
   */
  int ASSERTION = 14;

  /**
   * The number of structural features of the '<em>Assertion</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSERTION_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.lustre.lustre.impl.AutomatonImpl <em>Automaton</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.lustre.lustre.impl.AutomatonImpl
   * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getAutomaton()
   * @generated
   */
  int AUTOMATON = 15;

  /**
   * The feature id for the '<em><b>States</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AUTOMATON__STATES = 0;

  /**
   * The number of structural features of the '<em>Automaton</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AUTOMATON_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.lustre.lustre.impl.AStateImpl <em>AState</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.lustre.lustre.impl.AStateImpl
   * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getAState()
   * @generated
   */
  int ASTATE = 16;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASTATE__NAME = 0;

  /**
   * The feature id for the '<em><b>Equations</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASTATE__EQUATIONS = 1;

  /**
   * The feature id for the '<em><b>Assertions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASTATE__ASSERTIONS = 2;

  /**
   * The feature id for the '<em><b>Automatons</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASTATE__AUTOMATONS = 3;

  /**
   * The feature id for the '<em><b>Transitions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASTATE__TRANSITIONS = 4;

  /**
   * The number of structural features of the '<em>AState</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASTATE_FEATURE_COUNT = 5;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.lustre.lustre.impl.ATransitionImpl <em>ATransition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.lustre.lustre.impl.ATransitionImpl
   * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getATransition()
   * @generated
   */
  int ATRANSITION = 17;

  /**
   * The feature id for the '<em><b>Strong</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATRANSITION__STRONG = 0;

  /**
   * The feature id for the '<em><b>Condition</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATRANSITION__CONDITION = 1;

  /**
   * The feature id for the '<em><b>History</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATRANSITION__HISTORY = 2;

  /**
   * The feature id for the '<em><b>Next State</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATRANSITION__NEXT_STATE = 3;

  /**
   * The number of structural features of the '<em>ATransition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATRANSITION_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.lustre.lustre.impl.Left_PartImpl <em>Left Part</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.lustre.lustre.impl.Left_PartImpl
   * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getLeft_Part()
   * @generated
   */
  int LEFT_PART = 18;

  /**
   * The number of structural features of the '<em>Left Part</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LEFT_PART_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.lustre.lustre.impl.Left_ListImpl <em>Left List</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.lustre.lustre.impl.Left_ListImpl
   * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getLeft_List()
   * @generated
   */
  int LEFT_LIST = 19;

  /**
   * The feature id for the '<em><b>Id</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LEFT_LIST__ID = LEFT_PART_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Left List</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LEFT_LIST_FEATURE_COUNT = LEFT_PART_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.lustre.lustre.impl.LeftImpl <em>Left</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.lustre.lustre.impl.LeftImpl
   * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getLeft()
   * @generated
   */
  int LEFT = 20;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LEFT__NAME = 0;

  /**
   * The feature id for the '<em><b>Selector</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LEFT__SELECTOR = 1;

  /**
   * The number of structural features of the '<em>Left</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LEFT_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.lustre.lustre.impl.SelectorImpl <em>Selector</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.lustre.lustre.impl.SelectorImpl
   * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getSelector()
   * @generated
   */
  int SELECTOR = 21;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SELECTOR__NAME = 0;

  /**
   * The feature id for the '<em><b>Begin</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SELECTOR__BEGIN = 1;

  /**
   * The feature id for the '<em><b>End</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SELECTOR__END = 2;

  /**
   * The number of structural features of the '<em>Selector</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SELECTOR_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.lustre.lustre.impl.ExpressionImpl <em>Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.lustre.lustre.impl.ExpressionImpl
   * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getExpression()
   * @generated
   */
  int EXPRESSION = 22;

  /**
   * The number of structural features of the '<em>Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_FEATURE_COUNT = ASSERTION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.lustre.lustre.impl.VariableReferenceImpl <em>Variable Reference</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.lustre.lustre.impl.VariableReferenceImpl
   * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getVariableReference()
   * @generated
   */
  int VARIABLE_REFERENCE = 23;

  /**
   * The feature id for the '<em><b>Value</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_REFERENCE__VALUE = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Variable Reference</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_REFERENCE_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.lustre.lustre.impl.IfThenElseImpl <em>If Then Else</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.lustre.lustre.impl.IfThenElseImpl
   * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getIfThenElse()
   * @generated
   */
  int IF_THEN_ELSE = 24;

  /**
   * The feature id for the '<em><b>Ifexpr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_THEN_ELSE__IFEXPR = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Thenexpr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_THEN_ELSE__THENEXPR = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Elseexpr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_THEN_ELSE__ELSEEXPR = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>If Then Else</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_THEN_ELSE_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.lustre.lustre.impl.FbyImpl <em>Fby</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.lustre.lustre.impl.FbyImpl
   * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getFby()
   * @generated
   */
  int FBY = 25;

  /**
   * The feature id for the '<em><b>Sub Expressions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FBY__SUB_EXPRESSIONS = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Fby</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FBY_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.lustre.lustre.impl.ArrowImpl <em>Arrow</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.lustre.lustre.impl.ArrowImpl
   * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getArrow()
   * @generated
   */
  int ARROW = 26;

  /**
   * The feature id for the '<em><b>Sub Expressions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARROW__SUB_EXPRESSIONS = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Arrow</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARROW_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.lustre.lustre.impl.OrImpl <em>Or</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.lustre.lustre.impl.OrImpl
   * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getOr()
   * @generated
   */
  int OR = 27;

  /**
   * The feature id for the '<em><b>Sub Expressions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OR__SUB_EXPRESSIONS = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Or</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OR_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.lustre.lustre.impl.AndImpl <em>And</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.lustre.lustre.impl.AndImpl
   * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getAnd()
   * @generated
   */
  int AND = 28;

  /**
   * The feature id for the '<em><b>Sub Expressions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND__SUB_EXPRESSIONS = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>And</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.lustre.lustre.impl.EqualityImpl <em>Equality</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.lustre.lustre.impl.EqualityImpl
   * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getEquality()
   * @generated
   */
  int EQUALITY = 29;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUALITY__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUALITY__OP = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUALITY__RIGHT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Equality</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUALITY_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.lustre.lustre.impl.ComparisonImpl <em>Comparison</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.lustre.lustre.impl.ComparisonImpl
   * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getComparison()
   * @generated
   */
  int COMPARISON = 30;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARISON__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARISON__OP = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARISON__RIGHT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Comparison</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARISON_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.lustre.lustre.impl.ModImpl <em>Mod</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.lustre.lustre.impl.ModImpl
   * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getMod()
   * @generated
   */
  int MOD = 31;

  /**
   * The feature id for the '<em><b>Sub Expressions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MOD__SUB_EXPRESSIONS = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Mod</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MOD_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.lustre.lustre.impl.PlusImpl <em>Plus</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.lustre.lustre.impl.PlusImpl
   * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getPlus()
   * @generated
   */
  int PLUS = 32;

  /**
   * The feature id for the '<em><b>Sub Expressions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PLUS__SUB_EXPRESSIONS = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Plus</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PLUS_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.lustre.lustre.impl.MinusImpl <em>Minus</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.lustre.lustre.impl.MinusImpl
   * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getMinus()
   * @generated
   */
  int MINUS = 33;

  /**
   * The feature id for the '<em><b>Sub Expressions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MINUS__SUB_EXPRESSIONS = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Minus</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MINUS_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.lustre.lustre.impl.MulImpl <em>Mul</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.lustre.lustre.impl.MulImpl
   * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getMul()
   * @generated
   */
  int MUL = 34;

  /**
   * The feature id for the '<em><b>Sub Expressions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MUL__SUB_EXPRESSIONS = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Mul</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MUL_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.lustre.lustre.impl.DivImpl <em>Div</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.lustre.lustre.impl.DivImpl
   * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getDiv()
   * @generated
   */
  int DIV = 35;

  /**
   * The feature id for the '<em><b>Sub Expressions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIV__SUB_EXPRESSIONS = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Div</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIV_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.lustre.lustre.impl.NotImpl <em>Not</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.lustre.lustre.impl.NotImpl
   * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getNot()
   * @generated
   */
  int NOT = 36;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NOT__EXPRESSION = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Not</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NOT_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.lustre.lustre.impl.UMinusImpl <em>UMinus</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.lustre.lustre.impl.UMinusImpl
   * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getUMinus()
   * @generated
   */
  int UMINUS = 37;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UMINUS__EXPRESSION = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>UMinus</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UMINUS_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.lustre.lustre.impl.PreImpl <em>Pre</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.lustre.lustre.impl.PreImpl
   * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getPre()
   * @generated
   */
  int PRE = 38;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRE__EXPRESSION = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Pre</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRE_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.lustre.lustre.impl.CurrentImpl <em>Current</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.lustre.lustre.impl.CurrentImpl
   * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getCurrent()
   * @generated
   */
  int CURRENT = 39;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CURRENT__EXPRESSION = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Current</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CURRENT_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.lustre.lustre.impl.BoolConstantImpl <em>Bool Constant</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.lustre.lustre.impl.BoolConstantImpl
   * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getBoolConstant()
   * @generated
   */
  int BOOL_CONSTANT = 40;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOL_CONSTANT__VALUE = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Bool Constant</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOL_CONSTANT_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.lustre.lustre.impl.FloatConstantImpl <em>Float Constant</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.lustre.lustre.impl.FloatConstantImpl
   * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getFloatConstant()
   * @generated
   */
  int FLOAT_CONSTANT = 41;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FLOAT_CONSTANT__VALUE = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Float Constant</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FLOAT_CONSTANT_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.lustre.lustre.impl.IntConstantImpl <em>Int Constant</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.lustre.lustre.impl.IntConstantImpl
   * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getIntConstant()
   * @generated
   */
  int INT_CONSTANT = 42;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INT_CONSTANT__VALUE = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Int Constant</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INT_CONSTANT_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;


  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.lustre.lustre.Program <em>Program</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Program</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Program
   * @generated
   */
  EClass getProgram();

  /**
   * Returns the meta object for the containment reference list '{@link de.cau.cs.kieler.lustre.lustre.Program#getNodes <em>Nodes</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Nodes</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Program#getNodes()
   * @see #getProgram()
   * @generated
   */
  EReference getProgram_Nodes();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.lustre.lustre.Package_Declaration <em>Package Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Package Declaration</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Package_Declaration
   * @generated
   */
  EClass getPackage_Declaration();

  /**
   * Returns the meta object for the attribute '{@link de.cau.cs.kieler.lustre.lustre.Package_Declaration#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Package_Declaration#getName()
   * @see #getPackage_Declaration()
   * @generated
   */
  EAttribute getPackage_Declaration_Name();

  /**
   * Returns the meta object for the attribute list '{@link de.cau.cs.kieler.lustre.lustre.Package_Declaration#getUses <em>Uses</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Uses</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Package_Declaration#getUses()
   * @see #getPackage_Declaration()
   * @generated
   */
  EAttribute getPackage_Declaration_Uses();

  /**
   * Returns the meta object for the containment reference list '{@link de.cau.cs.kieler.lustre.lustre.Package_Declaration#getProvides <em>Provides</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Provides</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Package_Declaration#getProvides()
   * @see #getPackage_Declaration()
   * @generated
   */
  EReference getPackage_Declaration_Provides();

  /**
   * Returns the meta object for the containment reference list '{@link de.cau.cs.kieler.lustre.lustre.Package_Declaration#getNodes <em>Nodes</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Nodes</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Package_Declaration#getNodes()
   * @see #getPackage_Declaration()
   * @generated
   */
  EReference getPackage_Declaration_Nodes();

  /**
   * Returns the meta object for the containment reference list '{@link de.cau.cs.kieler.lustre.lustre.Package_Declaration#getTypes <em>Types</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Types</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Package_Declaration#getTypes()
   * @see #getPackage_Declaration()
   * @generated
   */
  EReference getPackage_Declaration_Types();

  /**
   * Returns the meta object for the containment reference list '{@link de.cau.cs.kieler.lustre.lustre.Package_Declaration#getConstants <em>Constants</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Constants</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Package_Declaration#getConstants()
   * @see #getPackage_Declaration()
   * @generated
   */
  EReference getPackage_Declaration_Constants();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.lustre.lustre.Package_Provided <em>Package Provided</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Package Provided</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Package_Provided
   * @generated
   */
  EClass getPackage_Provided();

  /**
   * Returns the meta object for the reference '{@link de.cau.cs.kieler.lustre.lustre.Package_Provided#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Name</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Package_Provided#getName()
   * @see #getPackage_Provided()
   * @generated
   */
  EReference getPackage_Provided_Name();

  /**
   * Returns the meta object for the containment reference list '{@link de.cau.cs.kieler.lustre.lustre.Package_Provided#getParameters <em>Parameters</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Parameters</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Package_Provided#getParameters()
   * @see #getPackage_Provided()
   * @generated
   */
  EReference getPackage_Provided_Parameters();

  /**
   * Returns the meta object for the containment reference list '{@link de.cau.cs.kieler.lustre.lustre.Package_Provided#getReturned <em>Returned</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Returned</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Package_Provided#getReturned()
   * @see #getPackage_Provided()
   * @generated
   */
  EReference getPackage_Provided_Returned();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.lustre.lustre.Package_Provided_IO <em>Package Provided IO</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Package Provided IO</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Package_Provided_IO
   * @generated
   */
  EClass getPackage_Provided_IO();

  /**
   * Returns the meta object for the reference '{@link de.cau.cs.kieler.lustre.lustre.Package_Provided_IO#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Name</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Package_Provided_IO#getName()
   * @see #getPackage_Provided_IO()
   * @generated
   */
  EReference getPackage_Provided_IO_Name();

  /**
   * Returns the meta object for the attribute '{@link de.cau.cs.kieler.lustre.lustre.Package_Provided_IO#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Type</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Package_Provided_IO#getType()
   * @see #getPackage_Provided_IO()
   * @generated
   */
  EAttribute getPackage_Provided_IO_Type();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.lustre.lustre.Entity_Declaration <em>Entity Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Entity Declaration</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Entity_Declaration
   * @generated
   */
  EClass getEntity_Declaration();

  /**
   * Returns the meta object for the attribute '{@link de.cau.cs.kieler.lustre.lustre.Entity_Declaration#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Entity_Declaration#getName()
   * @see #getEntity_Declaration()
   * @generated
   */
  EAttribute getEntity_Declaration_Name();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.lustre.lustre.Type_Declaration <em>Type Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Type Declaration</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Type_Declaration
   * @generated
   */
  EClass getType_Declaration();

  /**
   * Returns the meta object for the containment reference '{@link de.cau.cs.kieler.lustre.lustre.Type_Declaration#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Type_Declaration#getType()
   * @see #getType_Declaration()
   * @generated
   */
  EReference getType_Declaration_Type();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.lustre.lustre.Type <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Type</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Type
   * @generated
   */
  EClass getType();

  /**
   * Returns the meta object for the attribute '{@link de.cau.cs.kieler.lustre.lustre.Type#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Type#getName()
   * @see #getType()
   * @generated
   */
  EAttribute getType_Name();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.lustre.lustre.Array_Type <em>Array Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Array Type</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Array_Type
   * @generated
   */
  EClass getArray_Type();

  /**
   * Returns the meta object for the reference '{@link de.cau.cs.kieler.lustre.lustre.Array_Type#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Type</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Array_Type#getType()
   * @see #getArray_Type()
   * @generated
   */
  EReference getArray_Type_Type();

  /**
   * Returns the meta object for the attribute '{@link de.cau.cs.kieler.lustre.lustre.Array_Type#getLength <em>Length</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Length</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Array_Type#getLength()
   * @see #getArray_Type()
   * @generated
   */
  EAttribute getArray_Type_Length();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.lustre.lustre.Record_Type <em>Record Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Record Type</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Record_Type
   * @generated
   */
  EClass getRecord_Type();

  /**
   * Returns the meta object for the containment reference list '{@link de.cau.cs.kieler.lustre.lustre.Record_Type#getFields <em>Fields</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Fields</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Record_Type#getFields()
   * @see #getRecord_Type()
   * @generated
   */
  EReference getRecord_Type_Fields();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.lustre.lustre.Field <em>Field</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Field</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Field
   * @generated
   */
  EClass getField();

  /**
   * Returns the meta object for the attribute '{@link de.cau.cs.kieler.lustre.lustre.Field#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Field#getName()
   * @see #getField()
   * @generated
   */
  EAttribute getField_Name();

  /**
   * Returns the meta object for the reference '{@link de.cau.cs.kieler.lustre.lustre.Field#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Type</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Field#getType()
   * @see #getField()
   * @generated
   */
  EReference getField_Type();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.lustre.lustre.Constant_Declaration <em>Constant Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Constant Declaration</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Constant_Declaration
   * @generated
   */
  EClass getConstant_Declaration();

  /**
   * Returns the meta object for the containment reference '{@link de.cau.cs.kieler.lustre.lustre.Constant_Declaration#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Constant_Declaration#getType()
   * @see #getConstant_Declaration()
   * @generated
   */
  EReference getConstant_Declaration_Type();

  /**
   * Returns the meta object for the containment reference '{@link de.cau.cs.kieler.lustre.lustre.Constant_Declaration#getExpr <em>Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expr</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Constant_Declaration#getExpr()
   * @see #getConstant_Declaration()
   * @generated
   */
  EReference getConstant_Declaration_Expr();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.lustre.lustre.Variable_Declaration <em>Variable Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Variable Declaration</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Variable_Declaration
   * @generated
   */
  EClass getVariable_Declaration();

  /**
   * Returns the meta object for the attribute '{@link de.cau.cs.kieler.lustre.lustre.Variable_Declaration#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Variable_Declaration#getName()
   * @see #getVariable_Declaration()
   * @generated
   */
  EAttribute getVariable_Declaration_Name();

  /**
   * Returns the meta object for the containment reference '{@link de.cau.cs.kieler.lustre.lustre.Variable_Declaration#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Variable_Declaration#getType()
   * @see #getVariable_Declaration()
   * @generated
   */
  EReference getVariable_Declaration_Type();

  /**
   * Returns the meta object for the attribute '{@link de.cau.cs.kieler.lustre.lustre.Variable_Declaration#getClock <em>Clock</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Clock</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Variable_Declaration#getClock()
   * @see #getVariable_Declaration()
   * @generated
   */
  EAttribute getVariable_Declaration_Clock();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.lustre.lustre.Node_Declaration <em>Node Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Node Declaration</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Node_Declaration
   * @generated
   */
  EClass getNode_Declaration();

  /**
   * Returns the meta object for the containment reference list '{@link de.cau.cs.kieler.lustre.lustre.Node_Declaration#getParameters <em>Parameters</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Parameters</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Node_Declaration#getParameters()
   * @see #getNode_Declaration()
   * @generated
   */
  EReference getNode_Declaration_Parameters();

  /**
   * Returns the meta object for the containment reference list '{@link de.cau.cs.kieler.lustre.lustre.Node_Declaration#getReturned <em>Returned</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Returned</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Node_Declaration#getReturned()
   * @see #getNode_Declaration()
   * @generated
   */
  EReference getNode_Declaration_Returned();

  /**
   * Returns the meta object for the containment reference list '{@link de.cau.cs.kieler.lustre.lustre.Node_Declaration#getConstants <em>Constants</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Constants</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Node_Declaration#getConstants()
   * @see #getNode_Declaration()
   * @generated
   */
  EReference getNode_Declaration_Constants();

  /**
   * Returns the meta object for the containment reference list '{@link de.cau.cs.kieler.lustre.lustre.Node_Declaration#getVariables <em>Variables</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Variables</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Node_Declaration#getVariables()
   * @see #getNode_Declaration()
   * @generated
   */
  EReference getNode_Declaration_Variables();

  /**
   * Returns the meta object for the containment reference list '{@link de.cau.cs.kieler.lustre.lustre.Node_Declaration#getEquations <em>Equations</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Equations</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Node_Declaration#getEquations()
   * @see #getNode_Declaration()
   * @generated
   */
  EReference getNode_Declaration_Equations();

  /**
   * Returns the meta object for the containment reference list '{@link de.cau.cs.kieler.lustre.lustre.Node_Declaration#getAssertions <em>Assertions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Assertions</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Node_Declaration#getAssertions()
   * @see #getNode_Declaration()
   * @generated
   */
  EReference getNode_Declaration_Assertions();

  /**
   * Returns the meta object for the containment reference list '{@link de.cau.cs.kieler.lustre.lustre.Node_Declaration#getAutomatons <em>Automatons</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Automatons</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Node_Declaration#getAutomatons()
   * @see #getNode_Declaration()
   * @generated
   */
  EReference getNode_Declaration_Automatons();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.lustre.lustre.Equation <em>Equation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Equation</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Equation
   * @generated
   */
  EClass getEquation();

  /**
   * Returns the meta object for the reference '{@link de.cau.cs.kieler.lustre.lustre.Equation#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Left</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Equation#getLeft()
   * @see #getEquation()
   * @generated
   */
  EReference getEquation_Left();

  /**
   * Returns the meta object for the containment reference '{@link de.cau.cs.kieler.lustre.lustre.Equation#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Equation#getRight()
   * @see #getEquation()
   * @generated
   */
  EReference getEquation_Right();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.lustre.lustre.Assertion <em>Assertion</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Assertion</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Assertion
   * @generated
   */
  EClass getAssertion();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.lustre.lustre.Automaton <em>Automaton</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Automaton</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Automaton
   * @generated
   */
  EClass getAutomaton();

  /**
   * Returns the meta object for the containment reference list '{@link de.cau.cs.kieler.lustre.lustre.Automaton#getStates <em>States</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>States</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Automaton#getStates()
   * @see #getAutomaton()
   * @generated
   */
  EReference getAutomaton_States();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.lustre.lustre.AState <em>AState</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>AState</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.AState
   * @generated
   */
  EClass getAState();

  /**
   * Returns the meta object for the attribute '{@link de.cau.cs.kieler.lustre.lustre.AState#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.AState#getName()
   * @see #getAState()
   * @generated
   */
  EAttribute getAState_Name();

  /**
   * Returns the meta object for the containment reference list '{@link de.cau.cs.kieler.lustre.lustre.AState#getEquations <em>Equations</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Equations</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.AState#getEquations()
   * @see #getAState()
   * @generated
   */
  EReference getAState_Equations();

  /**
   * Returns the meta object for the containment reference list '{@link de.cau.cs.kieler.lustre.lustre.AState#getAssertions <em>Assertions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Assertions</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.AState#getAssertions()
   * @see #getAState()
   * @generated
   */
  EReference getAState_Assertions();

  /**
   * Returns the meta object for the containment reference list '{@link de.cau.cs.kieler.lustre.lustre.AState#getAutomatons <em>Automatons</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Automatons</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.AState#getAutomatons()
   * @see #getAState()
   * @generated
   */
  EReference getAState_Automatons();

  /**
   * Returns the meta object for the containment reference list '{@link de.cau.cs.kieler.lustre.lustre.AState#getTransitions <em>Transitions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Transitions</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.AState#getTransitions()
   * @see #getAState()
   * @generated
   */
  EReference getAState_Transitions();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.lustre.lustre.ATransition <em>ATransition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>ATransition</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.ATransition
   * @generated
   */
  EClass getATransition();

  /**
   * Returns the meta object for the attribute '{@link de.cau.cs.kieler.lustre.lustre.ATransition#isStrong <em>Strong</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Strong</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.ATransition#isStrong()
   * @see #getATransition()
   * @generated
   */
  EAttribute getATransition_Strong();

  /**
   * Returns the meta object for the containment reference '{@link de.cau.cs.kieler.lustre.lustre.ATransition#getCondition <em>Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Condition</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.ATransition#getCondition()
   * @see #getATransition()
   * @generated
   */
  EReference getATransition_Condition();

  /**
   * Returns the meta object for the attribute '{@link de.cau.cs.kieler.lustre.lustre.ATransition#isHistory <em>History</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>History</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.ATransition#isHistory()
   * @see #getATransition()
   * @generated
   */
  EAttribute getATransition_History();

  /**
   * Returns the meta object for the reference '{@link de.cau.cs.kieler.lustre.lustre.ATransition#getNextState <em>Next State</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Next State</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.ATransition#getNextState()
   * @see #getATransition()
   * @generated
   */
  EReference getATransition_NextState();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.lustre.lustre.Left_Part <em>Left Part</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Left Part</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Left_Part
   * @generated
   */
  EClass getLeft_Part();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.lustre.lustre.Left_List <em>Left List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Left List</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Left_List
   * @generated
   */
  EClass getLeft_List();

  /**
   * Returns the meta object for the containment reference list '{@link de.cau.cs.kieler.lustre.lustre.Left_List#getId <em>Id</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Id</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Left_List#getId()
   * @see #getLeft_List()
   * @generated
   */
  EReference getLeft_List_Id();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.lustre.lustre.Left <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Left</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Left
   * @generated
   */
  EClass getLeft();

  /**
   * Returns the meta object for the attribute '{@link de.cau.cs.kieler.lustre.lustre.Left#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Left#getName()
   * @see #getLeft()
   * @generated
   */
  EAttribute getLeft_Name();

  /**
   * Returns the meta object for the containment reference '{@link de.cau.cs.kieler.lustre.lustre.Left#getSelector <em>Selector</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Selector</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Left#getSelector()
   * @see #getLeft()
   * @generated
   */
  EReference getLeft_Selector();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.lustre.lustre.Selector <em>Selector</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Selector</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Selector
   * @generated
   */
  EClass getSelector();

  /**
   * Returns the meta object for the attribute '{@link de.cau.cs.kieler.lustre.lustre.Selector#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Selector#getName()
   * @see #getSelector()
   * @generated
   */
  EAttribute getSelector_Name();

  /**
   * Returns the meta object for the containment reference '{@link de.cau.cs.kieler.lustre.lustre.Selector#getBegin <em>Begin</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Begin</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Selector#getBegin()
   * @see #getSelector()
   * @generated
   */
  EReference getSelector_Begin();

  /**
   * Returns the meta object for the containment reference '{@link de.cau.cs.kieler.lustre.lustre.Selector#getEnd <em>End</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>End</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Selector#getEnd()
   * @see #getSelector()
   * @generated
   */
  EReference getSelector_End();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.lustre.lustre.Expression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Expression
   * @generated
   */
  EClass getExpression();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.lustre.lustre.VariableReference <em>Variable Reference</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Variable Reference</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.VariableReference
   * @generated
   */
  EClass getVariableReference();

  /**
   * Returns the meta object for the reference '{@link de.cau.cs.kieler.lustre.lustre.VariableReference#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Value</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.VariableReference#getValue()
   * @see #getVariableReference()
   * @generated
   */
  EReference getVariableReference_Value();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.lustre.lustre.IfThenElse <em>If Then Else</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>If Then Else</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.IfThenElse
   * @generated
   */
  EClass getIfThenElse();

  /**
   * Returns the meta object for the containment reference '{@link de.cau.cs.kieler.lustre.lustre.IfThenElse#getIfexpr <em>Ifexpr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Ifexpr</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.IfThenElse#getIfexpr()
   * @see #getIfThenElse()
   * @generated
   */
  EReference getIfThenElse_Ifexpr();

  /**
   * Returns the meta object for the containment reference '{@link de.cau.cs.kieler.lustre.lustre.IfThenElse#getThenexpr <em>Thenexpr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Thenexpr</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.IfThenElse#getThenexpr()
   * @see #getIfThenElse()
   * @generated
   */
  EReference getIfThenElse_Thenexpr();

  /**
   * Returns the meta object for the containment reference '{@link de.cau.cs.kieler.lustre.lustre.IfThenElse#getElseexpr <em>Elseexpr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Elseexpr</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.IfThenElse#getElseexpr()
   * @see #getIfThenElse()
   * @generated
   */
  EReference getIfThenElse_Elseexpr();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.lustre.lustre.Fby <em>Fby</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Fby</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Fby
   * @generated
   */
  EClass getFby();

  /**
   * Returns the meta object for the containment reference list '{@link de.cau.cs.kieler.lustre.lustre.Fby#getSubExpressions <em>Sub Expressions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Sub Expressions</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Fby#getSubExpressions()
   * @see #getFby()
   * @generated
   */
  EReference getFby_SubExpressions();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.lustre.lustre.Arrow <em>Arrow</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Arrow</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Arrow
   * @generated
   */
  EClass getArrow();

  /**
   * Returns the meta object for the containment reference list '{@link de.cau.cs.kieler.lustre.lustre.Arrow#getSubExpressions <em>Sub Expressions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Sub Expressions</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Arrow#getSubExpressions()
   * @see #getArrow()
   * @generated
   */
  EReference getArrow_SubExpressions();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.lustre.lustre.Or <em>Or</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Or</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Or
   * @generated
   */
  EClass getOr();

  /**
   * Returns the meta object for the containment reference list '{@link de.cau.cs.kieler.lustre.lustre.Or#getSubExpressions <em>Sub Expressions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Sub Expressions</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Or#getSubExpressions()
   * @see #getOr()
   * @generated
   */
  EReference getOr_SubExpressions();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.lustre.lustre.And <em>And</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>And</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.And
   * @generated
   */
  EClass getAnd();

  /**
   * Returns the meta object for the containment reference list '{@link de.cau.cs.kieler.lustre.lustre.And#getSubExpressions <em>Sub Expressions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Sub Expressions</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.And#getSubExpressions()
   * @see #getAnd()
   * @generated
   */
  EReference getAnd_SubExpressions();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.lustre.lustre.Equality <em>Equality</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Equality</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Equality
   * @generated
   */
  EClass getEquality();

  /**
   * Returns the meta object for the containment reference '{@link de.cau.cs.kieler.lustre.lustre.Equality#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Equality#getLeft()
   * @see #getEquality()
   * @generated
   */
  EReference getEquality_Left();

  /**
   * Returns the meta object for the attribute '{@link de.cau.cs.kieler.lustre.lustre.Equality#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Equality#getOp()
   * @see #getEquality()
   * @generated
   */
  EAttribute getEquality_Op();

  /**
   * Returns the meta object for the containment reference '{@link de.cau.cs.kieler.lustre.lustre.Equality#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Equality#getRight()
   * @see #getEquality()
   * @generated
   */
  EReference getEquality_Right();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.lustre.lustre.Comparison <em>Comparison</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Comparison</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Comparison
   * @generated
   */
  EClass getComparison();

  /**
   * Returns the meta object for the containment reference '{@link de.cau.cs.kieler.lustre.lustre.Comparison#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Comparison#getLeft()
   * @see #getComparison()
   * @generated
   */
  EReference getComparison_Left();

  /**
   * Returns the meta object for the attribute '{@link de.cau.cs.kieler.lustre.lustre.Comparison#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Comparison#getOp()
   * @see #getComparison()
   * @generated
   */
  EAttribute getComparison_Op();

  /**
   * Returns the meta object for the containment reference '{@link de.cau.cs.kieler.lustre.lustre.Comparison#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Comparison#getRight()
   * @see #getComparison()
   * @generated
   */
  EReference getComparison_Right();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.lustre.lustre.Mod <em>Mod</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Mod</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Mod
   * @generated
   */
  EClass getMod();

  /**
   * Returns the meta object for the containment reference list '{@link de.cau.cs.kieler.lustre.lustre.Mod#getSubExpressions <em>Sub Expressions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Sub Expressions</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Mod#getSubExpressions()
   * @see #getMod()
   * @generated
   */
  EReference getMod_SubExpressions();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.lustre.lustre.Plus <em>Plus</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Plus</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Plus
   * @generated
   */
  EClass getPlus();

  /**
   * Returns the meta object for the containment reference list '{@link de.cau.cs.kieler.lustre.lustre.Plus#getSubExpressions <em>Sub Expressions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Sub Expressions</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Plus#getSubExpressions()
   * @see #getPlus()
   * @generated
   */
  EReference getPlus_SubExpressions();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.lustre.lustre.Minus <em>Minus</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Minus</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Minus
   * @generated
   */
  EClass getMinus();

  /**
   * Returns the meta object for the containment reference list '{@link de.cau.cs.kieler.lustre.lustre.Minus#getSubExpressions <em>Sub Expressions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Sub Expressions</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Minus#getSubExpressions()
   * @see #getMinus()
   * @generated
   */
  EReference getMinus_SubExpressions();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.lustre.lustre.Mul <em>Mul</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Mul</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Mul
   * @generated
   */
  EClass getMul();

  /**
   * Returns the meta object for the containment reference list '{@link de.cau.cs.kieler.lustre.lustre.Mul#getSubExpressions <em>Sub Expressions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Sub Expressions</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Mul#getSubExpressions()
   * @see #getMul()
   * @generated
   */
  EReference getMul_SubExpressions();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.lustre.lustre.Div <em>Div</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Div</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Div
   * @generated
   */
  EClass getDiv();

  /**
   * Returns the meta object for the containment reference list '{@link de.cau.cs.kieler.lustre.lustre.Div#getSubExpressions <em>Sub Expressions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Sub Expressions</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Div#getSubExpressions()
   * @see #getDiv()
   * @generated
   */
  EReference getDiv_SubExpressions();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.lustre.lustre.Not <em>Not</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Not</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Not
   * @generated
   */
  EClass getNot();

  /**
   * Returns the meta object for the containment reference '{@link de.cau.cs.kieler.lustre.lustre.Not#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Not#getExpression()
   * @see #getNot()
   * @generated
   */
  EReference getNot_Expression();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.lustre.lustre.UMinus <em>UMinus</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>UMinus</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.UMinus
   * @generated
   */
  EClass getUMinus();

  /**
   * Returns the meta object for the containment reference '{@link de.cau.cs.kieler.lustre.lustre.UMinus#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.UMinus#getExpression()
   * @see #getUMinus()
   * @generated
   */
  EReference getUMinus_Expression();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.lustre.lustre.Pre <em>Pre</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Pre</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Pre
   * @generated
   */
  EClass getPre();

  /**
   * Returns the meta object for the containment reference '{@link de.cau.cs.kieler.lustre.lustre.Pre#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Pre#getExpression()
   * @see #getPre()
   * @generated
   */
  EReference getPre_Expression();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.lustre.lustre.Current <em>Current</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Current</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Current
   * @generated
   */
  EClass getCurrent();

  /**
   * Returns the meta object for the containment reference '{@link de.cau.cs.kieler.lustre.lustre.Current#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Current#getExpression()
   * @see #getCurrent()
   * @generated
   */
  EReference getCurrent_Expression();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.lustre.lustre.BoolConstant <em>Bool Constant</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Bool Constant</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.BoolConstant
   * @generated
   */
  EClass getBoolConstant();

  /**
   * Returns the meta object for the attribute '{@link de.cau.cs.kieler.lustre.lustre.BoolConstant#isValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.BoolConstant#isValue()
   * @see #getBoolConstant()
   * @generated
   */
  EAttribute getBoolConstant_Value();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.lustre.lustre.FloatConstant <em>Float Constant</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Float Constant</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.FloatConstant
   * @generated
   */
  EClass getFloatConstant();

  /**
   * Returns the meta object for the attribute '{@link de.cau.cs.kieler.lustre.lustre.FloatConstant#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.FloatConstant#getValue()
   * @see #getFloatConstant()
   * @generated
   */
  EAttribute getFloatConstant_Value();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.lustre.lustre.IntConstant <em>Int Constant</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Int Constant</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.IntConstant
   * @generated
   */
  EClass getIntConstant();

  /**
   * Returns the meta object for the attribute '{@link de.cau.cs.kieler.lustre.lustre.IntConstant#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.IntConstant#getValue()
   * @see #getIntConstant()
   * @generated
   */
  EAttribute getIntConstant_Value();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  LustreFactory getLustreFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.lustre.lustre.impl.ProgramImpl <em>Program</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.lustre.lustre.impl.ProgramImpl
     * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getProgram()
     * @generated
     */
    EClass PROGRAM = eINSTANCE.getProgram();

    /**
     * The meta object literal for the '<em><b>Nodes</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PROGRAM__NODES = eINSTANCE.getProgram_Nodes();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.lustre.lustre.impl.Package_DeclarationImpl <em>Package Declaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.lustre.lustre.impl.Package_DeclarationImpl
     * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getPackage_Declaration()
     * @generated
     */
    EClass PACKAGE_DECLARATION = eINSTANCE.getPackage_Declaration();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PACKAGE_DECLARATION__NAME = eINSTANCE.getPackage_Declaration_Name();

    /**
     * The meta object literal for the '<em><b>Uses</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PACKAGE_DECLARATION__USES = eINSTANCE.getPackage_Declaration_Uses();

    /**
     * The meta object literal for the '<em><b>Provides</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PACKAGE_DECLARATION__PROVIDES = eINSTANCE.getPackage_Declaration_Provides();

    /**
     * The meta object literal for the '<em><b>Nodes</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PACKAGE_DECLARATION__NODES = eINSTANCE.getPackage_Declaration_Nodes();

    /**
     * The meta object literal for the '<em><b>Types</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PACKAGE_DECLARATION__TYPES = eINSTANCE.getPackage_Declaration_Types();

    /**
     * The meta object literal for the '<em><b>Constants</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PACKAGE_DECLARATION__CONSTANTS = eINSTANCE.getPackage_Declaration_Constants();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.lustre.lustre.impl.Package_ProvidedImpl <em>Package Provided</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.lustre.lustre.impl.Package_ProvidedImpl
     * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getPackage_Provided()
     * @generated
     */
    EClass PACKAGE_PROVIDED = eINSTANCE.getPackage_Provided();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PACKAGE_PROVIDED__NAME = eINSTANCE.getPackage_Provided_Name();

    /**
     * The meta object literal for the '<em><b>Parameters</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PACKAGE_PROVIDED__PARAMETERS = eINSTANCE.getPackage_Provided_Parameters();

    /**
     * The meta object literal for the '<em><b>Returned</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PACKAGE_PROVIDED__RETURNED = eINSTANCE.getPackage_Provided_Returned();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.lustre.lustre.impl.Package_Provided_IOImpl <em>Package Provided IO</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.lustre.lustre.impl.Package_Provided_IOImpl
     * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getPackage_Provided_IO()
     * @generated
     */
    EClass PACKAGE_PROVIDED_IO = eINSTANCE.getPackage_Provided_IO();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PACKAGE_PROVIDED_IO__NAME = eINSTANCE.getPackage_Provided_IO_Name();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PACKAGE_PROVIDED_IO__TYPE = eINSTANCE.getPackage_Provided_IO_Type();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.lustre.lustre.impl.Entity_DeclarationImpl <em>Entity Declaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.lustre.lustre.impl.Entity_DeclarationImpl
     * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getEntity_Declaration()
     * @generated
     */
    EClass ENTITY_DECLARATION = eINSTANCE.getEntity_Declaration();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ENTITY_DECLARATION__NAME = eINSTANCE.getEntity_Declaration_Name();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.lustre.lustre.impl.Type_DeclarationImpl <em>Type Declaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.lustre.lustre.impl.Type_DeclarationImpl
     * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getType_Declaration()
     * @generated
     */
    EClass TYPE_DECLARATION = eINSTANCE.getType_Declaration();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TYPE_DECLARATION__TYPE = eINSTANCE.getType_Declaration_Type();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.lustre.lustre.impl.TypeImpl <em>Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.lustre.lustre.impl.TypeImpl
     * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getType()
     * @generated
     */
    EClass TYPE = eINSTANCE.getType();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TYPE__NAME = eINSTANCE.getType_Name();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.lustre.lustre.impl.Array_TypeImpl <em>Array Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.lustre.lustre.impl.Array_TypeImpl
     * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getArray_Type()
     * @generated
     */
    EClass ARRAY_TYPE = eINSTANCE.getArray_Type();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ARRAY_TYPE__TYPE = eINSTANCE.getArray_Type_Type();

    /**
     * The meta object literal for the '<em><b>Length</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ARRAY_TYPE__LENGTH = eINSTANCE.getArray_Type_Length();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.lustre.lustre.impl.Record_TypeImpl <em>Record Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.lustre.lustre.impl.Record_TypeImpl
     * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getRecord_Type()
     * @generated
     */
    EClass RECORD_TYPE = eINSTANCE.getRecord_Type();

    /**
     * The meta object literal for the '<em><b>Fields</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RECORD_TYPE__FIELDS = eINSTANCE.getRecord_Type_Fields();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.lustre.lustre.impl.FieldImpl <em>Field</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.lustre.lustre.impl.FieldImpl
     * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getField()
     * @generated
     */
    EClass FIELD = eINSTANCE.getField();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FIELD__NAME = eINSTANCE.getField_Name();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FIELD__TYPE = eINSTANCE.getField_Type();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.lustre.lustre.impl.Constant_DeclarationImpl <em>Constant Declaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.lustre.lustre.impl.Constant_DeclarationImpl
     * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getConstant_Declaration()
     * @generated
     */
    EClass CONSTANT_DECLARATION = eINSTANCE.getConstant_Declaration();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONSTANT_DECLARATION__TYPE = eINSTANCE.getConstant_Declaration_Type();

    /**
     * The meta object literal for the '<em><b>Expr</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONSTANT_DECLARATION__EXPR = eINSTANCE.getConstant_Declaration_Expr();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.lustre.lustre.impl.Variable_DeclarationImpl <em>Variable Declaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.lustre.lustre.impl.Variable_DeclarationImpl
     * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getVariable_Declaration()
     * @generated
     */
    EClass VARIABLE_DECLARATION = eINSTANCE.getVariable_Declaration();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VARIABLE_DECLARATION__NAME = eINSTANCE.getVariable_Declaration_Name();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIABLE_DECLARATION__TYPE = eINSTANCE.getVariable_Declaration_Type();

    /**
     * The meta object literal for the '<em><b>Clock</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VARIABLE_DECLARATION__CLOCK = eINSTANCE.getVariable_Declaration_Clock();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.lustre.lustre.impl.Node_DeclarationImpl <em>Node Declaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.lustre.lustre.impl.Node_DeclarationImpl
     * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getNode_Declaration()
     * @generated
     */
    EClass NODE_DECLARATION = eINSTANCE.getNode_Declaration();

    /**
     * The meta object literal for the '<em><b>Parameters</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NODE_DECLARATION__PARAMETERS = eINSTANCE.getNode_Declaration_Parameters();

    /**
     * The meta object literal for the '<em><b>Returned</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NODE_DECLARATION__RETURNED = eINSTANCE.getNode_Declaration_Returned();

    /**
     * The meta object literal for the '<em><b>Constants</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NODE_DECLARATION__CONSTANTS = eINSTANCE.getNode_Declaration_Constants();

    /**
     * The meta object literal for the '<em><b>Variables</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NODE_DECLARATION__VARIABLES = eINSTANCE.getNode_Declaration_Variables();

    /**
     * The meta object literal for the '<em><b>Equations</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NODE_DECLARATION__EQUATIONS = eINSTANCE.getNode_Declaration_Equations();

    /**
     * The meta object literal for the '<em><b>Assertions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NODE_DECLARATION__ASSERTIONS = eINSTANCE.getNode_Declaration_Assertions();

    /**
     * The meta object literal for the '<em><b>Automatons</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NODE_DECLARATION__AUTOMATONS = eINSTANCE.getNode_Declaration_Automatons();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.lustre.lustre.impl.EquationImpl <em>Equation</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.lustre.lustre.impl.EquationImpl
     * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getEquation()
     * @generated
     */
    EClass EQUATION = eINSTANCE.getEquation();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EQUATION__LEFT = eINSTANCE.getEquation_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EQUATION__RIGHT = eINSTANCE.getEquation_Right();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.lustre.lustre.impl.AssertionImpl <em>Assertion</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.lustre.lustre.impl.AssertionImpl
     * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getAssertion()
     * @generated
     */
    EClass ASSERTION = eINSTANCE.getAssertion();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.lustre.lustre.impl.AutomatonImpl <em>Automaton</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.lustre.lustre.impl.AutomatonImpl
     * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getAutomaton()
     * @generated
     */
    EClass AUTOMATON = eINSTANCE.getAutomaton();

    /**
     * The meta object literal for the '<em><b>States</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference AUTOMATON__STATES = eINSTANCE.getAutomaton_States();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.lustre.lustre.impl.AStateImpl <em>AState</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.lustre.lustre.impl.AStateImpl
     * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getAState()
     * @generated
     */
    EClass ASTATE = eINSTANCE.getAState();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ASTATE__NAME = eINSTANCE.getAState_Name();

    /**
     * The meta object literal for the '<em><b>Equations</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASTATE__EQUATIONS = eINSTANCE.getAState_Equations();

    /**
     * The meta object literal for the '<em><b>Assertions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASTATE__ASSERTIONS = eINSTANCE.getAState_Assertions();

    /**
     * The meta object literal for the '<em><b>Automatons</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASTATE__AUTOMATONS = eINSTANCE.getAState_Automatons();

    /**
     * The meta object literal for the '<em><b>Transitions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASTATE__TRANSITIONS = eINSTANCE.getAState_Transitions();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.lustre.lustre.impl.ATransitionImpl <em>ATransition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.lustre.lustre.impl.ATransitionImpl
     * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getATransition()
     * @generated
     */
    EClass ATRANSITION = eINSTANCE.getATransition();

    /**
     * The meta object literal for the '<em><b>Strong</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ATRANSITION__STRONG = eINSTANCE.getATransition_Strong();

    /**
     * The meta object literal for the '<em><b>Condition</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ATRANSITION__CONDITION = eINSTANCE.getATransition_Condition();

    /**
     * The meta object literal for the '<em><b>History</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ATRANSITION__HISTORY = eINSTANCE.getATransition_History();

    /**
     * The meta object literal for the '<em><b>Next State</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ATRANSITION__NEXT_STATE = eINSTANCE.getATransition_NextState();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.lustre.lustre.impl.Left_PartImpl <em>Left Part</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.lustre.lustre.impl.Left_PartImpl
     * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getLeft_Part()
     * @generated
     */
    EClass LEFT_PART = eINSTANCE.getLeft_Part();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.lustre.lustre.impl.Left_ListImpl <em>Left List</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.lustre.lustre.impl.Left_ListImpl
     * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getLeft_List()
     * @generated
     */
    EClass LEFT_LIST = eINSTANCE.getLeft_List();

    /**
     * The meta object literal for the '<em><b>Id</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LEFT_LIST__ID = eINSTANCE.getLeft_List_Id();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.lustre.lustre.impl.LeftImpl <em>Left</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.lustre.lustre.impl.LeftImpl
     * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getLeft()
     * @generated
     */
    EClass LEFT = eINSTANCE.getLeft();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LEFT__NAME = eINSTANCE.getLeft_Name();

    /**
     * The meta object literal for the '<em><b>Selector</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LEFT__SELECTOR = eINSTANCE.getLeft_Selector();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.lustre.lustre.impl.SelectorImpl <em>Selector</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.lustre.lustre.impl.SelectorImpl
     * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getSelector()
     * @generated
     */
    EClass SELECTOR = eINSTANCE.getSelector();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SELECTOR__NAME = eINSTANCE.getSelector_Name();

    /**
     * The meta object literal for the '<em><b>Begin</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SELECTOR__BEGIN = eINSTANCE.getSelector_Begin();

    /**
     * The meta object literal for the '<em><b>End</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SELECTOR__END = eINSTANCE.getSelector_End();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.lustre.lustre.impl.ExpressionImpl <em>Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.lustre.lustre.impl.ExpressionImpl
     * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getExpression()
     * @generated
     */
    EClass EXPRESSION = eINSTANCE.getExpression();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.lustre.lustre.impl.VariableReferenceImpl <em>Variable Reference</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.lustre.lustre.impl.VariableReferenceImpl
     * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getVariableReference()
     * @generated
     */
    EClass VARIABLE_REFERENCE = eINSTANCE.getVariableReference();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIABLE_REFERENCE__VALUE = eINSTANCE.getVariableReference_Value();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.lustre.lustre.impl.IfThenElseImpl <em>If Then Else</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.lustre.lustre.impl.IfThenElseImpl
     * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getIfThenElse()
     * @generated
     */
    EClass IF_THEN_ELSE = eINSTANCE.getIfThenElse();

    /**
     * The meta object literal for the '<em><b>Ifexpr</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IF_THEN_ELSE__IFEXPR = eINSTANCE.getIfThenElse_Ifexpr();

    /**
     * The meta object literal for the '<em><b>Thenexpr</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IF_THEN_ELSE__THENEXPR = eINSTANCE.getIfThenElse_Thenexpr();

    /**
     * The meta object literal for the '<em><b>Elseexpr</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IF_THEN_ELSE__ELSEEXPR = eINSTANCE.getIfThenElse_Elseexpr();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.lustre.lustre.impl.FbyImpl <em>Fby</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.lustre.lustre.impl.FbyImpl
     * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getFby()
     * @generated
     */
    EClass FBY = eINSTANCE.getFby();

    /**
     * The meta object literal for the '<em><b>Sub Expressions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FBY__SUB_EXPRESSIONS = eINSTANCE.getFby_SubExpressions();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.lustre.lustre.impl.ArrowImpl <em>Arrow</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.lustre.lustre.impl.ArrowImpl
     * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getArrow()
     * @generated
     */
    EClass ARROW = eINSTANCE.getArrow();

    /**
     * The meta object literal for the '<em><b>Sub Expressions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ARROW__SUB_EXPRESSIONS = eINSTANCE.getArrow_SubExpressions();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.lustre.lustre.impl.OrImpl <em>Or</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.lustre.lustre.impl.OrImpl
     * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getOr()
     * @generated
     */
    EClass OR = eINSTANCE.getOr();

    /**
     * The meta object literal for the '<em><b>Sub Expressions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OR__SUB_EXPRESSIONS = eINSTANCE.getOr_SubExpressions();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.lustre.lustre.impl.AndImpl <em>And</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.lustre.lustre.impl.AndImpl
     * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getAnd()
     * @generated
     */
    EClass AND = eINSTANCE.getAnd();

    /**
     * The meta object literal for the '<em><b>Sub Expressions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference AND__SUB_EXPRESSIONS = eINSTANCE.getAnd_SubExpressions();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.lustre.lustre.impl.EqualityImpl <em>Equality</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.lustre.lustre.impl.EqualityImpl
     * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getEquality()
     * @generated
     */
    EClass EQUALITY = eINSTANCE.getEquality();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EQUALITY__LEFT = eINSTANCE.getEquality_Left();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EQUALITY__OP = eINSTANCE.getEquality_Op();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EQUALITY__RIGHT = eINSTANCE.getEquality_Right();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.lustre.lustre.impl.ComparisonImpl <em>Comparison</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.lustre.lustre.impl.ComparisonImpl
     * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getComparison()
     * @generated
     */
    EClass COMPARISON = eINSTANCE.getComparison();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMPARISON__LEFT = eINSTANCE.getComparison_Left();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COMPARISON__OP = eINSTANCE.getComparison_Op();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMPARISON__RIGHT = eINSTANCE.getComparison_Right();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.lustre.lustre.impl.ModImpl <em>Mod</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.lustre.lustre.impl.ModImpl
     * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getMod()
     * @generated
     */
    EClass MOD = eINSTANCE.getMod();

    /**
     * The meta object literal for the '<em><b>Sub Expressions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MOD__SUB_EXPRESSIONS = eINSTANCE.getMod_SubExpressions();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.lustre.lustre.impl.PlusImpl <em>Plus</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.lustre.lustre.impl.PlusImpl
     * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getPlus()
     * @generated
     */
    EClass PLUS = eINSTANCE.getPlus();

    /**
     * The meta object literal for the '<em><b>Sub Expressions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PLUS__SUB_EXPRESSIONS = eINSTANCE.getPlus_SubExpressions();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.lustre.lustre.impl.MinusImpl <em>Minus</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.lustre.lustre.impl.MinusImpl
     * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getMinus()
     * @generated
     */
    EClass MINUS = eINSTANCE.getMinus();

    /**
     * The meta object literal for the '<em><b>Sub Expressions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MINUS__SUB_EXPRESSIONS = eINSTANCE.getMinus_SubExpressions();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.lustre.lustre.impl.MulImpl <em>Mul</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.lustre.lustre.impl.MulImpl
     * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getMul()
     * @generated
     */
    EClass MUL = eINSTANCE.getMul();

    /**
     * The meta object literal for the '<em><b>Sub Expressions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MUL__SUB_EXPRESSIONS = eINSTANCE.getMul_SubExpressions();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.lustre.lustre.impl.DivImpl <em>Div</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.lustre.lustre.impl.DivImpl
     * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getDiv()
     * @generated
     */
    EClass DIV = eINSTANCE.getDiv();

    /**
     * The meta object literal for the '<em><b>Sub Expressions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DIV__SUB_EXPRESSIONS = eINSTANCE.getDiv_SubExpressions();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.lustre.lustre.impl.NotImpl <em>Not</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.lustre.lustre.impl.NotImpl
     * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getNot()
     * @generated
     */
    EClass NOT = eINSTANCE.getNot();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NOT__EXPRESSION = eINSTANCE.getNot_Expression();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.lustre.lustre.impl.UMinusImpl <em>UMinus</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.lustre.lustre.impl.UMinusImpl
     * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getUMinus()
     * @generated
     */
    EClass UMINUS = eINSTANCE.getUMinus();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference UMINUS__EXPRESSION = eINSTANCE.getUMinus_Expression();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.lustre.lustre.impl.PreImpl <em>Pre</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.lustre.lustre.impl.PreImpl
     * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getPre()
     * @generated
     */
    EClass PRE = eINSTANCE.getPre();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PRE__EXPRESSION = eINSTANCE.getPre_Expression();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.lustre.lustre.impl.CurrentImpl <em>Current</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.lustre.lustre.impl.CurrentImpl
     * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getCurrent()
     * @generated
     */
    EClass CURRENT = eINSTANCE.getCurrent();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CURRENT__EXPRESSION = eINSTANCE.getCurrent_Expression();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.lustre.lustre.impl.BoolConstantImpl <em>Bool Constant</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.lustre.lustre.impl.BoolConstantImpl
     * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getBoolConstant()
     * @generated
     */
    EClass BOOL_CONSTANT = eINSTANCE.getBoolConstant();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BOOL_CONSTANT__VALUE = eINSTANCE.getBoolConstant_Value();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.lustre.lustre.impl.FloatConstantImpl <em>Float Constant</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.lustre.lustre.impl.FloatConstantImpl
     * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getFloatConstant()
     * @generated
     */
    EClass FLOAT_CONSTANT = eINSTANCE.getFloatConstant();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FLOAT_CONSTANT__VALUE = eINSTANCE.getFloatConstant_Value();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.lustre.lustre.impl.IntConstantImpl <em>Int Constant</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.lustre.lustre.impl.IntConstantImpl
     * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getIntConstant()
     * @generated
     */
    EClass INT_CONSTANT = eINSTANCE.getIntConstant();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute INT_CONSTANT__VALUE = eINSTANCE.getIntConstant_Value();

  }

} //LustrePackage
