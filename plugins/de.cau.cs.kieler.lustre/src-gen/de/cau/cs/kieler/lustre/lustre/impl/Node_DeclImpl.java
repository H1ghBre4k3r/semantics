/**
 * generated by Xtext 2.10.0
 */
package de.cau.cs.kieler.lustre.lustre.impl;

import de.cau.cs.kieler.lustre.lustre.FN_Body;
import de.cau.cs.kieler.lustre.lustre.LustrePackage;
import de.cau.cs.kieler.lustre.lustre.Node_Decl;
import de.cau.cs.kieler.lustre.lustre.Node_Header;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Node Decl</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.cau.cs.kieler.lustre.lustre.impl.Node_DeclImpl#getHead <em>Head</em>}</li>
 *   <li>{@link de.cau.cs.kieler.lustre.lustre.impl.Node_DeclImpl#getBdy <em>Bdy</em>}</li>
 * </ul>
 *
 * @generated
 */
public class Node_DeclImpl extends MinimalEObjectImpl.Container implements Node_Decl
{
  /**
   * The cached value of the '{@link #getHead() <em>Head</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHead()
   * @generated
   * @ordered
   */
  protected Node_Header head;

  /**
   * The cached value of the '{@link #getBdy() <em>Bdy</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBdy()
   * @generated
   * @ordered
   */
  protected FN_Body bdy;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected Node_DeclImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return LustrePackage.Literals.NODE_DECL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Node_Header getHead()
  {
    return head;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetHead(Node_Header newHead, NotificationChain msgs)
  {
    Node_Header oldHead = head;
    head = newHead;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, LustrePackage.NODE_DECL__HEAD, oldHead, newHead);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setHead(Node_Header newHead)
  {
    if (newHead != head)
    {
      NotificationChain msgs = null;
      if (head != null)
        msgs = ((InternalEObject)head).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - LustrePackage.NODE_DECL__HEAD, null, msgs);
      if (newHead != null)
        msgs = ((InternalEObject)newHead).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - LustrePackage.NODE_DECL__HEAD, null, msgs);
      msgs = basicSetHead(newHead, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LustrePackage.NODE_DECL__HEAD, newHead, newHead));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FN_Body getBdy()
  {
    return bdy;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetBdy(FN_Body newBdy, NotificationChain msgs)
  {
    FN_Body oldBdy = bdy;
    bdy = newBdy;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, LustrePackage.NODE_DECL__BDY, oldBdy, newBdy);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setBdy(FN_Body newBdy)
  {
    if (newBdy != bdy)
    {
      NotificationChain msgs = null;
      if (bdy != null)
        msgs = ((InternalEObject)bdy).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - LustrePackage.NODE_DECL__BDY, null, msgs);
      if (newBdy != null)
        msgs = ((InternalEObject)newBdy).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - LustrePackage.NODE_DECL__BDY, null, msgs);
      msgs = basicSetBdy(newBdy, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LustrePackage.NODE_DECL__BDY, newBdy, newBdy));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case LustrePackage.NODE_DECL__HEAD:
        return basicSetHead(null, msgs);
      case LustrePackage.NODE_DECL__BDY:
        return basicSetBdy(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case LustrePackage.NODE_DECL__HEAD:
        return getHead();
      case LustrePackage.NODE_DECL__BDY:
        return getBdy();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case LustrePackage.NODE_DECL__HEAD:
        setHead((Node_Header)newValue);
        return;
      case LustrePackage.NODE_DECL__BDY:
        setBdy((FN_Body)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case LustrePackage.NODE_DECL__HEAD:
        setHead((Node_Header)null);
        return;
      case LustrePackage.NODE_DECL__BDY:
        setBdy((FN_Body)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case LustrePackage.NODE_DECL__HEAD:
        return head != null;
      case LustrePackage.NODE_DECL__BDY:
        return bdy != null;
    }
    return super.eIsSet(featureID);
  }

} //Node_DeclImpl
