/**
 * generated by Xtext
 */
package de.cau.cs.kieler.lustre.lustre.impl;

import de.cau.cs.kieler.lustre.lustre.LustrePackage;
import de.cau.cs.kieler.lustre.lustre.ModelDeclaration;
import de.cau.cs.kieler.lustre.lustre.PackList;
import de.cau.cs.kieler.lustre.lustre.PackageDeclaration;
import de.cau.cs.kieler.lustre.lustre.PackageEquation;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Pack List</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.cau.cs.kieler.lustre.lustre.impl.PackListImpl#getModelDeclarations <em>Model Declarations</em>}</li>
 *   <li>{@link de.cau.cs.kieler.lustre.lustre.impl.PackListImpl#getPackageDeclarations <em>Package Declarations</em>}</li>
 *   <li>{@link de.cau.cs.kieler.lustre.lustre.impl.PackListImpl#getPackageEquations <em>Package Equations</em>}</li>
 * </ul>
 *
 * @generated
 */
public class PackListImpl extends MinimalEObjectImpl.Container implements PackList
{
  /**
   * The cached value of the '{@link #getModelDeclarations() <em>Model Declarations</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getModelDeclarations()
   * @generated
   * @ordered
   */
  protected EList<ModelDeclaration> modelDeclarations;

  /**
   * The cached value of the '{@link #getPackageDeclarations() <em>Package Declarations</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPackageDeclarations()
   * @generated
   * @ordered
   */
  protected EList<PackageDeclaration> packageDeclarations;

  /**
   * The cached value of the '{@link #getPackageEquations() <em>Package Equations</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPackageEquations()
   * @generated
   * @ordered
   */
  protected EList<PackageEquation> packageEquations;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected PackListImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return LustrePackage.Literals.PACK_LIST;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ModelDeclaration> getModelDeclarations()
  {
    if (modelDeclarations == null)
    {
      modelDeclarations = new EObjectContainmentEList<ModelDeclaration>(ModelDeclaration.class, this, LustrePackage.PACK_LIST__MODEL_DECLARATIONS);
    }
    return modelDeclarations;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<PackageDeclaration> getPackageDeclarations()
  {
    if (packageDeclarations == null)
    {
      packageDeclarations = new EObjectContainmentEList<PackageDeclaration>(PackageDeclaration.class, this, LustrePackage.PACK_LIST__PACKAGE_DECLARATIONS);
    }
    return packageDeclarations;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<PackageEquation> getPackageEquations()
  {
    if (packageEquations == null)
    {
      packageEquations = new EObjectContainmentEList<PackageEquation>(PackageEquation.class, this, LustrePackage.PACK_LIST__PACKAGE_EQUATIONS);
    }
    return packageEquations;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case LustrePackage.PACK_LIST__MODEL_DECLARATIONS:
        return ((InternalEList<?>)getModelDeclarations()).basicRemove(otherEnd, msgs);
      case LustrePackage.PACK_LIST__PACKAGE_DECLARATIONS:
        return ((InternalEList<?>)getPackageDeclarations()).basicRemove(otherEnd, msgs);
      case LustrePackage.PACK_LIST__PACKAGE_EQUATIONS:
        return ((InternalEList<?>)getPackageEquations()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case LustrePackage.PACK_LIST__MODEL_DECLARATIONS:
        return getModelDeclarations();
      case LustrePackage.PACK_LIST__PACKAGE_DECLARATIONS:
        return getPackageDeclarations();
      case LustrePackage.PACK_LIST__PACKAGE_EQUATIONS:
        return getPackageEquations();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case LustrePackage.PACK_LIST__MODEL_DECLARATIONS:
        getModelDeclarations().clear();
        getModelDeclarations().addAll((Collection<? extends ModelDeclaration>)newValue);
        return;
      case LustrePackage.PACK_LIST__PACKAGE_DECLARATIONS:
        getPackageDeclarations().clear();
        getPackageDeclarations().addAll((Collection<? extends PackageDeclaration>)newValue);
        return;
      case LustrePackage.PACK_LIST__PACKAGE_EQUATIONS:
        getPackageEquations().clear();
        getPackageEquations().addAll((Collection<? extends PackageEquation>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case LustrePackage.PACK_LIST__MODEL_DECLARATIONS:
        getModelDeclarations().clear();
        return;
      case LustrePackage.PACK_LIST__PACKAGE_DECLARATIONS:
        getPackageDeclarations().clear();
        return;
      case LustrePackage.PACK_LIST__PACKAGE_EQUATIONS:
        getPackageEquations().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case LustrePackage.PACK_LIST__MODEL_DECLARATIONS:
        return modelDeclarations != null && !modelDeclarations.isEmpty();
      case LustrePackage.PACK_LIST__PACKAGE_DECLARATIONS:
        return packageDeclarations != null && !packageDeclarations.isEmpty();
      case LustrePackage.PACK_LIST__PACKAGE_EQUATIONS:
        return packageEquations != null && !packageEquations.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //PackListImpl
