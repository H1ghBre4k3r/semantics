/**
 * generated by Xtext
 */
package de.cau.cs.kieler.lustre.lustre.impl;

import de.cau.cs.kieler.lustre.lustre.LustrePackage;
import de.cau.cs.kieler.lustre.lustre.ModelDeclaration;
import de.cau.cs.kieler.lustre.lustre.PackBody;
import de.cau.cs.kieler.lustre.lustre.Provide;
import de.cau.cs.kieler.lustre.lustre.StaticParam;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EDataTypeEList;
import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Model Declaration</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.cau.cs.kieler.lustre.lustre.impl.ModelDeclarationImpl#getName <em>Name</em>}</li>
 *   <li>{@link de.cau.cs.kieler.lustre.lustre.impl.ModelDeclarationImpl#getUsesIds <em>Uses Ids</em>}</li>
 *   <li>{@link de.cau.cs.kieler.lustre.lustre.impl.ModelDeclarationImpl#getNeedsParams <em>Needs Params</em>}</li>
 *   <li>{@link de.cau.cs.kieler.lustre.lustre.impl.ModelDeclarationImpl#getProvisions <em>Provisions</em>}</li>
 *   <li>{@link de.cau.cs.kieler.lustre.lustre.impl.ModelDeclarationImpl#getBody <em>Body</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ModelDeclarationImpl extends MinimalEObjectImpl.Container implements ModelDeclaration
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getUsesIds() <em>Uses Ids</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUsesIds()
   * @generated
   * @ordered
   */
  protected EList<String> usesIds;

  /**
   * The cached value of the '{@link #getNeedsParams() <em>Needs Params</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNeedsParams()
   * @generated
   * @ordered
   */
  protected EList<StaticParam> needsParams;

  /**
   * The cached value of the '{@link #getProvisions() <em>Provisions</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProvisions()
   * @generated
   * @ordered
   */
  protected EList<Provide> provisions;

  /**
   * The cached value of the '{@link #getBody() <em>Body</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBody()
   * @generated
   * @ordered
   */
  protected PackBody body;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ModelDeclarationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return LustrePackage.Literals.MODEL_DECLARATION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LustrePackage.MODEL_DECLARATION__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<String> getUsesIds()
  {
    if (usesIds == null)
    {
      usesIds = new EDataTypeEList<String>(String.class, this, LustrePackage.MODEL_DECLARATION__USES_IDS);
    }
    return usesIds;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<StaticParam> getNeedsParams()
  {
    if (needsParams == null)
    {
      needsParams = new EObjectContainmentEList<StaticParam>(StaticParam.class, this, LustrePackage.MODEL_DECLARATION__NEEDS_PARAMS);
    }
    return needsParams;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Provide> getProvisions()
  {
    if (provisions == null)
    {
      provisions = new EObjectContainmentEList<Provide>(Provide.class, this, LustrePackage.MODEL_DECLARATION__PROVISIONS);
    }
    return provisions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PackBody getBody()
  {
    return body;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetBody(PackBody newBody, NotificationChain msgs)
  {
    PackBody oldBody = body;
    body = newBody;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, LustrePackage.MODEL_DECLARATION__BODY, oldBody, newBody);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBody(PackBody newBody)
  {
    if (newBody != body)
    {
      NotificationChain msgs = null;
      if (body != null)
        msgs = ((InternalEObject)body).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - LustrePackage.MODEL_DECLARATION__BODY, null, msgs);
      if (newBody != null)
        msgs = ((InternalEObject)newBody).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - LustrePackage.MODEL_DECLARATION__BODY, null, msgs);
      msgs = basicSetBody(newBody, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LustrePackage.MODEL_DECLARATION__BODY, newBody, newBody));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case LustrePackage.MODEL_DECLARATION__NEEDS_PARAMS:
        return ((InternalEList<?>)getNeedsParams()).basicRemove(otherEnd, msgs);
      case LustrePackage.MODEL_DECLARATION__PROVISIONS:
        return ((InternalEList<?>)getProvisions()).basicRemove(otherEnd, msgs);
      case LustrePackage.MODEL_DECLARATION__BODY:
        return basicSetBody(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case LustrePackage.MODEL_DECLARATION__NAME:
        return getName();
      case LustrePackage.MODEL_DECLARATION__USES_IDS:
        return getUsesIds();
      case LustrePackage.MODEL_DECLARATION__NEEDS_PARAMS:
        return getNeedsParams();
      case LustrePackage.MODEL_DECLARATION__PROVISIONS:
        return getProvisions();
      case LustrePackage.MODEL_DECLARATION__BODY:
        return getBody();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case LustrePackage.MODEL_DECLARATION__NAME:
        setName((String)newValue);
        return;
      case LustrePackage.MODEL_DECLARATION__USES_IDS:
        getUsesIds().clear();
        getUsesIds().addAll((Collection<? extends String>)newValue);
        return;
      case LustrePackage.MODEL_DECLARATION__NEEDS_PARAMS:
        getNeedsParams().clear();
        getNeedsParams().addAll((Collection<? extends StaticParam>)newValue);
        return;
      case LustrePackage.MODEL_DECLARATION__PROVISIONS:
        getProvisions().clear();
        getProvisions().addAll((Collection<? extends Provide>)newValue);
        return;
      case LustrePackage.MODEL_DECLARATION__BODY:
        setBody((PackBody)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case LustrePackage.MODEL_DECLARATION__NAME:
        setName(NAME_EDEFAULT);
        return;
      case LustrePackage.MODEL_DECLARATION__USES_IDS:
        getUsesIds().clear();
        return;
      case LustrePackage.MODEL_DECLARATION__NEEDS_PARAMS:
        getNeedsParams().clear();
        return;
      case LustrePackage.MODEL_DECLARATION__PROVISIONS:
        getProvisions().clear();
        return;
      case LustrePackage.MODEL_DECLARATION__BODY:
        setBody((PackBody)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case LustrePackage.MODEL_DECLARATION__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case LustrePackage.MODEL_DECLARATION__USES_IDS:
        return usesIds != null && !usesIds.isEmpty();
      case LustrePackage.MODEL_DECLARATION__NEEDS_PARAMS:
        return needsParams != null && !needsParams.isEmpty();
      case LustrePackage.MODEL_DECLARATION__PROVISIONS:
        return provisions != null && !provisions.isEmpty();
      case LustrePackage.MODEL_DECLARATION__BODY:
        return body != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", usesIds: ");
    result.append(usesIds);
    result.append(')');
    return result.toString();
  }

} //ModelDeclarationImpl
