/**
 * generated by Xtext
 */
package de.cau.cs.kieler.lustre.lustre;

import de.cau.cs.kieler.kexpressions.Expression;

import de.cau.cs.kieler.kexpressions.keffects.Effect;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>An Action</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link de.cau.cs.kieler.lustre.lustre.AnAction#getCondition <em>Condition</em>}</li>
 *   <li>{@link de.cau.cs.kieler.lustre.lustre.AnAction#getEffects <em>Effects</em>}</li>
 *   <li>{@link de.cau.cs.kieler.lustre.lustre.AnAction#isHistory <em>History</em>}</li>
 *   <li>{@link de.cau.cs.kieler.lustre.lustre.AnAction#getNextState <em>Next State</em>}</li>
 * </ul>
 *
 * @see de.cau.cs.kieler.lustre.lustre.LustrePackage#getAnAction()
 * @model
 * @generated
 */
public interface AnAction extends EObject
{
  /**
   * Returns the value of the '<em><b>Condition</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Condition</em>' containment reference.
   * @see #setCondition(Expression)
   * @see de.cau.cs.kieler.lustre.lustre.LustrePackage#getAnAction_Condition()
   * @model containment="true"
   * @generated
   */
  Expression getCondition();

  /**
   * Sets the value of the '{@link de.cau.cs.kieler.lustre.lustre.AnAction#getCondition <em>Condition</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Condition</em>' containment reference.
   * @see #getCondition()
   * @generated
   */
  void setCondition(Expression value);

  /**
   * Returns the value of the '<em><b>Effects</b></em>' containment reference list.
   * The list contents are of type {@link de.cau.cs.kieler.kexpressions.keffects.Effect}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Effects</em>' containment reference list.
   * @see de.cau.cs.kieler.lustre.lustre.LustrePackage#getAnAction_Effects()
   * @model containment="true"
   * @generated
   */
  EList<Effect> getEffects();

  /**
   * Returns the value of the '<em><b>History</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>History</em>' attribute.
   * @see #setHistory(boolean)
   * @see de.cau.cs.kieler.lustre.lustre.LustrePackage#getAnAction_History()
   * @model
   * @generated
   */
  boolean isHistory();

  /**
   * Sets the value of the '{@link de.cau.cs.kieler.lustre.lustre.AnAction#isHistory <em>History</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>History</em>' attribute.
   * @see #isHistory()
   * @generated
   */
  void setHistory(boolean value);

  /**
   * Returns the value of the '<em><b>Next State</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Next State</em>' reference.
   * @see #setNextState(StateValuedObject)
   * @see de.cau.cs.kieler.lustre.lustre.LustrePackage#getAnAction_NextState()
   * @model
   * @generated
   */
  StateValuedObject getNextState();

  /**
   * Sets the value of the '{@link de.cau.cs.kieler.lustre.lustre.AnAction#getNextState <em>Next State</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Next State</em>' reference.
   * @see #getNextState()
   * @generated
   */
  void setNextState(StateValuedObject value);

} // AnAction
