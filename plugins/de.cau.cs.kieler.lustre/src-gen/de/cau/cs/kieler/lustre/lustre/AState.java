/**
 * generated by Xtext
 */
package de.cau.cs.kieler.lustre.lustre;

import de.cau.cs.kieler.kexpressions.Expression;
import de.cau.cs.kieler.kexpressions.ValuedObject;
import de.cau.cs.kieler.kexpressions.VariableDeclaration;

import de.cau.cs.kieler.kexpressions.keffects.Assignment;
import de.cau.cs.kieler.kexpressions.keffects.Emission;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>AState</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link de.cau.cs.kieler.lustre.lustre.AState#isInitial <em>Initial</em>}</li>
 *   <li>{@link de.cau.cs.kieler.lustre.lustre.AState#getValuedObject <em>Valued Object</em>}</li>
 *   <li>{@link de.cau.cs.kieler.lustre.lustre.AState#getConstants <em>Constants</em>}</li>
 *   <li>{@link de.cau.cs.kieler.lustre.lustre.AState#getVariables <em>Variables</em>}</li>
 *   <li>{@link de.cau.cs.kieler.lustre.lustre.AState#getEquations <em>Equations</em>}</li>
 *   <li>{@link de.cau.cs.kieler.lustre.lustre.AState#getEmissions <em>Emissions</em>}</li>
 *   <li>{@link de.cau.cs.kieler.lustre.lustre.AState#getAssertions <em>Assertions</em>}</li>
 *   <li>{@link de.cau.cs.kieler.lustre.lustre.AState#getAutomatons <em>Automatons</em>}</li>
 *   <li>{@link de.cau.cs.kieler.lustre.lustre.AState#getTransitions <em>Transitions</em>}</li>
 * </ul>
 *
 * @see de.cau.cs.kieler.lustre.lustre.LustrePackage#getAState()
 * @model
 * @generated
 */
public interface AState extends EObject
{
  /**
   * Returns the value of the '<em><b>Initial</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Initial</em>' attribute.
   * @see #setInitial(boolean)
   * @see de.cau.cs.kieler.lustre.lustre.LustrePackage#getAState_Initial()
   * @model
   * @generated
   */
  boolean isInitial();

  /**
   * Sets the value of the '{@link de.cau.cs.kieler.lustre.lustre.AState#isInitial <em>Initial</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Initial</em>' attribute.
   * @see #isInitial()
   * @generated
   */
  void setInitial(boolean value);

  /**
   * Returns the value of the '<em><b>Valued Object</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Valued Object</em>' containment reference.
   * @see #setValuedObject(ValuedObject)
   * @see de.cau.cs.kieler.lustre.lustre.LustrePackage#getAState_ValuedObject()
   * @model containment="true"
   * @generated
   */
  ValuedObject getValuedObject();

  /**
   * Sets the value of the '{@link de.cau.cs.kieler.lustre.lustre.AState#getValuedObject <em>Valued Object</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Valued Object</em>' containment reference.
   * @see #getValuedObject()
   * @generated
   */
  void setValuedObject(ValuedObject value);

  /**
   * Returns the value of the '<em><b>Constants</b></em>' containment reference list.
   * The list contents are of type {@link de.cau.cs.kieler.kexpressions.VariableDeclaration}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Constants</em>' containment reference list.
   * @see de.cau.cs.kieler.lustre.lustre.LustrePackage#getAState_Constants()
   * @model containment="true"
   * @generated
   */
  EList<VariableDeclaration> getConstants();

  /**
   * Returns the value of the '<em><b>Variables</b></em>' containment reference list.
   * The list contents are of type {@link de.cau.cs.kieler.kexpressions.VariableDeclaration}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Variables</em>' containment reference list.
   * @see de.cau.cs.kieler.lustre.lustre.LustrePackage#getAState_Variables()
   * @model containment="true"
   * @generated
   */
  EList<VariableDeclaration> getVariables();

  /**
   * Returns the value of the '<em><b>Equations</b></em>' containment reference list.
   * The list contents are of type {@link de.cau.cs.kieler.kexpressions.keffects.Assignment}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Equations</em>' containment reference list.
   * @see de.cau.cs.kieler.lustre.lustre.LustrePackage#getAState_Equations()
   * @model containment="true"
   * @generated
   */
  EList<Assignment> getEquations();

  /**
   * Returns the value of the '<em><b>Emissions</b></em>' containment reference list.
   * The list contents are of type {@link de.cau.cs.kieler.kexpressions.keffects.Emission}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Emissions</em>' containment reference list.
   * @see de.cau.cs.kieler.lustre.lustre.LustrePackage#getAState_Emissions()
   * @model containment="true"
   * @generated
   */
  EList<Emission> getEmissions();

  /**
   * Returns the value of the '<em><b>Assertions</b></em>' containment reference list.
   * The list contents are of type {@link de.cau.cs.kieler.kexpressions.Expression}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Assertions</em>' containment reference list.
   * @see de.cau.cs.kieler.lustre.lustre.LustrePackage#getAState_Assertions()
   * @model containment="true"
   * @generated
   */
  EList<Expression> getAssertions();

  /**
   * Returns the value of the '<em><b>Automatons</b></em>' containment reference list.
   * The list contents are of type {@link de.cau.cs.kieler.lustre.lustre.Automaton}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Automatons</em>' containment reference list.
   * @see de.cau.cs.kieler.lustre.lustre.LustrePackage#getAState_Automatons()
   * @model containment="true"
   * @generated
   */
  EList<Automaton> getAutomatons();

  /**
   * Returns the value of the '<em><b>Transitions</b></em>' containment reference list.
   * The list contents are of type {@link de.cau.cs.kieler.lustre.lustre.ATransition}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Transitions</em>' containment reference list.
   * @see de.cau.cs.kieler.lustre.lustre.LustrePackage#getAState_Transitions()
   * @model containment="true"
   * @generated
   */
  EList<ATransition> getTransitions();

} // AState
