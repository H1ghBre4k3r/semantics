/**
 * generated by Xtext 2.10.0
 */
package de.cau.cs.kieler.lustre.lustre.impl;

import de.cau.cs.kieler.lustre.lustre.LustrePackage;
import de.cau.cs.kieler.lustre.lustre.Node_Header;
import de.cau.cs.kieler.lustre.lustre.Package_Provide;
import de.cau.cs.kieler.lustre.lustre.Var_Decl_List;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Package Provide</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.cau.cs.kieler.lustre.lustre.impl.Package_ProvideImpl#getName <em>Name</em>}</li>
 *   <li>{@link de.cau.cs.kieler.lustre.lustre.impl.Package_ProvideImpl#getParam <em>Param</em>}</li>
 *   <li>{@link de.cau.cs.kieler.lustre.lustre.impl.Package_ProvideImpl#getRet <em>Ret</em>}</li>
 * </ul>
 *
 * @generated
 */
public class Package_ProvideImpl extends MinimalEObjectImpl.Container implements Package_Provide
{
  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected Node_Header name;

  /**
   * The cached value of the '{@link #getParam() <em>Param</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParam()
   * @generated
   * @ordered
   */
  protected Var_Decl_List param;

  /**
   * The cached value of the '{@link #getRet() <em>Ret</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRet()
   * @generated
   * @ordered
   */
  protected Var_Decl_List ret;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected Package_ProvideImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return LustrePackage.Literals.PACKAGE_PROVIDE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Node_Header getName()
  {
    if (name != null && name.eIsProxy())
    {
      InternalEObject oldName = (InternalEObject)name;
      name = (Node_Header)eResolveProxy(oldName);
      if (name != oldName)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, LustrePackage.PACKAGE_PROVIDE__NAME, oldName, name));
      }
    }
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Node_Header basicGetName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(Node_Header newName)
  {
    Node_Header oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LustrePackage.PACKAGE_PROVIDE__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Var_Decl_List getParam()
  {
    return param;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetParam(Var_Decl_List newParam, NotificationChain msgs)
  {
    Var_Decl_List oldParam = param;
    param = newParam;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, LustrePackage.PACKAGE_PROVIDE__PARAM, oldParam, newParam);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setParam(Var_Decl_List newParam)
  {
    if (newParam != param)
    {
      NotificationChain msgs = null;
      if (param != null)
        msgs = ((InternalEObject)param).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - LustrePackage.PACKAGE_PROVIDE__PARAM, null, msgs);
      if (newParam != null)
        msgs = ((InternalEObject)newParam).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - LustrePackage.PACKAGE_PROVIDE__PARAM, null, msgs);
      msgs = basicSetParam(newParam, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LustrePackage.PACKAGE_PROVIDE__PARAM, newParam, newParam));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Var_Decl_List getRet()
  {
    return ret;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRet(Var_Decl_List newRet, NotificationChain msgs)
  {
    Var_Decl_List oldRet = ret;
    ret = newRet;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, LustrePackage.PACKAGE_PROVIDE__RET, oldRet, newRet);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRet(Var_Decl_List newRet)
  {
    if (newRet != ret)
    {
      NotificationChain msgs = null;
      if (ret != null)
        msgs = ((InternalEObject)ret).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - LustrePackage.PACKAGE_PROVIDE__RET, null, msgs);
      if (newRet != null)
        msgs = ((InternalEObject)newRet).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - LustrePackage.PACKAGE_PROVIDE__RET, null, msgs);
      msgs = basicSetRet(newRet, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LustrePackage.PACKAGE_PROVIDE__RET, newRet, newRet));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case LustrePackage.PACKAGE_PROVIDE__PARAM:
        return basicSetParam(null, msgs);
      case LustrePackage.PACKAGE_PROVIDE__RET:
        return basicSetRet(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case LustrePackage.PACKAGE_PROVIDE__NAME:
        if (resolve) return getName();
        return basicGetName();
      case LustrePackage.PACKAGE_PROVIDE__PARAM:
        return getParam();
      case LustrePackage.PACKAGE_PROVIDE__RET:
        return getRet();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case LustrePackage.PACKAGE_PROVIDE__NAME:
        setName((Node_Header)newValue);
        return;
      case LustrePackage.PACKAGE_PROVIDE__PARAM:
        setParam((Var_Decl_List)newValue);
        return;
      case LustrePackage.PACKAGE_PROVIDE__RET:
        setRet((Var_Decl_List)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case LustrePackage.PACKAGE_PROVIDE__NAME:
        setName((Node_Header)null);
        return;
      case LustrePackage.PACKAGE_PROVIDE__PARAM:
        setParam((Var_Decl_List)null);
        return;
      case LustrePackage.PACKAGE_PROVIDE__RET:
        setRet((Var_Decl_List)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case LustrePackage.PACKAGE_PROVIDE__NAME:
        return name != null;
      case LustrePackage.PACKAGE_PROVIDE__PARAM:
        return param != null;
      case LustrePackage.PACKAGE_PROVIDE__RET:
        return ret != null;
    }
    return super.eIsSet(featureID);
  }

} //Package_ProvideImpl
