/**
 * generated by Xtext 2.10.0
 */
package de.cau.cs.kieler.lustre.lustre.impl;

import de.cau.cs.kieler.lustre.lustre.Expression;
import de.cau.cs.kieler.lustre.lustre.IfThenElse;
import de.cau.cs.kieler.lustre.lustre.LustrePackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>If Then Else</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.cau.cs.kieler.lustre.lustre.impl.IfThenElseImpl#getIfexpr <em>Ifexpr</em>}</li>
 *   <li>{@link de.cau.cs.kieler.lustre.lustre.impl.IfThenElseImpl#getThenexpr <em>Thenexpr</em>}</li>
 *   <li>{@link de.cau.cs.kieler.lustre.lustre.impl.IfThenElseImpl#getElseexpr <em>Elseexpr</em>}</li>
 * </ul>
 *
 * @generated
 */
public class IfThenElseImpl extends ExpressionImpl implements IfThenElse
{
  /**
   * The cached value of the '{@link #getIfexpr() <em>Ifexpr</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIfexpr()
   * @generated
   * @ordered
   */
  protected Expression ifexpr;

  /**
   * The cached value of the '{@link #getThenexpr() <em>Thenexpr</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getThenexpr()
   * @generated
   * @ordered
   */
  protected Expression thenexpr;

  /**
   * The cached value of the '{@link #getElseexpr() <em>Elseexpr</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getElseexpr()
   * @generated
   * @ordered
   */
  protected Expression elseexpr;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected IfThenElseImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return LustrePackage.Literals.IF_THEN_ELSE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Expression getIfexpr()
  {
    return ifexpr;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetIfexpr(Expression newIfexpr, NotificationChain msgs)
  {
    Expression oldIfexpr = ifexpr;
    ifexpr = newIfexpr;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, LustrePackage.IF_THEN_ELSE__IFEXPR, oldIfexpr, newIfexpr);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setIfexpr(Expression newIfexpr)
  {
    if (newIfexpr != ifexpr)
    {
      NotificationChain msgs = null;
      if (ifexpr != null)
        msgs = ((InternalEObject)ifexpr).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - LustrePackage.IF_THEN_ELSE__IFEXPR, null, msgs);
      if (newIfexpr != null)
        msgs = ((InternalEObject)newIfexpr).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - LustrePackage.IF_THEN_ELSE__IFEXPR, null, msgs);
      msgs = basicSetIfexpr(newIfexpr, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LustrePackage.IF_THEN_ELSE__IFEXPR, newIfexpr, newIfexpr));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Expression getThenexpr()
  {
    return thenexpr;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetThenexpr(Expression newThenexpr, NotificationChain msgs)
  {
    Expression oldThenexpr = thenexpr;
    thenexpr = newThenexpr;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, LustrePackage.IF_THEN_ELSE__THENEXPR, oldThenexpr, newThenexpr);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setThenexpr(Expression newThenexpr)
  {
    if (newThenexpr != thenexpr)
    {
      NotificationChain msgs = null;
      if (thenexpr != null)
        msgs = ((InternalEObject)thenexpr).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - LustrePackage.IF_THEN_ELSE__THENEXPR, null, msgs);
      if (newThenexpr != null)
        msgs = ((InternalEObject)newThenexpr).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - LustrePackage.IF_THEN_ELSE__THENEXPR, null, msgs);
      msgs = basicSetThenexpr(newThenexpr, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LustrePackage.IF_THEN_ELSE__THENEXPR, newThenexpr, newThenexpr));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Expression getElseexpr()
  {
    return elseexpr;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetElseexpr(Expression newElseexpr, NotificationChain msgs)
  {
    Expression oldElseexpr = elseexpr;
    elseexpr = newElseexpr;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, LustrePackage.IF_THEN_ELSE__ELSEEXPR, oldElseexpr, newElseexpr);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setElseexpr(Expression newElseexpr)
  {
    if (newElseexpr != elseexpr)
    {
      NotificationChain msgs = null;
      if (elseexpr != null)
        msgs = ((InternalEObject)elseexpr).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - LustrePackage.IF_THEN_ELSE__ELSEEXPR, null, msgs);
      if (newElseexpr != null)
        msgs = ((InternalEObject)newElseexpr).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - LustrePackage.IF_THEN_ELSE__ELSEEXPR, null, msgs);
      msgs = basicSetElseexpr(newElseexpr, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LustrePackage.IF_THEN_ELSE__ELSEEXPR, newElseexpr, newElseexpr));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case LustrePackage.IF_THEN_ELSE__IFEXPR:
        return basicSetIfexpr(null, msgs);
      case LustrePackage.IF_THEN_ELSE__THENEXPR:
        return basicSetThenexpr(null, msgs);
      case LustrePackage.IF_THEN_ELSE__ELSEEXPR:
        return basicSetElseexpr(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case LustrePackage.IF_THEN_ELSE__IFEXPR:
        return getIfexpr();
      case LustrePackage.IF_THEN_ELSE__THENEXPR:
        return getThenexpr();
      case LustrePackage.IF_THEN_ELSE__ELSEEXPR:
        return getElseexpr();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case LustrePackage.IF_THEN_ELSE__IFEXPR:
        setIfexpr((Expression)newValue);
        return;
      case LustrePackage.IF_THEN_ELSE__THENEXPR:
        setThenexpr((Expression)newValue);
        return;
      case LustrePackage.IF_THEN_ELSE__ELSEEXPR:
        setElseexpr((Expression)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case LustrePackage.IF_THEN_ELSE__IFEXPR:
        setIfexpr((Expression)null);
        return;
      case LustrePackage.IF_THEN_ELSE__THENEXPR:
        setThenexpr((Expression)null);
        return;
      case LustrePackage.IF_THEN_ELSE__ELSEEXPR:
        setElseexpr((Expression)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case LustrePackage.IF_THEN_ELSE__IFEXPR:
        return ifexpr != null;
      case LustrePackage.IF_THEN_ELSE__THENEXPR:
        return thenexpr != null;
      case LustrePackage.IF_THEN_ELSE__ELSEEXPR:
        return elseexpr != null;
    }
    return super.eIsSet(featureID);
  }

} //IfThenElseImpl
