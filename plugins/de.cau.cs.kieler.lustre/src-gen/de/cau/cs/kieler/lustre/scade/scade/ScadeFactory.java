/**
 * generated by Xtext
 */
package de.cau.cs.kieler.lustre.scade.scade;

import org.eclipse.emf.ecore.EFactory;

/**
 * <!-- begin-user-doc -->
 * The <b>Factory</b> for the model.
 * It provides a create method for each non-abstract class of the model.
 * <!-- end-user-doc -->
 * @see de.cau.cs.kieler.lustre.scade.scade.ScadePackage
 * @generated
 */
public interface ScadeFactory extends EFactory
{
  /**
   * The singleton instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  ScadeFactory eINSTANCE = de.cau.cs.kieler.lustre.scade.scade.impl.ScadeFactoryImpl.init();

  /**
   * Returns a new object of class '<em>Program</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Program</em>'.
   * @generated
   */
  ScadeProgram createScadeProgram();

  /**
   * Returns a new object of class '<em>Equation</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Equation</em>'.
   * @generated
   */
  ScadeEquation createScadeEquation();

  /**
   * Returns a new object of class '<em>Valued Object String</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Valued Object String</em>'.
   * @generated
   */
  ValuedObjectString createValuedObjectString();

  /**
   * Returns a new object of class '<em>Operator Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Operator Expression</em>'.
   * @generated
   */
  OperatorExpression createOperatorExpression();

  /**
   * Returns the package supported by this factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the package supported by this factory.
   * @generated
   */
  ScadePackage getScadePackage();

} //ScadeFactory
