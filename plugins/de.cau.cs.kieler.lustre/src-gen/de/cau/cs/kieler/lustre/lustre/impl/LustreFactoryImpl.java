/**
 * generated by Xtext
 */
package de.cau.cs.kieler.lustre.lustre.impl;

import de.cau.cs.kieler.lustre.lustre.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class LustreFactoryImpl extends EFactoryImpl implements LustreFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static LustreFactory init()
  {
    try
    {
      LustreFactory theLustreFactory = (LustreFactory)EPackage.Registry.INSTANCE.getEFactory(LustrePackage.eNS_URI);
      if (theLustreFactory != null)
      {
        return theLustreFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new LustreFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LustreFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case LustrePackage.LUSTRE_PROGRAM: return createLustreProgram();
      case LustrePackage.PACK_LIST: return createPackList();
      case LustrePackage.MODEL_DECLARATION: return createModelDeclaration();
      case LustrePackage.PROVIDE: return createProvide();
      case LustrePackage.PACKAGE_DECLARATION: return createPackageDeclaration();
      case LustrePackage.PACKAGE_EQUATION: return createPackageEquation();
      case LustrePackage.PACK_BODY: return createPackBody();
      case LustrePackage.TYPE_DECLARATION: return createTypeDeclaration();
      case LustrePackage.EXTERNAL_NODE_DECLARATION: return createExternalNodeDeclaration();
      case LustrePackage.AUTOMATON: return createAutomaton();
      case LustrePackage.ASTATE: return createAState();
      case LustrePackage.ATRANSITION: return createATransition();
      case LustrePackage.PARAMS: return createParams();
      case LustrePackage.STATIC_PARAM: return createStaticParam();
      case LustrePackage.STATIC_ARG: return createStaticArg();
      case LustrePackage.BY_NAME_STATIC_ARG: return createByNameStaticArg();
      case LustrePackage.CLOCKED_VARIABLE_DECLARATION: return createClockedVariableDeclaration();
      case LustrePackage.NODE_DECLARATION: return createNodeDeclaration();
      case LustrePackage.NODE_VALUED_OBJECT: return createNodeValuedObject();
      case LustrePackage.EQUATION: return createEquation();
      case LustrePackage.ASSERTION: return createAssertion();
      case LustrePackage.LUSTRE_VALUED_OBJECT: return createLustreValuedObject();
      case LustrePackage.NODE_REFERENCE: return createNodeReference();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LustreProgram createLustreProgram()
  {
    LustreProgramImpl lustreProgram = new LustreProgramImpl();
    return lustreProgram;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PackList createPackList()
  {
    PackListImpl packList = new PackListImpl();
    return packList;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ModelDeclaration createModelDeclaration()
  {
    ModelDeclarationImpl modelDeclaration = new ModelDeclarationImpl();
    return modelDeclaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Provide createProvide()
  {
    ProvideImpl provide = new ProvideImpl();
    return provide;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PackageDeclaration createPackageDeclaration()
  {
    PackageDeclarationImpl packageDeclaration = new PackageDeclarationImpl();
    return packageDeclaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PackageEquation createPackageEquation()
  {
    PackageEquationImpl packageEquation = new PackageEquationImpl();
    return packageEquation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PackBody createPackBody()
  {
    PackBodyImpl packBody = new PackBodyImpl();
    return packBody;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TypeDeclaration createTypeDeclaration()
  {
    TypeDeclarationImpl typeDeclaration = new TypeDeclarationImpl();
    return typeDeclaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ExternalNodeDeclaration createExternalNodeDeclaration()
  {
    ExternalNodeDeclarationImpl externalNodeDeclaration = new ExternalNodeDeclarationImpl();
    return externalNodeDeclaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Automaton createAutomaton()
  {
    AutomatonImpl automaton = new AutomatonImpl();
    return automaton;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AState createAState()
  {
    AStateImpl aState = new AStateImpl();
    return aState;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ATransition createATransition()
  {
    ATransitionImpl aTransition = new ATransitionImpl();
    return aTransition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Params createParams()
  {
    ParamsImpl params = new ParamsImpl();
    return params;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public StaticParam createStaticParam()
  {
    StaticParamImpl staticParam = new StaticParamImpl();
    return staticParam;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public StaticArg createStaticArg()
  {
    StaticArgImpl staticArg = new StaticArgImpl();
    return staticArg;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ByNameStaticArg createByNameStaticArg()
  {
    ByNameStaticArgImpl byNameStaticArg = new ByNameStaticArgImpl();
    return byNameStaticArg;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ClockedVariableDeclaration createClockedVariableDeclaration()
  {
    ClockedVariableDeclarationImpl clockedVariableDeclaration = new ClockedVariableDeclarationImpl();
    return clockedVariableDeclaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NodeDeclaration createNodeDeclaration()
  {
    NodeDeclarationImpl nodeDeclaration = new NodeDeclarationImpl();
    return nodeDeclaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NodeValuedObject createNodeValuedObject()
  {
    NodeValuedObjectImpl nodeValuedObject = new NodeValuedObjectImpl();
    return nodeValuedObject;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Equation createEquation()
  {
    EquationImpl equation = new EquationImpl();
    return equation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Assertion createAssertion()
  {
    AssertionImpl assertion = new AssertionImpl();
    return assertion;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LustreValuedObject createLustreValuedObject()
  {
    LustreValuedObjectImpl lustreValuedObject = new LustreValuedObjectImpl();
    return lustreValuedObject;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NodeReference createNodeReference()
  {
    NodeReferenceImpl nodeReference = new NodeReferenceImpl();
    return nodeReference;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LustrePackage getLustrePackage()
  {
    return (LustrePackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static LustrePackage getPackage()
  {
    return LustrePackage.eINSTANCE;
  }

} //LustreFactoryImpl
