/**
 * generated by Xtext
 */
package de.cau.cs.kieler.lustre.lustre.impl;

import de.cau.cs.kieler.lustre.lustre.ByNameStaticArg;
import de.cau.cs.kieler.lustre.lustre.LustrePackage;
import de.cau.cs.kieler.lustre.lustre.PackageEquation;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Package Equation</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.cau.cs.kieler.lustre.lustre.impl.PackageEquationImpl#getName <em>Name</em>}</li>
 *   <li>{@link de.cau.cs.kieler.lustre.lustre.impl.PackageEquationImpl#getEqOrIs <em>Eq Or Is</em>}</li>
 *   <li>{@link de.cau.cs.kieler.lustre.lustre.impl.PackageEquationImpl#getByNameStaticArgs <em>By Name Static Args</em>}</li>
 * </ul>
 *
 * @generated
 */
public class PackageEquationImpl extends MinimalEObjectImpl.Container implements PackageEquation
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getEqOrIs() <em>Eq Or Is</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEqOrIs()
   * @generated
   * @ordered
   */
  protected static final String EQ_OR_IS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getEqOrIs() <em>Eq Or Is</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEqOrIs()
   * @generated
   * @ordered
   */
  protected String eqOrIs = EQ_OR_IS_EDEFAULT;

  /**
   * The cached value of the '{@link #getByNameStaticArgs() <em>By Name Static Args</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getByNameStaticArgs()
   * @generated
   * @ordered
   */
  protected EList<ByNameStaticArg> byNameStaticArgs;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected PackageEquationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return LustrePackage.Literals.PACKAGE_EQUATION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LustrePackage.PACKAGE_EQUATION__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getEqOrIs()
  {
    return eqOrIs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEqOrIs(String newEqOrIs)
  {
    String oldEqOrIs = eqOrIs;
    eqOrIs = newEqOrIs;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LustrePackage.PACKAGE_EQUATION__EQ_OR_IS, oldEqOrIs, eqOrIs));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ByNameStaticArg> getByNameStaticArgs()
  {
    if (byNameStaticArgs == null)
    {
      byNameStaticArgs = new EObjectContainmentEList<ByNameStaticArg>(ByNameStaticArg.class, this, LustrePackage.PACKAGE_EQUATION__BY_NAME_STATIC_ARGS);
    }
    return byNameStaticArgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case LustrePackage.PACKAGE_EQUATION__BY_NAME_STATIC_ARGS:
        return ((InternalEList<?>)getByNameStaticArgs()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case LustrePackage.PACKAGE_EQUATION__NAME:
        return getName();
      case LustrePackage.PACKAGE_EQUATION__EQ_OR_IS:
        return getEqOrIs();
      case LustrePackage.PACKAGE_EQUATION__BY_NAME_STATIC_ARGS:
        return getByNameStaticArgs();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case LustrePackage.PACKAGE_EQUATION__NAME:
        setName((String)newValue);
        return;
      case LustrePackage.PACKAGE_EQUATION__EQ_OR_IS:
        setEqOrIs((String)newValue);
        return;
      case LustrePackage.PACKAGE_EQUATION__BY_NAME_STATIC_ARGS:
        getByNameStaticArgs().clear();
        getByNameStaticArgs().addAll((Collection<? extends ByNameStaticArg>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case LustrePackage.PACKAGE_EQUATION__NAME:
        setName(NAME_EDEFAULT);
        return;
      case LustrePackage.PACKAGE_EQUATION__EQ_OR_IS:
        setEqOrIs(EQ_OR_IS_EDEFAULT);
        return;
      case LustrePackage.PACKAGE_EQUATION__BY_NAME_STATIC_ARGS:
        getByNameStaticArgs().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case LustrePackage.PACKAGE_EQUATION__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case LustrePackage.PACKAGE_EQUATION__EQ_OR_IS:
        return EQ_OR_IS_EDEFAULT == null ? eqOrIs != null : !EQ_OR_IS_EDEFAULT.equals(eqOrIs);
      case LustrePackage.PACKAGE_EQUATION__BY_NAME_STATIC_ARGS:
        return byNameStaticArgs != null && !byNameStaticArgs.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", eqOrIs: ");
    result.append(eqOrIs);
    result.append(')');
    return result.toString();
  }

} //PackageEquationImpl
