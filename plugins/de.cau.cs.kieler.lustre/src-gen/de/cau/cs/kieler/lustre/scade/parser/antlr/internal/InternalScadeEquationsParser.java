package de.cau.cs.kieler.lustre.scade.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.cau.cs.kieler.lustre.scade.services.ScadeEquationsGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalScadeEquationsParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_ID", "RULE_STRING", "RULE_HOSTCODE", "RULE_INT", "RULE_FLOAT", "RULE_BOOLEAN", "RULE_COMMENT_ANNOTATION", "RULE_SL_COMMENT_ANNOTATION", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_NUMBER", "RULE_WS", "RULE_ANY_OTHER", "'('", "','", "')'", "';'", "'='", "'{'", "'}'", "'unsafe'", "'extern'", "'function'", "'node'", "'()'", "'returns'", "':'", "'when'", "'^'", "'const'", "'var'", "'let'", "'tel'", "'.'", "'emit'", "'assert'", "'automaton'", "'..'", "'initial'", "'state'", "'until'", "'unless'", "'if'", "'do'", "'restart'", "'resume'", "'*'", "'/'", "'mod'", "'div'", "'fby'", "'->'", "'then'", "'else'", "'=>'", "'xor'", "'or'", "'and'", "'scope'", "'expression'", "'json'", "'input'", "'output'", "'global'", "'static'", "'signal'", "'host'", "'schedule'", "'ref'", "'['", "']'", "'combine'", "'label'", "'print'", "'randomize'", "'&'", "'>>'", "'>>>'", "'+'", "'-'", "'\\''", "'!'", "'_'", "'null'", "'#'", "'@'", "'bool'", "'int'", "'real'", "'enum'", "'<'", "'<='", "'>'", "'>='", "'<>'", "'not'", "'current'", "'nor'", "'conflicting'", "'commuting'", "'++'", "'--'", "'pre'", "'~'", "'|'", "'val'", "'<<'", "'sfby'", "'struct'", "'class'", "'none'", "'max'", "'min'", "'public'", "'protected'", "'private'", "'void'", "'float'", "'string'"
    };
    public static final int T__50=50;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__60=60;
    public static final int T__61=61;
    public static final int RULE_ID=4;
    public static final int RULE_INT=7;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=12;
    public static final int T__67=67;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int T__64=64;
    public static final int T__65=65;
    public static final int RULE_COMMENT_ANNOTATION=10;
    public static final int T__37=37;
    public static final int RULE_SL_COMMENT_ANNOTATION=11;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int RULE_FLOAT=8;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__91=91;
    public static final int T__100=100;
    public static final int T__92=92;
    public static final int T__93=93;
    public static final int T__102=102;
    public static final int T__94=94;
    public static final int T__101=101;
    public static final int T__90=90;
    public static final int RULE_BOOLEAN=9;
    public static final int T__19=19;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__99=99;
    public static final int T__95=95;
    public static final int T__96=96;
    public static final int T__97=97;
    public static final int T__98=98;
    public static final int T__26=26;
    public static final int RULE_HOSTCODE=6;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__23=23;
    public static final int T__24=24;
    public static final int T__25=25;
    public static final int T__20=20;
    public static final int T__21=21;
    public static final int T__122=122;
    public static final int T__70=70;
    public static final int T__121=121;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int T__120=120;
    public static final int RULE_STRING=5;
    public static final int RULE_SL_COMMENT=13;
    public static final int T__77=77;
    public static final int T__119=119;
    public static final int T__78=78;
    public static final int T__118=118;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int T__115=115;
    public static final int EOF=-1;
    public static final int T__74=74;
    public static final int T__114=114;
    public static final int T__75=75;
    public static final int T__117=117;
    public static final int T__76=76;
    public static final int T__116=116;
    public static final int T__80=80;
    public static final int T__111=111;
    public static final int T__81=81;
    public static final int T__110=110;
    public static final int T__82=82;
    public static final int T__113=113;
    public static final int T__83=83;
    public static final int T__112=112;
    public static final int RULE_WS=15;
    public static final int RULE_ANY_OTHER=16;
    public static final int RULE_NUMBER=14;
    public static final int T__88=88;
    public static final int T__108=108;
    public static final int T__89=89;
    public static final int T__107=107;
    public static final int T__109=109;
    public static final int T__84=84;
    public static final int T__104=104;
    public static final int T__85=85;
    public static final int T__103=103;
    public static final int T__86=86;
    public static final int T__106=106;
    public static final int T__87=87;
    public static final int T__105=105;

    // delegates
    // delegators


        public InternalScadeEquationsParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalScadeEquationsParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalScadeEquationsParser.tokenNames; }
    public String getGrammarFileName() { return "InternalScadeEquations.g"; }



    /*
      This grammar contains a lot of empty actions to work around a bug in ANTLR.
      Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
    */

     	private ScadeEquationsGrammarAccess grammarAccess;

        public InternalScadeEquationsParser(TokenStream input, ScadeEquationsGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "ScadeProgram";
       	}

       	@Override
       	protected ScadeEquationsGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleScadeProgram"
    // InternalScadeEquations.g:71:1: entryRuleScadeProgram returns [EObject current=null] : iv_ruleScadeProgram= ruleScadeProgram EOF ;
    public final EObject entryRuleScadeProgram() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScadeProgram = null;



        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT", "RULE_ML_COMMENT");

        try {
            // InternalScadeEquations.g:73:2: (iv_ruleScadeProgram= ruleScadeProgram EOF )
            // InternalScadeEquations.g:74:2: iv_ruleScadeProgram= ruleScadeProgram EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScadeProgramRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScadeProgram=ruleScadeProgram();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScadeProgram; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleScadeProgram"


    // $ANTLR start "ruleScadeProgram"
    // InternalScadeEquations.g:83:1: ruleScadeProgram returns [EObject current=null] : ( ( (lv_equations_0_0= ruleScadeEquation ) ) | ( (lv_assertions_1_0= ruleAssertion ) ) | ( (lv_automatons_2_0= ruleAutomaton ) ) )* ;
    public final EObject ruleScadeProgram() throws RecognitionException {
        EObject current = null;

        EObject lv_equations_0_0 = null;

        EObject lv_assertions_1_0 = null;

        EObject lv_automatons_2_0 = null;



        	enterRule();
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT", "RULE_ML_COMMENT");

        try {
            // InternalScadeEquations.g:90:2: ( ( ( (lv_equations_0_0= ruleScadeEquation ) ) | ( (lv_assertions_1_0= ruleAssertion ) ) | ( (lv_automatons_2_0= ruleAutomaton ) ) )* )
            // InternalScadeEquations.g:91:2: ( ( (lv_equations_0_0= ruleScadeEquation ) ) | ( (lv_assertions_1_0= ruleAssertion ) ) | ( (lv_automatons_2_0= ruleAutomaton ) ) )*
            {
            // InternalScadeEquations.g:91:2: ( ( (lv_equations_0_0= ruleScadeEquation ) ) | ( (lv_assertions_1_0= ruleAssertion ) ) | ( (lv_automatons_2_0= ruleAutomaton ) ) )*
            loop1:
            do {
                int alt1=4;
                switch ( input.LA(1) ) {
                case RULE_ID:
                case 17:
                    {
                    alt1=1;
                    }
                    break;
                case 39:
                    {
                    alt1=2;
                    }
                    break;
                case 40:
                    {
                    alt1=3;
                    }
                    break;

                }

                switch (alt1) {
            	case 1 :
            	    // InternalScadeEquations.g:92:3: ( (lv_equations_0_0= ruleScadeEquation ) )
            	    {
            	    // InternalScadeEquations.g:92:3: ( (lv_equations_0_0= ruleScadeEquation ) )
            	    // InternalScadeEquations.g:93:4: (lv_equations_0_0= ruleScadeEquation )
            	    {
            	    // InternalScadeEquations.g:93:4: (lv_equations_0_0= ruleScadeEquation )
            	    // InternalScadeEquations.g:94:5: lv_equations_0_0= ruleScadeEquation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getScadeProgramAccess().getEquationsScadeEquationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_3);
            	    lv_equations_0_0=ruleScadeEquation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getScadeProgramRule());
            	      					}
            	      					add(
            	      						current,
            	      						"equations",
            	      						lv_equations_0_0,
            	      						"de.cau.cs.kieler.lustre.scade.ScadeEquations.ScadeEquation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalScadeEquations.g:112:3: ( (lv_assertions_1_0= ruleAssertion ) )
            	    {
            	    // InternalScadeEquations.g:112:3: ( (lv_assertions_1_0= ruleAssertion ) )
            	    // InternalScadeEquations.g:113:4: (lv_assertions_1_0= ruleAssertion )
            	    {
            	    // InternalScadeEquations.g:113:4: (lv_assertions_1_0= ruleAssertion )
            	    // InternalScadeEquations.g:114:5: lv_assertions_1_0= ruleAssertion
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getScadeProgramAccess().getAssertionsAssertionParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_3);
            	    lv_assertions_1_0=ruleAssertion();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getScadeProgramRule());
            	      					}
            	      					add(
            	      						current,
            	      						"assertions",
            	      						lv_assertions_1_0,
            	      						"de.cau.cs.kieler.lustre.Lustre.Assertion");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalScadeEquations.g:132:3: ( (lv_automatons_2_0= ruleAutomaton ) )
            	    {
            	    // InternalScadeEquations.g:132:3: ( (lv_automatons_2_0= ruleAutomaton ) )
            	    // InternalScadeEquations.g:133:4: (lv_automatons_2_0= ruleAutomaton )
            	    {
            	    // InternalScadeEquations.g:133:4: (lv_automatons_2_0= ruleAutomaton )
            	    // InternalScadeEquations.g:134:5: lv_automatons_2_0= ruleAutomaton
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getScadeProgramAccess().getAutomatonsAutomatonParserRuleCall_2_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_3);
            	    lv_automatons_2_0=ruleAutomaton();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getScadeProgramRule());
            	      					}
            	      					add(
            	      						current,
            	      						"automatons",
            	      						lv_automatons_2_0,
            	      						"de.cau.cs.kieler.lustre.Lustre.Automaton");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleScadeProgram"


    // $ANTLR start "entryRuleScadeEquation"
    // InternalScadeEquations.g:158:1: entryRuleScadeEquation returns [EObject current=null] : iv_ruleScadeEquation= ruleScadeEquation EOF ;
    public final EObject entryRuleScadeEquation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScadeEquation = null;


        try {
            // InternalScadeEquations.g:158:54: (iv_ruleScadeEquation= ruleScadeEquation EOF )
            // InternalScadeEquations.g:159:2: iv_ruleScadeEquation= ruleScadeEquation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScadeEquationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScadeEquation=ruleScadeEquation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScadeEquation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScadeEquation"


    // $ANTLR start "ruleScadeEquation"
    // InternalScadeEquations.g:165:1: ruleScadeEquation returns [EObject current=null] : ( ( (otherlv_0= '(' ( (lv_references_1_0= ruleValuedObjectString ) ) otherlv_2= ',' ( (lv_references_3_0= ruleValuedObjectString ) ) (otherlv_4= ',' ( (lv_references_5_0= ruleValuedObjectString ) ) )* otherlv_6= ')' ) | ( ( (lv_references_7_0= ruleValuedObjectString ) ) otherlv_8= ',' ( (lv_references_9_0= ruleValuedObjectString ) ) (otherlv_10= ',' ( (lv_references_11_0= ruleValuedObjectString ) ) )* ) | ( (lv_references_12_0= ruleValuedObjectString ) ) ) ( (lv_operator_13_0= ruleAssignOperator ) ) ( (lv_expression_14_0= ruleExpression ) ) otherlv_15= ';' ) ;
    public final EObject ruleScadeEquation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_15=null;
        EObject lv_references_1_0 = null;

        EObject lv_references_3_0 = null;

        EObject lv_references_5_0 = null;

        EObject lv_references_7_0 = null;

        EObject lv_references_9_0 = null;

        EObject lv_references_11_0 = null;

        EObject lv_references_12_0 = null;

        Enumerator lv_operator_13_0 = null;

        EObject lv_expression_14_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:171:2: ( ( ( (otherlv_0= '(' ( (lv_references_1_0= ruleValuedObjectString ) ) otherlv_2= ',' ( (lv_references_3_0= ruleValuedObjectString ) ) (otherlv_4= ',' ( (lv_references_5_0= ruleValuedObjectString ) ) )* otherlv_6= ')' ) | ( ( (lv_references_7_0= ruleValuedObjectString ) ) otherlv_8= ',' ( (lv_references_9_0= ruleValuedObjectString ) ) (otherlv_10= ',' ( (lv_references_11_0= ruleValuedObjectString ) ) )* ) | ( (lv_references_12_0= ruleValuedObjectString ) ) ) ( (lv_operator_13_0= ruleAssignOperator ) ) ( (lv_expression_14_0= ruleExpression ) ) otherlv_15= ';' ) )
            // InternalScadeEquations.g:172:2: ( ( (otherlv_0= '(' ( (lv_references_1_0= ruleValuedObjectString ) ) otherlv_2= ',' ( (lv_references_3_0= ruleValuedObjectString ) ) (otherlv_4= ',' ( (lv_references_5_0= ruleValuedObjectString ) ) )* otherlv_6= ')' ) | ( ( (lv_references_7_0= ruleValuedObjectString ) ) otherlv_8= ',' ( (lv_references_9_0= ruleValuedObjectString ) ) (otherlv_10= ',' ( (lv_references_11_0= ruleValuedObjectString ) ) )* ) | ( (lv_references_12_0= ruleValuedObjectString ) ) ) ( (lv_operator_13_0= ruleAssignOperator ) ) ( (lv_expression_14_0= ruleExpression ) ) otherlv_15= ';' )
            {
            // InternalScadeEquations.g:172:2: ( ( (otherlv_0= '(' ( (lv_references_1_0= ruleValuedObjectString ) ) otherlv_2= ',' ( (lv_references_3_0= ruleValuedObjectString ) ) (otherlv_4= ',' ( (lv_references_5_0= ruleValuedObjectString ) ) )* otherlv_6= ')' ) | ( ( (lv_references_7_0= ruleValuedObjectString ) ) otherlv_8= ',' ( (lv_references_9_0= ruleValuedObjectString ) ) (otherlv_10= ',' ( (lv_references_11_0= ruleValuedObjectString ) ) )* ) | ( (lv_references_12_0= ruleValuedObjectString ) ) ) ( (lv_operator_13_0= ruleAssignOperator ) ) ( (lv_expression_14_0= ruleExpression ) ) otherlv_15= ';' )
            // InternalScadeEquations.g:173:3: ( (otherlv_0= '(' ( (lv_references_1_0= ruleValuedObjectString ) ) otherlv_2= ',' ( (lv_references_3_0= ruleValuedObjectString ) ) (otherlv_4= ',' ( (lv_references_5_0= ruleValuedObjectString ) ) )* otherlv_6= ')' ) | ( ( (lv_references_7_0= ruleValuedObjectString ) ) otherlv_8= ',' ( (lv_references_9_0= ruleValuedObjectString ) ) (otherlv_10= ',' ( (lv_references_11_0= ruleValuedObjectString ) ) )* ) | ( (lv_references_12_0= ruleValuedObjectString ) ) ) ( (lv_operator_13_0= ruleAssignOperator ) ) ( (lv_expression_14_0= ruleExpression ) ) otherlv_15= ';'
            {
            // InternalScadeEquations.g:173:3: ( (otherlv_0= '(' ( (lv_references_1_0= ruleValuedObjectString ) ) otherlv_2= ',' ( (lv_references_3_0= ruleValuedObjectString ) ) (otherlv_4= ',' ( (lv_references_5_0= ruleValuedObjectString ) ) )* otherlv_6= ')' ) | ( ( (lv_references_7_0= ruleValuedObjectString ) ) otherlv_8= ',' ( (lv_references_9_0= ruleValuedObjectString ) ) (otherlv_10= ',' ( (lv_references_11_0= ruleValuedObjectString ) ) )* ) | ( (lv_references_12_0= ruleValuedObjectString ) ) )
            int alt4=3;
            alt4 = dfa4.predict(input);
            switch (alt4) {
                case 1 :
                    // InternalScadeEquations.g:174:4: (otherlv_0= '(' ( (lv_references_1_0= ruleValuedObjectString ) ) otherlv_2= ',' ( (lv_references_3_0= ruleValuedObjectString ) ) (otherlv_4= ',' ( (lv_references_5_0= ruleValuedObjectString ) ) )* otherlv_6= ')' )
                    {
                    // InternalScadeEquations.g:174:4: (otherlv_0= '(' ( (lv_references_1_0= ruleValuedObjectString ) ) otherlv_2= ',' ( (lv_references_3_0= ruleValuedObjectString ) ) (otherlv_4= ',' ( (lv_references_5_0= ruleValuedObjectString ) ) )* otherlv_6= ')' )
                    // InternalScadeEquations.g:175:5: otherlv_0= '(' ( (lv_references_1_0= ruleValuedObjectString ) ) otherlv_2= ',' ( (lv_references_3_0= ruleValuedObjectString ) ) (otherlv_4= ',' ( (lv_references_5_0= ruleValuedObjectString ) ) )* otherlv_6= ')'
                    {
                    otherlv_0=(Token)match(input,17,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_0, grammarAccess.getScadeEquationAccess().getLeftParenthesisKeyword_0_0_0());
                      				
                    }
                    // InternalScadeEquations.g:179:5: ( (lv_references_1_0= ruleValuedObjectString ) )
                    // InternalScadeEquations.g:180:6: (lv_references_1_0= ruleValuedObjectString )
                    {
                    // InternalScadeEquations.g:180:6: (lv_references_1_0= ruleValuedObjectString )
                    // InternalScadeEquations.g:181:7: lv_references_1_0= ruleValuedObjectString
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getScadeEquationAccess().getReferencesValuedObjectStringParserRuleCall_0_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_5);
                    lv_references_1_0=ruleValuedObjectString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getScadeEquationRule());
                      							}
                      							add(
                      								current,
                      								"references",
                      								lv_references_1_0,
                      								"de.cau.cs.kieler.lustre.scade.ScadeEquations.ValuedObjectString");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,18,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getScadeEquationAccess().getCommaKeyword_0_0_2());
                      				
                    }
                    // InternalScadeEquations.g:202:5: ( (lv_references_3_0= ruleValuedObjectString ) )
                    // InternalScadeEquations.g:203:6: (lv_references_3_0= ruleValuedObjectString )
                    {
                    // InternalScadeEquations.g:203:6: (lv_references_3_0= ruleValuedObjectString )
                    // InternalScadeEquations.g:204:7: lv_references_3_0= ruleValuedObjectString
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getScadeEquationAccess().getReferencesValuedObjectStringParserRuleCall_0_0_3_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_6);
                    lv_references_3_0=ruleValuedObjectString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getScadeEquationRule());
                      							}
                      							add(
                      								current,
                      								"references",
                      								lv_references_3_0,
                      								"de.cau.cs.kieler.lustre.scade.ScadeEquations.ValuedObjectString");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:221:5: (otherlv_4= ',' ( (lv_references_5_0= ruleValuedObjectString ) ) )*
                    loop2:
                    do {
                        int alt2=2;
                        int LA2_0 = input.LA(1);

                        if ( (LA2_0==18) ) {
                            alt2=1;
                        }


                        switch (alt2) {
                    	case 1 :
                    	    // InternalScadeEquations.g:222:6: otherlv_4= ',' ( (lv_references_5_0= ruleValuedObjectString ) )
                    	    {
                    	    otherlv_4=(Token)match(input,18,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_4, grammarAccess.getScadeEquationAccess().getCommaKeyword_0_0_4_0());
                    	      					
                    	    }
                    	    // InternalScadeEquations.g:226:6: ( (lv_references_5_0= ruleValuedObjectString ) )
                    	    // InternalScadeEquations.g:227:7: (lv_references_5_0= ruleValuedObjectString )
                    	    {
                    	    // InternalScadeEquations.g:227:7: (lv_references_5_0= ruleValuedObjectString )
                    	    // InternalScadeEquations.g:228:8: lv_references_5_0= ruleValuedObjectString
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getScadeEquationAccess().getReferencesValuedObjectStringParserRuleCall_0_0_4_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_6);
                    	    lv_references_5_0=ruleValuedObjectString();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getScadeEquationRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"references",
                    	      									lv_references_5_0,
                    	      									"de.cau.cs.kieler.lustre.scade.ScadeEquations.ValuedObjectString");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop2;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,19,FollowSets000.FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getScadeEquationAccess().getRightParenthesisKeyword_0_0_5());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:252:4: ( ( (lv_references_7_0= ruleValuedObjectString ) ) otherlv_8= ',' ( (lv_references_9_0= ruleValuedObjectString ) ) (otherlv_10= ',' ( (lv_references_11_0= ruleValuedObjectString ) ) )* )
                    {
                    // InternalScadeEquations.g:252:4: ( ( (lv_references_7_0= ruleValuedObjectString ) ) otherlv_8= ',' ( (lv_references_9_0= ruleValuedObjectString ) ) (otherlv_10= ',' ( (lv_references_11_0= ruleValuedObjectString ) ) )* )
                    // InternalScadeEquations.g:253:5: ( (lv_references_7_0= ruleValuedObjectString ) ) otherlv_8= ',' ( (lv_references_9_0= ruleValuedObjectString ) ) (otherlv_10= ',' ( (lv_references_11_0= ruleValuedObjectString ) ) )*
                    {
                    // InternalScadeEquations.g:253:5: ( (lv_references_7_0= ruleValuedObjectString ) )
                    // InternalScadeEquations.g:254:6: (lv_references_7_0= ruleValuedObjectString )
                    {
                    // InternalScadeEquations.g:254:6: (lv_references_7_0= ruleValuedObjectString )
                    // InternalScadeEquations.g:255:7: lv_references_7_0= ruleValuedObjectString
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getScadeEquationAccess().getReferencesValuedObjectStringParserRuleCall_0_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_5);
                    lv_references_7_0=ruleValuedObjectString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getScadeEquationRule());
                      							}
                      							add(
                      								current,
                      								"references",
                      								lv_references_7_0,
                      								"de.cau.cs.kieler.lustre.scade.ScadeEquations.ValuedObjectString");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_8=(Token)match(input,18,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_8, grammarAccess.getScadeEquationAccess().getCommaKeyword_0_1_1());
                      				
                    }
                    // InternalScadeEquations.g:276:5: ( (lv_references_9_0= ruleValuedObjectString ) )
                    // InternalScadeEquations.g:277:6: (lv_references_9_0= ruleValuedObjectString )
                    {
                    // InternalScadeEquations.g:277:6: (lv_references_9_0= ruleValuedObjectString )
                    // InternalScadeEquations.g:278:7: lv_references_9_0= ruleValuedObjectString
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getScadeEquationAccess().getReferencesValuedObjectStringParserRuleCall_0_1_2_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_8);
                    lv_references_9_0=ruleValuedObjectString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getScadeEquationRule());
                      							}
                      							add(
                      								current,
                      								"references",
                      								lv_references_9_0,
                      								"de.cau.cs.kieler.lustre.scade.ScadeEquations.ValuedObjectString");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:295:5: (otherlv_10= ',' ( (lv_references_11_0= ruleValuedObjectString ) ) )*
                    loop3:
                    do {
                        int alt3=2;
                        int LA3_0 = input.LA(1);

                        if ( (LA3_0==18) ) {
                            alt3=1;
                        }


                        switch (alt3) {
                    	case 1 :
                    	    // InternalScadeEquations.g:296:6: otherlv_10= ',' ( (lv_references_11_0= ruleValuedObjectString ) )
                    	    {
                    	    otherlv_10=(Token)match(input,18,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_10, grammarAccess.getScadeEquationAccess().getCommaKeyword_0_1_3_0());
                    	      					
                    	    }
                    	    // InternalScadeEquations.g:300:6: ( (lv_references_11_0= ruleValuedObjectString ) )
                    	    // InternalScadeEquations.g:301:7: (lv_references_11_0= ruleValuedObjectString )
                    	    {
                    	    // InternalScadeEquations.g:301:7: (lv_references_11_0= ruleValuedObjectString )
                    	    // InternalScadeEquations.g:302:8: lv_references_11_0= ruleValuedObjectString
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getScadeEquationAccess().getReferencesValuedObjectStringParserRuleCall_0_1_3_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_8);
                    	    lv_references_11_0=ruleValuedObjectString();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getScadeEquationRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"references",
                    	      									lv_references_11_0,
                    	      									"de.cau.cs.kieler.lustre.scade.ScadeEquations.ValuedObjectString");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop3;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 3 :
                    // InternalScadeEquations.g:322:4: ( (lv_references_12_0= ruleValuedObjectString ) )
                    {
                    // InternalScadeEquations.g:322:4: ( (lv_references_12_0= ruleValuedObjectString ) )
                    // InternalScadeEquations.g:323:5: (lv_references_12_0= ruleValuedObjectString )
                    {
                    // InternalScadeEquations.g:323:5: (lv_references_12_0= ruleValuedObjectString )
                    // InternalScadeEquations.g:324:6: lv_references_12_0= ruleValuedObjectString
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getScadeEquationAccess().getReferencesValuedObjectStringParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_7);
                    lv_references_12_0=ruleValuedObjectString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getScadeEquationRule());
                      						}
                      						add(
                      							current,
                      							"references",
                      							lv_references_12_0,
                      							"de.cau.cs.kieler.lustre.scade.ScadeEquations.ValuedObjectString");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:342:3: ( (lv_operator_13_0= ruleAssignOperator ) )
            // InternalScadeEquations.g:343:4: (lv_operator_13_0= ruleAssignOperator )
            {
            // InternalScadeEquations.g:343:4: (lv_operator_13_0= ruleAssignOperator )
            // InternalScadeEquations.g:344:5: lv_operator_13_0= ruleAssignOperator
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getScadeEquationAccess().getOperatorAssignOperatorEnumRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_9);
            lv_operator_13_0=ruleAssignOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getScadeEquationRule());
              					}
              					set(
              						current,
              						"operator",
              						lv_operator_13_0,
              						"de.cau.cs.kieler.lustre.Lustre.AssignOperator");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:361:3: ( (lv_expression_14_0= ruleExpression ) )
            // InternalScadeEquations.g:362:4: (lv_expression_14_0= ruleExpression )
            {
            // InternalScadeEquations.g:362:4: (lv_expression_14_0= ruleExpression )
            // InternalScadeEquations.g:363:5: lv_expression_14_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getScadeEquationAccess().getExpressionExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_10);
            lv_expression_14_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getScadeEquationRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_14_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_15=(Token)match(input,20,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_15, grammarAccess.getScadeEquationAccess().getSemicolonKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScadeEquation"


    // $ANTLR start "entryRuleValuedObjectString"
    // InternalScadeEquations.g:388:1: entryRuleValuedObjectString returns [EObject current=null] : iv_ruleValuedObjectString= ruleValuedObjectString EOF ;
    public final EObject entryRuleValuedObjectString() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValuedObjectString = null;


        try {
            // InternalScadeEquations.g:388:59: (iv_ruleValuedObjectString= ruleValuedObjectString EOF )
            // InternalScadeEquations.g:389:2: iv_ruleValuedObjectString= ruleValuedObjectString EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValuedObjectStringRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleValuedObjectString=ruleValuedObjectString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValuedObjectString; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValuedObjectString"


    // $ANTLR start "ruleValuedObjectString"
    // InternalScadeEquations.g:395:1: ruleValuedObjectString returns [EObject current=null] : ( () ( (lv_name_1_0= rulePrimeID ) ) ) ;
    public final EObject ruleValuedObjectString() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:401:2: ( ( () ( (lv_name_1_0= rulePrimeID ) ) ) )
            // InternalScadeEquations.g:402:2: ( () ( (lv_name_1_0= rulePrimeID ) ) )
            {
            // InternalScadeEquations.g:402:2: ( () ( (lv_name_1_0= rulePrimeID ) ) )
            // InternalScadeEquations.g:403:3: () ( (lv_name_1_0= rulePrimeID ) )
            {
            // InternalScadeEquations.g:403:3: ()
            // InternalScadeEquations.g:404:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getValuedObjectStringAccess().getValuedObjectStringAction_0(),
              					current);
              			
            }

            }

            // InternalScadeEquations.g:413:3: ( (lv_name_1_0= rulePrimeID ) )
            // InternalScadeEquations.g:414:4: (lv_name_1_0= rulePrimeID )
            {
            // InternalScadeEquations.g:414:4: (lv_name_1_0= rulePrimeID )
            // InternalScadeEquations.g:415:5: lv_name_1_0= rulePrimeID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getValuedObjectStringAccess().getNamePrimeIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_name_1_0=rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getValuedObjectStringRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.PrimeID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValuedObjectString"


    // $ANTLR start "entryRuleValuedObjectTestExpression"
    // InternalScadeEquations.g:436:1: entryRuleValuedObjectTestExpression returns [EObject current=null] : iv_ruleValuedObjectTestExpression= ruleValuedObjectTestExpression EOF ;
    public final EObject entryRuleValuedObjectTestExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValuedObjectTestExpression = null;


        try {
            // InternalScadeEquations.g:436:67: (iv_ruleValuedObjectTestExpression= ruleValuedObjectTestExpression EOF )
            // InternalScadeEquations.g:437:2: iv_ruleValuedObjectTestExpression= ruleValuedObjectTestExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValuedObjectTestExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleValuedObjectTestExpression=ruleValuedObjectTestExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValuedObjectTestExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValuedObjectTestExpression"


    // $ANTLR start "ruleValuedObjectTestExpression"
    // InternalScadeEquations.g:443:1: ruleValuedObjectTestExpression returns [EObject current=null] : ( ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleValuedObjectReference ) ) )? otherlv_6= ')' ) | this_ValuedObjectString_7= ruleValuedObjectString ) ;
    public final EObject ruleValuedObjectTestExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Enumerator lv_operator_1_1 = null;

        Enumerator lv_operator_1_2 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;

        EObject this_ValuedObjectString_7 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:449:2: ( ( ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleValuedObjectReference ) ) )? otherlv_6= ')' ) | this_ValuedObjectString_7= ruleValuedObjectString ) )
            // InternalScadeEquations.g:450:2: ( ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleValuedObjectReference ) ) )? otherlv_6= ')' ) | this_ValuedObjectString_7= ruleValuedObjectString )
            {
            // InternalScadeEquations.g:450:2: ( ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleValuedObjectReference ) ) )? otherlv_6= ')' ) | this_ValuedObjectString_7= ruleValuedObjectString )
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==106||LA7_0==109) ) {
                alt7=1;
            }
            else if ( (LA7_0==RULE_ID) ) {
                alt7=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }
            switch (alt7) {
                case 1 :
                    // InternalScadeEquations.g:451:3: ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleValuedObjectReference ) ) )? otherlv_6= ')' )
                    {
                    // InternalScadeEquations.g:451:3: ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleValuedObjectReference ) ) )? otherlv_6= ')' )
                    // InternalScadeEquations.g:452:4: () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleValuedObjectReference ) ) )? otherlv_6= ')'
                    {
                    // InternalScadeEquations.g:452:4: ()
                    // InternalScadeEquations.g:453:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getValuedObjectTestExpressionAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalScadeEquations.g:462:4: ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) )
                    // InternalScadeEquations.g:463:5: ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) )
                    {
                    // InternalScadeEquations.g:463:5: ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) )
                    // InternalScadeEquations.g:464:6: (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator )
                    {
                    // InternalScadeEquations.g:464:6: (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator )
                    int alt5=2;
                    int LA5_0 = input.LA(1);

                    if ( (LA5_0==106) ) {
                        alt5=1;
                    }
                    else if ( (LA5_0==109) ) {
                        alt5=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 5, 0, input);

                        throw nvae;
                    }
                    switch (alt5) {
                        case 1 :
                            // InternalScadeEquations.g:465:7: lv_operator_1_1= rulePreOperator
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorPreOperatorEnumRuleCall_0_1_0_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_11);
                            lv_operator_1_1=rulePreOperator();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getValuedObjectTestExpressionRule());
                              							}
                              							set(
                              								current,
                              								"operator",
                              								lv_operator_1_1,
                              								"de.cau.cs.kieler.kexpressions.KExpressions.PreOperator");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalScadeEquations.g:481:7: lv_operator_1_2= ruleValOperator
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorValOperatorEnumRuleCall_0_1_0_1());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_11);
                            lv_operator_1_2=ruleValOperator();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getValuedObjectTestExpressionRule());
                              							}
                              							set(
                              								current,
                              								"operator",
                              								lv_operator_1_2,
                              								"de.cau.cs.kieler.kexpressions.KExpressions.ValOperator");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;

                    }


                    }


                    }

                    otherlv_2=(Token)match(input,17,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getValuedObjectTestExpressionAccess().getLeftParenthesisKeyword_0_2());
                      			
                    }
                    // InternalScadeEquations.g:503:4: ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) )
                    // InternalScadeEquations.g:504:5: (lv_subExpressions_3_0= ruleValuedObjectTestExpression )
                    {
                    // InternalScadeEquations.g:504:5: (lv_subExpressions_3_0= ruleValuedObjectTestExpression )
                    // InternalScadeEquations.g:505:6: lv_subExpressions_3_0= ruleValuedObjectTestExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsValuedObjectTestExpressionParserRuleCall_0_3_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_6);
                    lv_subExpressions_3_0=ruleValuedObjectTestExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getValuedObjectTestExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_3_0,
                      							"de.cau.cs.kieler.lustre.scade.ScadeEquations.ValuedObjectTestExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalScadeEquations.g:522:4: (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleValuedObjectReference ) ) )?
                    int alt6=2;
                    int LA6_0 = input.LA(1);

                    if ( (LA6_0==18) ) {
                        alt6=1;
                    }
                    switch (alt6) {
                        case 1 :
                            // InternalScadeEquations.g:523:5: otherlv_4= ',' ( (lv_subExpressions_5_0= ruleValuedObjectReference ) )
                            {
                            otherlv_4=(Token)match(input,18,FollowSets000.FOLLOW_4); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_4, grammarAccess.getValuedObjectTestExpressionAccess().getCommaKeyword_0_4_0());
                              				
                            }
                            // InternalScadeEquations.g:527:5: ( (lv_subExpressions_5_0= ruleValuedObjectReference ) )
                            // InternalScadeEquations.g:528:6: (lv_subExpressions_5_0= ruleValuedObjectReference )
                            {
                            // InternalScadeEquations.g:528:6: (lv_subExpressions_5_0= ruleValuedObjectReference )
                            // InternalScadeEquations.g:529:7: lv_subExpressions_5_0= ruleValuedObjectReference
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsValuedObjectReferenceParserRuleCall_0_4_1_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_13);
                            lv_subExpressions_5_0=ruleValuedObjectReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getValuedObjectTestExpressionRule());
                              							}
                              							add(
                              								current,
                              								"subExpressions",
                              								lv_subExpressions_5_0,
                              								"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    otherlv_6=(Token)match(input,19,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getValuedObjectTestExpressionAccess().getRightParenthesisKeyword_0_5());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:553:3: this_ValuedObjectString_7= ruleValuedObjectString
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getValuedObjectTestExpressionAccess().getValuedObjectStringParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedObjectString_7=ruleValuedObjectString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ValuedObjectString_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValuedObjectTestExpression"


    // $ANTLR start "entryRuleTypeDeclaration"
    // InternalScadeEquations.g:568:1: entryRuleTypeDeclaration returns [EObject current=null] : iv_ruleTypeDeclaration= ruleTypeDeclaration EOF ;
    public final EObject entryRuleTypeDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeDeclaration = null;


        try {
            // InternalScadeEquations.g:568:56: (iv_ruleTypeDeclaration= ruleTypeDeclaration EOF )
            // InternalScadeEquations.g:569:2: iv_ruleTypeDeclaration= ruleTypeDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypeDeclaration=ruleTypeDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeDeclaration"


    // $ANTLR start "ruleTypeDeclaration"
    // InternalScadeEquations.g:575:1: ruleTypeDeclaration returns [EObject current=null] : ( () ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= '=' ( ( (lv_type_3_0= ruleValueType ) ) | ( ( (lv_type_4_0= ruleEnumType ) ) otherlv_5= '{' ( (lv_enums_6_0= rulePrimeID ) ) (otherlv_7= ',' ( (lv_enums_8_0= rulePrimeID ) ) )* otherlv_9= '}' ) | ( ( (lv_type_10_0= ruleStructType ) ) otherlv_11= '{' ( ( (lv_variables_12_1= ruleVariableDeclarationInit | lv_variables_12_2= ruleVariableDeclarationNoInit ) ) ) (otherlv_13= ';' ( ( (lv_variables_14_1= ruleVariableDeclarationInit | lv_variables_14_2= ruleVariableDeclarationNoInit ) ) ) )* (otherlv_15= ';' )? otherlv_16= '}' ) ) )? ) ;
    public final EObject ruleTypeDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        Enumerator lv_type_3_0 = null;

        Enumerator lv_type_4_0 = null;

        AntlrDatatypeRuleToken lv_enums_6_0 = null;

        AntlrDatatypeRuleToken lv_enums_8_0 = null;

        Enumerator lv_type_10_0 = null;

        EObject lv_variables_12_1 = null;

        EObject lv_variables_12_2 = null;

        EObject lv_variables_14_1 = null;

        EObject lv_variables_14_2 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:581:2: ( ( () ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= '=' ( ( (lv_type_3_0= ruleValueType ) ) | ( ( (lv_type_4_0= ruleEnumType ) ) otherlv_5= '{' ( (lv_enums_6_0= rulePrimeID ) ) (otherlv_7= ',' ( (lv_enums_8_0= rulePrimeID ) ) )* otherlv_9= '}' ) | ( ( (lv_type_10_0= ruleStructType ) ) otherlv_11= '{' ( ( (lv_variables_12_1= ruleVariableDeclarationInit | lv_variables_12_2= ruleVariableDeclarationNoInit ) ) ) (otherlv_13= ';' ( ( (lv_variables_14_1= ruleVariableDeclarationInit | lv_variables_14_2= ruleVariableDeclarationNoInit ) ) ) )* (otherlv_15= ';' )? otherlv_16= '}' ) ) )? ) )
            // InternalScadeEquations.g:582:2: ( () ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= '=' ( ( (lv_type_3_0= ruleValueType ) ) | ( ( (lv_type_4_0= ruleEnumType ) ) otherlv_5= '{' ( (lv_enums_6_0= rulePrimeID ) ) (otherlv_7= ',' ( (lv_enums_8_0= rulePrimeID ) ) )* otherlv_9= '}' ) | ( ( (lv_type_10_0= ruleStructType ) ) otherlv_11= '{' ( ( (lv_variables_12_1= ruleVariableDeclarationInit | lv_variables_12_2= ruleVariableDeclarationNoInit ) ) ) (otherlv_13= ';' ( ( (lv_variables_14_1= ruleVariableDeclarationInit | lv_variables_14_2= ruleVariableDeclarationNoInit ) ) ) )* (otherlv_15= ';' )? otherlv_16= '}' ) ) )? )
            {
            // InternalScadeEquations.g:582:2: ( () ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= '=' ( ( (lv_type_3_0= ruleValueType ) ) | ( ( (lv_type_4_0= ruleEnumType ) ) otherlv_5= '{' ( (lv_enums_6_0= rulePrimeID ) ) (otherlv_7= ',' ( (lv_enums_8_0= rulePrimeID ) ) )* otherlv_9= '}' ) | ( ( (lv_type_10_0= ruleStructType ) ) otherlv_11= '{' ( ( (lv_variables_12_1= ruleVariableDeclarationInit | lv_variables_12_2= ruleVariableDeclarationNoInit ) ) ) (otherlv_13= ';' ( ( (lv_variables_14_1= ruleVariableDeclarationInit | lv_variables_14_2= ruleVariableDeclarationNoInit ) ) ) )* (otherlv_15= ';' )? otherlv_16= '}' ) ) )? )
            // InternalScadeEquations.g:583:3: () ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= '=' ( ( (lv_type_3_0= ruleValueType ) ) | ( ( (lv_type_4_0= ruleEnumType ) ) otherlv_5= '{' ( (lv_enums_6_0= rulePrimeID ) ) (otherlv_7= ',' ( (lv_enums_8_0= rulePrimeID ) ) )* otherlv_9= '}' ) | ( ( (lv_type_10_0= ruleStructType ) ) otherlv_11= '{' ( ( (lv_variables_12_1= ruleVariableDeclarationInit | lv_variables_12_2= ruleVariableDeclarationNoInit ) ) ) (otherlv_13= ';' ( ( (lv_variables_14_1= ruleVariableDeclarationInit | lv_variables_14_2= ruleVariableDeclarationNoInit ) ) ) )* (otherlv_15= ';' )? otherlv_16= '}' ) ) )?
            {
            // InternalScadeEquations.g:583:3: ()
            // InternalScadeEquations.g:584:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getTypeDeclarationAccess().getTypeDeclarationAction_0(),
              					current);
              			
            }

            }

            // InternalScadeEquations.g:593:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalScadeEquations.g:594:4: (lv_name_1_0= RULE_ID )
            {
            // InternalScadeEquations.g:594:4: (lv_name_1_0= RULE_ID )
            // InternalScadeEquations.g:595:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getTypeDeclarationAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getTypeDeclarationRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ID");
              				
            }

            }


            }

            // InternalScadeEquations.g:611:3: (otherlv_2= '=' ( ( (lv_type_3_0= ruleValueType ) ) | ( ( (lv_type_4_0= ruleEnumType ) ) otherlv_5= '{' ( (lv_enums_6_0= rulePrimeID ) ) (otherlv_7= ',' ( (lv_enums_8_0= rulePrimeID ) ) )* otherlv_9= '}' ) | ( ( (lv_type_10_0= ruleStructType ) ) otherlv_11= '{' ( ( (lv_variables_12_1= ruleVariableDeclarationInit | lv_variables_12_2= ruleVariableDeclarationNoInit ) ) ) (otherlv_13= ';' ( ( (lv_variables_14_1= ruleVariableDeclarationInit | lv_variables_14_2= ruleVariableDeclarationNoInit ) ) ) )* (otherlv_15= ';' )? otherlv_16= '}' ) ) )?
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==21) ) {
                alt14=1;
            }
            switch (alt14) {
                case 1 :
                    // InternalScadeEquations.g:612:4: otherlv_2= '=' ( ( (lv_type_3_0= ruleValueType ) ) | ( ( (lv_type_4_0= ruleEnumType ) ) otherlv_5= '{' ( (lv_enums_6_0= rulePrimeID ) ) (otherlv_7= ',' ( (lv_enums_8_0= rulePrimeID ) ) )* otherlv_9= '}' ) | ( ( (lv_type_10_0= ruleStructType ) ) otherlv_11= '{' ( ( (lv_variables_12_1= ruleVariableDeclarationInit | lv_variables_12_2= ruleVariableDeclarationNoInit ) ) ) (otherlv_13= ';' ( ( (lv_variables_14_1= ruleVariableDeclarationInit | lv_variables_14_2= ruleVariableDeclarationNoInit ) ) ) )* (otherlv_15= ';' )? otherlv_16= '}' ) )
                    {
                    otherlv_2=(Token)match(input,21,FollowSets000.FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getTypeDeclarationAccess().getEqualsSignKeyword_2_0());
                      			
                    }
                    // InternalScadeEquations.g:616:4: ( ( (lv_type_3_0= ruleValueType ) ) | ( ( (lv_type_4_0= ruleEnumType ) ) otherlv_5= '{' ( (lv_enums_6_0= rulePrimeID ) ) (otherlv_7= ',' ( (lv_enums_8_0= rulePrimeID ) ) )* otherlv_9= '}' ) | ( ( (lv_type_10_0= ruleStructType ) ) otherlv_11= '{' ( ( (lv_variables_12_1= ruleVariableDeclarationInit | lv_variables_12_2= ruleVariableDeclarationNoInit ) ) ) (otherlv_13= ';' ( ( (lv_variables_14_1= ruleVariableDeclarationInit | lv_variables_14_2= ruleVariableDeclarationNoInit ) ) ) )* (otherlv_15= ';' )? otherlv_16= '}' ) )
                    int alt13=3;
                    switch ( input.LA(1) ) {
                    case 90:
                    case 91:
                    case 92:
                        {
                        alt13=1;
                        }
                        break;
                    case 93:
                        {
                        alt13=2;
                        }
                        break;
                    case 112:
                        {
                        alt13=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 13, 0, input);

                        throw nvae;
                    }

                    switch (alt13) {
                        case 1 :
                            // InternalScadeEquations.g:617:5: ( (lv_type_3_0= ruleValueType ) )
                            {
                            // InternalScadeEquations.g:617:5: ( (lv_type_3_0= ruleValueType ) )
                            // InternalScadeEquations.g:618:6: (lv_type_3_0= ruleValueType )
                            {
                            // InternalScadeEquations.g:618:6: (lv_type_3_0= ruleValueType )
                            // InternalScadeEquations.g:619:7: lv_type_3_0= ruleValueType
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getTypeDeclarationAccess().getTypeValueTypeEnumRuleCall_2_1_0_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_type_3_0=ruleValueType();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getTypeDeclarationRule());
                              							}
                              							set(
                              								current,
                              								"type",
                              								lv_type_3_0,
                              								"de.cau.cs.kieler.lustre.Lustre.ValueType");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalScadeEquations.g:637:5: ( ( (lv_type_4_0= ruleEnumType ) ) otherlv_5= '{' ( (lv_enums_6_0= rulePrimeID ) ) (otherlv_7= ',' ( (lv_enums_8_0= rulePrimeID ) ) )* otherlv_9= '}' )
                            {
                            // InternalScadeEquations.g:637:5: ( ( (lv_type_4_0= ruleEnumType ) ) otherlv_5= '{' ( (lv_enums_6_0= rulePrimeID ) ) (otherlv_7= ',' ( (lv_enums_8_0= rulePrimeID ) ) )* otherlv_9= '}' )
                            // InternalScadeEquations.g:638:6: ( (lv_type_4_0= ruleEnumType ) ) otherlv_5= '{' ( (lv_enums_6_0= rulePrimeID ) ) (otherlv_7= ',' ( (lv_enums_8_0= rulePrimeID ) ) )* otherlv_9= '}'
                            {
                            // InternalScadeEquations.g:638:6: ( (lv_type_4_0= ruleEnumType ) )
                            // InternalScadeEquations.g:639:7: (lv_type_4_0= ruleEnumType )
                            {
                            // InternalScadeEquations.g:639:7: (lv_type_4_0= ruleEnumType )
                            // InternalScadeEquations.g:640:8: lv_type_4_0= ruleEnumType
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getTypeDeclarationAccess().getTypeEnumTypeEnumRuleCall_2_1_1_0_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_16);
                            lv_type_4_0=ruleEnumType();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getTypeDeclarationRule());
                              								}
                              								set(
                              									current,
                              									"type",
                              									lv_type_4_0,
                              									"de.cau.cs.kieler.lustre.Lustre.EnumType");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_5=(Token)match(input,22,FollowSets000.FOLLOW_4); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_5, grammarAccess.getTypeDeclarationAccess().getLeftCurlyBracketKeyword_2_1_1_1());
                              					
                            }
                            // InternalScadeEquations.g:661:6: ( (lv_enums_6_0= rulePrimeID ) )
                            // InternalScadeEquations.g:662:7: (lv_enums_6_0= rulePrimeID )
                            {
                            // InternalScadeEquations.g:662:7: (lv_enums_6_0= rulePrimeID )
                            // InternalScadeEquations.g:663:8: lv_enums_6_0= rulePrimeID
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getTypeDeclarationAccess().getEnumsPrimeIDParserRuleCall_2_1_1_2_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_17);
                            lv_enums_6_0=rulePrimeID();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getTypeDeclarationRule());
                              								}
                              								add(
                              									current,
                              									"enums",
                              									lv_enums_6_0,
                              									"de.cau.cs.kieler.kexpressions.KExpressions.PrimeID");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalScadeEquations.g:680:6: (otherlv_7= ',' ( (lv_enums_8_0= rulePrimeID ) ) )*
                            loop8:
                            do {
                                int alt8=2;
                                int LA8_0 = input.LA(1);

                                if ( (LA8_0==18) ) {
                                    alt8=1;
                                }


                                switch (alt8) {
                            	case 1 :
                            	    // InternalScadeEquations.g:681:7: otherlv_7= ',' ( (lv_enums_8_0= rulePrimeID ) )
                            	    {
                            	    otherlv_7=(Token)match(input,18,FollowSets000.FOLLOW_4); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_7, grammarAccess.getTypeDeclarationAccess().getCommaKeyword_2_1_1_3_0());
                            	      						
                            	    }
                            	    // InternalScadeEquations.g:685:7: ( (lv_enums_8_0= rulePrimeID ) )
                            	    // InternalScadeEquations.g:686:8: (lv_enums_8_0= rulePrimeID )
                            	    {
                            	    // InternalScadeEquations.g:686:8: (lv_enums_8_0= rulePrimeID )
                            	    // InternalScadeEquations.g:687:9: lv_enums_8_0= rulePrimeID
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getTypeDeclarationAccess().getEnumsPrimeIDParserRuleCall_2_1_1_3_1_0());
                            	      								
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_17);
                            	    lv_enums_8_0=rulePrimeID();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getTypeDeclarationRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"enums",
                            	      										lv_enums_8_0,
                            	      										"de.cau.cs.kieler.kexpressions.KExpressions.PrimeID");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop8;
                                }
                            } while (true);

                            otherlv_9=(Token)match(input,23,FollowSets000.FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_9, grammarAccess.getTypeDeclarationAccess().getRightCurlyBracketKeyword_2_1_1_4());
                              					
                            }

                            }


                            }
                            break;
                        case 3 :
                            // InternalScadeEquations.g:711:5: ( ( (lv_type_10_0= ruleStructType ) ) otherlv_11= '{' ( ( (lv_variables_12_1= ruleVariableDeclarationInit | lv_variables_12_2= ruleVariableDeclarationNoInit ) ) ) (otherlv_13= ';' ( ( (lv_variables_14_1= ruleVariableDeclarationInit | lv_variables_14_2= ruleVariableDeclarationNoInit ) ) ) )* (otherlv_15= ';' )? otherlv_16= '}' )
                            {
                            // InternalScadeEquations.g:711:5: ( ( (lv_type_10_0= ruleStructType ) ) otherlv_11= '{' ( ( (lv_variables_12_1= ruleVariableDeclarationInit | lv_variables_12_2= ruleVariableDeclarationNoInit ) ) ) (otherlv_13= ';' ( ( (lv_variables_14_1= ruleVariableDeclarationInit | lv_variables_14_2= ruleVariableDeclarationNoInit ) ) ) )* (otherlv_15= ';' )? otherlv_16= '}' )
                            // InternalScadeEquations.g:712:6: ( (lv_type_10_0= ruleStructType ) ) otherlv_11= '{' ( ( (lv_variables_12_1= ruleVariableDeclarationInit | lv_variables_12_2= ruleVariableDeclarationNoInit ) ) ) (otherlv_13= ';' ( ( (lv_variables_14_1= ruleVariableDeclarationInit | lv_variables_14_2= ruleVariableDeclarationNoInit ) ) ) )* (otherlv_15= ';' )? otherlv_16= '}'
                            {
                            // InternalScadeEquations.g:712:6: ( (lv_type_10_0= ruleStructType ) )
                            // InternalScadeEquations.g:713:7: (lv_type_10_0= ruleStructType )
                            {
                            // InternalScadeEquations.g:713:7: (lv_type_10_0= ruleStructType )
                            // InternalScadeEquations.g:714:8: lv_type_10_0= ruleStructType
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getTypeDeclarationAccess().getTypeStructTypeEnumRuleCall_2_1_2_0_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_16);
                            lv_type_10_0=ruleStructType();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getTypeDeclarationRule());
                              								}
                              								set(
                              									current,
                              									"type",
                              									lv_type_10_0,
                              									"de.cau.cs.kieler.kexpressions.KExpressions.StructType");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_11=(Token)match(input,22,FollowSets000.FOLLOW_4); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_11, grammarAccess.getTypeDeclarationAccess().getLeftCurlyBracketKeyword_2_1_2_1());
                              					
                            }
                            // InternalScadeEquations.g:735:6: ( ( (lv_variables_12_1= ruleVariableDeclarationInit | lv_variables_12_2= ruleVariableDeclarationNoInit ) ) )
                            // InternalScadeEquations.g:736:7: ( (lv_variables_12_1= ruleVariableDeclarationInit | lv_variables_12_2= ruleVariableDeclarationNoInit ) )
                            {
                            // InternalScadeEquations.g:736:7: ( (lv_variables_12_1= ruleVariableDeclarationInit | lv_variables_12_2= ruleVariableDeclarationNoInit ) )
                            // InternalScadeEquations.g:737:8: (lv_variables_12_1= ruleVariableDeclarationInit | lv_variables_12_2= ruleVariableDeclarationNoInit )
                            {
                            // InternalScadeEquations.g:737:8: (lv_variables_12_1= ruleVariableDeclarationInit | lv_variables_12_2= ruleVariableDeclarationNoInit )
                            int alt9=2;
                            int LA9_0 = input.LA(1);

                            if ( (LA9_0==RULE_ID) ) {
                                int LA9_1 = input.LA(2);

                                if ( (synpred14_InternalScadeEquations()) ) {
                                    alt9=1;
                                }
                                else if ( (true) ) {
                                    alt9=2;
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return current;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 9, 1, input);

                                    throw nvae;
                                }
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 9, 0, input);

                                throw nvae;
                            }
                            switch (alt9) {
                                case 1 :
                                    // InternalScadeEquations.g:738:9: lv_variables_12_1= ruleVariableDeclarationInit
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getTypeDeclarationAccess().getVariablesVariableDeclarationInitParserRuleCall_2_1_2_2_0_0());
                                      								
                                    }
                                    pushFollow(FollowSets000.FOLLOW_18);
                                    lv_variables_12_1=ruleVariableDeclarationInit();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getTypeDeclarationRule());
                                      									}
                                      									add(
                                      										current,
                                      										"variables",
                                      										lv_variables_12_1,
                                      										"de.cau.cs.kieler.lustre.Lustre.VariableDeclarationInit");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalScadeEquations.g:754:9: lv_variables_12_2= ruleVariableDeclarationNoInit
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getTypeDeclarationAccess().getVariablesVariableDeclarationNoInitParserRuleCall_2_1_2_2_0_1());
                                      								
                                    }
                                    pushFollow(FollowSets000.FOLLOW_18);
                                    lv_variables_12_2=ruleVariableDeclarationNoInit();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getTypeDeclarationRule());
                                      									}
                                      									add(
                                      										current,
                                      										"variables",
                                      										lv_variables_12_2,
                                      										"de.cau.cs.kieler.lustre.Lustre.VariableDeclarationNoInit");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }
                                    break;

                            }


                            }


                            }

                            // InternalScadeEquations.g:772:6: (otherlv_13= ';' ( ( (lv_variables_14_1= ruleVariableDeclarationInit | lv_variables_14_2= ruleVariableDeclarationNoInit ) ) ) )*
                            loop11:
                            do {
                                int alt11=2;
                                int LA11_0 = input.LA(1);

                                if ( (LA11_0==20) ) {
                                    int LA11_1 = input.LA(2);

                                    if ( (LA11_1==RULE_ID) ) {
                                        alt11=1;
                                    }


                                }


                                switch (alt11) {
                            	case 1 :
                            	    // InternalScadeEquations.g:773:7: otherlv_13= ';' ( ( (lv_variables_14_1= ruleVariableDeclarationInit | lv_variables_14_2= ruleVariableDeclarationNoInit ) ) )
                            	    {
                            	    otherlv_13=(Token)match(input,20,FollowSets000.FOLLOW_4); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_13, grammarAccess.getTypeDeclarationAccess().getSemicolonKeyword_2_1_2_3_0());
                            	      						
                            	    }
                            	    // InternalScadeEquations.g:777:7: ( ( (lv_variables_14_1= ruleVariableDeclarationInit | lv_variables_14_2= ruleVariableDeclarationNoInit ) ) )
                            	    // InternalScadeEquations.g:778:8: ( (lv_variables_14_1= ruleVariableDeclarationInit | lv_variables_14_2= ruleVariableDeclarationNoInit ) )
                            	    {
                            	    // InternalScadeEquations.g:778:8: ( (lv_variables_14_1= ruleVariableDeclarationInit | lv_variables_14_2= ruleVariableDeclarationNoInit ) )
                            	    // InternalScadeEquations.g:779:9: (lv_variables_14_1= ruleVariableDeclarationInit | lv_variables_14_2= ruleVariableDeclarationNoInit )
                            	    {
                            	    // InternalScadeEquations.g:779:9: (lv_variables_14_1= ruleVariableDeclarationInit | lv_variables_14_2= ruleVariableDeclarationNoInit )
                            	    int alt10=2;
                            	    int LA10_0 = input.LA(1);

                            	    if ( (LA10_0==RULE_ID) ) {
                            	        int LA10_1 = input.LA(2);

                            	        if ( (synpred15_InternalScadeEquations()) ) {
                            	            alt10=1;
                            	        }
                            	        else if ( (true) ) {
                            	            alt10=2;
                            	        }
                            	        else {
                            	            if (state.backtracking>0) {state.failed=true; return current;}
                            	            NoViableAltException nvae =
                            	                new NoViableAltException("", 10, 1, input);

                            	            throw nvae;
                            	        }
                            	    }
                            	    else {
                            	        if (state.backtracking>0) {state.failed=true; return current;}
                            	        NoViableAltException nvae =
                            	            new NoViableAltException("", 10, 0, input);

                            	        throw nvae;
                            	    }
                            	    switch (alt10) {
                            	        case 1 :
                            	            // InternalScadeEquations.g:780:10: lv_variables_14_1= ruleVariableDeclarationInit
                            	            {
                            	            if ( state.backtracking==0 ) {

                            	              										newCompositeNode(grammarAccess.getTypeDeclarationAccess().getVariablesVariableDeclarationInitParserRuleCall_2_1_2_3_1_0_0());
                            	              									
                            	            }
                            	            pushFollow(FollowSets000.FOLLOW_18);
                            	            lv_variables_14_1=ruleVariableDeclarationInit();

                            	            state._fsp--;
                            	            if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              										if (current==null) {
                            	              											current = createModelElementForParent(grammarAccess.getTypeDeclarationRule());
                            	              										}
                            	              										add(
                            	              											current,
                            	              											"variables",
                            	              											lv_variables_14_1,
                            	              											"de.cau.cs.kieler.lustre.Lustre.VariableDeclarationInit");
                            	              										afterParserOrEnumRuleCall();
                            	              									
                            	            }

                            	            }
                            	            break;
                            	        case 2 :
                            	            // InternalScadeEquations.g:796:10: lv_variables_14_2= ruleVariableDeclarationNoInit
                            	            {
                            	            if ( state.backtracking==0 ) {

                            	              										newCompositeNode(grammarAccess.getTypeDeclarationAccess().getVariablesVariableDeclarationNoInitParserRuleCall_2_1_2_3_1_0_1());
                            	              									
                            	            }
                            	            pushFollow(FollowSets000.FOLLOW_18);
                            	            lv_variables_14_2=ruleVariableDeclarationNoInit();

                            	            state._fsp--;
                            	            if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              										if (current==null) {
                            	              											current = createModelElementForParent(grammarAccess.getTypeDeclarationRule());
                            	              										}
                            	              										add(
                            	              											current,
                            	              											"variables",
                            	              											lv_variables_14_2,
                            	              											"de.cau.cs.kieler.lustre.Lustre.VariableDeclarationNoInit");
                            	              										afterParserOrEnumRuleCall();
                            	              									
                            	            }

                            	            }
                            	            break;

                            	    }


                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop11;
                                }
                            } while (true);

                            // InternalScadeEquations.g:815:6: (otherlv_15= ';' )?
                            int alt12=2;
                            int LA12_0 = input.LA(1);

                            if ( (LA12_0==20) ) {
                                alt12=1;
                            }
                            switch (alt12) {
                                case 1 :
                                    // InternalScadeEquations.g:816:7: otherlv_15= ';'
                                    {
                                    otherlv_15=(Token)match(input,20,FollowSets000.FOLLOW_19); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_15, grammarAccess.getTypeDeclarationAccess().getSemicolonKeyword_2_1_2_4());
                                      						
                                    }

                                    }
                                    break;

                            }

                            otherlv_16=(Token)match(input,23,FollowSets000.FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_16, grammarAccess.getTypeDeclarationAccess().getRightCurlyBracketKeyword_2_1_2_5());
                              					
                            }

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeDeclaration"


    // $ANTLR start "entryRuleExternalNodeDeclaration"
    // InternalScadeEquations.g:832:1: entryRuleExternalNodeDeclaration returns [EObject current=null] : iv_ruleExternalNodeDeclaration= ruleExternalNodeDeclaration EOF ;
    public final EObject entryRuleExternalNodeDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExternalNodeDeclaration = null;


        try {
            // InternalScadeEquations.g:832:64: (iv_ruleExternalNodeDeclaration= ruleExternalNodeDeclaration EOF )
            // InternalScadeEquations.g:833:2: iv_ruleExternalNodeDeclaration= ruleExternalNodeDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExternalNodeDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleExternalNodeDeclaration=ruleExternalNodeDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExternalNodeDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExternalNodeDeclaration"


    // $ANTLR start "ruleExternalNodeDeclaration"
    // InternalScadeEquations.g:839:1: ruleExternalNodeDeclaration returns [EObject current=null] : ( () ( (lv_isUnsafe_1_0= 'unsafe' ) )? otherlv_2= 'extern' (otherlv_3= 'function' | ( (lv_hasState_4_0= 'node' ) ) ) ( (lv_valuedObjects_5_0= ruleNodeValuedObject ) ) ( (otherlv_6= '(' ( (lv_inputs_7_0= ruleVariableDeclarationNoInit ) ) (otherlv_8= ';' ( (lv_inputs_9_0= ruleVariableDeclarationNoInit ) ) )* otherlv_10= ')' ) | otherlv_11= '()' ) otherlv_12= 'returns' ( (otherlv_13= '(' ( (lv_outputs_14_0= ruleVariableDeclarationNoInit ) ) (otherlv_15= ';' ( (lv_outputs_16_0= ruleVariableDeclarationNoInit ) ) )* otherlv_17= ')' ) | otherlv_18= '()' ) (otherlv_19= ';' )? ) ;
    public final EObject ruleExternalNodeDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_isUnsafe_1_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token lv_hasState_4_0=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        EObject lv_valuedObjects_5_0 = null;

        EObject lv_inputs_7_0 = null;

        EObject lv_inputs_9_0 = null;

        EObject lv_outputs_14_0 = null;

        EObject lv_outputs_16_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:845:2: ( ( () ( (lv_isUnsafe_1_0= 'unsafe' ) )? otherlv_2= 'extern' (otherlv_3= 'function' | ( (lv_hasState_4_0= 'node' ) ) ) ( (lv_valuedObjects_5_0= ruleNodeValuedObject ) ) ( (otherlv_6= '(' ( (lv_inputs_7_0= ruleVariableDeclarationNoInit ) ) (otherlv_8= ';' ( (lv_inputs_9_0= ruleVariableDeclarationNoInit ) ) )* otherlv_10= ')' ) | otherlv_11= '()' ) otherlv_12= 'returns' ( (otherlv_13= '(' ( (lv_outputs_14_0= ruleVariableDeclarationNoInit ) ) (otherlv_15= ';' ( (lv_outputs_16_0= ruleVariableDeclarationNoInit ) ) )* otherlv_17= ')' ) | otherlv_18= '()' ) (otherlv_19= ';' )? ) )
            // InternalScadeEquations.g:846:2: ( () ( (lv_isUnsafe_1_0= 'unsafe' ) )? otherlv_2= 'extern' (otherlv_3= 'function' | ( (lv_hasState_4_0= 'node' ) ) ) ( (lv_valuedObjects_5_0= ruleNodeValuedObject ) ) ( (otherlv_6= '(' ( (lv_inputs_7_0= ruleVariableDeclarationNoInit ) ) (otherlv_8= ';' ( (lv_inputs_9_0= ruleVariableDeclarationNoInit ) ) )* otherlv_10= ')' ) | otherlv_11= '()' ) otherlv_12= 'returns' ( (otherlv_13= '(' ( (lv_outputs_14_0= ruleVariableDeclarationNoInit ) ) (otherlv_15= ';' ( (lv_outputs_16_0= ruleVariableDeclarationNoInit ) ) )* otherlv_17= ')' ) | otherlv_18= '()' ) (otherlv_19= ';' )? )
            {
            // InternalScadeEquations.g:846:2: ( () ( (lv_isUnsafe_1_0= 'unsafe' ) )? otherlv_2= 'extern' (otherlv_3= 'function' | ( (lv_hasState_4_0= 'node' ) ) ) ( (lv_valuedObjects_5_0= ruleNodeValuedObject ) ) ( (otherlv_6= '(' ( (lv_inputs_7_0= ruleVariableDeclarationNoInit ) ) (otherlv_8= ';' ( (lv_inputs_9_0= ruleVariableDeclarationNoInit ) ) )* otherlv_10= ')' ) | otherlv_11= '()' ) otherlv_12= 'returns' ( (otherlv_13= '(' ( (lv_outputs_14_0= ruleVariableDeclarationNoInit ) ) (otherlv_15= ';' ( (lv_outputs_16_0= ruleVariableDeclarationNoInit ) ) )* otherlv_17= ')' ) | otherlv_18= '()' ) (otherlv_19= ';' )? )
            // InternalScadeEquations.g:847:3: () ( (lv_isUnsafe_1_0= 'unsafe' ) )? otherlv_2= 'extern' (otherlv_3= 'function' | ( (lv_hasState_4_0= 'node' ) ) ) ( (lv_valuedObjects_5_0= ruleNodeValuedObject ) ) ( (otherlv_6= '(' ( (lv_inputs_7_0= ruleVariableDeclarationNoInit ) ) (otherlv_8= ';' ( (lv_inputs_9_0= ruleVariableDeclarationNoInit ) ) )* otherlv_10= ')' ) | otherlv_11= '()' ) otherlv_12= 'returns' ( (otherlv_13= '(' ( (lv_outputs_14_0= ruleVariableDeclarationNoInit ) ) (otherlv_15= ';' ( (lv_outputs_16_0= ruleVariableDeclarationNoInit ) ) )* otherlv_17= ')' ) | otherlv_18= '()' ) (otherlv_19= ';' )?
            {
            // InternalScadeEquations.g:847:3: ()
            // InternalScadeEquations.g:848:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getExternalNodeDeclarationAccess().getExternalNodeDeclarationAction_0(),
              					current);
              			
            }

            }

            // InternalScadeEquations.g:857:3: ( (lv_isUnsafe_1_0= 'unsafe' ) )?
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==24) ) {
                alt15=1;
            }
            switch (alt15) {
                case 1 :
                    // InternalScadeEquations.g:858:4: (lv_isUnsafe_1_0= 'unsafe' )
                    {
                    // InternalScadeEquations.g:858:4: (lv_isUnsafe_1_0= 'unsafe' )
                    // InternalScadeEquations.g:859:5: lv_isUnsafe_1_0= 'unsafe'
                    {
                    lv_isUnsafe_1_0=(Token)match(input,24,FollowSets000.FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isUnsafe_1_0, grammarAccess.getExternalNodeDeclarationAccess().getIsUnsafeUnsafeKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getExternalNodeDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "isUnsafe", true, "unsafe");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,25,FollowSets000.FOLLOW_21); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getExternalNodeDeclarationAccess().getExternKeyword_2());
              		
            }
            // InternalScadeEquations.g:875:3: (otherlv_3= 'function' | ( (lv_hasState_4_0= 'node' ) ) )
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==26) ) {
                alt16=1;
            }
            else if ( (LA16_0==27) ) {
                alt16=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }
            switch (alt16) {
                case 1 :
                    // InternalScadeEquations.g:876:4: otherlv_3= 'function'
                    {
                    otherlv_3=(Token)match(input,26,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getExternalNodeDeclarationAccess().getFunctionKeyword_3_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:881:4: ( (lv_hasState_4_0= 'node' ) )
                    {
                    // InternalScadeEquations.g:881:4: ( (lv_hasState_4_0= 'node' ) )
                    // InternalScadeEquations.g:882:5: (lv_hasState_4_0= 'node' )
                    {
                    // InternalScadeEquations.g:882:5: (lv_hasState_4_0= 'node' )
                    // InternalScadeEquations.g:883:6: lv_hasState_4_0= 'node'
                    {
                    lv_hasState_4_0=(Token)match(input,27,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_hasState_4_0, grammarAccess.getExternalNodeDeclarationAccess().getHasStateNodeKeyword_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getExternalNodeDeclarationRule());
                      						}
                      						setWithLastConsumed(current, "hasState", true, "node");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:896:3: ( (lv_valuedObjects_5_0= ruleNodeValuedObject ) )
            // InternalScadeEquations.g:897:4: (lv_valuedObjects_5_0= ruleNodeValuedObject )
            {
            // InternalScadeEquations.g:897:4: (lv_valuedObjects_5_0= ruleNodeValuedObject )
            // InternalScadeEquations.g:898:5: lv_valuedObjects_5_0= ruleNodeValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExternalNodeDeclarationAccess().getValuedObjectsNodeValuedObjectParserRuleCall_4_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_22);
            lv_valuedObjects_5_0=ruleNodeValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExternalNodeDeclarationRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_5_0,
              						"de.cau.cs.kieler.lustre.Lustre.NodeValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:915:3: ( (otherlv_6= '(' ( (lv_inputs_7_0= ruleVariableDeclarationNoInit ) ) (otherlv_8= ';' ( (lv_inputs_9_0= ruleVariableDeclarationNoInit ) ) )* otherlv_10= ')' ) | otherlv_11= '()' )
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==17) ) {
                alt18=1;
            }
            else if ( (LA18_0==28) ) {
                alt18=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }
            switch (alt18) {
                case 1 :
                    // InternalScadeEquations.g:916:4: (otherlv_6= '(' ( (lv_inputs_7_0= ruleVariableDeclarationNoInit ) ) (otherlv_8= ';' ( (lv_inputs_9_0= ruleVariableDeclarationNoInit ) ) )* otherlv_10= ')' )
                    {
                    // InternalScadeEquations.g:916:4: (otherlv_6= '(' ( (lv_inputs_7_0= ruleVariableDeclarationNoInit ) ) (otherlv_8= ';' ( (lv_inputs_9_0= ruleVariableDeclarationNoInit ) ) )* otherlv_10= ')' )
                    // InternalScadeEquations.g:917:5: otherlv_6= '(' ( (lv_inputs_7_0= ruleVariableDeclarationNoInit ) ) (otherlv_8= ';' ( (lv_inputs_9_0= ruleVariableDeclarationNoInit ) ) )* otherlv_10= ')'
                    {
                    otherlv_6=(Token)match(input,17,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getExternalNodeDeclarationAccess().getLeftParenthesisKeyword_5_0_0());
                      				
                    }
                    // InternalScadeEquations.g:921:5: ( (lv_inputs_7_0= ruleVariableDeclarationNoInit ) )
                    // InternalScadeEquations.g:922:6: (lv_inputs_7_0= ruleVariableDeclarationNoInit )
                    {
                    // InternalScadeEquations.g:922:6: (lv_inputs_7_0= ruleVariableDeclarationNoInit )
                    // InternalScadeEquations.g:923:7: lv_inputs_7_0= ruleVariableDeclarationNoInit
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getExternalNodeDeclarationAccess().getInputsVariableDeclarationNoInitParserRuleCall_5_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_23);
                    lv_inputs_7_0=ruleVariableDeclarationNoInit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getExternalNodeDeclarationRule());
                      							}
                      							add(
                      								current,
                      								"inputs",
                      								lv_inputs_7_0,
                      								"de.cau.cs.kieler.lustre.Lustre.VariableDeclarationNoInit");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:940:5: (otherlv_8= ';' ( (lv_inputs_9_0= ruleVariableDeclarationNoInit ) ) )*
                    loop17:
                    do {
                        int alt17=2;
                        int LA17_0 = input.LA(1);

                        if ( (LA17_0==20) ) {
                            alt17=1;
                        }


                        switch (alt17) {
                    	case 1 :
                    	    // InternalScadeEquations.g:941:6: otherlv_8= ';' ( (lv_inputs_9_0= ruleVariableDeclarationNoInit ) )
                    	    {
                    	    otherlv_8=(Token)match(input,20,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_8, grammarAccess.getExternalNodeDeclarationAccess().getSemicolonKeyword_5_0_2_0());
                    	      					
                    	    }
                    	    // InternalScadeEquations.g:945:6: ( (lv_inputs_9_0= ruleVariableDeclarationNoInit ) )
                    	    // InternalScadeEquations.g:946:7: (lv_inputs_9_0= ruleVariableDeclarationNoInit )
                    	    {
                    	    // InternalScadeEquations.g:946:7: (lv_inputs_9_0= ruleVariableDeclarationNoInit )
                    	    // InternalScadeEquations.g:947:8: lv_inputs_9_0= ruleVariableDeclarationNoInit
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getExternalNodeDeclarationAccess().getInputsVariableDeclarationNoInitParserRuleCall_5_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_23);
                    	    lv_inputs_9_0=ruleVariableDeclarationNoInit();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getExternalNodeDeclarationRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"inputs",
                    	      									lv_inputs_9_0,
                    	      									"de.cau.cs.kieler.lustre.Lustre.VariableDeclarationNoInit");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop17;
                        }
                    } while (true);

                    otherlv_10=(Token)match(input,19,FollowSets000.FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_10, grammarAccess.getExternalNodeDeclarationAccess().getRightParenthesisKeyword_5_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:971:4: otherlv_11= '()'
                    {
                    otherlv_11=(Token)match(input,28,FollowSets000.FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getExternalNodeDeclarationAccess().getLeftParenthesisRightParenthesisKeyword_5_1());
                      			
                    }

                    }
                    break;

            }

            otherlv_12=(Token)match(input,29,FollowSets000.FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_12, grammarAccess.getExternalNodeDeclarationAccess().getReturnsKeyword_6());
              		
            }
            // InternalScadeEquations.g:980:3: ( (otherlv_13= '(' ( (lv_outputs_14_0= ruleVariableDeclarationNoInit ) ) (otherlv_15= ';' ( (lv_outputs_16_0= ruleVariableDeclarationNoInit ) ) )* otherlv_17= ')' ) | otherlv_18= '()' )
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==17) ) {
                alt20=1;
            }
            else if ( (LA20_0==28) ) {
                alt20=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }
            switch (alt20) {
                case 1 :
                    // InternalScadeEquations.g:981:4: (otherlv_13= '(' ( (lv_outputs_14_0= ruleVariableDeclarationNoInit ) ) (otherlv_15= ';' ( (lv_outputs_16_0= ruleVariableDeclarationNoInit ) ) )* otherlv_17= ')' )
                    {
                    // InternalScadeEquations.g:981:4: (otherlv_13= '(' ( (lv_outputs_14_0= ruleVariableDeclarationNoInit ) ) (otherlv_15= ';' ( (lv_outputs_16_0= ruleVariableDeclarationNoInit ) ) )* otherlv_17= ')' )
                    // InternalScadeEquations.g:982:5: otherlv_13= '(' ( (lv_outputs_14_0= ruleVariableDeclarationNoInit ) ) (otherlv_15= ';' ( (lv_outputs_16_0= ruleVariableDeclarationNoInit ) ) )* otherlv_17= ')'
                    {
                    otherlv_13=(Token)match(input,17,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_13, grammarAccess.getExternalNodeDeclarationAccess().getLeftParenthesisKeyword_7_0_0());
                      				
                    }
                    // InternalScadeEquations.g:986:5: ( (lv_outputs_14_0= ruleVariableDeclarationNoInit ) )
                    // InternalScadeEquations.g:987:6: (lv_outputs_14_0= ruleVariableDeclarationNoInit )
                    {
                    // InternalScadeEquations.g:987:6: (lv_outputs_14_0= ruleVariableDeclarationNoInit )
                    // InternalScadeEquations.g:988:7: lv_outputs_14_0= ruleVariableDeclarationNoInit
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getExternalNodeDeclarationAccess().getOutputsVariableDeclarationNoInitParserRuleCall_7_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_23);
                    lv_outputs_14_0=ruleVariableDeclarationNoInit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getExternalNodeDeclarationRule());
                      							}
                      							add(
                      								current,
                      								"outputs",
                      								lv_outputs_14_0,
                      								"de.cau.cs.kieler.lustre.Lustre.VariableDeclarationNoInit");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:1005:5: (otherlv_15= ';' ( (lv_outputs_16_0= ruleVariableDeclarationNoInit ) ) )*
                    loop19:
                    do {
                        int alt19=2;
                        int LA19_0 = input.LA(1);

                        if ( (LA19_0==20) ) {
                            alt19=1;
                        }


                        switch (alt19) {
                    	case 1 :
                    	    // InternalScadeEquations.g:1006:6: otherlv_15= ';' ( (lv_outputs_16_0= ruleVariableDeclarationNoInit ) )
                    	    {
                    	    otherlv_15=(Token)match(input,20,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_15, grammarAccess.getExternalNodeDeclarationAccess().getSemicolonKeyword_7_0_2_0());
                    	      					
                    	    }
                    	    // InternalScadeEquations.g:1010:6: ( (lv_outputs_16_0= ruleVariableDeclarationNoInit ) )
                    	    // InternalScadeEquations.g:1011:7: (lv_outputs_16_0= ruleVariableDeclarationNoInit )
                    	    {
                    	    // InternalScadeEquations.g:1011:7: (lv_outputs_16_0= ruleVariableDeclarationNoInit )
                    	    // InternalScadeEquations.g:1012:8: lv_outputs_16_0= ruleVariableDeclarationNoInit
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getExternalNodeDeclarationAccess().getOutputsVariableDeclarationNoInitParserRuleCall_7_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_23);
                    	    lv_outputs_16_0=ruleVariableDeclarationNoInit();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getExternalNodeDeclarationRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"outputs",
                    	      									lv_outputs_16_0,
                    	      									"de.cau.cs.kieler.lustre.Lustre.VariableDeclarationNoInit");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop19;
                        }
                    } while (true);

                    otherlv_17=(Token)match(input,19,FollowSets000.FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_17, grammarAccess.getExternalNodeDeclarationAccess().getRightParenthesisKeyword_7_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:1036:4: otherlv_18= '()'
                    {
                    otherlv_18=(Token)match(input,28,FollowSets000.FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getExternalNodeDeclarationAccess().getLeftParenthesisRightParenthesisKeyword_7_1());
                      			
                    }

                    }
                    break;

            }

            // InternalScadeEquations.g:1041:3: (otherlv_19= ';' )?
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==20) ) {
                alt21=1;
            }
            switch (alt21) {
                case 1 :
                    // InternalScadeEquations.g:1042:4: otherlv_19= ';'
                    {
                    otherlv_19=(Token)match(input,20,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_19, grammarAccess.getExternalNodeDeclarationAccess().getSemicolonKeyword_8());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExternalNodeDeclaration"


    // $ANTLR start "entryRuleVariableDeclarationNoInit"
    // InternalScadeEquations.g:1051:1: entryRuleVariableDeclarationNoInit returns [EObject current=null] : iv_ruleVariableDeclarationNoInit= ruleVariableDeclarationNoInit EOF ;
    public final EObject entryRuleVariableDeclarationNoInit() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVariableDeclarationNoInit = null;


        try {
            // InternalScadeEquations.g:1051:66: (iv_ruleVariableDeclarationNoInit= ruleVariableDeclarationNoInit EOF )
            // InternalScadeEquations.g:1052:2: iv_ruleVariableDeclarationNoInit= ruleVariableDeclarationNoInit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVariableDeclarationNoInitRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleVariableDeclarationNoInit=ruleVariableDeclarationNoInit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVariableDeclarationNoInit; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVariableDeclarationNoInit"


    // $ANTLR start "ruleVariableDeclarationNoInit"
    // InternalScadeEquations.g:1058:1: ruleVariableDeclarationNoInit returns [EObject current=null] : ( () ( (lv_valuedObjects_1_0= ruleValuedObjectNoInit ) ) (otherlv_2= ',' ( (lv_valuedObjects_3_0= ruleValuedObjectNoInit ) ) )* otherlv_4= ':' ( (lv_type_5_0= ruleValueType ) ) (otherlv_6= 'when' ( (lv_clockExpr_7_0= ruleBoolExpression ) ) )? ) ;
    public final EObject ruleVariableDeclarationNoInit() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_valuedObjects_1_0 = null;

        EObject lv_valuedObjects_3_0 = null;

        Enumerator lv_type_5_0 = null;

        EObject lv_clockExpr_7_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:1064:2: ( ( () ( (lv_valuedObjects_1_0= ruleValuedObjectNoInit ) ) (otherlv_2= ',' ( (lv_valuedObjects_3_0= ruleValuedObjectNoInit ) ) )* otherlv_4= ':' ( (lv_type_5_0= ruleValueType ) ) (otherlv_6= 'when' ( (lv_clockExpr_7_0= ruleBoolExpression ) ) )? ) )
            // InternalScadeEquations.g:1065:2: ( () ( (lv_valuedObjects_1_0= ruleValuedObjectNoInit ) ) (otherlv_2= ',' ( (lv_valuedObjects_3_0= ruleValuedObjectNoInit ) ) )* otherlv_4= ':' ( (lv_type_5_0= ruleValueType ) ) (otherlv_6= 'when' ( (lv_clockExpr_7_0= ruleBoolExpression ) ) )? )
            {
            // InternalScadeEquations.g:1065:2: ( () ( (lv_valuedObjects_1_0= ruleValuedObjectNoInit ) ) (otherlv_2= ',' ( (lv_valuedObjects_3_0= ruleValuedObjectNoInit ) ) )* otherlv_4= ':' ( (lv_type_5_0= ruleValueType ) ) (otherlv_6= 'when' ( (lv_clockExpr_7_0= ruleBoolExpression ) ) )? )
            // InternalScadeEquations.g:1066:3: () ( (lv_valuedObjects_1_0= ruleValuedObjectNoInit ) ) (otherlv_2= ',' ( (lv_valuedObjects_3_0= ruleValuedObjectNoInit ) ) )* otherlv_4= ':' ( (lv_type_5_0= ruleValueType ) ) (otherlv_6= 'when' ( (lv_clockExpr_7_0= ruleBoolExpression ) ) )?
            {
            // InternalScadeEquations.g:1066:3: ()
            // InternalScadeEquations.g:1067:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getVariableDeclarationNoInitAccess().getLustreVariableDeclarationAction_0(),
              					current);
              			
            }

            }

            // InternalScadeEquations.g:1076:3: ( (lv_valuedObjects_1_0= ruleValuedObjectNoInit ) )
            // InternalScadeEquations.g:1077:4: (lv_valuedObjects_1_0= ruleValuedObjectNoInit )
            {
            // InternalScadeEquations.g:1077:4: (lv_valuedObjects_1_0= ruleValuedObjectNoInit )
            // InternalScadeEquations.g:1078:5: lv_valuedObjects_1_0= ruleValuedObjectNoInit
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getVariableDeclarationNoInitAccess().getValuedObjectsValuedObjectNoInitParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_26);
            lv_valuedObjects_1_0=ruleValuedObjectNoInit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getVariableDeclarationNoInitRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_1_0,
              						"de.cau.cs.kieler.lustre.Lustre.ValuedObjectNoInit");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:1095:3: (otherlv_2= ',' ( (lv_valuedObjects_3_0= ruleValuedObjectNoInit ) ) )*
            loop22:
            do {
                int alt22=2;
                int LA22_0 = input.LA(1);

                if ( (LA22_0==18) ) {
                    alt22=1;
                }


                switch (alt22) {
            	case 1 :
            	    // InternalScadeEquations.g:1096:4: otherlv_2= ',' ( (lv_valuedObjects_3_0= ruleValuedObjectNoInit ) )
            	    {
            	    otherlv_2=(Token)match(input,18,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getVariableDeclarationNoInitAccess().getCommaKeyword_2_0());
            	      			
            	    }
            	    // InternalScadeEquations.g:1100:4: ( (lv_valuedObjects_3_0= ruleValuedObjectNoInit ) )
            	    // InternalScadeEquations.g:1101:5: (lv_valuedObjects_3_0= ruleValuedObjectNoInit )
            	    {
            	    // InternalScadeEquations.g:1101:5: (lv_valuedObjects_3_0= ruleValuedObjectNoInit )
            	    // InternalScadeEquations.g:1102:6: lv_valuedObjects_3_0= ruleValuedObjectNoInit
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getVariableDeclarationNoInitAccess().getValuedObjectsValuedObjectNoInitParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_26);
            	    lv_valuedObjects_3_0=ruleValuedObjectNoInit();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getVariableDeclarationNoInitRule());
            	      						}
            	      						add(
            	      							current,
            	      							"valuedObjects",
            	      							lv_valuedObjects_3_0,
            	      							"de.cau.cs.kieler.lustre.Lustre.ValuedObjectNoInit");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop22;
                }
            } while (true);

            otherlv_4=(Token)match(input,30,FollowSets000.FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getVariableDeclarationNoInitAccess().getColonKeyword_3());
              		
            }
            // InternalScadeEquations.g:1124:3: ( (lv_type_5_0= ruleValueType ) )
            // InternalScadeEquations.g:1125:4: (lv_type_5_0= ruleValueType )
            {
            // InternalScadeEquations.g:1125:4: (lv_type_5_0= ruleValueType )
            // InternalScadeEquations.g:1126:5: lv_type_5_0= ruleValueType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getVariableDeclarationNoInitAccess().getTypeValueTypeEnumRuleCall_4_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_28);
            lv_type_5_0=ruleValueType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getVariableDeclarationNoInitRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_5_0,
              						"de.cau.cs.kieler.lustre.Lustre.ValueType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:1143:3: (otherlv_6= 'when' ( (lv_clockExpr_7_0= ruleBoolExpression ) ) )?
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==31) ) {
                alt23=1;
            }
            switch (alt23) {
                case 1 :
                    // InternalScadeEquations.g:1144:4: otherlv_6= 'when' ( (lv_clockExpr_7_0= ruleBoolExpression ) )
                    {
                    otherlv_6=(Token)match(input,31,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getVariableDeclarationNoInitAccess().getWhenKeyword_5_0());
                      			
                    }
                    // InternalScadeEquations.g:1148:4: ( (lv_clockExpr_7_0= ruleBoolExpression ) )
                    // InternalScadeEquations.g:1149:5: (lv_clockExpr_7_0= ruleBoolExpression )
                    {
                    // InternalScadeEquations.g:1149:5: (lv_clockExpr_7_0= ruleBoolExpression )
                    // InternalScadeEquations.g:1150:6: lv_clockExpr_7_0= ruleBoolExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getVariableDeclarationNoInitAccess().getClockExprBoolExpressionParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_clockExpr_7_0=ruleBoolExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getVariableDeclarationNoInitRule());
                      						}
                      						set(
                      							current,
                      							"clockExpr",
                      							lv_clockExpr_7_0,
                      							"de.cau.cs.kieler.lustre.Lustre.BoolExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVariableDeclarationNoInit"


    // $ANTLR start "entryRuleVariableDeclarationInit"
    // InternalScadeEquations.g:1172:1: entryRuleVariableDeclarationInit returns [EObject current=null] : iv_ruleVariableDeclarationInit= ruleVariableDeclarationInit EOF ;
    public final EObject entryRuleVariableDeclarationInit() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVariableDeclarationInit = null;


        try {
            // InternalScadeEquations.g:1172:64: (iv_ruleVariableDeclarationInit= ruleVariableDeclarationInit EOF )
            // InternalScadeEquations.g:1173:2: iv_ruleVariableDeclarationInit= ruleVariableDeclarationInit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVariableDeclarationInitRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleVariableDeclarationInit=ruleVariableDeclarationInit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVariableDeclarationInit; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVariableDeclarationInit"


    // $ANTLR start "ruleVariableDeclarationInit"
    // InternalScadeEquations.g:1179:1: ruleVariableDeclarationInit returns [EObject current=null] : ( () ( (lv_valuedObjects_1_0= ruleValuedObjectInit ) ) (otherlv_2= 'when' ( (lv_clockExpr_3_0= ruleBoolExpression ) ) )? ) ;
    public final EObject ruleVariableDeclarationInit() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_valuedObjects_1_0 = null;

        EObject lv_clockExpr_3_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:1185:2: ( ( () ( (lv_valuedObjects_1_0= ruleValuedObjectInit ) ) (otherlv_2= 'when' ( (lv_clockExpr_3_0= ruleBoolExpression ) ) )? ) )
            // InternalScadeEquations.g:1186:2: ( () ( (lv_valuedObjects_1_0= ruleValuedObjectInit ) ) (otherlv_2= 'when' ( (lv_clockExpr_3_0= ruleBoolExpression ) ) )? )
            {
            // InternalScadeEquations.g:1186:2: ( () ( (lv_valuedObjects_1_0= ruleValuedObjectInit ) ) (otherlv_2= 'when' ( (lv_clockExpr_3_0= ruleBoolExpression ) ) )? )
            // InternalScadeEquations.g:1187:3: () ( (lv_valuedObjects_1_0= ruleValuedObjectInit ) ) (otherlv_2= 'when' ( (lv_clockExpr_3_0= ruleBoolExpression ) ) )?
            {
            // InternalScadeEquations.g:1187:3: ()
            // InternalScadeEquations.g:1188:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getVariableDeclarationInitAccess().getLustreVariableDeclarationAction_0(),
              					current);
              			
            }

            }

            // InternalScadeEquations.g:1197:3: ( (lv_valuedObjects_1_0= ruleValuedObjectInit ) )
            // InternalScadeEquations.g:1198:4: (lv_valuedObjects_1_0= ruleValuedObjectInit )
            {
            // InternalScadeEquations.g:1198:4: (lv_valuedObjects_1_0= ruleValuedObjectInit )
            // InternalScadeEquations.g:1199:5: lv_valuedObjects_1_0= ruleValuedObjectInit
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getVariableDeclarationInitAccess().getValuedObjectsValuedObjectInitParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_28);
            lv_valuedObjects_1_0=ruleValuedObjectInit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getVariableDeclarationInitRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_1_0,
              						"de.cau.cs.kieler.lustre.Lustre.ValuedObjectInit");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:1216:3: (otherlv_2= 'when' ( (lv_clockExpr_3_0= ruleBoolExpression ) ) )?
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( (LA24_0==31) ) {
                alt24=1;
            }
            switch (alt24) {
                case 1 :
                    // InternalScadeEquations.g:1217:4: otherlv_2= 'when' ( (lv_clockExpr_3_0= ruleBoolExpression ) )
                    {
                    otherlv_2=(Token)match(input,31,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getVariableDeclarationInitAccess().getWhenKeyword_2_0());
                      			
                    }
                    // InternalScadeEquations.g:1221:4: ( (lv_clockExpr_3_0= ruleBoolExpression ) )
                    // InternalScadeEquations.g:1222:5: (lv_clockExpr_3_0= ruleBoolExpression )
                    {
                    // InternalScadeEquations.g:1222:5: (lv_clockExpr_3_0= ruleBoolExpression )
                    // InternalScadeEquations.g:1223:6: lv_clockExpr_3_0= ruleBoolExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getVariableDeclarationInitAccess().getClockExprBoolExpressionParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_clockExpr_3_0=ruleBoolExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getVariableDeclarationInitRule());
                      						}
                      						set(
                      							current,
                      							"clockExpr",
                      							lv_clockExpr_3_0,
                      							"de.cau.cs.kieler.lustre.Lustre.BoolExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVariableDeclarationInit"


    // $ANTLR start "entryRuleValuedObjectNoInit"
    // InternalScadeEquations.g:1245:1: entryRuleValuedObjectNoInit returns [EObject current=null] : iv_ruleValuedObjectNoInit= ruleValuedObjectNoInit EOF ;
    public final EObject entryRuleValuedObjectNoInit() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValuedObjectNoInit = null;


        try {
            // InternalScadeEquations.g:1245:59: (iv_ruleValuedObjectNoInit= ruleValuedObjectNoInit EOF )
            // InternalScadeEquations.g:1246:2: iv_ruleValuedObjectNoInit= ruleValuedObjectNoInit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValuedObjectNoInitRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleValuedObjectNoInit=ruleValuedObjectNoInit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValuedObjectNoInit; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValuedObjectNoInit"


    // $ANTLR start "ruleValuedObjectNoInit"
    // InternalScadeEquations.g:1252:1: ruleValuedObjectNoInit returns [EObject current=null] : ( ( (lv_name_0_0= rulePrimeID ) ) (otherlv_1= '^' ( (lv_cardinalities_2_0= ruleExpression ) ) )* ) ;
    public final EObject ruleValuedObjectNoInit() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_cardinalities_2_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:1258:2: ( ( ( (lv_name_0_0= rulePrimeID ) ) (otherlv_1= '^' ( (lv_cardinalities_2_0= ruleExpression ) ) )* ) )
            // InternalScadeEquations.g:1259:2: ( ( (lv_name_0_0= rulePrimeID ) ) (otherlv_1= '^' ( (lv_cardinalities_2_0= ruleExpression ) ) )* )
            {
            // InternalScadeEquations.g:1259:2: ( ( (lv_name_0_0= rulePrimeID ) ) (otherlv_1= '^' ( (lv_cardinalities_2_0= ruleExpression ) ) )* )
            // InternalScadeEquations.g:1260:3: ( (lv_name_0_0= rulePrimeID ) ) (otherlv_1= '^' ( (lv_cardinalities_2_0= ruleExpression ) ) )*
            {
            // InternalScadeEquations.g:1260:3: ( (lv_name_0_0= rulePrimeID ) )
            // InternalScadeEquations.g:1261:4: (lv_name_0_0= rulePrimeID )
            {
            // InternalScadeEquations.g:1261:4: (lv_name_0_0= rulePrimeID )
            // InternalScadeEquations.g:1262:5: lv_name_0_0= rulePrimeID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getValuedObjectNoInitAccess().getNamePrimeIDParserRuleCall_0_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_29);
            lv_name_0_0=rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getValuedObjectNoInitRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_0_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.PrimeID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:1279:3: (otherlv_1= '^' ( (lv_cardinalities_2_0= ruleExpression ) ) )*
            loop25:
            do {
                int alt25=2;
                int LA25_0 = input.LA(1);

                if ( (LA25_0==32) ) {
                    alt25=1;
                }


                switch (alt25) {
            	case 1 :
            	    // InternalScadeEquations.g:1280:4: otherlv_1= '^' ( (lv_cardinalities_2_0= ruleExpression ) )
            	    {
            	    otherlv_1=(Token)match(input,32,FollowSets000.FOLLOW_9); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getValuedObjectNoInitAccess().getCircumflexAccentKeyword_1_0());
            	      			
            	    }
            	    // InternalScadeEquations.g:1284:4: ( (lv_cardinalities_2_0= ruleExpression ) )
            	    // InternalScadeEquations.g:1285:5: (lv_cardinalities_2_0= ruleExpression )
            	    {
            	    // InternalScadeEquations.g:1285:5: (lv_cardinalities_2_0= ruleExpression )
            	    // InternalScadeEquations.g:1286:6: lv_cardinalities_2_0= ruleExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getValuedObjectNoInitAccess().getCardinalitiesExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_29);
            	    lv_cardinalities_2_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getValuedObjectNoInitRule());
            	      						}
            	      						add(
            	      							current,
            	      							"cardinalities",
            	      							lv_cardinalities_2_0,
            	      							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop25;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValuedObjectNoInit"


    // $ANTLR start "entryRuleValuedObjectInit"
    // InternalScadeEquations.g:1308:1: entryRuleValuedObjectInit returns [EObject current=null] : iv_ruleValuedObjectInit= ruleValuedObjectInit EOF ;
    public final EObject entryRuleValuedObjectInit() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValuedObjectInit = null;


        try {
            // InternalScadeEquations.g:1308:57: (iv_ruleValuedObjectInit= ruleValuedObjectInit EOF )
            // InternalScadeEquations.g:1309:2: iv_ruleValuedObjectInit= ruleValuedObjectInit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValuedObjectInitRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleValuedObjectInit=ruleValuedObjectInit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValuedObjectInit; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValuedObjectInit"


    // $ANTLR start "ruleValuedObjectInit"
    // InternalScadeEquations.g:1315:1: ruleValuedObjectInit returns [EObject current=null] : ( () ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '^' ( (lv_cardinalities_3_0= ruleExpression ) ) )* (otherlv_4= ':' ( (lv_type_5_0= ruleValueType ) ) ) (otherlv_6= '=' ( (lv_initialValue_7_0= ruleExpression ) ) )? ) ;
    public final EObject ruleValuedObjectInit() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_cardinalities_3_0 = null;

        Enumerator lv_type_5_0 = null;

        EObject lv_initialValue_7_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:1321:2: ( ( () ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '^' ( (lv_cardinalities_3_0= ruleExpression ) ) )* (otherlv_4= ':' ( (lv_type_5_0= ruleValueType ) ) ) (otherlv_6= '=' ( (lv_initialValue_7_0= ruleExpression ) ) )? ) )
            // InternalScadeEquations.g:1322:2: ( () ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '^' ( (lv_cardinalities_3_0= ruleExpression ) ) )* (otherlv_4= ':' ( (lv_type_5_0= ruleValueType ) ) ) (otherlv_6= '=' ( (lv_initialValue_7_0= ruleExpression ) ) )? )
            {
            // InternalScadeEquations.g:1322:2: ( () ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '^' ( (lv_cardinalities_3_0= ruleExpression ) ) )* (otherlv_4= ':' ( (lv_type_5_0= ruleValueType ) ) ) (otherlv_6= '=' ( (lv_initialValue_7_0= ruleExpression ) ) )? )
            // InternalScadeEquations.g:1323:3: () ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '^' ( (lv_cardinalities_3_0= ruleExpression ) ) )* (otherlv_4= ':' ( (lv_type_5_0= ruleValueType ) ) ) (otherlv_6= '=' ( (lv_initialValue_7_0= ruleExpression ) ) )?
            {
            // InternalScadeEquations.g:1323:3: ()
            // InternalScadeEquations.g:1324:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getValuedObjectInitAccess().getLustreValuedObjectAction_0(),
              					current);
              			
            }

            }

            // InternalScadeEquations.g:1333:3: ( (lv_name_1_0= rulePrimeID ) )
            // InternalScadeEquations.g:1334:4: (lv_name_1_0= rulePrimeID )
            {
            // InternalScadeEquations.g:1334:4: (lv_name_1_0= rulePrimeID )
            // InternalScadeEquations.g:1335:5: lv_name_1_0= rulePrimeID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getValuedObjectInitAccess().getNamePrimeIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_30);
            lv_name_1_0=rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getValuedObjectInitRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.PrimeID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:1352:3: (otherlv_2= '^' ( (lv_cardinalities_3_0= ruleExpression ) ) )*
            loop26:
            do {
                int alt26=2;
                int LA26_0 = input.LA(1);

                if ( (LA26_0==32) ) {
                    alt26=1;
                }


                switch (alt26) {
            	case 1 :
            	    // InternalScadeEquations.g:1353:4: otherlv_2= '^' ( (lv_cardinalities_3_0= ruleExpression ) )
            	    {
            	    otherlv_2=(Token)match(input,32,FollowSets000.FOLLOW_9); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getValuedObjectInitAccess().getCircumflexAccentKeyword_2_0());
            	      			
            	    }
            	    // InternalScadeEquations.g:1357:4: ( (lv_cardinalities_3_0= ruleExpression ) )
            	    // InternalScadeEquations.g:1358:5: (lv_cardinalities_3_0= ruleExpression )
            	    {
            	    // InternalScadeEquations.g:1358:5: (lv_cardinalities_3_0= ruleExpression )
            	    // InternalScadeEquations.g:1359:6: lv_cardinalities_3_0= ruleExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getValuedObjectInitAccess().getCardinalitiesExpressionParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_30);
            	    lv_cardinalities_3_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getValuedObjectInitRule());
            	      						}
            	      						add(
            	      							current,
            	      							"cardinalities",
            	      							lv_cardinalities_3_0,
            	      							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop26;
                }
            } while (true);

            // InternalScadeEquations.g:1377:3: (otherlv_4= ':' ( (lv_type_5_0= ruleValueType ) ) )
            // InternalScadeEquations.g:1378:4: otherlv_4= ':' ( (lv_type_5_0= ruleValueType ) )
            {
            otherlv_4=(Token)match(input,30,FollowSets000.FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_4, grammarAccess.getValuedObjectInitAccess().getColonKeyword_3_0());
              			
            }
            // InternalScadeEquations.g:1382:4: ( (lv_type_5_0= ruleValueType ) )
            // InternalScadeEquations.g:1383:5: (lv_type_5_0= ruleValueType )
            {
            // InternalScadeEquations.g:1383:5: (lv_type_5_0= ruleValueType )
            // InternalScadeEquations.g:1384:6: lv_type_5_0= ruleValueType
            {
            if ( state.backtracking==0 ) {

              						newCompositeNode(grammarAccess.getValuedObjectInitAccess().getTypeValueTypeEnumRuleCall_3_1_0());
              					
            }
            pushFollow(FollowSets000.FOLLOW_14);
            lv_type_5_0=ruleValueType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElementForParent(grammarAccess.getValuedObjectInitRule());
              						}
              						set(
              							current,
              							"type",
              							lv_type_5_0,
              							"de.cau.cs.kieler.lustre.Lustre.ValueType");
              						afterParserOrEnumRuleCall();
              					
            }

            }


            }


            }

            // InternalScadeEquations.g:1402:3: (otherlv_6= '=' ( (lv_initialValue_7_0= ruleExpression ) ) )?
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==21) ) {
                alt27=1;
            }
            switch (alt27) {
                case 1 :
                    // InternalScadeEquations.g:1403:4: otherlv_6= '=' ( (lv_initialValue_7_0= ruleExpression ) )
                    {
                    otherlv_6=(Token)match(input,21,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getValuedObjectInitAccess().getEqualsSignKeyword_4_0());
                      			
                    }
                    // InternalScadeEquations.g:1407:4: ( (lv_initialValue_7_0= ruleExpression ) )
                    // InternalScadeEquations.g:1408:5: (lv_initialValue_7_0= ruleExpression )
                    {
                    // InternalScadeEquations.g:1408:5: (lv_initialValue_7_0= ruleExpression )
                    // InternalScadeEquations.g:1409:6: lv_initialValue_7_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getValuedObjectInitAccess().getInitialValueExpressionParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_initialValue_7_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getValuedObjectInitRule());
                      						}
                      						set(
                      							current,
                      							"initialValue",
                      							lv_initialValue_7_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValuedObjectInit"


    // $ANTLR start "entryRuleNodeDeclaration"
    // InternalScadeEquations.g:1431:1: entryRuleNodeDeclaration returns [EObject current=null] : iv_ruleNodeDeclaration= ruleNodeDeclaration EOF ;
    public final EObject entryRuleNodeDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNodeDeclaration = null;


        try {
            // InternalScadeEquations.g:1431:56: (iv_ruleNodeDeclaration= ruleNodeDeclaration EOF )
            // InternalScadeEquations.g:1432:2: iv_ruleNodeDeclaration= ruleNodeDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNodeDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNodeDeclaration=ruleNodeDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNodeDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNodeDeclaration"


    // $ANTLR start "ruleNodeDeclaration"
    // InternalScadeEquations.g:1438:1: ruleNodeDeclaration returns [EObject current=null] : ( () ( (lv_isUnsafe_1_0= 'unsafe' ) )? (otherlv_2= 'function' | ( (lv_hasState_3_0= 'node' ) ) ) ( (lv_valuedObjects_4_0= ruleNodeValuedObject ) ) ( (otherlv_5= '(' ( (lv_inputs_6_0= ruleVariableDeclarationNoInit ) ) (otherlv_7= ';' ( (lv_inputs_8_0= ruleVariableDeclarationNoInit ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) otherlv_11= 'returns' ( (otherlv_12= '(' ( (lv_outputs_13_0= ruleVariableDeclarationNoInit ) ) (otherlv_14= ';' ( (lv_outputs_15_0= ruleVariableDeclarationNoInit ) ) )* otherlv_16= ')' ) | otherlv_17= '()' ) (otherlv_18= ';' )? ( (otherlv_19= 'const' ( (lv_constants_20_0= ruleVariableDeclarationInit ) ) (otherlv_21= ';' ( (lv_constants_22_0= ruleVariableDeclarationInit ) ) )* otherlv_23= ';' ) | (otherlv_24= 'var' ( ( (lv_variables_25_1= ruleVariableDeclarationInit | lv_variables_25_2= ruleVariableDeclarationNoInit ) ) ) (otherlv_26= ';' ( ( (lv_variables_27_1= ruleVariableDeclarationInit | lv_variables_27_2= ruleVariableDeclarationNoInit ) ) ) )* otherlv_28= ';' ) )* otherlv_29= 'let' ( ( (lv_equations_30_0= ruleEquation ) ) | ( (lv_emissions_31_0= ruleEmission ) ) | ( (lv_assertions_32_0= ruleAssertion ) ) | ( (lv_automatons_33_0= ruleAutomaton ) ) )* otherlv_34= 'tel' (otherlv_35= '.' | (otherlv_36= ';' )? ) ) ;
    public final EObject ruleNodeDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_isUnsafe_1_0=null;
        Token otherlv_2=null;
        Token lv_hasState_3_0=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        Token otherlv_26=null;
        Token otherlv_28=null;
        Token otherlv_29=null;
        Token otherlv_34=null;
        Token otherlv_35=null;
        Token otherlv_36=null;
        EObject lv_valuedObjects_4_0 = null;

        EObject lv_inputs_6_0 = null;

        EObject lv_inputs_8_0 = null;

        EObject lv_outputs_13_0 = null;

        EObject lv_outputs_15_0 = null;

        EObject lv_constants_20_0 = null;

        EObject lv_constants_22_0 = null;

        EObject lv_variables_25_1 = null;

        EObject lv_variables_25_2 = null;

        EObject lv_variables_27_1 = null;

        EObject lv_variables_27_2 = null;

        EObject lv_equations_30_0 = null;

        EObject lv_emissions_31_0 = null;

        EObject lv_assertions_32_0 = null;

        EObject lv_automatons_33_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:1444:2: ( ( () ( (lv_isUnsafe_1_0= 'unsafe' ) )? (otherlv_2= 'function' | ( (lv_hasState_3_0= 'node' ) ) ) ( (lv_valuedObjects_4_0= ruleNodeValuedObject ) ) ( (otherlv_5= '(' ( (lv_inputs_6_0= ruleVariableDeclarationNoInit ) ) (otherlv_7= ';' ( (lv_inputs_8_0= ruleVariableDeclarationNoInit ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) otherlv_11= 'returns' ( (otherlv_12= '(' ( (lv_outputs_13_0= ruleVariableDeclarationNoInit ) ) (otherlv_14= ';' ( (lv_outputs_15_0= ruleVariableDeclarationNoInit ) ) )* otherlv_16= ')' ) | otherlv_17= '()' ) (otherlv_18= ';' )? ( (otherlv_19= 'const' ( (lv_constants_20_0= ruleVariableDeclarationInit ) ) (otherlv_21= ';' ( (lv_constants_22_0= ruleVariableDeclarationInit ) ) )* otherlv_23= ';' ) | (otherlv_24= 'var' ( ( (lv_variables_25_1= ruleVariableDeclarationInit | lv_variables_25_2= ruleVariableDeclarationNoInit ) ) ) (otherlv_26= ';' ( ( (lv_variables_27_1= ruleVariableDeclarationInit | lv_variables_27_2= ruleVariableDeclarationNoInit ) ) ) )* otherlv_28= ';' ) )* otherlv_29= 'let' ( ( (lv_equations_30_0= ruleEquation ) ) | ( (lv_emissions_31_0= ruleEmission ) ) | ( (lv_assertions_32_0= ruleAssertion ) ) | ( (lv_automatons_33_0= ruleAutomaton ) ) )* otherlv_34= 'tel' (otherlv_35= '.' | (otherlv_36= ';' )? ) ) )
            // InternalScadeEquations.g:1445:2: ( () ( (lv_isUnsafe_1_0= 'unsafe' ) )? (otherlv_2= 'function' | ( (lv_hasState_3_0= 'node' ) ) ) ( (lv_valuedObjects_4_0= ruleNodeValuedObject ) ) ( (otherlv_5= '(' ( (lv_inputs_6_0= ruleVariableDeclarationNoInit ) ) (otherlv_7= ';' ( (lv_inputs_8_0= ruleVariableDeclarationNoInit ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) otherlv_11= 'returns' ( (otherlv_12= '(' ( (lv_outputs_13_0= ruleVariableDeclarationNoInit ) ) (otherlv_14= ';' ( (lv_outputs_15_0= ruleVariableDeclarationNoInit ) ) )* otherlv_16= ')' ) | otherlv_17= '()' ) (otherlv_18= ';' )? ( (otherlv_19= 'const' ( (lv_constants_20_0= ruleVariableDeclarationInit ) ) (otherlv_21= ';' ( (lv_constants_22_0= ruleVariableDeclarationInit ) ) )* otherlv_23= ';' ) | (otherlv_24= 'var' ( ( (lv_variables_25_1= ruleVariableDeclarationInit | lv_variables_25_2= ruleVariableDeclarationNoInit ) ) ) (otherlv_26= ';' ( ( (lv_variables_27_1= ruleVariableDeclarationInit | lv_variables_27_2= ruleVariableDeclarationNoInit ) ) ) )* otherlv_28= ';' ) )* otherlv_29= 'let' ( ( (lv_equations_30_0= ruleEquation ) ) | ( (lv_emissions_31_0= ruleEmission ) ) | ( (lv_assertions_32_0= ruleAssertion ) ) | ( (lv_automatons_33_0= ruleAutomaton ) ) )* otherlv_34= 'tel' (otherlv_35= '.' | (otherlv_36= ';' )? ) )
            {
            // InternalScadeEquations.g:1445:2: ( () ( (lv_isUnsafe_1_0= 'unsafe' ) )? (otherlv_2= 'function' | ( (lv_hasState_3_0= 'node' ) ) ) ( (lv_valuedObjects_4_0= ruleNodeValuedObject ) ) ( (otherlv_5= '(' ( (lv_inputs_6_0= ruleVariableDeclarationNoInit ) ) (otherlv_7= ';' ( (lv_inputs_8_0= ruleVariableDeclarationNoInit ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) otherlv_11= 'returns' ( (otherlv_12= '(' ( (lv_outputs_13_0= ruleVariableDeclarationNoInit ) ) (otherlv_14= ';' ( (lv_outputs_15_0= ruleVariableDeclarationNoInit ) ) )* otherlv_16= ')' ) | otherlv_17= '()' ) (otherlv_18= ';' )? ( (otherlv_19= 'const' ( (lv_constants_20_0= ruleVariableDeclarationInit ) ) (otherlv_21= ';' ( (lv_constants_22_0= ruleVariableDeclarationInit ) ) )* otherlv_23= ';' ) | (otherlv_24= 'var' ( ( (lv_variables_25_1= ruleVariableDeclarationInit | lv_variables_25_2= ruleVariableDeclarationNoInit ) ) ) (otherlv_26= ';' ( ( (lv_variables_27_1= ruleVariableDeclarationInit | lv_variables_27_2= ruleVariableDeclarationNoInit ) ) ) )* otherlv_28= ';' ) )* otherlv_29= 'let' ( ( (lv_equations_30_0= ruleEquation ) ) | ( (lv_emissions_31_0= ruleEmission ) ) | ( (lv_assertions_32_0= ruleAssertion ) ) | ( (lv_automatons_33_0= ruleAutomaton ) ) )* otherlv_34= 'tel' (otherlv_35= '.' | (otherlv_36= ';' )? ) )
            // InternalScadeEquations.g:1446:3: () ( (lv_isUnsafe_1_0= 'unsafe' ) )? (otherlv_2= 'function' | ( (lv_hasState_3_0= 'node' ) ) ) ( (lv_valuedObjects_4_0= ruleNodeValuedObject ) ) ( (otherlv_5= '(' ( (lv_inputs_6_0= ruleVariableDeclarationNoInit ) ) (otherlv_7= ';' ( (lv_inputs_8_0= ruleVariableDeclarationNoInit ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) otherlv_11= 'returns' ( (otherlv_12= '(' ( (lv_outputs_13_0= ruleVariableDeclarationNoInit ) ) (otherlv_14= ';' ( (lv_outputs_15_0= ruleVariableDeclarationNoInit ) ) )* otherlv_16= ')' ) | otherlv_17= '()' ) (otherlv_18= ';' )? ( (otherlv_19= 'const' ( (lv_constants_20_0= ruleVariableDeclarationInit ) ) (otherlv_21= ';' ( (lv_constants_22_0= ruleVariableDeclarationInit ) ) )* otherlv_23= ';' ) | (otherlv_24= 'var' ( ( (lv_variables_25_1= ruleVariableDeclarationInit | lv_variables_25_2= ruleVariableDeclarationNoInit ) ) ) (otherlv_26= ';' ( ( (lv_variables_27_1= ruleVariableDeclarationInit | lv_variables_27_2= ruleVariableDeclarationNoInit ) ) ) )* otherlv_28= ';' ) )* otherlv_29= 'let' ( ( (lv_equations_30_0= ruleEquation ) ) | ( (lv_emissions_31_0= ruleEmission ) ) | ( (lv_assertions_32_0= ruleAssertion ) ) | ( (lv_automatons_33_0= ruleAutomaton ) ) )* otherlv_34= 'tel' (otherlv_35= '.' | (otherlv_36= ';' )? )
            {
            // InternalScadeEquations.g:1446:3: ()
            // InternalScadeEquations.g:1447:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getNodeDeclarationAccess().getNodeDeclarationAction_0(),
              					current);
              			
            }

            }

            // InternalScadeEquations.g:1456:3: ( (lv_isUnsafe_1_0= 'unsafe' ) )?
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==24) ) {
                alt28=1;
            }
            switch (alt28) {
                case 1 :
                    // InternalScadeEquations.g:1457:4: (lv_isUnsafe_1_0= 'unsafe' )
                    {
                    // InternalScadeEquations.g:1457:4: (lv_isUnsafe_1_0= 'unsafe' )
                    // InternalScadeEquations.g:1458:5: lv_isUnsafe_1_0= 'unsafe'
                    {
                    lv_isUnsafe_1_0=(Token)match(input,24,FollowSets000.FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isUnsafe_1_0, grammarAccess.getNodeDeclarationAccess().getIsUnsafeUnsafeKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getNodeDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "isUnsafe", true, "unsafe");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:1470:3: (otherlv_2= 'function' | ( (lv_hasState_3_0= 'node' ) ) )
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==26) ) {
                alt29=1;
            }
            else if ( (LA29_0==27) ) {
                alt29=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 29, 0, input);

                throw nvae;
            }
            switch (alt29) {
                case 1 :
                    // InternalScadeEquations.g:1471:4: otherlv_2= 'function'
                    {
                    otherlv_2=(Token)match(input,26,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getNodeDeclarationAccess().getFunctionKeyword_2_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:1476:4: ( (lv_hasState_3_0= 'node' ) )
                    {
                    // InternalScadeEquations.g:1476:4: ( (lv_hasState_3_0= 'node' ) )
                    // InternalScadeEquations.g:1477:5: (lv_hasState_3_0= 'node' )
                    {
                    // InternalScadeEquations.g:1477:5: (lv_hasState_3_0= 'node' )
                    // InternalScadeEquations.g:1478:6: lv_hasState_3_0= 'node'
                    {
                    lv_hasState_3_0=(Token)match(input,27,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_hasState_3_0, grammarAccess.getNodeDeclarationAccess().getHasStateNodeKeyword_2_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNodeDeclarationRule());
                      						}
                      						setWithLastConsumed(current, "hasState", true, "node");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:1491:3: ( (lv_valuedObjects_4_0= ruleNodeValuedObject ) )
            // InternalScadeEquations.g:1492:4: (lv_valuedObjects_4_0= ruleNodeValuedObject )
            {
            // InternalScadeEquations.g:1492:4: (lv_valuedObjects_4_0= ruleNodeValuedObject )
            // InternalScadeEquations.g:1493:5: lv_valuedObjects_4_0= ruleNodeValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNodeDeclarationAccess().getValuedObjectsNodeValuedObjectParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_22);
            lv_valuedObjects_4_0=ruleNodeValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getNodeDeclarationRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_4_0,
              						"de.cau.cs.kieler.lustre.Lustre.NodeValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:1510:3: ( (otherlv_5= '(' ( (lv_inputs_6_0= ruleVariableDeclarationNoInit ) ) (otherlv_7= ';' ( (lv_inputs_8_0= ruleVariableDeclarationNoInit ) ) )* otherlv_9= ')' ) | otherlv_10= '()' )
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==17) ) {
                alt31=1;
            }
            else if ( (LA31_0==28) ) {
                alt31=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 31, 0, input);

                throw nvae;
            }
            switch (alt31) {
                case 1 :
                    // InternalScadeEquations.g:1511:4: (otherlv_5= '(' ( (lv_inputs_6_0= ruleVariableDeclarationNoInit ) ) (otherlv_7= ';' ( (lv_inputs_8_0= ruleVariableDeclarationNoInit ) ) )* otherlv_9= ')' )
                    {
                    // InternalScadeEquations.g:1511:4: (otherlv_5= '(' ( (lv_inputs_6_0= ruleVariableDeclarationNoInit ) ) (otherlv_7= ';' ( (lv_inputs_8_0= ruleVariableDeclarationNoInit ) ) )* otherlv_9= ')' )
                    // InternalScadeEquations.g:1512:5: otherlv_5= '(' ( (lv_inputs_6_0= ruleVariableDeclarationNoInit ) ) (otherlv_7= ';' ( (lv_inputs_8_0= ruleVariableDeclarationNoInit ) ) )* otherlv_9= ')'
                    {
                    otherlv_5=(Token)match(input,17,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getNodeDeclarationAccess().getLeftParenthesisKeyword_4_0_0());
                      				
                    }
                    // InternalScadeEquations.g:1516:5: ( (lv_inputs_6_0= ruleVariableDeclarationNoInit ) )
                    // InternalScadeEquations.g:1517:6: (lv_inputs_6_0= ruleVariableDeclarationNoInit )
                    {
                    // InternalScadeEquations.g:1517:6: (lv_inputs_6_0= ruleVariableDeclarationNoInit )
                    // InternalScadeEquations.g:1518:7: lv_inputs_6_0= ruleVariableDeclarationNoInit
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getNodeDeclarationAccess().getInputsVariableDeclarationNoInitParserRuleCall_4_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_23);
                    lv_inputs_6_0=ruleVariableDeclarationNoInit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getNodeDeclarationRule());
                      							}
                      							add(
                      								current,
                      								"inputs",
                      								lv_inputs_6_0,
                      								"de.cau.cs.kieler.lustre.Lustre.VariableDeclarationNoInit");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:1535:5: (otherlv_7= ';' ( (lv_inputs_8_0= ruleVariableDeclarationNoInit ) ) )*
                    loop30:
                    do {
                        int alt30=2;
                        int LA30_0 = input.LA(1);

                        if ( (LA30_0==20) ) {
                            alt30=1;
                        }


                        switch (alt30) {
                    	case 1 :
                    	    // InternalScadeEquations.g:1536:6: otherlv_7= ';' ( (lv_inputs_8_0= ruleVariableDeclarationNoInit ) )
                    	    {
                    	    otherlv_7=(Token)match(input,20,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_7, grammarAccess.getNodeDeclarationAccess().getSemicolonKeyword_4_0_2_0());
                    	      					
                    	    }
                    	    // InternalScadeEquations.g:1540:6: ( (lv_inputs_8_0= ruleVariableDeclarationNoInit ) )
                    	    // InternalScadeEquations.g:1541:7: (lv_inputs_8_0= ruleVariableDeclarationNoInit )
                    	    {
                    	    // InternalScadeEquations.g:1541:7: (lv_inputs_8_0= ruleVariableDeclarationNoInit )
                    	    // InternalScadeEquations.g:1542:8: lv_inputs_8_0= ruleVariableDeclarationNoInit
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getNodeDeclarationAccess().getInputsVariableDeclarationNoInitParserRuleCall_4_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_23);
                    	    lv_inputs_8_0=ruleVariableDeclarationNoInit();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getNodeDeclarationRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"inputs",
                    	      									lv_inputs_8_0,
                    	      									"de.cau.cs.kieler.lustre.Lustre.VariableDeclarationNoInit");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop30;
                        }
                    } while (true);

                    otherlv_9=(Token)match(input,19,FollowSets000.FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_9, grammarAccess.getNodeDeclarationAccess().getRightParenthesisKeyword_4_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:1566:4: otherlv_10= '()'
                    {
                    otherlv_10=(Token)match(input,28,FollowSets000.FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getNodeDeclarationAccess().getLeftParenthesisRightParenthesisKeyword_4_1());
                      			
                    }

                    }
                    break;

            }

            otherlv_11=(Token)match(input,29,FollowSets000.FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_11, grammarAccess.getNodeDeclarationAccess().getReturnsKeyword_5());
              		
            }
            // InternalScadeEquations.g:1575:3: ( (otherlv_12= '(' ( (lv_outputs_13_0= ruleVariableDeclarationNoInit ) ) (otherlv_14= ';' ( (lv_outputs_15_0= ruleVariableDeclarationNoInit ) ) )* otherlv_16= ')' ) | otherlv_17= '()' )
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==17) ) {
                alt33=1;
            }
            else if ( (LA33_0==28) ) {
                alt33=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 33, 0, input);

                throw nvae;
            }
            switch (alt33) {
                case 1 :
                    // InternalScadeEquations.g:1576:4: (otherlv_12= '(' ( (lv_outputs_13_0= ruleVariableDeclarationNoInit ) ) (otherlv_14= ';' ( (lv_outputs_15_0= ruleVariableDeclarationNoInit ) ) )* otherlv_16= ')' )
                    {
                    // InternalScadeEquations.g:1576:4: (otherlv_12= '(' ( (lv_outputs_13_0= ruleVariableDeclarationNoInit ) ) (otherlv_14= ';' ( (lv_outputs_15_0= ruleVariableDeclarationNoInit ) ) )* otherlv_16= ')' )
                    // InternalScadeEquations.g:1577:5: otherlv_12= '(' ( (lv_outputs_13_0= ruleVariableDeclarationNoInit ) ) (otherlv_14= ';' ( (lv_outputs_15_0= ruleVariableDeclarationNoInit ) ) )* otherlv_16= ')'
                    {
                    otherlv_12=(Token)match(input,17,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_12, grammarAccess.getNodeDeclarationAccess().getLeftParenthesisKeyword_6_0_0());
                      				
                    }
                    // InternalScadeEquations.g:1581:5: ( (lv_outputs_13_0= ruleVariableDeclarationNoInit ) )
                    // InternalScadeEquations.g:1582:6: (lv_outputs_13_0= ruleVariableDeclarationNoInit )
                    {
                    // InternalScadeEquations.g:1582:6: (lv_outputs_13_0= ruleVariableDeclarationNoInit )
                    // InternalScadeEquations.g:1583:7: lv_outputs_13_0= ruleVariableDeclarationNoInit
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getNodeDeclarationAccess().getOutputsVariableDeclarationNoInitParserRuleCall_6_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_23);
                    lv_outputs_13_0=ruleVariableDeclarationNoInit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getNodeDeclarationRule());
                      							}
                      							add(
                      								current,
                      								"outputs",
                      								lv_outputs_13_0,
                      								"de.cau.cs.kieler.lustre.Lustre.VariableDeclarationNoInit");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:1600:5: (otherlv_14= ';' ( (lv_outputs_15_0= ruleVariableDeclarationNoInit ) ) )*
                    loop32:
                    do {
                        int alt32=2;
                        int LA32_0 = input.LA(1);

                        if ( (LA32_0==20) ) {
                            alt32=1;
                        }


                        switch (alt32) {
                    	case 1 :
                    	    // InternalScadeEquations.g:1601:6: otherlv_14= ';' ( (lv_outputs_15_0= ruleVariableDeclarationNoInit ) )
                    	    {
                    	    otherlv_14=(Token)match(input,20,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_14, grammarAccess.getNodeDeclarationAccess().getSemicolonKeyword_6_0_2_0());
                    	      					
                    	    }
                    	    // InternalScadeEquations.g:1605:6: ( (lv_outputs_15_0= ruleVariableDeclarationNoInit ) )
                    	    // InternalScadeEquations.g:1606:7: (lv_outputs_15_0= ruleVariableDeclarationNoInit )
                    	    {
                    	    // InternalScadeEquations.g:1606:7: (lv_outputs_15_0= ruleVariableDeclarationNoInit )
                    	    // InternalScadeEquations.g:1607:8: lv_outputs_15_0= ruleVariableDeclarationNoInit
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getNodeDeclarationAccess().getOutputsVariableDeclarationNoInitParserRuleCall_6_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_23);
                    	    lv_outputs_15_0=ruleVariableDeclarationNoInit();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getNodeDeclarationRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"outputs",
                    	      									lv_outputs_15_0,
                    	      									"de.cau.cs.kieler.lustre.Lustre.VariableDeclarationNoInit");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop32;
                        }
                    } while (true);

                    otherlv_16=(Token)match(input,19,FollowSets000.FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_16, grammarAccess.getNodeDeclarationAccess().getRightParenthesisKeyword_6_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:1631:4: otherlv_17= '()'
                    {
                    otherlv_17=(Token)match(input,28,FollowSets000.FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_17, grammarAccess.getNodeDeclarationAccess().getLeftParenthesisRightParenthesisKeyword_6_1());
                      			
                    }

                    }
                    break;

            }

            // InternalScadeEquations.g:1636:3: (otherlv_18= ';' )?
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==20) ) {
                alt34=1;
            }
            switch (alt34) {
                case 1 :
                    // InternalScadeEquations.g:1637:4: otherlv_18= ';'
                    {
                    otherlv_18=(Token)match(input,20,FollowSets000.FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getNodeDeclarationAccess().getSemicolonKeyword_7());
                      			
                    }

                    }
                    break;

            }

            // InternalScadeEquations.g:1642:3: ( (otherlv_19= 'const' ( (lv_constants_20_0= ruleVariableDeclarationInit ) ) (otherlv_21= ';' ( (lv_constants_22_0= ruleVariableDeclarationInit ) ) )* otherlv_23= ';' ) | (otherlv_24= 'var' ( ( (lv_variables_25_1= ruleVariableDeclarationInit | lv_variables_25_2= ruleVariableDeclarationNoInit ) ) ) (otherlv_26= ';' ( ( (lv_variables_27_1= ruleVariableDeclarationInit | lv_variables_27_2= ruleVariableDeclarationNoInit ) ) ) )* otherlv_28= ';' ) )*
            loop39:
            do {
                int alt39=3;
                int LA39_0 = input.LA(1);

                if ( (LA39_0==33) ) {
                    alt39=1;
                }
                else if ( (LA39_0==34) ) {
                    alt39=2;
                }


                switch (alt39) {
            	case 1 :
            	    // InternalScadeEquations.g:1643:4: (otherlv_19= 'const' ( (lv_constants_20_0= ruleVariableDeclarationInit ) ) (otherlv_21= ';' ( (lv_constants_22_0= ruleVariableDeclarationInit ) ) )* otherlv_23= ';' )
            	    {
            	    // InternalScadeEquations.g:1643:4: (otherlv_19= 'const' ( (lv_constants_20_0= ruleVariableDeclarationInit ) ) (otherlv_21= ';' ( (lv_constants_22_0= ruleVariableDeclarationInit ) ) )* otherlv_23= ';' )
            	    // InternalScadeEquations.g:1644:5: otherlv_19= 'const' ( (lv_constants_20_0= ruleVariableDeclarationInit ) ) (otherlv_21= ';' ( (lv_constants_22_0= ruleVariableDeclarationInit ) ) )* otherlv_23= ';'
            	    {
            	    otherlv_19=(Token)match(input,33,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_19, grammarAccess.getNodeDeclarationAccess().getConstKeyword_8_0_0());
            	      				
            	    }
            	    // InternalScadeEquations.g:1648:5: ( (lv_constants_20_0= ruleVariableDeclarationInit ) )
            	    // InternalScadeEquations.g:1649:6: (lv_constants_20_0= ruleVariableDeclarationInit )
            	    {
            	    // InternalScadeEquations.g:1649:6: (lv_constants_20_0= ruleVariableDeclarationInit )
            	    // InternalScadeEquations.g:1650:7: lv_constants_20_0= ruleVariableDeclarationInit
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getNodeDeclarationAccess().getConstantsVariableDeclarationInitParserRuleCall_8_0_1_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_10);
            	    lv_constants_20_0=ruleVariableDeclarationInit();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getNodeDeclarationRule());
            	      							}
            	      							add(
            	      								current,
            	      								"constants",
            	      								lv_constants_20_0,
            	      								"de.cau.cs.kieler.lustre.Lustre.VariableDeclarationInit");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalScadeEquations.g:1667:5: (otherlv_21= ';' ( (lv_constants_22_0= ruleVariableDeclarationInit ) ) )*
            	    loop35:
            	    do {
            	        int alt35=2;
            	        int LA35_0 = input.LA(1);

            	        if ( (LA35_0==20) ) {
            	            int LA35_1 = input.LA(2);

            	            if ( (LA35_1==RULE_ID) ) {
            	                alt35=1;
            	            }


            	        }


            	        switch (alt35) {
            	    	case 1 :
            	    	    // InternalScadeEquations.g:1668:6: otherlv_21= ';' ( (lv_constants_22_0= ruleVariableDeclarationInit ) )
            	    	    {
            	    	    otherlv_21=(Token)match(input,20,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      						newLeafNode(otherlv_21, grammarAccess.getNodeDeclarationAccess().getSemicolonKeyword_8_0_2_0());
            	    	      					
            	    	    }
            	    	    // InternalScadeEquations.g:1672:6: ( (lv_constants_22_0= ruleVariableDeclarationInit ) )
            	    	    // InternalScadeEquations.g:1673:7: (lv_constants_22_0= ruleVariableDeclarationInit )
            	    	    {
            	    	    // InternalScadeEquations.g:1673:7: (lv_constants_22_0= ruleVariableDeclarationInit )
            	    	    // InternalScadeEquations.g:1674:8: lv_constants_22_0= ruleVariableDeclarationInit
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      								newCompositeNode(grammarAccess.getNodeDeclarationAccess().getConstantsVariableDeclarationInitParserRuleCall_8_0_2_1_0());
            	    	      							
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_10);
            	    	    lv_constants_22_0=ruleVariableDeclarationInit();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      								if (current==null) {
            	    	      									current = createModelElementForParent(grammarAccess.getNodeDeclarationRule());
            	    	      								}
            	    	      								add(
            	    	      									current,
            	    	      									"constants",
            	    	      									lv_constants_22_0,
            	    	      									"de.cau.cs.kieler.lustre.Lustre.VariableDeclarationInit");
            	    	      								afterParserOrEnumRuleCall();
            	    	      							
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop35;
            	        }
            	    } while (true);

            	    otherlv_23=(Token)match(input,20,FollowSets000.FOLLOW_32); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_23, grammarAccess.getNodeDeclarationAccess().getSemicolonKeyword_8_0_3());
            	      				
            	    }

            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalScadeEquations.g:1698:4: (otherlv_24= 'var' ( ( (lv_variables_25_1= ruleVariableDeclarationInit | lv_variables_25_2= ruleVariableDeclarationNoInit ) ) ) (otherlv_26= ';' ( ( (lv_variables_27_1= ruleVariableDeclarationInit | lv_variables_27_2= ruleVariableDeclarationNoInit ) ) ) )* otherlv_28= ';' )
            	    {
            	    // InternalScadeEquations.g:1698:4: (otherlv_24= 'var' ( ( (lv_variables_25_1= ruleVariableDeclarationInit | lv_variables_25_2= ruleVariableDeclarationNoInit ) ) ) (otherlv_26= ';' ( ( (lv_variables_27_1= ruleVariableDeclarationInit | lv_variables_27_2= ruleVariableDeclarationNoInit ) ) ) )* otherlv_28= ';' )
            	    // InternalScadeEquations.g:1699:5: otherlv_24= 'var' ( ( (lv_variables_25_1= ruleVariableDeclarationInit | lv_variables_25_2= ruleVariableDeclarationNoInit ) ) ) (otherlv_26= ';' ( ( (lv_variables_27_1= ruleVariableDeclarationInit | lv_variables_27_2= ruleVariableDeclarationNoInit ) ) ) )* otherlv_28= ';'
            	    {
            	    otherlv_24=(Token)match(input,34,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_24, grammarAccess.getNodeDeclarationAccess().getVarKeyword_8_1_0());
            	      				
            	    }
            	    // InternalScadeEquations.g:1703:5: ( ( (lv_variables_25_1= ruleVariableDeclarationInit | lv_variables_25_2= ruleVariableDeclarationNoInit ) ) )
            	    // InternalScadeEquations.g:1704:6: ( (lv_variables_25_1= ruleVariableDeclarationInit | lv_variables_25_2= ruleVariableDeclarationNoInit ) )
            	    {
            	    // InternalScadeEquations.g:1704:6: ( (lv_variables_25_1= ruleVariableDeclarationInit | lv_variables_25_2= ruleVariableDeclarationNoInit ) )
            	    // InternalScadeEquations.g:1705:7: (lv_variables_25_1= ruleVariableDeclarationInit | lv_variables_25_2= ruleVariableDeclarationNoInit )
            	    {
            	    // InternalScadeEquations.g:1705:7: (lv_variables_25_1= ruleVariableDeclarationInit | lv_variables_25_2= ruleVariableDeclarationNoInit )
            	    int alt36=2;
            	    int LA36_0 = input.LA(1);

            	    if ( (LA36_0==RULE_ID) ) {
            	        int LA36_1 = input.LA(2);

            	        if ( (synpred41_InternalScadeEquations()) ) {
            	            alt36=1;
            	        }
            	        else if ( (true) ) {
            	            alt36=2;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return current;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 36, 1, input);

            	            throw nvae;
            	        }
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 36, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt36) {
            	        case 1 :
            	            // InternalScadeEquations.g:1706:8: lv_variables_25_1= ruleVariableDeclarationInit
            	            {
            	            if ( state.backtracking==0 ) {

            	              								newCompositeNode(grammarAccess.getNodeDeclarationAccess().getVariablesVariableDeclarationInitParserRuleCall_8_1_1_0_0());
            	              							
            	            }
            	            pushFollow(FollowSets000.FOLLOW_10);
            	            lv_variables_25_1=ruleVariableDeclarationInit();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElementForParent(grammarAccess.getNodeDeclarationRule());
            	              								}
            	              								add(
            	              									current,
            	              									"variables",
            	              									lv_variables_25_1,
            	              									"de.cau.cs.kieler.lustre.Lustre.VariableDeclarationInit");
            	              								afterParserOrEnumRuleCall();
            	              							
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalScadeEquations.g:1722:8: lv_variables_25_2= ruleVariableDeclarationNoInit
            	            {
            	            if ( state.backtracking==0 ) {

            	              								newCompositeNode(grammarAccess.getNodeDeclarationAccess().getVariablesVariableDeclarationNoInitParserRuleCall_8_1_1_0_1());
            	              							
            	            }
            	            pushFollow(FollowSets000.FOLLOW_10);
            	            lv_variables_25_2=ruleVariableDeclarationNoInit();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElementForParent(grammarAccess.getNodeDeclarationRule());
            	              								}
            	              								add(
            	              									current,
            	              									"variables",
            	              									lv_variables_25_2,
            	              									"de.cau.cs.kieler.lustre.Lustre.VariableDeclarationNoInit");
            	              								afterParserOrEnumRuleCall();
            	              							
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }

            	    // InternalScadeEquations.g:1740:5: (otherlv_26= ';' ( ( (lv_variables_27_1= ruleVariableDeclarationInit | lv_variables_27_2= ruleVariableDeclarationNoInit ) ) ) )*
            	    loop38:
            	    do {
            	        int alt38=2;
            	        int LA38_0 = input.LA(1);

            	        if ( (LA38_0==20) ) {
            	            int LA38_1 = input.LA(2);

            	            if ( (LA38_1==RULE_ID) ) {
            	                alt38=1;
            	            }


            	        }


            	        switch (alt38) {
            	    	case 1 :
            	    	    // InternalScadeEquations.g:1741:6: otherlv_26= ';' ( ( (lv_variables_27_1= ruleVariableDeclarationInit | lv_variables_27_2= ruleVariableDeclarationNoInit ) ) )
            	    	    {
            	    	    otherlv_26=(Token)match(input,20,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      						newLeafNode(otherlv_26, grammarAccess.getNodeDeclarationAccess().getSemicolonKeyword_8_1_2_0());
            	    	      					
            	    	    }
            	    	    // InternalScadeEquations.g:1745:6: ( ( (lv_variables_27_1= ruleVariableDeclarationInit | lv_variables_27_2= ruleVariableDeclarationNoInit ) ) )
            	    	    // InternalScadeEquations.g:1746:7: ( (lv_variables_27_1= ruleVariableDeclarationInit | lv_variables_27_2= ruleVariableDeclarationNoInit ) )
            	    	    {
            	    	    // InternalScadeEquations.g:1746:7: ( (lv_variables_27_1= ruleVariableDeclarationInit | lv_variables_27_2= ruleVariableDeclarationNoInit ) )
            	    	    // InternalScadeEquations.g:1747:8: (lv_variables_27_1= ruleVariableDeclarationInit | lv_variables_27_2= ruleVariableDeclarationNoInit )
            	    	    {
            	    	    // InternalScadeEquations.g:1747:8: (lv_variables_27_1= ruleVariableDeclarationInit | lv_variables_27_2= ruleVariableDeclarationNoInit )
            	    	    int alt37=2;
            	    	    int LA37_0 = input.LA(1);

            	    	    if ( (LA37_0==RULE_ID) ) {
            	    	        int LA37_1 = input.LA(2);

            	    	        if ( (synpred42_InternalScadeEquations()) ) {
            	    	            alt37=1;
            	    	        }
            	    	        else if ( (true) ) {
            	    	            alt37=2;
            	    	        }
            	    	        else {
            	    	            if (state.backtracking>0) {state.failed=true; return current;}
            	    	            NoViableAltException nvae =
            	    	                new NoViableAltException("", 37, 1, input);

            	    	            throw nvae;
            	    	        }
            	    	    }
            	    	    else {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        NoViableAltException nvae =
            	    	            new NoViableAltException("", 37, 0, input);

            	    	        throw nvae;
            	    	    }
            	    	    switch (alt37) {
            	    	        case 1 :
            	    	            // InternalScadeEquations.g:1748:9: lv_variables_27_1= ruleVariableDeclarationInit
            	    	            {
            	    	            if ( state.backtracking==0 ) {

            	    	              									newCompositeNode(grammarAccess.getNodeDeclarationAccess().getVariablesVariableDeclarationInitParserRuleCall_8_1_2_1_0_0());
            	    	              								
            	    	            }
            	    	            pushFollow(FollowSets000.FOLLOW_10);
            	    	            lv_variables_27_1=ruleVariableDeclarationInit();

            	    	            state._fsp--;
            	    	            if (state.failed) return current;
            	    	            if ( state.backtracking==0 ) {

            	    	              									if (current==null) {
            	    	              										current = createModelElementForParent(grammarAccess.getNodeDeclarationRule());
            	    	              									}
            	    	              									add(
            	    	              										current,
            	    	              										"variables",
            	    	              										lv_variables_27_1,
            	    	              										"de.cau.cs.kieler.lustre.Lustre.VariableDeclarationInit");
            	    	              									afterParserOrEnumRuleCall();
            	    	              								
            	    	            }

            	    	            }
            	    	            break;
            	    	        case 2 :
            	    	            // InternalScadeEquations.g:1764:9: lv_variables_27_2= ruleVariableDeclarationNoInit
            	    	            {
            	    	            if ( state.backtracking==0 ) {

            	    	              									newCompositeNode(grammarAccess.getNodeDeclarationAccess().getVariablesVariableDeclarationNoInitParserRuleCall_8_1_2_1_0_1());
            	    	              								
            	    	            }
            	    	            pushFollow(FollowSets000.FOLLOW_10);
            	    	            lv_variables_27_2=ruleVariableDeclarationNoInit();

            	    	            state._fsp--;
            	    	            if (state.failed) return current;
            	    	            if ( state.backtracking==0 ) {

            	    	              									if (current==null) {
            	    	              										current = createModelElementForParent(grammarAccess.getNodeDeclarationRule());
            	    	              									}
            	    	              									add(
            	    	              										current,
            	    	              										"variables",
            	    	              										lv_variables_27_2,
            	    	              										"de.cau.cs.kieler.lustre.Lustre.VariableDeclarationNoInit");
            	    	              									afterParserOrEnumRuleCall();
            	    	              								
            	    	            }

            	    	            }
            	    	            break;

            	    	    }


            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop38;
            	        }
            	    } while (true);

            	    otherlv_28=(Token)match(input,20,FollowSets000.FOLLOW_32); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_28, grammarAccess.getNodeDeclarationAccess().getSemicolonKeyword_8_1_3());
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop39;
                }
            } while (true);

            otherlv_29=(Token)match(input,35,FollowSets000.FOLLOW_33); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_29, grammarAccess.getNodeDeclarationAccess().getLetKeyword_9());
              		
            }
            // InternalScadeEquations.g:1793:3: ( ( (lv_equations_30_0= ruleEquation ) ) | ( (lv_emissions_31_0= ruleEmission ) ) | ( (lv_assertions_32_0= ruleAssertion ) ) | ( (lv_automatons_33_0= ruleAutomaton ) ) )*
            loop40:
            do {
                int alt40=5;
                switch ( input.LA(1) ) {
                case RULE_ID:
                case 17:
                    {
                    alt40=1;
                    }
                    break;
                case 38:
                    {
                    alt40=2;
                    }
                    break;
                case 39:
                    {
                    alt40=3;
                    }
                    break;
                case 40:
                    {
                    alt40=4;
                    }
                    break;

                }

                switch (alt40) {
            	case 1 :
            	    // InternalScadeEquations.g:1794:4: ( (lv_equations_30_0= ruleEquation ) )
            	    {
            	    // InternalScadeEquations.g:1794:4: ( (lv_equations_30_0= ruleEquation ) )
            	    // InternalScadeEquations.g:1795:5: (lv_equations_30_0= ruleEquation )
            	    {
            	    // InternalScadeEquations.g:1795:5: (lv_equations_30_0= ruleEquation )
            	    // InternalScadeEquations.g:1796:6: lv_equations_30_0= ruleEquation
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getNodeDeclarationAccess().getEquationsEquationParserRuleCall_10_0_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_33);
            	    lv_equations_30_0=ruleEquation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getNodeDeclarationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"equations",
            	      							lv_equations_30_0,
            	      							"de.cau.cs.kieler.lustre.Lustre.Equation");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalScadeEquations.g:1814:4: ( (lv_emissions_31_0= ruleEmission ) )
            	    {
            	    // InternalScadeEquations.g:1814:4: ( (lv_emissions_31_0= ruleEmission ) )
            	    // InternalScadeEquations.g:1815:5: (lv_emissions_31_0= ruleEmission )
            	    {
            	    // InternalScadeEquations.g:1815:5: (lv_emissions_31_0= ruleEmission )
            	    // InternalScadeEquations.g:1816:6: lv_emissions_31_0= ruleEmission
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getNodeDeclarationAccess().getEmissionsEmissionParserRuleCall_10_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_33);
            	    lv_emissions_31_0=ruleEmission();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getNodeDeclarationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"emissions",
            	      							lv_emissions_31_0,
            	      							"de.cau.cs.kieler.lustre.Lustre.Emission");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalScadeEquations.g:1834:4: ( (lv_assertions_32_0= ruleAssertion ) )
            	    {
            	    // InternalScadeEquations.g:1834:4: ( (lv_assertions_32_0= ruleAssertion ) )
            	    // InternalScadeEquations.g:1835:5: (lv_assertions_32_0= ruleAssertion )
            	    {
            	    // InternalScadeEquations.g:1835:5: (lv_assertions_32_0= ruleAssertion )
            	    // InternalScadeEquations.g:1836:6: lv_assertions_32_0= ruleAssertion
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getNodeDeclarationAccess().getAssertionsAssertionParserRuleCall_10_2_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_33);
            	    lv_assertions_32_0=ruleAssertion();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getNodeDeclarationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"assertions",
            	      							lv_assertions_32_0,
            	      							"de.cau.cs.kieler.lustre.Lustre.Assertion");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalScadeEquations.g:1854:4: ( (lv_automatons_33_0= ruleAutomaton ) )
            	    {
            	    // InternalScadeEquations.g:1854:4: ( (lv_automatons_33_0= ruleAutomaton ) )
            	    // InternalScadeEquations.g:1855:5: (lv_automatons_33_0= ruleAutomaton )
            	    {
            	    // InternalScadeEquations.g:1855:5: (lv_automatons_33_0= ruleAutomaton )
            	    // InternalScadeEquations.g:1856:6: lv_automatons_33_0= ruleAutomaton
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getNodeDeclarationAccess().getAutomatonsAutomatonParserRuleCall_10_3_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_33);
            	    lv_automatons_33_0=ruleAutomaton();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getNodeDeclarationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"automatons",
            	      							lv_automatons_33_0,
            	      							"de.cau.cs.kieler.lustre.Lustre.Automaton");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop40;
                }
            } while (true);

            otherlv_34=(Token)match(input,36,FollowSets000.FOLLOW_34); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_34, grammarAccess.getNodeDeclarationAccess().getTelKeyword_11());
              		
            }
            // InternalScadeEquations.g:1878:3: (otherlv_35= '.' | (otherlv_36= ';' )? )
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( (LA42_0==37) ) {
                alt42=1;
            }
            else if ( (LA42_0==EOF||LA42_0==20) ) {
                alt42=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 42, 0, input);

                throw nvae;
            }
            switch (alt42) {
                case 1 :
                    // InternalScadeEquations.g:1879:4: otherlv_35= '.'
                    {
                    otherlv_35=(Token)match(input,37,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_35, grammarAccess.getNodeDeclarationAccess().getFullStopKeyword_12_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:1884:4: (otherlv_36= ';' )?
                    {
                    // InternalScadeEquations.g:1884:4: (otherlv_36= ';' )?
                    int alt41=2;
                    int LA41_0 = input.LA(1);

                    if ( (LA41_0==20) ) {
                        alt41=1;
                    }
                    switch (alt41) {
                        case 1 :
                            // InternalScadeEquations.g:1885:5: otherlv_36= ';'
                            {
                            otherlv_36=(Token)match(input,20,FollowSets000.FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_36, grammarAccess.getNodeDeclarationAccess().getSemicolonKeyword_12_1());
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNodeDeclaration"


    // $ANTLR start "entryRuleNodeValuedObject"
    // InternalScadeEquations.g:1895:1: entryRuleNodeValuedObject returns [EObject current=null] : iv_ruleNodeValuedObject= ruleNodeValuedObject EOF ;
    public final EObject entryRuleNodeValuedObject() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNodeValuedObject = null;


        try {
            // InternalScadeEquations.g:1895:57: (iv_ruleNodeValuedObject= ruleNodeValuedObject EOF )
            // InternalScadeEquations.g:1896:2: iv_ruleNodeValuedObject= ruleNodeValuedObject EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNodeValuedObjectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNodeValuedObject=ruleNodeValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNodeValuedObject; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNodeValuedObject"


    // $ANTLR start "ruleNodeValuedObject"
    // InternalScadeEquations.g:1902:1: ruleNodeValuedObject returns [EObject current=null] : ( () ( (lv_name_1_0= RULE_ID ) ) ) ;
    public final EObject ruleNodeValuedObject() throws RecognitionException {
        EObject current = null;

        Token lv_name_1_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:1908:2: ( ( () ( (lv_name_1_0= RULE_ID ) ) ) )
            // InternalScadeEquations.g:1909:2: ( () ( (lv_name_1_0= RULE_ID ) ) )
            {
            // InternalScadeEquations.g:1909:2: ( () ( (lv_name_1_0= RULE_ID ) ) )
            // InternalScadeEquations.g:1910:3: () ( (lv_name_1_0= RULE_ID ) )
            {
            // InternalScadeEquations.g:1910:3: ()
            // InternalScadeEquations.g:1911:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getNodeValuedObjectAccess().getNodeValuedObjectAction_0(),
              					current);
              			
            }

            }

            // InternalScadeEquations.g:1920:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalScadeEquations.g:1921:4: (lv_name_1_0= RULE_ID )
            {
            // InternalScadeEquations.g:1921:4: (lv_name_1_0= RULE_ID )
            // InternalScadeEquations.g:1922:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getNodeValuedObjectAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getNodeValuedObjectRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ID");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNodeValuedObject"


    // $ANTLR start "entryRuleEquation"
    // InternalScadeEquations.g:1942:1: entryRuleEquation returns [EObject current=null] : iv_ruleEquation= ruleEquation EOF ;
    public final EObject entryRuleEquation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEquation = null;


        try {
            // InternalScadeEquations.g:1942:49: (iv_ruleEquation= ruleEquation EOF )
            // InternalScadeEquations.g:1943:2: iv_ruleEquation= ruleEquation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEquationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEquation=ruleEquation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEquation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEquation"


    // $ANTLR start "ruleEquation"
    // InternalScadeEquations.g:1949:1: ruleEquation returns [EObject current=null] : ( () ( (otherlv_1= '(' ( (lv_references_2_0= ruleValuedObjectReference ) ) otherlv_3= ',' ( (lv_references_4_0= ruleValuedObjectReference ) ) (otherlv_5= ',' ( (lv_references_6_0= ruleValuedObjectReference ) ) )* otherlv_7= ')' ) | ( ( (lv_references_8_0= ruleValuedObjectReference ) ) otherlv_9= ',' ( (lv_references_10_0= ruleValuedObjectReference ) ) (otherlv_11= ',' ( (lv_references_12_0= ruleValuedObjectReference ) ) )* ) | ( (lv_reference_13_0= ruleValuedObjectReference ) ) ) ( (lv_operator_14_0= ruleAssignOperator ) ) ( (lv_expression_15_0= ruleExpression ) ) otherlv_16= ';' ) ;
    public final EObject ruleEquation() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_16=null;
        EObject lv_references_2_0 = null;

        EObject lv_references_4_0 = null;

        EObject lv_references_6_0 = null;

        EObject lv_references_8_0 = null;

        EObject lv_references_10_0 = null;

        EObject lv_references_12_0 = null;

        EObject lv_reference_13_0 = null;

        Enumerator lv_operator_14_0 = null;

        EObject lv_expression_15_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:1955:2: ( ( () ( (otherlv_1= '(' ( (lv_references_2_0= ruleValuedObjectReference ) ) otherlv_3= ',' ( (lv_references_4_0= ruleValuedObjectReference ) ) (otherlv_5= ',' ( (lv_references_6_0= ruleValuedObjectReference ) ) )* otherlv_7= ')' ) | ( ( (lv_references_8_0= ruleValuedObjectReference ) ) otherlv_9= ',' ( (lv_references_10_0= ruleValuedObjectReference ) ) (otherlv_11= ',' ( (lv_references_12_0= ruleValuedObjectReference ) ) )* ) | ( (lv_reference_13_0= ruleValuedObjectReference ) ) ) ( (lv_operator_14_0= ruleAssignOperator ) ) ( (lv_expression_15_0= ruleExpression ) ) otherlv_16= ';' ) )
            // InternalScadeEquations.g:1956:2: ( () ( (otherlv_1= '(' ( (lv_references_2_0= ruleValuedObjectReference ) ) otherlv_3= ',' ( (lv_references_4_0= ruleValuedObjectReference ) ) (otherlv_5= ',' ( (lv_references_6_0= ruleValuedObjectReference ) ) )* otherlv_7= ')' ) | ( ( (lv_references_8_0= ruleValuedObjectReference ) ) otherlv_9= ',' ( (lv_references_10_0= ruleValuedObjectReference ) ) (otherlv_11= ',' ( (lv_references_12_0= ruleValuedObjectReference ) ) )* ) | ( (lv_reference_13_0= ruleValuedObjectReference ) ) ) ( (lv_operator_14_0= ruleAssignOperator ) ) ( (lv_expression_15_0= ruleExpression ) ) otherlv_16= ';' )
            {
            // InternalScadeEquations.g:1956:2: ( () ( (otherlv_1= '(' ( (lv_references_2_0= ruleValuedObjectReference ) ) otherlv_3= ',' ( (lv_references_4_0= ruleValuedObjectReference ) ) (otherlv_5= ',' ( (lv_references_6_0= ruleValuedObjectReference ) ) )* otherlv_7= ')' ) | ( ( (lv_references_8_0= ruleValuedObjectReference ) ) otherlv_9= ',' ( (lv_references_10_0= ruleValuedObjectReference ) ) (otherlv_11= ',' ( (lv_references_12_0= ruleValuedObjectReference ) ) )* ) | ( (lv_reference_13_0= ruleValuedObjectReference ) ) ) ( (lv_operator_14_0= ruleAssignOperator ) ) ( (lv_expression_15_0= ruleExpression ) ) otherlv_16= ';' )
            // InternalScadeEquations.g:1957:3: () ( (otherlv_1= '(' ( (lv_references_2_0= ruleValuedObjectReference ) ) otherlv_3= ',' ( (lv_references_4_0= ruleValuedObjectReference ) ) (otherlv_5= ',' ( (lv_references_6_0= ruleValuedObjectReference ) ) )* otherlv_7= ')' ) | ( ( (lv_references_8_0= ruleValuedObjectReference ) ) otherlv_9= ',' ( (lv_references_10_0= ruleValuedObjectReference ) ) (otherlv_11= ',' ( (lv_references_12_0= ruleValuedObjectReference ) ) )* ) | ( (lv_reference_13_0= ruleValuedObjectReference ) ) ) ( (lv_operator_14_0= ruleAssignOperator ) ) ( (lv_expression_15_0= ruleExpression ) ) otherlv_16= ';'
            {
            // InternalScadeEquations.g:1957:3: ()
            // InternalScadeEquations.g:1958:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getEquationAccess().getEquationAction_0(),
              					current);
              			
            }

            }

            // InternalScadeEquations.g:1967:3: ( (otherlv_1= '(' ( (lv_references_2_0= ruleValuedObjectReference ) ) otherlv_3= ',' ( (lv_references_4_0= ruleValuedObjectReference ) ) (otherlv_5= ',' ( (lv_references_6_0= ruleValuedObjectReference ) ) )* otherlv_7= ')' ) | ( ( (lv_references_8_0= ruleValuedObjectReference ) ) otherlv_9= ',' ( (lv_references_10_0= ruleValuedObjectReference ) ) (otherlv_11= ',' ( (lv_references_12_0= ruleValuedObjectReference ) ) )* ) | ( (lv_reference_13_0= ruleValuedObjectReference ) ) )
            int alt45=3;
            int LA45_0 = input.LA(1);

            if ( (LA45_0==17) ) {
                alt45=1;
            }
            else if ( (LA45_0==RULE_ID) ) {
                int LA45_2 = input.LA(2);

                if ( (synpred54_InternalScadeEquations()) ) {
                    alt45=2;
                }
                else if ( (true) ) {
                    alt45=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 45, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 45, 0, input);

                throw nvae;
            }
            switch (alt45) {
                case 1 :
                    // InternalScadeEquations.g:1968:4: (otherlv_1= '(' ( (lv_references_2_0= ruleValuedObjectReference ) ) otherlv_3= ',' ( (lv_references_4_0= ruleValuedObjectReference ) ) (otherlv_5= ',' ( (lv_references_6_0= ruleValuedObjectReference ) ) )* otherlv_7= ')' )
                    {
                    // InternalScadeEquations.g:1968:4: (otherlv_1= '(' ( (lv_references_2_0= ruleValuedObjectReference ) ) otherlv_3= ',' ( (lv_references_4_0= ruleValuedObjectReference ) ) (otherlv_5= ',' ( (lv_references_6_0= ruleValuedObjectReference ) ) )* otherlv_7= ')' )
                    // InternalScadeEquations.g:1969:5: otherlv_1= '(' ( (lv_references_2_0= ruleValuedObjectReference ) ) otherlv_3= ',' ( (lv_references_4_0= ruleValuedObjectReference ) ) (otherlv_5= ',' ( (lv_references_6_0= ruleValuedObjectReference ) ) )* otherlv_7= ')'
                    {
                    otherlv_1=(Token)match(input,17,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getEquationAccess().getLeftParenthesisKeyword_1_0_0());
                      				
                    }
                    // InternalScadeEquations.g:1973:5: ( (lv_references_2_0= ruleValuedObjectReference ) )
                    // InternalScadeEquations.g:1974:6: (lv_references_2_0= ruleValuedObjectReference )
                    {
                    // InternalScadeEquations.g:1974:6: (lv_references_2_0= ruleValuedObjectReference )
                    // InternalScadeEquations.g:1975:7: lv_references_2_0= ruleValuedObjectReference
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getEquationAccess().getReferencesValuedObjectReferenceParserRuleCall_1_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_5);
                    lv_references_2_0=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getEquationRule());
                      							}
                      							add(
                      								current,
                      								"references",
                      								lv_references_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,18,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getEquationAccess().getCommaKeyword_1_0_2());
                      				
                    }
                    // InternalScadeEquations.g:1996:5: ( (lv_references_4_0= ruleValuedObjectReference ) )
                    // InternalScadeEquations.g:1997:6: (lv_references_4_0= ruleValuedObjectReference )
                    {
                    // InternalScadeEquations.g:1997:6: (lv_references_4_0= ruleValuedObjectReference )
                    // InternalScadeEquations.g:1998:7: lv_references_4_0= ruleValuedObjectReference
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getEquationAccess().getReferencesValuedObjectReferenceParserRuleCall_1_0_3_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_6);
                    lv_references_4_0=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getEquationRule());
                      							}
                      							add(
                      								current,
                      								"references",
                      								lv_references_4_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:2015:5: (otherlv_5= ',' ( (lv_references_6_0= ruleValuedObjectReference ) ) )*
                    loop43:
                    do {
                        int alt43=2;
                        int LA43_0 = input.LA(1);

                        if ( (LA43_0==18) ) {
                            alt43=1;
                        }


                        switch (alt43) {
                    	case 1 :
                    	    // InternalScadeEquations.g:2016:6: otherlv_5= ',' ( (lv_references_6_0= ruleValuedObjectReference ) )
                    	    {
                    	    otherlv_5=(Token)match(input,18,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_5, grammarAccess.getEquationAccess().getCommaKeyword_1_0_4_0());
                    	      					
                    	    }
                    	    // InternalScadeEquations.g:2020:6: ( (lv_references_6_0= ruleValuedObjectReference ) )
                    	    // InternalScadeEquations.g:2021:7: (lv_references_6_0= ruleValuedObjectReference )
                    	    {
                    	    // InternalScadeEquations.g:2021:7: (lv_references_6_0= ruleValuedObjectReference )
                    	    // InternalScadeEquations.g:2022:8: lv_references_6_0= ruleValuedObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getEquationAccess().getReferencesValuedObjectReferenceParserRuleCall_1_0_4_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_6);
                    	    lv_references_6_0=ruleValuedObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getEquationRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"references",
                    	      									lv_references_6_0,
                    	      									"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop43;
                        }
                    } while (true);

                    otherlv_7=(Token)match(input,19,FollowSets000.FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getEquationAccess().getRightParenthesisKeyword_1_0_5());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:2046:4: ( ( (lv_references_8_0= ruleValuedObjectReference ) ) otherlv_9= ',' ( (lv_references_10_0= ruleValuedObjectReference ) ) (otherlv_11= ',' ( (lv_references_12_0= ruleValuedObjectReference ) ) )* )
                    {
                    // InternalScadeEquations.g:2046:4: ( ( (lv_references_8_0= ruleValuedObjectReference ) ) otherlv_9= ',' ( (lv_references_10_0= ruleValuedObjectReference ) ) (otherlv_11= ',' ( (lv_references_12_0= ruleValuedObjectReference ) ) )* )
                    // InternalScadeEquations.g:2047:5: ( (lv_references_8_0= ruleValuedObjectReference ) ) otherlv_9= ',' ( (lv_references_10_0= ruleValuedObjectReference ) ) (otherlv_11= ',' ( (lv_references_12_0= ruleValuedObjectReference ) ) )*
                    {
                    // InternalScadeEquations.g:2047:5: ( (lv_references_8_0= ruleValuedObjectReference ) )
                    // InternalScadeEquations.g:2048:6: (lv_references_8_0= ruleValuedObjectReference )
                    {
                    // InternalScadeEquations.g:2048:6: (lv_references_8_0= ruleValuedObjectReference )
                    // InternalScadeEquations.g:2049:7: lv_references_8_0= ruleValuedObjectReference
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getEquationAccess().getReferencesValuedObjectReferenceParserRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_5);
                    lv_references_8_0=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getEquationRule());
                      							}
                      							add(
                      								current,
                      								"references",
                      								lv_references_8_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_9=(Token)match(input,18,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_9, grammarAccess.getEquationAccess().getCommaKeyword_1_1_1());
                      				
                    }
                    // InternalScadeEquations.g:2070:5: ( (lv_references_10_0= ruleValuedObjectReference ) )
                    // InternalScadeEquations.g:2071:6: (lv_references_10_0= ruleValuedObjectReference )
                    {
                    // InternalScadeEquations.g:2071:6: (lv_references_10_0= ruleValuedObjectReference )
                    // InternalScadeEquations.g:2072:7: lv_references_10_0= ruleValuedObjectReference
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getEquationAccess().getReferencesValuedObjectReferenceParserRuleCall_1_1_2_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_8);
                    lv_references_10_0=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getEquationRule());
                      							}
                      							add(
                      								current,
                      								"references",
                      								lv_references_10_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:2089:5: (otherlv_11= ',' ( (lv_references_12_0= ruleValuedObjectReference ) ) )*
                    loop44:
                    do {
                        int alt44=2;
                        int LA44_0 = input.LA(1);

                        if ( (LA44_0==18) ) {
                            alt44=1;
                        }


                        switch (alt44) {
                    	case 1 :
                    	    // InternalScadeEquations.g:2090:6: otherlv_11= ',' ( (lv_references_12_0= ruleValuedObjectReference ) )
                    	    {
                    	    otherlv_11=(Token)match(input,18,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_11, grammarAccess.getEquationAccess().getCommaKeyword_1_1_3_0());
                    	      					
                    	    }
                    	    // InternalScadeEquations.g:2094:6: ( (lv_references_12_0= ruleValuedObjectReference ) )
                    	    // InternalScadeEquations.g:2095:7: (lv_references_12_0= ruleValuedObjectReference )
                    	    {
                    	    // InternalScadeEquations.g:2095:7: (lv_references_12_0= ruleValuedObjectReference )
                    	    // InternalScadeEquations.g:2096:8: lv_references_12_0= ruleValuedObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getEquationAccess().getReferencesValuedObjectReferenceParserRuleCall_1_1_3_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_8);
                    	    lv_references_12_0=ruleValuedObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getEquationRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"references",
                    	      									lv_references_12_0,
                    	      									"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop44;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 3 :
                    // InternalScadeEquations.g:2116:4: ( (lv_reference_13_0= ruleValuedObjectReference ) )
                    {
                    // InternalScadeEquations.g:2116:4: ( (lv_reference_13_0= ruleValuedObjectReference ) )
                    // InternalScadeEquations.g:2117:5: (lv_reference_13_0= ruleValuedObjectReference )
                    {
                    // InternalScadeEquations.g:2117:5: (lv_reference_13_0= ruleValuedObjectReference )
                    // InternalScadeEquations.g:2118:6: lv_reference_13_0= ruleValuedObjectReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEquationAccess().getReferenceValuedObjectReferenceParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_7);
                    lv_reference_13_0=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEquationRule());
                      						}
                      						set(
                      							current,
                      							"reference",
                      							lv_reference_13_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:2136:3: ( (lv_operator_14_0= ruleAssignOperator ) )
            // InternalScadeEquations.g:2137:4: (lv_operator_14_0= ruleAssignOperator )
            {
            // InternalScadeEquations.g:2137:4: (lv_operator_14_0= ruleAssignOperator )
            // InternalScadeEquations.g:2138:5: lv_operator_14_0= ruleAssignOperator
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEquationAccess().getOperatorAssignOperatorEnumRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_9);
            lv_operator_14_0=ruleAssignOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEquationRule());
              					}
              					set(
              						current,
              						"operator",
              						lv_operator_14_0,
              						"de.cau.cs.kieler.lustre.Lustre.AssignOperator");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:2155:3: ( (lv_expression_15_0= ruleExpression ) )
            // InternalScadeEquations.g:2156:4: (lv_expression_15_0= ruleExpression )
            {
            // InternalScadeEquations.g:2156:4: (lv_expression_15_0= ruleExpression )
            // InternalScadeEquations.g:2157:5: lv_expression_15_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEquationAccess().getExpressionExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_10);
            lv_expression_15_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEquationRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_15_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_16=(Token)match(input,20,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_16, grammarAccess.getEquationAccess().getSemicolonKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEquation"


    // $ANTLR start "entryRuleEmission"
    // InternalScadeEquations.g:2182:1: entryRuleEmission returns [EObject current=null] : iv_ruleEmission= ruleEmission EOF ;
    public final EObject entryRuleEmission() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEmission = null;


        try {
            // InternalScadeEquations.g:2182:49: (iv_ruleEmission= ruleEmission EOF )
            // InternalScadeEquations.g:2183:2: iv_ruleEmission= ruleEmission EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEmissionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEmission=ruleEmission();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEmission; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEmission"


    // $ANTLR start "ruleEmission"
    // InternalScadeEquations.g:2189:1: ruleEmission returns [EObject current=null] : (otherlv_0= 'emit' (this_ValuedEmission_1= ruleValuedEmission | this_PureEmission_2= rulePureEmission ) otherlv_3= ';' ) ;
    public final EObject ruleEmission() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        EObject this_ValuedEmission_1 = null;

        EObject this_PureEmission_2 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:2195:2: ( (otherlv_0= 'emit' (this_ValuedEmission_1= ruleValuedEmission | this_PureEmission_2= rulePureEmission ) otherlv_3= ';' ) )
            // InternalScadeEquations.g:2196:2: (otherlv_0= 'emit' (this_ValuedEmission_1= ruleValuedEmission | this_PureEmission_2= rulePureEmission ) otherlv_3= ';' )
            {
            // InternalScadeEquations.g:2196:2: (otherlv_0= 'emit' (this_ValuedEmission_1= ruleValuedEmission | this_PureEmission_2= rulePureEmission ) otherlv_3= ';' )
            // InternalScadeEquations.g:2197:3: otherlv_0= 'emit' (this_ValuedEmission_1= ruleValuedEmission | this_PureEmission_2= rulePureEmission ) otherlv_3= ';'
            {
            otherlv_0=(Token)match(input,38,FollowSets000.FOLLOW_35); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getEmissionAccess().getEmitKeyword_0());
              		
            }
            // InternalScadeEquations.g:2201:3: (this_ValuedEmission_1= ruleValuedEmission | this_PureEmission_2= rulePureEmission )
            int alt46=2;
            switch ( input.LA(1) ) {
            case RULE_COMMENT_ANNOTATION:
                {
                int LA46_1 = input.LA(2);

                if ( (synpred55_InternalScadeEquations()) ) {
                    alt46=1;
                }
                else if ( (true) ) {
                    alt46=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 46, 1, input);

                    throw nvae;
                }
                }
                break;
            case 89:
                {
                int LA46_2 = input.LA(2);

                if ( (synpred55_InternalScadeEquations()) ) {
                    alt46=1;
                }
                else if ( (true) ) {
                    alt46=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 46, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_ID:
                {
                int LA46_3 = input.LA(2);

                if ( (synpred55_InternalScadeEquations()) ) {
                    alt46=1;
                }
                else if ( (true) ) {
                    alt46=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 46, 3, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 46, 0, input);

                throw nvae;
            }

            switch (alt46) {
                case 1 :
                    // InternalScadeEquations.g:2202:4: this_ValuedEmission_1= ruleValuedEmission
                    {
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getEmissionAccess().getValuedEmissionParserRuleCall_1_0());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_10);
                    this_ValuedEmission_1=ruleValuedEmission();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ValuedEmission_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:2214:4: this_PureEmission_2= rulePureEmission
                    {
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getEmissionAccess().getPureEmissionParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_10);
                    this_PureEmission_2=rulePureEmission();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_PureEmission_2;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            otherlv_3=(Token)match(input,20,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getEmissionAccess().getSemicolonKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEmission"


    // $ANTLR start "entryRuleAssertion"
    // InternalScadeEquations.g:2234:1: entryRuleAssertion returns [EObject current=null] : iv_ruleAssertion= ruleAssertion EOF ;
    public final EObject entryRuleAssertion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAssertion = null;


        try {
            // InternalScadeEquations.g:2234:50: (iv_ruleAssertion= ruleAssertion EOF )
            // InternalScadeEquations.g:2235:2: iv_ruleAssertion= ruleAssertion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAssertionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAssertion=ruleAssertion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAssertion; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAssertion"


    // $ANTLR start "ruleAssertion"
    // InternalScadeEquations.g:2241:1: ruleAssertion returns [EObject current=null] : ( () otherlv_1= 'assert' ( (lv_expr_2_0= ruleExpression ) ) otherlv_3= ';' ) ;
    public final EObject ruleAssertion() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_expr_2_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:2247:2: ( ( () otherlv_1= 'assert' ( (lv_expr_2_0= ruleExpression ) ) otherlv_3= ';' ) )
            // InternalScadeEquations.g:2248:2: ( () otherlv_1= 'assert' ( (lv_expr_2_0= ruleExpression ) ) otherlv_3= ';' )
            {
            // InternalScadeEquations.g:2248:2: ( () otherlv_1= 'assert' ( (lv_expr_2_0= ruleExpression ) ) otherlv_3= ';' )
            // InternalScadeEquations.g:2249:3: () otherlv_1= 'assert' ( (lv_expr_2_0= ruleExpression ) ) otherlv_3= ';'
            {
            // InternalScadeEquations.g:2249:3: ()
            // InternalScadeEquations.g:2250:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getAssertionAccess().getAssertionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,39,FollowSets000.FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAssertionAccess().getAssertKeyword_1());
              		
            }
            // InternalScadeEquations.g:2263:3: ( (lv_expr_2_0= ruleExpression ) )
            // InternalScadeEquations.g:2264:4: (lv_expr_2_0= ruleExpression )
            {
            // InternalScadeEquations.g:2264:4: (lv_expr_2_0= ruleExpression )
            // InternalScadeEquations.g:2265:5: lv_expr_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAssertionAccess().getExprExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_10);
            lv_expr_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAssertionRule());
              					}
              					set(
              						current,
              						"expr",
              						lv_expr_2_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,20,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getAssertionAccess().getSemicolonKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAssertion"


    // $ANTLR start "entryRuleAutomaton"
    // InternalScadeEquations.g:2290:1: entryRuleAutomaton returns [EObject current=null] : iv_ruleAutomaton= ruleAutomaton EOF ;
    public final EObject entryRuleAutomaton() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAutomaton = null;


        try {
            // InternalScadeEquations.g:2290:50: (iv_ruleAutomaton= ruleAutomaton EOF )
            // InternalScadeEquations.g:2291:2: iv_ruleAutomaton= ruleAutomaton EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAutomatonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAutomaton=ruleAutomaton();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAutomaton; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAutomaton"


    // $ANTLR start "ruleAutomaton"
    // InternalScadeEquations.g:2297:1: ruleAutomaton returns [EObject current=null] : (otherlv_0= 'automaton' ( (lv_name_1_0= RULE_ID ) ) ( (lv_states_2_0= ruleAState ) ) ( (lv_states_3_0= ruleAState ) )* otherlv_4= 'returns' otherlv_5= '..' otherlv_6= ';' ) ;
    public final EObject ruleAutomaton() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject lv_states_2_0 = null;

        EObject lv_states_3_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:2303:2: ( (otherlv_0= 'automaton' ( (lv_name_1_0= RULE_ID ) ) ( (lv_states_2_0= ruleAState ) ) ( (lv_states_3_0= ruleAState ) )* otherlv_4= 'returns' otherlv_5= '..' otherlv_6= ';' ) )
            // InternalScadeEquations.g:2304:2: (otherlv_0= 'automaton' ( (lv_name_1_0= RULE_ID ) ) ( (lv_states_2_0= ruleAState ) ) ( (lv_states_3_0= ruleAState ) )* otherlv_4= 'returns' otherlv_5= '..' otherlv_6= ';' )
            {
            // InternalScadeEquations.g:2304:2: (otherlv_0= 'automaton' ( (lv_name_1_0= RULE_ID ) ) ( (lv_states_2_0= ruleAState ) ) ( (lv_states_3_0= ruleAState ) )* otherlv_4= 'returns' otherlv_5= '..' otherlv_6= ';' )
            // InternalScadeEquations.g:2305:3: otherlv_0= 'automaton' ( (lv_name_1_0= RULE_ID ) ) ( (lv_states_2_0= ruleAState ) ) ( (lv_states_3_0= ruleAState ) )* otherlv_4= 'returns' otherlv_5= '..' otherlv_6= ';'
            {
            otherlv_0=(Token)match(input,40,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getAutomatonAccess().getAutomatonKeyword_0());
              		
            }
            // InternalScadeEquations.g:2309:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalScadeEquations.g:2310:4: (lv_name_1_0= RULE_ID )
            {
            // InternalScadeEquations.g:2310:4: (lv_name_1_0= RULE_ID )
            // InternalScadeEquations.g:2311:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_36); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getAutomatonAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAutomatonRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ID");
              				
            }

            }


            }

            // InternalScadeEquations.g:2327:3: ( (lv_states_2_0= ruleAState ) )
            // InternalScadeEquations.g:2328:4: (lv_states_2_0= ruleAState )
            {
            // InternalScadeEquations.g:2328:4: (lv_states_2_0= ruleAState )
            // InternalScadeEquations.g:2329:5: lv_states_2_0= ruleAState
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAutomatonAccess().getStatesAStateParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_37);
            lv_states_2_0=ruleAState();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAutomatonRule());
              					}
              					add(
              						current,
              						"states",
              						lv_states_2_0,
              						"de.cau.cs.kieler.lustre.Lustre.AState");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:2346:3: ( (lv_states_3_0= ruleAState ) )*
            loop47:
            do {
                int alt47=2;
                int LA47_0 = input.LA(1);

                if ( ((LA47_0>=42 && LA47_0<=43)) ) {
                    alt47=1;
                }


                switch (alt47) {
            	case 1 :
            	    // InternalScadeEquations.g:2347:4: (lv_states_3_0= ruleAState )
            	    {
            	    // InternalScadeEquations.g:2347:4: (lv_states_3_0= ruleAState )
            	    // InternalScadeEquations.g:2348:5: lv_states_3_0= ruleAState
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAutomatonAccess().getStatesAStateParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_37);
            	    lv_states_3_0=ruleAState();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAutomatonRule());
            	      					}
            	      					add(
            	      						current,
            	      						"states",
            	      						lv_states_3_0,
            	      						"de.cau.cs.kieler.lustre.Lustre.AState");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop47;
                }
            } while (true);

            otherlv_4=(Token)match(input,29,FollowSets000.FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getAutomatonAccess().getReturnsKeyword_4());
              		
            }
            otherlv_5=(Token)match(input,41,FollowSets000.FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getAutomatonAccess().getFullStopFullStopKeyword_5());
              		
            }
            otherlv_6=(Token)match(input,20,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getAutomatonAccess().getSemicolonKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAutomaton"


    // $ANTLR start "entryRuleAState"
    // InternalScadeEquations.g:2381:1: entryRuleAState returns [EObject current=null] : iv_ruleAState= ruleAState EOF ;
    public final EObject entryRuleAState() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAState = null;


        try {
            // InternalScadeEquations.g:2381:47: (iv_ruleAState= ruleAState EOF )
            // InternalScadeEquations.g:2382:2: iv_ruleAState= ruleAState EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAStateRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAState=ruleAState();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAState; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAState"


    // $ANTLR start "ruleAState"
    // InternalScadeEquations.g:2388:1: ruleAState returns [EObject current=null] : ( ( (lv_initial_0_0= 'initial' ) )? otherlv_1= 'state' ( (lv_valuedObject_2_0= ruleStateValuedObject ) ) ( (otherlv_3= 'const' ( (lv_constants_4_0= ruleVariableDeclarationInit ) ) otherlv_5= ';' ( ( (lv_constants_6_0= ruleVariableDeclarationInit ) ) otherlv_7= ';' )* ) | (otherlv_8= 'var' ( (lv_variables_9_0= ruleVariableDeclarationInit ) ) (otherlv_10= ';' ( (lv_variables_11_0= ruleVariableDeclarationInit ) ) )* otherlv_12= ';' ) )* (otherlv_13= 'let' ( ( (lv_equations_14_0= ruleEquation ) ) | ( (lv_emissions_15_0= ruleEmission ) ) | ( (lv_assertions_16_0= ruleAssertion ) ) | ( (lv_automatons_17_0= ruleAutomaton ) ) )* otherlv_18= 'tel' )? (otherlv_19= '.' | (otherlv_20= ';' )? ) ( (lv_transitions_21_0= ruleATransition ) )* ) ;
    public final EObject ruleAState() throws RecognitionException {
        EObject current = null;

        Token lv_initial_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_20=null;
        EObject lv_valuedObject_2_0 = null;

        EObject lv_constants_4_0 = null;

        EObject lv_constants_6_0 = null;

        EObject lv_variables_9_0 = null;

        EObject lv_variables_11_0 = null;

        EObject lv_equations_14_0 = null;

        EObject lv_emissions_15_0 = null;

        EObject lv_assertions_16_0 = null;

        EObject lv_automatons_17_0 = null;

        EObject lv_transitions_21_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:2394:2: ( ( ( (lv_initial_0_0= 'initial' ) )? otherlv_1= 'state' ( (lv_valuedObject_2_0= ruleStateValuedObject ) ) ( (otherlv_3= 'const' ( (lv_constants_4_0= ruleVariableDeclarationInit ) ) otherlv_5= ';' ( ( (lv_constants_6_0= ruleVariableDeclarationInit ) ) otherlv_7= ';' )* ) | (otherlv_8= 'var' ( (lv_variables_9_0= ruleVariableDeclarationInit ) ) (otherlv_10= ';' ( (lv_variables_11_0= ruleVariableDeclarationInit ) ) )* otherlv_12= ';' ) )* (otherlv_13= 'let' ( ( (lv_equations_14_0= ruleEquation ) ) | ( (lv_emissions_15_0= ruleEmission ) ) | ( (lv_assertions_16_0= ruleAssertion ) ) | ( (lv_automatons_17_0= ruleAutomaton ) ) )* otherlv_18= 'tel' )? (otherlv_19= '.' | (otherlv_20= ';' )? ) ( (lv_transitions_21_0= ruleATransition ) )* ) )
            // InternalScadeEquations.g:2395:2: ( ( (lv_initial_0_0= 'initial' ) )? otherlv_1= 'state' ( (lv_valuedObject_2_0= ruleStateValuedObject ) ) ( (otherlv_3= 'const' ( (lv_constants_4_0= ruleVariableDeclarationInit ) ) otherlv_5= ';' ( ( (lv_constants_6_0= ruleVariableDeclarationInit ) ) otherlv_7= ';' )* ) | (otherlv_8= 'var' ( (lv_variables_9_0= ruleVariableDeclarationInit ) ) (otherlv_10= ';' ( (lv_variables_11_0= ruleVariableDeclarationInit ) ) )* otherlv_12= ';' ) )* (otherlv_13= 'let' ( ( (lv_equations_14_0= ruleEquation ) ) | ( (lv_emissions_15_0= ruleEmission ) ) | ( (lv_assertions_16_0= ruleAssertion ) ) | ( (lv_automatons_17_0= ruleAutomaton ) ) )* otherlv_18= 'tel' )? (otherlv_19= '.' | (otherlv_20= ';' )? ) ( (lv_transitions_21_0= ruleATransition ) )* )
            {
            // InternalScadeEquations.g:2395:2: ( ( (lv_initial_0_0= 'initial' ) )? otherlv_1= 'state' ( (lv_valuedObject_2_0= ruleStateValuedObject ) ) ( (otherlv_3= 'const' ( (lv_constants_4_0= ruleVariableDeclarationInit ) ) otherlv_5= ';' ( ( (lv_constants_6_0= ruleVariableDeclarationInit ) ) otherlv_7= ';' )* ) | (otherlv_8= 'var' ( (lv_variables_9_0= ruleVariableDeclarationInit ) ) (otherlv_10= ';' ( (lv_variables_11_0= ruleVariableDeclarationInit ) ) )* otherlv_12= ';' ) )* (otherlv_13= 'let' ( ( (lv_equations_14_0= ruleEquation ) ) | ( (lv_emissions_15_0= ruleEmission ) ) | ( (lv_assertions_16_0= ruleAssertion ) ) | ( (lv_automatons_17_0= ruleAutomaton ) ) )* otherlv_18= 'tel' )? (otherlv_19= '.' | (otherlv_20= ';' )? ) ( (lv_transitions_21_0= ruleATransition ) )* )
            // InternalScadeEquations.g:2396:3: ( (lv_initial_0_0= 'initial' ) )? otherlv_1= 'state' ( (lv_valuedObject_2_0= ruleStateValuedObject ) ) ( (otherlv_3= 'const' ( (lv_constants_4_0= ruleVariableDeclarationInit ) ) otherlv_5= ';' ( ( (lv_constants_6_0= ruleVariableDeclarationInit ) ) otherlv_7= ';' )* ) | (otherlv_8= 'var' ( (lv_variables_9_0= ruleVariableDeclarationInit ) ) (otherlv_10= ';' ( (lv_variables_11_0= ruleVariableDeclarationInit ) ) )* otherlv_12= ';' ) )* (otherlv_13= 'let' ( ( (lv_equations_14_0= ruleEquation ) ) | ( (lv_emissions_15_0= ruleEmission ) ) | ( (lv_assertions_16_0= ruleAssertion ) ) | ( (lv_automatons_17_0= ruleAutomaton ) ) )* otherlv_18= 'tel' )? (otherlv_19= '.' | (otherlv_20= ';' )? ) ( (lv_transitions_21_0= ruleATransition ) )*
            {
            // InternalScadeEquations.g:2396:3: ( (lv_initial_0_0= 'initial' ) )?
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( (LA48_0==42) ) {
                alt48=1;
            }
            switch (alt48) {
                case 1 :
                    // InternalScadeEquations.g:2397:4: (lv_initial_0_0= 'initial' )
                    {
                    // InternalScadeEquations.g:2397:4: (lv_initial_0_0= 'initial' )
                    // InternalScadeEquations.g:2398:5: lv_initial_0_0= 'initial'
                    {
                    lv_initial_0_0=(Token)match(input,42,FollowSets000.FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_initial_0_0, grammarAccess.getAStateAccess().getInitialInitialKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getAStateRule());
                      					}
                      					setWithLastConsumed(current, "initial", true, "initial");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,43,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAStateAccess().getStateKeyword_1());
              		
            }
            // InternalScadeEquations.g:2414:3: ( (lv_valuedObject_2_0= ruleStateValuedObject ) )
            // InternalScadeEquations.g:2415:4: (lv_valuedObject_2_0= ruleStateValuedObject )
            {
            // InternalScadeEquations.g:2415:4: (lv_valuedObject_2_0= ruleStateValuedObject )
            // InternalScadeEquations.g:2416:5: lv_valuedObject_2_0= ruleStateValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAStateAccess().getValuedObjectStateValuedObjectParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_40);
            lv_valuedObject_2_0=ruleStateValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAStateRule());
              					}
              					set(
              						current,
              						"valuedObject",
              						lv_valuedObject_2_0,
              						"de.cau.cs.kieler.lustre.Lustre.StateValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:2433:3: ( (otherlv_3= 'const' ( (lv_constants_4_0= ruleVariableDeclarationInit ) ) otherlv_5= ';' ( ( (lv_constants_6_0= ruleVariableDeclarationInit ) ) otherlv_7= ';' )* ) | (otherlv_8= 'var' ( (lv_variables_9_0= ruleVariableDeclarationInit ) ) (otherlv_10= ';' ( (lv_variables_11_0= ruleVariableDeclarationInit ) ) )* otherlv_12= ';' ) )*
            loop51:
            do {
                int alt51=3;
                int LA51_0 = input.LA(1);

                if ( (LA51_0==33) ) {
                    alt51=1;
                }
                else if ( (LA51_0==34) ) {
                    alt51=2;
                }


                switch (alt51) {
            	case 1 :
            	    // InternalScadeEquations.g:2434:4: (otherlv_3= 'const' ( (lv_constants_4_0= ruleVariableDeclarationInit ) ) otherlv_5= ';' ( ( (lv_constants_6_0= ruleVariableDeclarationInit ) ) otherlv_7= ';' )* )
            	    {
            	    // InternalScadeEquations.g:2434:4: (otherlv_3= 'const' ( (lv_constants_4_0= ruleVariableDeclarationInit ) ) otherlv_5= ';' ( ( (lv_constants_6_0= ruleVariableDeclarationInit ) ) otherlv_7= ';' )* )
            	    // InternalScadeEquations.g:2435:5: otherlv_3= 'const' ( (lv_constants_4_0= ruleVariableDeclarationInit ) ) otherlv_5= ';' ( ( (lv_constants_6_0= ruleVariableDeclarationInit ) ) otherlv_7= ';' )*
            	    {
            	    otherlv_3=(Token)match(input,33,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_3, grammarAccess.getAStateAccess().getConstKeyword_3_0_0());
            	      				
            	    }
            	    // InternalScadeEquations.g:2439:5: ( (lv_constants_4_0= ruleVariableDeclarationInit ) )
            	    // InternalScadeEquations.g:2440:6: (lv_constants_4_0= ruleVariableDeclarationInit )
            	    {
            	    // InternalScadeEquations.g:2440:6: (lv_constants_4_0= ruleVariableDeclarationInit )
            	    // InternalScadeEquations.g:2441:7: lv_constants_4_0= ruleVariableDeclarationInit
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getAStateAccess().getConstantsVariableDeclarationInitParserRuleCall_3_0_1_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_10);
            	    lv_constants_4_0=ruleVariableDeclarationInit();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getAStateRule());
            	      							}
            	      							add(
            	      								current,
            	      								"constants",
            	      								lv_constants_4_0,
            	      								"de.cau.cs.kieler.lustre.Lustre.VariableDeclarationInit");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    otherlv_5=(Token)match(input,20,FollowSets000.FOLLOW_41); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_5, grammarAccess.getAStateAccess().getSemicolonKeyword_3_0_2());
            	      				
            	    }
            	    // InternalScadeEquations.g:2462:5: ( ( (lv_constants_6_0= ruleVariableDeclarationInit ) ) otherlv_7= ';' )*
            	    loop49:
            	    do {
            	        int alt49=2;
            	        int LA49_0 = input.LA(1);

            	        if ( (LA49_0==RULE_ID) ) {
            	            alt49=1;
            	        }


            	        switch (alt49) {
            	    	case 1 :
            	    	    // InternalScadeEquations.g:2463:6: ( (lv_constants_6_0= ruleVariableDeclarationInit ) ) otherlv_7= ';'
            	    	    {
            	    	    // InternalScadeEquations.g:2463:6: ( (lv_constants_6_0= ruleVariableDeclarationInit ) )
            	    	    // InternalScadeEquations.g:2464:7: (lv_constants_6_0= ruleVariableDeclarationInit )
            	    	    {
            	    	    // InternalScadeEquations.g:2464:7: (lv_constants_6_0= ruleVariableDeclarationInit )
            	    	    // InternalScadeEquations.g:2465:8: lv_constants_6_0= ruleVariableDeclarationInit
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      								newCompositeNode(grammarAccess.getAStateAccess().getConstantsVariableDeclarationInitParserRuleCall_3_0_3_0_0());
            	    	      							
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_10);
            	    	    lv_constants_6_0=ruleVariableDeclarationInit();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      								if (current==null) {
            	    	      									current = createModelElementForParent(grammarAccess.getAStateRule());
            	    	      								}
            	    	      								add(
            	    	      									current,
            	    	      									"constants",
            	    	      									lv_constants_6_0,
            	    	      									"de.cau.cs.kieler.lustre.Lustre.VariableDeclarationInit");
            	    	      								afterParserOrEnumRuleCall();
            	    	      							
            	    	    }

            	    	    }


            	    	    }

            	    	    otherlv_7=(Token)match(input,20,FollowSets000.FOLLOW_41); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      						newLeafNode(otherlv_7, grammarAccess.getAStateAccess().getSemicolonKeyword_3_0_3_1());
            	    	      					
            	    	    }

            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop49;
            	        }
            	    } while (true);


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalScadeEquations.g:2489:4: (otherlv_8= 'var' ( (lv_variables_9_0= ruleVariableDeclarationInit ) ) (otherlv_10= ';' ( (lv_variables_11_0= ruleVariableDeclarationInit ) ) )* otherlv_12= ';' )
            	    {
            	    // InternalScadeEquations.g:2489:4: (otherlv_8= 'var' ( (lv_variables_9_0= ruleVariableDeclarationInit ) ) (otherlv_10= ';' ( (lv_variables_11_0= ruleVariableDeclarationInit ) ) )* otherlv_12= ';' )
            	    // InternalScadeEquations.g:2490:5: otherlv_8= 'var' ( (lv_variables_9_0= ruleVariableDeclarationInit ) ) (otherlv_10= ';' ( (lv_variables_11_0= ruleVariableDeclarationInit ) ) )* otherlv_12= ';'
            	    {
            	    otherlv_8=(Token)match(input,34,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_8, grammarAccess.getAStateAccess().getVarKeyword_3_1_0());
            	      				
            	    }
            	    // InternalScadeEquations.g:2494:5: ( (lv_variables_9_0= ruleVariableDeclarationInit ) )
            	    // InternalScadeEquations.g:2495:6: (lv_variables_9_0= ruleVariableDeclarationInit )
            	    {
            	    // InternalScadeEquations.g:2495:6: (lv_variables_9_0= ruleVariableDeclarationInit )
            	    // InternalScadeEquations.g:2496:7: lv_variables_9_0= ruleVariableDeclarationInit
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getAStateAccess().getVariablesVariableDeclarationInitParserRuleCall_3_1_1_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_10);
            	    lv_variables_9_0=ruleVariableDeclarationInit();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getAStateRule());
            	      							}
            	      							add(
            	      								current,
            	      								"variables",
            	      								lv_variables_9_0,
            	      								"de.cau.cs.kieler.lustre.Lustre.VariableDeclarationInit");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalScadeEquations.g:2513:5: (otherlv_10= ';' ( (lv_variables_11_0= ruleVariableDeclarationInit ) ) )*
            	    loop50:
            	    do {
            	        int alt50=2;
            	        int LA50_0 = input.LA(1);

            	        if ( (LA50_0==20) ) {
            	            int LA50_1 = input.LA(2);

            	            if ( (LA50_1==RULE_ID) ) {
            	                alt50=1;
            	            }


            	        }


            	        switch (alt50) {
            	    	case 1 :
            	    	    // InternalScadeEquations.g:2514:6: otherlv_10= ';' ( (lv_variables_11_0= ruleVariableDeclarationInit ) )
            	    	    {
            	    	    otherlv_10=(Token)match(input,20,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      						newLeafNode(otherlv_10, grammarAccess.getAStateAccess().getSemicolonKeyword_3_1_2_0());
            	    	      					
            	    	    }
            	    	    // InternalScadeEquations.g:2518:6: ( (lv_variables_11_0= ruleVariableDeclarationInit ) )
            	    	    // InternalScadeEquations.g:2519:7: (lv_variables_11_0= ruleVariableDeclarationInit )
            	    	    {
            	    	    // InternalScadeEquations.g:2519:7: (lv_variables_11_0= ruleVariableDeclarationInit )
            	    	    // InternalScadeEquations.g:2520:8: lv_variables_11_0= ruleVariableDeclarationInit
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      								newCompositeNode(grammarAccess.getAStateAccess().getVariablesVariableDeclarationInitParserRuleCall_3_1_2_1_0());
            	    	      							
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_10);
            	    	    lv_variables_11_0=ruleVariableDeclarationInit();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      								if (current==null) {
            	    	      									current = createModelElementForParent(grammarAccess.getAStateRule());
            	    	      								}
            	    	      								add(
            	    	      									current,
            	    	      									"variables",
            	    	      									lv_variables_11_0,
            	    	      									"de.cau.cs.kieler.lustre.Lustre.VariableDeclarationInit");
            	    	      								afterParserOrEnumRuleCall();
            	    	      							
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop50;
            	        }
            	    } while (true);

            	    otherlv_12=(Token)match(input,20,FollowSets000.FOLLOW_40); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_12, grammarAccess.getAStateAccess().getSemicolonKeyword_3_1_3());
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop51;
                }
            } while (true);

            // InternalScadeEquations.g:2544:3: (otherlv_13= 'let' ( ( (lv_equations_14_0= ruleEquation ) ) | ( (lv_emissions_15_0= ruleEmission ) ) | ( (lv_assertions_16_0= ruleAssertion ) ) | ( (lv_automatons_17_0= ruleAutomaton ) ) )* otherlv_18= 'tel' )?
            int alt53=2;
            int LA53_0 = input.LA(1);

            if ( (LA53_0==35) ) {
                alt53=1;
            }
            switch (alt53) {
                case 1 :
                    // InternalScadeEquations.g:2545:4: otherlv_13= 'let' ( ( (lv_equations_14_0= ruleEquation ) ) | ( (lv_emissions_15_0= ruleEmission ) ) | ( (lv_assertions_16_0= ruleAssertion ) ) | ( (lv_automatons_17_0= ruleAutomaton ) ) )* otherlv_18= 'tel'
                    {
                    otherlv_13=(Token)match(input,35,FollowSets000.FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getAStateAccess().getLetKeyword_4_0());
                      			
                    }
                    // InternalScadeEquations.g:2549:4: ( ( (lv_equations_14_0= ruleEquation ) ) | ( (lv_emissions_15_0= ruleEmission ) ) | ( (lv_assertions_16_0= ruleAssertion ) ) | ( (lv_automatons_17_0= ruleAutomaton ) ) )*
                    loop52:
                    do {
                        int alt52=5;
                        switch ( input.LA(1) ) {
                        case RULE_ID:
                        case 17:
                            {
                            alt52=1;
                            }
                            break;
                        case 38:
                            {
                            alt52=2;
                            }
                            break;
                        case 39:
                            {
                            alt52=3;
                            }
                            break;
                        case 40:
                            {
                            alt52=4;
                            }
                            break;

                        }

                        switch (alt52) {
                    	case 1 :
                    	    // InternalScadeEquations.g:2550:5: ( (lv_equations_14_0= ruleEquation ) )
                    	    {
                    	    // InternalScadeEquations.g:2550:5: ( (lv_equations_14_0= ruleEquation ) )
                    	    // InternalScadeEquations.g:2551:6: (lv_equations_14_0= ruleEquation )
                    	    {
                    	    // InternalScadeEquations.g:2551:6: (lv_equations_14_0= ruleEquation )
                    	    // InternalScadeEquations.g:2552:7: lv_equations_14_0= ruleEquation
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAStateAccess().getEquationsEquationParserRuleCall_4_1_0_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_33);
                    	    lv_equations_14_0=ruleEquation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAStateRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"equations",
                    	      								lv_equations_14_0,
                    	      								"de.cau.cs.kieler.lustre.Lustre.Equation");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalScadeEquations.g:2570:5: ( (lv_emissions_15_0= ruleEmission ) )
                    	    {
                    	    // InternalScadeEquations.g:2570:5: ( (lv_emissions_15_0= ruleEmission ) )
                    	    // InternalScadeEquations.g:2571:6: (lv_emissions_15_0= ruleEmission )
                    	    {
                    	    // InternalScadeEquations.g:2571:6: (lv_emissions_15_0= ruleEmission )
                    	    // InternalScadeEquations.g:2572:7: lv_emissions_15_0= ruleEmission
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAStateAccess().getEmissionsEmissionParserRuleCall_4_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_33);
                    	    lv_emissions_15_0=ruleEmission();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAStateRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"emissions",
                    	      								lv_emissions_15_0,
                    	      								"de.cau.cs.kieler.lustre.Lustre.Emission");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalScadeEquations.g:2590:5: ( (lv_assertions_16_0= ruleAssertion ) )
                    	    {
                    	    // InternalScadeEquations.g:2590:5: ( (lv_assertions_16_0= ruleAssertion ) )
                    	    // InternalScadeEquations.g:2591:6: (lv_assertions_16_0= ruleAssertion )
                    	    {
                    	    // InternalScadeEquations.g:2591:6: (lv_assertions_16_0= ruleAssertion )
                    	    // InternalScadeEquations.g:2592:7: lv_assertions_16_0= ruleAssertion
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAStateAccess().getAssertionsAssertionParserRuleCall_4_1_2_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_33);
                    	    lv_assertions_16_0=ruleAssertion();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAStateRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"assertions",
                    	      								lv_assertions_16_0,
                    	      								"de.cau.cs.kieler.lustre.Lustre.Assertion");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalScadeEquations.g:2610:5: ( (lv_automatons_17_0= ruleAutomaton ) )
                    	    {
                    	    // InternalScadeEquations.g:2610:5: ( (lv_automatons_17_0= ruleAutomaton ) )
                    	    // InternalScadeEquations.g:2611:6: (lv_automatons_17_0= ruleAutomaton )
                    	    {
                    	    // InternalScadeEquations.g:2611:6: (lv_automatons_17_0= ruleAutomaton )
                    	    // InternalScadeEquations.g:2612:7: lv_automatons_17_0= ruleAutomaton
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAStateAccess().getAutomatonsAutomatonParserRuleCall_4_1_3_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_33);
                    	    lv_automatons_17_0=ruleAutomaton();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAStateRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"automatons",
                    	      								lv_automatons_17_0,
                    	      								"de.cau.cs.kieler.lustre.Lustre.Automaton");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop52;
                        }
                    } while (true);

                    otherlv_18=(Token)match(input,36,FollowSets000.FOLLOW_42); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getAStateAccess().getTelKeyword_4_2());
                      			
                    }

                    }
                    break;

            }

            // InternalScadeEquations.g:2635:3: (otherlv_19= '.' | (otherlv_20= ';' )? )
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==37) ) {
                alt55=1;
            }
            else if ( (LA55_0==EOF||LA55_0==20||LA55_0==29||(LA55_0>=42 && LA55_0<=45)) ) {
                alt55=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 55, 0, input);

                throw nvae;
            }
            switch (alt55) {
                case 1 :
                    // InternalScadeEquations.g:2636:4: otherlv_19= '.'
                    {
                    otherlv_19=(Token)match(input,37,FollowSets000.FOLLOW_43); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_19, grammarAccess.getAStateAccess().getFullStopKeyword_5_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:2641:4: (otherlv_20= ';' )?
                    {
                    // InternalScadeEquations.g:2641:4: (otherlv_20= ';' )?
                    int alt54=2;
                    int LA54_0 = input.LA(1);

                    if ( (LA54_0==20) ) {
                        alt54=1;
                    }
                    switch (alt54) {
                        case 1 :
                            // InternalScadeEquations.g:2642:5: otherlv_20= ';'
                            {
                            otherlv_20=(Token)match(input,20,FollowSets000.FOLLOW_43); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_20, grammarAccess.getAStateAccess().getSemicolonKeyword_5_1());
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:2648:3: ( (lv_transitions_21_0= ruleATransition ) )*
            loop56:
            do {
                int alt56=2;
                int LA56_0 = input.LA(1);

                if ( ((LA56_0>=44 && LA56_0<=45)) ) {
                    alt56=1;
                }


                switch (alt56) {
            	case 1 :
            	    // InternalScadeEquations.g:2649:4: (lv_transitions_21_0= ruleATransition )
            	    {
            	    // InternalScadeEquations.g:2649:4: (lv_transitions_21_0= ruleATransition )
            	    // InternalScadeEquations.g:2650:5: lv_transitions_21_0= ruleATransition
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAStateAccess().getTransitionsATransitionParserRuleCall_6_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_43);
            	    lv_transitions_21_0=ruleATransition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAStateRule());
            	      					}
            	      					add(
            	      						current,
            	      						"transitions",
            	      						lv_transitions_21_0,
            	      						"de.cau.cs.kieler.lustre.Lustre.ATransition");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop56;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAState"


    // $ANTLR start "entryRuleStateValuedObject"
    // InternalScadeEquations.g:2671:1: entryRuleStateValuedObject returns [EObject current=null] : iv_ruleStateValuedObject= ruleStateValuedObject EOF ;
    public final EObject entryRuleStateValuedObject() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStateValuedObject = null;


        try {
            // InternalScadeEquations.g:2671:58: (iv_ruleStateValuedObject= ruleStateValuedObject EOF )
            // InternalScadeEquations.g:2672:2: iv_ruleStateValuedObject= ruleStateValuedObject EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStateValuedObjectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStateValuedObject=ruleStateValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStateValuedObject; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStateValuedObject"


    // $ANTLR start "ruleStateValuedObject"
    // InternalScadeEquations.g:2678:1: ruleStateValuedObject returns [EObject current=null] : ( () ( (lv_name_1_0= RULE_ID ) ) ) ;
    public final EObject ruleStateValuedObject() throws RecognitionException {
        EObject current = null;

        Token lv_name_1_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:2684:2: ( ( () ( (lv_name_1_0= RULE_ID ) ) ) )
            // InternalScadeEquations.g:2685:2: ( () ( (lv_name_1_0= RULE_ID ) ) )
            {
            // InternalScadeEquations.g:2685:2: ( () ( (lv_name_1_0= RULE_ID ) ) )
            // InternalScadeEquations.g:2686:3: () ( (lv_name_1_0= RULE_ID ) )
            {
            // InternalScadeEquations.g:2686:3: ()
            // InternalScadeEquations.g:2687:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getStateValuedObjectAccess().getStateValuedObjectAction_0(),
              					current);
              			
            }

            }

            // InternalScadeEquations.g:2696:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalScadeEquations.g:2697:4: (lv_name_1_0= RULE_ID )
            {
            // InternalScadeEquations.g:2697:4: (lv_name_1_0= RULE_ID )
            // InternalScadeEquations.g:2698:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getStateValuedObjectAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getStateValuedObjectRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ID");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStateValuedObject"


    // $ANTLR start "entryRuleATransition"
    // InternalScadeEquations.g:2718:1: entryRuleATransition returns [EObject current=null] : iv_ruleATransition= ruleATransition EOF ;
    public final EObject entryRuleATransition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleATransition = null;


        try {
            // InternalScadeEquations.g:2718:52: (iv_ruleATransition= ruleATransition EOF )
            // InternalScadeEquations.g:2719:2: iv_ruleATransition= ruleATransition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getATransitionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleATransition=ruleATransition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleATransition; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleATransition"


    // $ANTLR start "ruleATransition"
    // InternalScadeEquations.g:2725:1: ruleATransition returns [EObject current=null] : ( () (otherlv_1= 'until' | ( (lv_strong_2_0= 'unless' ) ) ) ( (lv_actions_3_0= ruleAnAction ) )* ) ;
    public final EObject ruleATransition() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_strong_2_0=null;
        EObject lv_actions_3_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:2731:2: ( ( () (otherlv_1= 'until' | ( (lv_strong_2_0= 'unless' ) ) ) ( (lv_actions_3_0= ruleAnAction ) )* ) )
            // InternalScadeEquations.g:2732:2: ( () (otherlv_1= 'until' | ( (lv_strong_2_0= 'unless' ) ) ) ( (lv_actions_3_0= ruleAnAction ) )* )
            {
            // InternalScadeEquations.g:2732:2: ( () (otherlv_1= 'until' | ( (lv_strong_2_0= 'unless' ) ) ) ( (lv_actions_3_0= ruleAnAction ) )* )
            // InternalScadeEquations.g:2733:3: () (otherlv_1= 'until' | ( (lv_strong_2_0= 'unless' ) ) ) ( (lv_actions_3_0= ruleAnAction ) )*
            {
            // InternalScadeEquations.g:2733:3: ()
            // InternalScadeEquations.g:2734:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getATransitionAccess().getATransitionAction_0(),
              					current);
              			
            }

            }

            // InternalScadeEquations.g:2743:3: (otherlv_1= 'until' | ( (lv_strong_2_0= 'unless' ) ) )
            int alt57=2;
            int LA57_0 = input.LA(1);

            if ( (LA57_0==44) ) {
                alt57=1;
            }
            else if ( (LA57_0==45) ) {
                alt57=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 57, 0, input);

                throw nvae;
            }
            switch (alt57) {
                case 1 :
                    // InternalScadeEquations.g:2744:4: otherlv_1= 'until'
                    {
                    otherlv_1=(Token)match(input,44,FollowSets000.FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getATransitionAccess().getUntilKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:2749:4: ( (lv_strong_2_0= 'unless' ) )
                    {
                    // InternalScadeEquations.g:2749:4: ( (lv_strong_2_0= 'unless' ) )
                    // InternalScadeEquations.g:2750:5: (lv_strong_2_0= 'unless' )
                    {
                    // InternalScadeEquations.g:2750:5: (lv_strong_2_0= 'unless' )
                    // InternalScadeEquations.g:2751:6: lv_strong_2_0= 'unless'
                    {
                    lv_strong_2_0=(Token)match(input,45,FollowSets000.FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_strong_2_0, grammarAccess.getATransitionAccess().getStrongUnlessKeyword_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getATransitionRule());
                      						}
                      						setWithLastConsumed(current, "strong", true, "unless");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:2764:3: ( (lv_actions_3_0= ruleAnAction ) )*
            loop58:
            do {
                int alt58=2;
                int LA58_0 = input.LA(1);

                if ( ((LA58_0>=46 && LA58_0<=49)) ) {
                    alt58=1;
                }


                switch (alt58) {
            	case 1 :
            	    // InternalScadeEquations.g:2765:4: (lv_actions_3_0= ruleAnAction )
            	    {
            	    // InternalScadeEquations.g:2765:4: (lv_actions_3_0= ruleAnAction )
            	    // InternalScadeEquations.g:2766:5: lv_actions_3_0= ruleAnAction
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getATransitionAccess().getActionsAnActionParserRuleCall_2_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_44);
            	    lv_actions_3_0=ruleAnAction();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getATransitionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"actions",
            	      						lv_actions_3_0,
            	      						"de.cau.cs.kieler.lustre.Lustre.AnAction");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop58;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleATransition"


    // $ANTLR start "entryRuleAnAction"
    // InternalScadeEquations.g:2787:1: entryRuleAnAction returns [EObject current=null] : iv_ruleAnAction= ruleAnAction EOF ;
    public final EObject entryRuleAnAction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnAction = null;


        try {
            // InternalScadeEquations.g:2787:49: (iv_ruleAnAction= ruleAnAction EOF )
            // InternalScadeEquations.g:2788:2: iv_ruleAnAction= ruleAnAction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnActionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAnAction=ruleAnAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnAction; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnAction"


    // $ANTLR start "ruleAnAction"
    // InternalScadeEquations.g:2794:1: ruleAnAction returns [EObject current=null] : ( (otherlv_0= 'if' ( (lv_condition_1_0= ruleBoolExpression ) ) )? (otherlv_2= 'do' ( ( (lv_effects_3_0= ruleEquation ) ) | ( (lv_effects_4_0= ruleEmission ) ) )* )? (otherlv_5= 'restart' | ( (lv_history_6_0= 'resume' ) ) ) ( (otherlv_7= RULE_ID ) ) otherlv_8= ';' ) ;
    public final EObject ruleAnAction() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        Token lv_history_6_0=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        EObject lv_condition_1_0 = null;

        EObject lv_effects_3_0 = null;

        EObject lv_effects_4_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:2800:2: ( ( (otherlv_0= 'if' ( (lv_condition_1_0= ruleBoolExpression ) ) )? (otherlv_2= 'do' ( ( (lv_effects_3_0= ruleEquation ) ) | ( (lv_effects_4_0= ruleEmission ) ) )* )? (otherlv_5= 'restart' | ( (lv_history_6_0= 'resume' ) ) ) ( (otherlv_7= RULE_ID ) ) otherlv_8= ';' ) )
            // InternalScadeEquations.g:2801:2: ( (otherlv_0= 'if' ( (lv_condition_1_0= ruleBoolExpression ) ) )? (otherlv_2= 'do' ( ( (lv_effects_3_0= ruleEquation ) ) | ( (lv_effects_4_0= ruleEmission ) ) )* )? (otherlv_5= 'restart' | ( (lv_history_6_0= 'resume' ) ) ) ( (otherlv_7= RULE_ID ) ) otherlv_8= ';' )
            {
            // InternalScadeEquations.g:2801:2: ( (otherlv_0= 'if' ( (lv_condition_1_0= ruleBoolExpression ) ) )? (otherlv_2= 'do' ( ( (lv_effects_3_0= ruleEquation ) ) | ( (lv_effects_4_0= ruleEmission ) ) )* )? (otherlv_5= 'restart' | ( (lv_history_6_0= 'resume' ) ) ) ( (otherlv_7= RULE_ID ) ) otherlv_8= ';' )
            // InternalScadeEquations.g:2802:3: (otherlv_0= 'if' ( (lv_condition_1_0= ruleBoolExpression ) ) )? (otherlv_2= 'do' ( ( (lv_effects_3_0= ruleEquation ) ) | ( (lv_effects_4_0= ruleEmission ) ) )* )? (otherlv_5= 'restart' | ( (lv_history_6_0= 'resume' ) ) ) ( (otherlv_7= RULE_ID ) ) otherlv_8= ';'
            {
            // InternalScadeEquations.g:2802:3: (otherlv_0= 'if' ( (lv_condition_1_0= ruleBoolExpression ) ) )?
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( (LA59_0==46) ) {
                alt59=1;
            }
            switch (alt59) {
                case 1 :
                    // InternalScadeEquations.g:2803:4: otherlv_0= 'if' ( (lv_condition_1_0= ruleBoolExpression ) )
                    {
                    otherlv_0=(Token)match(input,46,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getAnActionAccess().getIfKeyword_0_0());
                      			
                    }
                    // InternalScadeEquations.g:2807:4: ( (lv_condition_1_0= ruleBoolExpression ) )
                    // InternalScadeEquations.g:2808:5: (lv_condition_1_0= ruleBoolExpression )
                    {
                    // InternalScadeEquations.g:2808:5: (lv_condition_1_0= ruleBoolExpression )
                    // InternalScadeEquations.g:2809:6: lv_condition_1_0= ruleBoolExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAnActionAccess().getConditionBoolExpressionParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_45);
                    lv_condition_1_0=ruleBoolExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAnActionRule());
                      						}
                      						set(
                      							current,
                      							"condition",
                      							lv_condition_1_0,
                      							"de.cau.cs.kieler.lustre.Lustre.BoolExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:2827:3: (otherlv_2= 'do' ( ( (lv_effects_3_0= ruleEquation ) ) | ( (lv_effects_4_0= ruleEmission ) ) )* )?
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( (LA61_0==47) ) {
                alt61=1;
            }
            switch (alt61) {
                case 1 :
                    // InternalScadeEquations.g:2828:4: otherlv_2= 'do' ( ( (lv_effects_3_0= ruleEquation ) ) | ( (lv_effects_4_0= ruleEmission ) ) )*
                    {
                    otherlv_2=(Token)match(input,47,FollowSets000.FOLLOW_46); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getAnActionAccess().getDoKeyword_1_0());
                      			
                    }
                    // InternalScadeEquations.g:2832:4: ( ( (lv_effects_3_0= ruleEquation ) ) | ( (lv_effects_4_0= ruleEmission ) ) )*
                    loop60:
                    do {
                        int alt60=3;
                        int LA60_0 = input.LA(1);

                        if ( (LA60_0==RULE_ID||LA60_0==17) ) {
                            alt60=1;
                        }
                        else if ( (LA60_0==38) ) {
                            alt60=2;
                        }


                        switch (alt60) {
                    	case 1 :
                    	    // InternalScadeEquations.g:2833:5: ( (lv_effects_3_0= ruleEquation ) )
                    	    {
                    	    // InternalScadeEquations.g:2833:5: ( (lv_effects_3_0= ruleEquation ) )
                    	    // InternalScadeEquations.g:2834:6: (lv_effects_3_0= ruleEquation )
                    	    {
                    	    // InternalScadeEquations.g:2834:6: (lv_effects_3_0= ruleEquation )
                    	    // InternalScadeEquations.g:2835:7: lv_effects_3_0= ruleEquation
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAnActionAccess().getEffectsEquationParserRuleCall_1_1_0_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_46);
                    	    lv_effects_3_0=ruleEquation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAnActionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"effects",
                    	      								lv_effects_3_0,
                    	      								"de.cau.cs.kieler.lustre.Lustre.Equation");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalScadeEquations.g:2853:5: ( (lv_effects_4_0= ruleEmission ) )
                    	    {
                    	    // InternalScadeEquations.g:2853:5: ( (lv_effects_4_0= ruleEmission ) )
                    	    // InternalScadeEquations.g:2854:6: (lv_effects_4_0= ruleEmission )
                    	    {
                    	    // InternalScadeEquations.g:2854:6: (lv_effects_4_0= ruleEmission )
                    	    // InternalScadeEquations.g:2855:7: lv_effects_4_0= ruleEmission
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAnActionAccess().getEffectsEmissionParserRuleCall_1_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_46);
                    	    lv_effects_4_0=ruleEmission();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAnActionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"effects",
                    	      								lv_effects_4_0,
                    	      								"de.cau.cs.kieler.lustre.Lustre.Emission");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop60;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalScadeEquations.g:2874:3: (otherlv_5= 'restart' | ( (lv_history_6_0= 'resume' ) ) )
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==48) ) {
                alt62=1;
            }
            else if ( (LA62_0==49) ) {
                alt62=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 62, 0, input);

                throw nvae;
            }
            switch (alt62) {
                case 1 :
                    // InternalScadeEquations.g:2875:4: otherlv_5= 'restart'
                    {
                    otherlv_5=(Token)match(input,48,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getAnActionAccess().getRestartKeyword_2_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:2880:4: ( (lv_history_6_0= 'resume' ) )
                    {
                    // InternalScadeEquations.g:2880:4: ( (lv_history_6_0= 'resume' ) )
                    // InternalScadeEquations.g:2881:5: (lv_history_6_0= 'resume' )
                    {
                    // InternalScadeEquations.g:2881:5: (lv_history_6_0= 'resume' )
                    // InternalScadeEquations.g:2882:6: lv_history_6_0= 'resume'
                    {
                    lv_history_6_0=(Token)match(input,49,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_history_6_0, grammarAccess.getAnActionAccess().getHistoryResumeKeyword_2_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getAnActionRule());
                      						}
                      						setWithLastConsumed(current, "history", true, "resume");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:2895:3: ( (otherlv_7= RULE_ID ) )
            // InternalScadeEquations.g:2896:4: (otherlv_7= RULE_ID )
            {
            // InternalScadeEquations.g:2896:4: (otherlv_7= RULE_ID )
            // InternalScadeEquations.g:2897:5: otherlv_7= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAnActionRule());
              					}
              				
            }
            otherlv_7=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_7, grammarAccess.getAnActionAccess().getNextStateStateValuedObjectCrossReference_3_0());
              				
            }

            }


            }

            otherlv_8=(Token)match(input,20,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getAnActionAccess().getSemicolonKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnAction"


    // $ANTLR start "entryRuleProductExpression"
    // InternalScadeEquations.g:2919:1: entryRuleProductExpression returns [EObject current=null] : iv_ruleProductExpression= ruleProductExpression EOF ;
    public final EObject entryRuleProductExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleProductExpression = null;


        try {
            // InternalScadeEquations.g:2919:58: (iv_ruleProductExpression= ruleProductExpression EOF )
            // InternalScadeEquations.g:2920:2: iv_ruleProductExpression= ruleProductExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getProductExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleProductExpression=ruleProductExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleProductExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleProductExpression"


    // $ANTLR start "ruleProductExpression"
    // InternalScadeEquations.g:2926:1: ruleProductExpression returns [EObject current=null] : (this_IntDivExpression_0= ruleIntDivExpression ( ( () ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleIntDivExpression ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleIntDivExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleIntDivExpression ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleIntDivExpression ) ) )* ) | ( () ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleIntDivExpression ) ) (otherlv_14= 'mod' ( (lv_subExpressions_15_0= ruleIntDivExpression ) ) )* ) )* ) ;
    public final EObject ruleProductExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        Token otherlv_9=null;
        Token otherlv_14=null;
        EObject this_IntDivExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;

        Enumerator lv_operator_7_0 = null;

        EObject lv_subExpressions_8_0 = null;

        EObject lv_subExpressions_10_0 = null;

        Enumerator lv_operator_12_0 = null;

        EObject lv_subExpressions_13_0 = null;

        EObject lv_subExpressions_15_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:2932:2: ( (this_IntDivExpression_0= ruleIntDivExpression ( ( () ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleIntDivExpression ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleIntDivExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleIntDivExpression ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleIntDivExpression ) ) )* ) | ( () ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleIntDivExpression ) ) (otherlv_14= 'mod' ( (lv_subExpressions_15_0= ruleIntDivExpression ) ) )* ) )* ) )
            // InternalScadeEquations.g:2933:2: (this_IntDivExpression_0= ruleIntDivExpression ( ( () ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleIntDivExpression ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleIntDivExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleIntDivExpression ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleIntDivExpression ) ) )* ) | ( () ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleIntDivExpression ) ) (otherlv_14= 'mod' ( (lv_subExpressions_15_0= ruleIntDivExpression ) ) )* ) )* )
            {
            // InternalScadeEquations.g:2933:2: (this_IntDivExpression_0= ruleIntDivExpression ( ( () ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleIntDivExpression ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleIntDivExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleIntDivExpression ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleIntDivExpression ) ) )* ) | ( () ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleIntDivExpression ) ) (otherlv_14= 'mod' ( (lv_subExpressions_15_0= ruleIntDivExpression ) ) )* ) )* )
            // InternalScadeEquations.g:2934:3: this_IntDivExpression_0= ruleIntDivExpression ( ( () ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleIntDivExpression ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleIntDivExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleIntDivExpression ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleIntDivExpression ) ) )* ) | ( () ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleIntDivExpression ) ) (otherlv_14= 'mod' ( (lv_subExpressions_15_0= ruleIntDivExpression ) ) )* ) )*
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getProductExpressionAccess().getIntDivExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_47);
            this_IntDivExpression_0=ruleIntDivExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_IntDivExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalScadeEquations.g:2945:3: ( ( () ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleIntDivExpression ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleIntDivExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleIntDivExpression ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleIntDivExpression ) ) )* ) | ( () ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleIntDivExpression ) ) (otherlv_14= 'mod' ( (lv_subExpressions_15_0= ruleIntDivExpression ) ) )* ) )*
            loop66:
            do {
                int alt66=4;
                switch ( input.LA(1) ) {
                case 50:
                    {
                    alt66=1;
                    }
                    break;
                case 51:
                    {
                    alt66=2;
                    }
                    break;
                case 52:
                    {
                    alt66=3;
                    }
                    break;

                }

                switch (alt66) {
            	case 1 :
            	    // InternalScadeEquations.g:2946:4: ( () ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleIntDivExpression ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleIntDivExpression ) ) )* )
            	    {
            	    // InternalScadeEquations.g:2946:4: ( () ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleIntDivExpression ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleIntDivExpression ) ) )* )
            	    // InternalScadeEquations.g:2947:5: () ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleIntDivExpression ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleIntDivExpression ) ) )*
            	    {
            	    // InternalScadeEquations.g:2947:5: ()
            	    // InternalScadeEquations.g:2948:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						/* */
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndAdd(
            	      							grammarAccess.getProductExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalScadeEquations.g:2957:5: ( (lv_operator_2_0= ruleMultOperator ) )
            	    // InternalScadeEquations.g:2958:6: (lv_operator_2_0= ruleMultOperator )
            	    {
            	    // InternalScadeEquations.g:2958:6: (lv_operator_2_0= ruleMultOperator )
            	    // InternalScadeEquations.g:2959:7: lv_operator_2_0= ruleMultOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getProductExpressionAccess().getOperatorMultOperatorEnumRuleCall_1_0_1_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_48);
            	    lv_operator_2_0=ruleMultOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getProductExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"operator",
            	      								lv_operator_2_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.MultOperator");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalScadeEquations.g:2976:5: ( (lv_subExpressions_3_0= ruleIntDivExpression ) )
            	    // InternalScadeEquations.g:2977:6: (lv_subExpressions_3_0= ruleIntDivExpression )
            	    {
            	    // InternalScadeEquations.g:2977:6: (lv_subExpressions_3_0= ruleIntDivExpression )
            	    // InternalScadeEquations.g:2978:7: lv_subExpressions_3_0= ruleIntDivExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getProductExpressionAccess().getSubExpressionsIntDivExpressionParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_47);
            	    lv_subExpressions_3_0=ruleIntDivExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getProductExpressionRule());
            	      							}
            	      							add(
            	      								current,
            	      								"subExpressions",
            	      								lv_subExpressions_3_0,
            	      								"de.cau.cs.kieler.lustre.Lustre.IntDivExpression");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalScadeEquations.g:2995:5: (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleIntDivExpression ) ) )*
            	    loop63:
            	    do {
            	        int alt63=2;
            	        alt63 = dfa63.predict(input);
            	        switch (alt63) {
            	    	case 1 :
            	    	    // InternalScadeEquations.g:2996:6: otherlv_4= '*' ( (lv_subExpressions_5_0= ruleIntDivExpression ) )
            	    	    {
            	    	    otherlv_4=(Token)match(input,50,FollowSets000.FOLLOW_48); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      						newLeafNode(otherlv_4, grammarAccess.getProductExpressionAccess().getAsteriskKeyword_1_0_3_0());
            	    	      					
            	    	    }
            	    	    // InternalScadeEquations.g:3000:6: ( (lv_subExpressions_5_0= ruleIntDivExpression ) )
            	    	    // InternalScadeEquations.g:3001:7: (lv_subExpressions_5_0= ruleIntDivExpression )
            	    	    {
            	    	    // InternalScadeEquations.g:3001:7: (lv_subExpressions_5_0= ruleIntDivExpression )
            	    	    // InternalScadeEquations.g:3002:8: lv_subExpressions_5_0= ruleIntDivExpression
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      								newCompositeNode(grammarAccess.getProductExpressionAccess().getSubExpressionsIntDivExpressionParserRuleCall_1_0_3_1_0());
            	    	      							
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_47);
            	    	    lv_subExpressions_5_0=ruleIntDivExpression();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      								if (current==null) {
            	    	      									current = createModelElementForParent(grammarAccess.getProductExpressionRule());
            	    	      								}
            	    	      								add(
            	    	      									current,
            	    	      									"subExpressions",
            	    	      									lv_subExpressions_5_0,
            	    	      									"de.cau.cs.kieler.lustre.Lustre.IntDivExpression");
            	    	      								afterParserOrEnumRuleCall();
            	    	      							
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop63;
            	        }
            	    } while (true);


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalScadeEquations.g:3022:4: ( () ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleIntDivExpression ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleIntDivExpression ) ) )* )
            	    {
            	    // InternalScadeEquations.g:3022:4: ( () ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleIntDivExpression ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleIntDivExpression ) ) )* )
            	    // InternalScadeEquations.g:3023:5: () ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleIntDivExpression ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleIntDivExpression ) ) )*
            	    {
            	    // InternalScadeEquations.g:3023:5: ()
            	    // InternalScadeEquations.g:3024:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						/* */
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndAdd(
            	      							grammarAccess.getProductExpressionAccess().getOperatorExpressionSubExpressionsAction_1_1_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalScadeEquations.g:3033:5: ( (lv_operator_7_0= ruleDivOperator ) )
            	    // InternalScadeEquations.g:3034:6: (lv_operator_7_0= ruleDivOperator )
            	    {
            	    // InternalScadeEquations.g:3034:6: (lv_operator_7_0= ruleDivOperator )
            	    // InternalScadeEquations.g:3035:7: lv_operator_7_0= ruleDivOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getProductExpressionAccess().getOperatorDivOperatorEnumRuleCall_1_1_1_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_48);
            	    lv_operator_7_0=ruleDivOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getProductExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"operator",
            	      								lv_operator_7_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.DivOperator");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalScadeEquations.g:3052:5: ( (lv_subExpressions_8_0= ruleIntDivExpression ) )
            	    // InternalScadeEquations.g:3053:6: (lv_subExpressions_8_0= ruleIntDivExpression )
            	    {
            	    // InternalScadeEquations.g:3053:6: (lv_subExpressions_8_0= ruleIntDivExpression )
            	    // InternalScadeEquations.g:3054:7: lv_subExpressions_8_0= ruleIntDivExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getProductExpressionAccess().getSubExpressionsIntDivExpressionParserRuleCall_1_1_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_47);
            	    lv_subExpressions_8_0=ruleIntDivExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getProductExpressionRule());
            	      							}
            	      							add(
            	      								current,
            	      								"subExpressions",
            	      								lv_subExpressions_8_0,
            	      								"de.cau.cs.kieler.lustre.Lustre.IntDivExpression");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalScadeEquations.g:3071:5: (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleIntDivExpression ) ) )*
            	    loop64:
            	    do {
            	        int alt64=2;
            	        alt64 = dfa64.predict(input);
            	        switch (alt64) {
            	    	case 1 :
            	    	    // InternalScadeEquations.g:3072:6: otherlv_9= '/' ( (lv_subExpressions_10_0= ruleIntDivExpression ) )
            	    	    {
            	    	    otherlv_9=(Token)match(input,51,FollowSets000.FOLLOW_48); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      						newLeafNode(otherlv_9, grammarAccess.getProductExpressionAccess().getSolidusKeyword_1_1_3_0());
            	    	      					
            	    	    }
            	    	    // InternalScadeEquations.g:3076:6: ( (lv_subExpressions_10_0= ruleIntDivExpression ) )
            	    	    // InternalScadeEquations.g:3077:7: (lv_subExpressions_10_0= ruleIntDivExpression )
            	    	    {
            	    	    // InternalScadeEquations.g:3077:7: (lv_subExpressions_10_0= ruleIntDivExpression )
            	    	    // InternalScadeEquations.g:3078:8: lv_subExpressions_10_0= ruleIntDivExpression
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      								newCompositeNode(grammarAccess.getProductExpressionAccess().getSubExpressionsIntDivExpressionParserRuleCall_1_1_3_1_0());
            	    	      							
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_47);
            	    	    lv_subExpressions_10_0=ruleIntDivExpression();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      								if (current==null) {
            	    	      									current = createModelElementForParent(grammarAccess.getProductExpressionRule());
            	    	      								}
            	    	      								add(
            	    	      									current,
            	    	      									"subExpressions",
            	    	      									lv_subExpressions_10_0,
            	    	      									"de.cau.cs.kieler.lustre.Lustre.IntDivExpression");
            	    	      								afterParserOrEnumRuleCall();
            	    	      							
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop64;
            	        }
            	    } while (true);


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalScadeEquations.g:3098:4: ( () ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleIntDivExpression ) ) (otherlv_14= 'mod' ( (lv_subExpressions_15_0= ruleIntDivExpression ) ) )* )
            	    {
            	    // InternalScadeEquations.g:3098:4: ( () ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleIntDivExpression ) ) (otherlv_14= 'mod' ( (lv_subExpressions_15_0= ruleIntDivExpression ) ) )* )
            	    // InternalScadeEquations.g:3099:5: () ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleIntDivExpression ) ) (otherlv_14= 'mod' ( (lv_subExpressions_15_0= ruleIntDivExpression ) ) )*
            	    {
            	    // InternalScadeEquations.g:3099:5: ()
            	    // InternalScadeEquations.g:3100:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						/* */
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndAdd(
            	      							grammarAccess.getProductExpressionAccess().getOperatorExpressionSubExpressionsAction_1_2_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalScadeEquations.g:3109:5: ( (lv_operator_12_0= ruleModOperator ) )
            	    // InternalScadeEquations.g:3110:6: (lv_operator_12_0= ruleModOperator )
            	    {
            	    // InternalScadeEquations.g:3110:6: (lv_operator_12_0= ruleModOperator )
            	    // InternalScadeEquations.g:3111:7: lv_operator_12_0= ruleModOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getProductExpressionAccess().getOperatorModOperatorEnumRuleCall_1_2_1_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_48);
            	    lv_operator_12_0=ruleModOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getProductExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"operator",
            	      								lv_operator_12_0,
            	      								"de.cau.cs.kieler.lustre.Lustre.ModOperator");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalScadeEquations.g:3128:5: ( (lv_subExpressions_13_0= ruleIntDivExpression ) )
            	    // InternalScadeEquations.g:3129:6: (lv_subExpressions_13_0= ruleIntDivExpression )
            	    {
            	    // InternalScadeEquations.g:3129:6: (lv_subExpressions_13_0= ruleIntDivExpression )
            	    // InternalScadeEquations.g:3130:7: lv_subExpressions_13_0= ruleIntDivExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getProductExpressionAccess().getSubExpressionsIntDivExpressionParserRuleCall_1_2_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_47);
            	    lv_subExpressions_13_0=ruleIntDivExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getProductExpressionRule());
            	      							}
            	      							add(
            	      								current,
            	      								"subExpressions",
            	      								lv_subExpressions_13_0,
            	      								"de.cau.cs.kieler.lustre.Lustre.IntDivExpression");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalScadeEquations.g:3147:5: (otherlv_14= 'mod' ( (lv_subExpressions_15_0= ruleIntDivExpression ) ) )*
            	    loop65:
            	    do {
            	        int alt65=2;
            	        alt65 = dfa65.predict(input);
            	        switch (alt65) {
            	    	case 1 :
            	    	    // InternalScadeEquations.g:3148:6: otherlv_14= 'mod' ( (lv_subExpressions_15_0= ruleIntDivExpression ) )
            	    	    {
            	    	    otherlv_14=(Token)match(input,52,FollowSets000.FOLLOW_48); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      						newLeafNode(otherlv_14, grammarAccess.getProductExpressionAccess().getModKeyword_1_2_3_0());
            	    	      					
            	    	    }
            	    	    // InternalScadeEquations.g:3152:6: ( (lv_subExpressions_15_0= ruleIntDivExpression ) )
            	    	    // InternalScadeEquations.g:3153:7: (lv_subExpressions_15_0= ruleIntDivExpression )
            	    	    {
            	    	    // InternalScadeEquations.g:3153:7: (lv_subExpressions_15_0= ruleIntDivExpression )
            	    	    // InternalScadeEquations.g:3154:8: lv_subExpressions_15_0= ruleIntDivExpression
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      								newCompositeNode(grammarAccess.getProductExpressionAccess().getSubExpressionsIntDivExpressionParserRuleCall_1_2_3_1_0());
            	    	      							
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_47);
            	    	    lv_subExpressions_15_0=ruleIntDivExpression();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      								if (current==null) {
            	    	      									current = createModelElementForParent(grammarAccess.getProductExpressionRule());
            	    	      								}
            	    	      								add(
            	    	      									current,
            	    	      									"subExpressions",
            	    	      									lv_subExpressions_15_0,
            	    	      									"de.cau.cs.kieler.lustre.Lustre.IntDivExpression");
            	    	      								afterParserOrEnumRuleCall();
            	    	      							
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop65;
            	        }
            	    } while (true);


            	    }


            	    }
            	    break;

            	default :
            	    break loop66;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleProductExpression"


    // $ANTLR start "entryRuleIntDivExpression"
    // InternalScadeEquations.g:3178:1: entryRuleIntDivExpression returns [EObject current=null] : iv_ruleIntDivExpression= ruleIntDivExpression EOF ;
    public final EObject entryRuleIntDivExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIntDivExpression = null;


        try {
            // InternalScadeEquations.g:3178:57: (iv_ruleIntDivExpression= ruleIntDivExpression EOF )
            // InternalScadeEquations.g:3179:2: iv_ruleIntDivExpression= ruleIntDivExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIntDivExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleIntDivExpression=ruleIntDivExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIntDivExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIntDivExpression"


    // $ANTLR start "ruleIntDivExpression"
    // InternalScadeEquations.g:3185:1: ruleIntDivExpression returns [EObject current=null] : (this_NegExpression_0= ruleNegExpression ( () ( ( (lv_operator_2_0= ruleIntDivOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) ) (otherlv_4= 'div' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )* )? ) ;
    public final EObject ruleIntDivExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_NegExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:3191:2: ( (this_NegExpression_0= ruleNegExpression ( () ( ( (lv_operator_2_0= ruleIntDivOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) ) (otherlv_4= 'div' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )* )? ) )
            // InternalScadeEquations.g:3192:2: (this_NegExpression_0= ruleNegExpression ( () ( ( (lv_operator_2_0= ruleIntDivOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) ) (otherlv_4= 'div' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )* )? )
            {
            // InternalScadeEquations.g:3192:2: (this_NegExpression_0= ruleNegExpression ( () ( ( (lv_operator_2_0= ruleIntDivOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) ) (otherlv_4= 'div' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )* )? )
            // InternalScadeEquations.g:3193:3: this_NegExpression_0= ruleNegExpression ( () ( ( (lv_operator_2_0= ruleIntDivOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) ) (otherlv_4= 'div' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getIntDivExpressionAccess().getNegExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_49);
            this_NegExpression_0=ruleNegExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_NegExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalScadeEquations.g:3204:3: ( () ( ( (lv_operator_2_0= ruleIntDivOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) ) (otherlv_4= 'div' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )* )?
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==53) ) {
                alt68=1;
            }
            switch (alt68) {
                case 1 :
                    // InternalScadeEquations.g:3205:4: () ( ( (lv_operator_2_0= ruleIntDivOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) ) (otherlv_4= 'div' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )*
                    {
                    // InternalScadeEquations.g:3205:4: ()
                    // InternalScadeEquations.g:3206:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getIntDivExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalScadeEquations.g:3215:4: ( ( (lv_operator_2_0= ruleIntDivOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) )
                    // InternalScadeEquations.g:3216:5: ( (lv_operator_2_0= ruleIntDivOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) )
                    {
                    // InternalScadeEquations.g:3216:5: ( (lv_operator_2_0= ruleIntDivOperator ) )
                    // InternalScadeEquations.g:3217:6: (lv_operator_2_0= ruleIntDivOperator )
                    {
                    // InternalScadeEquations.g:3217:6: (lv_operator_2_0= ruleIntDivOperator )
                    // InternalScadeEquations.g:3218:7: lv_operator_2_0= ruleIntDivOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getIntDivExpressionAccess().getOperatorIntDivOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_48);
                    lv_operator_2_0=ruleIntDivOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getIntDivExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.lustre.Lustre.IntDivOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:3235:5: ( (lv_subExpressions_3_0= ruleNegExpression ) )
                    // InternalScadeEquations.g:3236:6: (lv_subExpressions_3_0= ruleNegExpression )
                    {
                    // InternalScadeEquations.g:3236:6: (lv_subExpressions_3_0= ruleNegExpression )
                    // InternalScadeEquations.g:3237:7: lv_subExpressions_3_0= ruleNegExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getIntDivExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_49);
                    lv_subExpressions_3_0=ruleNegExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getIntDivExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.lustre.Lustre.NegExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalScadeEquations.g:3255:4: (otherlv_4= 'div' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )*
                    loop67:
                    do {
                        int alt67=2;
                        int LA67_0 = input.LA(1);

                        if ( (LA67_0==53) ) {
                            alt67=1;
                        }


                        switch (alt67) {
                    	case 1 :
                    	    // InternalScadeEquations.g:3256:5: otherlv_4= 'div' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,53,FollowSets000.FOLLOW_50); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getIntDivExpressionAccess().getDivKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalScadeEquations.g:3260:5: ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) )
                    	    // InternalScadeEquations.g:3261:6: (lv_subExpressions_5_0= ruleAtomicValuedExpression )
                    	    {
                    	    // InternalScadeEquations.g:3261:6: (lv_subExpressions_5_0= ruleAtomicValuedExpression )
                    	    // InternalScadeEquations.g:3262:7: lv_subExpressions_5_0= ruleAtomicValuedExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getIntDivExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_49);
                    	    lv_subExpressions_5_0=ruleAtomicValuedExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getIntDivExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.AtomicValuedExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop67;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIntDivExpression"


    // $ANTLR start "entryRuleNegExpression"
    // InternalScadeEquations.g:3285:1: entryRuleNegExpression returns [EObject current=null] : iv_ruleNegExpression= ruleNegExpression EOF ;
    public final EObject entryRuleNegExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNegExpression = null;


        try {
            // InternalScadeEquations.g:3285:54: (iv_ruleNegExpression= ruleNegExpression EOF )
            // InternalScadeEquations.g:3286:2: iv_ruleNegExpression= ruleNegExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNegExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNegExpression=ruleNegExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNegExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNegExpression"


    // $ANTLR start "ruleNegExpression"
    // InternalScadeEquations.g:3292:1: ruleNegExpression returns [EObject current=null] : ( ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) ) | this_FbyExpression_3= ruleFbyExpression ) ;
    public final EObject ruleNegExpression() throws RecognitionException {
        EObject current = null;

        Enumerator lv_operator_1_0 = null;

        EObject lv_subExpressions_2_0 = null;

        EObject this_FbyExpression_3 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:3298:2: ( ( ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) ) | this_FbyExpression_3= ruleFbyExpression ) )
            // InternalScadeEquations.g:3299:2: ( ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) ) | this_FbyExpression_3= ruleFbyExpression )
            {
            // InternalScadeEquations.g:3299:2: ( ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) ) | this_FbyExpression_3= ruleFbyExpression )
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( (LA69_0==83) ) {
                alt69=1;
            }
            else if ( ((LA69_0>=RULE_ID && LA69_0<=RULE_STRING)||(LA69_0>=RULE_INT && LA69_0<=RULE_BOOLEAN)||LA69_0==17||LA69_0==22||LA69_0==88||(LA69_0>=100 && LA69_0<=101)||LA69_0==106||LA69_0==109) ) {
                alt69=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 69, 0, input);

                throw nvae;
            }
            switch (alt69) {
                case 1 :
                    // InternalScadeEquations.g:3300:3: ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) )
                    {
                    // InternalScadeEquations.g:3300:3: ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) )
                    // InternalScadeEquations.g:3301:4: () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) )
                    {
                    // InternalScadeEquations.g:3301:4: ()
                    // InternalScadeEquations.g:3302:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getNegExpressionAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalScadeEquations.g:3311:4: ( (lv_operator_1_0= ruleSubOperator ) )
                    // InternalScadeEquations.g:3312:5: (lv_operator_1_0= ruleSubOperator )
                    {
                    // InternalScadeEquations.g:3312:5: (lv_operator_1_0= ruleSubOperator )
                    // InternalScadeEquations.g:3313:6: lv_operator_1_0= ruleSubOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNegExpressionAccess().getOperatorSubOperatorEnumRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_48);
                    lv_operator_1_0=ruleSubOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNegExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_1_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.SubOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalScadeEquations.g:3330:4: ( (lv_subExpressions_2_0= ruleNegExpression ) )
                    // InternalScadeEquations.g:3331:5: (lv_subExpressions_2_0= ruleNegExpression )
                    {
                    // InternalScadeEquations.g:3331:5: (lv_subExpressions_2_0= ruleNegExpression )
                    // InternalScadeEquations.g:3332:6: lv_subExpressions_2_0= ruleNegExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNegExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_2_0=ruleNegExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNegExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_2_0,
                      							"de.cau.cs.kieler.lustre.Lustre.NegExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:3351:3: this_FbyExpression_3= ruleFbyExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNegExpressionAccess().getFbyExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_FbyExpression_3=ruleFbyExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FbyExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNegExpression"


    // $ANTLR start "entryRuleFbyExpression"
    // InternalScadeEquations.g:3366:1: entryRuleFbyExpression returns [EObject current=null] : iv_ruleFbyExpression= ruleFbyExpression EOF ;
    public final EObject entryRuleFbyExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFbyExpression = null;


        try {
            // InternalScadeEquations.g:3366:54: (iv_ruleFbyExpression= ruleFbyExpression EOF )
            // InternalScadeEquations.g:3367:2: iv_ruleFbyExpression= ruleFbyExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFbyExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFbyExpression=ruleFbyExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFbyExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFbyExpression"


    // $ANTLR start "ruleFbyExpression"
    // InternalScadeEquations.g:3373:1: ruleFbyExpression returns [EObject current=null] : (this_WhenExpression_0= ruleWhenExpression ( () ( ( (lv_operator_2_0= ruleFbyOperator ) ) ( (lv_subExpressions_3_0= ruleWhenExpression ) ) ) (otherlv_4= 'fby' ( (lv_subExpressions_5_0= ruleWhenExpression ) ) )* )? ) ;
    public final EObject ruleFbyExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_WhenExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:3379:2: ( (this_WhenExpression_0= ruleWhenExpression ( () ( ( (lv_operator_2_0= ruleFbyOperator ) ) ( (lv_subExpressions_3_0= ruleWhenExpression ) ) ) (otherlv_4= 'fby' ( (lv_subExpressions_5_0= ruleWhenExpression ) ) )* )? ) )
            // InternalScadeEquations.g:3380:2: (this_WhenExpression_0= ruleWhenExpression ( () ( ( (lv_operator_2_0= ruleFbyOperator ) ) ( (lv_subExpressions_3_0= ruleWhenExpression ) ) ) (otherlv_4= 'fby' ( (lv_subExpressions_5_0= ruleWhenExpression ) ) )* )? )
            {
            // InternalScadeEquations.g:3380:2: (this_WhenExpression_0= ruleWhenExpression ( () ( ( (lv_operator_2_0= ruleFbyOperator ) ) ( (lv_subExpressions_3_0= ruleWhenExpression ) ) ) (otherlv_4= 'fby' ( (lv_subExpressions_5_0= ruleWhenExpression ) ) )* )? )
            // InternalScadeEquations.g:3381:3: this_WhenExpression_0= ruleWhenExpression ( () ( ( (lv_operator_2_0= ruleFbyOperator ) ) ( (lv_subExpressions_3_0= ruleWhenExpression ) ) ) (otherlv_4= 'fby' ( (lv_subExpressions_5_0= ruleWhenExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getFbyExpressionAccess().getWhenExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_51);
            this_WhenExpression_0=ruleWhenExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_WhenExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalScadeEquations.g:3392:3: ( () ( ( (lv_operator_2_0= ruleFbyOperator ) ) ( (lv_subExpressions_3_0= ruleWhenExpression ) ) ) (otherlv_4= 'fby' ( (lv_subExpressions_5_0= ruleWhenExpression ) ) )* )?
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( (LA71_0==54) ) {
                alt71=1;
            }
            switch (alt71) {
                case 1 :
                    // InternalScadeEquations.g:3393:4: () ( ( (lv_operator_2_0= ruleFbyOperator ) ) ( (lv_subExpressions_3_0= ruleWhenExpression ) ) ) (otherlv_4= 'fby' ( (lv_subExpressions_5_0= ruleWhenExpression ) ) )*
                    {
                    // InternalScadeEquations.g:3393:4: ()
                    // InternalScadeEquations.g:3394:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getFbyExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalScadeEquations.g:3403:4: ( ( (lv_operator_2_0= ruleFbyOperator ) ) ( (lv_subExpressions_3_0= ruleWhenExpression ) ) )
                    // InternalScadeEquations.g:3404:5: ( (lv_operator_2_0= ruleFbyOperator ) ) ( (lv_subExpressions_3_0= ruleWhenExpression ) )
                    {
                    // InternalScadeEquations.g:3404:5: ( (lv_operator_2_0= ruleFbyOperator ) )
                    // InternalScadeEquations.g:3405:6: (lv_operator_2_0= ruleFbyOperator )
                    {
                    // InternalScadeEquations.g:3405:6: (lv_operator_2_0= ruleFbyOperator )
                    // InternalScadeEquations.g:3406:7: lv_operator_2_0= ruleFbyOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getFbyExpressionAccess().getOperatorFbyOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_48);
                    lv_operator_2_0=ruleFbyOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getFbyExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.lustre.Lustre.FbyOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:3423:5: ( (lv_subExpressions_3_0= ruleWhenExpression ) )
                    // InternalScadeEquations.g:3424:6: (lv_subExpressions_3_0= ruleWhenExpression )
                    {
                    // InternalScadeEquations.g:3424:6: (lv_subExpressions_3_0= ruleWhenExpression )
                    // InternalScadeEquations.g:3425:7: lv_subExpressions_3_0= ruleWhenExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getFbyExpressionAccess().getSubExpressionsWhenExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_51);
                    lv_subExpressions_3_0=ruleWhenExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getFbyExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.lustre.Lustre.WhenExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalScadeEquations.g:3443:4: (otherlv_4= 'fby' ( (lv_subExpressions_5_0= ruleWhenExpression ) ) )*
                    loop70:
                    do {
                        int alt70=2;
                        int LA70_0 = input.LA(1);

                        if ( (LA70_0==54) ) {
                            alt70=1;
                        }


                        switch (alt70) {
                    	case 1 :
                    	    // InternalScadeEquations.g:3444:5: otherlv_4= 'fby' ( (lv_subExpressions_5_0= ruleWhenExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,54,FollowSets000.FOLLOW_48); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getFbyExpressionAccess().getFbyKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalScadeEquations.g:3448:5: ( (lv_subExpressions_5_0= ruleWhenExpression ) )
                    	    // InternalScadeEquations.g:3449:6: (lv_subExpressions_5_0= ruleWhenExpression )
                    	    {
                    	    // InternalScadeEquations.g:3449:6: (lv_subExpressions_5_0= ruleWhenExpression )
                    	    // InternalScadeEquations.g:3450:7: lv_subExpressions_5_0= ruleWhenExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getFbyExpressionAccess().getSubExpressionsWhenExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_51);
                    	    lv_subExpressions_5_0=ruleWhenExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getFbyExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.lustre.Lustre.WhenExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop70;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFbyExpression"


    // $ANTLR start "entryRuleWhenExpression"
    // InternalScadeEquations.g:3473:1: entryRuleWhenExpression returns [EObject current=null] : iv_ruleWhenExpression= ruleWhenExpression EOF ;
    public final EObject entryRuleWhenExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWhenExpression = null;


        try {
            // InternalScadeEquations.g:3473:55: (iv_ruleWhenExpression= ruleWhenExpression EOF )
            // InternalScadeEquations.g:3474:2: iv_ruleWhenExpression= ruleWhenExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWhenExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleWhenExpression=ruleWhenExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWhenExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWhenExpression"


    // $ANTLR start "ruleWhenExpression"
    // InternalScadeEquations.g:3480:1: ruleWhenExpression returns [EObject current=null] : ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleWhenOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) | this_CurrentExpression_4= ruleCurrentExpression ) ;
    public final EObject ruleWhenExpression() throws RecognitionException {
        EObject current = null;

        EObject lv_subExpressions_1_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject this_CurrentExpression_4 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:3486:2: ( ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleWhenOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) | this_CurrentExpression_4= ruleCurrentExpression ) )
            // InternalScadeEquations.g:3487:2: ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleWhenOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) | this_CurrentExpression_4= ruleCurrentExpression )
            {
            // InternalScadeEquations.g:3487:2: ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleWhenOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) | this_CurrentExpression_4= ruleCurrentExpression )
            int alt72=2;
            alt72 = dfa72.predict(input);
            switch (alt72) {
                case 1 :
                    // InternalScadeEquations.g:3488:3: ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleWhenOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) )
                    {
                    // InternalScadeEquations.g:3488:3: ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleWhenOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) )
                    // InternalScadeEquations.g:3489:4: () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleWhenOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) )
                    {
                    // InternalScadeEquations.g:3489:4: ()
                    // InternalScadeEquations.g:3490:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getWhenExpressionAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalScadeEquations.g:3499:4: ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) )
                    // InternalScadeEquations.g:3500:5: (lv_subExpressions_1_0= ruleAtomicValuedExpression )
                    {
                    // InternalScadeEquations.g:3500:5: (lv_subExpressions_1_0= ruleAtomicValuedExpression )
                    // InternalScadeEquations.g:3501:6: lv_subExpressions_1_0= ruleAtomicValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getWhenExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_52);
                    lv_subExpressions_1_0=ruleAtomicValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getWhenExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_1_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.AtomicValuedExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalScadeEquations.g:3518:4: ( (lv_operator_2_0= ruleWhenOperator ) )
                    // InternalScadeEquations.g:3519:5: (lv_operator_2_0= ruleWhenOperator )
                    {
                    // InternalScadeEquations.g:3519:5: (lv_operator_2_0= ruleWhenOperator )
                    // InternalScadeEquations.g:3520:6: lv_operator_2_0= ruleWhenOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getWhenExpressionAccess().getOperatorWhenOperatorEnumRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_50);
                    lv_operator_2_0=ruleWhenOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getWhenExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_2_0,
                      							"de.cau.cs.kieler.lustre.Lustre.WhenOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalScadeEquations.g:3537:4: ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) )
                    // InternalScadeEquations.g:3538:5: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
                    {
                    // InternalScadeEquations.g:3538:5: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
                    // InternalScadeEquations.g:3539:6: lv_subExpressions_3_0= ruleAtomicValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getWhenExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_3_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_3_0=ruleAtomicValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getWhenExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_3_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.AtomicValuedExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:3558:3: this_CurrentExpression_4= ruleCurrentExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getWhenExpressionAccess().getCurrentExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CurrentExpression_4=ruleCurrentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_CurrentExpression_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWhenExpression"


    // $ANTLR start "entryRuleCurrentExpression"
    // InternalScadeEquations.g:3573:1: entryRuleCurrentExpression returns [EObject current=null] : iv_ruleCurrentExpression= ruleCurrentExpression EOF ;
    public final EObject entryRuleCurrentExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCurrentExpression = null;


        try {
            // InternalScadeEquations.g:3573:58: (iv_ruleCurrentExpression= ruleCurrentExpression EOF )
            // InternalScadeEquations.g:3574:2: iv_ruleCurrentExpression= ruleCurrentExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCurrentExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCurrentExpression=ruleCurrentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCurrentExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCurrentExpression"


    // $ANTLR start "ruleCurrentExpression"
    // InternalScadeEquations.g:3580:1: ruleCurrentExpression returns [EObject current=null] : ( ( () ( (lv_operator_1_0= ruleCurrentOperator ) ) ( (lv_subExpressions_2_0= ruleAtomicValuedExpression ) ) ) | this_PreExpression_3= rulePreExpression ) ;
    public final EObject ruleCurrentExpression() throws RecognitionException {
        EObject current = null;

        Enumerator lv_operator_1_0 = null;

        EObject lv_subExpressions_2_0 = null;

        EObject this_PreExpression_3 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:3586:2: ( ( ( () ( (lv_operator_1_0= ruleCurrentOperator ) ) ( (lv_subExpressions_2_0= ruleAtomicValuedExpression ) ) ) | this_PreExpression_3= rulePreExpression ) )
            // InternalScadeEquations.g:3587:2: ( ( () ( (lv_operator_1_0= ruleCurrentOperator ) ) ( (lv_subExpressions_2_0= ruleAtomicValuedExpression ) ) ) | this_PreExpression_3= rulePreExpression )
            {
            // InternalScadeEquations.g:3587:2: ( ( () ( (lv_operator_1_0= ruleCurrentOperator ) ) ( (lv_subExpressions_2_0= ruleAtomicValuedExpression ) ) ) | this_PreExpression_3= rulePreExpression )
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==100) ) {
                alt73=1;
            }
            else if ( ((LA73_0>=RULE_ID && LA73_0<=RULE_STRING)||(LA73_0>=RULE_INT && LA73_0<=RULE_BOOLEAN)||LA73_0==17||LA73_0==22||LA73_0==88||LA73_0==101||LA73_0==106||LA73_0==109) ) {
                alt73=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 73, 0, input);

                throw nvae;
            }
            switch (alt73) {
                case 1 :
                    // InternalScadeEquations.g:3588:3: ( () ( (lv_operator_1_0= ruleCurrentOperator ) ) ( (lv_subExpressions_2_0= ruleAtomicValuedExpression ) ) )
                    {
                    // InternalScadeEquations.g:3588:3: ( () ( (lv_operator_1_0= ruleCurrentOperator ) ) ( (lv_subExpressions_2_0= ruleAtomicValuedExpression ) ) )
                    // InternalScadeEquations.g:3589:4: () ( (lv_operator_1_0= ruleCurrentOperator ) ) ( (lv_subExpressions_2_0= ruleAtomicValuedExpression ) )
                    {
                    // InternalScadeEquations.g:3589:4: ()
                    // InternalScadeEquations.g:3590:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getCurrentExpressionAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalScadeEquations.g:3599:4: ( (lv_operator_1_0= ruleCurrentOperator ) )
                    // InternalScadeEquations.g:3600:5: (lv_operator_1_0= ruleCurrentOperator )
                    {
                    // InternalScadeEquations.g:3600:5: (lv_operator_1_0= ruleCurrentOperator )
                    // InternalScadeEquations.g:3601:6: lv_operator_1_0= ruleCurrentOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getCurrentExpressionAccess().getOperatorCurrentOperatorEnumRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_50);
                    lv_operator_1_0=ruleCurrentOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getCurrentExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_1_0,
                      							"de.cau.cs.kieler.lustre.Lustre.CurrentOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalScadeEquations.g:3618:4: ( (lv_subExpressions_2_0= ruleAtomicValuedExpression ) )
                    // InternalScadeEquations.g:3619:5: (lv_subExpressions_2_0= ruleAtomicValuedExpression )
                    {
                    // InternalScadeEquations.g:3619:5: (lv_subExpressions_2_0= ruleAtomicValuedExpression )
                    // InternalScadeEquations.g:3620:6: lv_subExpressions_2_0= ruleAtomicValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getCurrentExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_2_0=ruleAtomicValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getCurrentExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_2_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.AtomicValuedExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:3639:3: this_PreExpression_3= rulePreExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getCurrentExpressionAccess().getPreExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PreExpression_3=rulePreExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PreExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCurrentExpression"


    // $ANTLR start "entryRulePreExpression"
    // InternalScadeEquations.g:3654:1: entryRulePreExpression returns [EObject current=null] : iv_rulePreExpression= rulePreExpression EOF ;
    public final EObject entryRulePreExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePreExpression = null;


        try {
            // InternalScadeEquations.g:3654:54: (iv_rulePreExpression= rulePreExpression EOF )
            // InternalScadeEquations.g:3655:2: iv_rulePreExpression= rulePreExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPreExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePreExpression=rulePreExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePreExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePreExpression"


    // $ANTLR start "rulePreExpression"
    // InternalScadeEquations.g:3661:1: rulePreExpression returns [EObject current=null] : ( ( () ( (lv_operator_1_0= rulePreOperator ) ) ( (lv_subExpressions_2_0= ruleAtomicValuedExpression ) ) ) | this_AtomicValuedExpression_3= ruleAtomicValuedExpression ) ;
    public final EObject rulePreExpression() throws RecognitionException {
        EObject current = null;

        Enumerator lv_operator_1_0 = null;

        EObject lv_subExpressions_2_0 = null;

        EObject this_AtomicValuedExpression_3 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:3667:2: ( ( ( () ( (lv_operator_1_0= rulePreOperator ) ) ( (lv_subExpressions_2_0= ruleAtomicValuedExpression ) ) ) | this_AtomicValuedExpression_3= ruleAtomicValuedExpression ) )
            // InternalScadeEquations.g:3668:2: ( ( () ( (lv_operator_1_0= rulePreOperator ) ) ( (lv_subExpressions_2_0= ruleAtomicValuedExpression ) ) ) | this_AtomicValuedExpression_3= ruleAtomicValuedExpression )
            {
            // InternalScadeEquations.g:3668:2: ( ( () ( (lv_operator_1_0= rulePreOperator ) ) ( (lv_subExpressions_2_0= ruleAtomicValuedExpression ) ) ) | this_AtomicValuedExpression_3= ruleAtomicValuedExpression )
            int alt74=2;
            alt74 = dfa74.predict(input);
            switch (alt74) {
                case 1 :
                    // InternalScadeEquations.g:3669:3: ( () ( (lv_operator_1_0= rulePreOperator ) ) ( (lv_subExpressions_2_0= ruleAtomicValuedExpression ) ) )
                    {
                    // InternalScadeEquations.g:3669:3: ( () ( (lv_operator_1_0= rulePreOperator ) ) ( (lv_subExpressions_2_0= ruleAtomicValuedExpression ) ) )
                    // InternalScadeEquations.g:3670:4: () ( (lv_operator_1_0= rulePreOperator ) ) ( (lv_subExpressions_2_0= ruleAtomicValuedExpression ) )
                    {
                    // InternalScadeEquations.g:3670:4: ()
                    // InternalScadeEquations.g:3671:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPreExpressionAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalScadeEquations.g:3680:4: ( (lv_operator_1_0= rulePreOperator ) )
                    // InternalScadeEquations.g:3681:5: (lv_operator_1_0= rulePreOperator )
                    {
                    // InternalScadeEquations.g:3681:5: (lv_operator_1_0= rulePreOperator )
                    // InternalScadeEquations.g:3682:6: lv_operator_1_0= rulePreOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPreExpressionAccess().getOperatorPreOperatorEnumRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_50);
                    lv_operator_1_0=rulePreOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPreExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_1_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.PreOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalScadeEquations.g:3699:4: ( (lv_subExpressions_2_0= ruleAtomicValuedExpression ) )
                    // InternalScadeEquations.g:3700:5: (lv_subExpressions_2_0= ruleAtomicValuedExpression )
                    {
                    // InternalScadeEquations.g:3700:5: (lv_subExpressions_2_0= ruleAtomicValuedExpression )
                    // InternalScadeEquations.g:3701:6: lv_subExpressions_2_0= ruleAtomicValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPreExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_2_0=ruleAtomicValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPreExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_2_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.AtomicValuedExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:3720:3: this_AtomicValuedExpression_3= ruleAtomicValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPreExpressionAccess().getAtomicValuedExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AtomicValuedExpression_3=ruleAtomicValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AtomicValuedExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePreExpression"


    // $ANTLR start "entryRuleBoolExpression"
    // InternalScadeEquations.g:3735:1: entryRuleBoolExpression returns [EObject current=null] : iv_ruleBoolExpression= ruleBoolExpression EOF ;
    public final EObject entryRuleBoolExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBoolExpression = null;


        try {
            // InternalScadeEquations.g:3735:55: (iv_ruleBoolExpression= ruleBoolExpression EOF )
            // InternalScadeEquations.g:3736:2: iv_ruleBoolExpression= ruleBoolExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBoolExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBoolExpression=ruleBoolExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBoolExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBoolExpression"


    // $ANTLR start "ruleBoolExpression"
    // InternalScadeEquations.g:3742:1: ruleBoolExpression returns [EObject current=null] : this_InitExpression_0= ruleInitExpression ;
    public final EObject ruleBoolExpression() throws RecognitionException {
        EObject current = null;

        EObject this_InitExpression_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:3748:2: (this_InitExpression_0= ruleInitExpression )
            // InternalScadeEquations.g:3749:2: this_InitExpression_0= ruleInitExpression
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getBoolExpressionAccess().getInitExpressionParserRuleCall());
              	
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_InitExpression_0=ruleInitExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_InitExpression_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBoolExpression"


    // $ANTLR start "entryRuleInitExpression"
    // InternalScadeEquations.g:3763:1: entryRuleInitExpression returns [EObject current=null] : iv_ruleInitExpression= ruleInitExpression EOF ;
    public final EObject entryRuleInitExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInitExpression = null;


        try {
            // InternalScadeEquations.g:3763:55: (iv_ruleInitExpression= ruleInitExpression EOF )
            // InternalScadeEquations.g:3764:2: iv_ruleInitExpression= ruleInitExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInitExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleInitExpression=ruleInitExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInitExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInitExpression"


    // $ANTLR start "ruleInitExpression"
    // InternalScadeEquations.g:3770:1: ruleInitExpression returns [EObject current=null] : (this_TernaryOperation_0= ruleTernaryOperation ( () ( ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleTernaryOperation ) ) ) (otherlv_4= '->' ( (lv_subExpressions_5_0= ruleTernaryOperation ) ) )* )? ) ;
    public final EObject ruleInitExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_TernaryOperation_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:3776:2: ( (this_TernaryOperation_0= ruleTernaryOperation ( () ( ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleTernaryOperation ) ) ) (otherlv_4= '->' ( (lv_subExpressions_5_0= ruleTernaryOperation ) ) )* )? ) )
            // InternalScadeEquations.g:3777:2: (this_TernaryOperation_0= ruleTernaryOperation ( () ( ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleTernaryOperation ) ) ) (otherlv_4= '->' ( (lv_subExpressions_5_0= ruleTernaryOperation ) ) )* )? )
            {
            // InternalScadeEquations.g:3777:2: (this_TernaryOperation_0= ruleTernaryOperation ( () ( ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleTernaryOperation ) ) ) (otherlv_4= '->' ( (lv_subExpressions_5_0= ruleTernaryOperation ) ) )* )? )
            // InternalScadeEquations.g:3778:3: this_TernaryOperation_0= ruleTernaryOperation ( () ( ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleTernaryOperation ) ) ) (otherlv_4= '->' ( (lv_subExpressions_5_0= ruleTernaryOperation ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getInitExpressionAccess().getTernaryOperationParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_53);
            this_TernaryOperation_0=ruleTernaryOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TernaryOperation_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalScadeEquations.g:3789:3: ( () ( ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleTernaryOperation ) ) ) (otherlv_4= '->' ( (lv_subExpressions_5_0= ruleTernaryOperation ) ) )* )?
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( (LA76_0==55) ) {
                alt76=1;
            }
            switch (alt76) {
                case 1 :
                    // InternalScadeEquations.g:3790:4: () ( ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleTernaryOperation ) ) ) (otherlv_4= '->' ( (lv_subExpressions_5_0= ruleTernaryOperation ) ) )*
                    {
                    // InternalScadeEquations.g:3790:4: ()
                    // InternalScadeEquations.g:3791:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getInitExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalScadeEquations.g:3800:4: ( ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleTernaryOperation ) ) )
                    // InternalScadeEquations.g:3801:5: ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleTernaryOperation ) )
                    {
                    // InternalScadeEquations.g:3801:5: ( (lv_operator_2_0= ruleInitOperator ) )
                    // InternalScadeEquations.g:3802:6: (lv_operator_2_0= ruleInitOperator )
                    {
                    // InternalScadeEquations.g:3802:6: (lv_operator_2_0= ruleInitOperator )
                    // InternalScadeEquations.g:3803:7: lv_operator_2_0= ruleInitOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getInitExpressionAccess().getOperatorInitOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_9);
                    lv_operator_2_0=ruleInitOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getInitExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.lustre.Lustre.InitOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:3820:5: ( (lv_subExpressions_3_0= ruleTernaryOperation ) )
                    // InternalScadeEquations.g:3821:6: (lv_subExpressions_3_0= ruleTernaryOperation )
                    {
                    // InternalScadeEquations.g:3821:6: (lv_subExpressions_3_0= ruleTernaryOperation )
                    // InternalScadeEquations.g:3822:7: lv_subExpressions_3_0= ruleTernaryOperation
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getInitExpressionAccess().getSubExpressionsTernaryOperationParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_53);
                    lv_subExpressions_3_0=ruleTernaryOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getInitExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.lustre.Lustre.TernaryOperation");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalScadeEquations.g:3840:4: (otherlv_4= '->' ( (lv_subExpressions_5_0= ruleTernaryOperation ) ) )*
                    loop75:
                    do {
                        int alt75=2;
                        int LA75_0 = input.LA(1);

                        if ( (LA75_0==55) ) {
                            alt75=1;
                        }


                        switch (alt75) {
                    	case 1 :
                    	    // InternalScadeEquations.g:3841:5: otherlv_4= '->' ( (lv_subExpressions_5_0= ruleTernaryOperation ) )
                    	    {
                    	    otherlv_4=(Token)match(input,55,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getInitExpressionAccess().getHyphenMinusGreaterThanSignKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalScadeEquations.g:3845:5: ( (lv_subExpressions_5_0= ruleTernaryOperation ) )
                    	    // InternalScadeEquations.g:3846:6: (lv_subExpressions_5_0= ruleTernaryOperation )
                    	    {
                    	    // InternalScadeEquations.g:3846:6: (lv_subExpressions_5_0= ruleTernaryOperation )
                    	    // InternalScadeEquations.g:3847:7: lv_subExpressions_5_0= ruleTernaryOperation
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getInitExpressionAccess().getSubExpressionsTernaryOperationParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_53);
                    	    lv_subExpressions_5_0=ruleTernaryOperation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getInitExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.lustre.Lustre.TernaryOperation");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop75;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInitExpression"


    // $ANTLR start "entryRuleTernaryOperation"
    // InternalScadeEquations.g:3870:1: entryRuleTernaryOperation returns [EObject current=null] : iv_ruleTernaryOperation= ruleTernaryOperation EOF ;
    public final EObject entryRuleTernaryOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTernaryOperation = null;


        try {
            // InternalScadeEquations.g:3870:57: (iv_ruleTernaryOperation= ruleTernaryOperation EOF )
            // InternalScadeEquations.g:3871:2: iv_ruleTernaryOperation= ruleTernaryOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTernaryOperationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTernaryOperation=ruleTernaryOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTernaryOperation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTernaryOperation"


    // $ANTLR start "ruleTernaryOperation"
    // InternalScadeEquations.g:3877:1: ruleTernaryOperation returns [EObject current=null] : ( ( () ( (lv_operator_1_0= ruleConditionalOperator ) ) ( (lv_subExpressions_2_0= ruleTernaryOperation ) ) otherlv_3= 'then' ( (lv_subExpressions_4_0= ruleTernaryOperation ) ) otherlv_5= 'else' ( (lv_subExpressions_6_0= ruleTernaryOperation ) ) ) | this_ImpliesExpression_7= ruleImpliesExpression ) ;
    public final EObject ruleTernaryOperation() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        Token otherlv_5=null;
        Enumerator lv_operator_1_0 = null;

        EObject lv_subExpressions_2_0 = null;

        EObject lv_subExpressions_4_0 = null;

        EObject lv_subExpressions_6_0 = null;

        EObject this_ImpliesExpression_7 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:3883:2: ( ( ( () ( (lv_operator_1_0= ruleConditionalOperator ) ) ( (lv_subExpressions_2_0= ruleTernaryOperation ) ) otherlv_3= 'then' ( (lv_subExpressions_4_0= ruleTernaryOperation ) ) otherlv_5= 'else' ( (lv_subExpressions_6_0= ruleTernaryOperation ) ) ) | this_ImpliesExpression_7= ruleImpliesExpression ) )
            // InternalScadeEquations.g:3884:2: ( ( () ( (lv_operator_1_0= ruleConditionalOperator ) ) ( (lv_subExpressions_2_0= ruleTernaryOperation ) ) otherlv_3= 'then' ( (lv_subExpressions_4_0= ruleTernaryOperation ) ) otherlv_5= 'else' ( (lv_subExpressions_6_0= ruleTernaryOperation ) ) ) | this_ImpliesExpression_7= ruleImpliesExpression )
            {
            // InternalScadeEquations.g:3884:2: ( ( () ( (lv_operator_1_0= ruleConditionalOperator ) ) ( (lv_subExpressions_2_0= ruleTernaryOperation ) ) otherlv_3= 'then' ( (lv_subExpressions_4_0= ruleTernaryOperation ) ) otherlv_5= 'else' ( (lv_subExpressions_6_0= ruleTernaryOperation ) ) ) | this_ImpliesExpression_7= ruleImpliesExpression )
            int alt77=2;
            int LA77_0 = input.LA(1);

            if ( (LA77_0==46) ) {
                alt77=1;
            }
            else if ( ((LA77_0>=RULE_ID && LA77_0<=RULE_STRING)||(LA77_0>=RULE_INT && LA77_0<=RULE_BOOLEAN)||LA77_0==17||LA77_0==22||LA77_0==83||LA77_0==88||(LA77_0>=99 && LA77_0<=101)||LA77_0==106||LA77_0==109) ) {
                alt77=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 77, 0, input);

                throw nvae;
            }
            switch (alt77) {
                case 1 :
                    // InternalScadeEquations.g:3885:3: ( () ( (lv_operator_1_0= ruleConditionalOperator ) ) ( (lv_subExpressions_2_0= ruleTernaryOperation ) ) otherlv_3= 'then' ( (lv_subExpressions_4_0= ruleTernaryOperation ) ) otherlv_5= 'else' ( (lv_subExpressions_6_0= ruleTernaryOperation ) ) )
                    {
                    // InternalScadeEquations.g:3885:3: ( () ( (lv_operator_1_0= ruleConditionalOperator ) ) ( (lv_subExpressions_2_0= ruleTernaryOperation ) ) otherlv_3= 'then' ( (lv_subExpressions_4_0= ruleTernaryOperation ) ) otherlv_5= 'else' ( (lv_subExpressions_6_0= ruleTernaryOperation ) ) )
                    // InternalScadeEquations.g:3886:4: () ( (lv_operator_1_0= ruleConditionalOperator ) ) ( (lv_subExpressions_2_0= ruleTernaryOperation ) ) otherlv_3= 'then' ( (lv_subExpressions_4_0= ruleTernaryOperation ) ) otherlv_5= 'else' ( (lv_subExpressions_6_0= ruleTernaryOperation ) )
                    {
                    // InternalScadeEquations.g:3886:4: ()
                    // InternalScadeEquations.g:3887:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getTernaryOperationAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalScadeEquations.g:3896:4: ( (lv_operator_1_0= ruleConditionalOperator ) )
                    // InternalScadeEquations.g:3897:5: (lv_operator_1_0= ruleConditionalOperator )
                    {
                    // InternalScadeEquations.g:3897:5: (lv_operator_1_0= ruleConditionalOperator )
                    // InternalScadeEquations.g:3898:6: lv_operator_1_0= ruleConditionalOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTernaryOperationAccess().getOperatorConditionalOperatorEnumRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_9);
                    lv_operator_1_0=ruleConditionalOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTernaryOperationRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_1_0,
                      							"de.cau.cs.kieler.lustre.Lustre.ConditionalOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalScadeEquations.g:3915:4: ( (lv_subExpressions_2_0= ruleTernaryOperation ) )
                    // InternalScadeEquations.g:3916:5: (lv_subExpressions_2_0= ruleTernaryOperation )
                    {
                    // InternalScadeEquations.g:3916:5: (lv_subExpressions_2_0= ruleTernaryOperation )
                    // InternalScadeEquations.g:3917:6: lv_subExpressions_2_0= ruleTernaryOperation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTernaryOperationAccess().getSubExpressionsTernaryOperationParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_54);
                    lv_subExpressions_2_0=ruleTernaryOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTernaryOperationRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_2_0,
                      							"de.cau.cs.kieler.lustre.Lustre.TernaryOperation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,56,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getTernaryOperationAccess().getThenKeyword_0_3());
                      			
                    }
                    // InternalScadeEquations.g:3938:4: ( (lv_subExpressions_4_0= ruleTernaryOperation ) )
                    // InternalScadeEquations.g:3939:5: (lv_subExpressions_4_0= ruleTernaryOperation )
                    {
                    // InternalScadeEquations.g:3939:5: (lv_subExpressions_4_0= ruleTernaryOperation )
                    // InternalScadeEquations.g:3940:6: lv_subExpressions_4_0= ruleTernaryOperation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTernaryOperationAccess().getSubExpressionsTernaryOperationParserRuleCall_0_4_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_55);
                    lv_subExpressions_4_0=ruleTernaryOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTernaryOperationRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_4_0,
                      							"de.cau.cs.kieler.lustre.Lustre.TernaryOperation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,57,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getTernaryOperationAccess().getElseKeyword_0_5());
                      			
                    }
                    // InternalScadeEquations.g:3961:4: ( (lv_subExpressions_6_0= ruleTernaryOperation ) )
                    // InternalScadeEquations.g:3962:5: (lv_subExpressions_6_0= ruleTernaryOperation )
                    {
                    // InternalScadeEquations.g:3962:5: (lv_subExpressions_6_0= ruleTernaryOperation )
                    // InternalScadeEquations.g:3963:6: lv_subExpressions_6_0= ruleTernaryOperation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTernaryOperationAccess().getSubExpressionsTernaryOperationParserRuleCall_0_6_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_6_0=ruleTernaryOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTernaryOperationRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_6_0,
                      							"de.cau.cs.kieler.lustre.Lustre.TernaryOperation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:3982:3: this_ImpliesExpression_7= ruleImpliesExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTernaryOperationAccess().getImpliesExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ImpliesExpression_7=ruleImpliesExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ImpliesExpression_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTernaryOperation"


    // $ANTLR start "entryRuleImpliesExpression"
    // InternalScadeEquations.g:3997:1: entryRuleImpliesExpression returns [EObject current=null] : iv_ruleImpliesExpression= ruleImpliesExpression EOF ;
    public final EObject entryRuleImpliesExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImpliesExpression = null;


        try {
            // InternalScadeEquations.g:3997:58: (iv_ruleImpliesExpression= ruleImpliesExpression EOF )
            // InternalScadeEquations.g:3998:2: iv_ruleImpliesExpression= ruleImpliesExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImpliesExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleImpliesExpression=ruleImpliesExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImpliesExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImpliesExpression"


    // $ANTLR start "ruleImpliesExpression"
    // InternalScadeEquations.g:4004:1: ruleImpliesExpression returns [EObject current=null] : (this_LogicalXorExpression_0= ruleLogicalXorExpression ( () ( ( (lv_operator_2_0= ruleImpliesOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalXorExpression ) ) ) (otherlv_4= '=>' ( (lv_subExpressions_5_0= ruleLogicalXorExpression ) ) )* )? ) ;
    public final EObject ruleImpliesExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_LogicalXorExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:4010:2: ( (this_LogicalXorExpression_0= ruleLogicalXorExpression ( () ( ( (lv_operator_2_0= ruleImpliesOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalXorExpression ) ) ) (otherlv_4= '=>' ( (lv_subExpressions_5_0= ruleLogicalXorExpression ) ) )* )? ) )
            // InternalScadeEquations.g:4011:2: (this_LogicalXorExpression_0= ruleLogicalXorExpression ( () ( ( (lv_operator_2_0= ruleImpliesOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalXorExpression ) ) ) (otherlv_4= '=>' ( (lv_subExpressions_5_0= ruleLogicalXorExpression ) ) )* )? )
            {
            // InternalScadeEquations.g:4011:2: (this_LogicalXorExpression_0= ruleLogicalXorExpression ( () ( ( (lv_operator_2_0= ruleImpliesOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalXorExpression ) ) ) (otherlv_4= '=>' ( (lv_subExpressions_5_0= ruleLogicalXorExpression ) ) )* )? )
            // InternalScadeEquations.g:4012:3: this_LogicalXorExpression_0= ruleLogicalXorExpression ( () ( ( (lv_operator_2_0= ruleImpliesOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalXorExpression ) ) ) (otherlv_4= '=>' ( (lv_subExpressions_5_0= ruleLogicalXorExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getImpliesExpressionAccess().getLogicalXorExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_56);
            this_LogicalXorExpression_0=ruleLogicalXorExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_LogicalXorExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalScadeEquations.g:4023:3: ( () ( ( (lv_operator_2_0= ruleImpliesOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalXorExpression ) ) ) (otherlv_4= '=>' ( (lv_subExpressions_5_0= ruleLogicalXorExpression ) ) )* )?
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( (LA79_0==58) ) {
                alt79=1;
            }
            switch (alt79) {
                case 1 :
                    // InternalScadeEquations.g:4024:4: () ( ( (lv_operator_2_0= ruleImpliesOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalXorExpression ) ) ) (otherlv_4= '=>' ( (lv_subExpressions_5_0= ruleLogicalXorExpression ) ) )*
                    {
                    // InternalScadeEquations.g:4024:4: ()
                    // InternalScadeEquations.g:4025:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getImpliesExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalScadeEquations.g:4034:4: ( ( (lv_operator_2_0= ruleImpliesOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalXorExpression ) ) )
                    // InternalScadeEquations.g:4035:5: ( (lv_operator_2_0= ruleImpliesOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalXorExpression ) )
                    {
                    // InternalScadeEquations.g:4035:5: ( (lv_operator_2_0= ruleImpliesOperator ) )
                    // InternalScadeEquations.g:4036:6: (lv_operator_2_0= ruleImpliesOperator )
                    {
                    // InternalScadeEquations.g:4036:6: (lv_operator_2_0= ruleImpliesOperator )
                    // InternalScadeEquations.g:4037:7: lv_operator_2_0= ruleImpliesOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getImpliesExpressionAccess().getOperatorImpliesOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_9);
                    lv_operator_2_0=ruleImpliesOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getImpliesExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.lustre.Lustre.ImpliesOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:4054:5: ( (lv_subExpressions_3_0= ruleLogicalXorExpression ) )
                    // InternalScadeEquations.g:4055:6: (lv_subExpressions_3_0= ruleLogicalXorExpression )
                    {
                    // InternalScadeEquations.g:4055:6: (lv_subExpressions_3_0= ruleLogicalXorExpression )
                    // InternalScadeEquations.g:4056:7: lv_subExpressions_3_0= ruleLogicalXorExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getImpliesExpressionAccess().getSubExpressionsLogicalXorExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_56);
                    lv_subExpressions_3_0=ruleLogicalXorExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getImpliesExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.lustre.Lustre.LogicalXorExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalScadeEquations.g:4074:4: (otherlv_4= '=>' ( (lv_subExpressions_5_0= ruleLogicalXorExpression ) ) )*
                    loop78:
                    do {
                        int alt78=2;
                        int LA78_0 = input.LA(1);

                        if ( (LA78_0==58) ) {
                            alt78=1;
                        }


                        switch (alt78) {
                    	case 1 :
                    	    // InternalScadeEquations.g:4075:5: otherlv_4= '=>' ( (lv_subExpressions_5_0= ruleLogicalXorExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,58,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getImpliesExpressionAccess().getEqualsSignGreaterThanSignKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalScadeEquations.g:4079:5: ( (lv_subExpressions_5_0= ruleLogicalXorExpression ) )
                    	    // InternalScadeEquations.g:4080:6: (lv_subExpressions_5_0= ruleLogicalXorExpression )
                    	    {
                    	    // InternalScadeEquations.g:4080:6: (lv_subExpressions_5_0= ruleLogicalXorExpression )
                    	    // InternalScadeEquations.g:4081:7: lv_subExpressions_5_0= ruleLogicalXorExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getImpliesExpressionAccess().getSubExpressionsLogicalXorExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_56);
                    	    lv_subExpressions_5_0=ruleLogicalXorExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getImpliesExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.lustre.Lustre.LogicalXorExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop78;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImpliesExpression"


    // $ANTLR start "entryRuleLogicalXorExpression"
    // InternalScadeEquations.g:4104:1: entryRuleLogicalXorExpression returns [EObject current=null] : iv_ruleLogicalXorExpression= ruleLogicalXorExpression EOF ;
    public final EObject entryRuleLogicalXorExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLogicalXorExpression = null;


        try {
            // InternalScadeEquations.g:4104:61: (iv_ruleLogicalXorExpression= ruleLogicalXorExpression EOF )
            // InternalScadeEquations.g:4105:2: iv_ruleLogicalXorExpression= ruleLogicalXorExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLogicalXorExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLogicalXorExpression=ruleLogicalXorExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLogicalXorExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLogicalXorExpression"


    // $ANTLR start "ruleLogicalXorExpression"
    // InternalScadeEquations.g:4111:1: ruleLogicalXorExpression returns [EObject current=null] : (this_LogicalOrExpression_0= ruleLogicalOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalXorOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalOrExpression ) ) ) (otherlv_4= 'xor' ( (lv_subExpressions_5_0= ruleLogicalOrExpression ) ) )* )? ) ;
    public final EObject ruleLogicalXorExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_LogicalOrExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:4117:2: ( (this_LogicalOrExpression_0= ruleLogicalOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalXorOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalOrExpression ) ) ) (otherlv_4= 'xor' ( (lv_subExpressions_5_0= ruleLogicalOrExpression ) ) )* )? ) )
            // InternalScadeEquations.g:4118:2: (this_LogicalOrExpression_0= ruleLogicalOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalXorOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalOrExpression ) ) ) (otherlv_4= 'xor' ( (lv_subExpressions_5_0= ruleLogicalOrExpression ) ) )* )? )
            {
            // InternalScadeEquations.g:4118:2: (this_LogicalOrExpression_0= ruleLogicalOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalXorOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalOrExpression ) ) ) (otherlv_4= 'xor' ( (lv_subExpressions_5_0= ruleLogicalOrExpression ) ) )* )? )
            // InternalScadeEquations.g:4119:3: this_LogicalOrExpression_0= ruleLogicalOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalXorOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalOrExpression ) ) ) (otherlv_4= 'xor' ( (lv_subExpressions_5_0= ruleLogicalOrExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getLogicalXorExpressionAccess().getLogicalOrExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_57);
            this_LogicalOrExpression_0=ruleLogicalOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_LogicalOrExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalScadeEquations.g:4130:3: ( () ( ( (lv_operator_2_0= ruleLogicalXorOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalOrExpression ) ) ) (otherlv_4= 'xor' ( (lv_subExpressions_5_0= ruleLogicalOrExpression ) ) )* )?
            int alt81=2;
            int LA81_0 = input.LA(1);

            if ( (LA81_0==59) ) {
                alt81=1;
            }
            switch (alt81) {
                case 1 :
                    // InternalScadeEquations.g:4131:4: () ( ( (lv_operator_2_0= ruleLogicalXorOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalOrExpression ) ) ) (otherlv_4= 'xor' ( (lv_subExpressions_5_0= ruleLogicalOrExpression ) ) )*
                    {
                    // InternalScadeEquations.g:4131:4: ()
                    // InternalScadeEquations.g:4132:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getLogicalXorExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalScadeEquations.g:4141:4: ( ( (lv_operator_2_0= ruleLogicalXorOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalOrExpression ) ) )
                    // InternalScadeEquations.g:4142:5: ( (lv_operator_2_0= ruleLogicalXorOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalOrExpression ) )
                    {
                    // InternalScadeEquations.g:4142:5: ( (lv_operator_2_0= ruleLogicalXorOperator ) )
                    // InternalScadeEquations.g:4143:6: (lv_operator_2_0= ruleLogicalXorOperator )
                    {
                    // InternalScadeEquations.g:4143:6: (lv_operator_2_0= ruleLogicalXorOperator )
                    // InternalScadeEquations.g:4144:7: lv_operator_2_0= ruleLogicalXorOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalXorExpressionAccess().getOperatorLogicalXorOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_9);
                    lv_operator_2_0=ruleLogicalXorOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalXorExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.lustre.Lustre.LogicalXorOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:4161:5: ( (lv_subExpressions_3_0= ruleLogicalOrExpression ) )
                    // InternalScadeEquations.g:4162:6: (lv_subExpressions_3_0= ruleLogicalOrExpression )
                    {
                    // InternalScadeEquations.g:4162:6: (lv_subExpressions_3_0= ruleLogicalOrExpression )
                    // InternalScadeEquations.g:4163:7: lv_subExpressions_3_0= ruleLogicalOrExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalXorExpressionAccess().getSubExpressionsLogicalOrExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_57);
                    lv_subExpressions_3_0=ruleLogicalOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalXorExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.lustre.Lustre.LogicalOrExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalScadeEquations.g:4181:4: (otherlv_4= 'xor' ( (lv_subExpressions_5_0= ruleLogicalOrExpression ) ) )*
                    loop80:
                    do {
                        int alt80=2;
                        int LA80_0 = input.LA(1);

                        if ( (LA80_0==59) ) {
                            alt80=1;
                        }


                        switch (alt80) {
                    	case 1 :
                    	    // InternalScadeEquations.g:4182:5: otherlv_4= 'xor' ( (lv_subExpressions_5_0= ruleLogicalOrExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,59,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getLogicalXorExpressionAccess().getXorKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalScadeEquations.g:4186:5: ( (lv_subExpressions_5_0= ruleLogicalOrExpression ) )
                    	    // InternalScadeEquations.g:4187:6: (lv_subExpressions_5_0= ruleLogicalOrExpression )
                    	    {
                    	    // InternalScadeEquations.g:4187:6: (lv_subExpressions_5_0= ruleLogicalOrExpression )
                    	    // InternalScadeEquations.g:4188:7: lv_subExpressions_5_0= ruleLogicalOrExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getLogicalXorExpressionAccess().getSubExpressionsLogicalOrExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_57);
                    	    lv_subExpressions_5_0=ruleLogicalOrExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getLogicalXorExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.lustre.Lustre.LogicalOrExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop80;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalXorExpression"


    // $ANTLR start "entryRuleLogicalOrExpression"
    // InternalScadeEquations.g:4211:1: entryRuleLogicalOrExpression returns [EObject current=null] : iv_ruleLogicalOrExpression= ruleLogicalOrExpression EOF ;
    public final EObject entryRuleLogicalOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLogicalOrExpression = null;


        try {
            // InternalScadeEquations.g:4211:60: (iv_ruleLogicalOrExpression= ruleLogicalOrExpression EOF )
            // InternalScadeEquations.g:4212:2: iv_ruleLogicalOrExpression= ruleLogicalOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLogicalOrExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLogicalOrExpression=ruleLogicalOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLogicalOrExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLogicalOrExpression"


    // $ANTLR start "ruleLogicalOrExpression"
    // InternalScadeEquations.g:4218:1: ruleLogicalOrExpression returns [EObject current=null] : (this_LogicalAndExpression_0= ruleLogicalAndExpression ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= 'or' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )? ) ;
    public final EObject ruleLogicalOrExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_LogicalAndExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:4224:2: ( (this_LogicalAndExpression_0= ruleLogicalAndExpression ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= 'or' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )? ) )
            // InternalScadeEquations.g:4225:2: (this_LogicalAndExpression_0= ruleLogicalAndExpression ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= 'or' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )? )
            {
            // InternalScadeEquations.g:4225:2: (this_LogicalAndExpression_0= ruleLogicalAndExpression ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= 'or' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )? )
            // InternalScadeEquations.g:4226:3: this_LogicalAndExpression_0= ruleLogicalAndExpression ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= 'or' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getLogicalOrExpressionAccess().getLogicalAndExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_58);
            this_LogicalAndExpression_0=ruleLogicalAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_LogicalAndExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalScadeEquations.g:4237:3: ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= 'or' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )?
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==60) ) {
                alt83=1;
            }
            switch (alt83) {
                case 1 :
                    // InternalScadeEquations.g:4238:4: () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= 'or' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )*
                    {
                    // InternalScadeEquations.g:4238:4: ()
                    // InternalScadeEquations.g:4239:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getLogicalOrExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalScadeEquations.g:4248:4: ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) )
                    // InternalScadeEquations.g:4249:5: ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) )
                    {
                    // InternalScadeEquations.g:4249:5: ( (lv_operator_2_0= ruleLogicalOrOperator ) )
                    // InternalScadeEquations.g:4250:6: (lv_operator_2_0= ruleLogicalOrOperator )
                    {
                    // InternalScadeEquations.g:4250:6: (lv_operator_2_0= ruleLogicalOrOperator )
                    // InternalScadeEquations.g:4251:7: lv_operator_2_0= ruleLogicalOrOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalOrExpressionAccess().getOperatorLogicalOrOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_9);
                    lv_operator_2_0=ruleLogicalOrOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalOrExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.lustre.Lustre.LogicalOrOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:4268:5: ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) )
                    // InternalScadeEquations.g:4269:6: (lv_subExpressions_3_0= ruleLogicalAndExpression )
                    {
                    // InternalScadeEquations.g:4269:6: (lv_subExpressions_3_0= ruleLogicalAndExpression )
                    // InternalScadeEquations.g:4270:7: lv_subExpressions_3_0= ruleLogicalAndExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalOrExpressionAccess().getSubExpressionsLogicalAndExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_58);
                    lv_subExpressions_3_0=ruleLogicalAndExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalOrExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.lustre.Lustre.LogicalAndExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalScadeEquations.g:4288:4: (otherlv_4= 'or' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )*
                    loop82:
                    do {
                        int alt82=2;
                        int LA82_0 = input.LA(1);

                        if ( (LA82_0==60) ) {
                            alt82=1;
                        }


                        switch (alt82) {
                    	case 1 :
                    	    // InternalScadeEquations.g:4289:5: otherlv_4= 'or' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,60,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getLogicalOrExpressionAccess().getOrKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalScadeEquations.g:4293:5: ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) )
                    	    // InternalScadeEquations.g:4294:6: (lv_subExpressions_5_0= ruleLogicalAndExpression )
                    	    {
                    	    // InternalScadeEquations.g:4294:6: (lv_subExpressions_5_0= ruleLogicalAndExpression )
                    	    // InternalScadeEquations.g:4295:7: lv_subExpressions_5_0= ruleLogicalAndExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getLogicalOrExpressionAccess().getSubExpressionsLogicalAndExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_58);
                    	    lv_subExpressions_5_0=ruleLogicalAndExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getLogicalOrExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.lustre.Lustre.LogicalAndExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop82;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalOrExpression"


    // $ANTLR start "entryRuleLogicalAndExpression"
    // InternalScadeEquations.g:4318:1: entryRuleLogicalAndExpression returns [EObject current=null] : iv_ruleLogicalAndExpression= ruleLogicalAndExpression EOF ;
    public final EObject entryRuleLogicalAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLogicalAndExpression = null;


        try {
            // InternalScadeEquations.g:4318:61: (iv_ruleLogicalAndExpression= ruleLogicalAndExpression EOF )
            // InternalScadeEquations.g:4319:2: iv_ruleLogicalAndExpression= ruleLogicalAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLogicalAndExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLogicalAndExpression=ruleLogicalAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLogicalAndExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLogicalAndExpression"


    // $ANTLR start "ruleLogicalAndExpression"
    // InternalScadeEquations.g:4325:1: ruleLogicalAndExpression returns [EObject current=null] : (this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= 'and' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )? ) ;
    public final EObject ruleLogicalAndExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_CompareOperation_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:4331:2: ( (this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= 'and' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )? ) )
            // InternalScadeEquations.g:4332:2: (this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= 'and' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )? )
            {
            // InternalScadeEquations.g:4332:2: (this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= 'and' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )? )
            // InternalScadeEquations.g:4333:3: this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= 'and' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getLogicalAndExpressionAccess().getCompareOperationParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_59);
            this_CompareOperation_0=ruleCompareOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_CompareOperation_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalScadeEquations.g:4344:3: ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= 'and' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )?
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( (LA85_0==61) ) {
                alt85=1;
            }
            switch (alt85) {
                case 1 :
                    // InternalScadeEquations.g:4345:4: () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= 'and' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )*
                    {
                    // InternalScadeEquations.g:4345:4: ()
                    // InternalScadeEquations.g:4346:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getLogicalAndExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalScadeEquations.g:4355:4: ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) )
                    // InternalScadeEquations.g:4356:5: ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) )
                    {
                    // InternalScadeEquations.g:4356:5: ( (lv_operator_2_0= ruleLogicalAndOperator ) )
                    // InternalScadeEquations.g:4357:6: (lv_operator_2_0= ruleLogicalAndOperator )
                    {
                    // InternalScadeEquations.g:4357:6: (lv_operator_2_0= ruleLogicalAndOperator )
                    // InternalScadeEquations.g:4358:7: lv_operator_2_0= ruleLogicalAndOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAndExpressionAccess().getOperatorLogicalAndOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_9);
                    lv_operator_2_0=ruleLogicalAndOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAndExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.lustre.Lustre.LogicalAndOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:4375:5: ( (lv_subExpressions_3_0= ruleCompareOperation ) )
                    // InternalScadeEquations.g:4376:6: (lv_subExpressions_3_0= ruleCompareOperation )
                    {
                    // InternalScadeEquations.g:4376:6: (lv_subExpressions_3_0= ruleCompareOperation )
                    // InternalScadeEquations.g:4377:7: lv_subExpressions_3_0= ruleCompareOperation
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAndExpressionAccess().getSubExpressionsCompareOperationParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_59);
                    lv_subExpressions_3_0=ruleCompareOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAndExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.CompareOperation");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalScadeEquations.g:4395:4: (otherlv_4= 'and' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )*
                    loop84:
                    do {
                        int alt84=2;
                        int LA84_0 = input.LA(1);

                        if ( (LA84_0==61) ) {
                            alt84=1;
                        }


                        switch (alt84) {
                    	case 1 :
                    	    // InternalScadeEquations.g:4396:5: otherlv_4= 'and' ( (lv_subExpressions_5_0= ruleCompareOperation ) )
                    	    {
                    	    otherlv_4=(Token)match(input,61,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getLogicalAndExpressionAccess().getAndKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalScadeEquations.g:4400:5: ( (lv_subExpressions_5_0= ruleCompareOperation ) )
                    	    // InternalScadeEquations.g:4401:6: (lv_subExpressions_5_0= ruleCompareOperation )
                    	    {
                    	    // InternalScadeEquations.g:4401:6: (lv_subExpressions_5_0= ruleCompareOperation )
                    	    // InternalScadeEquations.g:4402:7: lv_subExpressions_5_0= ruleCompareOperation
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getLogicalAndExpressionAccess().getSubExpressionsCompareOperationParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_59);
                    	    lv_subExpressions_5_0=ruleCompareOperation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getLogicalAndExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.CompareOperation");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop84;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalAndExpression"


    // $ANTLR start "entryRuleValuedExpression"
    // InternalScadeEquations.g:4425:1: entryRuleValuedExpression returns [EObject current=null] : iv_ruleValuedExpression= ruleValuedExpression EOF ;
    public final EObject entryRuleValuedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValuedExpression = null;


        try {
            // InternalScadeEquations.g:4425:57: (iv_ruleValuedExpression= ruleValuedExpression EOF )
            // InternalScadeEquations.g:4426:2: iv_ruleValuedExpression= ruleValuedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValuedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleValuedExpression=ruleValuedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValuedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValuedExpression"


    // $ANTLR start "ruleValuedExpression"
    // InternalScadeEquations.g:4432:1: ruleValuedExpression returns [EObject current=null] : this_SumExpression_0= ruleSumExpression ;
    public final EObject ruleValuedExpression() throws RecognitionException {
        EObject current = null;

        EObject this_SumExpression_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:4438:2: (this_SumExpression_0= ruleSumExpression )
            // InternalScadeEquations.g:4439:2: this_SumExpression_0= ruleSumExpression
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getValuedExpressionAccess().getSumExpressionParserRuleCall());
              	
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_SumExpression_0=ruleSumExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_SumExpression_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValuedExpression"


    // $ANTLR start "entryRuleAtomicExpression"
    // InternalScadeEquations.g:4453:1: entryRuleAtomicExpression returns [EObject current=null] : iv_ruleAtomicExpression= ruleAtomicExpression EOF ;
    public final EObject entryRuleAtomicExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAtomicExpression = null;


        try {
            // InternalScadeEquations.g:4453:57: (iv_ruleAtomicExpression= ruleAtomicExpression EOF )
            // InternalScadeEquations.g:4454:2: iv_ruleAtomicExpression= ruleAtomicExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAtomicExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAtomicExpression=ruleAtomicExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAtomicExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAtomicExpression"


    // $ANTLR start "ruleAtomicExpression"
    // InternalScadeEquations.g:4460:1: ruleAtomicExpression returns [EObject current=null] : (this_BoolValue_0= ruleBoolValue | (otherlv_1= '(' this_BoolExpression_2= ruleBoolExpression otherlv_3= ')' ) | this_ReferenceCall_4= ruleReferenceCall | this_ValuedObjectTestExpression_5= ruleValuedObjectTestExpression | this_NorAtMostOneExpression_6= ruleNorAtMostOneExpression ) ;
    public final EObject ruleAtomicExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject this_BoolValue_0 = null;

        EObject this_BoolExpression_2 = null;

        EObject this_ReferenceCall_4 = null;

        EObject this_ValuedObjectTestExpression_5 = null;

        EObject this_NorAtMostOneExpression_6 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:4466:2: ( (this_BoolValue_0= ruleBoolValue | (otherlv_1= '(' this_BoolExpression_2= ruleBoolExpression otherlv_3= ')' ) | this_ReferenceCall_4= ruleReferenceCall | this_ValuedObjectTestExpression_5= ruleValuedObjectTestExpression | this_NorAtMostOneExpression_6= ruleNorAtMostOneExpression ) )
            // InternalScadeEquations.g:4467:2: (this_BoolValue_0= ruleBoolValue | (otherlv_1= '(' this_BoolExpression_2= ruleBoolExpression otherlv_3= ')' ) | this_ReferenceCall_4= ruleReferenceCall | this_ValuedObjectTestExpression_5= ruleValuedObjectTestExpression | this_NorAtMostOneExpression_6= ruleNorAtMostOneExpression )
            {
            // InternalScadeEquations.g:4467:2: (this_BoolValue_0= ruleBoolValue | (otherlv_1= '(' this_BoolExpression_2= ruleBoolExpression otherlv_3= ')' ) | this_ReferenceCall_4= ruleReferenceCall | this_ValuedObjectTestExpression_5= ruleValuedObjectTestExpression | this_NorAtMostOneExpression_6= ruleNorAtMostOneExpression )
            int alt86=5;
            alt86 = dfa86.predict(input);
            switch (alt86) {
                case 1 :
                    // InternalScadeEquations.g:4468:3: this_BoolValue_0= ruleBoolValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicExpressionAccess().getBoolValueParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_BoolValue_0=ruleBoolValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BoolValue_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:4480:3: (otherlv_1= '(' this_BoolExpression_2= ruleBoolExpression otherlv_3= ')' )
                    {
                    // InternalScadeEquations.g:4480:3: (otherlv_1= '(' this_BoolExpression_2= ruleBoolExpression otherlv_3= ')' )
                    // InternalScadeEquations.g:4481:4: otherlv_1= '(' this_BoolExpression_2= ruleBoolExpression otherlv_3= ')'
                    {
                    otherlv_1=(Token)match(input,17,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getAtomicExpressionAccess().getLeftParenthesisKeyword_1_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getAtomicExpressionAccess().getBoolExpressionParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_13);
                    this_BoolExpression_2=ruleBoolExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_BoolExpression_2;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_3=(Token)match(input,19,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getAtomicExpressionAccess().getRightParenthesisKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalScadeEquations.g:4502:3: this_ReferenceCall_4= ruleReferenceCall
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicExpressionAccess().getReferenceCallParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ReferenceCall_4=ruleReferenceCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ReferenceCall_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalScadeEquations.g:4514:3: this_ValuedObjectTestExpression_5= ruleValuedObjectTestExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicExpressionAccess().getValuedObjectTestExpressionParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedObjectTestExpression_5=ruleValuedObjectTestExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ValuedObjectTestExpression_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalScadeEquations.g:4526:3: this_NorAtMostOneExpression_6= ruleNorAtMostOneExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicExpressionAccess().getNorAtMostOneExpressionParserRuleCall_4());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_NorAtMostOneExpression_6=ruleNorAtMostOneExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NorAtMostOneExpression_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAtomicExpression"


    // $ANTLR start "entryRuleNorAtMostOneExpression"
    // InternalScadeEquations.g:4541:1: entryRuleNorAtMostOneExpression returns [EObject current=null] : iv_ruleNorAtMostOneExpression= ruleNorAtMostOneExpression EOF ;
    public final EObject entryRuleNorAtMostOneExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNorAtMostOneExpression = null;


        try {
            // InternalScadeEquations.g:4541:63: (iv_ruleNorAtMostOneExpression= ruleNorAtMostOneExpression EOF )
            // InternalScadeEquations.g:4542:2: iv_ruleNorAtMostOneExpression= ruleNorAtMostOneExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNorAtMostOneExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNorAtMostOneExpression=ruleNorAtMostOneExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNorAtMostOneExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNorAtMostOneExpression"


    // $ANTLR start "ruleNorAtMostOneExpression"
    // InternalScadeEquations.g:4548:1: ruleNorAtMostOneExpression returns [EObject current=null] : ( () ( ( (lv_operator_1_0= ruleAtMostOneOperator ) ) | ( (lv_operator_2_0= ruleNorOperator ) ) ) otherlv_3= '(' ( (lv_subExpressions_4_0= ruleExpression ) ) (otherlv_5= ',' ( (lv_subExpressions_6_0= ruleExpression ) ) )* otherlv_7= ')' ) ;
    public final EObject ruleNorAtMostOneExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Enumerator lv_operator_1_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_4_0 = null;

        EObject lv_subExpressions_6_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:4554:2: ( ( () ( ( (lv_operator_1_0= ruleAtMostOneOperator ) ) | ( (lv_operator_2_0= ruleNorOperator ) ) ) otherlv_3= '(' ( (lv_subExpressions_4_0= ruleExpression ) ) (otherlv_5= ',' ( (lv_subExpressions_6_0= ruleExpression ) ) )* otherlv_7= ')' ) )
            // InternalScadeEquations.g:4555:2: ( () ( ( (lv_operator_1_0= ruleAtMostOneOperator ) ) | ( (lv_operator_2_0= ruleNorOperator ) ) ) otherlv_3= '(' ( (lv_subExpressions_4_0= ruleExpression ) ) (otherlv_5= ',' ( (lv_subExpressions_6_0= ruleExpression ) ) )* otherlv_7= ')' )
            {
            // InternalScadeEquations.g:4555:2: ( () ( ( (lv_operator_1_0= ruleAtMostOneOperator ) ) | ( (lv_operator_2_0= ruleNorOperator ) ) ) otherlv_3= '(' ( (lv_subExpressions_4_0= ruleExpression ) ) (otherlv_5= ',' ( (lv_subExpressions_6_0= ruleExpression ) ) )* otherlv_7= ')' )
            // InternalScadeEquations.g:4556:3: () ( ( (lv_operator_1_0= ruleAtMostOneOperator ) ) | ( (lv_operator_2_0= ruleNorOperator ) ) ) otherlv_3= '(' ( (lv_subExpressions_4_0= ruleExpression ) ) (otherlv_5= ',' ( (lv_subExpressions_6_0= ruleExpression ) ) )* otherlv_7= ')'
            {
            // InternalScadeEquations.g:4556:3: ()
            // InternalScadeEquations.g:4557:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getNorAtMostOneExpressionAccess().getOperatorExpressionAction_0(),
              					current);
              			
            }

            }

            // InternalScadeEquations.g:4566:3: ( ( (lv_operator_1_0= ruleAtMostOneOperator ) ) | ( (lv_operator_2_0= ruleNorOperator ) ) )
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==88) ) {
                alt87=1;
            }
            else if ( (LA87_0==101) ) {
                alt87=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 87, 0, input);

                throw nvae;
            }
            switch (alt87) {
                case 1 :
                    // InternalScadeEquations.g:4567:4: ( (lv_operator_1_0= ruleAtMostOneOperator ) )
                    {
                    // InternalScadeEquations.g:4567:4: ( (lv_operator_1_0= ruleAtMostOneOperator ) )
                    // InternalScadeEquations.g:4568:5: (lv_operator_1_0= ruleAtMostOneOperator )
                    {
                    // InternalScadeEquations.g:4568:5: (lv_operator_1_0= ruleAtMostOneOperator )
                    // InternalScadeEquations.g:4569:6: lv_operator_1_0= ruleAtMostOneOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNorAtMostOneExpressionAccess().getOperatorAtMostOneOperatorEnumRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_11);
                    lv_operator_1_0=ruleAtMostOneOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNorAtMostOneExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_1_0,
                      							"de.cau.cs.kieler.lustre.Lustre.AtMostOneOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:4587:4: ( (lv_operator_2_0= ruleNorOperator ) )
                    {
                    // InternalScadeEquations.g:4587:4: ( (lv_operator_2_0= ruleNorOperator ) )
                    // InternalScadeEquations.g:4588:5: (lv_operator_2_0= ruleNorOperator )
                    {
                    // InternalScadeEquations.g:4588:5: (lv_operator_2_0= ruleNorOperator )
                    // InternalScadeEquations.g:4589:6: lv_operator_2_0= ruleNorOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNorAtMostOneExpressionAccess().getOperatorNorOperatorEnumRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_11);
                    lv_operator_2_0=ruleNorOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNorAtMostOneExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_2_0,
                      							"de.cau.cs.kieler.lustre.Lustre.NorOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,17,FollowSets000.FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getNorAtMostOneExpressionAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalScadeEquations.g:4611:3: ( (lv_subExpressions_4_0= ruleExpression ) )
            // InternalScadeEquations.g:4612:4: (lv_subExpressions_4_0= ruleExpression )
            {
            // InternalScadeEquations.g:4612:4: (lv_subExpressions_4_0= ruleExpression )
            // InternalScadeEquations.g:4613:5: lv_subExpressions_4_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNorAtMostOneExpressionAccess().getSubExpressionsExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_6);
            lv_subExpressions_4_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getNorAtMostOneExpressionRule());
              					}
              					add(
              						current,
              						"subExpressions",
              						lv_subExpressions_4_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:4630:3: (otherlv_5= ',' ( (lv_subExpressions_6_0= ruleExpression ) ) )*
            loop88:
            do {
                int alt88=2;
                int LA88_0 = input.LA(1);

                if ( (LA88_0==18) ) {
                    alt88=1;
                }


                switch (alt88) {
            	case 1 :
            	    // InternalScadeEquations.g:4631:4: otherlv_5= ',' ( (lv_subExpressions_6_0= ruleExpression ) )
            	    {
            	    otherlv_5=(Token)match(input,18,FollowSets000.FOLLOW_9); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_5, grammarAccess.getNorAtMostOneExpressionAccess().getCommaKeyword_4_0());
            	      			
            	    }
            	    // InternalScadeEquations.g:4635:4: ( (lv_subExpressions_6_0= ruleExpression ) )
            	    // InternalScadeEquations.g:4636:5: (lv_subExpressions_6_0= ruleExpression )
            	    {
            	    // InternalScadeEquations.g:4636:5: (lv_subExpressions_6_0= ruleExpression )
            	    // InternalScadeEquations.g:4637:6: lv_subExpressions_6_0= ruleExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getNorAtMostOneExpressionAccess().getSubExpressionsExpressionParserRuleCall_4_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_6);
            	    lv_subExpressions_6_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getNorAtMostOneExpressionRule());
            	      						}
            	      						add(
            	      							current,
            	      							"subExpressions",
            	      							lv_subExpressions_6_0,
            	      							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop88;
                }
            } while (true);

            otherlv_7=(Token)match(input,19,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getNorAtMostOneExpressionAccess().getRightParenthesisKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNorAtMostOneExpression"


    // $ANTLR start "entryRuleNotExpression"
    // InternalScadeEquations.g:4663:1: entryRuleNotExpression returns [EObject current=null] : iv_ruleNotExpression= ruleNotExpression EOF ;
    public final EObject entryRuleNotExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNotExpression = null;


        try {
            // InternalScadeEquations.g:4663:54: (iv_ruleNotExpression= ruleNotExpression EOF )
            // InternalScadeEquations.g:4664:2: iv_ruleNotExpression= ruleNotExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNotExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNotExpression=ruleNotExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNotExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNotExpression"


    // $ANTLR start "ruleNotExpression"
    // InternalScadeEquations.g:4670:1: ruleNotExpression returns [EObject current=null] : ( ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) ) | this_AtomicExpression_3= ruleAtomicExpression ) ;
    public final EObject ruleNotExpression() throws RecognitionException {
        EObject current = null;

        Enumerator lv_operator_1_0 = null;

        EObject lv_subExpressions_2_0 = null;

        EObject this_AtomicExpression_3 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:4676:2: ( ( ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) ) | this_AtomicExpression_3= ruleAtomicExpression ) )
            // InternalScadeEquations.g:4677:2: ( ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) ) | this_AtomicExpression_3= ruleAtomicExpression )
            {
            // InternalScadeEquations.g:4677:2: ( ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) ) | this_AtomicExpression_3= ruleAtomicExpression )
            int alt89=2;
            int LA89_0 = input.LA(1);

            if ( (LA89_0==99) ) {
                alt89=1;
            }
            else if ( (LA89_0==RULE_ID||LA89_0==RULE_BOOLEAN||LA89_0==17||LA89_0==88||LA89_0==101||LA89_0==106||LA89_0==109) ) {
                alt89=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 89, 0, input);

                throw nvae;
            }
            switch (alt89) {
                case 1 :
                    // InternalScadeEquations.g:4678:3: ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) )
                    {
                    // InternalScadeEquations.g:4678:3: ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) )
                    // InternalScadeEquations.g:4679:4: () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) )
                    {
                    // InternalScadeEquations.g:4679:4: ()
                    // InternalScadeEquations.g:4680:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getNotExpressionAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalScadeEquations.g:4689:4: ( (lv_operator_1_0= ruleNotOperator ) )
                    // InternalScadeEquations.g:4690:5: (lv_operator_1_0= ruleNotOperator )
                    {
                    // InternalScadeEquations.g:4690:5: (lv_operator_1_0= ruleNotOperator )
                    // InternalScadeEquations.g:4691:6: lv_operator_1_0= ruleNotOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNotExpressionAccess().getOperatorNotOperatorEnumRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_9);
                    lv_operator_1_0=ruleNotOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNotExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_1_0,
                      							"de.cau.cs.kieler.lustre.Lustre.NotOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalScadeEquations.g:4708:4: ( (lv_subExpressions_2_0= ruleNotExpression ) )
                    // InternalScadeEquations.g:4709:5: (lv_subExpressions_2_0= ruleNotExpression )
                    {
                    // InternalScadeEquations.g:4709:5: (lv_subExpressions_2_0= ruleNotExpression )
                    // InternalScadeEquations.g:4710:6: lv_subExpressions_2_0= ruleNotExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNotExpressionAccess().getSubExpressionsNotExpressionParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_2_0=ruleNotExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNotExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_2_0,
                      							"de.cau.cs.kieler.lustre.Lustre.NotExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:4729:3: this_AtomicExpression_3= ruleAtomicExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNotExpressionAccess().getAtomicExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AtomicExpression_3=ruleAtomicExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AtomicExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNotExpression"


    // $ANTLR start "entryRuleRootScope"
    // InternalScadeEquations.g:4744:1: entryRuleRootScope returns [EObject current=null] : iv_ruleRootScope= ruleRootScope EOF ;
    public final EObject entryRuleRootScope() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRootScope = null;


        try {
            // InternalScadeEquations.g:4744:50: (iv_ruleRootScope= ruleRootScope EOF )
            // InternalScadeEquations.g:4745:2: iv_ruleRootScope= ruleRootScope EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRootScopeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRootScope=ruleRootScope();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRootScope; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRootScope"


    // $ANTLR start "ruleRootScope"
    // InternalScadeEquations.g:4751:1: ruleRootScope returns [EObject current=null] : ( () ( (lv_declarations_1_0= ruleDeclaration ) )* ( (lv_entities_2_0= ruleTestEntity ) )* (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )* ) ;
    public final EObject ruleRootScope() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        EObject lv_declarations_1_0 = null;

        EObject lv_entities_2_0 = null;

        EObject lv_scopes_4_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:4757:2: ( ( () ( (lv_declarations_1_0= ruleDeclaration ) )* ( (lv_entities_2_0= ruleTestEntity ) )* (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )* ) )
            // InternalScadeEquations.g:4758:2: ( () ( (lv_declarations_1_0= ruleDeclaration ) )* ( (lv_entities_2_0= ruleTestEntity ) )* (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )* )
            {
            // InternalScadeEquations.g:4758:2: ( () ( (lv_declarations_1_0= ruleDeclaration ) )* ( (lv_entities_2_0= ruleTestEntity ) )* (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )* )
            // InternalScadeEquations.g:4759:3: () ( (lv_declarations_1_0= ruleDeclaration ) )* ( (lv_entities_2_0= ruleTestEntity ) )* (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )*
            {
            // InternalScadeEquations.g:4759:3: ()
            // InternalScadeEquations.g:4760:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getRootScopeAccess().getKExtScopeAction_0(),
              					current);
              			
            }

            }

            // InternalScadeEquations.g:4769:3: ( (lv_declarations_1_0= ruleDeclaration ) )*
            loop90:
            do {
                int alt90=2;
                alt90 = dfa90.predict(input);
                switch (alt90) {
            	case 1 :
            	    // InternalScadeEquations.g:4770:4: (lv_declarations_1_0= ruleDeclaration )
            	    {
            	    // InternalScadeEquations.g:4770:4: (lv_declarations_1_0= ruleDeclaration )
            	    // InternalScadeEquations.g:4771:5: lv_declarations_1_0= ruleDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getRootScopeAccess().getDeclarationsDeclarationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_60);
            	    lv_declarations_1_0=ruleDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getRootScopeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.kext.KExt.Declaration");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop90;
                }
            } while (true);

            // InternalScadeEquations.g:4788:3: ( (lv_entities_2_0= ruleTestEntity ) )*
            loop91:
            do {
                int alt91=2;
                int LA91_0 = input.LA(1);

                if ( (LA91_0==RULE_ID||LA91_0==RULE_HOSTCODE||LA91_0==RULE_COMMENT_ANNOTATION||LA91_0==25||(LA91_0>=63 && LA91_0<=64)||(LA91_0>=77 && LA91_0<=78)||LA91_0==89) ) {
                    alt91=1;
                }


                switch (alt91) {
            	case 1 :
            	    // InternalScadeEquations.g:4789:4: (lv_entities_2_0= ruleTestEntity )
            	    {
            	    // InternalScadeEquations.g:4789:4: (lv_entities_2_0= ruleTestEntity )
            	    // InternalScadeEquations.g:4790:5: lv_entities_2_0= ruleTestEntity
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getRootScopeAccess().getEntitiesTestEntityParserRuleCall_2_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_61);
            	    lv_entities_2_0=ruleTestEntity();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getRootScopeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"entities",
            	      						lv_entities_2_0,
            	      						"de.cau.cs.kieler.kexpressions.kext.KExt.TestEntity");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop91;
                }
            } while (true);

            // InternalScadeEquations.g:4807:3: (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )*
            loop92:
            do {
                int alt92=2;
                int LA92_0 = input.LA(1);

                if ( (LA92_0==62) ) {
                    alt92=1;
                }


                switch (alt92) {
            	case 1 :
            	    // InternalScadeEquations.g:4808:4: otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) )
            	    {
            	    otherlv_3=(Token)match(input,62,FollowSets000.FOLLOW_62); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getRootScopeAccess().getScopeKeyword_3_0());
            	      			
            	    }
            	    // InternalScadeEquations.g:4812:4: ( (lv_scopes_4_0= ruleScope ) )
            	    // InternalScadeEquations.g:4813:5: (lv_scopes_4_0= ruleScope )
            	    {
            	    // InternalScadeEquations.g:4813:5: (lv_scopes_4_0= ruleScope )
            	    // InternalScadeEquations.g:4814:6: lv_scopes_4_0= ruleScope
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getRootScopeAccess().getScopesScopeParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_63);
            	    lv_scopes_4_0=ruleScope();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getRootScopeRule());
            	      						}
            	      						add(
            	      							current,
            	      							"scopes",
            	      							lv_scopes_4_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.Scope");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop92;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRootScope"


    // $ANTLR start "entryRuleScope"
    // InternalScadeEquations.g:4836:1: entryRuleScope returns [EObject current=null] : iv_ruleScope= ruleScope EOF ;
    public final EObject entryRuleScope() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScope = null;


        try {
            // InternalScadeEquations.g:4836:46: (iv_ruleScope= ruleScope EOF )
            // InternalScadeEquations.g:4837:2: iv_ruleScope= ruleScope EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScopeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScope=ruleScope();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScope; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScope"


    // $ANTLR start "ruleScope"
    // InternalScadeEquations.g:4843:1: ruleScope returns [EObject current=null] : ( () ( (lv_name_1_0= RULE_ID ) )? otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_entities_4_0= ruleTestEntity ) )* (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )* otherlv_7= '}' ) ;
    public final EObject ruleScope() throws RecognitionException {
        EObject current = null;

        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_declarations_3_0 = null;

        EObject lv_entities_4_0 = null;

        EObject lv_scopes_6_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:4849:2: ( ( () ( (lv_name_1_0= RULE_ID ) )? otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_entities_4_0= ruleTestEntity ) )* (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )* otherlv_7= '}' ) )
            // InternalScadeEquations.g:4850:2: ( () ( (lv_name_1_0= RULE_ID ) )? otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_entities_4_0= ruleTestEntity ) )* (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )* otherlv_7= '}' )
            {
            // InternalScadeEquations.g:4850:2: ( () ( (lv_name_1_0= RULE_ID ) )? otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_entities_4_0= ruleTestEntity ) )* (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )* otherlv_7= '}' )
            // InternalScadeEquations.g:4851:3: () ( (lv_name_1_0= RULE_ID ) )? otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_entities_4_0= ruleTestEntity ) )* (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )* otherlv_7= '}'
            {
            // InternalScadeEquations.g:4851:3: ()
            // InternalScadeEquations.g:4852:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getScopeAccess().getKExtScopeAction_0(),
              					current);
              			
            }

            }

            // InternalScadeEquations.g:4861:3: ( (lv_name_1_0= RULE_ID ) )?
            int alt93=2;
            int LA93_0 = input.LA(1);

            if ( (LA93_0==RULE_ID) ) {
                alt93=1;
            }
            switch (alt93) {
                case 1 :
                    // InternalScadeEquations.g:4862:4: (lv_name_1_0= RULE_ID )
                    {
                    // InternalScadeEquations.g:4862:4: (lv_name_1_0= RULE_ID )
                    // InternalScadeEquations.g:4863:5: lv_name_1_0= RULE_ID
                    {
                    lv_name_1_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_1_0, grammarAccess.getScopeAccess().getNameIDTerminalRuleCall_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getScopeRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_1_0,
                      						"de.cau.cs.kieler.annotations.Annotations.ID");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,22,FollowSets000.FOLLOW_64); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getScopeAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalScadeEquations.g:4883:3: ( (lv_declarations_3_0= ruleDeclaration ) )*
            loop94:
            do {
                int alt94=2;
                alt94 = dfa94.predict(input);
                switch (alt94) {
            	case 1 :
            	    // InternalScadeEquations.g:4884:4: (lv_declarations_3_0= ruleDeclaration )
            	    {
            	    // InternalScadeEquations.g:4884:4: (lv_declarations_3_0= ruleDeclaration )
            	    // InternalScadeEquations.g:4885:5: lv_declarations_3_0= ruleDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getScopeAccess().getDeclarationsDeclarationParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_64);
            	    lv_declarations_3_0=ruleDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getScopeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_3_0,
            	      						"de.cau.cs.kieler.kexpressions.kext.KExt.Declaration");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop94;
                }
            } while (true);

            // InternalScadeEquations.g:4902:3: ( (lv_entities_4_0= ruleTestEntity ) )*
            loop95:
            do {
                int alt95=2;
                int LA95_0 = input.LA(1);

                if ( (LA95_0==RULE_ID||LA95_0==RULE_HOSTCODE||LA95_0==RULE_COMMENT_ANNOTATION||LA95_0==25||(LA95_0>=63 && LA95_0<=64)||(LA95_0>=77 && LA95_0<=78)||LA95_0==89) ) {
                    alt95=1;
                }


                switch (alt95) {
            	case 1 :
            	    // InternalScadeEquations.g:4903:4: (lv_entities_4_0= ruleTestEntity )
            	    {
            	    // InternalScadeEquations.g:4903:4: (lv_entities_4_0= ruleTestEntity )
            	    // InternalScadeEquations.g:4904:5: lv_entities_4_0= ruleTestEntity
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getScopeAccess().getEntitiesTestEntityParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_65);
            	    lv_entities_4_0=ruleTestEntity();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getScopeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"entities",
            	      						lv_entities_4_0,
            	      						"de.cau.cs.kieler.kexpressions.kext.KExt.TestEntity");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop95;
                }
            } while (true);

            // InternalScadeEquations.g:4921:3: (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )*
            loop96:
            do {
                int alt96=2;
                int LA96_0 = input.LA(1);

                if ( (LA96_0==62) ) {
                    alt96=1;
                }


                switch (alt96) {
            	case 1 :
            	    // InternalScadeEquations.g:4922:4: otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) )
            	    {
            	    otherlv_5=(Token)match(input,62,FollowSets000.FOLLOW_62); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_5, grammarAccess.getScopeAccess().getScopeKeyword_5_0());
            	      			
            	    }
            	    // InternalScadeEquations.g:4926:4: ( (lv_scopes_6_0= ruleScope ) )
            	    // InternalScadeEquations.g:4927:5: (lv_scopes_6_0= ruleScope )
            	    {
            	    // InternalScadeEquations.g:4927:5: (lv_scopes_6_0= ruleScope )
            	    // InternalScadeEquations.g:4928:6: lv_scopes_6_0= ruleScope
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getScopeAccess().getScopesScopeParserRuleCall_5_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_66);
            	    lv_scopes_6_0=ruleScope();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getScopeRule());
            	      						}
            	      						add(
            	      							current,
            	      							"scopes",
            	      							lv_scopes_6_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.Scope");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop96;
                }
            } while (true);

            otherlv_7=(Token)match(input,23,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getScopeAccess().getRightCurlyBracketKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScope"


    // $ANTLR start "entryRuleTestEntity"
    // InternalScadeEquations.g:4954:1: entryRuleTestEntity returns [EObject current=null] : iv_ruleTestEntity= ruleTestEntity EOF ;
    public final EObject entryRuleTestEntity() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTestEntity = null;


        try {
            // InternalScadeEquations.g:4954:51: (iv_ruleTestEntity= ruleTestEntity EOF )
            // InternalScadeEquations.g:4955:2: iv_ruleTestEntity= ruleTestEntity EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTestEntityRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTestEntity=ruleTestEntity();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTestEntity; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTestEntity"


    // $ANTLR start "ruleTestEntity"
    // InternalScadeEquations.g:4961:1: ruleTestEntity returns [EObject current=null] : ( ( ( (lv_expression_0_1= ruleAnnotatedExpression | lv_expression_0_2= ruleAnnotatedJsonExpression ) ) ) | ( (lv_effect_1_0= ruleEffect ) ) ) ;
    public final EObject ruleTestEntity() throws RecognitionException {
        EObject current = null;

        EObject lv_expression_0_1 = null;

        EObject lv_expression_0_2 = null;

        EObject lv_effect_1_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:4967:2: ( ( ( ( (lv_expression_0_1= ruleAnnotatedExpression | lv_expression_0_2= ruleAnnotatedJsonExpression ) ) ) | ( (lv_effect_1_0= ruleEffect ) ) ) )
            // InternalScadeEquations.g:4968:2: ( ( ( (lv_expression_0_1= ruleAnnotatedExpression | lv_expression_0_2= ruleAnnotatedJsonExpression ) ) ) | ( (lv_effect_1_0= ruleEffect ) ) )
            {
            // InternalScadeEquations.g:4968:2: ( ( ( (lv_expression_0_1= ruleAnnotatedExpression | lv_expression_0_2= ruleAnnotatedJsonExpression ) ) ) | ( (lv_effect_1_0= ruleEffect ) ) )
            int alt98=2;
            alt98 = dfa98.predict(input);
            switch (alt98) {
                case 1 :
                    // InternalScadeEquations.g:4969:3: ( ( (lv_expression_0_1= ruleAnnotatedExpression | lv_expression_0_2= ruleAnnotatedJsonExpression ) ) )
                    {
                    // InternalScadeEquations.g:4969:3: ( ( (lv_expression_0_1= ruleAnnotatedExpression | lv_expression_0_2= ruleAnnotatedJsonExpression ) ) )
                    // InternalScadeEquations.g:4970:4: ( (lv_expression_0_1= ruleAnnotatedExpression | lv_expression_0_2= ruleAnnotatedJsonExpression ) )
                    {
                    // InternalScadeEquations.g:4970:4: ( (lv_expression_0_1= ruleAnnotatedExpression | lv_expression_0_2= ruleAnnotatedJsonExpression ) )
                    // InternalScadeEquations.g:4971:5: (lv_expression_0_1= ruleAnnotatedExpression | lv_expression_0_2= ruleAnnotatedJsonExpression )
                    {
                    // InternalScadeEquations.g:4971:5: (lv_expression_0_1= ruleAnnotatedExpression | lv_expression_0_2= ruleAnnotatedJsonExpression )
                    int alt97=2;
                    switch ( input.LA(1) ) {
                    case RULE_COMMENT_ANNOTATION:
                        {
                        int LA97_1 = input.LA(2);

                        if ( (synpred116_InternalScadeEquations()) ) {
                            alt97=1;
                        }
                        else if ( (true) ) {
                            alt97=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 97, 1, input);

                            throw nvae;
                        }
                        }
                        break;
                    case 89:
                        {
                        int LA97_2 = input.LA(2);

                        if ( (synpred116_InternalScadeEquations()) ) {
                            alt97=1;
                        }
                        else if ( (true) ) {
                            alt97=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 97, 2, input);

                            throw nvae;
                        }
                        }
                        break;
                    case 63:
                        {
                        alt97=1;
                        }
                        break;
                    case 64:
                        {
                        alt97=2;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 97, 0, input);

                        throw nvae;
                    }

                    switch (alt97) {
                        case 1 :
                            // InternalScadeEquations.g:4972:6: lv_expression_0_1= ruleAnnotatedExpression
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTestEntityAccess().getExpressionAnnotatedExpressionParserRuleCall_0_0_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_expression_0_1=ruleAnnotatedExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTestEntityRule());
                              						}
                              						set(
                              							current,
                              							"expression",
                              							lv_expression_0_1,
                              							"de.cau.cs.kieler.kexpressions.kext.KExt.AnnotatedExpression");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalScadeEquations.g:4988:6: lv_expression_0_2= ruleAnnotatedJsonExpression
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTestEntityAccess().getExpressionAnnotatedJsonExpressionParserRuleCall_0_0_1());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_expression_0_2=ruleAnnotatedJsonExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTestEntityRule());
                              						}
                              						set(
                              							current,
                              							"expression",
                              							lv_expression_0_2,
                              							"de.cau.cs.kieler.kexpressions.kext.KExt.AnnotatedJsonExpression");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:5007:3: ( (lv_effect_1_0= ruleEffect ) )
                    {
                    // InternalScadeEquations.g:5007:3: ( (lv_effect_1_0= ruleEffect ) )
                    // InternalScadeEquations.g:5008:4: (lv_effect_1_0= ruleEffect )
                    {
                    // InternalScadeEquations.g:5008:4: (lv_effect_1_0= ruleEffect )
                    // InternalScadeEquations.g:5009:5: lv_effect_1_0= ruleEffect
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTestEntityAccess().getEffectEffectParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_effect_1_0=ruleEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTestEntityRule());
                      					}
                      					set(
                      						current,
                      						"effect",
                      						lv_effect_1_0,
                      						"de.cau.cs.kieler.kexpressions.keffects.KEffects.Effect");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTestEntity"


    // $ANTLR start "entryRuleAnnotatedExpression"
    // InternalScadeEquations.g:5030:1: entryRuleAnnotatedExpression returns [EObject current=null] : iv_ruleAnnotatedExpression= ruleAnnotatedExpression EOF ;
    public final EObject entryRuleAnnotatedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotatedExpression = null;


        try {
            // InternalScadeEquations.g:5030:60: (iv_ruleAnnotatedExpression= ruleAnnotatedExpression EOF )
            // InternalScadeEquations.g:5031:2: iv_ruleAnnotatedExpression= ruleAnnotatedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotatedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAnnotatedExpression=ruleAnnotatedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotatedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotatedExpression"


    // $ANTLR start "ruleAnnotatedExpression"
    // InternalScadeEquations.g:5037:1: ruleAnnotatedExpression returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'expression' ( (lv_expression_2_0= ruleExpression ) ) ) ;
    public final EObject ruleAnnotatedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_expression_2_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:5043:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'expression' ( (lv_expression_2_0= ruleExpression ) ) ) )
            // InternalScadeEquations.g:5044:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'expression' ( (lv_expression_2_0= ruleExpression ) ) )
            {
            // InternalScadeEquations.g:5044:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'expression' ( (lv_expression_2_0= ruleExpression ) ) )
            // InternalScadeEquations.g:5045:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'expression' ( (lv_expression_2_0= ruleExpression ) )
            {
            // InternalScadeEquations.g:5045:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop99:
            do {
                int alt99=2;
                int LA99_0 = input.LA(1);

                if ( (LA99_0==RULE_COMMENT_ANNOTATION||LA99_0==89) ) {
                    alt99=1;
                }


                switch (alt99) {
            	case 1 :
            	    // InternalScadeEquations.g:5046:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalScadeEquations.g:5046:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalScadeEquations.g:5047:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAnnotatedExpressionAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_67);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAnnotatedExpressionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop99;
                }
            } while (true);

            otherlv_1=(Token)match(input,63,FollowSets000.FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAnnotatedExpressionAccess().getExpressionKeyword_1());
              		
            }
            // InternalScadeEquations.g:5068:3: ( (lv_expression_2_0= ruleExpression ) )
            // InternalScadeEquations.g:5069:4: (lv_expression_2_0= ruleExpression )
            {
            // InternalScadeEquations.g:5069:4: (lv_expression_2_0= ruleExpression )
            // InternalScadeEquations.g:5070:5: lv_expression_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAnnotatedExpressionAccess().getExpressionExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_expression_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAnnotatedExpressionRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnnotatedExpression"


    // $ANTLR start "entryRuleAnnotatedJsonExpression"
    // InternalScadeEquations.g:5091:1: entryRuleAnnotatedJsonExpression returns [EObject current=null] : iv_ruleAnnotatedJsonExpression= ruleAnnotatedJsonExpression EOF ;
    public final EObject entryRuleAnnotatedJsonExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotatedJsonExpression = null;


        try {
            // InternalScadeEquations.g:5091:64: (iv_ruleAnnotatedJsonExpression= ruleAnnotatedJsonExpression EOF )
            // InternalScadeEquations.g:5092:2: iv_ruleAnnotatedJsonExpression= ruleAnnotatedJsonExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotatedJsonExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAnnotatedJsonExpression=ruleAnnotatedJsonExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotatedJsonExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotatedJsonExpression"


    // $ANTLR start "ruleAnnotatedJsonExpression"
    // InternalScadeEquations.g:5098:1: ruleAnnotatedJsonExpression returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'json' ( (lv_expression_2_0= ruleJsonObjectValue ) ) ) ;
    public final EObject ruleAnnotatedJsonExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_expression_2_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:5104:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'json' ( (lv_expression_2_0= ruleJsonObjectValue ) ) ) )
            // InternalScadeEquations.g:5105:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'json' ( (lv_expression_2_0= ruleJsonObjectValue ) ) )
            {
            // InternalScadeEquations.g:5105:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'json' ( (lv_expression_2_0= ruleJsonObjectValue ) ) )
            // InternalScadeEquations.g:5106:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'json' ( (lv_expression_2_0= ruleJsonObjectValue ) )
            {
            // InternalScadeEquations.g:5106:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop100:
            do {
                int alt100=2;
                int LA100_0 = input.LA(1);

                if ( (LA100_0==RULE_COMMENT_ANNOTATION||LA100_0==89) ) {
                    alt100=1;
                }


                switch (alt100) {
            	case 1 :
            	    // InternalScadeEquations.g:5107:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalScadeEquations.g:5107:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalScadeEquations.g:5108:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAnnotatedJsonExpressionAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_68);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAnnotatedJsonExpressionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop100;
                }
            } while (true);

            otherlv_1=(Token)match(input,64,FollowSets000.FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAnnotatedJsonExpressionAccess().getJsonKeyword_1());
              		
            }
            // InternalScadeEquations.g:5129:3: ( (lv_expression_2_0= ruleJsonObjectValue ) )
            // InternalScadeEquations.g:5130:4: (lv_expression_2_0= ruleJsonObjectValue )
            {
            // InternalScadeEquations.g:5130:4: (lv_expression_2_0= ruleJsonObjectValue )
            // InternalScadeEquations.g:5131:5: lv_expression_2_0= ruleJsonObjectValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAnnotatedJsonExpressionAccess().getExpressionJsonObjectValueParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_expression_2_0=ruleJsonObjectValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAnnotatedJsonExpressionRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.JsonObjectValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnnotatedJsonExpression"


    // $ANTLR start "entryRuleDeclaration"
    // InternalScadeEquations.g:5152:1: entryRuleDeclaration returns [EObject current=null] : iv_ruleDeclaration= ruleDeclaration EOF ;
    public final EObject entryRuleDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDeclaration = null;


        try {
            // InternalScadeEquations.g:5152:52: (iv_ruleDeclaration= ruleDeclaration EOF )
            // InternalScadeEquations.g:5153:2: iv_ruleDeclaration= ruleDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDeclaration=ruleDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDeclaration"


    // $ANTLR start "ruleDeclaration"
    // InternalScadeEquations.g:5159:1: ruleDeclaration returns [EObject current=null] : (this_VariableDeclaration_0= ruleVariableDeclaration | this_ReferenceDeclaration_1= ruleReferenceDeclaration | this_ScheduleDeclaration_2= ruleScheduleDeclaration | this_ClassDeclaration_3= ruleClassDeclaration ) ;
    public final EObject ruleDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_VariableDeclaration_0 = null;

        EObject this_ReferenceDeclaration_1 = null;

        EObject this_ScheduleDeclaration_2 = null;

        EObject this_ClassDeclaration_3 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:5165:2: ( (this_VariableDeclaration_0= ruleVariableDeclaration | this_ReferenceDeclaration_1= ruleReferenceDeclaration | this_ScheduleDeclaration_2= ruleScheduleDeclaration | this_ClassDeclaration_3= ruleClassDeclaration ) )
            // InternalScadeEquations.g:5166:2: (this_VariableDeclaration_0= ruleVariableDeclaration | this_ReferenceDeclaration_1= ruleReferenceDeclaration | this_ScheduleDeclaration_2= ruleScheduleDeclaration | this_ClassDeclaration_3= ruleClassDeclaration )
            {
            // InternalScadeEquations.g:5166:2: (this_VariableDeclaration_0= ruleVariableDeclaration | this_ReferenceDeclaration_1= ruleReferenceDeclaration | this_ScheduleDeclaration_2= ruleScheduleDeclaration | this_ClassDeclaration_3= ruleClassDeclaration )
            int alt101=4;
            alt101 = dfa101.predict(input);
            switch (alt101) {
                case 1 :
                    // InternalScadeEquations.g:5167:3: this_VariableDeclaration_0= ruleVariableDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationAccess().getVariableDeclarationParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_VariableDeclaration_0=ruleVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_VariableDeclaration_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:5179:3: this_ReferenceDeclaration_1= ruleReferenceDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationAccess().getReferenceDeclarationParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ReferenceDeclaration_1=ruleReferenceDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ReferenceDeclaration_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalScadeEquations.g:5191:3: this_ScheduleDeclaration_2= ruleScheduleDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationAccess().getScheduleDeclarationParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ScheduleDeclaration_2=ruleScheduleDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ScheduleDeclaration_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalScadeEquations.g:5203:3: this_ClassDeclaration_3= ruleClassDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationAccess().getClassDeclarationParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ClassDeclaration_3=ruleClassDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ClassDeclaration_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDeclaration"


    // $ANTLR start "entryRuleDeclarationWOSemicolon"
    // InternalScadeEquations.g:5218:1: entryRuleDeclarationWOSemicolon returns [EObject current=null] : iv_ruleDeclarationWOSemicolon= ruleDeclarationWOSemicolon EOF ;
    public final EObject entryRuleDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDeclarationWOSemicolon = null;


        try {
            // InternalScadeEquations.g:5218:63: (iv_ruleDeclarationWOSemicolon= ruleDeclarationWOSemicolon EOF )
            // InternalScadeEquations.g:5219:2: iv_ruleDeclarationWOSemicolon= ruleDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDeclarationWOSemicolon=ruleDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDeclarationWOSemicolon"


    // $ANTLR start "ruleDeclarationWOSemicolon"
    // InternalScadeEquations.g:5225:1: ruleDeclarationWOSemicolon returns [EObject current=null] : (this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon | this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon | this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon | this_ClassDeclarationWOSemicolon_3= ruleClassDeclarationWOSemicolon ) ;
    public final EObject ruleDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject this_VariableDeclarationWOSemicolon_0 = null;

        EObject this_ReferenceDeclarationWOSemicolon_1 = null;

        EObject this_ScheduleDeclarationWOSemicolon_2 = null;

        EObject this_ClassDeclarationWOSemicolon_3 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:5231:2: ( (this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon | this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon | this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon | this_ClassDeclarationWOSemicolon_3= ruleClassDeclarationWOSemicolon ) )
            // InternalScadeEquations.g:5232:2: (this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon | this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon | this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon | this_ClassDeclarationWOSemicolon_3= ruleClassDeclarationWOSemicolon )
            {
            // InternalScadeEquations.g:5232:2: (this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon | this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon | this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon | this_ClassDeclarationWOSemicolon_3= ruleClassDeclarationWOSemicolon )
            int alt102=4;
            alt102 = dfa102.predict(input);
            switch (alt102) {
                case 1 :
                    // InternalScadeEquations.g:5233:3: this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationWOSemicolonAccess().getVariableDeclarationWOSemicolonParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_VariableDeclarationWOSemicolon_0=ruleVariableDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_VariableDeclarationWOSemicolon_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:5245:3: this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationWOSemicolonAccess().getReferenceDeclarationWOSemicolonParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ReferenceDeclarationWOSemicolon_1=ruleReferenceDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ReferenceDeclarationWOSemicolon_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalScadeEquations.g:5257:3: this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationWOSemicolonAccess().getScheduleDeclarationWOSemicolonParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ScheduleDeclarationWOSemicolon_2=ruleScheduleDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ScheduleDeclarationWOSemicolon_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalScadeEquations.g:5269:3: this_ClassDeclarationWOSemicolon_3= ruleClassDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationWOSemicolonAccess().getClassDeclarationWOSemicolonParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ClassDeclarationWOSemicolon_3=ruleClassDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ClassDeclarationWOSemicolon_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDeclarationWOSemicolon"


    // $ANTLR start "entryRuleVariableDeclaration"
    // InternalScadeEquations.g:5284:1: entryRuleVariableDeclaration returns [EObject current=null] : iv_ruleVariableDeclaration= ruleVariableDeclaration EOF ;
    public final EObject entryRuleVariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVariableDeclaration = null;


        try {
            // InternalScadeEquations.g:5284:60: (iv_ruleVariableDeclaration= ruleVariableDeclaration EOF )
            // InternalScadeEquations.g:5285:2: iv_ruleVariableDeclaration= ruleVariableDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVariableDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleVariableDeclaration=ruleVariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVariableDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVariableDeclaration"


    // $ANTLR start "ruleVariableDeclaration"
    // InternalScadeEquations.g:5291:1: ruleVariableDeclaration returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* otherlv_15= ';' ( (lv_annotations_16_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleVariableDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_const_2_0=null;
        Token lv_input_3_0=null;
        Token lv_output_4_0=null;
        Token lv_global_5_0=null;
        Token lv_static_6_0=null;
        Token lv_signal_7_0=null;
        Token lv_signal_9_0=null;
        Token lv_hostType_11_0=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        EObject lv_annotations_0_0 = null;

        Enumerator lv_access_1_0 = null;

        Enumerator lv_type_8_0 = null;

        Enumerator lv_type_10_0 = null;

        EObject lv_valuedObjects_12_0 = null;

        EObject lv_valuedObjects_14_0 = null;

        EObject lv_annotations_16_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:5297:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* otherlv_15= ';' ( (lv_annotations_16_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalScadeEquations.g:5298:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* otherlv_15= ';' ( (lv_annotations_16_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalScadeEquations.g:5298:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* otherlv_15= ';' ( (lv_annotations_16_0= ruleCommentAnnotatonSL ) )? )
            // InternalScadeEquations.g:5299:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* otherlv_15= ';' ( (lv_annotations_16_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalScadeEquations.g:5299:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop103:
            do {
                int alt103=2;
                int LA103_0 = input.LA(1);

                if ( (LA103_0==RULE_COMMENT_ANNOTATION||LA103_0==89) ) {
                    alt103=1;
                }


                switch (alt103) {
            	case 1 :
            	    // InternalScadeEquations.g:5300:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalScadeEquations.g:5300:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalScadeEquations.g:5301:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getVariableDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_69);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop103;
                }
            } while (true);

            // InternalScadeEquations.g:5318:3: ( (lv_access_1_0= ruleAccessModifier ) )?
            int alt104=2;
            int LA104_0 = input.LA(1);

            if ( ((LA104_0>=117 && LA104_0<=119)) ) {
                alt104=1;
            }
            switch (alt104) {
                case 1 :
                    // InternalScadeEquations.g:5319:4: (lv_access_1_0= ruleAccessModifier )
                    {
                    // InternalScadeEquations.g:5319:4: (lv_access_1_0= ruleAccessModifier )
                    // InternalScadeEquations.g:5320:5: lv_access_1_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getVariableDeclarationAccess().getAccessAccessModifierEnumRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_69);
                    lv_access_1_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_1_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:5337:3: ( (lv_const_2_0= 'const' ) )?
            int alt105=2;
            int LA105_0 = input.LA(1);

            if ( (LA105_0==33) ) {
                alt105=1;
            }
            switch (alt105) {
                case 1 :
                    // InternalScadeEquations.g:5338:4: (lv_const_2_0= 'const' )
                    {
                    // InternalScadeEquations.g:5338:4: (lv_const_2_0= 'const' )
                    // InternalScadeEquations.g:5339:5: lv_const_2_0= 'const'
                    {
                    lv_const_2_0=(Token)match(input,33,FollowSets000.FOLLOW_69); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_const_2_0, grammarAccess.getVariableDeclarationAccess().getConstConstKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "const", true, "const");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:5351:3: ( (lv_input_3_0= 'input' ) )?
            int alt106=2;
            int LA106_0 = input.LA(1);

            if ( (LA106_0==65) ) {
                alt106=1;
            }
            switch (alt106) {
                case 1 :
                    // InternalScadeEquations.g:5352:4: (lv_input_3_0= 'input' )
                    {
                    // InternalScadeEquations.g:5352:4: (lv_input_3_0= 'input' )
                    // InternalScadeEquations.g:5353:5: lv_input_3_0= 'input'
                    {
                    lv_input_3_0=(Token)match(input,65,FollowSets000.FOLLOW_69); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_input_3_0, grammarAccess.getVariableDeclarationAccess().getInputInputKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "input", true, "input");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:5365:3: ( (lv_output_4_0= 'output' ) )?
            int alt107=2;
            int LA107_0 = input.LA(1);

            if ( (LA107_0==66) ) {
                alt107=1;
            }
            switch (alt107) {
                case 1 :
                    // InternalScadeEquations.g:5366:4: (lv_output_4_0= 'output' )
                    {
                    // InternalScadeEquations.g:5366:4: (lv_output_4_0= 'output' )
                    // InternalScadeEquations.g:5367:5: lv_output_4_0= 'output'
                    {
                    lv_output_4_0=(Token)match(input,66,FollowSets000.FOLLOW_69); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_output_4_0, grammarAccess.getVariableDeclarationAccess().getOutputOutputKeyword_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "output", true, "output");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:5379:3: ( (lv_global_5_0= 'global' ) )?
            int alt108=2;
            int LA108_0 = input.LA(1);

            if ( (LA108_0==67) ) {
                alt108=1;
            }
            switch (alt108) {
                case 1 :
                    // InternalScadeEquations.g:5380:4: (lv_global_5_0= 'global' )
                    {
                    // InternalScadeEquations.g:5380:4: (lv_global_5_0= 'global' )
                    // InternalScadeEquations.g:5381:5: lv_global_5_0= 'global'
                    {
                    lv_global_5_0=(Token)match(input,67,FollowSets000.FOLLOW_69); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_global_5_0, grammarAccess.getVariableDeclarationAccess().getGlobalGlobalKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "global", true, "global");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:5393:3: ( (lv_static_6_0= 'static' ) )?
            int alt109=2;
            int LA109_0 = input.LA(1);

            if ( (LA109_0==68) ) {
                alt109=1;
            }
            switch (alt109) {
                case 1 :
                    // InternalScadeEquations.g:5394:4: (lv_static_6_0= 'static' )
                    {
                    // InternalScadeEquations.g:5394:4: (lv_static_6_0= 'static' )
                    // InternalScadeEquations.g:5395:5: lv_static_6_0= 'static'
                    {
                    lv_static_6_0=(Token)match(input,68,FollowSets000.FOLLOW_69); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_static_6_0, grammarAccess.getVariableDeclarationAccess().getStaticStaticKeyword_6_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "static", true, "static");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:5407:3: ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) )
            int alt111=3;
            switch ( input.LA(1) ) {
            case 69:
                {
                int LA111_1 = input.LA(2);

                if ( (LA111_1==RULE_ID||LA111_1==RULE_COMMENT_ANNOTATION||LA111_1==89) ) {
                    alt111=2;
                }
                else if ( ((LA111_1>=90 && LA111_1<=92)) ) {
                    alt111=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 111, 1, input);

                    throw nvae;
                }
                }
                break;
            case 90:
            case 91:
            case 92:
                {
                alt111=1;
                }
                break;
            case 70:
                {
                alt111=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 111, 0, input);

                throw nvae;
            }

            switch (alt111) {
                case 1 :
                    // InternalScadeEquations.g:5408:4: ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) )
                    {
                    // InternalScadeEquations.g:5408:4: ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) )
                    // InternalScadeEquations.g:5409:5: ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) )
                    {
                    // InternalScadeEquations.g:5409:5: ( (lv_signal_7_0= 'signal' ) )?
                    int alt110=2;
                    int LA110_0 = input.LA(1);

                    if ( (LA110_0==69) ) {
                        alt110=1;
                    }
                    switch (alt110) {
                        case 1 :
                            // InternalScadeEquations.g:5410:6: (lv_signal_7_0= 'signal' )
                            {
                            // InternalScadeEquations.g:5410:6: (lv_signal_7_0= 'signal' )
                            // InternalScadeEquations.g:5411:7: lv_signal_7_0= 'signal'
                            {
                            lv_signal_7_0=(Token)match(input,69,FollowSets000.FOLLOW_27); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_signal_7_0, grammarAccess.getVariableDeclarationAccess().getSignalSignalKeyword_7_0_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getVariableDeclarationRule());
                              							}
                              							setWithLastConsumed(current, "signal", true, "signal");
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalScadeEquations.g:5423:5: ( (lv_type_8_0= ruleValueType ) )
                    // InternalScadeEquations.g:5424:6: (lv_type_8_0= ruleValueType )
                    {
                    // InternalScadeEquations.g:5424:6: (lv_type_8_0= ruleValueType )
                    // InternalScadeEquations.g:5425:7: lv_type_8_0= ruleValueType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getVariableDeclarationAccess().getTypeValueTypeEnumRuleCall_7_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_35);
                    lv_type_8_0=ruleValueType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_8_0,
                      								"de.cau.cs.kieler.lustre.Lustre.ValueType");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:5444:4: ( (lv_signal_9_0= 'signal' ) )
                    {
                    // InternalScadeEquations.g:5444:4: ( (lv_signal_9_0= 'signal' ) )
                    // InternalScadeEquations.g:5445:5: (lv_signal_9_0= 'signal' )
                    {
                    // InternalScadeEquations.g:5445:5: (lv_signal_9_0= 'signal' )
                    // InternalScadeEquations.g:5446:6: lv_signal_9_0= 'signal'
                    {
                    lv_signal_9_0=(Token)match(input,69,FollowSets000.FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_signal_9_0, grammarAccess.getVariableDeclarationAccess().getSignalSignalKeyword_7_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      						}
                      						setWithLastConsumed(current, "signal", true, "signal");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalScadeEquations.g:5459:4: ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) )
                    {
                    // InternalScadeEquations.g:5459:4: ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) )
                    // InternalScadeEquations.g:5460:5: ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) )
                    {
                    // InternalScadeEquations.g:5460:5: ( (lv_type_10_0= ruleHostType ) )
                    // InternalScadeEquations.g:5461:6: (lv_type_10_0= ruleHostType )
                    {
                    // InternalScadeEquations.g:5461:6: (lv_type_10_0= ruleHostType )
                    // InternalScadeEquations.g:5462:7: lv_type_10_0= ruleHostType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getVariableDeclarationAccess().getTypeHostTypeEnumRuleCall_7_2_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_70);
                    lv_type_10_0=ruleHostType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_10_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.HostType");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:5479:5: ( (lv_hostType_11_0= RULE_STRING ) )
                    // InternalScadeEquations.g:5480:6: (lv_hostType_11_0= RULE_STRING )
                    {
                    // InternalScadeEquations.g:5480:6: (lv_hostType_11_0= RULE_STRING )
                    // InternalScadeEquations.g:5481:7: lv_hostType_11_0= RULE_STRING
                    {
                    lv_hostType_11_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_hostType_11_0, grammarAccess.getVariableDeclarationAccess().getHostTypeSTRINGTerminalRuleCall_7_2_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"hostType",
                      								lv_hostType_11_0,
                      								"de.cau.cs.kieler.annotations.Annotations.STRING");
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:5499:3: ( (lv_valuedObjects_12_0= ruleValuedObject ) )
            // InternalScadeEquations.g:5500:4: (lv_valuedObjects_12_0= ruleValuedObject )
            {
            // InternalScadeEquations.g:5500:4: (lv_valuedObjects_12_0= ruleValuedObject )
            // InternalScadeEquations.g:5501:5: lv_valuedObjects_12_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getVariableDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_8_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_71);
            lv_valuedObjects_12_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_12_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:5518:3: (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )*
            loop112:
            do {
                int alt112=2;
                int LA112_0 = input.LA(1);

                if ( (LA112_0==18) ) {
                    alt112=1;
                }


                switch (alt112) {
            	case 1 :
            	    // InternalScadeEquations.g:5519:4: otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) )
            	    {
            	    otherlv_13=(Token)match(input,18,FollowSets000.FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_13, grammarAccess.getVariableDeclarationAccess().getCommaKeyword_9_0());
            	      			
            	    }
            	    // InternalScadeEquations.g:5523:4: ( (lv_valuedObjects_14_0= ruleValuedObject ) )
            	    // InternalScadeEquations.g:5524:5: (lv_valuedObjects_14_0= ruleValuedObject )
            	    {
            	    // InternalScadeEquations.g:5524:5: (lv_valuedObjects_14_0= ruleValuedObject )
            	    // InternalScadeEquations.g:5525:6: lv_valuedObjects_14_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getVariableDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_9_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_71);
            	    lv_valuedObjects_14_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"valuedObjects",
            	      							lv_valuedObjects_14_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop112;
                }
            } while (true);

            otherlv_15=(Token)match(input,20,FollowSets000.FOLLOW_72); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_15, grammarAccess.getVariableDeclarationAccess().getSemicolonKeyword_10());
              		
            }
            // InternalScadeEquations.g:5547:3: ( (lv_annotations_16_0= ruleCommentAnnotatonSL ) )?
            int alt113=2;
            int LA113_0 = input.LA(1);

            if ( (LA113_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt113=1;
            }
            switch (alt113) {
                case 1 :
                    // InternalScadeEquations.g:5548:4: (lv_annotations_16_0= ruleCommentAnnotatonSL )
                    {
                    // InternalScadeEquations.g:5548:4: (lv_annotations_16_0= ruleCommentAnnotatonSL )
                    // InternalScadeEquations.g:5549:5: lv_annotations_16_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getVariableDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_11_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_16_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_16_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVariableDeclaration"


    // $ANTLR start "entryRuleVariableDeclarationWOSemicolon"
    // InternalScadeEquations.g:5570:1: entryRuleVariableDeclarationWOSemicolon returns [EObject current=null] : iv_ruleVariableDeclarationWOSemicolon= ruleVariableDeclarationWOSemicolon EOF ;
    public final EObject entryRuleVariableDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVariableDeclarationWOSemicolon = null;


        try {
            // InternalScadeEquations.g:5570:71: (iv_ruleVariableDeclarationWOSemicolon= ruleVariableDeclarationWOSemicolon EOF )
            // InternalScadeEquations.g:5571:2: iv_ruleVariableDeclarationWOSemicolon= ruleVariableDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleVariableDeclarationWOSemicolon=ruleVariableDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVariableDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVariableDeclarationWOSemicolon"


    // $ANTLR start "ruleVariableDeclarationWOSemicolon"
    // InternalScadeEquations.g:5577:1: ruleVariableDeclarationWOSemicolon returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleVariableDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        Token lv_const_2_0=null;
        Token lv_input_3_0=null;
        Token lv_output_4_0=null;
        Token lv_global_5_0=null;
        Token lv_static_6_0=null;
        Token lv_signal_7_0=null;
        Token lv_signal_9_0=null;
        Token lv_hostType_11_0=null;
        Token otherlv_13=null;
        EObject lv_annotations_0_0 = null;

        Enumerator lv_access_1_0 = null;

        Enumerator lv_type_8_0 = null;

        Enumerator lv_type_10_0 = null;

        EObject lv_valuedObjects_12_0 = null;

        EObject lv_valuedObjects_14_0 = null;

        EObject lv_annotations_15_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:5583:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalScadeEquations.g:5584:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalScadeEquations.g:5584:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? )
            // InternalScadeEquations.g:5585:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalScadeEquations.g:5585:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop114:
            do {
                int alt114=2;
                int LA114_0 = input.LA(1);

                if ( (LA114_0==RULE_COMMENT_ANNOTATION||LA114_0==89) ) {
                    alt114=1;
                }


                switch (alt114) {
            	case 1 :
            	    // InternalScadeEquations.g:5586:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalScadeEquations.g:5586:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalScadeEquations.g:5587:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_69);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop114;
                }
            } while (true);

            // InternalScadeEquations.g:5604:3: ( (lv_access_1_0= ruleAccessModifier ) )?
            int alt115=2;
            int LA115_0 = input.LA(1);

            if ( ((LA115_0>=117 && LA115_0<=119)) ) {
                alt115=1;
            }
            switch (alt115) {
                case 1 :
                    // InternalScadeEquations.g:5605:4: (lv_access_1_0= ruleAccessModifier )
                    {
                    // InternalScadeEquations.g:5605:4: (lv_access_1_0= ruleAccessModifier )
                    // InternalScadeEquations.g:5606:5: lv_access_1_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getAccessAccessModifierEnumRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_69);
                    lv_access_1_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_1_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:5623:3: ( (lv_const_2_0= 'const' ) )?
            int alt116=2;
            int LA116_0 = input.LA(1);

            if ( (LA116_0==33) ) {
                alt116=1;
            }
            switch (alt116) {
                case 1 :
                    // InternalScadeEquations.g:5624:4: (lv_const_2_0= 'const' )
                    {
                    // InternalScadeEquations.g:5624:4: (lv_const_2_0= 'const' )
                    // InternalScadeEquations.g:5625:5: lv_const_2_0= 'const'
                    {
                    lv_const_2_0=(Token)match(input,33,FollowSets000.FOLLOW_69); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_const_2_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getConstConstKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "const", true, "const");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:5637:3: ( (lv_input_3_0= 'input' ) )?
            int alt117=2;
            int LA117_0 = input.LA(1);

            if ( (LA117_0==65) ) {
                alt117=1;
            }
            switch (alt117) {
                case 1 :
                    // InternalScadeEquations.g:5638:4: (lv_input_3_0= 'input' )
                    {
                    // InternalScadeEquations.g:5638:4: (lv_input_3_0= 'input' )
                    // InternalScadeEquations.g:5639:5: lv_input_3_0= 'input'
                    {
                    lv_input_3_0=(Token)match(input,65,FollowSets000.FOLLOW_69); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_input_3_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getInputInputKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "input", true, "input");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:5651:3: ( (lv_output_4_0= 'output' ) )?
            int alt118=2;
            int LA118_0 = input.LA(1);

            if ( (LA118_0==66) ) {
                alt118=1;
            }
            switch (alt118) {
                case 1 :
                    // InternalScadeEquations.g:5652:4: (lv_output_4_0= 'output' )
                    {
                    // InternalScadeEquations.g:5652:4: (lv_output_4_0= 'output' )
                    // InternalScadeEquations.g:5653:5: lv_output_4_0= 'output'
                    {
                    lv_output_4_0=(Token)match(input,66,FollowSets000.FOLLOW_69); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_output_4_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getOutputOutputKeyword_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "output", true, "output");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:5665:3: ( (lv_global_5_0= 'global' ) )?
            int alt119=2;
            int LA119_0 = input.LA(1);

            if ( (LA119_0==67) ) {
                alt119=1;
            }
            switch (alt119) {
                case 1 :
                    // InternalScadeEquations.g:5666:4: (lv_global_5_0= 'global' )
                    {
                    // InternalScadeEquations.g:5666:4: (lv_global_5_0= 'global' )
                    // InternalScadeEquations.g:5667:5: lv_global_5_0= 'global'
                    {
                    lv_global_5_0=(Token)match(input,67,FollowSets000.FOLLOW_69); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_global_5_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getGlobalGlobalKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "global", true, "global");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:5679:3: ( (lv_static_6_0= 'static' ) )?
            int alt120=2;
            int LA120_0 = input.LA(1);

            if ( (LA120_0==68) ) {
                alt120=1;
            }
            switch (alt120) {
                case 1 :
                    // InternalScadeEquations.g:5680:4: (lv_static_6_0= 'static' )
                    {
                    // InternalScadeEquations.g:5680:4: (lv_static_6_0= 'static' )
                    // InternalScadeEquations.g:5681:5: lv_static_6_0= 'static'
                    {
                    lv_static_6_0=(Token)match(input,68,FollowSets000.FOLLOW_69); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_static_6_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getStaticStaticKeyword_6_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "static", true, "static");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:5693:3: ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) )
            int alt122=3;
            switch ( input.LA(1) ) {
            case 69:
                {
                int LA122_1 = input.LA(2);

                if ( ((LA122_1>=90 && LA122_1<=92)) ) {
                    alt122=1;
                }
                else if ( (LA122_1==RULE_ID||LA122_1==RULE_COMMENT_ANNOTATION||LA122_1==89) ) {
                    alt122=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 122, 1, input);

                    throw nvae;
                }
                }
                break;
            case 90:
            case 91:
            case 92:
                {
                alt122=1;
                }
                break;
            case 70:
                {
                alt122=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 122, 0, input);

                throw nvae;
            }

            switch (alt122) {
                case 1 :
                    // InternalScadeEquations.g:5694:4: ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) )
                    {
                    // InternalScadeEquations.g:5694:4: ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) )
                    // InternalScadeEquations.g:5695:5: ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) )
                    {
                    // InternalScadeEquations.g:5695:5: ( (lv_signal_7_0= 'signal' ) )?
                    int alt121=2;
                    int LA121_0 = input.LA(1);

                    if ( (LA121_0==69) ) {
                        alt121=1;
                    }
                    switch (alt121) {
                        case 1 :
                            // InternalScadeEquations.g:5696:6: (lv_signal_7_0= 'signal' )
                            {
                            // InternalScadeEquations.g:5696:6: (lv_signal_7_0= 'signal' )
                            // InternalScadeEquations.g:5697:7: lv_signal_7_0= 'signal'
                            {
                            lv_signal_7_0=(Token)match(input,69,FollowSets000.FOLLOW_27); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_signal_7_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getSignalSignalKeyword_7_0_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                              							}
                              							setWithLastConsumed(current, "signal", true, "signal");
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalScadeEquations.g:5709:5: ( (lv_type_8_0= ruleValueType ) )
                    // InternalScadeEquations.g:5710:6: (lv_type_8_0= ruleValueType )
                    {
                    // InternalScadeEquations.g:5710:6: (lv_type_8_0= ruleValueType )
                    // InternalScadeEquations.g:5711:7: lv_type_8_0= ruleValueType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getTypeValueTypeEnumRuleCall_7_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_35);
                    lv_type_8_0=ruleValueType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_8_0,
                      								"de.cau.cs.kieler.lustre.Lustre.ValueType");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:5730:4: ( (lv_signal_9_0= 'signal' ) )
                    {
                    // InternalScadeEquations.g:5730:4: ( (lv_signal_9_0= 'signal' ) )
                    // InternalScadeEquations.g:5731:5: (lv_signal_9_0= 'signal' )
                    {
                    // InternalScadeEquations.g:5731:5: (lv_signal_9_0= 'signal' )
                    // InternalScadeEquations.g:5732:6: lv_signal_9_0= 'signal'
                    {
                    lv_signal_9_0=(Token)match(input,69,FollowSets000.FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_signal_9_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getSignalSignalKeyword_7_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      						}
                      						setWithLastConsumed(current, "signal", true, "signal");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalScadeEquations.g:5745:4: ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) )
                    {
                    // InternalScadeEquations.g:5745:4: ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) )
                    // InternalScadeEquations.g:5746:5: ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) )
                    {
                    // InternalScadeEquations.g:5746:5: ( (lv_type_10_0= ruleHostType ) )
                    // InternalScadeEquations.g:5747:6: (lv_type_10_0= ruleHostType )
                    {
                    // InternalScadeEquations.g:5747:6: (lv_type_10_0= ruleHostType )
                    // InternalScadeEquations.g:5748:7: lv_type_10_0= ruleHostType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getTypeHostTypeEnumRuleCall_7_2_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_70);
                    lv_type_10_0=ruleHostType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_10_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.HostType");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:5765:5: ( (lv_hostType_11_0= RULE_STRING ) )
                    // InternalScadeEquations.g:5766:6: (lv_hostType_11_0= RULE_STRING )
                    {
                    // InternalScadeEquations.g:5766:6: (lv_hostType_11_0= RULE_STRING )
                    // InternalScadeEquations.g:5767:7: lv_hostType_11_0= RULE_STRING
                    {
                    lv_hostType_11_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_hostType_11_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getHostTypeSTRINGTerminalRuleCall_7_2_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"hostType",
                      								lv_hostType_11_0,
                      								"de.cau.cs.kieler.annotations.Annotations.STRING");
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:5785:3: ( (lv_valuedObjects_12_0= ruleValuedObject ) )
            // InternalScadeEquations.g:5786:4: (lv_valuedObjects_12_0= ruleValuedObject )
            {
            // InternalScadeEquations.g:5786:4: (lv_valuedObjects_12_0= ruleValuedObject )
            // InternalScadeEquations.g:5787:5: lv_valuedObjects_12_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_8_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_73);
            lv_valuedObjects_12_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_12_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:5804:3: (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )*
            loop123:
            do {
                int alt123=2;
                alt123 = dfa123.predict(input);
                switch (alt123) {
            	case 1 :
            	    // InternalScadeEquations.g:5805:4: otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) )
            	    {
            	    otherlv_13=(Token)match(input,18,FollowSets000.FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_13, grammarAccess.getVariableDeclarationWOSemicolonAccess().getCommaKeyword_9_0());
            	      			
            	    }
            	    // InternalScadeEquations.g:5809:4: ( (lv_valuedObjects_14_0= ruleValuedObject ) )
            	    // InternalScadeEquations.g:5810:5: (lv_valuedObjects_14_0= ruleValuedObject )
            	    {
            	    // InternalScadeEquations.g:5810:5: (lv_valuedObjects_14_0= ruleValuedObject )
            	    // InternalScadeEquations.g:5811:6: lv_valuedObjects_14_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_9_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_73);
            	    lv_valuedObjects_14_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
            	      						}
            	      						add(
            	      							current,
            	      							"valuedObjects",
            	      							lv_valuedObjects_14_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop123;
                }
            } while (true);

            // InternalScadeEquations.g:5829:3: ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )?
            int alt124=2;
            int LA124_0 = input.LA(1);

            if ( (LA124_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt124=1;
            }
            switch (alt124) {
                case 1 :
                    // InternalScadeEquations.g:5830:4: (lv_annotations_15_0= ruleCommentAnnotatonSL )
                    {
                    // InternalScadeEquations.g:5830:4: (lv_annotations_15_0= ruleCommentAnnotatonSL )
                    // InternalScadeEquations.g:5831:5: lv_annotations_15_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_10_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_15_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_15_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVariableDeclarationWOSemicolon"


    // $ANTLR start "entryRuleClassDeclaration"
    // InternalScadeEquations.g:5852:1: entryRuleClassDeclaration returns [EObject current=null] : iv_ruleClassDeclaration= ruleClassDeclaration EOF ;
    public final EObject entryRuleClassDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassDeclaration = null;


        try {
            // InternalScadeEquations.g:5852:57: (iv_ruleClassDeclaration= ruleClassDeclaration EOF )
            // InternalScadeEquations.g:5853:2: iv_ruleClassDeclaration= ruleClassDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleClassDeclaration=ruleClassDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassDeclaration"


    // $ANTLR start "ruleClassDeclaration"
    // InternalScadeEquations.g:5859:1: ruleClassDeclaration returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_host_8_0= 'host' ) )? ( ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= ruleEString ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationOrMethod ) )* otherlv_13= '}' ) | ( ( (lv_type_14_0= ruleStructType ) ) ( (lv_name_15_0= ruleEString ) )? otherlv_16= '{' ( (lv_declarations_17_0= ruleDeclaration ) )* otherlv_18= '}' ) ) ( ( (lv_valuedObjects_19_0= ruleValuedObject ) ) (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )* )? otherlv_22= ';' ( (lv_annotations_23_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleClassDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_const_3_0=null;
        Token lv_input_4_0=null;
        Token lv_output_5_0=null;
        Token lv_global_6_0=null;
        Token lv_static_7_0=null;
        Token lv_host_8_0=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        EObject lv_annotations_1_0 = null;

        Enumerator lv_access_2_0 = null;

        Enumerator lv_type_9_0 = null;

        AntlrDatatypeRuleToken lv_name_10_0 = null;

        EObject lv_declarations_12_0 = null;

        Enumerator lv_type_14_0 = null;

        AntlrDatatypeRuleToken lv_name_15_0 = null;

        EObject lv_declarations_17_0 = null;

        EObject lv_valuedObjects_19_0 = null;

        EObject lv_valuedObjects_21_0 = null;

        EObject lv_annotations_23_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:5865:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_host_8_0= 'host' ) )? ( ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= ruleEString ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationOrMethod ) )* otherlv_13= '}' ) | ( ( (lv_type_14_0= ruleStructType ) ) ( (lv_name_15_0= ruleEString ) )? otherlv_16= '{' ( (lv_declarations_17_0= ruleDeclaration ) )* otherlv_18= '}' ) ) ( ( (lv_valuedObjects_19_0= ruleValuedObject ) ) (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )* )? otherlv_22= ';' ( (lv_annotations_23_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalScadeEquations.g:5866:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_host_8_0= 'host' ) )? ( ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= ruleEString ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationOrMethod ) )* otherlv_13= '}' ) | ( ( (lv_type_14_0= ruleStructType ) ) ( (lv_name_15_0= ruleEString ) )? otherlv_16= '{' ( (lv_declarations_17_0= ruleDeclaration ) )* otherlv_18= '}' ) ) ( ( (lv_valuedObjects_19_0= ruleValuedObject ) ) (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )* )? otherlv_22= ';' ( (lv_annotations_23_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalScadeEquations.g:5866:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_host_8_0= 'host' ) )? ( ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= ruleEString ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationOrMethod ) )* otherlv_13= '}' ) | ( ( (lv_type_14_0= ruleStructType ) ) ( (lv_name_15_0= ruleEString ) )? otherlv_16= '{' ( (lv_declarations_17_0= ruleDeclaration ) )* otherlv_18= '}' ) ) ( ( (lv_valuedObjects_19_0= ruleValuedObject ) ) (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )* )? otherlv_22= ';' ( (lv_annotations_23_0= ruleCommentAnnotatonSL ) )? )
            // InternalScadeEquations.g:5867:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_host_8_0= 'host' ) )? ( ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= ruleEString ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationOrMethod ) )* otherlv_13= '}' ) | ( ( (lv_type_14_0= ruleStructType ) ) ( (lv_name_15_0= ruleEString ) )? otherlv_16= '{' ( (lv_declarations_17_0= ruleDeclaration ) )* otherlv_18= '}' ) ) ( ( (lv_valuedObjects_19_0= ruleValuedObject ) ) (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )* )? otherlv_22= ';' ( (lv_annotations_23_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalScadeEquations.g:5867:3: ()
            // InternalScadeEquations.g:5868:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getClassDeclarationAccess().getClassDeclarationAction_0(),
              					current);
              			
            }

            }

            // InternalScadeEquations.g:5877:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop125:
            do {
                int alt125=2;
                int LA125_0 = input.LA(1);

                if ( (LA125_0==RULE_COMMENT_ANNOTATION||LA125_0==89) ) {
                    alt125=1;
                }


                switch (alt125) {
            	case 1 :
            	    // InternalScadeEquations.g:5878:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalScadeEquations.g:5878:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalScadeEquations.g:5879:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getClassDeclarationAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_74);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop125;
                }
            } while (true);

            // InternalScadeEquations.g:5896:3: ( (lv_access_2_0= ruleAccessModifier ) )?
            int alt126=2;
            int LA126_0 = input.LA(1);

            if ( ((LA126_0>=117 && LA126_0<=119)) ) {
                alt126=1;
            }
            switch (alt126) {
                case 1 :
                    // InternalScadeEquations.g:5897:4: (lv_access_2_0= ruleAccessModifier )
                    {
                    // InternalScadeEquations.g:5897:4: (lv_access_2_0= ruleAccessModifier )
                    // InternalScadeEquations.g:5898:5: lv_access_2_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassDeclarationAccess().getAccessAccessModifierEnumRuleCall_2_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_75);
                    lv_access_2_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_2_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:5915:3: ( (lv_const_3_0= 'const' ) )?
            int alt127=2;
            int LA127_0 = input.LA(1);

            if ( (LA127_0==33) ) {
                alt127=1;
            }
            switch (alt127) {
                case 1 :
                    // InternalScadeEquations.g:5916:4: (lv_const_3_0= 'const' )
                    {
                    // InternalScadeEquations.g:5916:4: (lv_const_3_0= 'const' )
                    // InternalScadeEquations.g:5917:5: lv_const_3_0= 'const'
                    {
                    lv_const_3_0=(Token)match(input,33,FollowSets000.FOLLOW_76); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_const_3_0, grammarAccess.getClassDeclarationAccess().getConstConstKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "const", true, "const");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:5929:3: ( (lv_input_4_0= 'input' ) )?
            int alt128=2;
            int LA128_0 = input.LA(1);

            if ( (LA128_0==65) ) {
                alt128=1;
            }
            switch (alt128) {
                case 1 :
                    // InternalScadeEquations.g:5930:4: (lv_input_4_0= 'input' )
                    {
                    // InternalScadeEquations.g:5930:4: (lv_input_4_0= 'input' )
                    // InternalScadeEquations.g:5931:5: lv_input_4_0= 'input'
                    {
                    lv_input_4_0=(Token)match(input,65,FollowSets000.FOLLOW_77); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_input_4_0, grammarAccess.getClassDeclarationAccess().getInputInputKeyword_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "input", true, "input");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:5943:3: ( (lv_output_5_0= 'output' ) )?
            int alt129=2;
            int LA129_0 = input.LA(1);

            if ( (LA129_0==66) ) {
                alt129=1;
            }
            switch (alt129) {
                case 1 :
                    // InternalScadeEquations.g:5944:4: (lv_output_5_0= 'output' )
                    {
                    // InternalScadeEquations.g:5944:4: (lv_output_5_0= 'output' )
                    // InternalScadeEquations.g:5945:5: lv_output_5_0= 'output'
                    {
                    lv_output_5_0=(Token)match(input,66,FollowSets000.FOLLOW_78); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_output_5_0, grammarAccess.getClassDeclarationAccess().getOutputOutputKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "output", true, "output");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:5957:3: ( (lv_global_6_0= 'global' ) )?
            int alt130=2;
            int LA130_0 = input.LA(1);

            if ( (LA130_0==67) ) {
                alt130=1;
            }
            switch (alt130) {
                case 1 :
                    // InternalScadeEquations.g:5958:4: (lv_global_6_0= 'global' )
                    {
                    // InternalScadeEquations.g:5958:4: (lv_global_6_0= 'global' )
                    // InternalScadeEquations.g:5959:5: lv_global_6_0= 'global'
                    {
                    lv_global_6_0=(Token)match(input,67,FollowSets000.FOLLOW_79); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_global_6_0, grammarAccess.getClassDeclarationAccess().getGlobalGlobalKeyword_6_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "global", true, "global");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:5971:3: ( (lv_static_7_0= 'static' ) )?
            int alt131=2;
            int LA131_0 = input.LA(1);

            if ( (LA131_0==68) ) {
                alt131=1;
            }
            switch (alt131) {
                case 1 :
                    // InternalScadeEquations.g:5972:4: (lv_static_7_0= 'static' )
                    {
                    // InternalScadeEquations.g:5972:4: (lv_static_7_0= 'static' )
                    // InternalScadeEquations.g:5973:5: lv_static_7_0= 'static'
                    {
                    lv_static_7_0=(Token)match(input,68,FollowSets000.FOLLOW_80); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_static_7_0, grammarAccess.getClassDeclarationAccess().getStaticStaticKeyword_7_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "static", true, "static");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:5985:3: ( (lv_host_8_0= 'host' ) )?
            int alt132=2;
            int LA132_0 = input.LA(1);

            if ( (LA132_0==70) ) {
                alt132=1;
            }
            switch (alt132) {
                case 1 :
                    // InternalScadeEquations.g:5986:4: (lv_host_8_0= 'host' )
                    {
                    // InternalScadeEquations.g:5986:4: (lv_host_8_0= 'host' )
                    // InternalScadeEquations.g:5987:5: lv_host_8_0= 'host'
                    {
                    lv_host_8_0=(Token)match(input,70,FollowSets000.FOLLOW_81); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_host_8_0, grammarAccess.getClassDeclarationAccess().getHostHostKeyword_8_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "host", true, "host");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:5999:3: ( ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= ruleEString ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationOrMethod ) )* otherlv_13= '}' ) | ( ( (lv_type_14_0= ruleStructType ) ) ( (lv_name_15_0= ruleEString ) )? otherlv_16= '{' ( (lv_declarations_17_0= ruleDeclaration ) )* otherlv_18= '}' ) )
            int alt137=2;
            int LA137_0 = input.LA(1);

            if ( (LA137_0==113) ) {
                alt137=1;
            }
            else if ( (LA137_0==112) ) {
                alt137=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 137, 0, input);

                throw nvae;
            }
            switch (alt137) {
                case 1 :
                    // InternalScadeEquations.g:6000:4: ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= ruleEString ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationOrMethod ) )* otherlv_13= '}' )
                    {
                    // InternalScadeEquations.g:6000:4: ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= ruleEString ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationOrMethod ) )* otherlv_13= '}' )
                    // InternalScadeEquations.g:6001:5: ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= ruleEString ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationOrMethod ) )* otherlv_13= '}'
                    {
                    // InternalScadeEquations.g:6001:5: ( (lv_type_9_0= ruleClassType ) )
                    // InternalScadeEquations.g:6002:6: (lv_type_9_0= ruleClassType )
                    {
                    // InternalScadeEquations.g:6002:6: (lv_type_9_0= ruleClassType )
                    // InternalScadeEquations.g:6003:7: lv_type_9_0= ruleClassType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getClassDeclarationAccess().getTypeClassTypeEnumRuleCall_9_0_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_82);
                    lv_type_9_0=ruleClassType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_9_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ClassType");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:6020:5: ( (lv_name_10_0= ruleEString ) )?
                    int alt133=2;
                    int LA133_0 = input.LA(1);

                    if ( ((LA133_0>=RULE_ID && LA133_0<=RULE_STRING)) ) {
                        alt133=1;
                    }
                    switch (alt133) {
                        case 1 :
                            // InternalScadeEquations.g:6021:6: (lv_name_10_0= ruleEString )
                            {
                            // InternalScadeEquations.g:6021:6: (lv_name_10_0= ruleEString )
                            // InternalScadeEquations.g:6022:7: lv_name_10_0= ruleEString
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getClassDeclarationAccess().getNameEStringParserRuleCall_9_0_1_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_16);
                            lv_name_10_0=ruleEString();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
                              							}
                              							set(
                              								current,
                              								"name",
                              								lv_name_10_0,
                              								"de.cau.cs.kieler.annotations.Annotations.EString");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }

                    otherlv_11=(Token)match(input,22,FollowSets000.FOLLOW_83); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_11, grammarAccess.getClassDeclarationAccess().getLeftCurlyBracketKeyword_9_0_2());
                      				
                    }
                    // InternalScadeEquations.g:6043:5: ( (lv_declarations_12_0= ruleDeclarationOrMethod ) )*
                    loop134:
                    do {
                        int alt134=2;
                        int LA134_0 = input.LA(1);

                        if ( (LA134_0==RULE_ID||LA134_0==RULE_COMMENT_ANNOTATION||LA134_0==25||LA134_0==33||(LA134_0>=65 && LA134_0<=72)||(LA134_0>=89 && LA134_0<=92)||(LA134_0>=112 && LA134_0<=113)||(LA134_0>=117 && LA134_0<=122)) ) {
                            alt134=1;
                        }


                        switch (alt134) {
                    	case 1 :
                    	    // InternalScadeEquations.g:6044:6: (lv_declarations_12_0= ruleDeclarationOrMethod )
                    	    {
                    	    // InternalScadeEquations.g:6044:6: (lv_declarations_12_0= ruleDeclarationOrMethod )
                    	    // InternalScadeEquations.g:6045:7: lv_declarations_12_0= ruleDeclarationOrMethod
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getClassDeclarationAccess().getDeclarationsDeclarationOrMethodParserRuleCall_9_0_3_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_83);
                    	    lv_declarations_12_0=ruleDeclarationOrMethod();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"declarations",
                    	      								lv_declarations_12_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.DeclarationOrMethod");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop134;
                        }
                    } while (true);

                    otherlv_13=(Token)match(input,23,FollowSets000.FOLLOW_84); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_13, grammarAccess.getClassDeclarationAccess().getRightCurlyBracketKeyword_9_0_4());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:6068:4: ( ( (lv_type_14_0= ruleStructType ) ) ( (lv_name_15_0= ruleEString ) )? otherlv_16= '{' ( (lv_declarations_17_0= ruleDeclaration ) )* otherlv_18= '}' )
                    {
                    // InternalScadeEquations.g:6068:4: ( ( (lv_type_14_0= ruleStructType ) ) ( (lv_name_15_0= ruleEString ) )? otherlv_16= '{' ( (lv_declarations_17_0= ruleDeclaration ) )* otherlv_18= '}' )
                    // InternalScadeEquations.g:6069:5: ( (lv_type_14_0= ruleStructType ) ) ( (lv_name_15_0= ruleEString ) )? otherlv_16= '{' ( (lv_declarations_17_0= ruleDeclaration ) )* otherlv_18= '}'
                    {
                    // InternalScadeEquations.g:6069:5: ( (lv_type_14_0= ruleStructType ) )
                    // InternalScadeEquations.g:6070:6: (lv_type_14_0= ruleStructType )
                    {
                    // InternalScadeEquations.g:6070:6: (lv_type_14_0= ruleStructType )
                    // InternalScadeEquations.g:6071:7: lv_type_14_0= ruleStructType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getClassDeclarationAccess().getTypeStructTypeEnumRuleCall_9_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_82);
                    lv_type_14_0=ruleStructType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_14_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.StructType");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:6088:5: ( (lv_name_15_0= ruleEString ) )?
                    int alt135=2;
                    int LA135_0 = input.LA(1);

                    if ( ((LA135_0>=RULE_ID && LA135_0<=RULE_STRING)) ) {
                        alt135=1;
                    }
                    switch (alt135) {
                        case 1 :
                            // InternalScadeEquations.g:6089:6: (lv_name_15_0= ruleEString )
                            {
                            // InternalScadeEquations.g:6089:6: (lv_name_15_0= ruleEString )
                            // InternalScadeEquations.g:6090:7: lv_name_15_0= ruleEString
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getClassDeclarationAccess().getNameEStringParserRuleCall_9_1_1_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_16);
                            lv_name_15_0=ruleEString();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
                              							}
                              							set(
                              								current,
                              								"name",
                              								lv_name_15_0,
                              								"de.cau.cs.kieler.annotations.Annotations.EString");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }

                    otherlv_16=(Token)match(input,22,FollowSets000.FOLLOW_64); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_16, grammarAccess.getClassDeclarationAccess().getLeftCurlyBracketKeyword_9_1_2());
                      				
                    }
                    // InternalScadeEquations.g:6111:5: ( (lv_declarations_17_0= ruleDeclaration ) )*
                    loop136:
                    do {
                        int alt136=2;
                        int LA136_0 = input.LA(1);

                        if ( (LA136_0==RULE_COMMENT_ANNOTATION||LA136_0==25||LA136_0==33||(LA136_0>=65 && LA136_0<=72)||(LA136_0>=89 && LA136_0<=92)||(LA136_0>=112 && LA136_0<=113)||(LA136_0>=117 && LA136_0<=119)) ) {
                            alt136=1;
                        }


                        switch (alt136) {
                    	case 1 :
                    	    // InternalScadeEquations.g:6112:6: (lv_declarations_17_0= ruleDeclaration )
                    	    {
                    	    // InternalScadeEquations.g:6112:6: (lv_declarations_17_0= ruleDeclaration )
                    	    // InternalScadeEquations.g:6113:7: lv_declarations_17_0= ruleDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getClassDeclarationAccess().getDeclarationsDeclarationParserRuleCall_9_1_3_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_64);
                    	    lv_declarations_17_0=ruleDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"declarations",
                    	      								lv_declarations_17_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.Declaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop136;
                        }
                    } while (true);

                    otherlv_18=(Token)match(input,23,FollowSets000.FOLLOW_84); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_18, grammarAccess.getClassDeclarationAccess().getRightCurlyBracketKeyword_9_1_4());
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:6136:3: ( ( (lv_valuedObjects_19_0= ruleValuedObject ) ) (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )* )?
            int alt139=2;
            int LA139_0 = input.LA(1);

            if ( (LA139_0==RULE_ID||LA139_0==RULE_COMMENT_ANNOTATION||LA139_0==89) ) {
                alt139=1;
            }
            switch (alt139) {
                case 1 :
                    // InternalScadeEquations.g:6137:4: ( (lv_valuedObjects_19_0= ruleValuedObject ) ) (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )*
                    {
                    // InternalScadeEquations.g:6137:4: ( (lv_valuedObjects_19_0= ruleValuedObject ) )
                    // InternalScadeEquations.g:6138:5: (lv_valuedObjects_19_0= ruleValuedObject )
                    {
                    // InternalScadeEquations.g:6138:5: (lv_valuedObjects_19_0= ruleValuedObject )
                    // InternalScadeEquations.g:6139:6: lv_valuedObjects_19_0= ruleValuedObject
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_10_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_71);
                    lv_valuedObjects_19_0=ruleValuedObject();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
                      						}
                      						add(
                      							current,
                      							"valuedObjects",
                      							lv_valuedObjects_19_0,
                      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalScadeEquations.g:6156:4: (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )*
                    loop138:
                    do {
                        int alt138=2;
                        int LA138_0 = input.LA(1);

                        if ( (LA138_0==18) ) {
                            alt138=1;
                        }


                        switch (alt138) {
                    	case 1 :
                    	    // InternalScadeEquations.g:6157:5: otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) )
                    	    {
                    	    otherlv_20=(Token)match(input,18,FollowSets000.FOLLOW_35); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_20, grammarAccess.getClassDeclarationAccess().getCommaKeyword_10_1_0());
                    	      				
                    	    }
                    	    // InternalScadeEquations.g:6161:5: ( (lv_valuedObjects_21_0= ruleValuedObject ) )
                    	    // InternalScadeEquations.g:6162:6: (lv_valuedObjects_21_0= ruleValuedObject )
                    	    {
                    	    // InternalScadeEquations.g:6162:6: (lv_valuedObjects_21_0= ruleValuedObject )
                    	    // InternalScadeEquations.g:6163:7: lv_valuedObjects_21_0= ruleValuedObject
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getClassDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_10_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_71);
                    	    lv_valuedObjects_21_0=ruleValuedObject();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"valuedObjects",
                    	      								lv_valuedObjects_21_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop138;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_22=(Token)match(input,20,FollowSets000.FOLLOW_72); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_22, grammarAccess.getClassDeclarationAccess().getSemicolonKeyword_11());
              		
            }
            // InternalScadeEquations.g:6186:3: ( (lv_annotations_23_0= ruleCommentAnnotatonSL ) )?
            int alt140=2;
            int LA140_0 = input.LA(1);

            if ( (LA140_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt140=1;
            }
            switch (alt140) {
                case 1 :
                    // InternalScadeEquations.g:6187:4: (lv_annotations_23_0= ruleCommentAnnotatonSL )
                    {
                    // InternalScadeEquations.g:6187:4: (lv_annotations_23_0= ruleCommentAnnotatonSL )
                    // InternalScadeEquations.g:6188:5: lv_annotations_23_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_12_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_23_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_23_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassDeclaration"


    // $ANTLR start "entryRuleDeclarationOrMethod"
    // InternalScadeEquations.g:6209:1: entryRuleDeclarationOrMethod returns [EObject current=null] : iv_ruleDeclarationOrMethod= ruleDeclarationOrMethod EOF ;
    public final EObject entryRuleDeclarationOrMethod() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDeclarationOrMethod = null;


        try {
            // InternalScadeEquations.g:6209:60: (iv_ruleDeclarationOrMethod= ruleDeclarationOrMethod EOF )
            // InternalScadeEquations.g:6210:2: iv_ruleDeclarationOrMethod= ruleDeclarationOrMethod EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclarationOrMethodRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDeclarationOrMethod=ruleDeclarationOrMethod();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDeclarationOrMethod; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDeclarationOrMethod"


    // $ANTLR start "ruleDeclarationOrMethod"
    // InternalScadeEquations.g:6216:1: ruleDeclarationOrMethod returns [EObject current=null] : (this_Declaration_0= ruleDeclaration | this_MethodDeclaration_1= ruleMethodDeclaration ) ;
    public final EObject ruleDeclarationOrMethod() throws RecognitionException {
        EObject current = null;

        EObject this_Declaration_0 = null;

        EObject this_MethodDeclaration_1 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:6222:2: ( (this_Declaration_0= ruleDeclaration | this_MethodDeclaration_1= ruleMethodDeclaration ) )
            // InternalScadeEquations.g:6223:2: (this_Declaration_0= ruleDeclaration | this_MethodDeclaration_1= ruleMethodDeclaration )
            {
            // InternalScadeEquations.g:6223:2: (this_Declaration_0= ruleDeclaration | this_MethodDeclaration_1= ruleMethodDeclaration )
            int alt141=2;
            alt141 = dfa141.predict(input);
            switch (alt141) {
                case 1 :
                    // InternalScadeEquations.g:6224:3: this_Declaration_0= ruleDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationOrMethodAccess().getDeclarationParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Declaration_0=ruleDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Declaration_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:6236:3: this_MethodDeclaration_1= ruleMethodDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationOrMethodAccess().getMethodDeclarationParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_MethodDeclaration_1=ruleMethodDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MethodDeclaration_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDeclarationOrMethod"


    // $ANTLR start "entryRuleClassDeclarationWOSemicolon"
    // InternalScadeEquations.g:6251:1: entryRuleClassDeclarationWOSemicolon returns [EObject current=null] : iv_ruleClassDeclarationWOSemicolon= ruleClassDeclarationWOSemicolon EOF ;
    public final EObject entryRuleClassDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassDeclarationWOSemicolon = null;


        try {
            // InternalScadeEquations.g:6251:68: (iv_ruleClassDeclarationWOSemicolon= ruleClassDeclarationWOSemicolon EOF )
            // InternalScadeEquations.g:6252:2: iv_ruleClassDeclarationWOSemicolon= ruleClassDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleClassDeclarationWOSemicolon=ruleClassDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassDeclarationWOSemicolon"


    // $ANTLR start "ruleClassDeclarationWOSemicolon"
    // InternalScadeEquations.g:6258:1: ruleClassDeclarationWOSemicolon returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_host_8_0= 'host' ) )? ( ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= ruleEString ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationOrMethodWOSemicolon ) )* otherlv_13= '}' ) | ( ( (lv_type_14_0= ruleStructType ) ) ( (lv_name_15_0= ruleEString ) )? otherlv_16= '{' ( (lv_declarations_17_0= ruleDeclarationWOSemicolon ) )* otherlv_18= '}' ) ) ( ( (lv_valuedObjects_19_0= ruleValuedObject ) ) (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )* )? ( (lv_annotations_22_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleClassDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        Token lv_const_3_0=null;
        Token lv_input_4_0=null;
        Token lv_output_5_0=null;
        Token lv_global_6_0=null;
        Token lv_static_7_0=null;
        Token lv_host_8_0=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        EObject lv_annotations_1_0 = null;

        Enumerator lv_access_2_0 = null;

        Enumerator lv_type_9_0 = null;

        AntlrDatatypeRuleToken lv_name_10_0 = null;

        EObject lv_declarations_12_0 = null;

        Enumerator lv_type_14_0 = null;

        AntlrDatatypeRuleToken lv_name_15_0 = null;

        EObject lv_declarations_17_0 = null;

        EObject lv_valuedObjects_19_0 = null;

        EObject lv_valuedObjects_21_0 = null;

        EObject lv_annotations_22_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:6264:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_host_8_0= 'host' ) )? ( ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= ruleEString ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationOrMethodWOSemicolon ) )* otherlv_13= '}' ) | ( ( (lv_type_14_0= ruleStructType ) ) ( (lv_name_15_0= ruleEString ) )? otherlv_16= '{' ( (lv_declarations_17_0= ruleDeclarationWOSemicolon ) )* otherlv_18= '}' ) ) ( ( (lv_valuedObjects_19_0= ruleValuedObject ) ) (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )* )? ( (lv_annotations_22_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalScadeEquations.g:6265:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_host_8_0= 'host' ) )? ( ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= ruleEString ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationOrMethodWOSemicolon ) )* otherlv_13= '}' ) | ( ( (lv_type_14_0= ruleStructType ) ) ( (lv_name_15_0= ruleEString ) )? otherlv_16= '{' ( (lv_declarations_17_0= ruleDeclarationWOSemicolon ) )* otherlv_18= '}' ) ) ( ( (lv_valuedObjects_19_0= ruleValuedObject ) ) (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )* )? ( (lv_annotations_22_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalScadeEquations.g:6265:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_host_8_0= 'host' ) )? ( ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= ruleEString ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationOrMethodWOSemicolon ) )* otherlv_13= '}' ) | ( ( (lv_type_14_0= ruleStructType ) ) ( (lv_name_15_0= ruleEString ) )? otherlv_16= '{' ( (lv_declarations_17_0= ruleDeclarationWOSemicolon ) )* otherlv_18= '}' ) ) ( ( (lv_valuedObjects_19_0= ruleValuedObject ) ) (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )* )? ( (lv_annotations_22_0= ruleCommentAnnotatonSL ) )? )
            // InternalScadeEquations.g:6266:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_host_8_0= 'host' ) )? ( ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= ruleEString ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationOrMethodWOSemicolon ) )* otherlv_13= '}' ) | ( ( (lv_type_14_0= ruleStructType ) ) ( (lv_name_15_0= ruleEString ) )? otherlv_16= '{' ( (lv_declarations_17_0= ruleDeclarationWOSemicolon ) )* otherlv_18= '}' ) ) ( ( (lv_valuedObjects_19_0= ruleValuedObject ) ) (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )* )? ( (lv_annotations_22_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalScadeEquations.g:6266:3: ()
            // InternalScadeEquations.g:6267:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getClassDeclarationWOSemicolonAccess().getClassDeclarationAction_0(),
              					current);
              			
            }

            }

            // InternalScadeEquations.g:6276:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop142:
            do {
                int alt142=2;
                int LA142_0 = input.LA(1);

                if ( (LA142_0==RULE_COMMENT_ANNOTATION||LA142_0==89) ) {
                    alt142=1;
                }


                switch (alt142) {
            	case 1 :
            	    // InternalScadeEquations.g:6277:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalScadeEquations.g:6277:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalScadeEquations.g:6278:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_74);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop142;
                }
            } while (true);

            // InternalScadeEquations.g:6295:3: ( (lv_access_2_0= ruleAccessModifier ) )?
            int alt143=2;
            int LA143_0 = input.LA(1);

            if ( ((LA143_0>=117 && LA143_0<=119)) ) {
                alt143=1;
            }
            switch (alt143) {
                case 1 :
                    // InternalScadeEquations.g:6296:4: (lv_access_2_0= ruleAccessModifier )
                    {
                    // InternalScadeEquations.g:6296:4: (lv_access_2_0= ruleAccessModifier )
                    // InternalScadeEquations.g:6297:5: lv_access_2_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getAccessAccessModifierEnumRuleCall_2_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_75);
                    lv_access_2_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_2_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:6314:3: ( (lv_const_3_0= 'const' ) )?
            int alt144=2;
            int LA144_0 = input.LA(1);

            if ( (LA144_0==33) ) {
                alt144=1;
            }
            switch (alt144) {
                case 1 :
                    // InternalScadeEquations.g:6315:4: (lv_const_3_0= 'const' )
                    {
                    // InternalScadeEquations.g:6315:4: (lv_const_3_0= 'const' )
                    // InternalScadeEquations.g:6316:5: lv_const_3_0= 'const'
                    {
                    lv_const_3_0=(Token)match(input,33,FollowSets000.FOLLOW_76); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_const_3_0, grammarAccess.getClassDeclarationWOSemicolonAccess().getConstConstKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "const", true, "const");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:6328:3: ( (lv_input_4_0= 'input' ) )?
            int alt145=2;
            int LA145_0 = input.LA(1);

            if ( (LA145_0==65) ) {
                alt145=1;
            }
            switch (alt145) {
                case 1 :
                    // InternalScadeEquations.g:6329:4: (lv_input_4_0= 'input' )
                    {
                    // InternalScadeEquations.g:6329:4: (lv_input_4_0= 'input' )
                    // InternalScadeEquations.g:6330:5: lv_input_4_0= 'input'
                    {
                    lv_input_4_0=(Token)match(input,65,FollowSets000.FOLLOW_77); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_input_4_0, grammarAccess.getClassDeclarationWOSemicolonAccess().getInputInputKeyword_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "input", true, "input");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:6342:3: ( (lv_output_5_0= 'output' ) )?
            int alt146=2;
            int LA146_0 = input.LA(1);

            if ( (LA146_0==66) ) {
                alt146=1;
            }
            switch (alt146) {
                case 1 :
                    // InternalScadeEquations.g:6343:4: (lv_output_5_0= 'output' )
                    {
                    // InternalScadeEquations.g:6343:4: (lv_output_5_0= 'output' )
                    // InternalScadeEquations.g:6344:5: lv_output_5_0= 'output'
                    {
                    lv_output_5_0=(Token)match(input,66,FollowSets000.FOLLOW_78); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_output_5_0, grammarAccess.getClassDeclarationWOSemicolonAccess().getOutputOutputKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "output", true, "output");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:6356:3: ( (lv_global_6_0= 'global' ) )?
            int alt147=2;
            int LA147_0 = input.LA(1);

            if ( (LA147_0==67) ) {
                alt147=1;
            }
            switch (alt147) {
                case 1 :
                    // InternalScadeEquations.g:6357:4: (lv_global_6_0= 'global' )
                    {
                    // InternalScadeEquations.g:6357:4: (lv_global_6_0= 'global' )
                    // InternalScadeEquations.g:6358:5: lv_global_6_0= 'global'
                    {
                    lv_global_6_0=(Token)match(input,67,FollowSets000.FOLLOW_79); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_global_6_0, grammarAccess.getClassDeclarationWOSemicolonAccess().getGlobalGlobalKeyword_6_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "global", true, "global");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:6370:3: ( (lv_static_7_0= 'static' ) )?
            int alt148=2;
            int LA148_0 = input.LA(1);

            if ( (LA148_0==68) ) {
                alt148=1;
            }
            switch (alt148) {
                case 1 :
                    // InternalScadeEquations.g:6371:4: (lv_static_7_0= 'static' )
                    {
                    // InternalScadeEquations.g:6371:4: (lv_static_7_0= 'static' )
                    // InternalScadeEquations.g:6372:5: lv_static_7_0= 'static'
                    {
                    lv_static_7_0=(Token)match(input,68,FollowSets000.FOLLOW_80); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_static_7_0, grammarAccess.getClassDeclarationWOSemicolonAccess().getStaticStaticKeyword_7_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "static", true, "static");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:6384:3: ( (lv_host_8_0= 'host' ) )?
            int alt149=2;
            int LA149_0 = input.LA(1);

            if ( (LA149_0==70) ) {
                alt149=1;
            }
            switch (alt149) {
                case 1 :
                    // InternalScadeEquations.g:6385:4: (lv_host_8_0= 'host' )
                    {
                    // InternalScadeEquations.g:6385:4: (lv_host_8_0= 'host' )
                    // InternalScadeEquations.g:6386:5: lv_host_8_0= 'host'
                    {
                    lv_host_8_0=(Token)match(input,70,FollowSets000.FOLLOW_81); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_host_8_0, grammarAccess.getClassDeclarationWOSemicolonAccess().getHostHostKeyword_8_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "host", true, "host");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:6398:3: ( ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= ruleEString ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationOrMethodWOSemicolon ) )* otherlv_13= '}' ) | ( ( (lv_type_14_0= ruleStructType ) ) ( (lv_name_15_0= ruleEString ) )? otherlv_16= '{' ( (lv_declarations_17_0= ruleDeclarationWOSemicolon ) )* otherlv_18= '}' ) )
            int alt154=2;
            int LA154_0 = input.LA(1);

            if ( (LA154_0==113) ) {
                alt154=1;
            }
            else if ( (LA154_0==112) ) {
                alt154=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 154, 0, input);

                throw nvae;
            }
            switch (alt154) {
                case 1 :
                    // InternalScadeEquations.g:6399:4: ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= ruleEString ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationOrMethodWOSemicolon ) )* otherlv_13= '}' )
                    {
                    // InternalScadeEquations.g:6399:4: ( ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= ruleEString ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationOrMethodWOSemicolon ) )* otherlv_13= '}' )
                    // InternalScadeEquations.g:6400:5: ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= ruleEString ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationOrMethodWOSemicolon ) )* otherlv_13= '}'
                    {
                    // InternalScadeEquations.g:6400:5: ( (lv_type_9_0= ruleClassType ) )
                    // InternalScadeEquations.g:6401:6: (lv_type_9_0= ruleClassType )
                    {
                    // InternalScadeEquations.g:6401:6: (lv_type_9_0= ruleClassType )
                    // InternalScadeEquations.g:6402:7: lv_type_9_0= ruleClassType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getTypeClassTypeEnumRuleCall_9_0_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_82);
                    lv_type_9_0=ruleClassType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_9_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ClassType");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:6419:5: ( (lv_name_10_0= ruleEString ) )?
                    int alt150=2;
                    int LA150_0 = input.LA(1);

                    if ( ((LA150_0>=RULE_ID && LA150_0<=RULE_STRING)) ) {
                        alt150=1;
                    }
                    switch (alt150) {
                        case 1 :
                            // InternalScadeEquations.g:6420:6: (lv_name_10_0= ruleEString )
                            {
                            // InternalScadeEquations.g:6420:6: (lv_name_10_0= ruleEString )
                            // InternalScadeEquations.g:6421:7: lv_name_10_0= ruleEString
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getNameEStringParserRuleCall_9_0_1_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_16);
                            lv_name_10_0=ruleEString();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
                              							}
                              							set(
                              								current,
                              								"name",
                              								lv_name_10_0,
                              								"de.cau.cs.kieler.annotations.Annotations.EString");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }

                    otherlv_11=(Token)match(input,22,FollowSets000.FOLLOW_83); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_11, grammarAccess.getClassDeclarationWOSemicolonAccess().getLeftCurlyBracketKeyword_9_0_2());
                      				
                    }
                    // InternalScadeEquations.g:6442:5: ( (lv_declarations_12_0= ruleDeclarationOrMethodWOSemicolon ) )*
                    loop151:
                    do {
                        int alt151=2;
                        int LA151_0 = input.LA(1);

                        if ( (LA151_0==RULE_ID||LA151_0==RULE_COMMENT_ANNOTATION||LA151_0==25||LA151_0==33||(LA151_0>=65 && LA151_0<=72)||(LA151_0>=89 && LA151_0<=92)||(LA151_0>=112 && LA151_0<=113)||(LA151_0>=117 && LA151_0<=122)) ) {
                            alt151=1;
                        }


                        switch (alt151) {
                    	case 1 :
                    	    // InternalScadeEquations.g:6443:6: (lv_declarations_12_0= ruleDeclarationOrMethodWOSemicolon )
                    	    {
                    	    // InternalScadeEquations.g:6443:6: (lv_declarations_12_0= ruleDeclarationOrMethodWOSemicolon )
                    	    // InternalScadeEquations.g:6444:7: lv_declarations_12_0= ruleDeclarationOrMethodWOSemicolon
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getDeclarationsDeclarationOrMethodWOSemicolonParserRuleCall_9_0_3_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_83);
                    	    lv_declarations_12_0=ruleDeclarationOrMethodWOSemicolon();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"declarations",
                    	      								lv_declarations_12_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.DeclarationOrMethodWOSemicolon");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop151;
                        }
                    } while (true);

                    otherlv_13=(Token)match(input,23,FollowSets000.FOLLOW_85); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_13, grammarAccess.getClassDeclarationWOSemicolonAccess().getRightCurlyBracketKeyword_9_0_4());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:6467:4: ( ( (lv_type_14_0= ruleStructType ) ) ( (lv_name_15_0= ruleEString ) )? otherlv_16= '{' ( (lv_declarations_17_0= ruleDeclarationWOSemicolon ) )* otherlv_18= '}' )
                    {
                    // InternalScadeEquations.g:6467:4: ( ( (lv_type_14_0= ruleStructType ) ) ( (lv_name_15_0= ruleEString ) )? otherlv_16= '{' ( (lv_declarations_17_0= ruleDeclarationWOSemicolon ) )* otherlv_18= '}' )
                    // InternalScadeEquations.g:6468:5: ( (lv_type_14_0= ruleStructType ) ) ( (lv_name_15_0= ruleEString ) )? otherlv_16= '{' ( (lv_declarations_17_0= ruleDeclarationWOSemicolon ) )* otherlv_18= '}'
                    {
                    // InternalScadeEquations.g:6468:5: ( (lv_type_14_0= ruleStructType ) )
                    // InternalScadeEquations.g:6469:6: (lv_type_14_0= ruleStructType )
                    {
                    // InternalScadeEquations.g:6469:6: (lv_type_14_0= ruleStructType )
                    // InternalScadeEquations.g:6470:7: lv_type_14_0= ruleStructType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getTypeStructTypeEnumRuleCall_9_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_82);
                    lv_type_14_0=ruleStructType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_14_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.StructType");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:6487:5: ( (lv_name_15_0= ruleEString ) )?
                    int alt152=2;
                    int LA152_0 = input.LA(1);

                    if ( ((LA152_0>=RULE_ID && LA152_0<=RULE_STRING)) ) {
                        alt152=1;
                    }
                    switch (alt152) {
                        case 1 :
                            // InternalScadeEquations.g:6488:6: (lv_name_15_0= ruleEString )
                            {
                            // InternalScadeEquations.g:6488:6: (lv_name_15_0= ruleEString )
                            // InternalScadeEquations.g:6489:7: lv_name_15_0= ruleEString
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getNameEStringParserRuleCall_9_1_1_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_16);
                            lv_name_15_0=ruleEString();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
                              							}
                              							set(
                              								current,
                              								"name",
                              								lv_name_15_0,
                              								"de.cau.cs.kieler.annotations.Annotations.EString");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }

                    otherlv_16=(Token)match(input,22,FollowSets000.FOLLOW_86); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_16, grammarAccess.getClassDeclarationWOSemicolonAccess().getLeftCurlyBracketKeyword_9_1_2());
                      				
                    }
                    // InternalScadeEquations.g:6510:5: ( (lv_declarations_17_0= ruleDeclarationWOSemicolon ) )*
                    loop153:
                    do {
                        int alt153=2;
                        int LA153_0 = input.LA(1);

                        if ( (LA153_0==RULE_COMMENT_ANNOTATION||LA153_0==25||LA153_0==33||(LA153_0>=65 && LA153_0<=72)||(LA153_0>=89 && LA153_0<=92)||(LA153_0>=112 && LA153_0<=113)||(LA153_0>=117 && LA153_0<=119)) ) {
                            alt153=1;
                        }


                        switch (alt153) {
                    	case 1 :
                    	    // InternalScadeEquations.g:6511:6: (lv_declarations_17_0= ruleDeclarationWOSemicolon )
                    	    {
                    	    // InternalScadeEquations.g:6511:6: (lv_declarations_17_0= ruleDeclarationWOSemicolon )
                    	    // InternalScadeEquations.g:6512:7: lv_declarations_17_0= ruleDeclarationWOSemicolon
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getDeclarationsDeclarationWOSemicolonParserRuleCall_9_1_3_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_86);
                    	    lv_declarations_17_0=ruleDeclarationWOSemicolon();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"declarations",
                    	      								lv_declarations_17_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.DeclarationWOSemicolon");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop153;
                        }
                    } while (true);

                    otherlv_18=(Token)match(input,23,FollowSets000.FOLLOW_85); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_18, grammarAccess.getClassDeclarationWOSemicolonAccess().getRightCurlyBracketKeyword_9_1_4());
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:6535:3: ( ( (lv_valuedObjects_19_0= ruleValuedObject ) ) (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )* )?
            int alt156=2;
            alt156 = dfa156.predict(input);
            switch (alt156) {
                case 1 :
                    // InternalScadeEquations.g:6536:4: ( (lv_valuedObjects_19_0= ruleValuedObject ) ) (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )*
                    {
                    // InternalScadeEquations.g:6536:4: ( (lv_valuedObjects_19_0= ruleValuedObject ) )
                    // InternalScadeEquations.g:6537:5: (lv_valuedObjects_19_0= ruleValuedObject )
                    {
                    // InternalScadeEquations.g:6537:5: (lv_valuedObjects_19_0= ruleValuedObject )
                    // InternalScadeEquations.g:6538:6: lv_valuedObjects_19_0= ruleValuedObject
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_10_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_73);
                    lv_valuedObjects_19_0=ruleValuedObject();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
                      						}
                      						add(
                      							current,
                      							"valuedObjects",
                      							lv_valuedObjects_19_0,
                      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalScadeEquations.g:6555:4: (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )*
                    loop155:
                    do {
                        int alt155=2;
                        int LA155_0 = input.LA(1);

                        if ( (LA155_0==18) ) {
                            alt155=1;
                        }


                        switch (alt155) {
                    	case 1 :
                    	    // InternalScadeEquations.g:6556:5: otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) )
                    	    {
                    	    otherlv_20=(Token)match(input,18,FollowSets000.FOLLOW_35); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_20, grammarAccess.getClassDeclarationWOSemicolonAccess().getCommaKeyword_10_1_0());
                    	      				
                    	    }
                    	    // InternalScadeEquations.g:6560:5: ( (lv_valuedObjects_21_0= ruleValuedObject ) )
                    	    // InternalScadeEquations.g:6561:6: (lv_valuedObjects_21_0= ruleValuedObject )
                    	    {
                    	    // InternalScadeEquations.g:6561:6: (lv_valuedObjects_21_0= ruleValuedObject )
                    	    // InternalScadeEquations.g:6562:7: lv_valuedObjects_21_0= ruleValuedObject
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_10_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_73);
                    	    lv_valuedObjects_21_0=ruleValuedObject();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"valuedObjects",
                    	      								lv_valuedObjects_21_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop155;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalScadeEquations.g:6581:3: ( (lv_annotations_22_0= ruleCommentAnnotatonSL ) )?
            int alt157=2;
            int LA157_0 = input.LA(1);

            if ( (LA157_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt157=1;
            }
            switch (alt157) {
                case 1 :
                    // InternalScadeEquations.g:6582:4: (lv_annotations_22_0= ruleCommentAnnotatonSL )
                    {
                    // InternalScadeEquations.g:6582:4: (lv_annotations_22_0= ruleCommentAnnotatonSL )
                    // InternalScadeEquations.g:6583:5: lv_annotations_22_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_11_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_22_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_22_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassDeclarationWOSemicolon"


    // $ANTLR start "entryRuleDeclarationOrMethodWOSemicolon"
    // InternalScadeEquations.g:6604:1: entryRuleDeclarationOrMethodWOSemicolon returns [EObject current=null] : iv_ruleDeclarationOrMethodWOSemicolon= ruleDeclarationOrMethodWOSemicolon EOF ;
    public final EObject entryRuleDeclarationOrMethodWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDeclarationOrMethodWOSemicolon = null;


        try {
            // InternalScadeEquations.g:6604:71: (iv_ruleDeclarationOrMethodWOSemicolon= ruleDeclarationOrMethodWOSemicolon EOF )
            // InternalScadeEquations.g:6605:2: iv_ruleDeclarationOrMethodWOSemicolon= ruleDeclarationOrMethodWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclarationOrMethodWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDeclarationOrMethodWOSemicolon=ruleDeclarationOrMethodWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDeclarationOrMethodWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDeclarationOrMethodWOSemicolon"


    // $ANTLR start "ruleDeclarationOrMethodWOSemicolon"
    // InternalScadeEquations.g:6611:1: ruleDeclarationOrMethodWOSemicolon returns [EObject current=null] : (this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon | this_MethodDeclarationWOSemicolon_1= ruleMethodDeclarationWOSemicolon ) ;
    public final EObject ruleDeclarationOrMethodWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject this_DeclarationWOSemicolon_0 = null;

        EObject this_MethodDeclarationWOSemicolon_1 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:6617:2: ( (this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon | this_MethodDeclarationWOSemicolon_1= ruleMethodDeclarationWOSemicolon ) )
            // InternalScadeEquations.g:6618:2: (this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon | this_MethodDeclarationWOSemicolon_1= ruleMethodDeclarationWOSemicolon )
            {
            // InternalScadeEquations.g:6618:2: (this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon | this_MethodDeclarationWOSemicolon_1= ruleMethodDeclarationWOSemicolon )
            int alt158=2;
            alt158 = dfa158.predict(input);
            switch (alt158) {
                case 1 :
                    // InternalScadeEquations.g:6619:3: this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationOrMethodWOSemicolonAccess().getDeclarationWOSemicolonParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_DeclarationWOSemicolon_0=ruleDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DeclarationWOSemicolon_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:6631:3: this_MethodDeclarationWOSemicolon_1= ruleMethodDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationOrMethodWOSemicolonAccess().getMethodDeclarationWOSemicolonParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_MethodDeclarationWOSemicolon_1=ruleMethodDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MethodDeclarationWOSemicolon_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDeclarationOrMethodWOSemicolon"


    // $ANTLR start "entryRuleMethodDeclaration"
    // InternalScadeEquations.g:6646:1: entryRuleMethodDeclaration returns [EObject current=null] : iv_ruleMethodDeclaration= ruleMethodDeclaration EOF ;
    public final EObject entryRuleMethodDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMethodDeclaration = null;


        try {
            // InternalScadeEquations.g:6646:58: (iv_ruleMethodDeclaration= ruleMethodDeclaration EOF )
            // InternalScadeEquations.g:6647:2: iv_ruleMethodDeclaration= ruleMethodDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMethodDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMethodDeclaration=ruleMethodDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMethodDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMethodDeclaration"


    // $ANTLR start "ruleMethodDeclaration"
    // InternalScadeEquations.g:6653:1: ruleMethodDeclaration returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_returnType_3_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) ) ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )? otherlv_13= ';' ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleMethodDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        EObject lv_annotations_1_0 = null;

        Enumerator lv_access_2_0 = null;

        Enumerator lv_returnType_3_0 = null;

        EObject lv_valuedObjects_4_0 = null;

        EObject lv_parameterDeclarations_6_0 = null;

        EObject lv_parameterDeclarations_8_0 = null;

        EObject lv_schedule_12_0 = null;

        EObject lv_annotations_14_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:6659:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_returnType_3_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) ) ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )? otherlv_13= ';' ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalScadeEquations.g:6660:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_returnType_3_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) ) ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )? otherlv_13= ';' ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalScadeEquations.g:6660:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_returnType_3_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) ) ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )? otherlv_13= ';' ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? )
            // InternalScadeEquations.g:6661:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_returnType_3_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) ) ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )? otherlv_13= ';' ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalScadeEquations.g:6661:3: ()
            // InternalScadeEquations.g:6662:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getMethodDeclarationAccess().getMethodDeclarationAction_0(),
              					current);
              			
            }

            }

            // InternalScadeEquations.g:6671:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop159:
            do {
                int alt159=2;
                int LA159_0 = input.LA(1);

                if ( (LA159_0==RULE_COMMENT_ANNOTATION) ) {
                    int LA159_2 = input.LA(2);

                    if ( (synpred184_InternalScadeEquations()) ) {
                        alt159=1;
                    }


                }
                else if ( (LA159_0==89) ) {
                    int LA159_3 = input.LA(2);

                    if ( (LA159_3==RULE_ID) ) {
                        int LA159_5 = input.LA(3);

                        if ( (synpred184_InternalScadeEquations()) ) {
                            alt159=1;
                        }


                    }


                }


                switch (alt159) {
            	case 1 :
            	    // InternalScadeEquations.g:6672:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalScadeEquations.g:6672:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalScadeEquations.g:6673:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getMethodDeclarationAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_87);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop159;
                }
            } while (true);

            // InternalScadeEquations.g:6690:3: ( (lv_access_2_0= ruleAccessModifier ) )?
            int alt160=2;
            int LA160_0 = input.LA(1);

            if ( ((LA160_0>=117 && LA160_0<=119)) ) {
                alt160=1;
            }
            switch (alt160) {
                case 1 :
                    // InternalScadeEquations.g:6691:4: (lv_access_2_0= ruleAccessModifier )
                    {
                    // InternalScadeEquations.g:6691:4: (lv_access_2_0= ruleAccessModifier )
                    // InternalScadeEquations.g:6692:5: lv_access_2_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getMethodDeclarationAccess().getAccessAccessModifierEnumRuleCall_2_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_87);
                    lv_access_2_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_2_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:6709:3: ( (lv_returnType_3_0= ruleMethodReturnType ) )?
            int alt161=2;
            int LA161_0 = input.LA(1);

            if ( ((LA161_0>=90 && LA161_0<=91)||(LA161_0>=120 && LA161_0<=122)) ) {
                alt161=1;
            }
            switch (alt161) {
                case 1 :
                    // InternalScadeEquations.g:6710:4: (lv_returnType_3_0= ruleMethodReturnType )
                    {
                    // InternalScadeEquations.g:6710:4: (lv_returnType_3_0= ruleMethodReturnType )
                    // InternalScadeEquations.g:6711:5: lv_returnType_3_0= ruleMethodReturnType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getMethodDeclarationAccess().getReturnTypeMethodReturnTypeEnumRuleCall_3_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_87);
                    lv_returnType_3_0=ruleMethodReturnType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"returnType",
                      						lv_returnType_3_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.MethodReturnType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:6728:3: ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) )
            // InternalScadeEquations.g:6729:4: (lv_valuedObjects_4_0= ruleSimpleValuedObject )
            {
            // InternalScadeEquations.g:6729:4: (lv_valuedObjects_4_0= ruleSimpleValuedObject )
            // InternalScadeEquations.g:6730:5: lv_valuedObjects_4_0= ruleSimpleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMethodDeclarationAccess().getValuedObjectsSimpleValuedObjectParserRuleCall_4_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_22);
            lv_valuedObjects_4_0=ruleSimpleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_4_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.SimpleValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:6747:3: ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' )
            int alt163=2;
            int LA163_0 = input.LA(1);

            if ( (LA163_0==17) ) {
                alt163=1;
            }
            else if ( (LA163_0==28) ) {
                alt163=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 163, 0, input);

                throw nvae;
            }
            switch (alt163) {
                case 1 :
                    // InternalScadeEquations.g:6748:4: (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' )
                    {
                    // InternalScadeEquations.g:6748:4: (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' )
                    // InternalScadeEquations.g:6749:5: otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')'
                    {
                    otherlv_5=(Token)match(input,17,FollowSets000.FOLLOW_69); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getMethodDeclarationAccess().getLeftParenthesisKeyword_5_0_0());
                      				
                    }
                    // InternalScadeEquations.g:6753:5: ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) )
                    // InternalScadeEquations.g:6754:6: (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon )
                    {
                    // InternalScadeEquations.g:6754:6: (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon )
                    // InternalScadeEquations.g:6755:7: lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getMethodDeclarationAccess().getParameterDeclarationsVariableDeclarationWOSemicolonParserRuleCall_5_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_6);
                    lv_parameterDeclarations_6_0=ruleVariableDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
                      							}
                      							add(
                      								current,
                      								"parameterDeclarations",
                      								lv_parameterDeclarations_6_0,
                      								"de.cau.cs.kieler.kexpressions.kext.KExt.VariableDeclarationWOSemicolon");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:6772:5: (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )*
                    loop162:
                    do {
                        int alt162=2;
                        int LA162_0 = input.LA(1);

                        if ( (LA162_0==18) ) {
                            alt162=1;
                        }


                        switch (alt162) {
                    	case 1 :
                    	    // InternalScadeEquations.g:6773:6: otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) )
                    	    {
                    	    otherlv_7=(Token)match(input,18,FollowSets000.FOLLOW_69); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_7, grammarAccess.getMethodDeclarationAccess().getCommaKeyword_5_0_2_0());
                    	      					
                    	    }
                    	    // InternalScadeEquations.g:6777:6: ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) )
                    	    // InternalScadeEquations.g:6778:7: (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon )
                    	    {
                    	    // InternalScadeEquations.g:6778:7: (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon )
                    	    // InternalScadeEquations.g:6779:8: lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getMethodDeclarationAccess().getParameterDeclarationsVariableDeclarationWOSemicolonParserRuleCall_5_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_6);
                    	    lv_parameterDeclarations_8_0=ruleVariableDeclarationWOSemicolon();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"parameterDeclarations",
                    	      									lv_parameterDeclarations_8_0,
                    	      									"de.cau.cs.kieler.kexpressions.kext.KExt.VariableDeclarationWOSemicolon");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop162;
                        }
                    } while (true);

                    otherlv_9=(Token)match(input,19,FollowSets000.FOLLOW_88); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_9, grammarAccess.getMethodDeclarationAccess().getRightParenthesisKeyword_5_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:6803:4: otherlv_10= '()'
                    {
                    otherlv_10=(Token)match(input,28,FollowSets000.FOLLOW_88); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getMethodDeclarationAccess().getLeftParenthesisRightParenthesisKeyword_5_1());
                      			
                    }

                    }
                    break;

            }

            // InternalScadeEquations.g:6808:3: (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )?
            int alt165=2;
            int LA165_0 = input.LA(1);

            if ( (LA165_0==71) ) {
                alt165=1;
            }
            switch (alt165) {
                case 1 :
                    // InternalScadeEquations.g:6809:4: otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_11=(Token)match(input,71,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getMethodDeclarationAccess().getScheduleKeyword_6_0());
                      			
                    }
                    // InternalScadeEquations.g:6813:4: ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+
                    int cnt164=0;
                    loop164:
                    do {
                        int alt164=2;
                        int LA164_0 = input.LA(1);

                        if ( (LA164_0==RULE_ID) ) {
                            alt164=1;
                        }


                        switch (alt164) {
                    	case 1 :
                    	    // InternalScadeEquations.g:6814:5: (lv_schedule_12_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalScadeEquations.g:6814:5: (lv_schedule_12_0= ruleScheduleObjectReference )
                    	    // InternalScadeEquations.g:6815:6: lv_schedule_12_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getMethodDeclarationAccess().getScheduleScheduleObjectReferenceParserRuleCall_6_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_89);
                    	    lv_schedule_12_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_12_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt164 >= 1 ) break loop164;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(164, input);
                                throw eee;
                        }
                        cnt164++;
                    } while (true);


                    }
                    break;

            }

            otherlv_13=(Token)match(input,20,FollowSets000.FOLLOW_72); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_13, grammarAccess.getMethodDeclarationAccess().getSemicolonKeyword_7());
              		
            }
            // InternalScadeEquations.g:6837:3: ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )?
            int alt166=2;
            int LA166_0 = input.LA(1);

            if ( (LA166_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt166=1;
            }
            switch (alt166) {
                case 1 :
                    // InternalScadeEquations.g:6838:4: (lv_annotations_14_0= ruleCommentAnnotatonSL )
                    {
                    // InternalScadeEquations.g:6838:4: (lv_annotations_14_0= ruleCommentAnnotatonSL )
                    // InternalScadeEquations.g:6839:5: lv_annotations_14_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getMethodDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_8_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_14_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_14_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMethodDeclaration"


    // $ANTLR start "entryRuleMethodDeclarationWOSemicolon"
    // InternalScadeEquations.g:6860:1: entryRuleMethodDeclarationWOSemicolon returns [EObject current=null] : iv_ruleMethodDeclarationWOSemicolon= ruleMethodDeclarationWOSemicolon EOF ;
    public final EObject entryRuleMethodDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMethodDeclarationWOSemicolon = null;


        try {
            // InternalScadeEquations.g:6860:69: (iv_ruleMethodDeclarationWOSemicolon= ruleMethodDeclarationWOSemicolon EOF )
            // InternalScadeEquations.g:6861:2: iv_ruleMethodDeclarationWOSemicolon= ruleMethodDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMethodDeclarationWOSemicolon=ruleMethodDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMethodDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMethodDeclarationWOSemicolon"


    // $ANTLR start "ruleMethodDeclarationWOSemicolon"
    // InternalScadeEquations.g:6867:1: ruleMethodDeclarationWOSemicolon returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_returnType_3_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) ) ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )? ( (lv_annotations_13_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleMethodDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        EObject lv_annotations_1_0 = null;

        Enumerator lv_access_2_0 = null;

        Enumerator lv_returnType_3_0 = null;

        EObject lv_valuedObjects_4_0 = null;

        EObject lv_parameterDeclarations_6_0 = null;

        EObject lv_parameterDeclarations_8_0 = null;

        EObject lv_schedule_12_0 = null;

        EObject lv_annotations_13_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:6873:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_returnType_3_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) ) ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )? ( (lv_annotations_13_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalScadeEquations.g:6874:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_returnType_3_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) ) ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )? ( (lv_annotations_13_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalScadeEquations.g:6874:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_returnType_3_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) ) ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )? ( (lv_annotations_13_0= ruleCommentAnnotatonSL ) )? )
            // InternalScadeEquations.g:6875:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_returnType_3_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) ) ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )? ( (lv_annotations_13_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalScadeEquations.g:6875:3: ()
            // InternalScadeEquations.g:6876:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getMethodDeclarationWOSemicolonAccess().getMethodDeclarationAction_0(),
              					current);
              			
            }

            }

            // InternalScadeEquations.g:6885:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop167:
            do {
                int alt167=2;
                int LA167_0 = input.LA(1);

                if ( (LA167_0==RULE_COMMENT_ANNOTATION) ) {
                    int LA167_2 = input.LA(2);

                    if ( (synpred192_InternalScadeEquations()) ) {
                        alt167=1;
                    }


                }
                else if ( (LA167_0==89) ) {
                    int LA167_3 = input.LA(2);

                    if ( (LA167_3==RULE_ID) ) {
                        int LA167_5 = input.LA(3);

                        if ( (synpred192_InternalScadeEquations()) ) {
                            alt167=1;
                        }


                    }


                }


                switch (alt167) {
            	case 1 :
            	    // InternalScadeEquations.g:6886:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalScadeEquations.g:6886:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalScadeEquations.g:6887:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_87);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop167;
                }
            } while (true);

            // InternalScadeEquations.g:6904:3: ( (lv_access_2_0= ruleAccessModifier ) )?
            int alt168=2;
            int LA168_0 = input.LA(1);

            if ( ((LA168_0>=117 && LA168_0<=119)) ) {
                alt168=1;
            }
            switch (alt168) {
                case 1 :
                    // InternalScadeEquations.g:6905:4: (lv_access_2_0= ruleAccessModifier )
                    {
                    // InternalScadeEquations.g:6905:4: (lv_access_2_0= ruleAccessModifier )
                    // InternalScadeEquations.g:6906:5: lv_access_2_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getAccessAccessModifierEnumRuleCall_2_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_87);
                    lv_access_2_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_2_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:6923:3: ( (lv_returnType_3_0= ruleMethodReturnType ) )?
            int alt169=2;
            int LA169_0 = input.LA(1);

            if ( ((LA169_0>=90 && LA169_0<=91)||(LA169_0>=120 && LA169_0<=122)) ) {
                alt169=1;
            }
            switch (alt169) {
                case 1 :
                    // InternalScadeEquations.g:6924:4: (lv_returnType_3_0= ruleMethodReturnType )
                    {
                    // InternalScadeEquations.g:6924:4: (lv_returnType_3_0= ruleMethodReturnType )
                    // InternalScadeEquations.g:6925:5: lv_returnType_3_0= ruleMethodReturnType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getReturnTypeMethodReturnTypeEnumRuleCall_3_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_87);
                    lv_returnType_3_0=ruleMethodReturnType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
                      					}
                      					set(
                      						current,
                      						"returnType",
                      						lv_returnType_3_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.MethodReturnType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:6942:3: ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) )
            // InternalScadeEquations.g:6943:4: (lv_valuedObjects_4_0= ruleSimpleValuedObject )
            {
            // InternalScadeEquations.g:6943:4: (lv_valuedObjects_4_0= ruleSimpleValuedObject )
            // InternalScadeEquations.g:6944:5: lv_valuedObjects_4_0= ruleSimpleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getValuedObjectsSimpleValuedObjectParserRuleCall_4_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_22);
            lv_valuedObjects_4_0=ruleSimpleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_4_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.SimpleValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:6961:3: ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' )
            int alt171=2;
            int LA171_0 = input.LA(1);

            if ( (LA171_0==17) ) {
                alt171=1;
            }
            else if ( (LA171_0==28) ) {
                alt171=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 171, 0, input);

                throw nvae;
            }
            switch (alt171) {
                case 1 :
                    // InternalScadeEquations.g:6962:4: (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' )
                    {
                    // InternalScadeEquations.g:6962:4: (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' )
                    // InternalScadeEquations.g:6963:5: otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')'
                    {
                    otherlv_5=(Token)match(input,17,FollowSets000.FOLLOW_69); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getMethodDeclarationWOSemicolonAccess().getLeftParenthesisKeyword_5_0_0());
                      				
                    }
                    // InternalScadeEquations.g:6967:5: ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) )
                    // InternalScadeEquations.g:6968:6: (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon )
                    {
                    // InternalScadeEquations.g:6968:6: (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon )
                    // InternalScadeEquations.g:6969:7: lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getParameterDeclarationsVariableDeclarationWOSemicolonParserRuleCall_5_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_6);
                    lv_parameterDeclarations_6_0=ruleVariableDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
                      							}
                      							add(
                      								current,
                      								"parameterDeclarations",
                      								lv_parameterDeclarations_6_0,
                      								"de.cau.cs.kieler.kexpressions.kext.KExt.VariableDeclarationWOSemicolon");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:6986:5: (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )*
                    loop170:
                    do {
                        int alt170=2;
                        int LA170_0 = input.LA(1);

                        if ( (LA170_0==18) ) {
                            alt170=1;
                        }


                        switch (alt170) {
                    	case 1 :
                    	    // InternalScadeEquations.g:6987:6: otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) )
                    	    {
                    	    otherlv_7=(Token)match(input,18,FollowSets000.FOLLOW_69); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_7, grammarAccess.getMethodDeclarationWOSemicolonAccess().getCommaKeyword_5_0_2_0());
                    	      					
                    	    }
                    	    // InternalScadeEquations.g:6991:6: ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) )
                    	    // InternalScadeEquations.g:6992:7: (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon )
                    	    {
                    	    // InternalScadeEquations.g:6992:7: (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon )
                    	    // InternalScadeEquations.g:6993:8: lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getParameterDeclarationsVariableDeclarationWOSemicolonParserRuleCall_5_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_6);
                    	    lv_parameterDeclarations_8_0=ruleVariableDeclarationWOSemicolon();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"parameterDeclarations",
                    	      									lv_parameterDeclarations_8_0,
                    	      									"de.cau.cs.kieler.kexpressions.kext.KExt.VariableDeclarationWOSemicolon");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop170;
                        }
                    } while (true);

                    otherlv_9=(Token)match(input,19,FollowSets000.FOLLOW_90); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_9, grammarAccess.getMethodDeclarationWOSemicolonAccess().getRightParenthesisKeyword_5_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:7017:4: otherlv_10= '()'
                    {
                    otherlv_10=(Token)match(input,28,FollowSets000.FOLLOW_90); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getMethodDeclarationWOSemicolonAccess().getLeftParenthesisRightParenthesisKeyword_5_1());
                      			
                    }

                    }
                    break;

            }

            // InternalScadeEquations.g:7022:3: (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )?
            int alt173=2;
            alt173 = dfa173.predict(input);
            switch (alt173) {
                case 1 :
                    // InternalScadeEquations.g:7023:4: otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_11=(Token)match(input,71,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getMethodDeclarationWOSemicolonAccess().getScheduleKeyword_6_0());
                      			
                    }
                    // InternalScadeEquations.g:7027:4: ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+
                    int cnt172=0;
                    loop172:
                    do {
                        int alt172=2;
                        alt172 = dfa172.predict(input);
                        switch (alt172) {
                    	case 1 :
                    	    // InternalScadeEquations.g:7028:5: (lv_schedule_12_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalScadeEquations.g:7028:5: (lv_schedule_12_0= ruleScheduleObjectReference )
                    	    // InternalScadeEquations.g:7029:6: lv_schedule_12_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getScheduleScheduleObjectReferenceParserRuleCall_6_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_91);
                    	    lv_schedule_12_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_12_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt172 >= 1 ) break loop172;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(172, input);
                                throw eee;
                        }
                        cnt172++;
                    } while (true);


                    }
                    break;

            }

            // InternalScadeEquations.g:7047:3: ( (lv_annotations_13_0= ruleCommentAnnotatonSL ) )?
            int alt174=2;
            int LA174_0 = input.LA(1);

            if ( (LA174_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt174=1;
            }
            switch (alt174) {
                case 1 :
                    // InternalScadeEquations.g:7048:4: (lv_annotations_13_0= ruleCommentAnnotatonSL )
                    {
                    // InternalScadeEquations.g:7048:4: (lv_annotations_13_0= ruleCommentAnnotatonSL )
                    // InternalScadeEquations.g:7049:5: lv_annotations_13_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_7_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_13_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_13_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMethodDeclarationWOSemicolon"


    // $ANTLR start "entryRuleNamespaceID"
    // InternalScadeEquations.g:7070:1: entryRuleNamespaceID returns [String current=null] : iv_ruleNamespaceID= ruleNamespaceID EOF ;
    public final String entryRuleNamespaceID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNamespaceID = null;


        try {
            // InternalScadeEquations.g:7070:51: (iv_ruleNamespaceID= ruleNamespaceID EOF )
            // InternalScadeEquations.g:7071:2: iv_ruleNamespaceID= ruleNamespaceID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamespaceIDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNamespaceID=ruleNamespaceID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamespaceID.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNamespaceID"


    // $ANTLR start "ruleNamespaceID"
    // InternalScadeEquations.g:7077:1: ruleNamespaceID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ExtendedID_0= ruleExtendedID (kw= ':' this_PrimeID_2= rulePrimeID )* ) ;
    public final AntlrDatatypeRuleToken ruleNamespaceID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_ExtendedID_0 = null;

        AntlrDatatypeRuleToken this_PrimeID_2 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:7083:2: ( (this_ExtendedID_0= ruleExtendedID (kw= ':' this_PrimeID_2= rulePrimeID )* ) )
            // InternalScadeEquations.g:7084:2: (this_ExtendedID_0= ruleExtendedID (kw= ':' this_PrimeID_2= rulePrimeID )* )
            {
            // InternalScadeEquations.g:7084:2: (this_ExtendedID_0= ruleExtendedID (kw= ':' this_PrimeID_2= rulePrimeID )* )
            // InternalScadeEquations.g:7085:3: this_ExtendedID_0= ruleExtendedID (kw= ':' this_PrimeID_2= rulePrimeID )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getNamespaceIDAccess().getExtendedIDParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_92);
            this_ExtendedID_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_ExtendedID_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalScadeEquations.g:7095:3: (kw= ':' this_PrimeID_2= rulePrimeID )*
            loop175:
            do {
                int alt175=2;
                int LA175_0 = input.LA(1);

                if ( (LA175_0==30) ) {
                    alt175=1;
                }


                switch (alt175) {
            	case 1 :
            	    // InternalScadeEquations.g:7096:4: kw= ':' this_PrimeID_2= rulePrimeID
            	    {
            	    kw=(Token)match(input,30,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(kw);
            	      				newLeafNode(kw, grammarAccess.getNamespaceIDAccess().getColonKeyword_1_0());
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				newCompositeNode(grammarAccess.getNamespaceIDAccess().getPrimeIDParserRuleCall_1_1());
            	      			
            	    }
            	    pushFollow(FollowSets000.FOLLOW_92);
            	    this_PrimeID_2=rulePrimeID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(this_PrimeID_2);
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop175;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamespaceID"


    // $ANTLR start "entryRuleReferenceDeclaration"
    // InternalScadeEquations.g:7116:1: entryRuleReferenceDeclaration returns [EObject current=null] : iv_ruleReferenceDeclaration= ruleReferenceDeclaration EOF ;
    public final EObject entryRuleReferenceDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReferenceDeclaration = null;


        try {
            // InternalScadeEquations.g:7116:61: (iv_ruleReferenceDeclaration= ruleReferenceDeclaration EOF )
            // InternalScadeEquations.g:7117:2: iv_ruleReferenceDeclaration= ruleReferenceDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReferenceDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleReferenceDeclaration=ruleReferenceDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReferenceDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReferenceDeclaration"


    // $ANTLR start "ruleReferenceDeclaration"
    // InternalScadeEquations.g:7123:1: ruleReferenceDeclaration returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* otherlv_11= ';' ( (lv_annotations_12_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleReferenceDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        EObject lv_annotations_0_0 = null;

        Enumerator lv_access_1_0 = null;

        EObject lv_extern_5_0 = null;

        EObject lv_extern_7_0 = null;

        EObject lv_valuedObjects_8_0 = null;

        EObject lv_valuedObjects_10_0 = null;

        EObject lv_annotations_12_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:7129:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* otherlv_11= ';' ( (lv_annotations_12_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalScadeEquations.g:7130:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* otherlv_11= ';' ( (lv_annotations_12_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalScadeEquations.g:7130:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* otherlv_11= ';' ( (lv_annotations_12_0= ruleCommentAnnotatonSL ) )? )
            // InternalScadeEquations.g:7131:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* otherlv_11= ';' ( (lv_annotations_12_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalScadeEquations.g:7131:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop176:
            do {
                int alt176=2;
                int LA176_0 = input.LA(1);

                if ( (LA176_0==RULE_COMMENT_ANNOTATION||LA176_0==89) ) {
                    alt176=1;
                }


                switch (alt176) {
            	case 1 :
            	    // InternalScadeEquations.g:7132:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalScadeEquations.g:7132:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalScadeEquations.g:7133:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_93);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop176;
                }
            } while (true);

            // InternalScadeEquations.g:7150:3: ( (lv_access_1_0= ruleAccessModifier ) )?
            int alt177=2;
            int LA177_0 = input.LA(1);

            if ( ((LA177_0>=117 && LA177_0<=119)) ) {
                alt177=1;
            }
            switch (alt177) {
                case 1 :
                    // InternalScadeEquations.g:7151:4: (lv_access_1_0= ruleAccessModifier )
                    {
                    // InternalScadeEquations.g:7151:4: (lv_access_1_0= ruleAccessModifier )
                    // InternalScadeEquations.g:7152:5: lv_access_1_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getAccessAccessModifierEnumRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_94);
                    lv_access_1_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_1_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:7169:3: ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) )
            int alt179=2;
            int LA179_0 = input.LA(1);

            if ( (LA179_0==72) ) {
                alt179=1;
            }
            else if ( (LA179_0==25) ) {
                alt179=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 179, 0, input);

                throw nvae;
            }
            switch (alt179) {
                case 1 :
                    // InternalScadeEquations.g:7170:4: (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) )
                    {
                    // InternalScadeEquations.g:7170:4: (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) )
                    // InternalScadeEquations.g:7171:5: otherlv_2= 'ref' ( ( ruleNamespaceID ) )
                    {
                    otherlv_2=(Token)match(input,72,FollowSets000.FOLLOW_95); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getReferenceDeclarationAccess().getRefKeyword_2_0_0());
                      				
                    }
                    // InternalScadeEquations.g:7175:5: ( ( ruleNamespaceID ) )
                    // InternalScadeEquations.g:7176:6: ( ruleNamespaceID )
                    {
                    // InternalScadeEquations.g:7176:6: ( ruleNamespaceID )
                    // InternalScadeEquations.g:7177:7: ruleNamespaceID
                    {
                    if ( state.backtracking==0 ) {

                      							/* */
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getReferenceDeclarationRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getReferenceNamedObjectCrossReference_2_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_35);
                    ruleNamespaceID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:7196:4: (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* )
                    {
                    // InternalScadeEquations.g:7196:4: (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* )
                    // InternalScadeEquations.g:7197:5: otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )*
                    {
                    otherlv_4=(Token)match(input,25,FollowSets000.FOLLOW_96); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_4, grammarAccess.getReferenceDeclarationAccess().getExternKeyword_2_1_0());
                      				
                    }
                    // InternalScadeEquations.g:7201:5: ( (lv_extern_5_0= ruleExternString ) )
                    // InternalScadeEquations.g:7202:6: (lv_extern_5_0= ruleExternString )
                    {
                    // InternalScadeEquations.g:7202:6: (lv_extern_5_0= ruleExternString )
                    // InternalScadeEquations.g:7203:7: lv_extern_5_0= ruleExternString
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getExternExternStringParserRuleCall_2_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_97);
                    lv_extern_5_0=ruleExternString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
                      							}
                      							add(
                      								current,
                      								"extern",
                      								lv_extern_5_0,
                      								"de.cau.cs.kieler.kexpressions.kext.KExt.ExternString");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:7220:5: (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )*
                    loop178:
                    do {
                        int alt178=2;
                        int LA178_0 = input.LA(1);

                        if ( (LA178_0==18) ) {
                            alt178=1;
                        }


                        switch (alt178) {
                    	case 1 :
                    	    // InternalScadeEquations.g:7221:6: otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,18,FollowSets000.FOLLOW_96); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_6, grammarAccess.getReferenceDeclarationAccess().getCommaKeyword_2_1_2_0());
                    	      					
                    	    }
                    	    // InternalScadeEquations.g:7225:6: ( (lv_extern_7_0= ruleExternString ) )
                    	    // InternalScadeEquations.g:7226:7: (lv_extern_7_0= ruleExternString )
                    	    {
                    	    // InternalScadeEquations.g:7226:7: (lv_extern_7_0= ruleExternString )
                    	    // InternalScadeEquations.g:7227:8: lv_extern_7_0= ruleExternString
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getExternExternStringParserRuleCall_2_1_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_97);
                    	    lv_extern_7_0=ruleExternString();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"extern",
                    	      									lv_extern_7_0,
                    	      									"de.cau.cs.kieler.kexpressions.kext.KExt.ExternString");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop178;
                        }
                    } while (true);


                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:7247:3: ( (lv_valuedObjects_8_0= ruleValuedObject ) )
            // InternalScadeEquations.g:7248:4: (lv_valuedObjects_8_0= ruleValuedObject )
            {
            // InternalScadeEquations.g:7248:4: (lv_valuedObjects_8_0= ruleValuedObject )
            // InternalScadeEquations.g:7249:5: lv_valuedObjects_8_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_71);
            lv_valuedObjects_8_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_8_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:7266:3: (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )*
            loop180:
            do {
                int alt180=2;
                int LA180_0 = input.LA(1);

                if ( (LA180_0==18) ) {
                    alt180=1;
                }


                switch (alt180) {
            	case 1 :
            	    // InternalScadeEquations.g:7267:4: otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) )
            	    {
            	    otherlv_9=(Token)match(input,18,FollowSets000.FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_9, grammarAccess.getReferenceDeclarationAccess().getCommaKeyword_4_0());
            	      			
            	    }
            	    // InternalScadeEquations.g:7271:4: ( (lv_valuedObjects_10_0= ruleValuedObject ) )
            	    // InternalScadeEquations.g:7272:5: (lv_valuedObjects_10_0= ruleValuedObject )
            	    {
            	    // InternalScadeEquations.g:7272:5: (lv_valuedObjects_10_0= ruleValuedObject )
            	    // InternalScadeEquations.g:7273:6: lv_valuedObjects_10_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_4_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_71);
            	    lv_valuedObjects_10_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"valuedObjects",
            	      							lv_valuedObjects_10_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop180;
                }
            } while (true);

            otherlv_11=(Token)match(input,20,FollowSets000.FOLLOW_72); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_11, grammarAccess.getReferenceDeclarationAccess().getSemicolonKeyword_5());
              		
            }
            // InternalScadeEquations.g:7295:3: ( (lv_annotations_12_0= ruleCommentAnnotatonSL ) )?
            int alt181=2;
            int LA181_0 = input.LA(1);

            if ( (LA181_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt181=1;
            }
            switch (alt181) {
                case 1 :
                    // InternalScadeEquations.g:7296:4: (lv_annotations_12_0= ruleCommentAnnotatonSL )
                    {
                    // InternalScadeEquations.g:7296:4: (lv_annotations_12_0= ruleCommentAnnotatonSL )
                    // InternalScadeEquations.g:7297:5: lv_annotations_12_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_6_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_12_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_12_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReferenceDeclaration"


    // $ANTLR start "entryRuleReferenceDeclarationWOSemicolon"
    // InternalScadeEquations.g:7318:1: entryRuleReferenceDeclarationWOSemicolon returns [EObject current=null] : iv_ruleReferenceDeclarationWOSemicolon= ruleReferenceDeclarationWOSemicolon EOF ;
    public final EObject entryRuleReferenceDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReferenceDeclarationWOSemicolon = null;


        try {
            // InternalScadeEquations.g:7318:72: (iv_ruleReferenceDeclarationWOSemicolon= ruleReferenceDeclarationWOSemicolon EOF )
            // InternalScadeEquations.g:7319:2: iv_ruleReferenceDeclarationWOSemicolon= ruleReferenceDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleReferenceDeclarationWOSemicolon=ruleReferenceDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReferenceDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReferenceDeclarationWOSemicolon"


    // $ANTLR start "ruleReferenceDeclarationWOSemicolon"
    // InternalScadeEquations.g:7325:1: ruleReferenceDeclarationWOSemicolon returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* ( (lv_annotations_11_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleReferenceDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_9=null;
        EObject lv_annotations_0_0 = null;

        Enumerator lv_access_1_0 = null;

        EObject lv_extern_5_0 = null;

        EObject lv_extern_7_0 = null;

        EObject lv_valuedObjects_8_0 = null;

        EObject lv_valuedObjects_10_0 = null;

        EObject lv_annotations_11_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:7331:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* ( (lv_annotations_11_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalScadeEquations.g:7332:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* ( (lv_annotations_11_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalScadeEquations.g:7332:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* ( (lv_annotations_11_0= ruleCommentAnnotatonSL ) )? )
            // InternalScadeEquations.g:7333:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* ( (lv_annotations_11_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalScadeEquations.g:7333:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop182:
            do {
                int alt182=2;
                int LA182_0 = input.LA(1);

                if ( (LA182_0==RULE_COMMENT_ANNOTATION||LA182_0==89) ) {
                    alt182=1;
                }


                switch (alt182) {
            	case 1 :
            	    // InternalScadeEquations.g:7334:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalScadeEquations.g:7334:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalScadeEquations.g:7335:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_93);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop182;
                }
            } while (true);

            // InternalScadeEquations.g:7352:3: ( (lv_access_1_0= ruleAccessModifier ) )?
            int alt183=2;
            int LA183_0 = input.LA(1);

            if ( ((LA183_0>=117 && LA183_0<=119)) ) {
                alt183=1;
            }
            switch (alt183) {
                case 1 :
                    // InternalScadeEquations.g:7353:4: (lv_access_1_0= ruleAccessModifier )
                    {
                    // InternalScadeEquations.g:7353:4: (lv_access_1_0= ruleAccessModifier )
                    // InternalScadeEquations.g:7354:5: lv_access_1_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getAccessAccessModifierEnumRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_94);
                    lv_access_1_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_1_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:7371:3: ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) )
            int alt185=2;
            int LA185_0 = input.LA(1);

            if ( (LA185_0==72) ) {
                alt185=1;
            }
            else if ( (LA185_0==25) ) {
                alt185=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 185, 0, input);

                throw nvae;
            }
            switch (alt185) {
                case 1 :
                    // InternalScadeEquations.g:7372:4: (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) )
                    {
                    // InternalScadeEquations.g:7372:4: (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) )
                    // InternalScadeEquations.g:7373:5: otherlv_2= 'ref' ( ( ruleNamespaceID ) )
                    {
                    otherlv_2=(Token)match(input,72,FollowSets000.FOLLOW_95); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getRefKeyword_2_0_0());
                      				
                    }
                    // InternalScadeEquations.g:7377:5: ( ( ruleNamespaceID ) )
                    // InternalScadeEquations.g:7378:6: ( ruleNamespaceID )
                    {
                    // InternalScadeEquations.g:7378:6: ( ruleNamespaceID )
                    // InternalScadeEquations.g:7379:7: ruleNamespaceID
                    {
                    if ( state.backtracking==0 ) {

                      							/* */
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getReferenceDeclarationWOSemicolonRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getReferenceNamedObjectCrossReference_2_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_35);
                    ruleNamespaceID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:7398:4: (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* )
                    {
                    // InternalScadeEquations.g:7398:4: (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* )
                    // InternalScadeEquations.g:7399:5: otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )*
                    {
                    otherlv_4=(Token)match(input,25,FollowSets000.FOLLOW_96); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_4, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getExternKeyword_2_1_0());
                      				
                    }
                    // InternalScadeEquations.g:7403:5: ( (lv_extern_5_0= ruleExternString ) )
                    // InternalScadeEquations.g:7404:6: (lv_extern_5_0= ruleExternString )
                    {
                    // InternalScadeEquations.g:7404:6: (lv_extern_5_0= ruleExternString )
                    // InternalScadeEquations.g:7405:7: lv_extern_5_0= ruleExternString
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getExternExternStringParserRuleCall_2_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_97);
                    lv_extern_5_0=ruleExternString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
                      							}
                      							add(
                      								current,
                      								"extern",
                      								lv_extern_5_0,
                      								"de.cau.cs.kieler.kexpressions.kext.KExt.ExternString");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:7422:5: (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )*
                    loop184:
                    do {
                        int alt184=2;
                        int LA184_0 = input.LA(1);

                        if ( (LA184_0==18) ) {
                            alt184=1;
                        }


                        switch (alt184) {
                    	case 1 :
                    	    // InternalScadeEquations.g:7423:6: otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,18,FollowSets000.FOLLOW_96); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_6, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getCommaKeyword_2_1_2_0());
                    	      					
                    	    }
                    	    // InternalScadeEquations.g:7427:6: ( (lv_extern_7_0= ruleExternString ) )
                    	    // InternalScadeEquations.g:7428:7: (lv_extern_7_0= ruleExternString )
                    	    {
                    	    // InternalScadeEquations.g:7428:7: (lv_extern_7_0= ruleExternString )
                    	    // InternalScadeEquations.g:7429:8: lv_extern_7_0= ruleExternString
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getExternExternStringParserRuleCall_2_1_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_97);
                    	    lv_extern_7_0=ruleExternString();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"extern",
                    	      									lv_extern_7_0,
                    	      									"de.cau.cs.kieler.kexpressions.kext.KExt.ExternString");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop184;
                        }
                    } while (true);


                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:7449:3: ( (lv_valuedObjects_8_0= ruleValuedObject ) )
            // InternalScadeEquations.g:7450:4: (lv_valuedObjects_8_0= ruleValuedObject )
            {
            // InternalScadeEquations.g:7450:4: (lv_valuedObjects_8_0= ruleValuedObject )
            // InternalScadeEquations.g:7451:5: lv_valuedObjects_8_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_73);
            lv_valuedObjects_8_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_8_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:7468:3: (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )*
            loop186:
            do {
                int alt186=2;
                int LA186_0 = input.LA(1);

                if ( (LA186_0==18) ) {
                    alt186=1;
                }


                switch (alt186) {
            	case 1 :
            	    // InternalScadeEquations.g:7469:4: otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) )
            	    {
            	    otherlv_9=(Token)match(input,18,FollowSets000.FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_9, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getCommaKeyword_4_0());
            	      			
            	    }
            	    // InternalScadeEquations.g:7473:4: ( (lv_valuedObjects_10_0= ruleValuedObject ) )
            	    // InternalScadeEquations.g:7474:5: (lv_valuedObjects_10_0= ruleValuedObject )
            	    {
            	    // InternalScadeEquations.g:7474:5: (lv_valuedObjects_10_0= ruleValuedObject )
            	    // InternalScadeEquations.g:7475:6: lv_valuedObjects_10_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_4_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_73);
            	    lv_valuedObjects_10_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
            	      						}
            	      						add(
            	      							current,
            	      							"valuedObjects",
            	      							lv_valuedObjects_10_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop186;
                }
            } while (true);

            // InternalScadeEquations.g:7493:3: ( (lv_annotations_11_0= ruleCommentAnnotatonSL ) )?
            int alt187=2;
            int LA187_0 = input.LA(1);

            if ( (LA187_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt187=1;
            }
            switch (alt187) {
                case 1 :
                    // InternalScadeEquations.g:7494:4: (lv_annotations_11_0= ruleCommentAnnotatonSL )
                    {
                    // InternalScadeEquations.g:7494:4: (lv_annotations_11_0= ruleCommentAnnotatonSL )
                    // InternalScadeEquations.g:7495:5: lv_annotations_11_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_11_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_11_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReferenceDeclarationWOSemicolon"


    // $ANTLR start "entryRuleExternString"
    // InternalScadeEquations.g:7516:1: entryRuleExternString returns [EObject current=null] : iv_ruleExternString= ruleExternString EOF ;
    public final EObject entryRuleExternString() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExternString = null;


        try {
            // InternalScadeEquations.g:7516:53: (iv_ruleExternString= ruleExternString EOF )
            // InternalScadeEquations.g:7517:2: iv_ruleExternString= ruleExternString EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExternStringRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleExternString=ruleExternString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExternString; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExternString"


    // $ANTLR start "ruleExternString"
    // InternalScadeEquations.g:7523:1: ruleExternString returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleTagAnnotation ) )* ( (lv_code_1_0= RULE_STRING ) ) ) ;
    public final EObject ruleExternString() throws RecognitionException {
        EObject current = null;

        Token lv_code_1_0=null;
        EObject lv_annotations_0_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:7529:2: ( ( ( (lv_annotations_0_0= ruleTagAnnotation ) )* ( (lv_code_1_0= RULE_STRING ) ) ) )
            // InternalScadeEquations.g:7530:2: ( ( (lv_annotations_0_0= ruleTagAnnotation ) )* ( (lv_code_1_0= RULE_STRING ) ) )
            {
            // InternalScadeEquations.g:7530:2: ( ( (lv_annotations_0_0= ruleTagAnnotation ) )* ( (lv_code_1_0= RULE_STRING ) ) )
            // InternalScadeEquations.g:7531:3: ( (lv_annotations_0_0= ruleTagAnnotation ) )* ( (lv_code_1_0= RULE_STRING ) )
            {
            // InternalScadeEquations.g:7531:3: ( (lv_annotations_0_0= ruleTagAnnotation ) )*
            loop188:
            do {
                int alt188=2;
                int LA188_0 = input.LA(1);

                if ( (LA188_0==89) ) {
                    alt188=1;
                }


                switch (alt188) {
            	case 1 :
            	    // InternalScadeEquations.g:7532:4: (lv_annotations_0_0= ruleTagAnnotation )
            	    {
            	    // InternalScadeEquations.g:7532:4: (lv_annotations_0_0= ruleTagAnnotation )
            	    // InternalScadeEquations.g:7533:5: lv_annotations_0_0= ruleTagAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getExternStringAccess().getAnnotationsTagAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_96);
            	    lv_annotations_0_0=ruleTagAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getExternStringRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.TagAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop188;
                }
            } while (true);

            // InternalScadeEquations.g:7550:3: ( (lv_code_1_0= RULE_STRING ) )
            // InternalScadeEquations.g:7551:4: (lv_code_1_0= RULE_STRING )
            {
            // InternalScadeEquations.g:7551:4: (lv_code_1_0= RULE_STRING )
            // InternalScadeEquations.g:7552:5: lv_code_1_0= RULE_STRING
            {
            lv_code_1_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_code_1_0, grammarAccess.getExternStringAccess().getCodeSTRINGTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getExternStringRule());
              					}
              					setWithLastConsumed(
              						current,
              						"code",
              						lv_code_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.STRING");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExternString"


    // $ANTLR start "entryRuleScheduleDeclaration"
    // InternalScadeEquations.g:7572:1: entryRuleScheduleDeclaration returns [EObject current=null] : iv_ruleScheduleDeclaration= ruleScheduleDeclaration EOF ;
    public final EObject entryRuleScheduleDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScheduleDeclaration = null;


        try {
            // InternalScadeEquations.g:7572:60: (iv_ruleScheduleDeclaration= ruleScheduleDeclaration EOF )
            // InternalScadeEquations.g:7573:2: iv_ruleScheduleDeclaration= ruleScheduleDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScheduleDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScheduleDeclaration=ruleScheduleDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScheduleDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScheduleDeclaration"


    // $ANTLR start "ruleScheduleDeclaration"
    // InternalScadeEquations.g:7579:1: ruleScheduleDeclaration returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* otherlv_14= ';' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleScheduleDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_name_3_0=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        EObject lv_annotations_0_0 = null;

        Enumerator lv_access_1_0 = null;

        Enumerator lv_global_5_0 = null;

        Enumerator lv_priorities_7_0 = null;

        Enumerator lv_priorities_9_0 = null;

        EObject lv_valuedObjects_11_0 = null;

        EObject lv_valuedObjects_13_0 = null;

        EObject lv_annotations_15_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:7585:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* otherlv_14= ';' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalScadeEquations.g:7586:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* otherlv_14= ';' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalScadeEquations.g:7586:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* otherlv_14= ';' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? )
            // InternalScadeEquations.g:7587:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* otherlv_14= ';' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalScadeEquations.g:7587:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop189:
            do {
                int alt189=2;
                int LA189_0 = input.LA(1);

                if ( (LA189_0==RULE_COMMENT_ANNOTATION||LA189_0==89) ) {
                    alt189=1;
                }


                switch (alt189) {
            	case 1 :
            	    // InternalScadeEquations.g:7588:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalScadeEquations.g:7588:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalScadeEquations.g:7589:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_98);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop189;
                }
            } while (true);

            // InternalScadeEquations.g:7606:3: ( (lv_access_1_0= ruleAccessModifier ) )?
            int alt190=2;
            int LA190_0 = input.LA(1);

            if ( ((LA190_0>=117 && LA190_0<=119)) ) {
                alt190=1;
            }
            switch (alt190) {
                case 1 :
                    // InternalScadeEquations.g:7607:4: (lv_access_1_0= ruleAccessModifier )
                    {
                    // InternalScadeEquations.g:7607:4: (lv_access_1_0= ruleAccessModifier )
                    // InternalScadeEquations.g:7608:5: lv_access_1_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getAccessAccessModifierEnumRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_99);
                    lv_access_1_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_1_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,71,FollowSets000.FOLLOW_100); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getScheduleDeclarationAccess().getScheduleKeyword_2());
              		
            }
            // InternalScadeEquations.g:7629:3: ( (lv_name_3_0= RULE_STRING ) )?
            int alt191=2;
            int LA191_0 = input.LA(1);

            if ( (LA191_0==RULE_STRING) ) {
                alt191=1;
            }
            switch (alt191) {
                case 1 :
                    // InternalScadeEquations.g:7630:4: (lv_name_3_0= RULE_STRING )
                    {
                    // InternalScadeEquations.g:7630:4: (lv_name_3_0= RULE_STRING )
                    // InternalScadeEquations.g:7631:5: lv_name_3_0= RULE_STRING
                    {
                    lv_name_3_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_101); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_3_0, grammarAccess.getScheduleDeclarationAccess().getNameSTRINGTerminalRuleCall_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getScheduleDeclarationRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_3_0,
                      						"de.cau.cs.kieler.annotations.Annotations.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:7647:3: (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )?
            int alt192=2;
            int LA192_0 = input.LA(1);

            if ( (LA192_0==67) ) {
                alt192=1;
            }
            switch (alt192) {
                case 1 :
                    // InternalScadeEquations.g:7648:4: otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) )
                    {
                    otherlv_4=(Token)match(input,67,FollowSets000.FOLLOW_102); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getScheduleDeclarationAccess().getGlobalKeyword_4_0());
                      			
                    }
                    // InternalScadeEquations.g:7652:4: ( (lv_global_5_0= rulePriorityProtocol ) )
                    // InternalScadeEquations.g:7653:5: (lv_global_5_0= rulePriorityProtocol )
                    {
                    // InternalScadeEquations.g:7653:5: (lv_global_5_0= rulePriorityProtocol )
                    // InternalScadeEquations.g:7654:6: lv_global_5_0= rulePriorityProtocol
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getGlobalPriorityProtocolEnumRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_103);
                    lv_global_5_0=rulePriorityProtocol();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"global",
                      							lv_global_5_0,
                      							"de.cau.cs.kieler.kexpressions.kext.KExt.PriorityProtocol");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:7672:3: (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )?
            int alt194=2;
            int LA194_0 = input.LA(1);

            if ( (LA194_0==22) ) {
                alt194=1;
            }
            switch (alt194) {
                case 1 :
                    // InternalScadeEquations.g:7673:4: otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}'
                    {
                    otherlv_6=(Token)match(input,22,FollowSets000.FOLLOW_102); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getScheduleDeclarationAccess().getLeftCurlyBracketKeyword_5_0());
                      			
                    }
                    // InternalScadeEquations.g:7677:4: ( (lv_priorities_7_0= rulePriorityProtocol ) )
                    // InternalScadeEquations.g:7678:5: (lv_priorities_7_0= rulePriorityProtocol )
                    {
                    // InternalScadeEquations.g:7678:5: (lv_priorities_7_0= rulePriorityProtocol )
                    // InternalScadeEquations.g:7679:6: lv_priorities_7_0= rulePriorityProtocol
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getPrioritiesPriorityProtocolEnumRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_17);
                    lv_priorities_7_0=rulePriorityProtocol();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
                      						}
                      						add(
                      							current,
                      							"priorities",
                      							lv_priorities_7_0,
                      							"de.cau.cs.kieler.kexpressions.kext.KExt.PriorityProtocol");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalScadeEquations.g:7696:4: (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )*
                    loop193:
                    do {
                        int alt193=2;
                        int LA193_0 = input.LA(1);

                        if ( (LA193_0==18) ) {
                            alt193=1;
                        }


                        switch (alt193) {
                    	case 1 :
                    	    // InternalScadeEquations.g:7697:5: otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) )
                    	    {
                    	    otherlv_8=(Token)match(input,18,FollowSets000.FOLLOW_102); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_8, grammarAccess.getScheduleDeclarationAccess().getCommaKeyword_5_2_0());
                    	      				
                    	    }
                    	    // InternalScadeEquations.g:7701:5: ( (lv_priorities_9_0= rulePriorityProtocol ) )
                    	    // InternalScadeEquations.g:7702:6: (lv_priorities_9_0= rulePriorityProtocol )
                    	    {
                    	    // InternalScadeEquations.g:7702:6: (lv_priorities_9_0= rulePriorityProtocol )
                    	    // InternalScadeEquations.g:7703:7: lv_priorities_9_0= rulePriorityProtocol
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getPrioritiesPriorityProtocolEnumRuleCall_5_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_17);
                    	    lv_priorities_9_0=rulePriorityProtocol();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"priorities",
                    	      								lv_priorities_9_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.PriorityProtocol");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop193;
                        }
                    } while (true);

                    otherlv_10=(Token)match(input,23,FollowSets000.FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getScheduleDeclarationAccess().getRightCurlyBracketKeyword_5_3());
                      			
                    }

                    }
                    break;

            }

            // InternalScadeEquations.g:7726:3: ( (lv_valuedObjects_11_0= ruleValuedObject ) )
            // InternalScadeEquations.g:7727:4: (lv_valuedObjects_11_0= ruleValuedObject )
            {
            // InternalScadeEquations.g:7727:4: (lv_valuedObjects_11_0= ruleValuedObject )
            // InternalScadeEquations.g:7728:5: lv_valuedObjects_11_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_6_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_71);
            lv_valuedObjects_11_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_11_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:7745:3: (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )*
            loop195:
            do {
                int alt195=2;
                int LA195_0 = input.LA(1);

                if ( (LA195_0==18) ) {
                    alt195=1;
                }


                switch (alt195) {
            	case 1 :
            	    // InternalScadeEquations.g:7746:4: otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) )
            	    {
            	    otherlv_12=(Token)match(input,18,FollowSets000.FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_12, grammarAccess.getScheduleDeclarationAccess().getCommaKeyword_7_0());
            	      			
            	    }
            	    // InternalScadeEquations.g:7750:4: ( (lv_valuedObjects_13_0= ruleValuedObject ) )
            	    // InternalScadeEquations.g:7751:5: (lv_valuedObjects_13_0= ruleValuedObject )
            	    {
            	    // InternalScadeEquations.g:7751:5: (lv_valuedObjects_13_0= ruleValuedObject )
            	    // InternalScadeEquations.g:7752:6: lv_valuedObjects_13_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_7_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_71);
            	    lv_valuedObjects_13_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"valuedObjects",
            	      							lv_valuedObjects_13_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop195;
                }
            } while (true);

            otherlv_14=(Token)match(input,20,FollowSets000.FOLLOW_72); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_14, grammarAccess.getScheduleDeclarationAccess().getSemicolonKeyword_8());
              		
            }
            // InternalScadeEquations.g:7774:3: ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )?
            int alt196=2;
            int LA196_0 = input.LA(1);

            if ( (LA196_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt196=1;
            }
            switch (alt196) {
                case 1 :
                    // InternalScadeEquations.g:7775:4: (lv_annotations_15_0= ruleCommentAnnotatonSL )
                    {
                    // InternalScadeEquations.g:7775:4: (lv_annotations_15_0= ruleCommentAnnotatonSL )
                    // InternalScadeEquations.g:7776:5: lv_annotations_15_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_9_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_15_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_15_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScheduleDeclaration"


    // $ANTLR start "entryRuleScheduleDeclarationWOSemicolon"
    // InternalScadeEquations.g:7797:1: entryRuleScheduleDeclarationWOSemicolon returns [EObject current=null] : iv_ruleScheduleDeclarationWOSemicolon= ruleScheduleDeclarationWOSemicolon EOF ;
    public final EObject entryRuleScheduleDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScheduleDeclarationWOSemicolon = null;


        try {
            // InternalScadeEquations.g:7797:71: (iv_ruleScheduleDeclarationWOSemicolon= ruleScheduleDeclarationWOSemicolon EOF )
            // InternalScadeEquations.g:7798:2: iv_ruleScheduleDeclarationWOSemicolon= ruleScheduleDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScheduleDeclarationWOSemicolon=ruleScheduleDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScheduleDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScheduleDeclarationWOSemicolon"


    // $ANTLR start "ruleScheduleDeclarationWOSemicolon"
    // InternalScadeEquations.g:7804:1: ruleScheduleDeclarationWOSemicolon returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleScheduleDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_name_3_0=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_annotations_0_0 = null;

        Enumerator lv_access_1_0 = null;

        Enumerator lv_global_5_0 = null;

        Enumerator lv_priorities_7_0 = null;

        Enumerator lv_priorities_9_0 = null;

        EObject lv_valuedObjects_11_0 = null;

        EObject lv_valuedObjects_13_0 = null;

        EObject lv_annotations_14_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:7810:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalScadeEquations.g:7811:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalScadeEquations.g:7811:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? )
            // InternalScadeEquations.g:7812:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalScadeEquations.g:7812:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop197:
            do {
                int alt197=2;
                int LA197_0 = input.LA(1);

                if ( (LA197_0==RULE_COMMENT_ANNOTATION||LA197_0==89) ) {
                    alt197=1;
                }


                switch (alt197) {
            	case 1 :
            	    // InternalScadeEquations.g:7813:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalScadeEquations.g:7813:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalScadeEquations.g:7814:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_98);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop197;
                }
            } while (true);

            // InternalScadeEquations.g:7831:3: ( (lv_access_1_0= ruleAccessModifier ) )?
            int alt198=2;
            int LA198_0 = input.LA(1);

            if ( ((LA198_0>=117 && LA198_0<=119)) ) {
                alt198=1;
            }
            switch (alt198) {
                case 1 :
                    // InternalScadeEquations.g:7832:4: (lv_access_1_0= ruleAccessModifier )
                    {
                    // InternalScadeEquations.g:7832:4: (lv_access_1_0= ruleAccessModifier )
                    // InternalScadeEquations.g:7833:5: lv_access_1_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getAccessAccessModifierEnumRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_99);
                    lv_access_1_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_1_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,71,FollowSets000.FOLLOW_100); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getScheduleKeyword_2());
              		
            }
            // InternalScadeEquations.g:7854:3: ( (lv_name_3_0= RULE_STRING ) )?
            int alt199=2;
            int LA199_0 = input.LA(1);

            if ( (LA199_0==RULE_STRING) ) {
                alt199=1;
            }
            switch (alt199) {
                case 1 :
                    // InternalScadeEquations.g:7855:4: (lv_name_3_0= RULE_STRING )
                    {
                    // InternalScadeEquations.g:7855:4: (lv_name_3_0= RULE_STRING )
                    // InternalScadeEquations.g:7856:5: lv_name_3_0= RULE_STRING
                    {
                    lv_name_3_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_101); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_3_0, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getNameSTRINGTerminalRuleCall_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getScheduleDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_3_0,
                      						"de.cau.cs.kieler.annotations.Annotations.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:7872:3: (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )?
            int alt200=2;
            int LA200_0 = input.LA(1);

            if ( (LA200_0==67) ) {
                alt200=1;
            }
            switch (alt200) {
                case 1 :
                    // InternalScadeEquations.g:7873:4: otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) )
                    {
                    otherlv_4=(Token)match(input,67,FollowSets000.FOLLOW_102); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getGlobalKeyword_4_0());
                      			
                    }
                    // InternalScadeEquations.g:7877:4: ( (lv_global_5_0= rulePriorityProtocol ) )
                    // InternalScadeEquations.g:7878:5: (lv_global_5_0= rulePriorityProtocol )
                    {
                    // InternalScadeEquations.g:7878:5: (lv_global_5_0= rulePriorityProtocol )
                    // InternalScadeEquations.g:7879:6: lv_global_5_0= rulePriorityProtocol
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getGlobalPriorityProtocolEnumRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_103);
                    lv_global_5_0=rulePriorityProtocol();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
                      						}
                      						set(
                      							current,
                      							"global",
                      							lv_global_5_0,
                      							"de.cau.cs.kieler.kexpressions.kext.KExt.PriorityProtocol");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:7897:3: (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )?
            int alt202=2;
            int LA202_0 = input.LA(1);

            if ( (LA202_0==22) ) {
                alt202=1;
            }
            switch (alt202) {
                case 1 :
                    // InternalScadeEquations.g:7898:4: otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}'
                    {
                    otherlv_6=(Token)match(input,22,FollowSets000.FOLLOW_102); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getLeftCurlyBracketKeyword_5_0());
                      			
                    }
                    // InternalScadeEquations.g:7902:4: ( (lv_priorities_7_0= rulePriorityProtocol ) )
                    // InternalScadeEquations.g:7903:5: (lv_priorities_7_0= rulePriorityProtocol )
                    {
                    // InternalScadeEquations.g:7903:5: (lv_priorities_7_0= rulePriorityProtocol )
                    // InternalScadeEquations.g:7904:6: lv_priorities_7_0= rulePriorityProtocol
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getPrioritiesPriorityProtocolEnumRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_17);
                    lv_priorities_7_0=rulePriorityProtocol();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
                      						}
                      						add(
                      							current,
                      							"priorities",
                      							lv_priorities_7_0,
                      							"de.cau.cs.kieler.kexpressions.kext.KExt.PriorityProtocol");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalScadeEquations.g:7921:4: (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )*
                    loop201:
                    do {
                        int alt201=2;
                        int LA201_0 = input.LA(1);

                        if ( (LA201_0==18) ) {
                            alt201=1;
                        }


                        switch (alt201) {
                    	case 1 :
                    	    // InternalScadeEquations.g:7922:5: otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) )
                    	    {
                    	    otherlv_8=(Token)match(input,18,FollowSets000.FOLLOW_102); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_8, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getCommaKeyword_5_2_0());
                    	      				
                    	    }
                    	    // InternalScadeEquations.g:7926:5: ( (lv_priorities_9_0= rulePriorityProtocol ) )
                    	    // InternalScadeEquations.g:7927:6: (lv_priorities_9_0= rulePriorityProtocol )
                    	    {
                    	    // InternalScadeEquations.g:7927:6: (lv_priorities_9_0= rulePriorityProtocol )
                    	    // InternalScadeEquations.g:7928:7: lv_priorities_9_0= rulePriorityProtocol
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getPrioritiesPriorityProtocolEnumRuleCall_5_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_17);
                    	    lv_priorities_9_0=rulePriorityProtocol();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"priorities",
                    	      								lv_priorities_9_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.PriorityProtocol");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop201;
                        }
                    } while (true);

                    otherlv_10=(Token)match(input,23,FollowSets000.FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getRightCurlyBracketKeyword_5_3());
                      			
                    }

                    }
                    break;

            }

            // InternalScadeEquations.g:7951:3: ( (lv_valuedObjects_11_0= ruleValuedObject ) )
            // InternalScadeEquations.g:7952:4: (lv_valuedObjects_11_0= ruleValuedObject )
            {
            // InternalScadeEquations.g:7952:4: (lv_valuedObjects_11_0= ruleValuedObject )
            // InternalScadeEquations.g:7953:5: lv_valuedObjects_11_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_6_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_73);
            lv_valuedObjects_11_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_11_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:7970:3: (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )*
            loop203:
            do {
                int alt203=2;
                int LA203_0 = input.LA(1);

                if ( (LA203_0==18) ) {
                    alt203=1;
                }


                switch (alt203) {
            	case 1 :
            	    // InternalScadeEquations.g:7971:4: otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) )
            	    {
            	    otherlv_12=(Token)match(input,18,FollowSets000.FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_12, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getCommaKeyword_7_0());
            	      			
            	    }
            	    // InternalScadeEquations.g:7975:4: ( (lv_valuedObjects_13_0= ruleValuedObject ) )
            	    // InternalScadeEquations.g:7976:5: (lv_valuedObjects_13_0= ruleValuedObject )
            	    {
            	    // InternalScadeEquations.g:7976:5: (lv_valuedObjects_13_0= ruleValuedObject )
            	    // InternalScadeEquations.g:7977:6: lv_valuedObjects_13_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_7_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_73);
            	    lv_valuedObjects_13_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
            	      						}
            	      						add(
            	      							current,
            	      							"valuedObjects",
            	      							lv_valuedObjects_13_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop203;
                }
            } while (true);

            // InternalScadeEquations.g:7995:3: ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )?
            int alt204=2;
            int LA204_0 = input.LA(1);

            if ( (LA204_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt204=1;
            }
            switch (alt204) {
                case 1 :
                    // InternalScadeEquations.g:7996:4: (lv_annotations_14_0= ruleCommentAnnotatonSL )
                    {
                    // InternalScadeEquations.g:7996:4: (lv_annotations_14_0= ruleCommentAnnotatonSL )
                    // InternalScadeEquations.g:7997:5: lv_annotations_14_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_8_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_14_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_14_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScheduleDeclarationWOSemicolon"


    // $ANTLR start "entryRuleValuedObject"
    // InternalScadeEquations.g:8018:1: entryRuleValuedObject returns [EObject current=null] : iv_ruleValuedObject= ruleValuedObject EOF ;
    public final EObject entryRuleValuedObject() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValuedObject = null;


        try {
            // InternalScadeEquations.g:8018:53: (iv_ruleValuedObject= ruleValuedObject EOF )
            // InternalScadeEquations.g:8019:2: iv_ruleValuedObject= ruleValuedObject EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValuedObjectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleValuedObject=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValuedObject; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValuedObject"


    // $ANTLR start "ruleValuedObject"
    // InternalScadeEquations.g:8025:1: ruleValuedObject returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )? (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )? (otherlv_9= 'label' ( (lv_label_10_0= RULE_STRING ) ) )? ) ;
    public final EObject ruleValuedObject() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token lv_label_10_0=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_cardinalities_3_0 = null;

        EObject lv_initialValue_6_0 = null;

        Enumerator lv_combineOperator_8_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:8031:2: ( ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )? (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )? (otherlv_9= 'label' ( (lv_label_10_0= RULE_STRING ) ) )? ) )
            // InternalScadeEquations.g:8032:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )? (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )? (otherlv_9= 'label' ( (lv_label_10_0= RULE_STRING ) ) )? )
            {
            // InternalScadeEquations.g:8032:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )? (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )? (otherlv_9= 'label' ( (lv_label_10_0= RULE_STRING ) ) )? )
            // InternalScadeEquations.g:8033:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )? (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )? (otherlv_9= 'label' ( (lv_label_10_0= RULE_STRING ) ) )?
            {
            // InternalScadeEquations.g:8033:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )*
            loop205:
            do {
                int alt205=2;
                int LA205_0 = input.LA(1);

                if ( (LA205_0==RULE_COMMENT_ANNOTATION||LA205_0==89) ) {
                    alt205=1;
                }


                switch (alt205) {
            	case 1 :
            	    // InternalScadeEquations.g:8034:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    {
            	    // InternalScadeEquations.g:8034:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    // InternalScadeEquations.g:8035:5: lv_annotations_0_0= ruleQuotedStringAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getValuedObjectAccess().getAnnotationsQuotedStringAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_35);
            	    lv_annotations_0_0=ruleQuotedStringAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getValuedObjectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.QuotedStringAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop205;
                }
            } while (true);

            // InternalScadeEquations.g:8052:3: ( (lv_name_1_0= rulePrimeID ) )
            // InternalScadeEquations.g:8053:4: (lv_name_1_0= rulePrimeID )
            {
            // InternalScadeEquations.g:8053:4: (lv_name_1_0= rulePrimeID )
            // InternalScadeEquations.g:8054:5: lv_name_1_0= rulePrimeID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getValuedObjectAccess().getNamePrimeIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_104);
            lv_name_1_0=rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getValuedObjectRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.PrimeID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:8071:3: (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )*
            loop206:
            do {
                int alt206=2;
                int LA206_0 = input.LA(1);

                if ( (LA206_0==73) ) {
                    alt206=1;
                }


                switch (alt206) {
            	case 1 :
            	    // InternalScadeEquations.g:8072:4: otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']'
            	    {
            	    otherlv_2=(Token)match(input,73,FollowSets000.FOLLOW_9); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getValuedObjectAccess().getLeftSquareBracketKeyword_2_0());
            	      			
            	    }
            	    // InternalScadeEquations.g:8076:4: ( (lv_cardinalities_3_0= ruleExpression ) )
            	    // InternalScadeEquations.g:8077:5: (lv_cardinalities_3_0= ruleExpression )
            	    {
            	    // InternalScadeEquations.g:8077:5: (lv_cardinalities_3_0= ruleExpression )
            	    // InternalScadeEquations.g:8078:6: lv_cardinalities_3_0= ruleExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getValuedObjectAccess().getCardinalitiesExpressionParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_105);
            	    lv_cardinalities_3_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getValuedObjectRule());
            	      						}
            	      						add(
            	      							current,
            	      							"cardinalities",
            	      							lv_cardinalities_3_0,
            	      							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_4=(Token)match(input,74,FollowSets000.FOLLOW_104); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_4, grammarAccess.getValuedObjectAccess().getRightSquareBracketKeyword_2_2());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop206;
                }
            } while (true);

            // InternalScadeEquations.g:8100:3: (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )?
            int alt207=2;
            int LA207_0 = input.LA(1);

            if ( (LA207_0==21) ) {
                alt207=1;
            }
            switch (alt207) {
                case 1 :
                    // InternalScadeEquations.g:8101:4: otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) )
                    {
                    otherlv_5=(Token)match(input,21,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getValuedObjectAccess().getEqualsSignKeyword_3_0());
                      			
                    }
                    // InternalScadeEquations.g:8105:4: ( (lv_initialValue_6_0= ruleExpression ) )
                    // InternalScadeEquations.g:8106:5: (lv_initialValue_6_0= ruleExpression )
                    {
                    // InternalScadeEquations.g:8106:5: (lv_initialValue_6_0= ruleExpression )
                    // InternalScadeEquations.g:8107:6: lv_initialValue_6_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getValuedObjectAccess().getInitialValueExpressionParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_106);
                    lv_initialValue_6_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getValuedObjectRule());
                      						}
                      						set(
                      							current,
                      							"initialValue",
                      							lv_initialValue_6_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:8125:3: (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )?
            int alt208=2;
            int LA208_0 = input.LA(1);

            if ( (LA208_0==75) ) {
                alt208=1;
            }
            switch (alt208) {
                case 1 :
                    // InternalScadeEquations.g:8126:4: otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) )
                    {
                    otherlv_7=(Token)match(input,75,FollowSets000.FOLLOW_107); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getValuedObjectAccess().getCombineKeyword_4_0());
                      			
                    }
                    // InternalScadeEquations.g:8130:4: ( (lv_combineOperator_8_0= ruleCombineOperator ) )
                    // InternalScadeEquations.g:8131:5: (lv_combineOperator_8_0= ruleCombineOperator )
                    {
                    // InternalScadeEquations.g:8131:5: (lv_combineOperator_8_0= ruleCombineOperator )
                    // InternalScadeEquations.g:8132:6: lv_combineOperator_8_0= ruleCombineOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getValuedObjectAccess().getCombineOperatorCombineOperatorEnumRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_108);
                    lv_combineOperator_8_0=ruleCombineOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getValuedObjectRule());
                      						}
                      						set(
                      							current,
                      							"combineOperator",
                      							lv_combineOperator_8_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.CombineOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:8150:3: (otherlv_9= 'label' ( (lv_label_10_0= RULE_STRING ) ) )?
            int alt209=2;
            int LA209_0 = input.LA(1);

            if ( (LA209_0==76) ) {
                alt209=1;
            }
            switch (alt209) {
                case 1 :
                    // InternalScadeEquations.g:8151:4: otherlv_9= 'label' ( (lv_label_10_0= RULE_STRING ) )
                    {
                    otherlv_9=(Token)match(input,76,FollowSets000.FOLLOW_70); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getValuedObjectAccess().getLabelKeyword_5_0());
                      			
                    }
                    // InternalScadeEquations.g:8155:4: ( (lv_label_10_0= RULE_STRING ) )
                    // InternalScadeEquations.g:8156:5: (lv_label_10_0= RULE_STRING )
                    {
                    // InternalScadeEquations.g:8156:5: (lv_label_10_0= RULE_STRING )
                    // InternalScadeEquations.g:8157:6: lv_label_10_0= RULE_STRING
                    {
                    lv_label_10_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_10_0, grammarAccess.getValuedObjectAccess().getLabelSTRINGTerminalRuleCall_5_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getValuedObjectRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_10_0,
                      							"de.cau.cs.kieler.annotations.Annotations.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValuedObject"


    // $ANTLR start "entryRuleSimpleValuedObject"
    // InternalScadeEquations.g:8178:1: entryRuleSimpleValuedObject returns [EObject current=null] : iv_ruleSimpleValuedObject= ruleSimpleValuedObject EOF ;
    public final EObject entryRuleSimpleValuedObject() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimpleValuedObject = null;


        try {
            // InternalScadeEquations.g:8178:59: (iv_ruleSimpleValuedObject= ruleSimpleValuedObject EOF )
            // InternalScadeEquations.g:8179:2: iv_ruleSimpleValuedObject= ruleSimpleValuedObject EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimpleValuedObjectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSimpleValuedObject=ruleSimpleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimpleValuedObject; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimpleValuedObject"


    // $ANTLR start "ruleSimpleValuedObject"
    // InternalScadeEquations.g:8185:1: ruleSimpleValuedObject returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) ) ;
    public final EObject ruleSimpleValuedObject() throws RecognitionException {
        EObject current = null;

        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:8191:2: ( ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) ) )
            // InternalScadeEquations.g:8192:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) )
            {
            // InternalScadeEquations.g:8192:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) )
            // InternalScadeEquations.g:8193:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) )
            {
            // InternalScadeEquations.g:8193:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )*
            loop210:
            do {
                int alt210=2;
                int LA210_0 = input.LA(1);

                if ( (LA210_0==RULE_COMMENT_ANNOTATION||LA210_0==89) ) {
                    alt210=1;
                }


                switch (alt210) {
            	case 1 :
            	    // InternalScadeEquations.g:8194:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    {
            	    // InternalScadeEquations.g:8194:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    // InternalScadeEquations.g:8195:5: lv_annotations_0_0= ruleQuotedStringAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSimpleValuedObjectAccess().getAnnotationsQuotedStringAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_35);
            	    lv_annotations_0_0=ruleQuotedStringAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSimpleValuedObjectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.QuotedStringAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop210;
                }
            } while (true);

            // InternalScadeEquations.g:8212:3: ( (lv_name_1_0= rulePrimeID ) )
            // InternalScadeEquations.g:8213:4: (lv_name_1_0= rulePrimeID )
            {
            // InternalScadeEquations.g:8213:4: (lv_name_1_0= rulePrimeID )
            // InternalScadeEquations.g:8214:5: lv_name_1_0= rulePrimeID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSimpleValuedObjectAccess().getNamePrimeIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_name_1_0=rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSimpleValuedObjectRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.PrimeID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimpleValuedObject"


    // $ANTLR start "entryRuleEffect"
    // InternalScadeEquations.g:8235:1: entryRuleEffect returns [EObject current=null] : iv_ruleEffect= ruleEffect EOF ;
    public final EObject entryRuleEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEffect = null;


        try {
            // InternalScadeEquations.g:8235:47: (iv_ruleEffect= ruleEffect EOF )
            // InternalScadeEquations.g:8236:2: iv_ruleEffect= ruleEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEffect=ruleEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEffect"


    // $ANTLR start "ruleEffect"
    // InternalScadeEquations.g:8242:1: ruleEffect returns [EObject current=null] : (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | this_ValuedEmission_2= ruleValuedEmission | this_HostcodeEffect_3= ruleHostcodeEffect | this_ReferenceCallEffect_4= ruleReferenceCallEffect | this_FunctionCallEffect_5= ruleFunctionCallEffect | this_PrintCallEffect_6= rulePrintCallEffect | this_RandomizeCallEffect_7= ruleRandomizeCallEffect | this_PureEmission_8= rulePureEmission ) ;
    public final EObject ruleEffect() throws RecognitionException {
        EObject current = null;

        EObject this_Assignment_0 = null;

        EObject this_PostfixEffect_1 = null;

        EObject this_ValuedEmission_2 = null;

        EObject this_HostcodeEffect_3 = null;

        EObject this_ReferenceCallEffect_4 = null;

        EObject this_FunctionCallEffect_5 = null;

        EObject this_PrintCallEffect_6 = null;

        EObject this_RandomizeCallEffect_7 = null;

        EObject this_PureEmission_8 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:8248:2: ( (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | this_ValuedEmission_2= ruleValuedEmission | this_HostcodeEffect_3= ruleHostcodeEffect | this_ReferenceCallEffect_4= ruleReferenceCallEffect | this_FunctionCallEffect_5= ruleFunctionCallEffect | this_PrintCallEffect_6= rulePrintCallEffect | this_RandomizeCallEffect_7= ruleRandomizeCallEffect | this_PureEmission_8= rulePureEmission ) )
            // InternalScadeEquations.g:8249:2: (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | this_ValuedEmission_2= ruleValuedEmission | this_HostcodeEffect_3= ruleHostcodeEffect | this_ReferenceCallEffect_4= ruleReferenceCallEffect | this_FunctionCallEffect_5= ruleFunctionCallEffect | this_PrintCallEffect_6= rulePrintCallEffect | this_RandomizeCallEffect_7= ruleRandomizeCallEffect | this_PureEmission_8= rulePureEmission )
            {
            // InternalScadeEquations.g:8249:2: (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | this_ValuedEmission_2= ruleValuedEmission | this_HostcodeEffect_3= ruleHostcodeEffect | this_ReferenceCallEffect_4= ruleReferenceCallEffect | this_FunctionCallEffect_5= ruleFunctionCallEffect | this_PrintCallEffect_6= rulePrintCallEffect | this_RandomizeCallEffect_7= ruleRandomizeCallEffect | this_PureEmission_8= rulePureEmission )
            int alt211=9;
            alt211 = dfa211.predict(input);
            switch (alt211) {
                case 1 :
                    // InternalScadeEquations.g:8250:3: this_Assignment_0= ruleAssignment
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEffectAccess().getAssignmentParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Assignment_0=ruleAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Assignment_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:8262:3: this_PostfixEffect_1= rulePostfixEffect
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEffectAccess().getPostfixEffectParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PostfixEffect_1=rulePostfixEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PostfixEffect_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalScadeEquations.g:8274:3: this_ValuedEmission_2= ruleValuedEmission
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEffectAccess().getValuedEmissionParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedEmission_2=ruleValuedEmission();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ValuedEmission_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalScadeEquations.g:8286:3: this_HostcodeEffect_3= ruleHostcodeEffect
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEffectAccess().getHostcodeEffectParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_HostcodeEffect_3=ruleHostcodeEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_HostcodeEffect_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalScadeEquations.g:8298:3: this_ReferenceCallEffect_4= ruleReferenceCallEffect
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEffectAccess().getReferenceCallEffectParserRuleCall_4());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ReferenceCallEffect_4=ruleReferenceCallEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ReferenceCallEffect_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalScadeEquations.g:8310:3: this_FunctionCallEffect_5= ruleFunctionCallEffect
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEffectAccess().getFunctionCallEffectParserRuleCall_5());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_FunctionCallEffect_5=ruleFunctionCallEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FunctionCallEffect_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalScadeEquations.g:8322:3: this_PrintCallEffect_6= rulePrintCallEffect
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEffectAccess().getPrintCallEffectParserRuleCall_6());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PrintCallEffect_6=rulePrintCallEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PrintCallEffect_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalScadeEquations.g:8334:3: this_RandomizeCallEffect_7= ruleRandomizeCallEffect
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEffectAccess().getRandomizeCallEffectParserRuleCall_7());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_RandomizeCallEffect_7=ruleRandomizeCallEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_RandomizeCallEffect_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalScadeEquations.g:8346:3: this_PureEmission_8= rulePureEmission
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEffectAccess().getPureEmissionParserRuleCall_8());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PureEmission_8=rulePureEmission();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PureEmission_8;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEffect"


    // $ANTLR start "entryRulePureEmission"
    // InternalScadeEquations.g:8361:1: entryRulePureEmission returns [EObject current=null] : iv_rulePureEmission= rulePureEmission EOF ;
    public final EObject entryRulePureEmission() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePureEmission = null;


        try {
            // InternalScadeEquations.g:8361:53: (iv_rulePureEmission= rulePureEmission EOF )
            // InternalScadeEquations.g:8362:2: iv_rulePureEmission= rulePureEmission EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPureEmissionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePureEmission=rulePureEmission();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePureEmission; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePureEmission"


    // $ANTLR start "rulePureEmission"
    // InternalScadeEquations.g:8368:1: rulePureEmission returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )? ) ;
    public final EObject rulePureEmission() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_reference_1_0 = null;

        EObject lv_schedule_3_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:8374:2: ( ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )? ) )
            // InternalScadeEquations.g:8375:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )? )
            {
            // InternalScadeEquations.g:8375:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )? )
            // InternalScadeEquations.g:8376:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )?
            {
            // InternalScadeEquations.g:8376:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )*
            loop212:
            do {
                int alt212=2;
                int LA212_0 = input.LA(1);

                if ( (LA212_0==RULE_COMMENT_ANNOTATION||LA212_0==89) ) {
                    alt212=1;
                }


                switch (alt212) {
            	case 1 :
            	    // InternalScadeEquations.g:8377:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    {
            	    // InternalScadeEquations.g:8377:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    // InternalScadeEquations.g:8378:5: lv_annotations_0_0= ruleQuotedStringAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getPureEmissionAccess().getAnnotationsQuotedStringAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_35);
            	    lv_annotations_0_0=ruleQuotedStringAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getPureEmissionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.QuotedStringAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop212;
                }
            } while (true);

            // InternalScadeEquations.g:8395:3: ( (lv_reference_1_0= ruleValuedObjectReference ) )
            // InternalScadeEquations.g:8396:4: (lv_reference_1_0= ruleValuedObjectReference )
            {
            // InternalScadeEquations.g:8396:4: (lv_reference_1_0= ruleValuedObjectReference )
            // InternalScadeEquations.g:8397:5: lv_reference_1_0= ruleValuedObjectReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPureEmissionAccess().getReferenceValuedObjectReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_109);
            lv_reference_1_0=ruleValuedObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPureEmissionRule());
              					}
              					set(
              						current,
              						"reference",
              						lv_reference_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:8414:3: (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )?
            int alt214=2;
            int LA214_0 = input.LA(1);

            if ( (LA214_0==71) ) {
                alt214=1;
            }
            switch (alt214) {
                case 1 :
                    // InternalScadeEquations.g:8415:4: otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_2=(Token)match(input,71,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getPureEmissionAccess().getScheduleKeyword_2_0());
                      			
                    }
                    // InternalScadeEquations.g:8419:4: ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+
                    int cnt213=0;
                    loop213:
                    do {
                        int alt213=2;
                        alt213 = dfa213.predict(input);
                        switch (alt213) {
                    	case 1 :
                    	    // InternalScadeEquations.g:8420:5: (lv_schedule_3_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalScadeEquations.g:8420:5: (lv_schedule_3_0= ruleScheduleObjectReference )
                    	    // InternalScadeEquations.g:8421:6: lv_schedule_3_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getPureEmissionAccess().getScheduleScheduleObjectReferenceParserRuleCall_2_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_110);
                    	    lv_schedule_3_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getPureEmissionRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_3_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt213 >= 1 ) break loop213;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(213, input);
                                throw eee;
                        }
                        cnt213++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePureEmission"


    // $ANTLR start "entryRuleValuedEmission"
    // InternalScadeEquations.g:8443:1: entryRuleValuedEmission returns [EObject current=null] : iv_ruleValuedEmission= ruleValuedEmission EOF ;
    public final EObject entryRuleValuedEmission() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValuedEmission = null;


        try {
            // InternalScadeEquations.g:8443:55: (iv_ruleValuedEmission= ruleValuedEmission EOF )
            // InternalScadeEquations.g:8444:2: iv_ruleValuedEmission= ruleValuedEmission EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValuedEmissionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleValuedEmission=ruleValuedEmission();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValuedEmission; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValuedEmission"


    // $ANTLR start "ruleValuedEmission"
    // InternalScadeEquations.g:8450:1: ruleValuedEmission returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )? ) ;
    public final EObject ruleValuedEmission() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_reference_1_0 = null;

        EObject lv_newValue_3_0 = null;

        EObject lv_schedule_6_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:8456:2: ( ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )? ) )
            // InternalScadeEquations.g:8457:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )? )
            {
            // InternalScadeEquations.g:8457:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )? )
            // InternalScadeEquations.g:8458:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )?
            {
            // InternalScadeEquations.g:8458:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )*
            loop215:
            do {
                int alt215=2;
                int LA215_0 = input.LA(1);

                if ( (LA215_0==RULE_COMMENT_ANNOTATION||LA215_0==89) ) {
                    alt215=1;
                }


                switch (alt215) {
            	case 1 :
            	    // InternalScadeEquations.g:8459:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    {
            	    // InternalScadeEquations.g:8459:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    // InternalScadeEquations.g:8460:5: lv_annotations_0_0= ruleQuotedStringAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getValuedEmissionAccess().getAnnotationsQuotedStringAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_35);
            	    lv_annotations_0_0=ruleQuotedStringAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getValuedEmissionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.QuotedStringAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop215;
                }
            } while (true);

            // InternalScadeEquations.g:8477:3: ( (lv_reference_1_0= ruleValuedObjectReference ) )
            // InternalScadeEquations.g:8478:4: (lv_reference_1_0= ruleValuedObjectReference )
            {
            // InternalScadeEquations.g:8478:4: (lv_reference_1_0= ruleValuedObjectReference )
            // InternalScadeEquations.g:8479:5: lv_reference_1_0= ruleValuedObjectReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getValuedEmissionAccess().getReferenceValuedObjectReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_11);
            lv_reference_1_0=ruleValuedObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getValuedEmissionRule());
              					}
              					set(
              						current,
              						"reference",
              						lv_reference_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,17,FollowSets000.FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getValuedEmissionAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalScadeEquations.g:8500:3: ( (lv_newValue_3_0= ruleExpression ) )
            // InternalScadeEquations.g:8501:4: (lv_newValue_3_0= ruleExpression )
            {
            // InternalScadeEquations.g:8501:4: (lv_newValue_3_0= ruleExpression )
            // InternalScadeEquations.g:8502:5: lv_newValue_3_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getValuedEmissionAccess().getNewValueExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_13);
            lv_newValue_3_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getValuedEmissionRule());
              					}
              					set(
              						current,
              						"newValue",
              						lv_newValue_3_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,19,FollowSets000.FOLLOW_109); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getValuedEmissionAccess().getRightParenthesisKeyword_4());
              		
            }
            // InternalScadeEquations.g:8523:3: (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )?
            int alt217=2;
            int LA217_0 = input.LA(1);

            if ( (LA217_0==71) ) {
                alt217=1;
            }
            switch (alt217) {
                case 1 :
                    // InternalScadeEquations.g:8524:4: otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_5=(Token)match(input,71,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getValuedEmissionAccess().getScheduleKeyword_5_0());
                      			
                    }
                    // InternalScadeEquations.g:8528:4: ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+
                    int cnt216=0;
                    loop216:
                    do {
                        int alt216=2;
                        alt216 = dfa216.predict(input);
                        switch (alt216) {
                    	case 1 :
                    	    // InternalScadeEquations.g:8529:5: (lv_schedule_6_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalScadeEquations.g:8529:5: (lv_schedule_6_0= ruleScheduleObjectReference )
                    	    // InternalScadeEquations.g:8530:6: lv_schedule_6_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getValuedEmissionAccess().getScheduleScheduleObjectReferenceParserRuleCall_5_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_110);
                    	    lv_schedule_6_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getValuedEmissionRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_6_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt216 >= 1 ) break loop216;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(216, input);
                                throw eee;
                        }
                        cnt216++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValuedEmission"


    // $ANTLR start "entryRuleAssignment"
    // InternalScadeEquations.g:8552:1: entryRuleAssignment returns [EObject current=null] : iv_ruleAssignment= ruleAssignment EOF ;
    public final EObject entryRuleAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAssignment = null;


        try {
            // InternalScadeEquations.g:8552:51: (iv_ruleAssignment= ruleAssignment EOF )
            // InternalScadeEquations.g:8553:2: iv_ruleAssignment= ruleAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAssignmentRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAssignment=ruleAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAssignment; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAssignment"


    // $ANTLR start "ruleAssignment"
    // InternalScadeEquations.g:8559:1: ruleAssignment returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? ) ;
    public final EObject ruleAssignment() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_reference_1_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_expression_3_0 = null;

        EObject lv_schedule_5_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:8565:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? ) )
            // InternalScadeEquations.g:8566:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? )
            {
            // InternalScadeEquations.g:8566:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? )
            // InternalScadeEquations.g:8567:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )?
            {
            // InternalScadeEquations.g:8567:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop218:
            do {
                int alt218=2;
                int LA218_0 = input.LA(1);

                if ( (LA218_0==RULE_COMMENT_ANNOTATION||LA218_0==89) ) {
                    alt218=1;
                }


                switch (alt218) {
            	case 1 :
            	    // InternalScadeEquations.g:8568:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalScadeEquations.g:8568:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalScadeEquations.g:8569:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAssignmentAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_35);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAssignmentRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop218;
                }
            } while (true);

            // InternalScadeEquations.g:8586:3: ( (lv_reference_1_0= ruleValuedObjectReference ) )
            // InternalScadeEquations.g:8587:4: (lv_reference_1_0= ruleValuedObjectReference )
            {
            // InternalScadeEquations.g:8587:4: (lv_reference_1_0= ruleValuedObjectReference )
            // InternalScadeEquations.g:8588:5: lv_reference_1_0= ruleValuedObjectReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAssignmentAccess().getReferenceValuedObjectReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_7);
            lv_reference_1_0=ruleValuedObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAssignmentRule());
              					}
              					set(
              						current,
              						"reference",
              						lv_reference_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:8605:3: ( (lv_operator_2_0= ruleAssignOperator ) )
            // InternalScadeEquations.g:8606:4: (lv_operator_2_0= ruleAssignOperator )
            {
            // InternalScadeEquations.g:8606:4: (lv_operator_2_0= ruleAssignOperator )
            // InternalScadeEquations.g:8607:5: lv_operator_2_0= ruleAssignOperator
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAssignmentAccess().getOperatorAssignOperatorEnumRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_9);
            lv_operator_2_0=ruleAssignOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAssignmentRule());
              					}
              					set(
              						current,
              						"operator",
              						lv_operator_2_0,
              						"de.cau.cs.kieler.lustre.Lustre.AssignOperator");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:8624:3: ( (lv_expression_3_0= ruleExpression ) )
            // InternalScadeEquations.g:8625:4: (lv_expression_3_0= ruleExpression )
            {
            // InternalScadeEquations.g:8625:4: (lv_expression_3_0= ruleExpression )
            // InternalScadeEquations.g:8626:5: lv_expression_3_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAssignmentAccess().getExpressionExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_109);
            lv_expression_3_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAssignmentRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_3_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:8643:3: (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )?
            int alt220=2;
            int LA220_0 = input.LA(1);

            if ( (LA220_0==71) ) {
                alt220=1;
            }
            switch (alt220) {
                case 1 :
                    // InternalScadeEquations.g:8644:4: otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_4=(Token)match(input,71,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getAssignmentAccess().getScheduleKeyword_4_0());
                      			
                    }
                    // InternalScadeEquations.g:8648:4: ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+
                    int cnt219=0;
                    loop219:
                    do {
                        int alt219=2;
                        alt219 = dfa219.predict(input);
                        switch (alt219) {
                    	case 1 :
                    	    // InternalScadeEquations.g:8649:5: (lv_schedule_5_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalScadeEquations.g:8649:5: (lv_schedule_5_0= ruleScheduleObjectReference )
                    	    // InternalScadeEquations.g:8650:6: lv_schedule_5_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getAssignmentAccess().getScheduleScheduleObjectReferenceParserRuleCall_4_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_110);
                    	    lv_schedule_5_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getAssignmentRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_5_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt219 >= 1 ) break loop219;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(219, input);
                                throw eee;
                        }
                        cnt219++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAssignment"


    // $ANTLR start "entryRulePostfixEffect"
    // InternalScadeEquations.g:8672:1: entryRulePostfixEffect returns [EObject current=null] : iv_rulePostfixEffect= rulePostfixEffect EOF ;
    public final EObject entryRulePostfixEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePostfixEffect = null;


        try {
            // InternalScadeEquations.g:8672:54: (iv_rulePostfixEffect= rulePostfixEffect EOF )
            // InternalScadeEquations.g:8673:2: iv_rulePostfixEffect= rulePostfixEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPostfixEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePostfixEffect=rulePostfixEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePostfixEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePostfixEffect"


    // $ANTLR start "rulePostfixEffect"
    // InternalScadeEquations.g:8679:1: rulePostfixEffect returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )? ) ;
    public final EObject rulePostfixEffect() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_reference_1_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_schedule_4_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:8685:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )? ) )
            // InternalScadeEquations.g:8686:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )? )
            {
            // InternalScadeEquations.g:8686:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )? )
            // InternalScadeEquations.g:8687:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )?
            {
            // InternalScadeEquations.g:8687:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop221:
            do {
                int alt221=2;
                int LA221_0 = input.LA(1);

                if ( (LA221_0==RULE_COMMENT_ANNOTATION||LA221_0==89) ) {
                    alt221=1;
                }


                switch (alt221) {
            	case 1 :
            	    // InternalScadeEquations.g:8688:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalScadeEquations.g:8688:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalScadeEquations.g:8689:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getPostfixEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_35);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getPostfixEffectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop221;
                }
            } while (true);

            // InternalScadeEquations.g:8706:3: ( (lv_reference_1_0= ruleValuedObjectReference ) )
            // InternalScadeEquations.g:8707:4: (lv_reference_1_0= ruleValuedObjectReference )
            {
            // InternalScadeEquations.g:8707:4: (lv_reference_1_0= ruleValuedObjectReference )
            // InternalScadeEquations.g:8708:5: lv_reference_1_0= ruleValuedObjectReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPostfixEffectAccess().getReferenceValuedObjectReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_111);
            lv_reference_1_0=ruleValuedObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPostfixEffectRule());
              					}
              					set(
              						current,
              						"reference",
              						lv_reference_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:8725:3: ( (lv_operator_2_0= rulePostfixOperator ) )
            // InternalScadeEquations.g:8726:4: (lv_operator_2_0= rulePostfixOperator )
            {
            // InternalScadeEquations.g:8726:4: (lv_operator_2_0= rulePostfixOperator )
            // InternalScadeEquations.g:8727:5: lv_operator_2_0= rulePostfixOperator
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPostfixEffectAccess().getOperatorPostfixOperatorEnumRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_109);
            lv_operator_2_0=rulePostfixOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPostfixEffectRule());
              					}
              					set(
              						current,
              						"operator",
              						lv_operator_2_0,
              						"de.cau.cs.kieler.kexpressions.keffects.KEffects.PostfixOperator");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:8744:3: (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )?
            int alt223=2;
            int LA223_0 = input.LA(1);

            if ( (LA223_0==71) ) {
                alt223=1;
            }
            switch (alt223) {
                case 1 :
                    // InternalScadeEquations.g:8745:4: otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_3=(Token)match(input,71,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getPostfixEffectAccess().getScheduleKeyword_3_0());
                      			
                    }
                    // InternalScadeEquations.g:8749:4: ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+
                    int cnt222=0;
                    loop222:
                    do {
                        int alt222=2;
                        alt222 = dfa222.predict(input);
                        switch (alt222) {
                    	case 1 :
                    	    // InternalScadeEquations.g:8750:5: (lv_schedule_4_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalScadeEquations.g:8750:5: (lv_schedule_4_0= ruleScheduleObjectReference )
                    	    // InternalScadeEquations.g:8751:6: lv_schedule_4_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getPostfixEffectAccess().getScheduleScheduleObjectReferenceParserRuleCall_3_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_110);
                    	    lv_schedule_4_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getPostfixEffectRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_4_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt222 >= 1 ) break loop222;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(222, input);
                                throw eee;
                        }
                        cnt222++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePostfixEffect"


    // $ANTLR start "entryRuleHostcodeEffect"
    // InternalScadeEquations.g:8773:1: entryRuleHostcodeEffect returns [EObject current=null] : iv_ruleHostcodeEffect= ruleHostcodeEffect EOF ;
    public final EObject entryRuleHostcodeEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleHostcodeEffect = null;


        try {
            // InternalScadeEquations.g:8773:55: (iv_ruleHostcodeEffect= ruleHostcodeEffect EOF )
            // InternalScadeEquations.g:8774:2: iv_ruleHostcodeEffect= ruleHostcodeEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getHostcodeEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleHostcodeEffect=ruleHostcodeEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleHostcodeEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleHostcodeEffect"


    // $ANTLR start "ruleHostcodeEffect"
    // InternalScadeEquations.g:8780:1: ruleHostcodeEffect returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) ) ;
    public final EObject ruleHostcodeEffect() throws RecognitionException {
        EObject current = null;

        Token lv_text_1_0=null;
        EObject lv_annotations_0_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:8786:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) ) )
            // InternalScadeEquations.g:8787:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) )
            {
            // InternalScadeEquations.g:8787:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) )
            // InternalScadeEquations.g:8788:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) )
            {
            // InternalScadeEquations.g:8788:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop224:
            do {
                int alt224=2;
                int LA224_0 = input.LA(1);

                if ( (LA224_0==RULE_COMMENT_ANNOTATION||LA224_0==89) ) {
                    alt224=1;
                }


                switch (alt224) {
            	case 1 :
            	    // InternalScadeEquations.g:8789:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalScadeEquations.g:8789:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalScadeEquations.g:8790:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getHostcodeEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_112);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getHostcodeEffectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop224;
                }
            } while (true);

            // InternalScadeEquations.g:8807:3: ( (lv_text_1_0= RULE_HOSTCODE ) )
            // InternalScadeEquations.g:8808:4: (lv_text_1_0= RULE_HOSTCODE )
            {
            // InternalScadeEquations.g:8808:4: (lv_text_1_0= RULE_HOSTCODE )
            // InternalScadeEquations.g:8809:5: lv_text_1_0= RULE_HOSTCODE
            {
            lv_text_1_0=(Token)match(input,RULE_HOSTCODE,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_text_1_0, grammarAccess.getHostcodeEffectAccess().getTextHOSTCODETerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getHostcodeEffectRule());
              					}
              					setWithLastConsumed(
              						current,
              						"text",
              						lv_text_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.HOSTCODE");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleHostcodeEffect"


    // $ANTLR start "entryRuleReferenceCallEffect"
    // InternalScadeEquations.g:8829:1: entryRuleReferenceCallEffect returns [EObject current=null] : iv_ruleReferenceCallEffect= ruleReferenceCallEffect EOF ;
    public final EObject entryRuleReferenceCallEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReferenceCallEffect = null;


        try {
            // InternalScadeEquations.g:8829:60: (iv_ruleReferenceCallEffect= ruleReferenceCallEffect EOF )
            // InternalScadeEquations.g:8830:2: iv_ruleReferenceCallEffect= ruleReferenceCallEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReferenceCallEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleReferenceCallEffect=ruleReferenceCallEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReferenceCallEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReferenceCallEffect"


    // $ANTLR start "ruleReferenceCallEffect"
    // InternalScadeEquations.g:8836:1: ruleReferenceCallEffect returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) ) )? ( (otherlv_7= '(' ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) ) )* otherlv_11= ')' ) | otherlv_12= '()' ) (otherlv_13= 'schedule' ( (lv_schedule_14_0= ruleScheduleObjectReference ) )+ )? ) ;
    public final EObject ruleReferenceCallEffect() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_indices_3_0 = null;

        EObject lv_subReference_6_0 = null;

        EObject lv_parameters_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_schedule_14_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:8842:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) ) )? ( (otherlv_7= '(' ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) ) )* otherlv_11= ')' ) | otherlv_12= '()' ) (otherlv_13= 'schedule' ( (lv_schedule_14_0= ruleScheduleObjectReference ) )+ )? ) )
            // InternalScadeEquations.g:8843:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) ) )? ( (otherlv_7= '(' ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) ) )* otherlv_11= ')' ) | otherlv_12= '()' ) (otherlv_13= 'schedule' ( (lv_schedule_14_0= ruleScheduleObjectReference ) )+ )? )
            {
            // InternalScadeEquations.g:8843:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) ) )? ( (otherlv_7= '(' ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) ) )* otherlv_11= ')' ) | otherlv_12= '()' ) (otherlv_13= 'schedule' ( (lv_schedule_14_0= ruleScheduleObjectReference ) )+ )? )
            // InternalScadeEquations.g:8844:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) ) )? ( (otherlv_7= '(' ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) ) )* otherlv_11= ')' ) | otherlv_12= '()' ) (otherlv_13= 'schedule' ( (lv_schedule_14_0= ruleScheduleObjectReference ) )+ )?
            {
            // InternalScadeEquations.g:8844:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop225:
            do {
                int alt225=2;
                int LA225_0 = input.LA(1);

                if ( (LA225_0==RULE_COMMENT_ANNOTATION||LA225_0==89) ) {
                    alt225=1;
                }


                switch (alt225) {
            	case 1 :
            	    // InternalScadeEquations.g:8845:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalScadeEquations.g:8845:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalScadeEquations.g:8846:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_35);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getReferenceCallEffectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop225;
                }
            } while (true);

            // InternalScadeEquations.g:8863:3: ( ( rulePrimeID ) )
            // InternalScadeEquations.g:8864:4: ( rulePrimeID )
            {
            // InternalScadeEquations.g:8864:4: ( rulePrimeID )
            // InternalScadeEquations.g:8865:5: rulePrimeID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getReferenceCallEffectRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getValuedObjectValuedObjectCrossReference_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_113);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:8882:3: (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )*
            loop226:
            do {
                int alt226=2;
                int LA226_0 = input.LA(1);

                if ( (LA226_0==73) ) {
                    alt226=1;
                }


                switch (alt226) {
            	case 1 :
            	    // InternalScadeEquations.g:8883:4: otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']'
            	    {
            	    otherlv_2=(Token)match(input,73,FollowSets000.FOLLOW_9); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getReferenceCallEffectAccess().getLeftSquareBracketKeyword_2_0());
            	      			
            	    }
            	    // InternalScadeEquations.g:8887:4: ( (lv_indices_3_0= ruleExpression ) )
            	    // InternalScadeEquations.g:8888:5: (lv_indices_3_0= ruleExpression )
            	    {
            	    // InternalScadeEquations.g:8888:5: (lv_indices_3_0= ruleExpression )
            	    // InternalScadeEquations.g:8889:6: lv_indices_3_0= ruleExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getIndicesExpressionParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_105);
            	    lv_indices_3_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getReferenceCallEffectRule());
            	      						}
            	      						add(
            	      							current,
            	      							"indices",
            	      							lv_indices_3_0,
            	      							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_4=(Token)match(input,74,FollowSets000.FOLLOW_113); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_4, grammarAccess.getReferenceCallEffectAccess().getRightSquareBracketKeyword_2_2());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop226;
                }
            } while (true);

            // InternalScadeEquations.g:8911:3: (otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) ) )?
            int alt227=2;
            int LA227_0 = input.LA(1);

            if ( (LA227_0==37) ) {
                alt227=1;
            }
            switch (alt227) {
                case 1 :
                    // InternalScadeEquations.g:8912:4: otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) )
                    {
                    otherlv_5=(Token)match(input,37,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getReferenceCallEffectAccess().getFullStopKeyword_3_0());
                      			
                    }
                    // InternalScadeEquations.g:8916:4: ( (lv_subReference_6_0= ruleValuedObjectReference ) )
                    // InternalScadeEquations.g:8917:5: (lv_subReference_6_0= ruleValuedObjectReference )
                    {
                    // InternalScadeEquations.g:8917:5: (lv_subReference_6_0= ruleValuedObjectReference )
                    // InternalScadeEquations.g:8918:6: lv_subReference_6_0= ruleValuedObjectReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getSubReferenceValuedObjectReferenceParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_22);
                    lv_subReference_6_0=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getReferenceCallEffectRule());
                      						}
                      						set(
                      							current,
                      							"subReference",
                      							lv_subReference_6_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:8936:3: ( (otherlv_7= '(' ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) ) )* otherlv_11= ')' ) | otherlv_12= '()' )
            int alt229=2;
            int LA229_0 = input.LA(1);

            if ( (LA229_0==17) ) {
                alt229=1;
            }
            else if ( (LA229_0==28) ) {
                alt229=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 229, 0, input);

                throw nvae;
            }
            switch (alt229) {
                case 1 :
                    // InternalScadeEquations.g:8937:4: (otherlv_7= '(' ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) ) )* otherlv_11= ')' )
                    {
                    // InternalScadeEquations.g:8937:4: (otherlv_7= '(' ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) ) )* otherlv_11= ')' )
                    // InternalScadeEquations.g:8938:5: otherlv_7= '(' ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) ) )* otherlv_11= ')'
                    {
                    otherlv_7=(Token)match(input,17,FollowSets000.FOLLOW_114); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getReferenceCallEffectAccess().getLeftParenthesisKeyword_4_0_0());
                      				
                    }
                    // InternalScadeEquations.g:8942:5: ( (lv_parameters_8_0= ruleParameter ) )
                    // InternalScadeEquations.g:8943:6: (lv_parameters_8_0= ruleParameter )
                    {
                    // InternalScadeEquations.g:8943:6: (lv_parameters_8_0= ruleParameter )
                    // InternalScadeEquations.g:8944:7: lv_parameters_8_0= ruleParameter
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getParametersParameterParserRuleCall_4_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_6);
                    lv_parameters_8_0=ruleParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getReferenceCallEffectRule());
                      							}
                      							add(
                      								current,
                      								"parameters",
                      								lv_parameters_8_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:8961:5: (otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) ) )*
                    loop228:
                    do {
                        int alt228=2;
                        int LA228_0 = input.LA(1);

                        if ( (LA228_0==18) ) {
                            alt228=1;
                        }


                        switch (alt228) {
                    	case 1 :
                    	    // InternalScadeEquations.g:8962:6: otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) )
                    	    {
                    	    otherlv_9=(Token)match(input,18,FollowSets000.FOLLOW_114); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_9, grammarAccess.getReferenceCallEffectAccess().getCommaKeyword_4_0_2_0());
                    	      					
                    	    }
                    	    // InternalScadeEquations.g:8966:6: ( (lv_parameters_10_0= ruleParameter ) )
                    	    // InternalScadeEquations.g:8967:7: (lv_parameters_10_0= ruleParameter )
                    	    {
                    	    // InternalScadeEquations.g:8967:7: (lv_parameters_10_0= ruleParameter )
                    	    // InternalScadeEquations.g:8968:8: lv_parameters_10_0= ruleParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getParametersParameterParserRuleCall_4_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_6);
                    	    lv_parameters_10_0=ruleParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getReferenceCallEffectRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"parameters",
                    	      									lv_parameters_10_0,
                    	      									"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop228;
                        }
                    } while (true);

                    otherlv_11=(Token)match(input,19,FollowSets000.FOLLOW_109); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_11, grammarAccess.getReferenceCallEffectAccess().getRightParenthesisKeyword_4_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:8992:4: otherlv_12= '()'
                    {
                    otherlv_12=(Token)match(input,28,FollowSets000.FOLLOW_109); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getReferenceCallEffectAccess().getLeftParenthesisRightParenthesisKeyword_4_1());
                      			
                    }

                    }
                    break;

            }

            // InternalScadeEquations.g:8997:3: (otherlv_13= 'schedule' ( (lv_schedule_14_0= ruleScheduleObjectReference ) )+ )?
            int alt231=2;
            int LA231_0 = input.LA(1);

            if ( (LA231_0==71) ) {
                alt231=1;
            }
            switch (alt231) {
                case 1 :
                    // InternalScadeEquations.g:8998:4: otherlv_13= 'schedule' ( (lv_schedule_14_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_13=(Token)match(input,71,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getReferenceCallEffectAccess().getScheduleKeyword_5_0());
                      			
                    }
                    // InternalScadeEquations.g:9002:4: ( (lv_schedule_14_0= ruleScheduleObjectReference ) )+
                    int cnt230=0;
                    loop230:
                    do {
                        int alt230=2;
                        alt230 = dfa230.predict(input);
                        switch (alt230) {
                    	case 1 :
                    	    // InternalScadeEquations.g:9003:5: (lv_schedule_14_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalScadeEquations.g:9003:5: (lv_schedule_14_0= ruleScheduleObjectReference )
                    	    // InternalScadeEquations.g:9004:6: lv_schedule_14_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getScheduleScheduleObjectReferenceParserRuleCall_5_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_110);
                    	    lv_schedule_14_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getReferenceCallEffectRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_14_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt230 >= 1 ) break loop230;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(230, input);
                                throw eee;
                        }
                        cnt230++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReferenceCallEffect"


    // $ANTLR start "entryRuleFunctionCallEffect"
    // InternalScadeEquations.g:9026:1: entryRuleFunctionCallEffect returns [EObject current=null] : iv_ruleFunctionCallEffect= ruleFunctionCallEffect EOF ;
    public final EObject entryRuleFunctionCallEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionCallEffect = null;


        try {
            // InternalScadeEquations.g:9026:59: (iv_ruleFunctionCallEffect= ruleFunctionCallEffect EOF )
            // InternalScadeEquations.g:9027:2: iv_ruleFunctionCallEffect= ruleFunctionCallEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionCallEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFunctionCallEffect=ruleFunctionCallEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionCallEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionCallEffect"


    // $ANTLR start "ruleFunctionCallEffect"
    // InternalScadeEquations.g:9033:1: ruleFunctionCallEffect returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) ) ;
    public final EObject ruleFunctionCallEffect() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_functionName_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_parameters_4_0 = null;

        EObject lv_parameters_6_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:9039:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) ) )
            // InternalScadeEquations.g:9040:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) )
            {
            // InternalScadeEquations.g:9040:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) )
            // InternalScadeEquations.g:9041:3: ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) )
            {
            // InternalScadeEquations.g:9041:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop232:
            do {
                int alt232=2;
                int LA232_0 = input.LA(1);

                if ( (LA232_0==RULE_COMMENT_ANNOTATION||LA232_0==89) ) {
                    alt232=1;
                }


                switch (alt232) {
            	case 1 :
            	    // InternalScadeEquations.g:9042:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalScadeEquations.g:9042:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalScadeEquations.g:9043:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getFunctionCallEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_115);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getFunctionCallEffectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop232;
                }
            } while (true);

            // InternalScadeEquations.g:9060:3: (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) )
            // InternalScadeEquations.g:9061:4: otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' )
            {
            otherlv_1=(Token)match(input,25,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_1, grammarAccess.getFunctionCallEffectAccess().getExternKeyword_1_0());
              			
            }
            // InternalScadeEquations.g:9065:4: ( (lv_functionName_2_0= RULE_ID ) )
            // InternalScadeEquations.g:9066:5: (lv_functionName_2_0= RULE_ID )
            {
            // InternalScadeEquations.g:9066:5: (lv_functionName_2_0= RULE_ID )
            // InternalScadeEquations.g:9067:6: lv_functionName_2_0= RULE_ID
            {
            lv_functionName_2_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						newLeafNode(lv_functionName_2_0, grammarAccess.getFunctionCallEffectAccess().getFunctionNameIDTerminalRuleCall_1_1_0());
              					
            }
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElement(grammarAccess.getFunctionCallEffectRule());
              						}
              						setWithLastConsumed(
              							current,
              							"functionName",
              							lv_functionName_2_0,
              							"de.cau.cs.kieler.annotations.Annotations.ID");
              					
            }

            }


            }

            // InternalScadeEquations.g:9083:4: ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' )
            int alt234=2;
            int LA234_0 = input.LA(1);

            if ( (LA234_0==17) ) {
                alt234=1;
            }
            else if ( (LA234_0==28) ) {
                alt234=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 234, 0, input);

                throw nvae;
            }
            switch (alt234) {
                case 1 :
                    // InternalScadeEquations.g:9084:5: (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' )
                    {
                    // InternalScadeEquations.g:9084:5: (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' )
                    // InternalScadeEquations.g:9085:6: otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')'
                    {
                    otherlv_3=(Token)match(input,17,FollowSets000.FOLLOW_114); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_3, grammarAccess.getFunctionCallEffectAccess().getLeftParenthesisKeyword_1_2_0_0());
                      					
                    }
                    // InternalScadeEquations.g:9089:6: ( (lv_parameters_4_0= ruleParameter ) )
                    // InternalScadeEquations.g:9090:7: (lv_parameters_4_0= ruleParameter )
                    {
                    // InternalScadeEquations.g:9090:7: (lv_parameters_4_0= ruleParameter )
                    // InternalScadeEquations.g:9091:8: lv_parameters_4_0= ruleParameter
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getFunctionCallEffectAccess().getParametersParameterParserRuleCall_1_2_0_1_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_6);
                    lv_parameters_4_0=ruleParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getFunctionCallEffectRule());
                      								}
                      								add(
                      									current,
                      									"parameters",
                      									lv_parameters_4_0,
                      									"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    // InternalScadeEquations.g:9108:6: (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )*
                    loop233:
                    do {
                        int alt233=2;
                        int LA233_0 = input.LA(1);

                        if ( (LA233_0==18) ) {
                            alt233=1;
                        }


                        switch (alt233) {
                    	case 1 :
                    	    // InternalScadeEquations.g:9109:7: otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) )
                    	    {
                    	    otherlv_5=(Token)match(input,18,FollowSets000.FOLLOW_114); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							newLeafNode(otherlv_5, grammarAccess.getFunctionCallEffectAccess().getCommaKeyword_1_2_0_2_0());
                    	      						
                    	    }
                    	    // InternalScadeEquations.g:9113:7: ( (lv_parameters_6_0= ruleParameter ) )
                    	    // InternalScadeEquations.g:9114:8: (lv_parameters_6_0= ruleParameter )
                    	    {
                    	    // InternalScadeEquations.g:9114:8: (lv_parameters_6_0= ruleParameter )
                    	    // InternalScadeEquations.g:9115:9: lv_parameters_6_0= ruleParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      									newCompositeNode(grammarAccess.getFunctionCallEffectAccess().getParametersParameterParserRuleCall_1_2_0_2_1_0());
                    	      								
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_6);
                    	    lv_parameters_6_0=ruleParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									if (current==null) {
                    	      										current = createModelElementForParent(grammarAccess.getFunctionCallEffectRule());
                    	      									}
                    	      									add(
                    	      										current,
                    	      										"parameters",
                    	      										lv_parameters_6_0,
                    	      										"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                    	      									afterParserOrEnumRuleCall();
                    	      								
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop233;
                        }
                    } while (true);

                    otherlv_7=(Token)match(input,19,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_7, grammarAccess.getFunctionCallEffectAccess().getRightParenthesisKeyword_1_2_0_3());
                      					
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:9139:5: otherlv_8= '()'
                    {
                    otherlv_8=(Token)match(input,28,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_8, grammarAccess.getFunctionCallEffectAccess().getLeftParenthesisRightParenthesisKeyword_1_2_1());
                      				
                    }

                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionCallEffect"


    // $ANTLR start "entryRulePrintCallEffect"
    // InternalScadeEquations.g:9149:1: entryRulePrintCallEffect returns [EObject current=null] : iv_rulePrintCallEffect= rulePrintCallEffect EOF ;
    public final EObject entryRulePrintCallEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrintCallEffect = null;


        try {
            // InternalScadeEquations.g:9149:56: (iv_rulePrintCallEffect= rulePrintCallEffect EOF )
            // InternalScadeEquations.g:9150:2: iv_rulePrintCallEffect= rulePrintCallEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrintCallEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePrintCallEffect=rulePrintCallEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrintCallEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrintCallEffect"


    // $ANTLR start "rulePrintCallEffect"
    // InternalScadeEquations.g:9156:1: rulePrintCallEffect returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'print' (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) (otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+ )? ) ;
    public final EObject rulePrintCallEffect() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_parameters_3_0 = null;

        EObject lv_parameters_5_0 = null;

        EObject lv_schedule_8_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:9162:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'print' (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) (otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+ )? ) )
            // InternalScadeEquations.g:9163:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'print' (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) (otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+ )? )
            {
            // InternalScadeEquations.g:9163:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'print' (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) (otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+ )? )
            // InternalScadeEquations.g:9164:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'print' (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) (otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+ )?
            {
            // InternalScadeEquations.g:9164:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop235:
            do {
                int alt235=2;
                int LA235_0 = input.LA(1);

                if ( (LA235_0==RULE_COMMENT_ANNOTATION||LA235_0==89) ) {
                    alt235=1;
                }


                switch (alt235) {
            	case 1 :
            	    // InternalScadeEquations.g:9165:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalScadeEquations.g:9165:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalScadeEquations.g:9166:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getPrintCallEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_116);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getPrintCallEffectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop235;
                }
            } while (true);

            otherlv_1=(Token)match(input,77,FollowSets000.FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getPrintCallEffectAccess().getPrintKeyword_1());
              		
            }
            // InternalScadeEquations.g:9187:3: (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' )
            // InternalScadeEquations.g:9188:4: otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')'
            {
            otherlv_2=(Token)match(input,17,FollowSets000.FOLLOW_114); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_2, grammarAccess.getPrintCallEffectAccess().getLeftParenthesisKeyword_2_0());
              			
            }
            // InternalScadeEquations.g:9192:4: ( (lv_parameters_3_0= ruleParameter ) )
            // InternalScadeEquations.g:9193:5: (lv_parameters_3_0= ruleParameter )
            {
            // InternalScadeEquations.g:9193:5: (lv_parameters_3_0= ruleParameter )
            // InternalScadeEquations.g:9194:6: lv_parameters_3_0= ruleParameter
            {
            if ( state.backtracking==0 ) {

              						newCompositeNode(grammarAccess.getPrintCallEffectAccess().getParametersParameterParserRuleCall_2_1_0());
              					
            }
            pushFollow(FollowSets000.FOLLOW_6);
            lv_parameters_3_0=ruleParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElementForParent(grammarAccess.getPrintCallEffectRule());
              						}
              						add(
              							current,
              							"parameters",
              							lv_parameters_3_0,
              							"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
              						afterParserOrEnumRuleCall();
              					
            }

            }


            }

            // InternalScadeEquations.g:9211:4: (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )*
            loop236:
            do {
                int alt236=2;
                int LA236_0 = input.LA(1);

                if ( (LA236_0==18) ) {
                    alt236=1;
                }


                switch (alt236) {
            	case 1 :
            	    // InternalScadeEquations.g:9212:5: otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) )
            	    {
            	    otherlv_4=(Token)match(input,18,FollowSets000.FOLLOW_114); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_4, grammarAccess.getPrintCallEffectAccess().getCommaKeyword_2_2_0());
            	      				
            	    }
            	    // InternalScadeEquations.g:9216:5: ( (lv_parameters_5_0= ruleParameter ) )
            	    // InternalScadeEquations.g:9217:6: (lv_parameters_5_0= ruleParameter )
            	    {
            	    // InternalScadeEquations.g:9217:6: (lv_parameters_5_0= ruleParameter )
            	    // InternalScadeEquations.g:9218:7: lv_parameters_5_0= ruleParameter
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getPrintCallEffectAccess().getParametersParameterParserRuleCall_2_2_1_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_6);
            	    lv_parameters_5_0=ruleParameter();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getPrintCallEffectRule());
            	      							}
            	      							add(
            	      								current,
            	      								"parameters",
            	      								lv_parameters_5_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop236;
                }
            } while (true);

            otherlv_6=(Token)match(input,19,FollowSets000.FOLLOW_109); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_6, grammarAccess.getPrintCallEffectAccess().getRightParenthesisKeyword_2_3());
              			
            }

            }

            // InternalScadeEquations.g:9241:3: (otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+ )?
            int alt238=2;
            int LA238_0 = input.LA(1);

            if ( (LA238_0==71) ) {
                alt238=1;
            }
            switch (alt238) {
                case 1 :
                    // InternalScadeEquations.g:9242:4: otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_7=(Token)match(input,71,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getPrintCallEffectAccess().getScheduleKeyword_3_0());
                      			
                    }
                    // InternalScadeEquations.g:9246:4: ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+
                    int cnt237=0;
                    loop237:
                    do {
                        int alt237=2;
                        alt237 = dfa237.predict(input);
                        switch (alt237) {
                    	case 1 :
                    	    // InternalScadeEquations.g:9247:5: (lv_schedule_8_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalScadeEquations.g:9247:5: (lv_schedule_8_0= ruleScheduleObjectReference )
                    	    // InternalScadeEquations.g:9248:6: lv_schedule_8_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getPrintCallEffectAccess().getScheduleScheduleObjectReferenceParserRuleCall_3_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_110);
                    	    lv_schedule_8_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getPrintCallEffectRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_8_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt237 >= 1 ) break loop237;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(237, input);
                                throw eee;
                        }
                        cnt237++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrintCallEffect"


    // $ANTLR start "entryRuleRandomizeCallEffect"
    // InternalScadeEquations.g:9270:1: entryRuleRandomizeCallEffect returns [EObject current=null] : iv_ruleRandomizeCallEffect= ruleRandomizeCallEffect EOF ;
    public final EObject entryRuleRandomizeCallEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRandomizeCallEffect = null;


        try {
            // InternalScadeEquations.g:9270:60: (iv_ruleRandomizeCallEffect= ruleRandomizeCallEffect EOF )
            // InternalScadeEquations.g:9271:2: iv_ruleRandomizeCallEffect= ruleRandomizeCallEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRandomizeCallEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRandomizeCallEffect=ruleRandomizeCallEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRandomizeCallEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRandomizeCallEffect"


    // $ANTLR start "ruleRandomizeCallEffect"
    // InternalScadeEquations.g:9277:1: ruleRandomizeCallEffect returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'randomize' ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) ;
    public final EObject ruleRandomizeCallEffect() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        EObject lv_annotations_1_0 = null;

        EObject lv_parameters_4_0 = null;

        EObject lv_parameters_6_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:9283:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'randomize' ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) )
            // InternalScadeEquations.g:9284:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'randomize' ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) )
            {
            // InternalScadeEquations.g:9284:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'randomize' ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) )
            // InternalScadeEquations.g:9285:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'randomize' ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' )
            {
            // InternalScadeEquations.g:9285:3: ()
            // InternalScadeEquations.g:9286:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getRandomizeCallEffectAccess().getRandomizeCallEffectAction_0(),
              					current);
              			
            }

            }

            // InternalScadeEquations.g:9295:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop239:
            do {
                int alt239=2;
                int LA239_0 = input.LA(1);

                if ( (LA239_0==RULE_COMMENT_ANNOTATION||LA239_0==89) ) {
                    alt239=1;
                }


                switch (alt239) {
            	case 1 :
            	    // InternalScadeEquations.g:9296:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalScadeEquations.g:9296:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalScadeEquations.g:9297:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getRandomizeCallEffectAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_117);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getRandomizeCallEffectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop239;
                }
            } while (true);

            otherlv_2=(Token)match(input,78,FollowSets000.FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getRandomizeCallEffectAccess().getRandomizeKeyword_2());
              		
            }
            // InternalScadeEquations.g:9318:3: ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' )
            int alt241=2;
            int LA241_0 = input.LA(1);

            if ( (LA241_0==17) ) {
                alt241=1;
            }
            else if ( (LA241_0==28) ) {
                alt241=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 241, 0, input);

                throw nvae;
            }
            switch (alt241) {
                case 1 :
                    // InternalScadeEquations.g:9319:4: (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' )
                    {
                    // InternalScadeEquations.g:9319:4: (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' )
                    // InternalScadeEquations.g:9320:5: otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')'
                    {
                    otherlv_3=(Token)match(input,17,FollowSets000.FOLLOW_114); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getRandomizeCallEffectAccess().getLeftParenthesisKeyword_3_0_0());
                      				
                    }
                    // InternalScadeEquations.g:9324:5: ( (lv_parameters_4_0= ruleParameter ) )
                    // InternalScadeEquations.g:9325:6: (lv_parameters_4_0= ruleParameter )
                    {
                    // InternalScadeEquations.g:9325:6: (lv_parameters_4_0= ruleParameter )
                    // InternalScadeEquations.g:9326:7: lv_parameters_4_0= ruleParameter
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRandomizeCallEffectAccess().getParametersParameterParserRuleCall_3_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_6);
                    lv_parameters_4_0=ruleParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRandomizeCallEffectRule());
                      							}
                      							add(
                      								current,
                      								"parameters",
                      								lv_parameters_4_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:9343:5: (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )*
                    loop240:
                    do {
                        int alt240=2;
                        int LA240_0 = input.LA(1);

                        if ( (LA240_0==18) ) {
                            alt240=1;
                        }


                        switch (alt240) {
                    	case 1 :
                    	    // InternalScadeEquations.g:9344:6: otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) )
                    	    {
                    	    otherlv_5=(Token)match(input,18,FollowSets000.FOLLOW_114); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_5, grammarAccess.getRandomizeCallEffectAccess().getCommaKeyword_3_0_2_0());
                    	      					
                    	    }
                    	    // InternalScadeEquations.g:9348:6: ( (lv_parameters_6_0= ruleParameter ) )
                    	    // InternalScadeEquations.g:9349:7: (lv_parameters_6_0= ruleParameter )
                    	    {
                    	    // InternalScadeEquations.g:9349:7: (lv_parameters_6_0= ruleParameter )
                    	    // InternalScadeEquations.g:9350:8: lv_parameters_6_0= ruleParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getRandomizeCallEffectAccess().getParametersParameterParserRuleCall_3_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_6);
                    	    lv_parameters_6_0=ruleParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getRandomizeCallEffectRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"parameters",
                    	      									lv_parameters_6_0,
                    	      									"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop240;
                        }
                    } while (true);

                    otherlv_7=(Token)match(input,19,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getRandomizeCallEffectAccess().getRightParenthesisKeyword_3_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:9374:4: otherlv_8= '()'
                    {
                    otherlv_8=(Token)match(input,28,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getRandomizeCallEffectAccess().getLeftParenthesisRightParenthesisKeyword_3_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRandomizeCallEffect"


    // $ANTLR start "entryRuleExpression"
    // InternalScadeEquations.g:9383:1: entryRuleExpression returns [EObject current=null] : iv_ruleExpression= ruleExpression EOF ;
    public final EObject entryRuleExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpression = null;


        try {
            // InternalScadeEquations.g:9383:51: (iv_ruleExpression= ruleExpression EOF )
            // InternalScadeEquations.g:9384:2: iv_ruleExpression= ruleExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleExpression=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpression"


    // $ANTLR start "ruleExpression"
    // InternalScadeEquations.g:9390:1: ruleExpression returns [EObject current=null] : (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression ) ;
    public final EObject ruleExpression() throws RecognitionException {
        EObject current = null;

        EObject this_BoolExpression_0 = null;

        EObject this_ValuedExpression_1 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:9396:2: ( (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression ) )
            // InternalScadeEquations.g:9397:2: (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression )
            {
            // InternalScadeEquations.g:9397:2: (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression )
            int alt242=2;
            alt242 = dfa242.predict(input);
            switch (alt242) {
                case 1 :
                    // InternalScadeEquations.g:9398:3: this_BoolExpression_0= ruleBoolExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getExpressionAccess().getBoolExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_BoolExpression_0=ruleBoolExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BoolExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:9410:3: this_ValuedExpression_1= ruleValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getExpressionAccess().getValuedExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedExpression_1=ruleValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ValuedExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpression"


    // $ANTLR start "entryRuleBitwiseXOrExpression"
    // InternalScadeEquations.g:9425:1: entryRuleBitwiseXOrExpression returns [EObject current=null] : iv_ruleBitwiseXOrExpression= ruleBitwiseXOrExpression EOF ;
    public final EObject entryRuleBitwiseXOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBitwiseXOrExpression = null;


        try {
            // InternalScadeEquations.g:9425:61: (iv_ruleBitwiseXOrExpression= ruleBitwiseXOrExpression EOF )
            // InternalScadeEquations.g:9426:2: iv_ruleBitwiseXOrExpression= ruleBitwiseXOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBitwiseXOrExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBitwiseXOrExpression=ruleBitwiseXOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBitwiseXOrExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBitwiseXOrExpression"


    // $ANTLR start "ruleBitwiseXOrExpression"
    // InternalScadeEquations.g:9432:1: ruleBitwiseXOrExpression returns [EObject current=null] : (this_BitwiseAndExpression_0= ruleBitwiseAndExpression ( () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )? ) ;
    public final EObject ruleBitwiseXOrExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_BitwiseAndExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:9438:2: ( (this_BitwiseAndExpression_0= ruleBitwiseAndExpression ( () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )? ) )
            // InternalScadeEquations.g:9439:2: (this_BitwiseAndExpression_0= ruleBitwiseAndExpression ( () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )? )
            {
            // InternalScadeEquations.g:9439:2: (this_BitwiseAndExpression_0= ruleBitwiseAndExpression ( () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )? )
            // InternalScadeEquations.g:9440:3: this_BitwiseAndExpression_0= ruleBitwiseAndExpression ( () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getBitwiseXOrExpressionAccess().getBitwiseAndExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_29);
            this_BitwiseAndExpression_0=ruleBitwiseAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_BitwiseAndExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalScadeEquations.g:9451:3: ( () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )?
            int alt244=2;
            int LA244_0 = input.LA(1);

            if ( (LA244_0==32) ) {
                alt244=1;
            }
            switch (alt244) {
                case 1 :
                    // InternalScadeEquations.g:9452:4: () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )*
                    {
                    // InternalScadeEquations.g:9452:4: ()
                    // InternalScadeEquations.g:9453:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getBitwiseXOrExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalScadeEquations.g:9462:4: ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) )
                    // InternalScadeEquations.g:9463:5: ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) )
                    {
                    // InternalScadeEquations.g:9463:5: ( (lv_operator_2_0= ruleBitwiseXOrOperator ) )
                    // InternalScadeEquations.g:9464:6: (lv_operator_2_0= ruleBitwiseXOrOperator )
                    {
                    // InternalScadeEquations.g:9464:6: (lv_operator_2_0= ruleBitwiseXOrOperator )
                    // InternalScadeEquations.g:9465:7: lv_operator_2_0= ruleBitwiseXOrOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getBitwiseXOrExpressionAccess().getOperatorBitwiseXOrOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_9);
                    lv_operator_2_0=ruleBitwiseXOrOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getBitwiseXOrExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseXOrOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:9482:5: ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) )
                    // InternalScadeEquations.g:9483:6: (lv_subExpressions_3_0= ruleBitwiseAndExpression )
                    {
                    // InternalScadeEquations.g:9483:6: (lv_subExpressions_3_0= ruleBitwiseAndExpression )
                    // InternalScadeEquations.g:9484:7: lv_subExpressions_3_0= ruleBitwiseAndExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getBitwiseXOrExpressionAccess().getSubExpressionsBitwiseAndExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_29);
                    lv_subExpressions_3_0=ruleBitwiseAndExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getBitwiseXOrExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseAndExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalScadeEquations.g:9502:4: (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )*
                    loop243:
                    do {
                        int alt243=2;
                        int LA243_0 = input.LA(1);

                        if ( (LA243_0==32) ) {
                            alt243=1;
                        }


                        switch (alt243) {
                    	case 1 :
                    	    // InternalScadeEquations.g:9503:5: otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,32,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getBitwiseXOrExpressionAccess().getCircumflexAccentKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalScadeEquations.g:9507:5: ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) )
                    	    // InternalScadeEquations.g:9508:6: (lv_subExpressions_5_0= ruleBitwiseAndExpression )
                    	    {
                    	    // InternalScadeEquations.g:9508:6: (lv_subExpressions_5_0= ruleBitwiseAndExpression )
                    	    // InternalScadeEquations.g:9509:7: lv_subExpressions_5_0= ruleBitwiseAndExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getBitwiseXOrExpressionAccess().getSubExpressionsBitwiseAndExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_29);
                    	    lv_subExpressions_5_0=ruleBitwiseAndExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getBitwiseXOrExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseAndExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop243;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseXOrExpression"


    // $ANTLR start "entryRuleBitwiseAndExpression"
    // InternalScadeEquations.g:9532:1: entryRuleBitwiseAndExpression returns [EObject current=null] : iv_ruleBitwiseAndExpression= ruleBitwiseAndExpression EOF ;
    public final EObject entryRuleBitwiseAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBitwiseAndExpression = null;


        try {
            // InternalScadeEquations.g:9532:61: (iv_ruleBitwiseAndExpression= ruleBitwiseAndExpression EOF )
            // InternalScadeEquations.g:9533:2: iv_ruleBitwiseAndExpression= ruleBitwiseAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBitwiseAndExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBitwiseAndExpression=ruleBitwiseAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBitwiseAndExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBitwiseAndExpression"


    // $ANTLR start "ruleBitwiseAndExpression"
    // InternalScadeEquations.g:9539:1: ruleBitwiseAndExpression returns [EObject current=null] : (this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )? ) ;
    public final EObject ruleBitwiseAndExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_CompareOperation_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:9545:2: ( (this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )? ) )
            // InternalScadeEquations.g:9546:2: (this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )? )
            {
            // InternalScadeEquations.g:9546:2: (this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )? )
            // InternalScadeEquations.g:9547:3: this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getBitwiseAndExpressionAccess().getCompareOperationParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_118);
            this_CompareOperation_0=ruleCompareOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_CompareOperation_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalScadeEquations.g:9558:3: ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )?
            int alt246=2;
            int LA246_0 = input.LA(1);

            if ( (LA246_0==79) ) {
                alt246=1;
            }
            switch (alt246) {
                case 1 :
                    // InternalScadeEquations.g:9559:4: () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )*
                    {
                    // InternalScadeEquations.g:9559:4: ()
                    // InternalScadeEquations.g:9560:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getBitwiseAndExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalScadeEquations.g:9569:4: ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) )
                    // InternalScadeEquations.g:9570:5: ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) )
                    {
                    // InternalScadeEquations.g:9570:5: ( (lv_operator_2_0= ruleBitwiseAndOperator ) )
                    // InternalScadeEquations.g:9571:6: (lv_operator_2_0= ruleBitwiseAndOperator )
                    {
                    // InternalScadeEquations.g:9571:6: (lv_operator_2_0= ruleBitwiseAndOperator )
                    // InternalScadeEquations.g:9572:7: lv_operator_2_0= ruleBitwiseAndOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getBitwiseAndExpressionAccess().getOperatorBitwiseAndOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_9);
                    lv_operator_2_0=ruleBitwiseAndOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getBitwiseAndExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseAndOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:9589:5: ( (lv_subExpressions_3_0= ruleCompareOperation ) )
                    // InternalScadeEquations.g:9590:6: (lv_subExpressions_3_0= ruleCompareOperation )
                    {
                    // InternalScadeEquations.g:9590:6: (lv_subExpressions_3_0= ruleCompareOperation )
                    // InternalScadeEquations.g:9591:7: lv_subExpressions_3_0= ruleCompareOperation
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getBitwiseAndExpressionAccess().getSubExpressionsCompareOperationParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_118);
                    lv_subExpressions_3_0=ruleCompareOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getBitwiseAndExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.CompareOperation");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalScadeEquations.g:9609:4: (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )*
                    loop245:
                    do {
                        int alt245=2;
                        int LA245_0 = input.LA(1);

                        if ( (LA245_0==79) ) {
                            alt245=1;
                        }


                        switch (alt245) {
                    	case 1 :
                    	    // InternalScadeEquations.g:9610:5: otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) )
                    	    {
                    	    otherlv_4=(Token)match(input,79,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getBitwiseAndExpressionAccess().getAmpersandKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalScadeEquations.g:9614:5: ( (lv_subExpressions_5_0= ruleCompareOperation ) )
                    	    // InternalScadeEquations.g:9615:6: (lv_subExpressions_5_0= ruleCompareOperation )
                    	    {
                    	    // InternalScadeEquations.g:9615:6: (lv_subExpressions_5_0= ruleCompareOperation )
                    	    // InternalScadeEquations.g:9616:7: lv_subExpressions_5_0= ruleCompareOperation
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getBitwiseAndExpressionAccess().getSubExpressionsCompareOperationParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_118);
                    	    lv_subExpressions_5_0=ruleCompareOperation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getBitwiseAndExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.CompareOperation");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop245;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseAndExpression"


    // $ANTLR start "entryRuleCompareOperation"
    // InternalScadeEquations.g:9639:1: entryRuleCompareOperation returns [EObject current=null] : iv_ruleCompareOperation= ruleCompareOperation EOF ;
    public final EObject entryRuleCompareOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCompareOperation = null;


        try {
            // InternalScadeEquations.g:9639:57: (iv_ruleCompareOperation= ruleCompareOperation EOF )
            // InternalScadeEquations.g:9640:2: iv_ruleCompareOperation= ruleCompareOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCompareOperationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCompareOperation=ruleCompareOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCompareOperation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCompareOperation"


    // $ANTLR start "ruleCompareOperation"
    // InternalScadeEquations.g:9646:1: ruleCompareOperation returns [EObject current=null] : (this_NotOrValuedExpression_0= ruleNotOrValuedExpression ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )? ) ;
    public final EObject ruleCompareOperation() throws RecognitionException {
        EObject current = null;

        EObject this_NotOrValuedExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:9652:2: ( (this_NotOrValuedExpression_0= ruleNotOrValuedExpression ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )? ) )
            // InternalScadeEquations.g:9653:2: (this_NotOrValuedExpression_0= ruleNotOrValuedExpression ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )? )
            {
            // InternalScadeEquations.g:9653:2: (this_NotOrValuedExpression_0= ruleNotOrValuedExpression ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )? )
            // InternalScadeEquations.g:9654:3: this_NotOrValuedExpression_0= ruleNotOrValuedExpression ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getCompareOperationAccess().getNotOrValuedExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_119);
            this_NotOrValuedExpression_0=ruleNotOrValuedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_NotOrValuedExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalScadeEquations.g:9665:3: ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )?
            int alt247=2;
            int LA247_0 = input.LA(1);

            if ( (LA247_0==21||(LA247_0>=94 && LA247_0<=98)) ) {
                alt247=1;
            }
            switch (alt247) {
                case 1 :
                    // InternalScadeEquations.g:9666:4: () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) )
                    {
                    // InternalScadeEquations.g:9666:4: ()
                    // InternalScadeEquations.g:9667:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getCompareOperationAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalScadeEquations.g:9676:4: ( (lv_operator_2_0= ruleCompareOperator ) )
                    // InternalScadeEquations.g:9677:5: (lv_operator_2_0= ruleCompareOperator )
                    {
                    // InternalScadeEquations.g:9677:5: (lv_operator_2_0= ruleCompareOperator )
                    // InternalScadeEquations.g:9678:6: lv_operator_2_0= ruleCompareOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getCompareOperationAccess().getOperatorCompareOperatorEnumRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_9);
                    lv_operator_2_0=ruleCompareOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getCompareOperationRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_2_0,
                      							"de.cau.cs.kieler.lustre.Lustre.CompareOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalScadeEquations.g:9695:4: ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) )
                    // InternalScadeEquations.g:9696:5: (lv_subExpressions_3_0= ruleNotOrValuedExpression )
                    {
                    // InternalScadeEquations.g:9696:5: (lv_subExpressions_3_0= ruleNotOrValuedExpression )
                    // InternalScadeEquations.g:9697:6: lv_subExpressions_3_0= ruleNotOrValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getCompareOperationAccess().getSubExpressionsNotOrValuedExpressionParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_3_0=ruleNotOrValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getCompareOperationRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_3_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.NotOrValuedExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCompareOperation"


    // $ANTLR start "entryRuleNotOrValuedExpression"
    // InternalScadeEquations.g:9719:1: entryRuleNotOrValuedExpression returns [EObject current=null] : iv_ruleNotOrValuedExpression= ruleNotOrValuedExpression EOF ;
    public final EObject entryRuleNotOrValuedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNotOrValuedExpression = null;


        try {
            // InternalScadeEquations.g:9719:62: (iv_ruleNotOrValuedExpression= ruleNotOrValuedExpression EOF )
            // InternalScadeEquations.g:9720:2: iv_ruleNotOrValuedExpression= ruleNotOrValuedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNotOrValuedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNotOrValuedExpression=ruleNotOrValuedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNotOrValuedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNotOrValuedExpression"


    // $ANTLR start "ruleNotOrValuedExpression"
    // InternalScadeEquations.g:9726:1: ruleNotOrValuedExpression returns [EObject current=null] : (this_ValuedExpression_0= ruleValuedExpression | this_NotExpression_1= ruleNotExpression ) ;
    public final EObject ruleNotOrValuedExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ValuedExpression_0 = null;

        EObject this_NotExpression_1 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:9732:2: ( (this_ValuedExpression_0= ruleValuedExpression | this_NotExpression_1= ruleNotExpression ) )
            // InternalScadeEquations.g:9733:2: (this_ValuedExpression_0= ruleValuedExpression | this_NotExpression_1= ruleNotExpression )
            {
            // InternalScadeEquations.g:9733:2: (this_ValuedExpression_0= ruleValuedExpression | this_NotExpression_1= ruleNotExpression )
            int alt248=2;
            alt248 = dfa248.predict(input);
            switch (alt248) {
                case 1 :
                    // InternalScadeEquations.g:9734:3: this_ValuedExpression_0= ruleValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNotOrValuedExpressionAccess().getValuedExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedExpression_0=ruleValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ValuedExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:9746:3: this_NotExpression_1= ruleNotExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNotOrValuedExpressionAccess().getNotExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_NotExpression_1=ruleNotExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NotExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNotOrValuedExpression"


    // $ANTLR start "entryRuleBitwiseNotExpression"
    // InternalScadeEquations.g:9761:1: entryRuleBitwiseNotExpression returns [EObject current=null] : iv_ruleBitwiseNotExpression= ruleBitwiseNotExpression EOF ;
    public final EObject entryRuleBitwiseNotExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBitwiseNotExpression = null;


        try {
            // InternalScadeEquations.g:9761:61: (iv_ruleBitwiseNotExpression= ruleBitwiseNotExpression EOF )
            // InternalScadeEquations.g:9762:2: iv_ruleBitwiseNotExpression= ruleBitwiseNotExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBitwiseNotExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBitwiseNotExpression=ruleBitwiseNotExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBitwiseNotExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBitwiseNotExpression"


    // $ANTLR start "ruleBitwiseNotExpression"
    // InternalScadeEquations.g:9768:1: ruleBitwiseNotExpression returns [EObject current=null] : ( ( () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) ) ) | this_AtomicExpression_3= ruleAtomicExpression ) ;
    public final EObject ruleBitwiseNotExpression() throws RecognitionException {
        EObject current = null;

        Enumerator lv_operator_1_0 = null;

        EObject lv_subExpressions_2_0 = null;

        EObject this_AtomicExpression_3 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:9774:2: ( ( ( () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) ) ) | this_AtomicExpression_3= ruleAtomicExpression ) )
            // InternalScadeEquations.g:9775:2: ( ( () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) ) ) | this_AtomicExpression_3= ruleAtomicExpression )
            {
            // InternalScadeEquations.g:9775:2: ( ( () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) ) ) | this_AtomicExpression_3= ruleAtomicExpression )
            int alt249=2;
            int LA249_0 = input.LA(1);

            if ( (LA249_0==107) ) {
                alt249=1;
            }
            else if ( (LA249_0==RULE_ID||LA249_0==RULE_BOOLEAN||LA249_0==17||LA249_0==88||LA249_0==101||LA249_0==106||LA249_0==109) ) {
                alt249=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 249, 0, input);

                throw nvae;
            }
            switch (alt249) {
                case 1 :
                    // InternalScadeEquations.g:9776:3: ( () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) ) )
                    {
                    // InternalScadeEquations.g:9776:3: ( () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) ) )
                    // InternalScadeEquations.g:9777:4: () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) )
                    {
                    // InternalScadeEquations.g:9777:4: ()
                    // InternalScadeEquations.g:9778:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getBitwiseNotExpressionAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalScadeEquations.g:9787:4: ( (lv_operator_1_0= ruleBitwiseNotOperator ) )
                    // InternalScadeEquations.g:9788:5: (lv_operator_1_0= ruleBitwiseNotOperator )
                    {
                    // InternalScadeEquations.g:9788:5: (lv_operator_1_0= ruleBitwiseNotOperator )
                    // InternalScadeEquations.g:9789:6: lv_operator_1_0= ruleBitwiseNotOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getBitwiseNotExpressionAccess().getOperatorBitwiseNotOperatorEnumRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_120);
                    lv_operator_1_0=ruleBitwiseNotOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getBitwiseNotExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_1_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseNotOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalScadeEquations.g:9806:4: ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) )
                    // InternalScadeEquations.g:9807:5: (lv_subExpressions_2_0= ruleBitwiseNotExpression )
                    {
                    // InternalScadeEquations.g:9807:5: (lv_subExpressions_2_0= ruleBitwiseNotExpression )
                    // InternalScadeEquations.g:9808:6: lv_subExpressions_2_0= ruleBitwiseNotExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getBitwiseNotExpressionAccess().getSubExpressionsBitwiseNotExpressionParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_2_0=ruleBitwiseNotExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getBitwiseNotExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_2_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseNotExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:9827:3: this_AtomicExpression_3= ruleAtomicExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBitwiseNotExpressionAccess().getAtomicExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AtomicExpression_3=ruleAtomicExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AtomicExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseNotExpression"


    // $ANTLR start "entryRuleShiftRightExpression"
    // InternalScadeEquations.g:9842:1: entryRuleShiftRightExpression returns [EObject current=null] : iv_ruleShiftRightExpression= ruleShiftRightExpression EOF ;
    public final EObject entryRuleShiftRightExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleShiftRightExpression = null;


        try {
            // InternalScadeEquations.g:9842:61: (iv_ruleShiftRightExpression= ruleShiftRightExpression EOF )
            // InternalScadeEquations.g:9843:2: iv_ruleShiftRightExpression= ruleShiftRightExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getShiftRightExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleShiftRightExpression=ruleShiftRightExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleShiftRightExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleShiftRightExpression"


    // $ANTLR start "ruleShiftRightExpression"
    // InternalScadeEquations.g:9849:1: ruleShiftRightExpression returns [EObject current=null] : (this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )* )? ) ;
    public final EObject ruleShiftRightExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_SumExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:9855:2: ( (this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )* )? ) )
            // InternalScadeEquations.g:9856:2: (this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )* )? )
            {
            // InternalScadeEquations.g:9856:2: (this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )* )? )
            // InternalScadeEquations.g:9857:3: this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getShiftRightExpressionAccess().getSumExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_121);
            this_SumExpression_0=ruleSumExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_SumExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalScadeEquations.g:9868:3: ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )* )?
            int alt251=2;
            int LA251_0 = input.LA(1);

            if ( (LA251_0==80) ) {
                alt251=1;
            }
            switch (alt251) {
                case 1 :
                    // InternalScadeEquations.g:9869:4: () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )*
                    {
                    // InternalScadeEquations.g:9869:4: ()
                    // InternalScadeEquations.g:9870:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getShiftRightExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalScadeEquations.g:9879:4: ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) )
                    // InternalScadeEquations.g:9880:5: ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) )
                    {
                    // InternalScadeEquations.g:9880:5: ( (lv_operator_2_0= ruleShiftRightOperator ) )
                    // InternalScadeEquations.g:9881:6: (lv_operator_2_0= ruleShiftRightOperator )
                    {
                    // InternalScadeEquations.g:9881:6: (lv_operator_2_0= ruleShiftRightOperator )
                    // InternalScadeEquations.g:9882:7: lv_operator_2_0= ruleShiftRightOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getShiftRightExpressionAccess().getOperatorShiftRightOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_48);
                    lv_operator_2_0=ruleShiftRightOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getShiftRightExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ShiftRightOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:9899:5: ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) )
                    // InternalScadeEquations.g:9900:6: (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression )
                    {
                    // InternalScadeEquations.g:9900:6: (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression )
                    // InternalScadeEquations.g:9901:7: lv_subExpressions_3_0= ruleShiftRightUnsignedExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getShiftRightExpressionAccess().getSubExpressionsShiftRightUnsignedExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_121);
                    lv_subExpressions_3_0=ruleShiftRightUnsignedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getShiftRightExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ShiftRightUnsignedExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalScadeEquations.g:9919:4: (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )*
                    loop250:
                    do {
                        int alt250=2;
                        int LA250_0 = input.LA(1);

                        if ( (LA250_0==80) ) {
                            alt250=1;
                        }


                        switch (alt250) {
                    	case 1 :
                    	    // InternalScadeEquations.g:9920:5: otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,80,FollowSets000.FOLLOW_48); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getShiftRightExpressionAccess().getGreaterThanSignGreaterThanSignKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalScadeEquations.g:9924:5: ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) )
                    	    // InternalScadeEquations.g:9925:6: (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression )
                    	    {
                    	    // InternalScadeEquations.g:9925:6: (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression )
                    	    // InternalScadeEquations.g:9926:7: lv_subExpressions_5_0= ruleShiftRightUnsignedExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getShiftRightExpressionAccess().getSubExpressionsShiftRightUnsignedExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_121);
                    	    lv_subExpressions_5_0=ruleShiftRightUnsignedExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getShiftRightExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.ShiftRightUnsignedExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop250;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShiftRightExpression"


    // $ANTLR start "entryRuleShiftRightUnsignedExpression"
    // InternalScadeEquations.g:9949:1: entryRuleShiftRightUnsignedExpression returns [EObject current=null] : iv_ruleShiftRightUnsignedExpression= ruleShiftRightUnsignedExpression EOF ;
    public final EObject entryRuleShiftRightUnsignedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleShiftRightUnsignedExpression = null;


        try {
            // InternalScadeEquations.g:9949:69: (iv_ruleShiftRightUnsignedExpression= ruleShiftRightUnsignedExpression EOF )
            // InternalScadeEquations.g:9950:2: iv_ruleShiftRightUnsignedExpression= ruleShiftRightUnsignedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getShiftRightUnsignedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleShiftRightUnsignedExpression=ruleShiftRightUnsignedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleShiftRightUnsignedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleShiftRightUnsignedExpression"


    // $ANTLR start "ruleShiftRightUnsignedExpression"
    // InternalScadeEquations.g:9956:1: ruleShiftRightUnsignedExpression returns [EObject current=null] : (this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* )? ) ;
    public final EObject ruleShiftRightUnsignedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_SumExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:9962:2: ( (this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* )? ) )
            // InternalScadeEquations.g:9963:2: (this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* )? )
            {
            // InternalScadeEquations.g:9963:2: (this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* )? )
            // InternalScadeEquations.g:9964:3: this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getShiftRightUnsignedExpressionAccess().getSumExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_122);
            this_SumExpression_0=ruleSumExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_SumExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalScadeEquations.g:9975:3: ( () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* )?
            int alt253=2;
            int LA253_0 = input.LA(1);

            if ( (LA253_0==81) ) {
                alt253=1;
            }
            switch (alt253) {
                case 1 :
                    // InternalScadeEquations.g:9976:4: () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )*
                    {
                    // InternalScadeEquations.g:9976:4: ()
                    // InternalScadeEquations.g:9977:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getShiftRightUnsignedExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalScadeEquations.g:9986:4: ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) )
                    // InternalScadeEquations.g:9987:5: ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) )
                    {
                    // InternalScadeEquations.g:9987:5: ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) )
                    // InternalScadeEquations.g:9988:6: (lv_operator_2_0= ruleShiftRightUnsignedOperator )
                    {
                    // InternalScadeEquations.g:9988:6: (lv_operator_2_0= ruleShiftRightUnsignedOperator )
                    // InternalScadeEquations.g:9989:7: lv_operator_2_0= ruleShiftRightUnsignedOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getShiftRightUnsignedExpressionAccess().getOperatorShiftRightUnsignedOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_48);
                    lv_operator_2_0=ruleShiftRightUnsignedOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getShiftRightUnsignedExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ShiftRightUnsignedOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:10006:5: ( (lv_subExpressions_3_0= ruleSumExpression ) )
                    // InternalScadeEquations.g:10007:6: (lv_subExpressions_3_0= ruleSumExpression )
                    {
                    // InternalScadeEquations.g:10007:6: (lv_subExpressions_3_0= ruleSumExpression )
                    // InternalScadeEquations.g:10008:7: lv_subExpressions_3_0= ruleSumExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getShiftRightUnsignedExpressionAccess().getSubExpressionsSumExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_122);
                    lv_subExpressions_3_0=ruleSumExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getShiftRightUnsignedExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.SumExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalScadeEquations.g:10026:4: (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )*
                    loop252:
                    do {
                        int alt252=2;
                        int LA252_0 = input.LA(1);

                        if ( (LA252_0==81) ) {
                            alt252=1;
                        }


                        switch (alt252) {
                    	case 1 :
                    	    // InternalScadeEquations.g:10027:5: otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,81,FollowSets000.FOLLOW_48); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getShiftRightUnsignedExpressionAccess().getGreaterThanSignGreaterThanSignGreaterThanSignKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalScadeEquations.g:10031:5: ( (lv_subExpressions_5_0= ruleSumExpression ) )
                    	    // InternalScadeEquations.g:10032:6: (lv_subExpressions_5_0= ruleSumExpression )
                    	    {
                    	    // InternalScadeEquations.g:10032:6: (lv_subExpressions_5_0= ruleSumExpression )
                    	    // InternalScadeEquations.g:10033:7: lv_subExpressions_5_0= ruleSumExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getShiftRightUnsignedExpressionAccess().getSubExpressionsSumExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_122);
                    	    lv_subExpressions_5_0=ruleSumExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getShiftRightUnsignedExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.SumExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop252;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShiftRightUnsignedExpression"


    // $ANTLR start "entryRuleSumExpression"
    // InternalScadeEquations.g:10056:1: entryRuleSumExpression returns [EObject current=null] : iv_ruleSumExpression= ruleSumExpression EOF ;
    public final EObject entryRuleSumExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSumExpression = null;


        try {
            // InternalScadeEquations.g:10056:54: (iv_ruleSumExpression= ruleSumExpression EOF )
            // InternalScadeEquations.g:10057:2: iv_ruleSumExpression= ruleSumExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSumExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSumExpression=ruleSumExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSumExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSumExpression"


    // $ANTLR start "ruleSumExpression"
    // InternalScadeEquations.g:10063:1: ruleSumExpression returns [EObject current=null] : (this_ProductExpression_0= ruleProductExpression ( ( () ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleProductExpression ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )* ) )* ) ;
    public final EObject ruleSumExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        Token otherlv_9=null;
        EObject this_ProductExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;

        Enumerator lv_operator_7_0 = null;

        EObject lv_subExpressions_8_0 = null;

        EObject lv_subExpressions_10_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:10069:2: ( (this_ProductExpression_0= ruleProductExpression ( ( () ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleProductExpression ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )* ) )* ) )
            // InternalScadeEquations.g:10070:2: (this_ProductExpression_0= ruleProductExpression ( ( () ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleProductExpression ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )* ) )* )
            {
            // InternalScadeEquations.g:10070:2: (this_ProductExpression_0= ruleProductExpression ( ( () ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleProductExpression ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )* ) )* )
            // InternalScadeEquations.g:10071:3: this_ProductExpression_0= ruleProductExpression ( ( () ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleProductExpression ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )* ) )*
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getSumExpressionAccess().getProductExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_123);
            this_ProductExpression_0=ruleProductExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ProductExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalScadeEquations.g:10082:3: ( ( () ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleProductExpression ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )* ) )*
            loop256:
            do {
                int alt256=3;
                int LA256_0 = input.LA(1);

                if ( (LA256_0==82) ) {
                    alt256=1;
                }
                else if ( (LA256_0==83) ) {
                    alt256=2;
                }


                switch (alt256) {
            	case 1 :
            	    // InternalScadeEquations.g:10083:4: ( () ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )* )
            	    {
            	    // InternalScadeEquations.g:10083:4: ( () ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )* )
            	    // InternalScadeEquations.g:10084:5: () ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )*
            	    {
            	    // InternalScadeEquations.g:10084:5: ()
            	    // InternalScadeEquations.g:10085:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						/* */
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndAdd(
            	      							grammarAccess.getSumExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalScadeEquations.g:10094:5: ( (lv_operator_2_0= ruleAddOperator ) )
            	    // InternalScadeEquations.g:10095:6: (lv_operator_2_0= ruleAddOperator )
            	    {
            	    // InternalScadeEquations.g:10095:6: (lv_operator_2_0= ruleAddOperator )
            	    // InternalScadeEquations.g:10096:7: lv_operator_2_0= ruleAddOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getSumExpressionAccess().getOperatorAddOperatorEnumRuleCall_1_0_1_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_48);
            	    lv_operator_2_0=ruleAddOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getSumExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"operator",
            	      								lv_operator_2_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.AddOperator");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalScadeEquations.g:10113:5: ( (lv_subExpressions_3_0= ruleProductExpression ) )
            	    // InternalScadeEquations.g:10114:6: (lv_subExpressions_3_0= ruleProductExpression )
            	    {
            	    // InternalScadeEquations.g:10114:6: (lv_subExpressions_3_0= ruleProductExpression )
            	    // InternalScadeEquations.g:10115:7: lv_subExpressions_3_0= ruleProductExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getSumExpressionAccess().getSubExpressionsProductExpressionParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_123);
            	    lv_subExpressions_3_0=ruleProductExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getSumExpressionRule());
            	      							}
            	      							add(
            	      								current,
            	      								"subExpressions",
            	      								lv_subExpressions_3_0,
            	      								"de.cau.cs.kieler.lustre.Lustre.ProductExpression");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalScadeEquations.g:10132:5: (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )*
            	    loop254:
            	    do {
            	        int alt254=2;
            	        alt254 = dfa254.predict(input);
            	        switch (alt254) {
            	    	case 1 :
            	    	    // InternalScadeEquations.g:10133:6: otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) )
            	    	    {
            	    	    otherlv_4=(Token)match(input,82,FollowSets000.FOLLOW_48); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      						newLeafNode(otherlv_4, grammarAccess.getSumExpressionAccess().getPlusSignKeyword_1_0_3_0());
            	    	      					
            	    	    }
            	    	    // InternalScadeEquations.g:10137:6: ( (lv_subExpressions_5_0= ruleProductExpression ) )
            	    	    // InternalScadeEquations.g:10138:7: (lv_subExpressions_5_0= ruleProductExpression )
            	    	    {
            	    	    // InternalScadeEquations.g:10138:7: (lv_subExpressions_5_0= ruleProductExpression )
            	    	    // InternalScadeEquations.g:10139:8: lv_subExpressions_5_0= ruleProductExpression
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      								newCompositeNode(grammarAccess.getSumExpressionAccess().getSubExpressionsProductExpressionParserRuleCall_1_0_3_1_0());
            	    	      							
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_123);
            	    	    lv_subExpressions_5_0=ruleProductExpression();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      								if (current==null) {
            	    	      									current = createModelElementForParent(grammarAccess.getSumExpressionRule());
            	    	      								}
            	    	      								add(
            	    	      									current,
            	    	      									"subExpressions",
            	    	      									lv_subExpressions_5_0,
            	    	      									"de.cau.cs.kieler.lustre.Lustre.ProductExpression");
            	    	      								afterParserOrEnumRuleCall();
            	    	      							
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop254;
            	        }
            	    } while (true);


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalScadeEquations.g:10159:4: ( () ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleProductExpression ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )* )
            	    {
            	    // InternalScadeEquations.g:10159:4: ( () ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleProductExpression ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )* )
            	    // InternalScadeEquations.g:10160:5: () ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleProductExpression ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )*
            	    {
            	    // InternalScadeEquations.g:10160:5: ()
            	    // InternalScadeEquations.g:10161:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						/* */
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndAdd(
            	      							grammarAccess.getSumExpressionAccess().getOperatorExpressionSubExpressionsAction_1_1_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalScadeEquations.g:10170:5: ( (lv_operator_7_0= ruleSubOperator ) )
            	    // InternalScadeEquations.g:10171:6: (lv_operator_7_0= ruleSubOperator )
            	    {
            	    // InternalScadeEquations.g:10171:6: (lv_operator_7_0= ruleSubOperator )
            	    // InternalScadeEquations.g:10172:7: lv_operator_7_0= ruleSubOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getSumExpressionAccess().getOperatorSubOperatorEnumRuleCall_1_1_1_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_48);
            	    lv_operator_7_0=ruleSubOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getSumExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"operator",
            	      								lv_operator_7_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.SubOperator");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalScadeEquations.g:10189:5: ( (lv_subExpressions_8_0= ruleProductExpression ) )
            	    // InternalScadeEquations.g:10190:6: (lv_subExpressions_8_0= ruleProductExpression )
            	    {
            	    // InternalScadeEquations.g:10190:6: (lv_subExpressions_8_0= ruleProductExpression )
            	    // InternalScadeEquations.g:10191:7: lv_subExpressions_8_0= ruleProductExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getSumExpressionAccess().getSubExpressionsProductExpressionParserRuleCall_1_1_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_123);
            	    lv_subExpressions_8_0=ruleProductExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getSumExpressionRule());
            	      							}
            	      							add(
            	      								current,
            	      								"subExpressions",
            	      								lv_subExpressions_8_0,
            	      								"de.cau.cs.kieler.lustre.Lustre.ProductExpression");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalScadeEquations.g:10208:5: (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )*
            	    loop255:
            	    do {
            	        int alt255=2;
            	        alt255 = dfa255.predict(input);
            	        switch (alt255) {
            	    	case 1 :
            	    	    // InternalScadeEquations.g:10209:6: otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) )
            	    	    {
            	    	    otherlv_9=(Token)match(input,83,FollowSets000.FOLLOW_48); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      						newLeafNode(otherlv_9, grammarAccess.getSumExpressionAccess().getHyphenMinusKeyword_1_1_3_0());
            	    	      					
            	    	    }
            	    	    // InternalScadeEquations.g:10213:6: ( (lv_subExpressions_10_0= ruleProductExpression ) )
            	    	    // InternalScadeEquations.g:10214:7: (lv_subExpressions_10_0= ruleProductExpression )
            	    	    {
            	    	    // InternalScadeEquations.g:10214:7: (lv_subExpressions_10_0= ruleProductExpression )
            	    	    // InternalScadeEquations.g:10215:8: lv_subExpressions_10_0= ruleProductExpression
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      								newCompositeNode(grammarAccess.getSumExpressionAccess().getSubExpressionsProductExpressionParserRuleCall_1_1_3_1_0());
            	    	      							
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_123);
            	    	    lv_subExpressions_10_0=ruleProductExpression();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      								if (current==null) {
            	    	      									current = createModelElementForParent(grammarAccess.getSumExpressionRule());
            	    	      								}
            	    	      								add(
            	    	      									current,
            	    	      									"subExpressions",
            	    	      									lv_subExpressions_10_0,
            	    	      									"de.cau.cs.kieler.lustre.Lustre.ProductExpression");
            	    	      								afterParserOrEnumRuleCall();
            	    	      							
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop255;
            	        }
            	    } while (true);


            	    }


            	    }
            	    break;

            	default :
            	    break loop256;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSumExpression"


    // $ANTLR start "entryRuleAtomicValuedExpression"
    // InternalScadeEquations.g:10239:1: entryRuleAtomicValuedExpression returns [EObject current=null] : iv_ruleAtomicValuedExpression= ruleAtomicValuedExpression EOF ;
    public final EObject entryRuleAtomicValuedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAtomicValuedExpression = null;


        try {
            // InternalScadeEquations.g:10239:63: (iv_ruleAtomicValuedExpression= ruleAtomicValuedExpression EOF )
            // InternalScadeEquations.g:10240:2: iv_ruleAtomicValuedExpression= ruleAtomicValuedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAtomicValuedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAtomicValuedExpression=ruleAtomicValuedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAtomicValuedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAtomicValuedExpression"


    // $ANTLR start "ruleAtomicValuedExpression"
    // InternalScadeEquations.g:10246:1: ruleAtomicValuedExpression returns [EObject current=null] : (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_StringValue_2= ruleStringValue | this_VectorValue_3= ruleVectorValue | (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' ) | this_AtomicExpression_7= ruleAtomicExpression ) ;
    public final EObject ruleAtomicValuedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject this_IntValue_0 = null;

        EObject this_FloatValue_1 = null;

        EObject this_StringValue_2 = null;

        EObject this_VectorValue_3 = null;

        EObject this_ValuedExpression_5 = null;

        EObject this_AtomicExpression_7 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:10252:2: ( (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_StringValue_2= ruleStringValue | this_VectorValue_3= ruleVectorValue | (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' ) | this_AtomicExpression_7= ruleAtomicExpression ) )
            // InternalScadeEquations.g:10253:2: (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_StringValue_2= ruleStringValue | this_VectorValue_3= ruleVectorValue | (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' ) | this_AtomicExpression_7= ruleAtomicExpression )
            {
            // InternalScadeEquations.g:10253:2: (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_StringValue_2= ruleStringValue | this_VectorValue_3= ruleVectorValue | (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' ) | this_AtomicExpression_7= ruleAtomicExpression )
            int alt257=6;
            alt257 = dfa257.predict(input);
            switch (alt257) {
                case 1 :
                    // InternalScadeEquations.g:10254:3: this_IntValue_0= ruleIntValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getIntValueParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_IntValue_0=ruleIntValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_IntValue_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:10266:3: this_FloatValue_1= ruleFloatValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getFloatValueParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_FloatValue_1=ruleFloatValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FloatValue_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalScadeEquations.g:10278:3: this_StringValue_2= ruleStringValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getStringValueParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_StringValue_2=ruleStringValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_StringValue_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalScadeEquations.g:10290:3: this_VectorValue_3= ruleVectorValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getVectorValueParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_VectorValue_3=ruleVectorValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_VectorValue_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalScadeEquations.g:10302:3: (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' )
                    {
                    // InternalScadeEquations.g:10302:3: (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' )
                    // InternalScadeEquations.g:10303:4: otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')'
                    {
                    otherlv_4=(Token)match(input,17,FollowSets000.FOLLOW_48); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getAtomicValuedExpressionAccess().getLeftParenthesisKeyword_4_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getValuedExpressionParserRuleCall_4_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_13);
                    this_ValuedExpression_5=ruleValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ValuedExpression_5;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_6=(Token)match(input,19,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getAtomicValuedExpressionAccess().getRightParenthesisKeyword_4_2());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalScadeEquations.g:10324:3: this_AtomicExpression_7= ruleAtomicExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getAtomicExpressionParserRuleCall_5());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AtomicExpression_7=ruleAtomicExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AtomicExpression_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAtomicValuedExpression"


    // $ANTLR start "entryRulePrimeID"
    // InternalScadeEquations.g:10339:1: entryRulePrimeID returns [String current=null] : iv_rulePrimeID= rulePrimeID EOF ;
    public final String entryRulePrimeID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePrimeID = null;


        try {
            // InternalScadeEquations.g:10339:47: (iv_rulePrimeID= rulePrimeID EOF )
            // InternalScadeEquations.g:10340:2: iv_rulePrimeID= rulePrimeID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimeIDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePrimeID=rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimeID.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrimeID"


    // $ANTLR start "rulePrimeID"
    // InternalScadeEquations.g:10346:1: rulePrimeID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ID_0= RULE_ID (kw= '\\'' )* ) ;
    public final AntlrDatatypeRuleToken rulePrimeID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;
        Token kw=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:10352:2: ( (this_ID_0= RULE_ID (kw= '\\'' )* ) )
            // InternalScadeEquations.g:10353:2: (this_ID_0= RULE_ID (kw= '\\'' )* )
            {
            // InternalScadeEquations.g:10353:2: (this_ID_0= RULE_ID (kw= '\\'' )* )
            // InternalScadeEquations.g:10354:3: this_ID_0= RULE_ID (kw= '\\'' )*
            {
            this_ID_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_124); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_ID_0);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_ID_0, grammarAccess.getPrimeIDAccess().getIDTerminalRuleCall_0());
              		
            }
            // InternalScadeEquations.g:10361:3: (kw= '\\'' )*
            loop258:
            do {
                int alt258=2;
                int LA258_0 = input.LA(1);

                if ( (LA258_0==84) ) {
                    alt258=1;
                }


                switch (alt258) {
            	case 1 :
            	    // InternalScadeEquations.g:10362:4: kw= '\\''
            	    {
            	    kw=(Token)match(input,84,FollowSets000.FOLLOW_124); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(kw);
            	      				newLeafNode(kw, grammarAccess.getPrimeIDAccess().getApostropheKeyword_1());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop258;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrimeID"


    // $ANTLR start "entryRuleValuedObjectReference"
    // InternalScadeEquations.g:10372:1: entryRuleValuedObjectReference returns [EObject current=null] : iv_ruleValuedObjectReference= ruleValuedObjectReference EOF ;
    public final EObject entryRuleValuedObjectReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValuedObjectReference = null;


        try {
            // InternalScadeEquations.g:10372:62: (iv_ruleValuedObjectReference= ruleValuedObjectReference EOF )
            // InternalScadeEquations.g:10373:2: iv_ruleValuedObjectReference= ruleValuedObjectReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValuedObjectReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleValuedObjectReference=ruleValuedObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValuedObjectReference; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValuedObjectReference"


    // $ANTLR start "ruleValuedObjectReference"
    // InternalScadeEquations.g:10379:1: ruleValuedObjectReference returns [EObject current=null] : ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? ) ;
    public final EObject ruleValuedObjectReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_indices_2_0 = null;

        EObject lv_subReference_5_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:10385:2: ( ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? ) )
            // InternalScadeEquations.g:10386:2: ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? )
            {
            // InternalScadeEquations.g:10386:2: ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? )
            // InternalScadeEquations.g:10387:3: ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )?
            {
            // InternalScadeEquations.g:10387:3: ( ( rulePrimeID ) )
            // InternalScadeEquations.g:10388:4: ( rulePrimeID )
            {
            // InternalScadeEquations.g:10388:4: ( rulePrimeID )
            // InternalScadeEquations.g:10389:5: rulePrimeID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getValuedObjectReferenceRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getValuedObjectReferenceAccess().getValuedObjectValuedObjectCrossReference_0_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_125);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:10406:3: (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )*
            loop259:
            do {
                int alt259=2;
                int LA259_0 = input.LA(1);

                if ( (LA259_0==73) ) {
                    alt259=1;
                }


                switch (alt259) {
            	case 1 :
            	    // InternalScadeEquations.g:10407:4: otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']'
            	    {
            	    otherlv_1=(Token)match(input,73,FollowSets000.FOLLOW_9); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getValuedObjectReferenceAccess().getLeftSquareBracketKeyword_1_0());
            	      			
            	    }
            	    // InternalScadeEquations.g:10411:4: ( (lv_indices_2_0= ruleExpression ) )
            	    // InternalScadeEquations.g:10412:5: (lv_indices_2_0= ruleExpression )
            	    {
            	    // InternalScadeEquations.g:10412:5: (lv_indices_2_0= ruleExpression )
            	    // InternalScadeEquations.g:10413:6: lv_indices_2_0= ruleExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getValuedObjectReferenceAccess().getIndicesExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_105);
            	    lv_indices_2_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getValuedObjectReferenceRule());
            	      						}
            	      						add(
            	      							current,
            	      							"indices",
            	      							lv_indices_2_0,
            	      							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_3=(Token)match(input,74,FollowSets000.FOLLOW_125); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getValuedObjectReferenceAccess().getRightSquareBracketKeyword_1_2());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop259;
                }
            } while (true);

            // InternalScadeEquations.g:10435:3: (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )?
            int alt260=2;
            int LA260_0 = input.LA(1);

            if ( (LA260_0==37) ) {
                alt260=1;
            }
            switch (alt260) {
                case 1 :
                    // InternalScadeEquations.g:10436:4: otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) )
                    {
                    otherlv_4=(Token)match(input,37,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getValuedObjectReferenceAccess().getFullStopKeyword_2_0());
                      			
                    }
                    // InternalScadeEquations.g:10440:4: ( (lv_subReference_5_0= ruleValuedObjectReference ) )
                    // InternalScadeEquations.g:10441:5: (lv_subReference_5_0= ruleValuedObjectReference )
                    {
                    // InternalScadeEquations.g:10441:5: (lv_subReference_5_0= ruleValuedObjectReference )
                    // InternalScadeEquations.g:10442:6: lv_subReference_5_0= ruleValuedObjectReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getValuedObjectReferenceAccess().getSubReferenceValuedObjectReferenceParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subReference_5_0=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getValuedObjectReferenceRule());
                      						}
                      						set(
                      							current,
                      							"subReference",
                      							lv_subReference_5_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValuedObjectReference"


    // $ANTLR start "entryRuleScheduleObjectReference"
    // InternalScadeEquations.g:10464:1: entryRuleScheduleObjectReference returns [EObject current=null] : iv_ruleScheduleObjectReference= ruleScheduleObjectReference EOF ;
    public final EObject entryRuleScheduleObjectReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScheduleObjectReference = null;


        try {
            // InternalScadeEquations.g:10464:64: (iv_ruleScheduleObjectReference= ruleScheduleObjectReference EOF )
            // InternalScadeEquations.g:10465:2: iv_ruleScheduleObjectReference= ruleScheduleObjectReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScheduleObjectReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScheduleObjectReference=ruleScheduleObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScheduleObjectReference; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScheduleObjectReference"


    // $ANTLR start "ruleScheduleObjectReference"
    // InternalScadeEquations.g:10471:1: ruleScheduleObjectReference returns [EObject current=null] : ( ( ( rulePrimeID ) ) ( (lv_priority_1_0= RULE_INT ) ) ) ;
    public final EObject ruleScheduleObjectReference() throws RecognitionException {
        EObject current = null;

        Token lv_priority_1_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:10477:2: ( ( ( ( rulePrimeID ) ) ( (lv_priority_1_0= RULE_INT ) ) ) )
            // InternalScadeEquations.g:10478:2: ( ( ( rulePrimeID ) ) ( (lv_priority_1_0= RULE_INT ) ) )
            {
            // InternalScadeEquations.g:10478:2: ( ( ( rulePrimeID ) ) ( (lv_priority_1_0= RULE_INT ) ) )
            // InternalScadeEquations.g:10479:3: ( ( rulePrimeID ) ) ( (lv_priority_1_0= RULE_INT ) )
            {
            // InternalScadeEquations.g:10479:3: ( ( rulePrimeID ) )
            // InternalScadeEquations.g:10480:4: ( rulePrimeID )
            {
            // InternalScadeEquations.g:10480:4: ( rulePrimeID )
            // InternalScadeEquations.g:10481:5: rulePrimeID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getScheduleObjectReferenceRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getScheduleObjectReferenceAccess().getValuedObjectValuedObjectCrossReference_0_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_126);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:10498:3: ( (lv_priority_1_0= RULE_INT ) )
            // InternalScadeEquations.g:10499:4: (lv_priority_1_0= RULE_INT )
            {
            // InternalScadeEquations.g:10499:4: (lv_priority_1_0= RULE_INT )
            // InternalScadeEquations.g:10500:5: lv_priority_1_0= RULE_INT
            {
            lv_priority_1_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_priority_1_0, grammarAccess.getScheduleObjectReferenceAccess().getPriorityINTTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getScheduleObjectReferenceRule());
              					}
              					setWithLastConsumed(
              						current,
              						"priority",
              						lv_priority_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.INT");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScheduleObjectReference"


    // $ANTLR start "entryRuleReferenceCall"
    // InternalScadeEquations.g:10520:1: entryRuleReferenceCall returns [EObject current=null] : iv_ruleReferenceCall= ruleReferenceCall EOF ;
    public final EObject entryRuleReferenceCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReferenceCall = null;


        try {
            // InternalScadeEquations.g:10520:54: (iv_ruleReferenceCall= ruleReferenceCall EOF )
            // InternalScadeEquations.g:10521:2: iv_ruleReferenceCall= ruleReferenceCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReferenceCallRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleReferenceCall=ruleReferenceCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReferenceCall; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReferenceCall"


    // $ANTLR start "ruleReferenceCall"
    // InternalScadeEquations.g:10527:1: ruleReferenceCall returns [EObject current=null] : ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? ( (otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')' ) | otherlv_11= '()' ) ) ;
    public final EObject ruleReferenceCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        EObject lv_indices_2_0 = null;

        EObject lv_subReference_5_0 = null;

        EObject lv_parameters_7_0 = null;

        EObject lv_parameters_9_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:10533:2: ( ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? ( (otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')' ) | otherlv_11= '()' ) ) )
            // InternalScadeEquations.g:10534:2: ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? ( (otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')' ) | otherlv_11= '()' ) )
            {
            // InternalScadeEquations.g:10534:2: ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? ( (otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')' ) | otherlv_11= '()' ) )
            // InternalScadeEquations.g:10535:3: ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? ( (otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')' ) | otherlv_11= '()' )
            {
            // InternalScadeEquations.g:10535:3: ( ( rulePrimeID ) )
            // InternalScadeEquations.g:10536:4: ( rulePrimeID )
            {
            // InternalScadeEquations.g:10536:4: ( rulePrimeID )
            // InternalScadeEquations.g:10537:5: rulePrimeID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getReferenceCallRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getReferenceCallAccess().getValuedObjectValuedObjectCrossReference_0_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_113);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:10554:3: (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )*
            loop261:
            do {
                int alt261=2;
                int LA261_0 = input.LA(1);

                if ( (LA261_0==73) ) {
                    alt261=1;
                }


                switch (alt261) {
            	case 1 :
            	    // InternalScadeEquations.g:10555:4: otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']'
            	    {
            	    otherlv_1=(Token)match(input,73,FollowSets000.FOLLOW_9); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getReferenceCallAccess().getLeftSquareBracketKeyword_1_0());
            	      			
            	    }
            	    // InternalScadeEquations.g:10559:4: ( (lv_indices_2_0= ruleExpression ) )
            	    // InternalScadeEquations.g:10560:5: (lv_indices_2_0= ruleExpression )
            	    {
            	    // InternalScadeEquations.g:10560:5: (lv_indices_2_0= ruleExpression )
            	    // InternalScadeEquations.g:10561:6: lv_indices_2_0= ruleExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getReferenceCallAccess().getIndicesExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_105);
            	    lv_indices_2_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getReferenceCallRule());
            	      						}
            	      						add(
            	      							current,
            	      							"indices",
            	      							lv_indices_2_0,
            	      							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_3=(Token)match(input,74,FollowSets000.FOLLOW_113); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getReferenceCallAccess().getRightSquareBracketKeyword_1_2());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop261;
                }
            } while (true);

            // InternalScadeEquations.g:10583:3: (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )?
            int alt262=2;
            int LA262_0 = input.LA(1);

            if ( (LA262_0==37) ) {
                alt262=1;
            }
            switch (alt262) {
                case 1 :
                    // InternalScadeEquations.g:10584:4: otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) )
                    {
                    otherlv_4=(Token)match(input,37,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getReferenceCallAccess().getFullStopKeyword_2_0());
                      			
                    }
                    // InternalScadeEquations.g:10588:4: ( (lv_subReference_5_0= ruleValuedObjectReference ) )
                    // InternalScadeEquations.g:10589:5: (lv_subReference_5_0= ruleValuedObjectReference )
                    {
                    // InternalScadeEquations.g:10589:5: (lv_subReference_5_0= ruleValuedObjectReference )
                    // InternalScadeEquations.g:10590:6: lv_subReference_5_0= ruleValuedObjectReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getReferenceCallAccess().getSubReferenceValuedObjectReferenceParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_22);
                    lv_subReference_5_0=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getReferenceCallRule());
                      						}
                      						set(
                      							current,
                      							"subReference",
                      							lv_subReference_5_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:10608:3: ( (otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')' ) | otherlv_11= '()' )
            int alt264=2;
            int LA264_0 = input.LA(1);

            if ( (LA264_0==17) ) {
                alt264=1;
            }
            else if ( (LA264_0==28) ) {
                alt264=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 264, 0, input);

                throw nvae;
            }
            switch (alt264) {
                case 1 :
                    // InternalScadeEquations.g:10609:4: (otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')' )
                    {
                    // InternalScadeEquations.g:10609:4: (otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')' )
                    // InternalScadeEquations.g:10610:5: otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')'
                    {
                    otherlv_6=(Token)match(input,17,FollowSets000.FOLLOW_114); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getReferenceCallAccess().getLeftParenthesisKeyword_3_0_0());
                      				
                    }
                    // InternalScadeEquations.g:10614:5: ( (lv_parameters_7_0= ruleParameter ) )
                    // InternalScadeEquations.g:10615:6: (lv_parameters_7_0= ruleParameter )
                    {
                    // InternalScadeEquations.g:10615:6: (lv_parameters_7_0= ruleParameter )
                    // InternalScadeEquations.g:10616:7: lv_parameters_7_0= ruleParameter
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getReferenceCallAccess().getParametersParameterParserRuleCall_3_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_6);
                    lv_parameters_7_0=ruleParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getReferenceCallRule());
                      							}
                      							add(
                      								current,
                      								"parameters",
                      								lv_parameters_7_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:10633:5: (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )*
                    loop263:
                    do {
                        int alt263=2;
                        int LA263_0 = input.LA(1);

                        if ( (LA263_0==18) ) {
                            alt263=1;
                        }


                        switch (alt263) {
                    	case 1 :
                    	    // InternalScadeEquations.g:10634:6: otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) )
                    	    {
                    	    otherlv_8=(Token)match(input,18,FollowSets000.FOLLOW_114); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_8, grammarAccess.getReferenceCallAccess().getCommaKeyword_3_0_2_0());
                    	      					
                    	    }
                    	    // InternalScadeEquations.g:10638:6: ( (lv_parameters_9_0= ruleParameter ) )
                    	    // InternalScadeEquations.g:10639:7: (lv_parameters_9_0= ruleParameter )
                    	    {
                    	    // InternalScadeEquations.g:10639:7: (lv_parameters_9_0= ruleParameter )
                    	    // InternalScadeEquations.g:10640:8: lv_parameters_9_0= ruleParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getReferenceCallAccess().getParametersParameterParserRuleCall_3_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_6);
                    	    lv_parameters_9_0=ruleParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getReferenceCallRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"parameters",
                    	      									lv_parameters_9_0,
                    	      									"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop263;
                        }
                    } while (true);

                    otherlv_10=(Token)match(input,19,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_10, grammarAccess.getReferenceCallAccess().getRightParenthesisKeyword_3_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:10664:4: otherlv_11= '()'
                    {
                    otherlv_11=(Token)match(input,28,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getReferenceCallAccess().getLeftParenthesisRightParenthesisKeyword_3_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReferenceCall"


    // $ANTLR start "entryRuleParameter"
    // InternalScadeEquations.g:10673:1: entryRuleParameter returns [EObject current=null] : iv_ruleParameter= ruleParameter EOF ;
    public final EObject entryRuleParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameter = null;


        try {
            // InternalScadeEquations.g:10673:50: (iv_ruleParameter= ruleParameter EOF )
            // InternalScadeEquations.g:10674:2: iv_ruleParameter= ruleParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleParameter=ruleParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameter; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParameter"


    // $ANTLR start "ruleParameter"
    // InternalScadeEquations.g:10680:1: ruleParameter returns [EObject current=null] : ( ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) ) ;
    public final EObject ruleParameter() throws RecognitionException {
        EObject current = null;

        Token lv_pureOutput_0_0=null;
        Token lv_callByReference_1_0=null;
        EObject lv_expression_2_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:10686:2: ( ( ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) ) )
            // InternalScadeEquations.g:10687:2: ( ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) )
            {
            // InternalScadeEquations.g:10687:2: ( ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) )
            // InternalScadeEquations.g:10688:3: ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) )
            {
            // InternalScadeEquations.g:10688:3: ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )?
            int alt266=2;
            int LA266_0 = input.LA(1);

            if ( (LA266_0==79||LA266_0==85) ) {
                alt266=1;
            }
            switch (alt266) {
                case 1 :
                    // InternalScadeEquations.g:10689:4: ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) )
                    {
                    // InternalScadeEquations.g:10689:4: ( (lv_pureOutput_0_0= '!' ) )?
                    int alt265=2;
                    int LA265_0 = input.LA(1);

                    if ( (LA265_0==85) ) {
                        alt265=1;
                    }
                    switch (alt265) {
                        case 1 :
                            // InternalScadeEquations.g:10690:5: (lv_pureOutput_0_0= '!' )
                            {
                            // InternalScadeEquations.g:10690:5: (lv_pureOutput_0_0= '!' )
                            // InternalScadeEquations.g:10691:6: lv_pureOutput_0_0= '!'
                            {
                            lv_pureOutput_0_0=(Token)match(input,85,FollowSets000.FOLLOW_127); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_pureOutput_0_0, grammarAccess.getParameterAccess().getPureOutputExclamationMarkKeyword_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getParameterRule());
                              						}
                              						setWithLastConsumed(current, "pureOutput", true, "!");
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalScadeEquations.g:10703:4: ( (lv_callByReference_1_0= '&' ) )
                    // InternalScadeEquations.g:10704:5: (lv_callByReference_1_0= '&' )
                    {
                    // InternalScadeEquations.g:10704:5: (lv_callByReference_1_0= '&' )
                    // InternalScadeEquations.g:10705:6: lv_callByReference_1_0= '&'
                    {
                    lv_callByReference_1_0=(Token)match(input,79,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_callByReference_1_0, grammarAccess.getParameterAccess().getCallByReferenceAmpersandKeyword_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getParameterRule());
                      						}
                      						setWithLastConsumed(current, "callByReference", true, "&");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:10718:3: ( (lv_expression_2_0= ruleExpression ) )
            // InternalScadeEquations.g:10719:4: (lv_expression_2_0= ruleExpression )
            {
            // InternalScadeEquations.g:10719:4: (lv_expression_2_0= ruleExpression )
            // InternalScadeEquations.g:10720:5: lv_expression_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getParameterAccess().getExpressionExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_expression_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getParameterRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameter"


    // $ANTLR start "entryRuleIntValue"
    // InternalScadeEquations.g:10741:1: entryRuleIntValue returns [EObject current=null] : iv_ruleIntValue= ruleIntValue EOF ;
    public final EObject entryRuleIntValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIntValue = null;


        try {
            // InternalScadeEquations.g:10741:49: (iv_ruleIntValue= ruleIntValue EOF )
            // InternalScadeEquations.g:10742:2: iv_ruleIntValue= ruleIntValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIntValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleIntValue=ruleIntValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIntValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIntValue"


    // $ANTLR start "ruleIntValue"
    // InternalScadeEquations.g:10748:1: ruleIntValue returns [EObject current=null] : ( (lv_value_0_0= RULE_INT ) ) ;
    public final EObject ruleIntValue() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:10754:2: ( ( (lv_value_0_0= RULE_INT ) ) )
            // InternalScadeEquations.g:10755:2: ( (lv_value_0_0= RULE_INT ) )
            {
            // InternalScadeEquations.g:10755:2: ( (lv_value_0_0= RULE_INT ) )
            // InternalScadeEquations.g:10756:3: (lv_value_0_0= RULE_INT )
            {
            // InternalScadeEquations.g:10756:3: (lv_value_0_0= RULE_INT )
            // InternalScadeEquations.g:10757:4: lv_value_0_0= RULE_INT
            {
            lv_value_0_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_value_0_0, grammarAccess.getIntValueAccess().getValueINTTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getIntValueRule());
              				}
              				setWithLastConsumed(
              					current,
              					"value",
              					lv_value_0_0,
              					"de.cau.cs.kieler.annotations.Annotations.INT");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIntValue"


    // $ANTLR start "entryRuleFloatValue"
    // InternalScadeEquations.g:10776:1: entryRuleFloatValue returns [EObject current=null] : iv_ruleFloatValue= ruleFloatValue EOF ;
    public final EObject entryRuleFloatValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFloatValue = null;


        try {
            // InternalScadeEquations.g:10776:51: (iv_ruleFloatValue= ruleFloatValue EOF )
            // InternalScadeEquations.g:10777:2: iv_ruleFloatValue= ruleFloatValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFloatValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFloatValue=ruleFloatValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFloatValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFloatValue"


    // $ANTLR start "ruleFloatValue"
    // InternalScadeEquations.g:10783:1: ruleFloatValue returns [EObject current=null] : ( (lv_value_0_0= RULE_FLOAT ) ) ;
    public final EObject ruleFloatValue() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:10789:2: ( ( (lv_value_0_0= RULE_FLOAT ) ) )
            // InternalScadeEquations.g:10790:2: ( (lv_value_0_0= RULE_FLOAT ) )
            {
            // InternalScadeEquations.g:10790:2: ( (lv_value_0_0= RULE_FLOAT ) )
            // InternalScadeEquations.g:10791:3: (lv_value_0_0= RULE_FLOAT )
            {
            // InternalScadeEquations.g:10791:3: (lv_value_0_0= RULE_FLOAT )
            // InternalScadeEquations.g:10792:4: lv_value_0_0= RULE_FLOAT
            {
            lv_value_0_0=(Token)match(input,RULE_FLOAT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_value_0_0, grammarAccess.getFloatValueAccess().getValueFLOATTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getFloatValueRule());
              				}
              				setWithLastConsumed(
              					current,
              					"value",
              					lv_value_0_0,
              					"de.cau.cs.kieler.annotations.Annotations.FLOAT");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFloatValue"


    // $ANTLR start "entryRuleBoolValue"
    // InternalScadeEquations.g:10811:1: entryRuleBoolValue returns [EObject current=null] : iv_ruleBoolValue= ruleBoolValue EOF ;
    public final EObject entryRuleBoolValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBoolValue = null;


        try {
            // InternalScadeEquations.g:10811:50: (iv_ruleBoolValue= ruleBoolValue EOF )
            // InternalScadeEquations.g:10812:2: iv_ruleBoolValue= ruleBoolValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBoolValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBoolValue=ruleBoolValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBoolValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBoolValue"


    // $ANTLR start "ruleBoolValue"
    // InternalScadeEquations.g:10818:1: ruleBoolValue returns [EObject current=null] : ( (lv_value_0_0= RULE_BOOLEAN ) ) ;
    public final EObject ruleBoolValue() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:10824:2: ( ( (lv_value_0_0= RULE_BOOLEAN ) ) )
            // InternalScadeEquations.g:10825:2: ( (lv_value_0_0= RULE_BOOLEAN ) )
            {
            // InternalScadeEquations.g:10825:2: ( (lv_value_0_0= RULE_BOOLEAN ) )
            // InternalScadeEquations.g:10826:3: (lv_value_0_0= RULE_BOOLEAN )
            {
            // InternalScadeEquations.g:10826:3: (lv_value_0_0= RULE_BOOLEAN )
            // InternalScadeEquations.g:10827:4: lv_value_0_0= RULE_BOOLEAN
            {
            lv_value_0_0=(Token)match(input,RULE_BOOLEAN,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_value_0_0, grammarAccess.getBoolValueAccess().getValueBOOLEANTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getBoolValueRule());
              				}
              				setWithLastConsumed(
              					current,
              					"value",
              					lv_value_0_0,
              					"de.cau.cs.kieler.annotations.Annotations.BOOLEAN");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBoolValue"


    // $ANTLR start "entryRuleStringValue"
    // InternalScadeEquations.g:10846:1: entryRuleStringValue returns [EObject current=null] : iv_ruleStringValue= ruleStringValue EOF ;
    public final EObject entryRuleStringValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStringValue = null;


        try {
            // InternalScadeEquations.g:10846:52: (iv_ruleStringValue= ruleStringValue EOF )
            // InternalScadeEquations.g:10847:2: iv_ruleStringValue= ruleStringValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStringValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStringValue=ruleStringValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStringValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStringValue"


    // $ANTLR start "ruleStringValue"
    // InternalScadeEquations.g:10853:1: ruleStringValue returns [EObject current=null] : ( (lv_value_0_0= RULE_STRING ) ) ;
    public final EObject ruleStringValue() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:10859:2: ( ( (lv_value_0_0= RULE_STRING ) ) )
            // InternalScadeEquations.g:10860:2: ( (lv_value_0_0= RULE_STRING ) )
            {
            // InternalScadeEquations.g:10860:2: ( (lv_value_0_0= RULE_STRING ) )
            // InternalScadeEquations.g:10861:3: (lv_value_0_0= RULE_STRING )
            {
            // InternalScadeEquations.g:10861:3: (lv_value_0_0= RULE_STRING )
            // InternalScadeEquations.g:10862:4: lv_value_0_0= RULE_STRING
            {
            lv_value_0_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_value_0_0, grammarAccess.getStringValueAccess().getValueSTRINGTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getStringValueRule());
              				}
              				setWithLastConsumed(
              					current,
              					"value",
              					lv_value_0_0,
              					"de.cau.cs.kieler.annotations.Annotations.STRING");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStringValue"


    // $ANTLR start "entryRuleVectorValue"
    // InternalScadeEquations.g:10881:1: entryRuleVectorValue returns [EObject current=null] : iv_ruleVectorValue= ruleVectorValue EOF ;
    public final EObject entryRuleVectorValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVectorValue = null;


        try {
            // InternalScadeEquations.g:10881:52: (iv_ruleVectorValue= ruleVectorValue EOF )
            // InternalScadeEquations.g:10882:2: iv_ruleVectorValue= ruleVectorValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVectorValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleVectorValue=ruleVectorValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVectorValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVectorValue"


    // $ANTLR start "ruleVectorValue"
    // InternalScadeEquations.g:10888:1: ruleVectorValue returns [EObject current=null] : (otherlv_0= '{' ( (lv_values_1_0= ruleVectorValueMember ) ) (otherlv_2= ',' ( (lv_values_3_0= ruleVectorValueMember ) ) )* otherlv_4= '}' ) ;
    public final EObject ruleVectorValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_values_1_0 = null;

        EObject lv_values_3_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:10894:2: ( (otherlv_0= '{' ( (lv_values_1_0= ruleVectorValueMember ) ) (otherlv_2= ',' ( (lv_values_3_0= ruleVectorValueMember ) ) )* otherlv_4= '}' ) )
            // InternalScadeEquations.g:10895:2: (otherlv_0= '{' ( (lv_values_1_0= ruleVectorValueMember ) ) (otherlv_2= ',' ( (lv_values_3_0= ruleVectorValueMember ) ) )* otherlv_4= '}' )
            {
            // InternalScadeEquations.g:10895:2: (otherlv_0= '{' ( (lv_values_1_0= ruleVectorValueMember ) ) (otherlv_2= ',' ( (lv_values_3_0= ruleVectorValueMember ) ) )* otherlv_4= '}' )
            // InternalScadeEquations.g:10896:3: otherlv_0= '{' ( (lv_values_1_0= ruleVectorValueMember ) ) (otherlv_2= ',' ( (lv_values_3_0= ruleVectorValueMember ) ) )* otherlv_4= '}'
            {
            otherlv_0=(Token)match(input,22,FollowSets000.FOLLOW_128); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getVectorValueAccess().getLeftCurlyBracketKeyword_0());
              		
            }
            // InternalScadeEquations.g:10900:3: ( (lv_values_1_0= ruleVectorValueMember ) )
            // InternalScadeEquations.g:10901:4: (lv_values_1_0= ruleVectorValueMember )
            {
            // InternalScadeEquations.g:10901:4: (lv_values_1_0= ruleVectorValueMember )
            // InternalScadeEquations.g:10902:5: lv_values_1_0= ruleVectorValueMember
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getVectorValueAccess().getValuesVectorValueMemberParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_17);
            lv_values_1_0=ruleVectorValueMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getVectorValueRule());
              					}
              					add(
              						current,
              						"values",
              						lv_values_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.VectorValueMember");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:10919:3: (otherlv_2= ',' ( (lv_values_3_0= ruleVectorValueMember ) ) )*
            loop267:
            do {
                int alt267=2;
                int LA267_0 = input.LA(1);

                if ( (LA267_0==18) ) {
                    alt267=1;
                }


                switch (alt267) {
            	case 1 :
            	    // InternalScadeEquations.g:10920:4: otherlv_2= ',' ( (lv_values_3_0= ruleVectorValueMember ) )
            	    {
            	    otherlv_2=(Token)match(input,18,FollowSets000.FOLLOW_128); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getVectorValueAccess().getCommaKeyword_2_0());
            	      			
            	    }
            	    // InternalScadeEquations.g:10924:4: ( (lv_values_3_0= ruleVectorValueMember ) )
            	    // InternalScadeEquations.g:10925:5: (lv_values_3_0= ruleVectorValueMember )
            	    {
            	    // InternalScadeEquations.g:10925:5: (lv_values_3_0= ruleVectorValueMember )
            	    // InternalScadeEquations.g:10926:6: lv_values_3_0= ruleVectorValueMember
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getVectorValueAccess().getValuesVectorValueMemberParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_17);
            	    lv_values_3_0=ruleVectorValueMember();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getVectorValueRule());
            	      						}
            	      						add(
            	      							current,
            	      							"values",
            	      							lv_values_3_0,
            	      							"de.cau.cs.kieler.kexpressions.KExpressions.VectorValueMember");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop267;
                }
            } while (true);

            otherlv_4=(Token)match(input,23,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getVectorValueAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVectorValue"


    // $ANTLR start "entryRuleVectorValueMember"
    // InternalScadeEquations.g:10952:1: entryRuleVectorValueMember returns [EObject current=null] : iv_ruleVectorValueMember= ruleVectorValueMember EOF ;
    public final EObject entryRuleVectorValueMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVectorValueMember = null;


        try {
            // InternalScadeEquations.g:10952:58: (iv_ruleVectorValueMember= ruleVectorValueMember EOF )
            // InternalScadeEquations.g:10953:2: iv_ruleVectorValueMember= ruleVectorValueMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVectorValueMemberRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleVectorValueMember=ruleVectorValueMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVectorValueMember; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVectorValueMember"


    // $ANTLR start "ruleVectorValueMember"
    // InternalScadeEquations.g:10959:1: ruleVectorValueMember returns [EObject current=null] : (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression | this_IgnoreValue_2= ruleIgnoreValue ) ;
    public final EObject ruleVectorValueMember() throws RecognitionException {
        EObject current = null;

        EObject this_BoolExpression_0 = null;

        EObject this_ValuedExpression_1 = null;

        EObject this_IgnoreValue_2 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:10965:2: ( (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression | this_IgnoreValue_2= ruleIgnoreValue ) )
            // InternalScadeEquations.g:10966:2: (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression | this_IgnoreValue_2= ruleIgnoreValue )
            {
            // InternalScadeEquations.g:10966:2: (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression | this_IgnoreValue_2= ruleIgnoreValue )
            int alt268=3;
            alt268 = dfa268.predict(input);
            switch (alt268) {
                case 1 :
                    // InternalScadeEquations.g:10967:3: this_BoolExpression_0= ruleBoolExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getVectorValueMemberAccess().getBoolExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_BoolExpression_0=ruleBoolExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BoolExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:10979:3: this_ValuedExpression_1= ruleValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getVectorValueMemberAccess().getValuedExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedExpression_1=ruleValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ValuedExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalScadeEquations.g:10991:3: this_IgnoreValue_2= ruleIgnoreValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getVectorValueMemberAccess().getIgnoreValueParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_IgnoreValue_2=ruleIgnoreValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_IgnoreValue_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVectorValueMember"


    // $ANTLR start "entryRuleIgnoreValue"
    // InternalScadeEquations.g:11006:1: entryRuleIgnoreValue returns [EObject current=null] : iv_ruleIgnoreValue= ruleIgnoreValue EOF ;
    public final EObject entryRuleIgnoreValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIgnoreValue = null;


        try {
            // InternalScadeEquations.g:11006:52: (iv_ruleIgnoreValue= ruleIgnoreValue EOF )
            // InternalScadeEquations.g:11007:2: iv_ruleIgnoreValue= ruleIgnoreValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIgnoreValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleIgnoreValue=ruleIgnoreValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIgnoreValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIgnoreValue"


    // $ANTLR start "ruleIgnoreValue"
    // InternalScadeEquations.g:11013:1: ruleIgnoreValue returns [EObject current=null] : ( () otherlv_1= '_' ) ;
    public final EObject ruleIgnoreValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:11019:2: ( ( () otherlv_1= '_' ) )
            // InternalScadeEquations.g:11020:2: ( () otherlv_1= '_' )
            {
            // InternalScadeEquations.g:11020:2: ( () otherlv_1= '_' )
            // InternalScadeEquations.g:11021:3: () otherlv_1= '_'
            {
            // InternalScadeEquations.g:11021:3: ()
            // InternalScadeEquations.g:11022:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getIgnoreValueAccess().getIgnoreValueAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,86,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getIgnoreValueAccess().get_Keyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIgnoreValue"


    // $ANTLR start "entryRuleAnyValue"
    // InternalScadeEquations.g:11039:1: entryRuleAnyValue returns [EObject current=null] : iv_ruleAnyValue= ruleAnyValue EOF ;
    public final EObject entryRuleAnyValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnyValue = null;


        try {
            // InternalScadeEquations.g:11039:49: (iv_ruleAnyValue= ruleAnyValue EOF )
            // InternalScadeEquations.g:11040:2: iv_ruleAnyValue= ruleAnyValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnyValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAnyValue=ruleAnyValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnyValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnyValue"


    // $ANTLR start "ruleAnyValue"
    // InternalScadeEquations.g:11046:1: ruleAnyValue returns [EObject current=null] : (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_BoolValue_2= ruleBoolValue | this_StringValue_3= ruleStringValue ) ;
    public final EObject ruleAnyValue() throws RecognitionException {
        EObject current = null;

        EObject this_IntValue_0 = null;

        EObject this_FloatValue_1 = null;

        EObject this_BoolValue_2 = null;

        EObject this_StringValue_3 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:11052:2: ( (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_BoolValue_2= ruleBoolValue | this_StringValue_3= ruleStringValue ) )
            // InternalScadeEquations.g:11053:2: (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_BoolValue_2= ruleBoolValue | this_StringValue_3= ruleStringValue )
            {
            // InternalScadeEquations.g:11053:2: (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_BoolValue_2= ruleBoolValue | this_StringValue_3= ruleStringValue )
            int alt269=4;
            switch ( input.LA(1) ) {
            case RULE_INT:
                {
                alt269=1;
                }
                break;
            case RULE_FLOAT:
                {
                alt269=2;
                }
                break;
            case RULE_BOOLEAN:
                {
                alt269=3;
                }
                break;
            case RULE_STRING:
                {
                alt269=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 269, 0, input);

                throw nvae;
            }

            switch (alt269) {
                case 1 :
                    // InternalScadeEquations.g:11054:3: this_IntValue_0= ruleIntValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnyValueAccess().getIntValueParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_IntValue_0=ruleIntValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_IntValue_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:11066:3: this_FloatValue_1= ruleFloatValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnyValueAccess().getFloatValueParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_FloatValue_1=ruleFloatValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FloatValue_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalScadeEquations.g:11078:3: this_BoolValue_2= ruleBoolValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnyValueAccess().getBoolValueParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_BoolValue_2=ruleBoolValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BoolValue_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalScadeEquations.g:11090:3: this_StringValue_3= ruleStringValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnyValueAccess().getStringValueParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_StringValue_3=ruleStringValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_StringValue_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnyValue"


    // $ANTLR start "entryRuleJsonObjectValue"
    // InternalScadeEquations.g:11105:1: entryRuleJsonObjectValue returns [EObject current=null] : iv_ruleJsonObjectValue= ruleJsonObjectValue EOF ;
    public final EObject entryRuleJsonObjectValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJsonObjectValue = null;


        try {
            // InternalScadeEquations.g:11105:56: (iv_ruleJsonObjectValue= ruleJsonObjectValue EOF )
            // InternalScadeEquations.g:11106:2: iv_ruleJsonObjectValue= ruleJsonObjectValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJsonObjectValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleJsonObjectValue=ruleJsonObjectValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJsonObjectValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJsonObjectValue"


    // $ANTLR start "ruleJsonObjectValue"
    // InternalScadeEquations.g:11112:1: ruleJsonObjectValue returns [EObject current=null] : ( () otherlv_1= '{' ( ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )* )? otherlv_5= '}' ) ;
    public final EObject ruleJsonObjectValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_members_2_0 = null;

        EObject lv_members_4_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:11118:2: ( ( () otherlv_1= '{' ( ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )* )? otherlv_5= '}' ) )
            // InternalScadeEquations.g:11119:2: ( () otherlv_1= '{' ( ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )* )? otherlv_5= '}' )
            {
            // InternalScadeEquations.g:11119:2: ( () otherlv_1= '{' ( ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )* )? otherlv_5= '}' )
            // InternalScadeEquations.g:11120:3: () otherlv_1= '{' ( ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )* )? otherlv_5= '}'
            {
            // InternalScadeEquations.g:11120:3: ()
            // InternalScadeEquations.g:11121:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getJsonObjectValueAccess().getJsonObjectValueAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,22,FollowSets000.FOLLOW_129); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getJsonObjectValueAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalScadeEquations.g:11134:3: ( ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )* )?
            int alt271=2;
            int LA271_0 = input.LA(1);

            if ( (LA271_0==RULE_STRING) ) {
                alt271=1;
            }
            switch (alt271) {
                case 1 :
                    // InternalScadeEquations.g:11135:4: ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )*
                    {
                    // InternalScadeEquations.g:11135:4: ( (lv_members_2_0= ruleJsonObjectMember ) )
                    // InternalScadeEquations.g:11136:5: (lv_members_2_0= ruleJsonObjectMember )
                    {
                    // InternalScadeEquations.g:11136:5: (lv_members_2_0= ruleJsonObjectMember )
                    // InternalScadeEquations.g:11137:6: lv_members_2_0= ruleJsonObjectMember
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getJsonObjectValueAccess().getMembersJsonObjectMemberParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_17);
                    lv_members_2_0=ruleJsonObjectMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getJsonObjectValueRule());
                      						}
                      						add(
                      							current,
                      							"members",
                      							lv_members_2_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.JsonObjectMember");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalScadeEquations.g:11154:4: (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )*
                    loop270:
                    do {
                        int alt270=2;
                        int LA270_0 = input.LA(1);

                        if ( (LA270_0==18) ) {
                            alt270=1;
                        }


                        switch (alt270) {
                    	case 1 :
                    	    // InternalScadeEquations.g:11155:5: otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) )
                    	    {
                    	    otherlv_3=(Token)match(input,18,FollowSets000.FOLLOW_70); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getJsonObjectValueAccess().getCommaKeyword_2_1_0());
                    	      				
                    	    }
                    	    // InternalScadeEquations.g:11159:5: ( (lv_members_4_0= ruleJsonObjectMember ) )
                    	    // InternalScadeEquations.g:11160:6: (lv_members_4_0= ruleJsonObjectMember )
                    	    {
                    	    // InternalScadeEquations.g:11160:6: (lv_members_4_0= ruleJsonObjectMember )
                    	    // InternalScadeEquations.g:11161:7: lv_members_4_0= ruleJsonObjectMember
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJsonObjectValueAccess().getMembersJsonObjectMemberParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_17);
                    	    lv_members_4_0=ruleJsonObjectMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getJsonObjectValueRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"members",
                    	      								lv_members_4_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.JsonObjectMember");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop270;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,23,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getJsonObjectValueAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJsonObjectValue"


    // $ANTLR start "entryRuleJsonObjectMember"
    // InternalScadeEquations.g:11188:1: entryRuleJsonObjectMember returns [EObject current=null] : iv_ruleJsonObjectMember= ruleJsonObjectMember EOF ;
    public final EObject entryRuleJsonObjectMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJsonObjectMember = null;


        try {
            // InternalScadeEquations.g:11188:57: (iv_ruleJsonObjectMember= ruleJsonObjectMember EOF )
            // InternalScadeEquations.g:11189:2: iv_ruleJsonObjectMember= ruleJsonObjectMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJsonObjectMemberRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleJsonObjectMember=ruleJsonObjectMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJsonObjectMember; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJsonObjectMember"


    // $ANTLR start "ruleJsonObjectMember"
    // InternalScadeEquations.g:11195:1: ruleJsonObjectMember returns [EObject current=null] : ( ( (lv_key_0_0= RULE_STRING ) ) otherlv_1= ':' ( (lv_value_2_0= ruleJsonValue ) ) ) ;
    public final EObject ruleJsonObjectMember() throws RecognitionException {
        EObject current = null;

        Token lv_key_0_0=null;
        Token otherlv_1=null;
        EObject lv_value_2_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:11201:2: ( ( ( (lv_key_0_0= RULE_STRING ) ) otherlv_1= ':' ( (lv_value_2_0= ruleJsonValue ) ) ) )
            // InternalScadeEquations.g:11202:2: ( ( (lv_key_0_0= RULE_STRING ) ) otherlv_1= ':' ( (lv_value_2_0= ruleJsonValue ) ) )
            {
            // InternalScadeEquations.g:11202:2: ( ( (lv_key_0_0= RULE_STRING ) ) otherlv_1= ':' ( (lv_value_2_0= ruleJsonValue ) ) )
            // InternalScadeEquations.g:11203:3: ( (lv_key_0_0= RULE_STRING ) ) otherlv_1= ':' ( (lv_value_2_0= ruleJsonValue ) )
            {
            // InternalScadeEquations.g:11203:3: ( (lv_key_0_0= RULE_STRING ) )
            // InternalScadeEquations.g:11204:4: (lv_key_0_0= RULE_STRING )
            {
            // InternalScadeEquations.g:11204:4: (lv_key_0_0= RULE_STRING )
            // InternalScadeEquations.g:11205:5: lv_key_0_0= RULE_STRING
            {
            lv_key_0_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_130); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_key_0_0, grammarAccess.getJsonObjectMemberAccess().getKeySTRINGTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getJsonObjectMemberRule());
              					}
              					setWithLastConsumed(
              						current,
              						"key",
              						lv_key_0_0,
              						"de.cau.cs.kieler.annotations.Annotations.STRING");
              				
            }

            }


            }

            otherlv_1=(Token)match(input,30,FollowSets000.FOLLOW_131); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getJsonObjectMemberAccess().getColonKeyword_1());
              		
            }
            // InternalScadeEquations.g:11225:3: ( (lv_value_2_0= ruleJsonValue ) )
            // InternalScadeEquations.g:11226:4: (lv_value_2_0= ruleJsonValue )
            {
            // InternalScadeEquations.g:11226:4: (lv_value_2_0= ruleJsonValue )
            // InternalScadeEquations.g:11227:5: lv_value_2_0= ruleJsonValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJsonObjectMemberAccess().getValueJsonValueParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_value_2_0=ruleJsonValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJsonObjectMemberRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_2_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.JsonValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJsonObjectMember"


    // $ANTLR start "entryRuleJsonArrayValue"
    // InternalScadeEquations.g:11248:1: entryRuleJsonArrayValue returns [EObject current=null] : iv_ruleJsonArrayValue= ruleJsonArrayValue EOF ;
    public final EObject entryRuleJsonArrayValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJsonArrayValue = null;


        try {
            // InternalScadeEquations.g:11248:55: (iv_ruleJsonArrayValue= ruleJsonArrayValue EOF )
            // InternalScadeEquations.g:11249:2: iv_ruleJsonArrayValue= ruleJsonArrayValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJsonArrayValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleJsonArrayValue=ruleJsonArrayValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJsonArrayValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJsonArrayValue"


    // $ANTLR start "ruleJsonArrayValue"
    // InternalScadeEquations.g:11255:1: ruleJsonArrayValue returns [EObject current=null] : ( () otherlv_1= '[' ( ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )* )? otherlv_5= ']' ) ;
    public final EObject ruleJsonArrayValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_elements_2_0 = null;

        EObject lv_elements_4_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:11261:2: ( ( () otherlv_1= '[' ( ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )* )? otherlv_5= ']' ) )
            // InternalScadeEquations.g:11262:2: ( () otherlv_1= '[' ( ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )* )? otherlv_5= ']' )
            {
            // InternalScadeEquations.g:11262:2: ( () otherlv_1= '[' ( ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )* )? otherlv_5= ']' )
            // InternalScadeEquations.g:11263:3: () otherlv_1= '[' ( ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )* )? otherlv_5= ']'
            {
            // InternalScadeEquations.g:11263:3: ()
            // InternalScadeEquations.g:11264:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getJsonArrayValueAccess().getJsonArrayValueAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,73,FollowSets000.FOLLOW_132); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getJsonArrayValueAccess().getLeftSquareBracketKeyword_1());
              		
            }
            // InternalScadeEquations.g:11277:3: ( ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )* )?
            int alt273=2;
            int LA273_0 = input.LA(1);

            if ( (LA273_0==RULE_STRING||(LA273_0>=RULE_INT && LA273_0<=RULE_BOOLEAN)||LA273_0==22||LA273_0==73||LA273_0==87) ) {
                alt273=1;
            }
            switch (alt273) {
                case 1 :
                    // InternalScadeEquations.g:11278:4: ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )*
                    {
                    // InternalScadeEquations.g:11278:4: ( (lv_elements_2_0= ruleJsonValue ) )
                    // InternalScadeEquations.g:11279:5: (lv_elements_2_0= ruleJsonValue )
                    {
                    // InternalScadeEquations.g:11279:5: (lv_elements_2_0= ruleJsonValue )
                    // InternalScadeEquations.g:11280:6: lv_elements_2_0= ruleJsonValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getJsonArrayValueAccess().getElementsJsonValueParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_133);
                    lv_elements_2_0=ruleJsonValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getJsonArrayValueRule());
                      						}
                      						add(
                      							current,
                      							"elements",
                      							lv_elements_2_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.JsonValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalScadeEquations.g:11297:4: (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )*
                    loop272:
                    do {
                        int alt272=2;
                        int LA272_0 = input.LA(1);

                        if ( (LA272_0==18) ) {
                            alt272=1;
                        }


                        switch (alt272) {
                    	case 1 :
                    	    // InternalScadeEquations.g:11298:5: otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) )
                    	    {
                    	    otherlv_3=(Token)match(input,18,FollowSets000.FOLLOW_131); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getJsonArrayValueAccess().getCommaKeyword_2_1_0());
                    	      				
                    	    }
                    	    // InternalScadeEquations.g:11302:5: ( (lv_elements_4_0= ruleJsonValue ) )
                    	    // InternalScadeEquations.g:11303:6: (lv_elements_4_0= ruleJsonValue )
                    	    {
                    	    // InternalScadeEquations.g:11303:6: (lv_elements_4_0= ruleJsonValue )
                    	    // InternalScadeEquations.g:11304:7: lv_elements_4_0= ruleJsonValue
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJsonArrayValueAccess().getElementsJsonValueParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_133);
                    	    lv_elements_4_0=ruleJsonValue();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getJsonArrayValueRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"elements",
                    	      								lv_elements_4_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.JsonValue");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop272;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,74,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getJsonArrayValueAccess().getRightSquareBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJsonArrayValue"


    // $ANTLR start "entryRuleJsonValue"
    // InternalScadeEquations.g:11331:1: entryRuleJsonValue returns [EObject current=null] : iv_ruleJsonValue= ruleJsonValue EOF ;
    public final EObject entryRuleJsonValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJsonValue = null;


        try {
            // InternalScadeEquations.g:11331:50: (iv_ruleJsonValue= ruleJsonValue EOF )
            // InternalScadeEquations.g:11332:2: iv_ruleJsonValue= ruleJsonValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJsonValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleJsonValue=ruleJsonValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJsonValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJsonValue"


    // $ANTLR start "ruleJsonValue"
    // InternalScadeEquations.g:11338:1: ruleJsonValue returns [EObject current=null] : (this_JsonObjectValue_0= ruleJsonObjectValue | this_JsonArrayValue_1= ruleJsonArrayValue | this_NullValue_2= ruleNullValue | this_AnyValue_3= ruleAnyValue ) ;
    public final EObject ruleJsonValue() throws RecognitionException {
        EObject current = null;

        EObject this_JsonObjectValue_0 = null;

        EObject this_JsonArrayValue_1 = null;

        EObject this_NullValue_2 = null;

        EObject this_AnyValue_3 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:11344:2: ( (this_JsonObjectValue_0= ruleJsonObjectValue | this_JsonArrayValue_1= ruleJsonArrayValue | this_NullValue_2= ruleNullValue | this_AnyValue_3= ruleAnyValue ) )
            // InternalScadeEquations.g:11345:2: (this_JsonObjectValue_0= ruleJsonObjectValue | this_JsonArrayValue_1= ruleJsonArrayValue | this_NullValue_2= ruleNullValue | this_AnyValue_3= ruleAnyValue )
            {
            // InternalScadeEquations.g:11345:2: (this_JsonObjectValue_0= ruleJsonObjectValue | this_JsonArrayValue_1= ruleJsonArrayValue | this_NullValue_2= ruleNullValue | this_AnyValue_3= ruleAnyValue )
            int alt274=4;
            switch ( input.LA(1) ) {
            case 22:
                {
                alt274=1;
                }
                break;
            case 73:
                {
                alt274=2;
                }
                break;
            case 87:
                {
                alt274=3;
                }
                break;
            case RULE_STRING:
            case RULE_INT:
            case RULE_FLOAT:
            case RULE_BOOLEAN:
                {
                alt274=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 274, 0, input);

                throw nvae;
            }

            switch (alt274) {
                case 1 :
                    // InternalScadeEquations.g:11346:3: this_JsonObjectValue_0= ruleJsonObjectValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJsonValueAccess().getJsonObjectValueParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_JsonObjectValue_0=ruleJsonObjectValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JsonObjectValue_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:11358:3: this_JsonArrayValue_1= ruleJsonArrayValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJsonValueAccess().getJsonArrayValueParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_JsonArrayValue_1=ruleJsonArrayValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JsonArrayValue_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalScadeEquations.g:11370:3: this_NullValue_2= ruleNullValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJsonValueAccess().getNullValueParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_NullValue_2=ruleNullValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NullValue_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalScadeEquations.g:11382:3: this_AnyValue_3= ruleAnyValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJsonValueAccess().getAnyValueParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AnyValue_3=ruleAnyValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AnyValue_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJsonValue"


    // $ANTLR start "entryRuleNullValue"
    // InternalScadeEquations.g:11397:1: entryRuleNullValue returns [EObject current=null] : iv_ruleNullValue= ruleNullValue EOF ;
    public final EObject entryRuleNullValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNullValue = null;


        try {
            // InternalScadeEquations.g:11397:50: (iv_ruleNullValue= ruleNullValue EOF )
            // InternalScadeEquations.g:11398:2: iv_ruleNullValue= ruleNullValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNullValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNullValue=ruleNullValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNullValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNullValue"


    // $ANTLR start "ruleNullValue"
    // InternalScadeEquations.g:11404:1: ruleNullValue returns [EObject current=null] : ( () otherlv_1= 'null' ) ;
    public final EObject ruleNullValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:11410:2: ( ( () otherlv_1= 'null' ) )
            // InternalScadeEquations.g:11411:2: ( () otherlv_1= 'null' )
            {
            // InternalScadeEquations.g:11411:2: ( () otherlv_1= 'null' )
            // InternalScadeEquations.g:11412:3: () otherlv_1= 'null'
            {
            // InternalScadeEquations.g:11412:3: ()
            // InternalScadeEquations.g:11413:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getNullValueAccess().getNullValueAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,87,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getNullValueAccess().getNullKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNullValue"


    // $ANTLR start "entryRuleJsonPragma"
    // InternalScadeEquations.g:11430:1: entryRuleJsonPragma returns [EObject current=null] : iv_ruleJsonPragma= ruleJsonPragma EOF ;
    public final EObject entryRuleJsonPragma() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJsonPragma = null;


        try {
            // InternalScadeEquations.g:11430:51: (iv_ruleJsonPragma= ruleJsonPragma EOF )
            // InternalScadeEquations.g:11431:2: iv_ruleJsonPragma= ruleJsonPragma EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJsonPragmaRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleJsonPragma=ruleJsonPragma();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJsonPragma; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJsonPragma"


    // $ANTLR start "ruleJsonPragma"
    // InternalScadeEquations.g:11437:1: ruleJsonPragma returns [EObject current=null] : (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) ) ) ;
    public final EObject ruleJsonPragma() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_value_2_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:11443:2: ( (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) ) ) )
            // InternalScadeEquations.g:11444:2: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) ) )
            {
            // InternalScadeEquations.g:11444:2: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) ) )
            // InternalScadeEquations.g:11445:3: otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) )
            {
            otherlv_0=(Token)match(input,88,FollowSets000.FOLLOW_95); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getJsonPragmaAccess().getNumberSignKeyword_0());
              		
            }
            // InternalScadeEquations.g:11449:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalScadeEquations.g:11450:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalScadeEquations.g:11450:4: (lv_name_1_0= ruleExtendedID )
            // InternalScadeEquations.g:11451:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJsonPragmaAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_16);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJsonPragmaRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:11468:3: ( (lv_value_2_0= ruleJsonObjectValue ) )
            // InternalScadeEquations.g:11469:4: (lv_value_2_0= ruleJsonObjectValue )
            {
            // InternalScadeEquations.g:11469:4: (lv_value_2_0= ruleJsonObjectValue )
            // InternalScadeEquations.g:11470:5: lv_value_2_0= ruleJsonObjectValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJsonPragmaAccess().getValueJsonObjectValueParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_value_2_0=ruleJsonObjectValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJsonPragmaRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_2_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.JsonObjectValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJsonPragma"


    // $ANTLR start "entryRuleJsonAnnotation"
    // InternalScadeEquations.g:11491:1: entryRuleJsonAnnotation returns [EObject current=null] : iv_ruleJsonAnnotation= ruleJsonAnnotation EOF ;
    public final EObject entryRuleJsonAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJsonAnnotation = null;


        try {
            // InternalScadeEquations.g:11491:55: (iv_ruleJsonAnnotation= ruleJsonAnnotation EOF )
            // InternalScadeEquations.g:11492:2: iv_ruleJsonAnnotation= ruleJsonAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJsonAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleJsonAnnotation=ruleJsonAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJsonAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJsonAnnotation"


    // $ANTLR start "ruleJsonAnnotation"
    // InternalScadeEquations.g:11498:1: ruleJsonAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) ) ) ;
    public final EObject ruleJsonAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_value_2_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:11504:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) ) ) )
            // InternalScadeEquations.g:11505:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) ) )
            {
            // InternalScadeEquations.g:11505:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) ) )
            // InternalScadeEquations.g:11506:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) )
            {
            otherlv_0=(Token)match(input,89,FollowSets000.FOLLOW_95); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getJsonAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
            // InternalScadeEquations.g:11510:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalScadeEquations.g:11511:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalScadeEquations.g:11511:4: (lv_name_1_0= ruleExtendedID )
            // InternalScadeEquations.g:11512:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJsonAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_16);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJsonAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:11529:3: ( (lv_value_2_0= ruleJsonObjectValue ) )
            // InternalScadeEquations.g:11530:4: (lv_value_2_0= ruleJsonObjectValue )
            {
            // InternalScadeEquations.g:11530:4: (lv_value_2_0= ruleJsonObjectValue )
            // InternalScadeEquations.g:11531:5: lv_value_2_0= ruleJsonObjectValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJsonAnnotationAccess().getValueJsonObjectValueParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_value_2_0=ruleJsonObjectValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJsonAnnotationRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_2_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.JsonObjectValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJsonAnnotation"


    // $ANTLR start "entryRuleAnnotation"
    // InternalScadeEquations.g:11552:1: entryRuleAnnotation returns [EObject current=null] : iv_ruleAnnotation= ruleAnnotation EOF ;
    public final EObject entryRuleAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotation = null;


        try {
            // InternalScadeEquations.g:11552:51: (iv_ruleAnnotation= ruleAnnotation EOF )
            // InternalScadeEquations.g:11553:2: iv_ruleAnnotation= ruleAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAnnotation=ruleAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotation"


    // $ANTLR start "ruleAnnotation"
    // InternalScadeEquations.g:11559:1: ruleAnnotation returns [EObject current=null] : (this_Annotation_0= superAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation ) ;
    public final EObject ruleAnnotation() throws RecognitionException {
        EObject current = null;

        EObject this_Annotation_0 = null;

        EObject this_JsonAnnotation_1 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:11565:2: ( (this_Annotation_0= superAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation ) )
            // InternalScadeEquations.g:11566:2: (this_Annotation_0= superAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation )
            {
            // InternalScadeEquations.g:11566:2: (this_Annotation_0= superAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation )
            int alt275=2;
            alt275 = dfa275.predict(input);
            switch (alt275) {
                case 1 :
                    // InternalScadeEquations.g:11567:3: this_Annotation_0= superAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationAccess().getAnnotationParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Annotation_0=superAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Annotation_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:11579:3: this_JsonAnnotation_1= ruleJsonAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationAccess().getJsonAnnotationParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_JsonAnnotation_1=ruleJsonAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JsonAnnotation_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnnotation"


    // $ANTLR start "entryRuleQuotedStringAnnotation"
    // InternalScadeEquations.g:11594:1: entryRuleQuotedStringAnnotation returns [EObject current=null] : iv_ruleQuotedStringAnnotation= ruleQuotedStringAnnotation EOF ;
    public final EObject entryRuleQuotedStringAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQuotedStringAnnotation = null;


        try {
            // InternalScadeEquations.g:11594:63: (iv_ruleQuotedStringAnnotation= ruleQuotedStringAnnotation EOF )
            // InternalScadeEquations.g:11595:2: iv_ruleQuotedStringAnnotation= ruleQuotedStringAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQuotedStringAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleQuotedStringAnnotation=ruleQuotedStringAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQuotedStringAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQuotedStringAnnotation"


    // $ANTLR start "ruleQuotedStringAnnotation"
    // InternalScadeEquations.g:11601:1: ruleQuotedStringAnnotation returns [EObject current=null] : (this_QuotedStringAnnotation_0= superQuotedStringAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation ) ;
    public final EObject ruleQuotedStringAnnotation() throws RecognitionException {
        EObject current = null;

        EObject this_QuotedStringAnnotation_0 = null;

        EObject this_JsonAnnotation_1 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:11607:2: ( (this_QuotedStringAnnotation_0= superQuotedStringAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation ) )
            // InternalScadeEquations.g:11608:2: (this_QuotedStringAnnotation_0= superQuotedStringAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation )
            {
            // InternalScadeEquations.g:11608:2: (this_QuotedStringAnnotation_0= superQuotedStringAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation )
            int alt276=2;
            alt276 = dfa276.predict(input);
            switch (alt276) {
                case 1 :
                    // InternalScadeEquations.g:11609:3: this_QuotedStringAnnotation_0= superQuotedStringAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getQuotedStringAnnotationAccess().getQuotedStringAnnotationParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_QuotedStringAnnotation_0=superQuotedStringAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_QuotedStringAnnotation_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:11621:3: this_JsonAnnotation_1= ruleJsonAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getQuotedStringAnnotationAccess().getJsonAnnotationParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_JsonAnnotation_1=ruleJsonAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JsonAnnotation_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQuotedStringAnnotation"


    // $ANTLR start "entrySuperAnnotation"
    // InternalScadeEquations.g:11636:1: entrySuperAnnotation returns [EObject current=null] : iv_superAnnotation= superAnnotation EOF ;
    public final EObject entrySuperAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_superAnnotation = null;


        try {
            // InternalScadeEquations.g:11636:52: (iv_superAnnotation= superAnnotation EOF )
            // InternalScadeEquations.g:11637:2: iv_superAnnotation= superAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationsAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_superAnnotation=superAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_superAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entrySuperAnnotation"


    // $ANTLR start "superAnnotation"
    // InternalScadeEquations.g:11643:1: superAnnotation returns [EObject current=null] : (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) ;
    public final EObject superAnnotation() throws RecognitionException {
        EObject current = null;

        EObject this_CommentAnnotation_0 = null;

        EObject this_KeyStringValueAnnotation_1 = null;

        EObject this_TypedKeyStringValueAnnotation_2 = null;

        EObject this_TagAnnotation_3 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:11649:2: ( (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) )
            // InternalScadeEquations.g:11650:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            {
            // InternalScadeEquations.g:11650:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            int alt277=4;
            alt277 = dfa277.predict(input);
            switch (alt277) {
                case 1 :
                    // InternalScadeEquations.g:11651:3: this_CommentAnnotation_0= ruleCommentAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsAnnotationAccess().getCommentAnnotationParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CommentAnnotation_0=ruleCommentAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_CommentAnnotation_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:11663:3: this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsAnnotationAccess().getKeyStringValueAnnotationParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_KeyStringValueAnnotation_1=ruleKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_KeyStringValueAnnotation_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalScadeEquations.g:11675:3: this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsAnnotationAccess().getTypedKeyStringValueAnnotationParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TypedKeyStringValueAnnotation_2=ruleTypedKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TypedKeyStringValueAnnotation_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalScadeEquations.g:11687:3: this_TagAnnotation_3= ruleTagAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsAnnotationAccess().getTagAnnotationParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TagAnnotation_3=ruleTagAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TagAnnotation_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "superAnnotation"


    // $ANTLR start "entrySuperPragma"
    // InternalScadeEquations.g:11702:1: entrySuperPragma returns [EObject current=null] : iv_superPragma= superPragma EOF ;
    public final EObject entrySuperPragma() throws RecognitionException {
        EObject current = null;

        EObject iv_superPragma = null;


        try {
            // InternalScadeEquations.g:11702:48: (iv_superPragma= superPragma EOF )
            // InternalScadeEquations.g:11703:2: iv_superPragma= superPragma EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationsPragmaRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_superPragma=superPragma();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_superPragma; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entrySuperPragma"


    // $ANTLR start "superPragma"
    // InternalScadeEquations.g:11709:1: superPragma returns [EObject current=null] : (this_StringPragma_0= ruleStringPragma | this_PragmaTag_1= rulePragmaTag ) ;
    public final EObject superPragma() throws RecognitionException {
        EObject current = null;

        EObject this_StringPragma_0 = null;

        EObject this_PragmaTag_1 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:11715:2: ( (this_StringPragma_0= ruleStringPragma | this_PragmaTag_1= rulePragmaTag ) )
            // InternalScadeEquations.g:11716:2: (this_StringPragma_0= ruleStringPragma | this_PragmaTag_1= rulePragmaTag )
            {
            // InternalScadeEquations.g:11716:2: (this_StringPragma_0= ruleStringPragma | this_PragmaTag_1= rulePragmaTag )
            int alt278=2;
            alt278 = dfa278.predict(input);
            switch (alt278) {
                case 1 :
                    // InternalScadeEquations.g:11717:3: this_StringPragma_0= ruleStringPragma
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsPragmaAccess().getStringPragmaParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_StringPragma_0=ruleStringPragma();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_StringPragma_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:11729:3: this_PragmaTag_1= rulePragmaTag
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsPragmaAccess().getPragmaTagParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PragmaTag_1=rulePragmaTag();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PragmaTag_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "superPragma"


    // $ANTLR start "entrySuperValuedAnnotation"
    // InternalScadeEquations.g:11744:1: entrySuperValuedAnnotation returns [EObject current=null] : iv_superValuedAnnotation= superValuedAnnotation EOF ;
    public final EObject entrySuperValuedAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_superValuedAnnotation = null;


        try {
            // InternalScadeEquations.g:11744:58: (iv_superValuedAnnotation= superValuedAnnotation EOF )
            // InternalScadeEquations.g:11745:2: iv_superValuedAnnotation= superValuedAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationsValuedAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_superValuedAnnotation=superValuedAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_superValuedAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entrySuperValuedAnnotation"


    // $ANTLR start "superValuedAnnotation"
    // InternalScadeEquations.g:11751:1: superValuedAnnotation returns [EObject current=null] : (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation ) ;
    public final EObject superValuedAnnotation() throws RecognitionException {
        EObject current = null;

        EObject this_CommentAnnotation_0 = null;

        EObject this_KeyStringValueAnnotation_1 = null;

        EObject this_TypedKeyStringValueAnnotation_2 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:11757:2: ( (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation ) )
            // InternalScadeEquations.g:11758:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation )
            {
            // InternalScadeEquations.g:11758:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation )
            int alt279=3;
            alt279 = dfa279.predict(input);
            switch (alt279) {
                case 1 :
                    // InternalScadeEquations.g:11759:3: this_CommentAnnotation_0= ruleCommentAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsValuedAnnotationAccess().getCommentAnnotationParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CommentAnnotation_0=ruleCommentAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_CommentAnnotation_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:11771:3: this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsValuedAnnotationAccess().getKeyStringValueAnnotationParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_KeyStringValueAnnotation_1=ruleKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_KeyStringValueAnnotation_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalScadeEquations.g:11783:3: this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsValuedAnnotationAccess().getTypedKeyStringValueAnnotationParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TypedKeyStringValueAnnotation_2=ruleTypedKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TypedKeyStringValueAnnotation_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "superValuedAnnotation"


    // $ANTLR start "entrySuperQuotedStringAnnotation"
    // InternalScadeEquations.g:11798:1: entrySuperQuotedStringAnnotation returns [EObject current=null] : iv_superQuotedStringAnnotation= superQuotedStringAnnotation EOF ;
    public final EObject entrySuperQuotedStringAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_superQuotedStringAnnotation = null;


        try {
            // InternalScadeEquations.g:11798:64: (iv_superQuotedStringAnnotation= superQuotedStringAnnotation EOF )
            // InternalScadeEquations.g:11799:2: iv_superQuotedStringAnnotation= superQuotedStringAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationsQuotedStringAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_superQuotedStringAnnotation=superQuotedStringAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_superQuotedStringAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entrySuperQuotedStringAnnotation"


    // $ANTLR start "superQuotedStringAnnotation"
    // InternalScadeEquations.g:11805:1: superQuotedStringAnnotation returns [EObject current=null] : (this_CommentAnnotation_0= ruleCommentAnnotation | this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation | this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) ;
    public final EObject superQuotedStringAnnotation() throws RecognitionException {
        EObject current = null;

        EObject this_CommentAnnotation_0 = null;

        EObject this_QuotedKeyStringValueAnnotation_1 = null;

        EObject this_QuotedTypedKeyStringValueAnnotation_2 = null;

        EObject this_TagAnnotation_3 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:11811:2: ( (this_CommentAnnotation_0= ruleCommentAnnotation | this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation | this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) )
            // InternalScadeEquations.g:11812:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation | this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            {
            // InternalScadeEquations.g:11812:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation | this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            int alt280=4;
            alt280 = dfa280.predict(input);
            switch (alt280) {
                case 1 :
                    // InternalScadeEquations.g:11813:3: this_CommentAnnotation_0= ruleCommentAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsQuotedStringAnnotationAccess().getCommentAnnotationParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CommentAnnotation_0=ruleCommentAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_CommentAnnotation_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:11825:3: this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsQuotedStringAnnotationAccess().getQuotedKeyStringValueAnnotationParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_QuotedKeyStringValueAnnotation_1=ruleQuotedKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_QuotedKeyStringValueAnnotation_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalScadeEquations.g:11837:3: this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsQuotedStringAnnotationAccess().getQuotedTypedKeyStringValueAnnotationParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_QuotedTypedKeyStringValueAnnotation_2=ruleQuotedTypedKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_QuotedTypedKeyStringValueAnnotation_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalScadeEquations.g:11849:3: this_TagAnnotation_3= ruleTagAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsQuotedStringAnnotationAccess().getTagAnnotationParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TagAnnotation_3=ruleTagAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TagAnnotation_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "superQuotedStringAnnotation"


    // $ANTLR start "entryRuleCommentAnnotation"
    // InternalScadeEquations.g:11864:1: entryRuleCommentAnnotation returns [EObject current=null] : iv_ruleCommentAnnotation= ruleCommentAnnotation EOF ;
    public final EObject entryRuleCommentAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCommentAnnotation = null;


        try {
            // InternalScadeEquations.g:11864:58: (iv_ruleCommentAnnotation= ruleCommentAnnotation EOF )
            // InternalScadeEquations.g:11865:2: iv_ruleCommentAnnotation= ruleCommentAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCommentAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCommentAnnotation=ruleCommentAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCommentAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCommentAnnotation"


    // $ANTLR start "ruleCommentAnnotation"
    // InternalScadeEquations.g:11871:1: ruleCommentAnnotation returns [EObject current=null] : ( (lv_values_0_0= RULE_COMMENT_ANNOTATION ) ) ;
    public final EObject ruleCommentAnnotation() throws RecognitionException {
        EObject current = null;

        Token lv_values_0_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:11877:2: ( ( (lv_values_0_0= RULE_COMMENT_ANNOTATION ) ) )
            // InternalScadeEquations.g:11878:2: ( (lv_values_0_0= RULE_COMMENT_ANNOTATION ) )
            {
            // InternalScadeEquations.g:11878:2: ( (lv_values_0_0= RULE_COMMENT_ANNOTATION ) )
            // InternalScadeEquations.g:11879:3: (lv_values_0_0= RULE_COMMENT_ANNOTATION )
            {
            // InternalScadeEquations.g:11879:3: (lv_values_0_0= RULE_COMMENT_ANNOTATION )
            // InternalScadeEquations.g:11880:4: lv_values_0_0= RULE_COMMENT_ANNOTATION
            {
            lv_values_0_0=(Token)match(input,RULE_COMMENT_ANNOTATION,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_values_0_0, grammarAccess.getCommentAnnotationAccess().getValuesCOMMENT_ANNOTATIONTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getCommentAnnotationRule());
              				}
              				addWithLastConsumed(
              					current,
              					"values",
              					lv_values_0_0,
              					"de.cau.cs.kieler.annotations.Annotations.COMMENT_ANNOTATION");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCommentAnnotation"


    // $ANTLR start "entryRuleCommentAnnotatonSL"
    // InternalScadeEquations.g:11899:1: entryRuleCommentAnnotatonSL returns [EObject current=null] : iv_ruleCommentAnnotatonSL= ruleCommentAnnotatonSL EOF ;
    public final EObject entryRuleCommentAnnotatonSL() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCommentAnnotatonSL = null;


        try {
            // InternalScadeEquations.g:11899:59: (iv_ruleCommentAnnotatonSL= ruleCommentAnnotatonSL EOF )
            // InternalScadeEquations.g:11900:2: iv_ruleCommentAnnotatonSL= ruleCommentAnnotatonSL EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCommentAnnotatonSLRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCommentAnnotatonSL=ruleCommentAnnotatonSL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCommentAnnotatonSL; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCommentAnnotatonSL"


    // $ANTLR start "ruleCommentAnnotatonSL"
    // InternalScadeEquations.g:11906:1: ruleCommentAnnotatonSL returns [EObject current=null] : ( (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION ) ) ;
    public final EObject ruleCommentAnnotatonSL() throws RecognitionException {
        EObject current = null;

        Token lv_values_0_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:11912:2: ( ( (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION ) ) )
            // InternalScadeEquations.g:11913:2: ( (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION ) )
            {
            // InternalScadeEquations.g:11913:2: ( (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION ) )
            // InternalScadeEquations.g:11914:3: (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION )
            {
            // InternalScadeEquations.g:11914:3: (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION )
            // InternalScadeEquations.g:11915:4: lv_values_0_0= RULE_SL_COMMENT_ANNOTATION
            {
            lv_values_0_0=(Token)match(input,RULE_SL_COMMENT_ANNOTATION,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_values_0_0, grammarAccess.getCommentAnnotatonSLAccess().getValuesSL_COMMENT_ANNOTATIONTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getCommentAnnotatonSLRule());
              				}
              				addWithLastConsumed(
              					current,
              					"values",
              					lv_values_0_0,
              					"de.cau.cs.kieler.annotations.Annotations.SL_COMMENT_ANNOTATION");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCommentAnnotatonSL"


    // $ANTLR start "entryRuleTagAnnotation"
    // InternalScadeEquations.g:11934:1: entryRuleTagAnnotation returns [EObject current=null] : iv_ruleTagAnnotation= ruleTagAnnotation EOF ;
    public final EObject entryRuleTagAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTagAnnotation = null;


        try {
            // InternalScadeEquations.g:11934:54: (iv_ruleTagAnnotation= ruleTagAnnotation EOF )
            // InternalScadeEquations.g:11935:2: iv_ruleTagAnnotation= ruleTagAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTagAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTagAnnotation=ruleTagAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTagAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTagAnnotation"


    // $ANTLR start "ruleTagAnnotation"
    // InternalScadeEquations.g:11941:1: ruleTagAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ) ;
    public final EObject ruleTagAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:11947:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ) )
            // InternalScadeEquations.g:11948:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) )
            {
            // InternalScadeEquations.g:11948:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) )
            // InternalScadeEquations.g:11949:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) )
            {
            otherlv_0=(Token)match(input,89,FollowSets000.FOLLOW_95); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getTagAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
            // InternalScadeEquations.g:11953:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalScadeEquations.g:11954:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalScadeEquations.g:11954:4: (lv_name_1_0= ruleExtendedID )
            // InternalScadeEquations.g:11955:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTagAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTagAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTagAnnotation"


    // $ANTLR start "entryRulePragmaTag"
    // InternalScadeEquations.g:11976:1: entryRulePragmaTag returns [EObject current=null] : iv_rulePragmaTag= rulePragmaTag EOF ;
    public final EObject entryRulePragmaTag() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePragmaTag = null;


        try {
            // InternalScadeEquations.g:11976:50: (iv_rulePragmaTag= rulePragmaTag EOF )
            // InternalScadeEquations.g:11977:2: iv_rulePragmaTag= rulePragmaTag EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPragmaTagRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePragmaTag=rulePragmaTag();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePragmaTag; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePragmaTag"


    // $ANTLR start "rulePragmaTag"
    // InternalScadeEquations.g:11983:1: rulePragmaTag returns [EObject current=null] : (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ) ;
    public final EObject rulePragmaTag() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:11989:2: ( (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ) )
            // InternalScadeEquations.g:11990:2: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) )
            {
            // InternalScadeEquations.g:11990:2: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) )
            // InternalScadeEquations.g:11991:3: otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) )
            {
            otherlv_0=(Token)match(input,88,FollowSets000.FOLLOW_95); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getPragmaTagAccess().getNumberSignKeyword_0());
              		
            }
            // InternalScadeEquations.g:11995:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalScadeEquations.g:11996:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalScadeEquations.g:11996:4: (lv_name_1_0= ruleExtendedID )
            // InternalScadeEquations.g:11997:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPragmaTagAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPragmaTagRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePragmaTag"


    // $ANTLR start "entryRuleKeyStringValueAnnotation"
    // InternalScadeEquations.g:12018:1: entryRuleKeyStringValueAnnotation returns [EObject current=null] : iv_ruleKeyStringValueAnnotation= ruleKeyStringValueAnnotation EOF ;
    public final EObject entryRuleKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleKeyStringValueAnnotation = null;


        try {
            // InternalScadeEquations.g:12018:65: (iv_ruleKeyStringValueAnnotation= ruleKeyStringValueAnnotation EOF )
            // InternalScadeEquations.g:12019:2: iv_ruleKeyStringValueAnnotation= ruleKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleKeyStringValueAnnotation=ruleKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleKeyStringValueAnnotation"


    // $ANTLR start "ruleKeyStringValueAnnotation"
    // InternalScadeEquations.g:12025:1: ruleKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* ) ;
    public final EObject ruleKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_values_2_0 = null;

        AntlrDatatypeRuleToken lv_values_4_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:12031:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* ) )
            // InternalScadeEquations.g:12032:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* )
            {
            // InternalScadeEquations.g:12032:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* )
            // InternalScadeEquations.g:12033:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )*
            {
            otherlv_0=(Token)match(input,89,FollowSets000.FOLLOW_95); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
            // InternalScadeEquations.g:12037:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalScadeEquations.g:12038:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalScadeEquations.g:12038:4: (lv_name_1_0= ruleExtendedID )
            // InternalScadeEquations.g:12039:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_134);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:12056:3: ( (lv_values_2_0= ruleEStringAllTypes ) )
            // InternalScadeEquations.g:12057:4: (lv_values_2_0= ruleEStringAllTypes )
            {
            // InternalScadeEquations.g:12057:4: (lv_values_2_0= ruleEStringAllTypes )
            // InternalScadeEquations.g:12058:5: lv_values_2_0= ruleEStringAllTypes
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_135);
            lv_values_2_0=ruleEStringAllTypes();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getKeyStringValueAnnotationRule());
              					}
              					add(
              						current,
              						"values",
              						lv_values_2_0,
              						"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:12075:3: (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )*
            loop281:
            do {
                int alt281=2;
                int LA281_0 = input.LA(1);

                if ( (LA281_0==18) ) {
                    alt281=1;
                }


                switch (alt281) {
            	case 1 :
            	    // InternalScadeEquations.g:12076:4: otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) )
            	    {
            	    otherlv_3=(Token)match(input,18,FollowSets000.FOLLOW_134); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getKeyStringValueAnnotationAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalScadeEquations.g:12080:4: ( (lv_values_4_0= ruleEStringAllTypes ) )
            	    // InternalScadeEquations.g:12081:5: (lv_values_4_0= ruleEStringAllTypes )
            	    {
            	    // InternalScadeEquations.g:12081:5: (lv_values_4_0= ruleEStringAllTypes )
            	    // InternalScadeEquations.g:12082:6: lv_values_4_0= ruleEStringAllTypes
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_135);
            	    lv_values_4_0=ruleEStringAllTypes();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getKeyStringValueAnnotationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"values",
            	      							lv_values_4_0,
            	      							"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop281;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleKeyStringValueAnnotation"


    // $ANTLR start "entryRuleRestrictedKeyStringValueAnnotation"
    // InternalScadeEquations.g:12104:1: entryRuleRestrictedKeyStringValueAnnotation returns [EObject current=null] : iv_ruleRestrictedKeyStringValueAnnotation= ruleRestrictedKeyStringValueAnnotation EOF ;
    public final EObject entryRuleRestrictedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRestrictedKeyStringValueAnnotation = null;


        try {
            // InternalScadeEquations.g:12104:75: (iv_ruleRestrictedKeyStringValueAnnotation= ruleRestrictedKeyStringValueAnnotation EOF )
            // InternalScadeEquations.g:12105:2: iv_ruleRestrictedKeyStringValueAnnotation= ruleRestrictedKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRestrictedKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRestrictedKeyStringValueAnnotation=ruleRestrictedKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRestrictedKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRestrictedKeyStringValueAnnotation"


    // $ANTLR start "ruleRestrictedKeyStringValueAnnotation"
    // InternalScadeEquations.g:12111:1: ruleRestrictedKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringBoolean ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )* ) ;
    public final EObject ruleRestrictedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_values_2_0 = null;

        AntlrDatatypeRuleToken lv_values_4_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:12117:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringBoolean ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )* ) )
            // InternalScadeEquations.g:12118:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringBoolean ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )* )
            {
            // InternalScadeEquations.g:12118:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringBoolean ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )* )
            // InternalScadeEquations.g:12119:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringBoolean ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )*
            {
            otherlv_0=(Token)match(input,89,FollowSets000.FOLLOW_95); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
            // InternalScadeEquations.g:12123:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalScadeEquations.g:12124:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalScadeEquations.g:12124:4: (lv_name_1_0= ruleExtendedID )
            // InternalScadeEquations.g:12125:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_136);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRestrictedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:12142:3: ( (lv_values_2_0= ruleEStringBoolean ) )
            // InternalScadeEquations.g:12143:4: (lv_values_2_0= ruleEStringBoolean )
            {
            // InternalScadeEquations.g:12143:4: (lv_values_2_0= ruleEStringBoolean )
            // InternalScadeEquations.g:12144:5: lv_values_2_0= ruleEStringBoolean
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_135);
            lv_values_2_0=ruleEStringBoolean();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRestrictedKeyStringValueAnnotationRule());
              					}
              					add(
              						current,
              						"values",
              						lv_values_2_0,
              						"de.cau.cs.kieler.annotations.Annotations.EStringBoolean");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:12161:3: (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )*
            loop282:
            do {
                int alt282=2;
                int LA282_0 = input.LA(1);

                if ( (LA282_0==18) ) {
                    alt282=1;
                }


                switch (alt282) {
            	case 1 :
            	    // InternalScadeEquations.g:12162:4: otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) )
            	    {
            	    otherlv_3=(Token)match(input,18,FollowSets000.FOLLOW_136); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalScadeEquations.g:12166:4: ( (lv_values_4_0= ruleEStringBoolean ) )
            	    // InternalScadeEquations.g:12167:5: (lv_values_4_0= ruleEStringBoolean )
            	    {
            	    // InternalScadeEquations.g:12167:5: (lv_values_4_0= ruleEStringBoolean )
            	    // InternalScadeEquations.g:12168:6: lv_values_4_0= ruleEStringBoolean
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_135);
            	    lv_values_4_0=ruleEStringBoolean();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getRestrictedKeyStringValueAnnotationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"values",
            	      							lv_values_4_0,
            	      							"de.cau.cs.kieler.annotations.Annotations.EStringBoolean");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop282;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRestrictedKeyStringValueAnnotation"


    // $ANTLR start "entryRuleStringPragma"
    // InternalScadeEquations.g:12190:1: entryRuleStringPragma returns [EObject current=null] : iv_ruleStringPragma= ruleStringPragma EOF ;
    public final EObject entryRuleStringPragma() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStringPragma = null;


        try {
            // InternalScadeEquations.g:12190:53: (iv_ruleStringPragma= ruleStringPragma EOF )
            // InternalScadeEquations.g:12191:2: iv_ruleStringPragma= ruleStringPragma EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStringPragmaRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStringPragma=ruleStringPragma();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStringPragma; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStringPragma"


    // $ANTLR start "ruleStringPragma"
    // InternalScadeEquations.g:12197:1: ruleStringPragma returns [EObject current=null] : (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* ) ;
    public final EObject ruleStringPragma() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_values_2_0 = null;

        AntlrDatatypeRuleToken lv_values_4_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:12203:2: ( (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* ) )
            // InternalScadeEquations.g:12204:2: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* )
            {
            // InternalScadeEquations.g:12204:2: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* )
            // InternalScadeEquations.g:12205:3: otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )*
            {
            otherlv_0=(Token)match(input,88,FollowSets000.FOLLOW_95); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getStringPragmaAccess().getNumberSignKeyword_0());
              		
            }
            // InternalScadeEquations.g:12209:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalScadeEquations.g:12210:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalScadeEquations.g:12210:4: (lv_name_1_0= ruleExtendedID )
            // InternalScadeEquations.g:12211:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getStringPragmaAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_134);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getStringPragmaRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:12228:3: ( (lv_values_2_0= ruleEStringAllTypes ) )
            // InternalScadeEquations.g:12229:4: (lv_values_2_0= ruleEStringAllTypes )
            {
            // InternalScadeEquations.g:12229:4: (lv_values_2_0= ruleEStringAllTypes )
            // InternalScadeEquations.g:12230:5: lv_values_2_0= ruleEStringAllTypes
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getStringPragmaAccess().getValuesEStringAllTypesParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_135);
            lv_values_2_0=ruleEStringAllTypes();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getStringPragmaRule());
              					}
              					add(
              						current,
              						"values",
              						lv_values_2_0,
              						"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:12247:3: (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )*
            loop283:
            do {
                int alt283=2;
                int LA283_0 = input.LA(1);

                if ( (LA283_0==18) ) {
                    alt283=1;
                }


                switch (alt283) {
            	case 1 :
            	    // InternalScadeEquations.g:12248:4: otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) )
            	    {
            	    otherlv_3=(Token)match(input,18,FollowSets000.FOLLOW_134); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getStringPragmaAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalScadeEquations.g:12252:4: ( (lv_values_4_0= ruleEStringAllTypes ) )
            	    // InternalScadeEquations.g:12253:5: (lv_values_4_0= ruleEStringAllTypes )
            	    {
            	    // InternalScadeEquations.g:12253:5: (lv_values_4_0= ruleEStringAllTypes )
            	    // InternalScadeEquations.g:12254:6: lv_values_4_0= ruleEStringAllTypes
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getStringPragmaAccess().getValuesEStringAllTypesParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_135);
            	    lv_values_4_0=ruleEStringAllTypes();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getStringPragmaRule());
            	      						}
            	      						add(
            	      							current,
            	      							"values",
            	      							lv_values_4_0,
            	      							"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop283;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStringPragma"


    // $ANTLR start "entryRuleTypedKeyStringValueAnnotation"
    // InternalScadeEquations.g:12276:1: entryRuleTypedKeyStringValueAnnotation returns [EObject current=null] : iv_ruleTypedKeyStringValueAnnotation= ruleTypedKeyStringValueAnnotation EOF ;
    public final EObject entryRuleTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypedKeyStringValueAnnotation = null;


        try {
            // InternalScadeEquations.g:12276:70: (iv_ruleTypedKeyStringValueAnnotation= ruleTypedKeyStringValueAnnotation EOF )
            // InternalScadeEquations.g:12277:2: iv_ruleTypedKeyStringValueAnnotation= ruleTypedKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypedKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypedKeyStringValueAnnotation=ruleTypedKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypedKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypedKeyStringValueAnnotation"


    // $ANTLR start "ruleTypedKeyStringValueAnnotation"
    // InternalScadeEquations.g:12283:1: ruleTypedKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringAllTypes ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )* ) ;
    public final EObject ruleTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_type_3_0 = null;

        AntlrDatatypeRuleToken lv_values_5_0 = null;

        AntlrDatatypeRuleToken lv_values_7_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:12289:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringAllTypes ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )* ) )
            // InternalScadeEquations.g:12290:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringAllTypes ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )* )
            {
            // InternalScadeEquations.g:12290:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringAllTypes ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )* )
            // InternalScadeEquations.g:12291:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringAllTypes ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )*
            {
            otherlv_0=(Token)match(input,89,FollowSets000.FOLLOW_95); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getTypedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
            // InternalScadeEquations.g:12295:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalScadeEquations.g:12296:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalScadeEquations.g:12296:4: (lv_name_1_0= ruleExtendedID )
            // InternalScadeEquations.g:12297:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_137);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,73,FollowSets000.FOLLOW_95); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getTypedKeyStringValueAnnotationAccess().getLeftSquareBracketKeyword_2());
              		
            }
            // InternalScadeEquations.g:12318:3: ( (lv_type_3_0= ruleExtendedID ) )
            // InternalScadeEquations.g:12319:4: (lv_type_3_0= ruleExtendedID )
            {
            // InternalScadeEquations.g:12319:4: (lv_type_3_0= ruleExtendedID )
            // InternalScadeEquations.g:12320:5: lv_type_3_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypedKeyStringValueAnnotationAccess().getTypeExtendedIDParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_105);
            lv_type_3_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_3_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,74,FollowSets000.FOLLOW_134); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getTypedKeyStringValueAnnotationAccess().getRightSquareBracketKeyword_4());
              		
            }
            // InternalScadeEquations.g:12341:3: ( (lv_values_5_0= ruleEStringAllTypes ) )
            // InternalScadeEquations.g:12342:4: (lv_values_5_0= ruleEStringAllTypes )
            {
            // InternalScadeEquations.g:12342:4: (lv_values_5_0= ruleEStringAllTypes )
            // InternalScadeEquations.g:12343:5: lv_values_5_0= ruleEStringAllTypes
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_5_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_135);
            lv_values_5_0=ruleEStringAllTypes();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypedKeyStringValueAnnotationRule());
              					}
              					add(
              						current,
              						"values",
              						lv_values_5_0,
              						"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:12360:3: (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )*
            loop284:
            do {
                int alt284=2;
                int LA284_0 = input.LA(1);

                if ( (LA284_0==18) ) {
                    alt284=1;
                }


                switch (alt284) {
            	case 1 :
            	    // InternalScadeEquations.g:12361:4: otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) )
            	    {
            	    otherlv_6=(Token)match(input,18,FollowSets000.FOLLOW_134); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_6, grammarAccess.getTypedKeyStringValueAnnotationAccess().getCommaKeyword_6_0());
            	      			
            	    }
            	    // InternalScadeEquations.g:12365:4: ( (lv_values_7_0= ruleEStringAllTypes ) )
            	    // InternalScadeEquations.g:12366:5: (lv_values_7_0= ruleEStringAllTypes )
            	    {
            	    // InternalScadeEquations.g:12366:5: (lv_values_7_0= ruleEStringAllTypes )
            	    // InternalScadeEquations.g:12367:6: lv_values_7_0= ruleEStringAllTypes
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_6_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_135);
            	    lv_values_7_0=ruleEStringAllTypes();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTypedKeyStringValueAnnotationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"values",
            	      							lv_values_7_0,
            	      							"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop284;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypedKeyStringValueAnnotation"


    // $ANTLR start "entryRuleRestrictedTypedKeyStringValueAnnotation"
    // InternalScadeEquations.g:12389:1: entryRuleRestrictedTypedKeyStringValueAnnotation returns [EObject current=null] : iv_ruleRestrictedTypedKeyStringValueAnnotation= ruleRestrictedTypedKeyStringValueAnnotation EOF ;
    public final EObject entryRuleRestrictedTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRestrictedTypedKeyStringValueAnnotation = null;


        try {
            // InternalScadeEquations.g:12389:80: (iv_ruleRestrictedTypedKeyStringValueAnnotation= ruleRestrictedTypedKeyStringValueAnnotation EOF )
            // InternalScadeEquations.g:12390:2: iv_ruleRestrictedTypedKeyStringValueAnnotation= ruleRestrictedTypedKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRestrictedTypedKeyStringValueAnnotation=ruleRestrictedTypedKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRestrictedTypedKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRestrictedTypedKeyStringValueAnnotation"


    // $ANTLR start "ruleRestrictedTypedKeyStringValueAnnotation"
    // InternalScadeEquations.g:12396:1: ruleRestrictedTypedKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringBoolean ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )* ) ;
    public final EObject ruleRestrictedTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_type_3_0 = null;

        AntlrDatatypeRuleToken lv_values_5_0 = null;

        AntlrDatatypeRuleToken lv_values_7_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:12402:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringBoolean ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )* ) )
            // InternalScadeEquations.g:12403:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringBoolean ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )* )
            {
            // InternalScadeEquations.g:12403:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringBoolean ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )* )
            // InternalScadeEquations.g:12404:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringBoolean ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )*
            {
            otherlv_0=(Token)match(input,89,FollowSets000.FOLLOW_95); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
            // InternalScadeEquations.g:12408:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalScadeEquations.g:12409:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalScadeEquations.g:12409:4: (lv_name_1_0= ruleExtendedID )
            // InternalScadeEquations.g:12410:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_137);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,73,FollowSets000.FOLLOW_95); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getLeftSquareBracketKeyword_2());
              		
            }
            // InternalScadeEquations.g:12431:3: ( (lv_type_3_0= ruleExtendedID ) )
            // InternalScadeEquations.g:12432:4: (lv_type_3_0= ruleExtendedID )
            {
            // InternalScadeEquations.g:12432:4: (lv_type_3_0= ruleExtendedID )
            // InternalScadeEquations.g:12433:5: lv_type_3_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getTypeExtendedIDParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_105);
            lv_type_3_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_3_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,74,FollowSets000.FOLLOW_136); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getRightSquareBracketKeyword_4());
              		
            }
            // InternalScadeEquations.g:12454:3: ( (lv_values_5_0= ruleEStringBoolean ) )
            // InternalScadeEquations.g:12455:4: (lv_values_5_0= ruleEStringBoolean )
            {
            // InternalScadeEquations.g:12455:4: (lv_values_5_0= ruleEStringBoolean )
            // InternalScadeEquations.g:12456:5: lv_values_5_0= ruleEStringBoolean
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_5_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_135);
            lv_values_5_0=ruleEStringBoolean();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule());
              					}
              					add(
              						current,
              						"values",
              						lv_values_5_0,
              						"de.cau.cs.kieler.annotations.Annotations.EStringBoolean");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:12473:3: (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )*
            loop285:
            do {
                int alt285=2;
                int LA285_0 = input.LA(1);

                if ( (LA285_0==18) ) {
                    alt285=1;
                }


                switch (alt285) {
            	case 1 :
            	    // InternalScadeEquations.g:12474:4: otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) )
            	    {
            	    otherlv_6=(Token)match(input,18,FollowSets000.FOLLOW_136); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_6, grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getCommaKeyword_6_0());
            	      			
            	    }
            	    // InternalScadeEquations.g:12478:4: ( (lv_values_7_0= ruleEStringBoolean ) )
            	    // InternalScadeEquations.g:12479:5: (lv_values_7_0= ruleEStringBoolean )
            	    {
            	    // InternalScadeEquations.g:12479:5: (lv_values_7_0= ruleEStringBoolean )
            	    // InternalScadeEquations.g:12480:6: lv_values_7_0= ruleEStringBoolean
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_6_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_135);
            	    lv_values_7_0=ruleEStringBoolean();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"values",
            	      							lv_values_7_0,
            	      							"de.cau.cs.kieler.annotations.Annotations.EStringBoolean");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop285;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRestrictedTypedKeyStringValueAnnotation"


    // $ANTLR start "entryRuleQuotedKeyStringValueAnnotation"
    // InternalScadeEquations.g:12502:1: entryRuleQuotedKeyStringValueAnnotation returns [EObject current=null] : iv_ruleQuotedKeyStringValueAnnotation= ruleQuotedKeyStringValueAnnotation EOF ;
    public final EObject entryRuleQuotedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQuotedKeyStringValueAnnotation = null;


        try {
            // InternalScadeEquations.g:12502:71: (iv_ruleQuotedKeyStringValueAnnotation= ruleQuotedKeyStringValueAnnotation EOF )
            // InternalScadeEquations.g:12503:2: iv_ruleQuotedKeyStringValueAnnotation= ruleQuotedKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQuotedKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleQuotedKeyStringValueAnnotation=ruleQuotedKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQuotedKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQuotedKeyStringValueAnnotation"


    // $ANTLR start "ruleQuotedKeyStringValueAnnotation"
    // InternalScadeEquations.g:12509:1: ruleQuotedKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )* ) ;
    public final EObject ruleQuotedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_values_2_0=null;
        Token otherlv_3=null;
        Token lv_values_4_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:12515:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )* ) )
            // InternalScadeEquations.g:12516:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )* )
            {
            // InternalScadeEquations.g:12516:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )* )
            // InternalScadeEquations.g:12517:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )*
            {
            otherlv_0=(Token)match(input,89,FollowSets000.FOLLOW_95); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getQuotedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
            // InternalScadeEquations.g:12521:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalScadeEquations.g:12522:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalScadeEquations.g:12522:4: (lv_name_1_0= ruleExtendedID )
            // InternalScadeEquations.g:12523:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_70);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getQuotedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:12540:3: ( (lv_values_2_0= RULE_STRING ) )
            // InternalScadeEquations.g:12541:4: (lv_values_2_0= RULE_STRING )
            {
            // InternalScadeEquations.g:12541:4: (lv_values_2_0= RULE_STRING )
            // InternalScadeEquations.g:12542:5: lv_values_2_0= RULE_STRING
            {
            lv_values_2_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_135); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_values_2_0, grammarAccess.getQuotedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getQuotedKeyStringValueAnnotationRule());
              					}
              					addWithLastConsumed(
              						current,
              						"values",
              						lv_values_2_0,
              						"de.cau.cs.kieler.annotations.Annotations.STRING");
              				
            }

            }


            }

            // InternalScadeEquations.g:12558:3: (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )*
            loop286:
            do {
                int alt286=2;
                int LA286_0 = input.LA(1);

                if ( (LA286_0==18) ) {
                    alt286=1;
                }


                switch (alt286) {
            	case 1 :
            	    // InternalScadeEquations.g:12559:4: otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) )
            	    {
            	    otherlv_3=(Token)match(input,18,FollowSets000.FOLLOW_70); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getQuotedKeyStringValueAnnotationAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalScadeEquations.g:12563:4: ( (lv_values_4_0= RULE_STRING ) )
            	    // InternalScadeEquations.g:12564:5: (lv_values_4_0= RULE_STRING )
            	    {
            	    // InternalScadeEquations.g:12564:5: (lv_values_4_0= RULE_STRING )
            	    // InternalScadeEquations.g:12565:6: lv_values_4_0= RULE_STRING
            	    {
            	    lv_values_4_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_135); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_values_4_0, grammarAccess.getQuotedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_3_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getQuotedKeyStringValueAnnotationRule());
            	      						}
            	      						addWithLastConsumed(
            	      							current,
            	      							"values",
            	      							lv_values_4_0,
            	      							"de.cau.cs.kieler.annotations.Annotations.STRING");
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop286;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQuotedKeyStringValueAnnotation"


    // $ANTLR start "entryRuleQuotedTypedKeyStringValueAnnotation"
    // InternalScadeEquations.g:12586:1: entryRuleQuotedTypedKeyStringValueAnnotation returns [EObject current=null] : iv_ruleQuotedTypedKeyStringValueAnnotation= ruleQuotedTypedKeyStringValueAnnotation EOF ;
    public final EObject entryRuleQuotedTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQuotedTypedKeyStringValueAnnotation = null;


        try {
            // InternalScadeEquations.g:12586:76: (iv_ruleQuotedTypedKeyStringValueAnnotation= ruleQuotedTypedKeyStringValueAnnotation EOF )
            // InternalScadeEquations.g:12587:2: iv_ruleQuotedTypedKeyStringValueAnnotation= ruleQuotedTypedKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleQuotedTypedKeyStringValueAnnotation=ruleQuotedTypedKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQuotedTypedKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQuotedTypedKeyStringValueAnnotation"


    // $ANTLR start "ruleQuotedTypedKeyStringValueAnnotation"
    // InternalScadeEquations.g:12593:1: ruleQuotedTypedKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= RULE_STRING ) ) (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )* ) ;
    public final EObject ruleQuotedTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_values_5_0=null;
        Token otherlv_6=null;
        Token lv_values_7_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_type_3_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:12599:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= RULE_STRING ) ) (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )* ) )
            // InternalScadeEquations.g:12600:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= RULE_STRING ) ) (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )* )
            {
            // InternalScadeEquations.g:12600:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= RULE_STRING ) ) (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )* )
            // InternalScadeEquations.g:12601:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= RULE_STRING ) ) (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )*
            {
            otherlv_0=(Token)match(input,89,FollowSets000.FOLLOW_95); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
            // InternalScadeEquations.g:12605:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalScadeEquations.g:12606:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalScadeEquations.g:12606:4: (lv_name_1_0= ruleExtendedID )
            // InternalScadeEquations.g:12607:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_137);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,73,FollowSets000.FOLLOW_95); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getLeftSquareBracketKeyword_2());
              		
            }
            // InternalScadeEquations.g:12628:3: ( (lv_type_3_0= ruleExtendedID ) )
            // InternalScadeEquations.g:12629:4: (lv_type_3_0= ruleExtendedID )
            {
            // InternalScadeEquations.g:12629:4: (lv_type_3_0= ruleExtendedID )
            // InternalScadeEquations.g:12630:5: lv_type_3_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getTypeExtendedIDParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_105);
            lv_type_3_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_3_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,74,FollowSets000.FOLLOW_70); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getRightSquareBracketKeyword_4());
              		
            }
            // InternalScadeEquations.g:12651:3: ( (lv_values_5_0= RULE_STRING ) )
            // InternalScadeEquations.g:12652:4: (lv_values_5_0= RULE_STRING )
            {
            // InternalScadeEquations.g:12652:4: (lv_values_5_0= RULE_STRING )
            // InternalScadeEquations.g:12653:5: lv_values_5_0= RULE_STRING
            {
            lv_values_5_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_135); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_values_5_0, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_5_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule());
              					}
              					addWithLastConsumed(
              						current,
              						"values",
              						lv_values_5_0,
              						"de.cau.cs.kieler.annotations.Annotations.STRING");
              				
            }

            }


            }

            // InternalScadeEquations.g:12669:3: (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )*
            loop287:
            do {
                int alt287=2;
                int LA287_0 = input.LA(1);

                if ( (LA287_0==18) ) {
                    alt287=1;
                }


                switch (alt287) {
            	case 1 :
            	    // InternalScadeEquations.g:12670:4: otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) )
            	    {
            	    otherlv_6=(Token)match(input,18,FollowSets000.FOLLOW_70); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_6, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getCommaKeyword_6_0());
            	      			
            	    }
            	    // InternalScadeEquations.g:12674:4: ( (lv_values_7_0= RULE_STRING ) )
            	    // InternalScadeEquations.g:12675:5: (lv_values_7_0= RULE_STRING )
            	    {
            	    // InternalScadeEquations.g:12675:5: (lv_values_7_0= RULE_STRING )
            	    // InternalScadeEquations.g:12676:6: lv_values_7_0= RULE_STRING
            	    {
            	    lv_values_7_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_135); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_values_7_0, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_6_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule());
            	      						}
            	      						addWithLastConsumed(
            	      							current,
            	      							"values",
            	      							lv_values_7_0,
            	      							"de.cau.cs.kieler.annotations.Annotations.STRING");
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop287;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQuotedTypedKeyStringValueAnnotation"


    // $ANTLR start "entryRuleEString"
    // InternalScadeEquations.g:12697:1: entryRuleEString returns [String current=null] : iv_ruleEString= ruleEString EOF ;
    public final String entryRuleEString() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEString = null;


        try {
            // InternalScadeEquations.g:12697:47: (iv_ruleEString= ruleEString EOF )
            // InternalScadeEquations.g:12698:2: iv_ruleEString= ruleEString EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEStringRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEString=ruleEString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEString.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEString"


    // $ANTLR start "ruleEString"
    // InternalScadeEquations.g:12704:1: ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID ) ;
    public final AntlrDatatypeRuleToken ruleEString() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_0=null;
        AntlrDatatypeRuleToken this_ExtendedID_1 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:12710:2: ( (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID ) )
            // InternalScadeEquations.g:12711:2: (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID )
            {
            // InternalScadeEquations.g:12711:2: (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID )
            int alt288=2;
            int LA288_0 = input.LA(1);

            if ( (LA288_0==RULE_STRING) ) {
                alt288=1;
            }
            else if ( (LA288_0==RULE_ID) ) {
                alt288=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 288, 0, input);

                throw nvae;
            }
            switch (alt288) {
                case 1 :
                    // InternalScadeEquations.g:12712:3: this_STRING_0= RULE_STRING
                    {
                    this_STRING_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_STRING_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:12720:3: this_ExtendedID_1= ruleExtendedID
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEStringAccess().getExtendedIDParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ExtendedID_1=ruleExtendedID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ExtendedID_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEString"


    // $ANTLR start "entryRuleEStringBoolean"
    // InternalScadeEquations.g:12734:1: entryRuleEStringBoolean returns [String current=null] : iv_ruleEStringBoolean= ruleEStringBoolean EOF ;
    public final String entryRuleEStringBoolean() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEStringBoolean = null;


        try {
            // InternalScadeEquations.g:12734:54: (iv_ruleEStringBoolean= ruleEStringBoolean EOF )
            // InternalScadeEquations.g:12735:2: iv_ruleEStringBoolean= ruleEStringBoolean EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEStringBooleanRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEStringBoolean=ruleEStringBoolean();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEStringBoolean.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEStringBoolean"


    // $ANTLR start "ruleEStringBoolean"
    // InternalScadeEquations.g:12741:1: ruleEStringBoolean returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN ) ;
    public final AntlrDatatypeRuleToken ruleEStringBoolean() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_0=null;
        Token this_BOOLEAN_2=null;
        AntlrDatatypeRuleToken this_ExtendedID_1 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:12747:2: ( (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN ) )
            // InternalScadeEquations.g:12748:2: (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN )
            {
            // InternalScadeEquations.g:12748:2: (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN )
            int alt289=3;
            switch ( input.LA(1) ) {
            case RULE_STRING:
                {
                alt289=1;
                }
                break;
            case RULE_ID:
                {
                alt289=2;
                }
                break;
            case RULE_BOOLEAN:
                {
                alt289=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 289, 0, input);

                throw nvae;
            }

            switch (alt289) {
                case 1 :
                    // InternalScadeEquations.g:12749:3: this_STRING_0= RULE_STRING
                    {
                    this_STRING_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_STRING_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_STRING_0, grammarAccess.getEStringBooleanAccess().getSTRINGTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:12757:3: this_ExtendedID_1= ruleExtendedID
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEStringBooleanAccess().getExtendedIDParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ExtendedID_1=ruleExtendedID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ExtendedID_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalScadeEquations.g:12768:3: this_BOOLEAN_2= RULE_BOOLEAN
                    {
                    this_BOOLEAN_2=(Token)match(input,RULE_BOOLEAN,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_BOOLEAN_2);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_BOOLEAN_2, grammarAccess.getEStringBooleanAccess().getBOOLEANTerminalRuleCall_2());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEStringBoolean"


    // $ANTLR start "entryRuleEStringAllTypes"
    // InternalScadeEquations.g:12779:1: entryRuleEStringAllTypes returns [String current=null] : iv_ruleEStringAllTypes= ruleEStringAllTypes EOF ;
    public final String entryRuleEStringAllTypes() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEStringAllTypes = null;


        try {
            // InternalScadeEquations.g:12779:55: (iv_ruleEStringAllTypes= ruleEStringAllTypes EOF )
            // InternalScadeEquations.g:12780:2: iv_ruleEStringAllTypes= ruleEStringAllTypes EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEStringAllTypesRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEStringAllTypes=ruleEStringAllTypes();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEStringAllTypes.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEStringAllTypes"


    // $ANTLR start "ruleEStringAllTypes"
    // InternalScadeEquations.g:12786:1: ruleEStringAllTypes returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN | this_Integer_3= ruleInteger | this_Floateger_4= ruleFloateger ) ;
    public final AntlrDatatypeRuleToken ruleEStringAllTypes() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_0=null;
        Token this_BOOLEAN_2=null;
        AntlrDatatypeRuleToken this_ExtendedID_1 = null;

        AntlrDatatypeRuleToken this_Integer_3 = null;

        AntlrDatatypeRuleToken this_Floateger_4 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:12792:2: ( (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN | this_Integer_3= ruleInteger | this_Floateger_4= ruleFloateger ) )
            // InternalScadeEquations.g:12793:2: (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN | this_Integer_3= ruleInteger | this_Floateger_4= ruleFloateger )
            {
            // InternalScadeEquations.g:12793:2: (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN | this_Integer_3= ruleInteger | this_Floateger_4= ruleFloateger )
            int alt290=5;
            switch ( input.LA(1) ) {
            case RULE_STRING:
                {
                alt290=1;
                }
                break;
            case RULE_ID:
                {
                alt290=2;
                }
                break;
            case RULE_BOOLEAN:
                {
                alt290=3;
                }
                break;
            case 83:
                {
                int LA290_4 = input.LA(2);

                if ( (LA290_4==RULE_INT) ) {
                    alt290=4;
                }
                else if ( (LA290_4==RULE_FLOAT) ) {
                    alt290=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 290, 4, input);

                    throw nvae;
                }
                }
                break;
            case RULE_INT:
                {
                alt290=4;
                }
                break;
            case RULE_FLOAT:
                {
                alt290=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 290, 0, input);

                throw nvae;
            }

            switch (alt290) {
                case 1 :
                    // InternalScadeEquations.g:12794:3: this_STRING_0= RULE_STRING
                    {
                    this_STRING_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_STRING_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_STRING_0, grammarAccess.getEStringAllTypesAccess().getSTRINGTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:12802:3: this_ExtendedID_1= ruleExtendedID
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEStringAllTypesAccess().getExtendedIDParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ExtendedID_1=ruleExtendedID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ExtendedID_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalScadeEquations.g:12813:3: this_BOOLEAN_2= RULE_BOOLEAN
                    {
                    this_BOOLEAN_2=(Token)match(input,RULE_BOOLEAN,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_BOOLEAN_2);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_BOOLEAN_2, grammarAccess.getEStringAllTypesAccess().getBOOLEANTerminalRuleCall_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalScadeEquations.g:12821:3: this_Integer_3= ruleInteger
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEStringAllTypesAccess().getIntegerParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Integer_3=ruleInteger();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_Integer_3);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalScadeEquations.g:12832:3: this_Floateger_4= ruleFloateger
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEStringAllTypesAccess().getFloategerParserRuleCall_4());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Floateger_4=ruleFloateger();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_Floateger_4);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEStringAllTypes"


    // $ANTLR start "entryRuleExtendedID"
    // InternalScadeEquations.g:12846:1: entryRuleExtendedID returns [String current=null] : iv_ruleExtendedID= ruleExtendedID EOF ;
    public final String entryRuleExtendedID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleExtendedID = null;


        try {
            // InternalScadeEquations.g:12846:50: (iv_ruleExtendedID= ruleExtendedID EOF )
            // InternalScadeEquations.g:12847:2: iv_ruleExtendedID= ruleExtendedID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExtendedIDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleExtendedID=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExtendedID.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExtendedID"


    // $ANTLR start "ruleExtendedID"
    // InternalScadeEquations.g:12853:1: ruleExtendedID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ID_0= RULE_ID ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )* (kw= '#' this_INT_5= RULE_INT )? ) ;
    public final AntlrDatatypeRuleToken ruleExtendedID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;
        Token kw=null;
        Token this_ID_3=null;
        Token this_INT_5=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:12859:2: ( (this_ID_0= RULE_ID ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )* (kw= '#' this_INT_5= RULE_INT )? ) )
            // InternalScadeEquations.g:12860:2: (this_ID_0= RULE_ID ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )* (kw= '#' this_INT_5= RULE_INT )? )
            {
            // InternalScadeEquations.g:12860:2: (this_ID_0= RULE_ID ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )* (kw= '#' this_INT_5= RULE_INT )? )
            // InternalScadeEquations.g:12861:3: this_ID_0= RULE_ID ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )* (kw= '#' this_INT_5= RULE_INT )?
            {
            this_ID_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_138); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_ID_0);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_ID_0, grammarAccess.getExtendedIDAccess().getIDTerminalRuleCall_0());
              		
            }
            // InternalScadeEquations.g:12868:3: ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )*
            loop292:
            do {
                int alt292=2;
                int LA292_0 = input.LA(1);

                if ( (LA292_0==83) ) {
                    int LA292_2 = input.LA(2);

                    if ( (LA292_2==RULE_ID) ) {
                        alt292=1;
                    }


                }
                else if ( (LA292_0==37) ) {
                    alt292=1;
                }


                switch (alt292) {
            	case 1 :
            	    // InternalScadeEquations.g:12869:4: (kw= '.' | kw= '-' ) this_ID_3= RULE_ID
            	    {
            	    // InternalScadeEquations.g:12869:4: (kw= '.' | kw= '-' )
            	    int alt291=2;
            	    int LA291_0 = input.LA(1);

            	    if ( (LA291_0==37) ) {
            	        alt291=1;
            	    }
            	    else if ( (LA291_0==83) ) {
            	        alt291=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 291, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt291) {
            	        case 1 :
            	            // InternalScadeEquations.g:12870:5: kw= '.'
            	            {
            	            kw=(Token)match(input,37,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(kw);
            	              					newLeafNode(kw, grammarAccess.getExtendedIDAccess().getFullStopKeyword_1_0_0());
            	              				
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalScadeEquations.g:12876:5: kw= '-'
            	            {
            	            kw=(Token)match(input,83,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(kw);
            	              					newLeafNode(kw, grammarAccess.getExtendedIDAccess().getHyphenMinusKeyword_1_0_1());
            	              				
            	            }

            	            }
            	            break;

            	    }

            	    this_ID_3=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_138); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(this_ID_3);
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(this_ID_3, grammarAccess.getExtendedIDAccess().getIDTerminalRuleCall_1_1());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop292;
                }
            } while (true);

            // InternalScadeEquations.g:12890:3: (kw= '#' this_INT_5= RULE_INT )?
            int alt293=2;
            int LA293_0 = input.LA(1);

            if ( (LA293_0==88) ) {
                alt293=1;
            }
            switch (alt293) {
                case 1 :
                    // InternalScadeEquations.g:12891:4: kw= '#' this_INT_5= RULE_INT
                    {
                    kw=(Token)match(input,88,FollowSets000.FOLLOW_126); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getExtendedIDAccess().getNumberSignKeyword_2_0());
                      			
                    }
                    this_INT_5=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_INT_5);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_INT_5, grammarAccess.getExtendedIDAccess().getINTTerminalRuleCall_2_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExtendedID"


    // $ANTLR start "entryRuleInteger"
    // InternalScadeEquations.g:12908:1: entryRuleInteger returns [String current=null] : iv_ruleInteger= ruleInteger EOF ;
    public final String entryRuleInteger() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleInteger = null;


        try {
            // InternalScadeEquations.g:12908:47: (iv_ruleInteger= ruleInteger EOF )
            // InternalScadeEquations.g:12909:2: iv_ruleInteger= ruleInteger EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIntegerRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleInteger=ruleInteger();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInteger.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInteger"


    // $ANTLR start "ruleInteger"
    // InternalScadeEquations.g:12915:1: ruleInteger returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= '-' )? this_INT_1= RULE_INT ) ;
    public final AntlrDatatypeRuleToken ruleInteger() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_INT_1=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:12921:2: ( ( (kw= '-' )? this_INT_1= RULE_INT ) )
            // InternalScadeEquations.g:12922:2: ( (kw= '-' )? this_INT_1= RULE_INT )
            {
            // InternalScadeEquations.g:12922:2: ( (kw= '-' )? this_INT_1= RULE_INT )
            // InternalScadeEquations.g:12923:3: (kw= '-' )? this_INT_1= RULE_INT
            {
            // InternalScadeEquations.g:12923:3: (kw= '-' )?
            int alt294=2;
            int LA294_0 = input.LA(1);

            if ( (LA294_0==83) ) {
                alt294=1;
            }
            switch (alt294) {
                case 1 :
                    // InternalScadeEquations.g:12924:4: kw= '-'
                    {
                    kw=(Token)match(input,83,FollowSets000.FOLLOW_126); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getIntegerAccess().getHyphenMinusKeyword_0());
                      			
                    }

                    }
                    break;

            }

            this_INT_1=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_INT_1);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_INT_1, grammarAccess.getIntegerAccess().getINTTerminalRuleCall_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInteger"


    // $ANTLR start "entryRuleFloateger"
    // InternalScadeEquations.g:12941:1: entryRuleFloateger returns [String current=null] : iv_ruleFloateger= ruleFloateger EOF ;
    public final String entryRuleFloateger() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleFloateger = null;


        try {
            // InternalScadeEquations.g:12941:49: (iv_ruleFloateger= ruleFloateger EOF )
            // InternalScadeEquations.g:12942:2: iv_ruleFloateger= ruleFloateger EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFloategerRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFloateger=ruleFloateger();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFloateger.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFloateger"


    // $ANTLR start "ruleFloateger"
    // InternalScadeEquations.g:12948:1: ruleFloateger returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= '-' )? this_FLOAT_1= RULE_FLOAT ) ;
    public final AntlrDatatypeRuleToken ruleFloateger() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_FLOAT_1=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:12954:2: ( ( (kw= '-' )? this_FLOAT_1= RULE_FLOAT ) )
            // InternalScadeEquations.g:12955:2: ( (kw= '-' )? this_FLOAT_1= RULE_FLOAT )
            {
            // InternalScadeEquations.g:12955:2: ( (kw= '-' )? this_FLOAT_1= RULE_FLOAT )
            // InternalScadeEquations.g:12956:3: (kw= '-' )? this_FLOAT_1= RULE_FLOAT
            {
            // InternalScadeEquations.g:12956:3: (kw= '-' )?
            int alt295=2;
            int LA295_0 = input.LA(1);

            if ( (LA295_0==83) ) {
                alt295=1;
            }
            switch (alt295) {
                case 1 :
                    // InternalScadeEquations.g:12957:4: kw= '-'
                    {
                    kw=(Token)match(input,83,FollowSets000.FOLLOW_139); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getFloategerAccess().getHyphenMinusKeyword_0());
                      			
                    }

                    }
                    break;

            }

            this_FLOAT_1=(Token)match(input,RULE_FLOAT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_FLOAT_1);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_FLOAT_1, grammarAccess.getFloategerAccess().getFLOATTerminalRuleCall_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFloateger"


    // $ANTLR start "ruleValueType"
    // InternalScadeEquations.g:12974:1: ruleValueType returns [Enumerator current=null] : ( (enumLiteral_0= 'bool' ) | (enumLiteral_1= 'int' ) | (enumLiteral_2= 'real' ) ) ;
    public final Enumerator ruleValueType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:12980:2: ( ( (enumLiteral_0= 'bool' ) | (enumLiteral_1= 'int' ) | (enumLiteral_2= 'real' ) ) )
            // InternalScadeEquations.g:12981:2: ( (enumLiteral_0= 'bool' ) | (enumLiteral_1= 'int' ) | (enumLiteral_2= 'real' ) )
            {
            // InternalScadeEquations.g:12981:2: ( (enumLiteral_0= 'bool' ) | (enumLiteral_1= 'int' ) | (enumLiteral_2= 'real' ) )
            int alt296=3;
            switch ( input.LA(1) ) {
            case 90:
                {
                alt296=1;
                }
                break;
            case 91:
                {
                alt296=2;
                }
                break;
            case 92:
                {
                alt296=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 296, 0, input);

                throw nvae;
            }

            switch (alt296) {
                case 1 :
                    // InternalScadeEquations.g:12982:3: (enumLiteral_0= 'bool' )
                    {
                    // InternalScadeEquations.g:12982:3: (enumLiteral_0= 'bool' )
                    // InternalScadeEquations.g:12983:4: enumLiteral_0= 'bool'
                    {
                    enumLiteral_0=(Token)match(input,90,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getValueTypeAccess().getBOOLEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getValueTypeAccess().getBOOLEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:12990:3: (enumLiteral_1= 'int' )
                    {
                    // InternalScadeEquations.g:12990:3: (enumLiteral_1= 'int' )
                    // InternalScadeEquations.g:12991:4: enumLiteral_1= 'int'
                    {
                    enumLiteral_1=(Token)match(input,91,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getValueTypeAccess().getINTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getValueTypeAccess().getINTEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalScadeEquations.g:12998:3: (enumLiteral_2= 'real' )
                    {
                    // InternalScadeEquations.g:12998:3: (enumLiteral_2= 'real' )
                    // InternalScadeEquations.g:12999:4: enumLiteral_2= 'real'
                    {
                    enumLiteral_2=(Token)match(input,92,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getValueTypeAccess().getFLOATEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getValueTypeAccess().getFLOATEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValueType"


    // $ANTLR start "ruleEnumType"
    // InternalScadeEquations.g:13009:1: ruleEnumType returns [Enumerator current=null] : (enumLiteral_0= 'enum' ) ;
    public final Enumerator ruleEnumType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:13015:2: ( (enumLiteral_0= 'enum' ) )
            // InternalScadeEquations.g:13016:2: (enumLiteral_0= 'enum' )
            {
            // InternalScadeEquations.g:13016:2: (enumLiteral_0= 'enum' )
            // InternalScadeEquations.g:13017:3: enumLiteral_0= 'enum'
            {
            enumLiteral_0=(Token)match(input,93,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getEnumTypeAccess().getENUMEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getEnumTypeAccess().getENUMEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEnumType"


    // $ANTLR start "ruleAssignOperator"
    // InternalScadeEquations.g:13026:1: ruleAssignOperator returns [Enumerator current=null] : (enumLiteral_0= '=' ) ;
    public final Enumerator ruleAssignOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:13032:2: ( (enumLiteral_0= '=' ) )
            // InternalScadeEquations.g:13033:2: (enumLiteral_0= '=' )
            {
            // InternalScadeEquations.g:13033:2: (enumLiteral_0= '=' )
            // InternalScadeEquations.g:13034:3: enumLiteral_0= '='
            {
            enumLiteral_0=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getAssignOperatorAccess().getASSIGNEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getAssignOperatorAccess().getASSIGNEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAssignOperator"


    // $ANTLR start "ruleCompareOperator"
    // InternalScadeEquations.g:13043:1: ruleCompareOperator returns [Enumerator current=null] : ( (enumLiteral_0= '=' ) | (enumLiteral_1= '<' ) | (enumLiteral_2= '<=' ) | (enumLiteral_3= '>' ) | (enumLiteral_4= '>=' ) | (enumLiteral_5= '<>' ) ) ;
    public final Enumerator ruleCompareOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:13049:2: ( ( (enumLiteral_0= '=' ) | (enumLiteral_1= '<' ) | (enumLiteral_2= '<=' ) | (enumLiteral_3= '>' ) | (enumLiteral_4= '>=' ) | (enumLiteral_5= '<>' ) ) )
            // InternalScadeEquations.g:13050:2: ( (enumLiteral_0= '=' ) | (enumLiteral_1= '<' ) | (enumLiteral_2= '<=' ) | (enumLiteral_3= '>' ) | (enumLiteral_4= '>=' ) | (enumLiteral_5= '<>' ) )
            {
            // InternalScadeEquations.g:13050:2: ( (enumLiteral_0= '=' ) | (enumLiteral_1= '<' ) | (enumLiteral_2= '<=' ) | (enumLiteral_3= '>' ) | (enumLiteral_4= '>=' ) | (enumLiteral_5= '<>' ) )
            int alt297=6;
            switch ( input.LA(1) ) {
            case 21:
                {
                alt297=1;
                }
                break;
            case 94:
                {
                alt297=2;
                }
                break;
            case 95:
                {
                alt297=3;
                }
                break;
            case 96:
                {
                alt297=4;
                }
                break;
            case 97:
                {
                alt297=5;
                }
                break;
            case 98:
                {
                alt297=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 297, 0, input);

                throw nvae;
            }

            switch (alt297) {
                case 1 :
                    // InternalScadeEquations.g:13051:3: (enumLiteral_0= '=' )
                    {
                    // InternalScadeEquations.g:13051:3: (enumLiteral_0= '=' )
                    // InternalScadeEquations.g:13052:4: enumLiteral_0= '='
                    {
                    enumLiteral_0=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCompareOperatorAccess().getEQEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getCompareOperatorAccess().getEQEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:13059:3: (enumLiteral_1= '<' )
                    {
                    // InternalScadeEquations.g:13059:3: (enumLiteral_1= '<' )
                    // InternalScadeEquations.g:13060:4: enumLiteral_1= '<'
                    {
                    enumLiteral_1=(Token)match(input,94,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCompareOperatorAccess().getLTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getCompareOperatorAccess().getLTEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalScadeEquations.g:13067:3: (enumLiteral_2= '<=' )
                    {
                    // InternalScadeEquations.g:13067:3: (enumLiteral_2= '<=' )
                    // InternalScadeEquations.g:13068:4: enumLiteral_2= '<='
                    {
                    enumLiteral_2=(Token)match(input,95,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCompareOperatorAccess().getLEQEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getCompareOperatorAccess().getLEQEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalScadeEquations.g:13075:3: (enumLiteral_3= '>' )
                    {
                    // InternalScadeEquations.g:13075:3: (enumLiteral_3= '>' )
                    // InternalScadeEquations.g:13076:4: enumLiteral_3= '>'
                    {
                    enumLiteral_3=(Token)match(input,96,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCompareOperatorAccess().getGTEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getCompareOperatorAccess().getGTEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalScadeEquations.g:13083:3: (enumLiteral_4= '>=' )
                    {
                    // InternalScadeEquations.g:13083:3: (enumLiteral_4= '>=' )
                    // InternalScadeEquations.g:13084:4: enumLiteral_4= '>='
                    {
                    enumLiteral_4=(Token)match(input,97,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCompareOperatorAccess().getGEQEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getCompareOperatorAccess().getGEQEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalScadeEquations.g:13091:3: (enumLiteral_5= '<>' )
                    {
                    // InternalScadeEquations.g:13091:3: (enumLiteral_5= '<>' )
                    // InternalScadeEquations.g:13092:4: enumLiteral_5= '<>'
                    {
                    enumLiteral_5=(Token)match(input,98,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCompareOperatorAccess().getNEEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_5, grammarAccess.getCompareOperatorAccess().getNEEnumLiteralDeclaration_5());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCompareOperator"


    // $ANTLR start "ruleLogicalOrOperator"
    // InternalScadeEquations.g:13102:1: ruleLogicalOrOperator returns [Enumerator current=null] : (enumLiteral_0= 'or' ) ;
    public final Enumerator ruleLogicalOrOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:13108:2: ( (enumLiteral_0= 'or' ) )
            // InternalScadeEquations.g:13109:2: (enumLiteral_0= 'or' )
            {
            // InternalScadeEquations.g:13109:2: (enumLiteral_0= 'or' )
            // InternalScadeEquations.g:13110:3: enumLiteral_0= 'or'
            {
            enumLiteral_0=(Token)match(input,60,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getLogicalOrOperatorAccess().getLOGICAL_OREnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getLogicalOrOperatorAccess().getLOGICAL_OREnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalOrOperator"


    // $ANTLR start "ruleLogicalAndOperator"
    // InternalScadeEquations.g:13119:1: ruleLogicalAndOperator returns [Enumerator current=null] : (enumLiteral_0= 'and' ) ;
    public final Enumerator ruleLogicalAndOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:13125:2: ( (enumLiteral_0= 'and' ) )
            // InternalScadeEquations.g:13126:2: (enumLiteral_0= 'and' )
            {
            // InternalScadeEquations.g:13126:2: (enumLiteral_0= 'and' )
            // InternalScadeEquations.g:13127:3: enumLiteral_0= 'and'
            {
            enumLiteral_0=(Token)match(input,61,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getLogicalAndOperatorAccess().getLOGICAL_ANDEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getLogicalAndOperatorAccess().getLOGICAL_ANDEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalAndOperator"


    // $ANTLR start "ruleNotOperator"
    // InternalScadeEquations.g:13136:1: ruleNotOperator returns [Enumerator current=null] : (enumLiteral_0= 'not' ) ;
    public final Enumerator ruleNotOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:13142:2: ( (enumLiteral_0= 'not' ) )
            // InternalScadeEquations.g:13143:2: (enumLiteral_0= 'not' )
            {
            // InternalScadeEquations.g:13143:2: (enumLiteral_0= 'not' )
            // InternalScadeEquations.g:13144:3: enumLiteral_0= 'not'
            {
            enumLiteral_0=(Token)match(input,99,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getNotOperatorAccess().getNOTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getNotOperatorAccess().getNOTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNotOperator"


    // $ANTLR start "ruleFbyOperator"
    // InternalScadeEquations.g:13153:1: ruleFbyOperator returns [Enumerator current=null] : (enumLiteral_0= 'fby' ) ;
    public final Enumerator ruleFbyOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:13159:2: ( (enumLiteral_0= 'fby' ) )
            // InternalScadeEquations.g:13160:2: (enumLiteral_0= 'fby' )
            {
            // InternalScadeEquations.g:13160:2: (enumLiteral_0= 'fby' )
            // InternalScadeEquations.g:13161:3: enumLiteral_0= 'fby'
            {
            enumLiteral_0=(Token)match(input,54,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getFbyOperatorAccess().getFBYEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getFbyOperatorAccess().getFBYEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFbyOperator"


    // $ANTLR start "ruleModOperator"
    // InternalScadeEquations.g:13170:1: ruleModOperator returns [Enumerator current=null] : (enumLiteral_0= 'mod' ) ;
    public final Enumerator ruleModOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:13176:2: ( (enumLiteral_0= 'mod' ) )
            // InternalScadeEquations.g:13177:2: (enumLiteral_0= 'mod' )
            {
            // InternalScadeEquations.g:13177:2: (enumLiteral_0= 'mod' )
            // InternalScadeEquations.g:13178:3: enumLiteral_0= 'mod'
            {
            enumLiteral_0=(Token)match(input,52,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getModOperatorAccess().getMODEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getModOperatorAccess().getMODEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModOperator"


    // $ANTLR start "ruleCurrentOperator"
    // InternalScadeEquations.g:13187:1: ruleCurrentOperator returns [Enumerator current=null] : (enumLiteral_0= 'current' ) ;
    public final Enumerator ruleCurrentOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:13193:2: ( (enumLiteral_0= 'current' ) )
            // InternalScadeEquations.g:13194:2: (enumLiteral_0= 'current' )
            {
            // InternalScadeEquations.g:13194:2: (enumLiteral_0= 'current' )
            // InternalScadeEquations.g:13195:3: enumLiteral_0= 'current'
            {
            enumLiteral_0=(Token)match(input,100,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getCurrentOperatorAccess().getCURRENTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getCurrentOperatorAccess().getCURRENTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCurrentOperator"


    // $ANTLR start "ruleWhenOperator"
    // InternalScadeEquations.g:13204:1: ruleWhenOperator returns [Enumerator current=null] : (enumLiteral_0= 'when' ) ;
    public final Enumerator ruleWhenOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:13210:2: ( (enumLiteral_0= 'when' ) )
            // InternalScadeEquations.g:13211:2: (enumLiteral_0= 'when' )
            {
            // InternalScadeEquations.g:13211:2: (enumLiteral_0= 'when' )
            // InternalScadeEquations.g:13212:3: enumLiteral_0= 'when'
            {
            enumLiteral_0=(Token)match(input,31,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getWhenOperatorAccess().getWHENEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getWhenOperatorAccess().getWHENEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWhenOperator"


    // $ANTLR start "ruleInitOperator"
    // InternalScadeEquations.g:13221:1: ruleInitOperator returns [Enumerator current=null] : (enumLiteral_0= '->' ) ;
    public final Enumerator ruleInitOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:13227:2: ( (enumLiteral_0= '->' ) )
            // InternalScadeEquations.g:13228:2: (enumLiteral_0= '->' )
            {
            // InternalScadeEquations.g:13228:2: (enumLiteral_0= '->' )
            // InternalScadeEquations.g:13229:3: enumLiteral_0= '->'
            {
            enumLiteral_0=(Token)match(input,55,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getInitOperatorAccess().getINITEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getInitOperatorAccess().getINITEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInitOperator"


    // $ANTLR start "ruleLogicalXorOperator"
    // InternalScadeEquations.g:13238:1: ruleLogicalXorOperator returns [Enumerator current=null] : (enumLiteral_0= 'xor' ) ;
    public final Enumerator ruleLogicalXorOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:13244:2: ( (enumLiteral_0= 'xor' ) )
            // InternalScadeEquations.g:13245:2: (enumLiteral_0= 'xor' )
            {
            // InternalScadeEquations.g:13245:2: (enumLiteral_0= 'xor' )
            // InternalScadeEquations.g:13246:3: enumLiteral_0= 'xor'
            {
            enumLiteral_0=(Token)match(input,59,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getLogicalXorOperatorAccess().getBITWISE_XOREnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getLogicalXorOperatorAccess().getBITWISE_XOREnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalXorOperator"


    // $ANTLR start "ruleImpliesOperator"
    // InternalScadeEquations.g:13255:1: ruleImpliesOperator returns [Enumerator current=null] : (enumLiteral_0= '=>' ) ;
    public final Enumerator ruleImpliesOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:13261:2: ( (enumLiteral_0= '=>' ) )
            // InternalScadeEquations.g:13262:2: (enumLiteral_0= '=>' )
            {
            // InternalScadeEquations.g:13262:2: (enumLiteral_0= '=>' )
            // InternalScadeEquations.g:13263:3: enumLiteral_0= '=>'
            {
            enumLiteral_0=(Token)match(input,58,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getImpliesOperatorAccess().getIMPLIESEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getImpliesOperatorAccess().getIMPLIESEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImpliesOperator"


    // $ANTLR start "ruleIntDivOperator"
    // InternalScadeEquations.g:13272:1: ruleIntDivOperator returns [Enumerator current=null] : (enumLiteral_0= 'div' ) ;
    public final Enumerator ruleIntDivOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:13278:2: ( (enumLiteral_0= 'div' ) )
            // InternalScadeEquations.g:13279:2: (enumLiteral_0= 'div' )
            {
            // InternalScadeEquations.g:13279:2: (enumLiteral_0= 'div' )
            // InternalScadeEquations.g:13280:3: enumLiteral_0= 'div'
            {
            enumLiteral_0=(Token)match(input,53,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getIntDivOperatorAccess().getDIVEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getIntDivOperatorAccess().getDIVEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIntDivOperator"


    // $ANTLR start "ruleConditionalOperator"
    // InternalScadeEquations.g:13289:1: ruleConditionalOperator returns [Enumerator current=null] : (enumLiteral_0= 'if' ) ;
    public final Enumerator ruleConditionalOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:13295:2: ( (enumLiteral_0= 'if' ) )
            // InternalScadeEquations.g:13296:2: (enumLiteral_0= 'if' )
            {
            // InternalScadeEquations.g:13296:2: (enumLiteral_0= 'if' )
            // InternalScadeEquations.g:13297:3: enumLiteral_0= 'if'
            {
            enumLiteral_0=(Token)match(input,46,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getConditionalOperatorAccess().getCONDITIONALEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getConditionalOperatorAccess().getCONDITIONALEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConditionalOperator"


    // $ANTLR start "ruleAtMostOneOperator"
    // InternalScadeEquations.g:13306:1: ruleAtMostOneOperator returns [Enumerator current=null] : (enumLiteral_0= '#' ) ;
    public final Enumerator ruleAtMostOneOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:13312:2: ( (enumLiteral_0= '#' ) )
            // InternalScadeEquations.g:13313:2: (enumLiteral_0= '#' )
            {
            // InternalScadeEquations.g:13313:2: (enumLiteral_0= '#' )
            // InternalScadeEquations.g:13314:3: enumLiteral_0= '#'
            {
            enumLiteral_0=(Token)match(input,88,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getAtMostOneOperatorAccess().getATMOSTONEOFEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getAtMostOneOperatorAccess().getATMOSTONEOFEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAtMostOneOperator"


    // $ANTLR start "ruleNorOperator"
    // InternalScadeEquations.g:13323:1: ruleNorOperator returns [Enumerator current=null] : (enumLiteral_0= 'nor' ) ;
    public final Enumerator ruleNorOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:13329:2: ( (enumLiteral_0= 'nor' ) )
            // InternalScadeEquations.g:13330:2: (enumLiteral_0= 'nor' )
            {
            // InternalScadeEquations.g:13330:2: (enumLiteral_0= 'nor' )
            // InternalScadeEquations.g:13331:3: enumLiteral_0= 'nor'
            {
            enumLiteral_0=(Token)match(input,101,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getNorOperatorAccess().getNOREnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getNorOperatorAccess().getNOREnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNorOperator"


    // $ANTLR start "rulePriorityProtocol"
    // InternalScadeEquations.g:13340:1: rulePriorityProtocol returns [Enumerator current=null] : ( (enumLiteral_0= 'conflicting' ) | (enumLiteral_1= 'commuting' ) ) ;
    public final Enumerator rulePriorityProtocol() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:13346:2: ( ( (enumLiteral_0= 'conflicting' ) | (enumLiteral_1= 'commuting' ) ) )
            // InternalScadeEquations.g:13347:2: ( (enumLiteral_0= 'conflicting' ) | (enumLiteral_1= 'commuting' ) )
            {
            // InternalScadeEquations.g:13347:2: ( (enumLiteral_0= 'conflicting' ) | (enumLiteral_1= 'commuting' ) )
            int alt298=2;
            int LA298_0 = input.LA(1);

            if ( (LA298_0==102) ) {
                alt298=1;
            }
            else if ( (LA298_0==103) ) {
                alt298=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 298, 0, input);

                throw nvae;
            }
            switch (alt298) {
                case 1 :
                    // InternalScadeEquations.g:13348:3: (enumLiteral_0= 'conflicting' )
                    {
                    // InternalScadeEquations.g:13348:3: (enumLiteral_0= 'conflicting' )
                    // InternalScadeEquations.g:13349:4: enumLiteral_0= 'conflicting'
                    {
                    enumLiteral_0=(Token)match(input,102,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getPriorityProtocolAccess().getCONFLICTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getPriorityProtocolAccess().getCONFLICTEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:13356:3: (enumLiteral_1= 'commuting' )
                    {
                    // InternalScadeEquations.g:13356:3: (enumLiteral_1= 'commuting' )
                    // InternalScadeEquations.g:13357:4: enumLiteral_1= 'commuting'
                    {
                    enumLiteral_1=(Token)match(input,103,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getPriorityProtocolAccess().getCONFLUENTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getPriorityProtocolAccess().getCONFLUENTEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePriorityProtocol"


    // $ANTLR start "rulePostfixOperator"
    // InternalScadeEquations.g:13367:1: rulePostfixOperator returns [Enumerator current=null] : ( (enumLiteral_0= '++' ) | (enumLiteral_1= '--' ) ) ;
    public final Enumerator rulePostfixOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:13373:2: ( ( (enumLiteral_0= '++' ) | (enumLiteral_1= '--' ) ) )
            // InternalScadeEquations.g:13374:2: ( (enumLiteral_0= '++' ) | (enumLiteral_1= '--' ) )
            {
            // InternalScadeEquations.g:13374:2: ( (enumLiteral_0= '++' ) | (enumLiteral_1= '--' ) )
            int alt299=2;
            int LA299_0 = input.LA(1);

            if ( (LA299_0==104) ) {
                alt299=1;
            }
            else if ( (LA299_0==105) ) {
                alt299=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 299, 0, input);

                throw nvae;
            }
            switch (alt299) {
                case 1 :
                    // InternalScadeEquations.g:13375:3: (enumLiteral_0= '++' )
                    {
                    // InternalScadeEquations.g:13375:3: (enumLiteral_0= '++' )
                    // InternalScadeEquations.g:13376:4: enumLiteral_0= '++'
                    {
                    enumLiteral_0=(Token)match(input,104,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getPostfixOperatorAccess().getPOSTFIXADDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getPostfixOperatorAccess().getPOSTFIXADDEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:13383:3: (enumLiteral_1= '--' )
                    {
                    // InternalScadeEquations.g:13383:3: (enumLiteral_1= '--' )
                    // InternalScadeEquations.g:13384:4: enumLiteral_1= '--'
                    {
                    enumLiteral_1=(Token)match(input,105,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getPostfixOperatorAccess().getPOSTFIXSUBEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getPostfixOperatorAccess().getPOSTFIXSUBEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePostfixOperator"


    // $ANTLR start "rulePreOperator"
    // InternalScadeEquations.g:13394:1: rulePreOperator returns [Enumerator current=null] : (enumLiteral_0= 'pre' ) ;
    public final Enumerator rulePreOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:13400:2: ( (enumLiteral_0= 'pre' ) )
            // InternalScadeEquations.g:13401:2: (enumLiteral_0= 'pre' )
            {
            // InternalScadeEquations.g:13401:2: (enumLiteral_0= 'pre' )
            // InternalScadeEquations.g:13402:3: enumLiteral_0= 'pre'
            {
            enumLiteral_0=(Token)match(input,106,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getPreOperatorAccess().getPREEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getPreOperatorAccess().getPREEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePreOperator"


    // $ANTLR start "ruleBitwiseNotOperator"
    // InternalScadeEquations.g:13411:1: ruleBitwiseNotOperator returns [Enumerator current=null] : (enumLiteral_0= '~' ) ;
    public final Enumerator ruleBitwiseNotOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:13417:2: ( (enumLiteral_0= '~' ) )
            // InternalScadeEquations.g:13418:2: (enumLiteral_0= '~' )
            {
            // InternalScadeEquations.g:13418:2: (enumLiteral_0= '~' )
            // InternalScadeEquations.g:13419:3: enumLiteral_0= '~'
            {
            enumLiteral_0=(Token)match(input,107,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getBitwiseNotOperatorAccess().getBITWISE_NOTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getBitwiseNotOperatorAccess().getBITWISE_NOTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseNotOperator"


    // $ANTLR start "ruleBitwiseXOrOperator"
    // InternalScadeEquations.g:13428:1: ruleBitwiseXOrOperator returns [Enumerator current=null] : (enumLiteral_0= '^' ) ;
    public final Enumerator ruleBitwiseXOrOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:13434:2: ( (enumLiteral_0= '^' ) )
            // InternalScadeEquations.g:13435:2: (enumLiteral_0= '^' )
            {
            // InternalScadeEquations.g:13435:2: (enumLiteral_0= '^' )
            // InternalScadeEquations.g:13436:3: enumLiteral_0= '^'
            {
            enumLiteral_0=(Token)match(input,32,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getBitwiseXOrOperatorAccess().getBITWISE_XOREnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getBitwiseXOrOperatorAccess().getBITWISE_XOREnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseXOrOperator"


    // $ANTLR start "ruleBitwiseOrOperator"
    // InternalScadeEquations.g:13445:1: ruleBitwiseOrOperator returns [Enumerator current=null] : (enumLiteral_0= '|' ) ;
    public final Enumerator ruleBitwiseOrOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:13451:2: ( (enumLiteral_0= '|' ) )
            // InternalScadeEquations.g:13452:2: (enumLiteral_0= '|' )
            {
            // InternalScadeEquations.g:13452:2: (enumLiteral_0= '|' )
            // InternalScadeEquations.g:13453:3: enumLiteral_0= '|'
            {
            enumLiteral_0=(Token)match(input,108,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getBitwiseOrOperatorAccess().getBITWISE_OREnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getBitwiseOrOperatorAccess().getBITWISE_OREnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseOrOperator"


    // $ANTLR start "ruleBitwiseAndOperator"
    // InternalScadeEquations.g:13462:1: ruleBitwiseAndOperator returns [Enumerator current=null] : (enumLiteral_0= '&' ) ;
    public final Enumerator ruleBitwiseAndOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:13468:2: ( (enumLiteral_0= '&' ) )
            // InternalScadeEquations.g:13469:2: (enumLiteral_0= '&' )
            {
            // InternalScadeEquations.g:13469:2: (enumLiteral_0= '&' )
            // InternalScadeEquations.g:13470:3: enumLiteral_0= '&'
            {
            enumLiteral_0=(Token)match(input,79,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getBitwiseAndOperatorAccess().getBITWISE_ANDEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getBitwiseAndOperatorAccess().getBITWISE_ANDEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseAndOperator"


    // $ANTLR start "ruleAddOperator"
    // InternalScadeEquations.g:13479:1: ruleAddOperator returns [Enumerator current=null] : (enumLiteral_0= '+' ) ;
    public final Enumerator ruleAddOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:13485:2: ( (enumLiteral_0= '+' ) )
            // InternalScadeEquations.g:13486:2: (enumLiteral_0= '+' )
            {
            // InternalScadeEquations.g:13486:2: (enumLiteral_0= '+' )
            // InternalScadeEquations.g:13487:3: enumLiteral_0= '+'
            {
            enumLiteral_0=(Token)match(input,82,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getAddOperatorAccess().getADDEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getAddOperatorAccess().getADDEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAddOperator"


    // $ANTLR start "ruleSubOperator"
    // InternalScadeEquations.g:13496:1: ruleSubOperator returns [Enumerator current=null] : (enumLiteral_0= '-' ) ;
    public final Enumerator ruleSubOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:13502:2: ( (enumLiteral_0= '-' ) )
            // InternalScadeEquations.g:13503:2: (enumLiteral_0= '-' )
            {
            // InternalScadeEquations.g:13503:2: (enumLiteral_0= '-' )
            // InternalScadeEquations.g:13504:3: enumLiteral_0= '-'
            {
            enumLiteral_0=(Token)match(input,83,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getSubOperatorAccess().getSUBEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getSubOperatorAccess().getSUBEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSubOperator"


    // $ANTLR start "ruleMultOperator"
    // InternalScadeEquations.g:13513:1: ruleMultOperator returns [Enumerator current=null] : (enumLiteral_0= '*' ) ;
    public final Enumerator ruleMultOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:13519:2: ( (enumLiteral_0= '*' ) )
            // InternalScadeEquations.g:13520:2: (enumLiteral_0= '*' )
            {
            // InternalScadeEquations.g:13520:2: (enumLiteral_0= '*' )
            // InternalScadeEquations.g:13521:3: enumLiteral_0= '*'
            {
            enumLiteral_0=(Token)match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getMultOperatorAccess().getMULTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getMultOperatorAccess().getMULTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultOperator"


    // $ANTLR start "ruleDivOperator"
    // InternalScadeEquations.g:13530:1: ruleDivOperator returns [Enumerator current=null] : (enumLiteral_0= '/' ) ;
    public final Enumerator ruleDivOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:13536:2: ( (enumLiteral_0= '/' ) )
            // InternalScadeEquations.g:13537:2: (enumLiteral_0= '/' )
            {
            // InternalScadeEquations.g:13537:2: (enumLiteral_0= '/' )
            // InternalScadeEquations.g:13538:3: enumLiteral_0= '/'
            {
            enumLiteral_0=(Token)match(input,51,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getDivOperatorAccess().getDIVEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getDivOperatorAccess().getDIVEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDivOperator"


    // $ANTLR start "ruleValOperator"
    // InternalScadeEquations.g:13547:1: ruleValOperator returns [Enumerator current=null] : (enumLiteral_0= 'val' ) ;
    public final Enumerator ruleValOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:13553:2: ( (enumLiteral_0= 'val' ) )
            // InternalScadeEquations.g:13554:2: (enumLiteral_0= 'val' )
            {
            // InternalScadeEquations.g:13554:2: (enumLiteral_0= 'val' )
            // InternalScadeEquations.g:13555:3: enumLiteral_0= 'val'
            {
            enumLiteral_0=(Token)match(input,109,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getValOperatorAccess().getVALEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getValOperatorAccess().getVALEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValOperator"


    // $ANTLR start "ruleShiftLeftOperator"
    // InternalScadeEquations.g:13564:1: ruleShiftLeftOperator returns [Enumerator current=null] : (enumLiteral_0= '<<' ) ;
    public final Enumerator ruleShiftLeftOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:13570:2: ( (enumLiteral_0= '<<' ) )
            // InternalScadeEquations.g:13571:2: (enumLiteral_0= '<<' )
            {
            // InternalScadeEquations.g:13571:2: (enumLiteral_0= '<<' )
            // InternalScadeEquations.g:13572:3: enumLiteral_0= '<<'
            {
            enumLiteral_0=(Token)match(input,110,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getShiftLeftOperatorAccess().getSHIFT_LEFTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getShiftLeftOperatorAccess().getSHIFT_LEFTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShiftLeftOperator"


    // $ANTLR start "ruleShiftRightOperator"
    // InternalScadeEquations.g:13581:1: ruleShiftRightOperator returns [Enumerator current=null] : (enumLiteral_0= '>>' ) ;
    public final Enumerator ruleShiftRightOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:13587:2: ( (enumLiteral_0= '>>' ) )
            // InternalScadeEquations.g:13588:2: (enumLiteral_0= '>>' )
            {
            // InternalScadeEquations.g:13588:2: (enumLiteral_0= '>>' )
            // InternalScadeEquations.g:13589:3: enumLiteral_0= '>>'
            {
            enumLiteral_0=(Token)match(input,80,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getShiftRightOperatorAccess().getSHIFT_RIGHTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getShiftRightOperatorAccess().getSHIFT_RIGHTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShiftRightOperator"


    // $ANTLR start "ruleShiftRightUnsignedOperator"
    // InternalScadeEquations.g:13598:1: ruleShiftRightUnsignedOperator returns [Enumerator current=null] : (enumLiteral_0= '>>>' ) ;
    public final Enumerator ruleShiftRightUnsignedOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:13604:2: ( (enumLiteral_0= '>>>' ) )
            // InternalScadeEquations.g:13605:2: (enumLiteral_0= '>>>' )
            {
            // InternalScadeEquations.g:13605:2: (enumLiteral_0= '>>>' )
            // InternalScadeEquations.g:13606:3: enumLiteral_0= '>>>'
            {
            enumLiteral_0=(Token)match(input,81,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getShiftRightUnsignedOperatorAccess().getSHIFT_RIGHT_UNSIGNEDEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getShiftRightUnsignedOperatorAccess().getSHIFT_RIGHT_UNSIGNEDEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShiftRightUnsignedOperator"


    // $ANTLR start "ruleSfbyOperator"
    // InternalScadeEquations.g:13615:1: ruleSfbyOperator returns [Enumerator current=null] : (enumLiteral_0= 'sfby' ) ;
    public final Enumerator ruleSfbyOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:13621:2: ( (enumLiteral_0= 'sfby' ) )
            // InternalScadeEquations.g:13622:2: (enumLiteral_0= 'sfby' )
            {
            // InternalScadeEquations.g:13622:2: (enumLiteral_0= 'sfby' )
            // InternalScadeEquations.g:13623:3: enumLiteral_0= 'sfby'
            {
            enumLiteral_0=(Token)match(input,111,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getSfbyOperatorAccess().getSFBYEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getSfbyOperatorAccess().getSFBYEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSfbyOperator"


    // $ANTLR start "ruleHostType"
    // InternalScadeEquations.g:13632:1: ruleHostType returns [Enumerator current=null] : (enumLiteral_0= 'host' ) ;
    public final Enumerator ruleHostType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:13638:2: ( (enumLiteral_0= 'host' ) )
            // InternalScadeEquations.g:13639:2: (enumLiteral_0= 'host' )
            {
            // InternalScadeEquations.g:13639:2: (enumLiteral_0= 'host' )
            // InternalScadeEquations.g:13640:3: enumLiteral_0= 'host'
            {
            enumLiteral_0=(Token)match(input,70,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getHostTypeAccess().getHOSTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getHostTypeAccess().getHOSTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleHostType"


    // $ANTLR start "ruleStructType"
    // InternalScadeEquations.g:13649:1: ruleStructType returns [Enumerator current=null] : (enumLiteral_0= 'struct' ) ;
    public final Enumerator ruleStructType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:13655:2: ( (enumLiteral_0= 'struct' ) )
            // InternalScadeEquations.g:13656:2: (enumLiteral_0= 'struct' )
            {
            // InternalScadeEquations.g:13656:2: (enumLiteral_0= 'struct' )
            // InternalScadeEquations.g:13657:3: enumLiteral_0= 'struct'
            {
            enumLiteral_0=(Token)match(input,112,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getStructTypeAccess().getSTRUCTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getStructTypeAccess().getSTRUCTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStructType"


    // $ANTLR start "ruleClassType"
    // InternalScadeEquations.g:13666:1: ruleClassType returns [Enumerator current=null] : (enumLiteral_0= 'class' ) ;
    public final Enumerator ruleClassType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:13672:2: ( (enumLiteral_0= 'class' ) )
            // InternalScadeEquations.g:13673:2: (enumLiteral_0= 'class' )
            {
            // InternalScadeEquations.g:13673:2: (enumLiteral_0= 'class' )
            // InternalScadeEquations.g:13674:3: enumLiteral_0= 'class'
            {
            enumLiteral_0=(Token)match(input,113,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getClassTypeAccess().getCLASSEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getClassTypeAccess().getCLASSEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassType"


    // $ANTLR start "ruleCombineOperator"
    // InternalScadeEquations.g:13683:1: ruleCombineOperator returns [Enumerator current=null] : ( (enumLiteral_0= 'none' ) | (enumLiteral_1= '+' ) | (enumLiteral_2= '*' ) | (enumLiteral_3= 'max' ) | (enumLiteral_4= 'min' ) | (enumLiteral_5= '|' ) | (enumLiteral_6= '&' ) | (enumLiteral_7= 'host' ) ) ;
    public final Enumerator ruleCombineOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;
        Token enumLiteral_6=null;
        Token enumLiteral_7=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:13689:2: ( ( (enumLiteral_0= 'none' ) | (enumLiteral_1= '+' ) | (enumLiteral_2= '*' ) | (enumLiteral_3= 'max' ) | (enumLiteral_4= 'min' ) | (enumLiteral_5= '|' ) | (enumLiteral_6= '&' ) | (enumLiteral_7= 'host' ) ) )
            // InternalScadeEquations.g:13690:2: ( (enumLiteral_0= 'none' ) | (enumLiteral_1= '+' ) | (enumLiteral_2= '*' ) | (enumLiteral_3= 'max' ) | (enumLiteral_4= 'min' ) | (enumLiteral_5= '|' ) | (enumLiteral_6= '&' ) | (enumLiteral_7= 'host' ) )
            {
            // InternalScadeEquations.g:13690:2: ( (enumLiteral_0= 'none' ) | (enumLiteral_1= '+' ) | (enumLiteral_2= '*' ) | (enumLiteral_3= 'max' ) | (enumLiteral_4= 'min' ) | (enumLiteral_5= '|' ) | (enumLiteral_6= '&' ) | (enumLiteral_7= 'host' ) )
            int alt300=8;
            switch ( input.LA(1) ) {
            case 114:
                {
                alt300=1;
                }
                break;
            case 82:
                {
                alt300=2;
                }
                break;
            case 50:
                {
                alt300=3;
                }
                break;
            case 115:
                {
                alt300=4;
                }
                break;
            case 116:
                {
                alt300=5;
                }
                break;
            case 108:
                {
                alt300=6;
                }
                break;
            case 79:
                {
                alt300=7;
                }
                break;
            case 70:
                {
                alt300=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 300, 0, input);

                throw nvae;
            }

            switch (alt300) {
                case 1 :
                    // InternalScadeEquations.g:13691:3: (enumLiteral_0= 'none' )
                    {
                    // InternalScadeEquations.g:13691:3: (enumLiteral_0= 'none' )
                    // InternalScadeEquations.g:13692:4: enumLiteral_0= 'none'
                    {
                    enumLiteral_0=(Token)match(input,114,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getNONEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getCombineOperatorAccess().getNONEEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:13699:3: (enumLiteral_1= '+' )
                    {
                    // InternalScadeEquations.g:13699:3: (enumLiteral_1= '+' )
                    // InternalScadeEquations.g:13700:4: enumLiteral_1= '+'
                    {
                    enumLiteral_1=(Token)match(input,82,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getADDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getCombineOperatorAccess().getADDEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalScadeEquations.g:13707:3: (enumLiteral_2= '*' )
                    {
                    // InternalScadeEquations.g:13707:3: (enumLiteral_2= '*' )
                    // InternalScadeEquations.g:13708:4: enumLiteral_2= '*'
                    {
                    enumLiteral_2=(Token)match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getMULTEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getCombineOperatorAccess().getMULTEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalScadeEquations.g:13715:3: (enumLiteral_3= 'max' )
                    {
                    // InternalScadeEquations.g:13715:3: (enumLiteral_3= 'max' )
                    // InternalScadeEquations.g:13716:4: enumLiteral_3= 'max'
                    {
                    enumLiteral_3=(Token)match(input,115,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getMAXEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getCombineOperatorAccess().getMAXEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalScadeEquations.g:13723:3: (enumLiteral_4= 'min' )
                    {
                    // InternalScadeEquations.g:13723:3: (enumLiteral_4= 'min' )
                    // InternalScadeEquations.g:13724:4: enumLiteral_4= 'min'
                    {
                    enumLiteral_4=(Token)match(input,116,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getMINEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getCombineOperatorAccess().getMINEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalScadeEquations.g:13731:3: (enumLiteral_5= '|' )
                    {
                    // InternalScadeEquations.g:13731:3: (enumLiteral_5= '|' )
                    // InternalScadeEquations.g:13732:4: enumLiteral_5= '|'
                    {
                    enumLiteral_5=(Token)match(input,108,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getOREnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_5, grammarAccess.getCombineOperatorAccess().getOREnumLiteralDeclaration_5());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalScadeEquations.g:13739:3: (enumLiteral_6= '&' )
                    {
                    // InternalScadeEquations.g:13739:3: (enumLiteral_6= '&' )
                    // InternalScadeEquations.g:13740:4: enumLiteral_6= '&'
                    {
                    enumLiteral_6=(Token)match(input,79,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getANDEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_6, grammarAccess.getCombineOperatorAccess().getANDEnumLiteralDeclaration_6());
                      			
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalScadeEquations.g:13747:3: (enumLiteral_7= 'host' )
                    {
                    // InternalScadeEquations.g:13747:3: (enumLiteral_7= 'host' )
                    // InternalScadeEquations.g:13748:4: enumLiteral_7= 'host'
                    {
                    enumLiteral_7=(Token)match(input,70,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getHOSTEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_7, grammarAccess.getCombineOperatorAccess().getHOSTEnumLiteralDeclaration_7());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCombineOperator"


    // $ANTLR start "ruleAccessModifier"
    // InternalScadeEquations.g:13758:1: ruleAccessModifier returns [Enumerator current=null] : ( (enumLiteral_0= 'public' ) | (enumLiteral_1= 'protected' ) | (enumLiteral_2= 'private' ) ) ;
    public final Enumerator ruleAccessModifier() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:13764:2: ( ( (enumLiteral_0= 'public' ) | (enumLiteral_1= 'protected' ) | (enumLiteral_2= 'private' ) ) )
            // InternalScadeEquations.g:13765:2: ( (enumLiteral_0= 'public' ) | (enumLiteral_1= 'protected' ) | (enumLiteral_2= 'private' ) )
            {
            // InternalScadeEquations.g:13765:2: ( (enumLiteral_0= 'public' ) | (enumLiteral_1= 'protected' ) | (enumLiteral_2= 'private' ) )
            int alt301=3;
            switch ( input.LA(1) ) {
            case 117:
                {
                alt301=1;
                }
                break;
            case 118:
                {
                alt301=2;
                }
                break;
            case 119:
                {
                alt301=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 301, 0, input);

                throw nvae;
            }

            switch (alt301) {
                case 1 :
                    // InternalScadeEquations.g:13766:3: (enumLiteral_0= 'public' )
                    {
                    // InternalScadeEquations.g:13766:3: (enumLiteral_0= 'public' )
                    // InternalScadeEquations.g:13767:4: enumLiteral_0= 'public'
                    {
                    enumLiteral_0=(Token)match(input,117,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAccessModifierAccess().getPUBLICEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getAccessModifierAccess().getPUBLICEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:13774:3: (enumLiteral_1= 'protected' )
                    {
                    // InternalScadeEquations.g:13774:3: (enumLiteral_1= 'protected' )
                    // InternalScadeEquations.g:13775:4: enumLiteral_1= 'protected'
                    {
                    enumLiteral_1=(Token)match(input,118,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAccessModifierAccess().getPROTECTEDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getAccessModifierAccess().getPROTECTEDEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalScadeEquations.g:13782:3: (enumLiteral_2= 'private' )
                    {
                    // InternalScadeEquations.g:13782:3: (enumLiteral_2= 'private' )
                    // InternalScadeEquations.g:13783:4: enumLiteral_2= 'private'
                    {
                    enumLiteral_2=(Token)match(input,119,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAccessModifierAccess().getPRIVATEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getAccessModifierAccess().getPRIVATEEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAccessModifier"


    // $ANTLR start "ruleMethodReturnType"
    // InternalScadeEquations.g:13793:1: ruleMethodReturnType returns [Enumerator current=null] : ( (enumLiteral_0= 'void' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'int' ) | (enumLiteral_3= 'float' ) | (enumLiteral_4= 'string' ) ) ;
    public final Enumerator ruleMethodReturnType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:13799:2: ( ( (enumLiteral_0= 'void' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'int' ) | (enumLiteral_3= 'float' ) | (enumLiteral_4= 'string' ) ) )
            // InternalScadeEquations.g:13800:2: ( (enumLiteral_0= 'void' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'int' ) | (enumLiteral_3= 'float' ) | (enumLiteral_4= 'string' ) )
            {
            // InternalScadeEquations.g:13800:2: ( (enumLiteral_0= 'void' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'int' ) | (enumLiteral_3= 'float' ) | (enumLiteral_4= 'string' ) )
            int alt302=5;
            switch ( input.LA(1) ) {
            case 120:
                {
                alt302=1;
                }
                break;
            case 90:
                {
                alt302=2;
                }
                break;
            case 91:
                {
                alt302=3;
                }
                break;
            case 121:
                {
                alt302=4;
                }
                break;
            case 122:
                {
                alt302=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 302, 0, input);

                throw nvae;
            }

            switch (alt302) {
                case 1 :
                    // InternalScadeEquations.g:13801:3: (enumLiteral_0= 'void' )
                    {
                    // InternalScadeEquations.g:13801:3: (enumLiteral_0= 'void' )
                    // InternalScadeEquations.g:13802:4: enumLiteral_0= 'void'
                    {
                    enumLiteral_0=(Token)match(input,120,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getMethodReturnTypeAccess().getVOIDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getMethodReturnTypeAccess().getVOIDEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:13809:3: (enumLiteral_1= 'bool' )
                    {
                    // InternalScadeEquations.g:13809:3: (enumLiteral_1= 'bool' )
                    // InternalScadeEquations.g:13810:4: enumLiteral_1= 'bool'
                    {
                    enumLiteral_1=(Token)match(input,90,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getMethodReturnTypeAccess().getBOOLEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getMethodReturnTypeAccess().getBOOLEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalScadeEquations.g:13817:3: (enumLiteral_2= 'int' )
                    {
                    // InternalScadeEquations.g:13817:3: (enumLiteral_2= 'int' )
                    // InternalScadeEquations.g:13818:4: enumLiteral_2= 'int'
                    {
                    enumLiteral_2=(Token)match(input,91,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getMethodReturnTypeAccess().getINTEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getMethodReturnTypeAccess().getINTEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalScadeEquations.g:13825:3: (enumLiteral_3= 'float' )
                    {
                    // InternalScadeEquations.g:13825:3: (enumLiteral_3= 'float' )
                    // InternalScadeEquations.g:13826:4: enumLiteral_3= 'float'
                    {
                    enumLiteral_3=(Token)match(input,121,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getMethodReturnTypeAccess().getFLOATEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getMethodReturnTypeAccess().getFLOATEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalScadeEquations.g:13833:3: (enumLiteral_4= 'string' )
                    {
                    // InternalScadeEquations.g:13833:3: (enumLiteral_4= 'string' )
                    // InternalScadeEquations.g:13834:4: enumLiteral_4= 'string'
                    {
                    enumLiteral_4=(Token)match(input,122,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getMethodReturnTypeAccess().getSTRINGEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getMethodReturnTypeAccess().getSTRINGEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMethodReturnType"

    // $ANTLR start synpred14_InternalScadeEquations
    public final void synpred14_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject lv_variables_12_1 = null;


        // InternalScadeEquations.g:738:9: (lv_variables_12_1= ruleVariableDeclarationInit )
        // InternalScadeEquations.g:738:9: lv_variables_12_1= ruleVariableDeclarationInit
        {
        if ( state.backtracking==0 ) {

          									newCompositeNode(grammarAccess.getTypeDeclarationAccess().getVariablesVariableDeclarationInitParserRuleCall_2_1_2_2_0_0());
          								
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_variables_12_1=ruleVariableDeclarationInit();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred14_InternalScadeEquations

    // $ANTLR start synpred15_InternalScadeEquations
    public final void synpred15_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject lv_variables_14_1 = null;


        // InternalScadeEquations.g:780:10: (lv_variables_14_1= ruleVariableDeclarationInit )
        // InternalScadeEquations.g:780:10: lv_variables_14_1= ruleVariableDeclarationInit
        {
        if ( state.backtracking==0 ) {

          										newCompositeNode(grammarAccess.getTypeDeclarationAccess().getVariablesVariableDeclarationInitParserRuleCall_2_1_2_3_1_0_0());
          									
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_variables_14_1=ruleVariableDeclarationInit();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred15_InternalScadeEquations

    // $ANTLR start synpred41_InternalScadeEquations
    public final void synpred41_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject lv_variables_25_1 = null;


        // InternalScadeEquations.g:1706:8: (lv_variables_25_1= ruleVariableDeclarationInit )
        // InternalScadeEquations.g:1706:8: lv_variables_25_1= ruleVariableDeclarationInit
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getNodeDeclarationAccess().getVariablesVariableDeclarationInitParserRuleCall_8_1_1_0_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_variables_25_1=ruleVariableDeclarationInit();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred41_InternalScadeEquations

    // $ANTLR start synpred42_InternalScadeEquations
    public final void synpred42_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject lv_variables_27_1 = null;


        // InternalScadeEquations.g:1748:9: (lv_variables_27_1= ruleVariableDeclarationInit )
        // InternalScadeEquations.g:1748:9: lv_variables_27_1= ruleVariableDeclarationInit
        {
        if ( state.backtracking==0 ) {

          									newCompositeNode(grammarAccess.getNodeDeclarationAccess().getVariablesVariableDeclarationInitParserRuleCall_8_1_2_1_0_0());
          								
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_variables_27_1=ruleVariableDeclarationInit();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred42_InternalScadeEquations

    // $ANTLR start synpred54_InternalScadeEquations
    public final void synpred54_InternalScadeEquations_fragment() throws RecognitionException {   
        Token otherlv_9=null;
        Token otherlv_11=null;
        EObject lv_references_8_0 = null;

        EObject lv_references_10_0 = null;

        EObject lv_references_12_0 = null;


        // InternalScadeEquations.g:2046:4: ( ( ( (lv_references_8_0= ruleValuedObjectReference ) ) otherlv_9= ',' ( (lv_references_10_0= ruleValuedObjectReference ) ) (otherlv_11= ',' ( (lv_references_12_0= ruleValuedObjectReference ) ) )* ) )
        // InternalScadeEquations.g:2046:4: ( ( (lv_references_8_0= ruleValuedObjectReference ) ) otherlv_9= ',' ( (lv_references_10_0= ruleValuedObjectReference ) ) (otherlv_11= ',' ( (lv_references_12_0= ruleValuedObjectReference ) ) )* )
        {
        // InternalScadeEquations.g:2046:4: ( ( (lv_references_8_0= ruleValuedObjectReference ) ) otherlv_9= ',' ( (lv_references_10_0= ruleValuedObjectReference ) ) (otherlv_11= ',' ( (lv_references_12_0= ruleValuedObjectReference ) ) )* )
        // InternalScadeEquations.g:2047:5: ( (lv_references_8_0= ruleValuedObjectReference ) ) otherlv_9= ',' ( (lv_references_10_0= ruleValuedObjectReference ) ) (otherlv_11= ',' ( (lv_references_12_0= ruleValuedObjectReference ) ) )*
        {
        // InternalScadeEquations.g:2047:5: ( (lv_references_8_0= ruleValuedObjectReference ) )
        // InternalScadeEquations.g:2048:6: (lv_references_8_0= ruleValuedObjectReference )
        {
        // InternalScadeEquations.g:2048:6: (lv_references_8_0= ruleValuedObjectReference )
        // InternalScadeEquations.g:2049:7: lv_references_8_0= ruleValuedObjectReference
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getEquationAccess().getReferencesValuedObjectReferenceParserRuleCall_1_1_0_0());
          						
        }
        pushFollow(FollowSets000.FOLLOW_5);
        lv_references_8_0=ruleValuedObjectReference();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_9=(Token)match(input,18,FollowSets000.FOLLOW_4); if (state.failed) return ;
        // InternalScadeEquations.g:2070:5: ( (lv_references_10_0= ruleValuedObjectReference ) )
        // InternalScadeEquations.g:2071:6: (lv_references_10_0= ruleValuedObjectReference )
        {
        // InternalScadeEquations.g:2071:6: (lv_references_10_0= ruleValuedObjectReference )
        // InternalScadeEquations.g:2072:7: lv_references_10_0= ruleValuedObjectReference
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getEquationAccess().getReferencesValuedObjectReferenceParserRuleCall_1_1_2_0());
          						
        }
        pushFollow(FollowSets000.FOLLOW_135);
        lv_references_10_0=ruleValuedObjectReference();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalScadeEquations.g:2089:5: (otherlv_11= ',' ( (lv_references_12_0= ruleValuedObjectReference ) ) )*
        loop325:
        do {
            int alt325=2;
            int LA325_0 = input.LA(1);

            if ( (LA325_0==18) ) {
                alt325=1;
            }


            switch (alt325) {
        	case 1 :
        	    // InternalScadeEquations.g:2090:6: otherlv_11= ',' ( (lv_references_12_0= ruleValuedObjectReference ) )
        	    {
        	    otherlv_11=(Token)match(input,18,FollowSets000.FOLLOW_4); if (state.failed) return ;
        	    // InternalScadeEquations.g:2094:6: ( (lv_references_12_0= ruleValuedObjectReference ) )
        	    // InternalScadeEquations.g:2095:7: (lv_references_12_0= ruleValuedObjectReference )
        	    {
        	    // InternalScadeEquations.g:2095:7: (lv_references_12_0= ruleValuedObjectReference )
        	    // InternalScadeEquations.g:2096:8: lv_references_12_0= ruleValuedObjectReference
        	    {
        	    if ( state.backtracking==0 ) {

        	      								newCompositeNode(grammarAccess.getEquationAccess().getReferencesValuedObjectReferenceParserRuleCall_1_1_3_1_0());
        	      							
        	    }
        	    pushFollow(FollowSets000.FOLLOW_135);
        	    lv_references_12_0=ruleValuedObjectReference();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop325;
            }
        } while (true);


        }


        }
    }
    // $ANTLR end synpred54_InternalScadeEquations

    // $ANTLR start synpred55_InternalScadeEquations
    public final void synpred55_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject this_ValuedEmission_1 = null;


        // InternalScadeEquations.g:2202:4: (this_ValuedEmission_1= ruleValuedEmission )
        // InternalScadeEquations.g:2202:4: this_ValuedEmission_1= ruleValuedEmission
        {
        if ( state.backtracking==0 ) {

          				/* */
          			
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ValuedEmission_1=ruleValuedEmission();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred55_InternalScadeEquations

    // $ANTLR start synpred77_InternalScadeEquations
    public final void synpred77_InternalScadeEquations_fragment() throws RecognitionException {   
        Token otherlv_4=null;
        EObject lv_subExpressions_5_0 = null;


        // InternalScadeEquations.g:2996:6: (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleIntDivExpression ) ) )
        // InternalScadeEquations.g:2996:6: otherlv_4= '*' ( (lv_subExpressions_5_0= ruleIntDivExpression ) )
        {
        otherlv_4=(Token)match(input,50,FollowSets000.FOLLOW_48); if (state.failed) return ;
        // InternalScadeEquations.g:3000:6: ( (lv_subExpressions_5_0= ruleIntDivExpression ) )
        // InternalScadeEquations.g:3001:7: (lv_subExpressions_5_0= ruleIntDivExpression )
        {
        // InternalScadeEquations.g:3001:7: (lv_subExpressions_5_0= ruleIntDivExpression )
        // InternalScadeEquations.g:3002:8: lv_subExpressions_5_0= ruleIntDivExpression
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getProductExpressionAccess().getSubExpressionsIntDivExpressionParserRuleCall_1_0_3_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_5_0=ruleIntDivExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred77_InternalScadeEquations

    // $ANTLR start synpred79_InternalScadeEquations
    public final void synpred79_InternalScadeEquations_fragment() throws RecognitionException {   
        Token otherlv_9=null;
        EObject lv_subExpressions_10_0 = null;


        // InternalScadeEquations.g:3072:6: (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleIntDivExpression ) ) )
        // InternalScadeEquations.g:3072:6: otherlv_9= '/' ( (lv_subExpressions_10_0= ruleIntDivExpression ) )
        {
        otherlv_9=(Token)match(input,51,FollowSets000.FOLLOW_48); if (state.failed) return ;
        // InternalScadeEquations.g:3076:6: ( (lv_subExpressions_10_0= ruleIntDivExpression ) )
        // InternalScadeEquations.g:3077:7: (lv_subExpressions_10_0= ruleIntDivExpression )
        {
        // InternalScadeEquations.g:3077:7: (lv_subExpressions_10_0= ruleIntDivExpression )
        // InternalScadeEquations.g:3078:8: lv_subExpressions_10_0= ruleIntDivExpression
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getProductExpressionAccess().getSubExpressionsIntDivExpressionParserRuleCall_1_1_3_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_10_0=ruleIntDivExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred79_InternalScadeEquations

    // $ANTLR start synpred81_InternalScadeEquations
    public final void synpred81_InternalScadeEquations_fragment() throws RecognitionException {   
        Token otherlv_14=null;
        EObject lv_subExpressions_15_0 = null;


        // InternalScadeEquations.g:3148:6: (otherlv_14= 'mod' ( (lv_subExpressions_15_0= ruleIntDivExpression ) ) )
        // InternalScadeEquations.g:3148:6: otherlv_14= 'mod' ( (lv_subExpressions_15_0= ruleIntDivExpression ) )
        {
        otherlv_14=(Token)match(input,52,FollowSets000.FOLLOW_48); if (state.failed) return ;
        // InternalScadeEquations.g:3152:6: ( (lv_subExpressions_15_0= ruleIntDivExpression ) )
        // InternalScadeEquations.g:3153:7: (lv_subExpressions_15_0= ruleIntDivExpression )
        {
        // InternalScadeEquations.g:3153:7: (lv_subExpressions_15_0= ruleIntDivExpression )
        // InternalScadeEquations.g:3154:8: lv_subExpressions_15_0= ruleIntDivExpression
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getProductExpressionAccess().getSubExpressionsIntDivExpressionParserRuleCall_1_2_3_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_15_0=ruleIntDivExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred81_InternalScadeEquations

    // $ANTLR start synpred88_InternalScadeEquations
    public final void synpred88_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject lv_subExpressions_1_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;


        // InternalScadeEquations.g:3488:3: ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleWhenOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) )
        // InternalScadeEquations.g:3488:3: ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleWhenOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) )
        {
        // InternalScadeEquations.g:3488:3: ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleWhenOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) )
        // InternalScadeEquations.g:3489:4: () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleWhenOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) )
        {
        // InternalScadeEquations.g:3489:4: ()
        // InternalScadeEquations.g:3490:5: 
        {
        if ( state.backtracking==0 ) {

          					/* */
          				
        }

        }

        // InternalScadeEquations.g:3499:4: ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) )
        // InternalScadeEquations.g:3500:5: (lv_subExpressions_1_0= ruleAtomicValuedExpression )
        {
        // InternalScadeEquations.g:3500:5: (lv_subExpressions_1_0= ruleAtomicValuedExpression )
        // InternalScadeEquations.g:3501:6: lv_subExpressions_1_0= ruleAtomicValuedExpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getWhenExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_1_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_52);
        lv_subExpressions_1_0=ruleAtomicValuedExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalScadeEquations.g:3518:4: ( (lv_operator_2_0= ruleWhenOperator ) )
        // InternalScadeEquations.g:3519:5: (lv_operator_2_0= ruleWhenOperator )
        {
        // InternalScadeEquations.g:3519:5: (lv_operator_2_0= ruleWhenOperator )
        // InternalScadeEquations.g:3520:6: lv_operator_2_0= ruleWhenOperator
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getWhenExpressionAccess().getOperatorWhenOperatorEnumRuleCall_0_2_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_50);
        lv_operator_2_0=ruleWhenOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalScadeEquations.g:3537:4: ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) )
        // InternalScadeEquations.g:3538:5: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
        {
        // InternalScadeEquations.g:3538:5: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
        // InternalScadeEquations.g:3539:6: lv_subExpressions_3_0= ruleAtomicValuedExpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getWhenExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_3_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_3_0=ruleAtomicValuedExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred88_InternalScadeEquations

    // $ANTLR start synpred90_InternalScadeEquations
    public final void synpred90_InternalScadeEquations_fragment() throws RecognitionException {   
        Enumerator lv_operator_1_0 = null;

        EObject lv_subExpressions_2_0 = null;


        // InternalScadeEquations.g:3669:3: ( ( () ( (lv_operator_1_0= rulePreOperator ) ) ( (lv_subExpressions_2_0= ruleAtomicValuedExpression ) ) ) )
        // InternalScadeEquations.g:3669:3: ( () ( (lv_operator_1_0= rulePreOperator ) ) ( (lv_subExpressions_2_0= ruleAtomicValuedExpression ) ) )
        {
        // InternalScadeEquations.g:3669:3: ( () ( (lv_operator_1_0= rulePreOperator ) ) ( (lv_subExpressions_2_0= ruleAtomicValuedExpression ) ) )
        // InternalScadeEquations.g:3670:4: () ( (lv_operator_1_0= rulePreOperator ) ) ( (lv_subExpressions_2_0= ruleAtomicValuedExpression ) )
        {
        // InternalScadeEquations.g:3670:4: ()
        // InternalScadeEquations.g:3671:5: 
        {
        if ( state.backtracking==0 ) {

          					/* */
          				
        }

        }

        // InternalScadeEquations.g:3680:4: ( (lv_operator_1_0= rulePreOperator ) )
        // InternalScadeEquations.g:3681:5: (lv_operator_1_0= rulePreOperator )
        {
        // InternalScadeEquations.g:3681:5: (lv_operator_1_0= rulePreOperator )
        // InternalScadeEquations.g:3682:6: lv_operator_1_0= rulePreOperator
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getPreExpressionAccess().getOperatorPreOperatorEnumRuleCall_0_1_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_50);
        lv_operator_1_0=rulePreOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalScadeEquations.g:3699:4: ( (lv_subExpressions_2_0= ruleAtomicValuedExpression ) )
        // InternalScadeEquations.g:3700:5: (lv_subExpressions_2_0= ruleAtomicValuedExpression )
        {
        // InternalScadeEquations.g:3700:5: (lv_subExpressions_2_0= ruleAtomicValuedExpression )
        // InternalScadeEquations.g:3701:6: lv_subExpressions_2_0= ruleAtomicValuedExpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getPreExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_2_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_2_0=ruleAtomicValuedExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred90_InternalScadeEquations

    // $ANTLR start synpred109_InternalScadeEquations
    public final void synpred109_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject lv_declarations_1_0 = null;


        // InternalScadeEquations.g:4770:4: ( (lv_declarations_1_0= ruleDeclaration ) )
        // InternalScadeEquations.g:4770:4: (lv_declarations_1_0= ruleDeclaration )
        {
        // InternalScadeEquations.g:4770:4: (lv_declarations_1_0= ruleDeclaration )
        // InternalScadeEquations.g:4771:5: lv_declarations_1_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getRootScopeAccess().getDeclarationsDeclarationParserRuleCall_1_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_1_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred109_InternalScadeEquations

    // $ANTLR start synpred113_InternalScadeEquations
    public final void synpred113_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject lv_declarations_3_0 = null;


        // InternalScadeEquations.g:4884:4: ( (lv_declarations_3_0= ruleDeclaration ) )
        // InternalScadeEquations.g:4884:4: (lv_declarations_3_0= ruleDeclaration )
        {
        // InternalScadeEquations.g:4884:4: (lv_declarations_3_0= ruleDeclaration )
        // InternalScadeEquations.g:4885:5: lv_declarations_3_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getScopeAccess().getDeclarationsDeclarationParserRuleCall_3_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_3_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred113_InternalScadeEquations

    // $ANTLR start synpred116_InternalScadeEquations
    public final void synpred116_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject lv_expression_0_1 = null;


        // InternalScadeEquations.g:4972:6: (lv_expression_0_1= ruleAnnotatedExpression )
        // InternalScadeEquations.g:4972:6: lv_expression_0_1= ruleAnnotatedExpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getTestEntityAccess().getExpressionAnnotatedExpressionParserRuleCall_0_0_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_expression_0_1=ruleAnnotatedExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred116_InternalScadeEquations

    // $ANTLR start synpred117_InternalScadeEquations
    public final void synpred117_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject lv_expression_0_1 = null;

        EObject lv_expression_0_2 = null;


        // InternalScadeEquations.g:4969:3: ( ( ( (lv_expression_0_1= ruleAnnotatedExpression | lv_expression_0_2= ruleAnnotatedJsonExpression ) ) ) )
        // InternalScadeEquations.g:4969:3: ( ( (lv_expression_0_1= ruleAnnotatedExpression | lv_expression_0_2= ruleAnnotatedJsonExpression ) ) )
        {
        // InternalScadeEquations.g:4969:3: ( ( (lv_expression_0_1= ruleAnnotatedExpression | lv_expression_0_2= ruleAnnotatedJsonExpression ) ) )
        // InternalScadeEquations.g:4970:4: ( (lv_expression_0_1= ruleAnnotatedExpression | lv_expression_0_2= ruleAnnotatedJsonExpression ) )
        {
        // InternalScadeEquations.g:4970:4: ( (lv_expression_0_1= ruleAnnotatedExpression | lv_expression_0_2= ruleAnnotatedJsonExpression ) )
        // InternalScadeEquations.g:4971:5: (lv_expression_0_1= ruleAnnotatedExpression | lv_expression_0_2= ruleAnnotatedJsonExpression )
        {
        // InternalScadeEquations.g:4971:5: (lv_expression_0_1= ruleAnnotatedExpression | lv_expression_0_2= ruleAnnotatedJsonExpression )
        int alt340=2;
        switch ( input.LA(1) ) {
        case RULE_COMMENT_ANNOTATION:
            {
            int LA340_1 = input.LA(2);

            if ( (synpred116_InternalScadeEquations()) ) {
                alt340=1;
            }
            else if ( (true) ) {
                alt340=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 340, 1, input);

                throw nvae;
            }
            }
            break;
        case 89:
            {
            int LA340_2 = input.LA(2);

            if ( (synpred116_InternalScadeEquations()) ) {
                alt340=1;
            }
            else if ( (true) ) {
                alt340=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 340, 2, input);

                throw nvae;
            }
            }
            break;
        case 63:
            {
            alt340=1;
            }
            break;
        case 64:
            {
            alt340=2;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 340, 0, input);

            throw nvae;
        }

        switch (alt340) {
            case 1 :
                // InternalScadeEquations.g:4972:6: lv_expression_0_1= ruleAnnotatedExpression
                {
                pushFollow(FollowSets000.FOLLOW_2);
                lv_expression_0_1=ruleAnnotatedExpression();

                state._fsp--;
                if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalScadeEquations.g:4988:6: lv_expression_0_2= ruleAnnotatedJsonExpression
                {
                if ( state.backtracking==0 ) {

                  						newCompositeNode(grammarAccess.getTestEntityAccess().getExpressionAnnotatedJsonExpressionParserRuleCall_0_0_1());
                  					
                }
                pushFollow(FollowSets000.FOLLOW_2);
                lv_expression_0_2=ruleAnnotatedJsonExpression();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }


        }


        }


        }
    }
    // $ANTLR end synpred117_InternalScadeEquations

    // $ANTLR start synpred120_InternalScadeEquations
    public final void synpred120_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject this_VariableDeclaration_0 = null;


        // InternalScadeEquations.g:5167:3: (this_VariableDeclaration_0= ruleVariableDeclaration )
        // InternalScadeEquations.g:5167:3: this_VariableDeclaration_0= ruleVariableDeclaration
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_VariableDeclaration_0=ruleVariableDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred120_InternalScadeEquations

    // $ANTLR start synpred121_InternalScadeEquations
    public final void synpred121_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject this_ReferenceDeclaration_1 = null;


        // InternalScadeEquations.g:5179:3: (this_ReferenceDeclaration_1= ruleReferenceDeclaration )
        // InternalScadeEquations.g:5179:3: this_ReferenceDeclaration_1= ruleReferenceDeclaration
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ReferenceDeclaration_1=ruleReferenceDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred121_InternalScadeEquations

    // $ANTLR start synpred122_InternalScadeEquations
    public final void synpred122_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject this_ScheduleDeclaration_2 = null;


        // InternalScadeEquations.g:5191:3: (this_ScheduleDeclaration_2= ruleScheduleDeclaration )
        // InternalScadeEquations.g:5191:3: this_ScheduleDeclaration_2= ruleScheduleDeclaration
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ScheduleDeclaration_2=ruleScheduleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred122_InternalScadeEquations

    // $ANTLR start synpred123_InternalScadeEquations
    public final void synpred123_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject this_VariableDeclarationWOSemicolon_0 = null;


        // InternalScadeEquations.g:5233:3: (this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon )
        // InternalScadeEquations.g:5233:3: this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_VariableDeclarationWOSemicolon_0=ruleVariableDeclarationWOSemicolon();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred123_InternalScadeEquations

    // $ANTLR start synpred124_InternalScadeEquations
    public final void synpred124_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject this_ReferenceDeclarationWOSemicolon_1 = null;


        // InternalScadeEquations.g:5245:3: (this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon )
        // InternalScadeEquations.g:5245:3: this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ReferenceDeclarationWOSemicolon_1=ruleReferenceDeclarationWOSemicolon();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred124_InternalScadeEquations

    // $ANTLR start synpred125_InternalScadeEquations
    public final void synpred125_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject this_ScheduleDeclarationWOSemicolon_2 = null;


        // InternalScadeEquations.g:5257:3: (this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon )
        // InternalScadeEquations.g:5257:3: this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ScheduleDeclarationWOSemicolon_2=ruleScheduleDeclarationWOSemicolon();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred125_InternalScadeEquations

    // $ANTLR start synpred148_InternalScadeEquations
    public final void synpred148_InternalScadeEquations_fragment() throws RecognitionException {   
        Token otherlv_13=null;
        EObject lv_valuedObjects_14_0 = null;


        // InternalScadeEquations.g:5805:4: (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )
        // InternalScadeEquations.g:5805:4: otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) )
        {
        otherlv_13=(Token)match(input,18,FollowSets000.FOLLOW_35); if (state.failed) return ;
        // InternalScadeEquations.g:5809:4: ( (lv_valuedObjects_14_0= ruleValuedObject ) )
        // InternalScadeEquations.g:5810:5: (lv_valuedObjects_14_0= ruleValuedObject )
        {
        // InternalScadeEquations.g:5810:5: (lv_valuedObjects_14_0= ruleValuedObject )
        // InternalScadeEquations.g:5811:6: lv_valuedObjects_14_0= ruleValuedObject
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_9_1_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_valuedObjects_14_0=ruleValuedObject();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred148_InternalScadeEquations

    // $ANTLR start synpred166_InternalScadeEquations
    public final void synpred166_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject this_Declaration_0 = null;


        // InternalScadeEquations.g:6224:3: (this_Declaration_0= ruleDeclaration )
        // InternalScadeEquations.g:6224:3: this_Declaration_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Declaration_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred166_InternalScadeEquations

    // $ANTLR start synpred181_InternalScadeEquations
    public final void synpred181_InternalScadeEquations_fragment() throws RecognitionException {   
        Token otherlv_20=null;
        EObject lv_valuedObjects_19_0 = null;

        EObject lv_valuedObjects_21_0 = null;


        // InternalScadeEquations.g:6536:4: ( ( (lv_valuedObjects_19_0= ruleValuedObject ) ) (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )* )
        // InternalScadeEquations.g:6536:4: ( (lv_valuedObjects_19_0= ruleValuedObject ) ) (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )*
        {
        // InternalScadeEquations.g:6536:4: ( (lv_valuedObjects_19_0= ruleValuedObject ) )
        // InternalScadeEquations.g:6537:5: (lv_valuedObjects_19_0= ruleValuedObject )
        {
        // InternalScadeEquations.g:6537:5: (lv_valuedObjects_19_0= ruleValuedObject )
        // InternalScadeEquations.g:6538:6: lv_valuedObjects_19_0= ruleValuedObject
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_10_0_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_135);
        lv_valuedObjects_19_0=ruleValuedObject();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalScadeEquations.g:6555:4: (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )*
        loop348:
        do {
            int alt348=2;
            int LA348_0 = input.LA(1);

            if ( (LA348_0==18) ) {
                alt348=1;
            }


            switch (alt348) {
        	case 1 :
        	    // InternalScadeEquations.g:6556:5: otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) )
        	    {
        	    otherlv_20=(Token)match(input,18,FollowSets000.FOLLOW_35); if (state.failed) return ;
        	    // InternalScadeEquations.g:6560:5: ( (lv_valuedObjects_21_0= ruleValuedObject ) )
        	    // InternalScadeEquations.g:6561:6: (lv_valuedObjects_21_0= ruleValuedObject )
        	    {
        	    // InternalScadeEquations.g:6561:6: (lv_valuedObjects_21_0= ruleValuedObject )
        	    // InternalScadeEquations.g:6562:7: lv_valuedObjects_21_0= ruleValuedObject
        	    {
        	    if ( state.backtracking==0 ) {

        	      							newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_10_1_1_0());
        	      						
        	    }
        	    pushFollow(FollowSets000.FOLLOW_135);
        	    lv_valuedObjects_21_0=ruleValuedObject();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop348;
            }
        } while (true);


        }
    }
    // $ANTLR end synpred181_InternalScadeEquations

    // $ANTLR start synpred183_InternalScadeEquations
    public final void synpred183_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject this_DeclarationWOSemicolon_0 = null;


        // InternalScadeEquations.g:6619:3: (this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon )
        // InternalScadeEquations.g:6619:3: this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_DeclarationWOSemicolon_0=ruleDeclarationWOSemicolon();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred183_InternalScadeEquations

    // $ANTLR start synpred184_InternalScadeEquations
    public final void synpred184_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject lv_annotations_1_0 = null;


        // InternalScadeEquations.g:6672:4: ( (lv_annotations_1_0= ruleAnnotation ) )
        // InternalScadeEquations.g:6672:4: (lv_annotations_1_0= ruleAnnotation )
        {
        // InternalScadeEquations.g:6672:4: (lv_annotations_1_0= ruleAnnotation )
        // InternalScadeEquations.g:6673:5: lv_annotations_1_0= ruleAnnotation
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getMethodDeclarationAccess().getAnnotationsAnnotationParserRuleCall_1_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_annotations_1_0=ruleAnnotation();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred184_InternalScadeEquations

    // $ANTLR start synpred192_InternalScadeEquations
    public final void synpred192_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject lv_annotations_1_0 = null;


        // InternalScadeEquations.g:6886:4: ( (lv_annotations_1_0= ruleAnnotation ) )
        // InternalScadeEquations.g:6886:4: (lv_annotations_1_0= ruleAnnotation )
        {
        // InternalScadeEquations.g:6886:4: (lv_annotations_1_0= ruleAnnotation )
        // InternalScadeEquations.g:6887:5: lv_annotations_1_0= ruleAnnotation
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_1_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_annotations_1_0=ruleAnnotation();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred192_InternalScadeEquations

    // $ANTLR start synpred236_InternalScadeEquations
    public final void synpred236_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject this_Assignment_0 = null;


        // InternalScadeEquations.g:8250:3: (this_Assignment_0= ruleAssignment )
        // InternalScadeEquations.g:8250:3: this_Assignment_0= ruleAssignment
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Assignment_0=ruleAssignment();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred236_InternalScadeEquations

    // $ANTLR start synpred237_InternalScadeEquations
    public final void synpred237_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject this_PostfixEffect_1 = null;


        // InternalScadeEquations.g:8262:3: (this_PostfixEffect_1= rulePostfixEffect )
        // InternalScadeEquations.g:8262:3: this_PostfixEffect_1= rulePostfixEffect
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_PostfixEffect_1=rulePostfixEffect();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred237_InternalScadeEquations

    // $ANTLR start synpred238_InternalScadeEquations
    public final void synpred238_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject this_ValuedEmission_2 = null;


        // InternalScadeEquations.g:8274:3: (this_ValuedEmission_2= ruleValuedEmission )
        // InternalScadeEquations.g:8274:3: this_ValuedEmission_2= ruleValuedEmission
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ValuedEmission_2=ruleValuedEmission();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred238_InternalScadeEquations

    // $ANTLR start synpred239_InternalScadeEquations
    public final void synpred239_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject this_HostcodeEffect_3 = null;


        // InternalScadeEquations.g:8286:3: (this_HostcodeEffect_3= ruleHostcodeEffect )
        // InternalScadeEquations.g:8286:3: this_HostcodeEffect_3= ruleHostcodeEffect
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_HostcodeEffect_3=ruleHostcodeEffect();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred239_InternalScadeEquations

    // $ANTLR start synpred240_InternalScadeEquations
    public final void synpred240_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject this_ReferenceCallEffect_4 = null;


        // InternalScadeEquations.g:8298:3: (this_ReferenceCallEffect_4= ruleReferenceCallEffect )
        // InternalScadeEquations.g:8298:3: this_ReferenceCallEffect_4= ruleReferenceCallEffect
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ReferenceCallEffect_4=ruleReferenceCallEffect();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred240_InternalScadeEquations

    // $ANTLR start synpred241_InternalScadeEquations
    public final void synpred241_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject this_FunctionCallEffect_5 = null;


        // InternalScadeEquations.g:8310:3: (this_FunctionCallEffect_5= ruleFunctionCallEffect )
        // InternalScadeEquations.g:8310:3: this_FunctionCallEffect_5= ruleFunctionCallEffect
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_FunctionCallEffect_5=ruleFunctionCallEffect();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred241_InternalScadeEquations

    // $ANTLR start synpred242_InternalScadeEquations
    public final void synpred242_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject this_PrintCallEffect_6 = null;


        // InternalScadeEquations.g:8322:3: (this_PrintCallEffect_6= rulePrintCallEffect )
        // InternalScadeEquations.g:8322:3: this_PrintCallEffect_6= rulePrintCallEffect
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_PrintCallEffect_6=rulePrintCallEffect();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred242_InternalScadeEquations

    // $ANTLR start synpred243_InternalScadeEquations
    public final void synpred243_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject this_RandomizeCallEffect_7 = null;


        // InternalScadeEquations.g:8334:3: (this_RandomizeCallEffect_7= ruleRandomizeCallEffect )
        // InternalScadeEquations.g:8334:3: this_RandomizeCallEffect_7= ruleRandomizeCallEffect
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_RandomizeCallEffect_7=ruleRandomizeCallEffect();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred243_InternalScadeEquations

    // $ANTLR start synpred274_InternalScadeEquations
    public final void synpred274_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject this_BoolExpression_0 = null;


        // InternalScadeEquations.g:9398:3: (this_BoolExpression_0= ruleBoolExpression )
        // InternalScadeEquations.g:9398:3: this_BoolExpression_0= ruleBoolExpression
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_BoolExpression_0=ruleBoolExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred274_InternalScadeEquations

    // $ANTLR start synpred280_InternalScadeEquations
    public final void synpred280_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject this_ValuedExpression_0 = null;


        // InternalScadeEquations.g:9734:3: (this_ValuedExpression_0= ruleValuedExpression )
        // InternalScadeEquations.g:9734:3: this_ValuedExpression_0= ruleValuedExpression
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ValuedExpression_0=ruleValuedExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred280_InternalScadeEquations

    // $ANTLR start synpred286_InternalScadeEquations
    public final void synpred286_InternalScadeEquations_fragment() throws RecognitionException {   
        Token otherlv_4=null;
        EObject lv_subExpressions_5_0 = null;


        // InternalScadeEquations.g:10133:6: (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )
        // InternalScadeEquations.g:10133:6: otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) )
        {
        otherlv_4=(Token)match(input,82,FollowSets000.FOLLOW_48); if (state.failed) return ;
        // InternalScadeEquations.g:10137:6: ( (lv_subExpressions_5_0= ruleProductExpression ) )
        // InternalScadeEquations.g:10138:7: (lv_subExpressions_5_0= ruleProductExpression )
        {
        // InternalScadeEquations.g:10138:7: (lv_subExpressions_5_0= ruleProductExpression )
        // InternalScadeEquations.g:10139:8: lv_subExpressions_5_0= ruleProductExpression
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getSumExpressionAccess().getSubExpressionsProductExpressionParserRuleCall_1_0_3_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_5_0=ruleProductExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred286_InternalScadeEquations

    // $ANTLR start synpred288_InternalScadeEquations
    public final void synpred288_InternalScadeEquations_fragment() throws RecognitionException {   
        Token otherlv_9=null;
        EObject lv_subExpressions_10_0 = null;


        // InternalScadeEquations.g:10209:6: (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )
        // InternalScadeEquations.g:10209:6: otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) )
        {
        otherlv_9=(Token)match(input,83,FollowSets000.FOLLOW_48); if (state.failed) return ;
        // InternalScadeEquations.g:10213:6: ( (lv_subExpressions_10_0= ruleProductExpression ) )
        // InternalScadeEquations.g:10214:7: (lv_subExpressions_10_0= ruleProductExpression )
        {
        // InternalScadeEquations.g:10214:7: (lv_subExpressions_10_0= ruleProductExpression )
        // InternalScadeEquations.g:10215:8: lv_subExpressions_10_0= ruleProductExpression
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getSumExpressionAccess().getSubExpressionsProductExpressionParserRuleCall_1_1_3_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_10_0=ruleProductExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred288_InternalScadeEquations

    // $ANTLR start synpred294_InternalScadeEquations
    public final void synpred294_InternalScadeEquations_fragment() throws RecognitionException {   
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject this_ValuedExpression_5 = null;


        // InternalScadeEquations.g:10302:3: ( (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' ) )
        // InternalScadeEquations.g:10302:3: (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' )
        {
        // InternalScadeEquations.g:10302:3: (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' )
        // InternalScadeEquations.g:10303:4: otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')'
        {
        otherlv_4=(Token)match(input,17,FollowSets000.FOLLOW_48); if (state.failed) return ;
        pushFollow(FollowSets000.FOLLOW_13);
        this_ValuedExpression_5=ruleValuedExpression();

        state._fsp--;
        if (state.failed) return ;
        otherlv_6=(Token)match(input,19,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred294_InternalScadeEquations

    // $ANTLR start synpred305_InternalScadeEquations
    public final void synpred305_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject this_BoolExpression_0 = null;


        // InternalScadeEquations.g:10967:3: (this_BoolExpression_0= ruleBoolExpression )
        // InternalScadeEquations.g:10967:3: this_BoolExpression_0= ruleBoolExpression
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_BoolExpression_0=ruleBoolExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred305_InternalScadeEquations

    // $ANTLR start synpred306_InternalScadeEquations
    public final void synpred306_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject this_ValuedExpression_1 = null;


        // InternalScadeEquations.g:10979:3: (this_ValuedExpression_1= ruleValuedExpression )
        // InternalScadeEquations.g:10979:3: this_ValuedExpression_1= ruleValuedExpression
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ValuedExpression_1=ruleValuedExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred306_InternalScadeEquations

    // $ANTLR start synpred320_InternalScadeEquations
    public final void synpred320_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject this_KeyStringValueAnnotation_1 = null;


        // InternalScadeEquations.g:11663:3: (this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation )
        // InternalScadeEquations.g:11663:3: this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_KeyStringValueAnnotation_1=ruleKeyStringValueAnnotation();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred320_InternalScadeEquations

    // Delegated rules

    public final boolean synpred121_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred121_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred90_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred90_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred239_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred239_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred286_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred286_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred306_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred306_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred116_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred116_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred123_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred123_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred41_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred41_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred81_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred81_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred242_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred242_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred240_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred240_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred274_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred274_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred14_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred14_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred148_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred148_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred77_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred77_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred280_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred280_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred320_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred320_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred125_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred125_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred79_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred79_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred113_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred113_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred236_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred236_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred288_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred288_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred184_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred184_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred54_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred54_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred243_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred243_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred305_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred305_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred120_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred120_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred238_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred238_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred122_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred122_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred88_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred88_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred117_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred117_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred42_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred42_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred241_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred241_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred192_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred192_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred55_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred55_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred15_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred15_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred294_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred294_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred109_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred109_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred124_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred124_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred237_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred237_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred166_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred166_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred181_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred181_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred183_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred183_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA4 dfa4 = new DFA4(this);
    protected DFA63 dfa63 = new DFA63(this);
    protected DFA64 dfa64 = new DFA64(this);
    protected DFA65 dfa65 = new DFA65(this);
    protected DFA72 dfa72 = new DFA72(this);
    protected DFA74 dfa74 = new DFA74(this);
    protected DFA86 dfa86 = new DFA86(this);
    protected DFA90 dfa90 = new DFA90(this);
    protected DFA94 dfa94 = new DFA94(this);
    protected DFA98 dfa98 = new DFA98(this);
    protected DFA101 dfa101 = new DFA101(this);
    protected DFA102 dfa102 = new DFA102(this);
    protected DFA123 dfa123 = new DFA123(this);
    protected DFA141 dfa141 = new DFA141(this);
    protected DFA156 dfa156 = new DFA156(this);
    protected DFA158 dfa158 = new DFA158(this);
    protected DFA173 dfa173 = new DFA173(this);
    protected DFA172 dfa172 = new DFA172(this);
    protected DFA211 dfa211 = new DFA211(this);
    protected DFA213 dfa213 = new DFA213(this);
    protected DFA216 dfa216 = new DFA216(this);
    protected DFA219 dfa219 = new DFA219(this);
    protected DFA222 dfa222 = new DFA222(this);
    protected DFA230 dfa230 = new DFA230(this);
    protected DFA237 dfa237 = new DFA237(this);
    protected DFA242 dfa242 = new DFA242(this);
    protected DFA248 dfa248 = new DFA248(this);
    protected DFA254 dfa254 = new DFA254(this);
    protected DFA255 dfa255 = new DFA255(this);
    protected DFA257 dfa257 = new DFA257(this);
    protected DFA268 dfa268 = new DFA268(this);
    protected DFA275 dfa275 = new DFA275(this);
    protected DFA276 dfa276 = new DFA276(this);
    protected DFA277 dfa277 = new DFA277(this);
    protected DFA278 dfa278 = new DFA278(this);
    protected DFA279 dfa279 = new DFA279(this);
    protected DFA280 dfa280 = new DFA280(this);
    static final String dfa_1s = "\6\uffff";
    static final String dfa_2s = "\1\4\1\uffff\2\22\2\uffff";
    static final String dfa_3s = "\1\21\1\uffff\2\124\2\uffff";
    static final String dfa_4s = "\1\uffff\1\1\2\uffff\1\3\1\2";
    static final String dfa_5s = "\6\uffff}>";
    static final String[] dfa_6s = {
            "\1\2\14\uffff\1\1",
            "",
            "\1\5\2\uffff\1\4\76\uffff\1\3",
            "\1\5\2\uffff\1\4\76\uffff\1\3",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA4 extends DFA {

        public DFA4(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 4;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "173:3: ( (otherlv_0= '(' ( (lv_references_1_0= ruleValuedObjectString ) ) otherlv_2= ',' ( (lv_references_3_0= ruleValuedObjectString ) ) (otherlv_4= ',' ( (lv_references_5_0= ruleValuedObjectString ) ) )* otherlv_6= ')' ) | ( ( (lv_references_7_0= ruleValuedObjectString ) ) otherlv_8= ',' ( (lv_references_9_0= ruleValuedObjectString ) ) (otherlv_10= ',' ( (lv_references_11_0= ruleValuedObjectString ) ) )* ) | ( (lv_references_12_0= ruleValuedObjectString ) ) )";
        }
    }
    static final String dfa_7s = "\104\uffff";
    static final String dfa_8s = "\1\1\103\uffff";
    static final String dfa_9s = "\1\4\77\uffff\1\0\3\uffff";
    static final String dfa_10s = "\1\172\77\uffff\1\0\3\uffff";
    static final String dfa_11s = "\1\uffff\1\2\101\uffff\1\1";
    static final String dfa_12s = "\100\uffff\1\0\3\uffff}>";
    static final String[] dfa_13s = {
            "\1\1\1\uffff\1\1\3\uffff\2\1\6\uffff\4\1\1\uffff\1\1\1\uffff\1\1\4\uffff\4\1\15\uffff\3\1\1\100\2\1\2\uffff\22\1\1\uffff\12\1\5\uffff\4\1\1\uffff\5\1\15\uffff\2\1\3\uffff\6\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[][] dfa_13 = unpackEncodedStringArray(dfa_13s);

    class DFA63 extends DFA {

        public DFA63(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 63;
            this.eot = dfa_7;
            this.eof = dfa_8;
            this.min = dfa_9;
            this.max = dfa_10;
            this.accept = dfa_11;
            this.special = dfa_12;
            this.transition = dfa_13;
        }
        public String getDescription() {
            return "()* loopback of 2995:5: (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleIntDivExpression ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA63_64 = input.LA(1);

                         
                        int index63_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_InternalScadeEquations()) ) {s = 67;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index63_64);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 63, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_14s = "\1\4\100\uffff\1\0\2\uffff";
    static final String dfa_15s = "\1\172\100\uffff\1\0\2\uffff";
    static final String dfa_16s = "\101\uffff\1\0\2\uffff}>";
    static final String[] dfa_17s = {
            "\1\1\1\uffff\1\1\3\uffff\2\1\6\uffff\4\1\1\uffff\1\1\1\uffff\1\1\4\uffff\4\1\15\uffff\4\1\1\101\1\1\2\uffff\22\1\1\uffff\12\1\5\uffff\4\1\1\uffff\5\1\15\uffff\2\1\3\uffff\6\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            ""
    };
    static final char[] dfa_14 = DFA.unpackEncodedStringToUnsignedChars(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final short[] dfa_16 = DFA.unpackEncodedString(dfa_16s);
    static final short[][] dfa_17 = unpackEncodedStringArray(dfa_17s);

    class DFA64 extends DFA {

        public DFA64(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 64;
            this.eot = dfa_7;
            this.eof = dfa_8;
            this.min = dfa_14;
            this.max = dfa_15;
            this.accept = dfa_11;
            this.special = dfa_16;
            this.transition = dfa_17;
        }
        public String getDescription() {
            return "()* loopback of 3071:5: (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleIntDivExpression ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA64_65 = input.LA(1);

                         
                        int index64_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalScadeEquations()) ) {s = 67;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index64_65);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 64, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_18s = "\1\4\101\uffff\1\0\1\uffff";
    static final String dfa_19s = "\1\172\101\uffff\1\0\1\uffff";
    static final String dfa_20s = "\102\uffff\1\0\1\uffff}>";
    static final String[] dfa_21s = {
            "\1\1\1\uffff\1\1\3\uffff\2\1\6\uffff\4\1\1\uffff\1\1\1\uffff\1\1\4\uffff\4\1\15\uffff\5\1\1\102\2\uffff\22\1\1\uffff\12\1\5\uffff\4\1\1\uffff\5\1\15\uffff\2\1\3\uffff\6\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            ""
    };
    static final char[] dfa_18 = DFA.unpackEncodedStringToUnsignedChars(dfa_18s);
    static final char[] dfa_19 = DFA.unpackEncodedStringToUnsignedChars(dfa_19s);
    static final short[] dfa_20 = DFA.unpackEncodedString(dfa_20s);
    static final short[][] dfa_21 = unpackEncodedStringArray(dfa_21s);

    class DFA65 extends DFA {

        public DFA65(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 65;
            this.eot = dfa_7;
            this.eof = dfa_8;
            this.min = dfa_18;
            this.max = dfa_19;
            this.accept = dfa_11;
            this.special = dfa_20;
            this.transition = dfa_21;
        }
        public String getDescription() {
            return "()* loopback of 3147:5: (otherlv_14= 'mod' ( (lv_subExpressions_15_0= ruleIntDivExpression ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA65_66 = input.LA(1);

                         
                        int index65_66 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred81_InternalScadeEquations()) ) {s = 67;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index65_66);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 65, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_22s = "\16\uffff";
    static final String dfa_23s = "\1\4\13\0\2\uffff";
    static final String dfa_24s = "\1\155\13\0\2\uffff";
    static final String dfa_25s = "\14\uffff\1\2\1\1";
    static final String dfa_26s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\2\uffff}>";
    static final String[] dfa_27s = {
            "\1\7\1\3\1\uffff\1\1\1\2\1\6\7\uffff\1\5\4\uffff\1\4\101\uffff\1\12\13\uffff\1\14\1\13\4\uffff\1\10\2\uffff\1\11",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_22 = DFA.unpackEncodedString(dfa_22s);
    static final char[] dfa_23 = DFA.unpackEncodedStringToUnsignedChars(dfa_23s);
    static final char[] dfa_24 = DFA.unpackEncodedStringToUnsignedChars(dfa_24s);
    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final short[] dfa_26 = DFA.unpackEncodedString(dfa_26s);
    static final short[][] dfa_27 = unpackEncodedStringArray(dfa_27s);

    class DFA72 extends DFA {

        public DFA72(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 72;
            this.eot = dfa_22;
            this.eof = dfa_22;
            this.min = dfa_23;
            this.max = dfa_24;
            this.accept = dfa_25;
            this.special = dfa_26;
            this.transition = dfa_27;
        }
        public String getDescription() {
            return "3487:2: ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleWhenOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) | this_CurrentExpression_4= ruleCurrentExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA72_1 = input.LA(1);

                         
                        int index72_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalScadeEquations()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index72_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA72_2 = input.LA(1);

                         
                        int index72_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalScadeEquations()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index72_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA72_3 = input.LA(1);

                         
                        int index72_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalScadeEquations()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index72_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA72_4 = input.LA(1);

                         
                        int index72_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalScadeEquations()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index72_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA72_5 = input.LA(1);

                         
                        int index72_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalScadeEquations()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index72_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA72_6 = input.LA(1);

                         
                        int index72_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalScadeEquations()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index72_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA72_7 = input.LA(1);

                         
                        int index72_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalScadeEquations()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index72_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA72_8 = input.LA(1);

                         
                        int index72_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalScadeEquations()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index72_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA72_9 = input.LA(1);

                         
                        int index72_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalScadeEquations()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index72_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA72_10 = input.LA(1);

                         
                        int index72_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalScadeEquations()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index72_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA72_11 = input.LA(1);

                         
                        int index72_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalScadeEquations()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index72_11);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 72, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_28s = "\15\uffff";
    static final String dfa_29s = "\1\4\1\0\13\uffff";
    static final String dfa_30s = "\1\155\1\0\13\uffff";
    static final String dfa_31s = "\2\uffff\1\2\11\uffff\1\1";
    static final String dfa_32s = "\1\uffff\1\0\13\uffff}>";
    static final String[] dfa_33s = {
            "\2\2\1\uffff\3\2\7\uffff\1\2\4\uffff\1\2\101\uffff\1\2\14\uffff\1\2\4\uffff\1\1\2\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_28 = DFA.unpackEncodedString(dfa_28s);
    static final char[] dfa_29 = DFA.unpackEncodedStringToUnsignedChars(dfa_29s);
    static final char[] dfa_30 = DFA.unpackEncodedStringToUnsignedChars(dfa_30s);
    static final short[] dfa_31 = DFA.unpackEncodedString(dfa_31s);
    static final short[] dfa_32 = DFA.unpackEncodedString(dfa_32s);
    static final short[][] dfa_33 = unpackEncodedStringArray(dfa_33s);

    class DFA74 extends DFA {

        public DFA74(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 74;
            this.eot = dfa_28;
            this.eof = dfa_28;
            this.min = dfa_29;
            this.max = dfa_30;
            this.accept = dfa_31;
            this.special = dfa_32;
            this.transition = dfa_33;
        }
        public String getDescription() {
            return "3668:2: ( ( () ( (lv_operator_1_0= rulePreOperator ) ) ( (lv_subExpressions_2_0= ruleAtomicValuedExpression ) ) ) | this_AtomicValuedExpression_3= ruleAtomicValuedExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA74_1 = input.LA(1);

                         
                        int index74_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalScadeEquations()) ) {s = 12;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index74_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 74, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_34s = "\10\uffff";
    static final String dfa_35s = "\3\uffff\1\4\2\uffff\1\4\1\uffff";
    static final String dfa_36s = "\1\4\2\uffff\1\4\2\uffff\1\4\1\uffff";
    static final String dfa_37s = "\1\155\2\uffff\1\172\2\uffff\1\172\1\uffff";
    static final String dfa_38s = "\1\uffff\1\1\1\2\1\uffff\1\4\1\5\1\uffff\1\3";
    static final String dfa_39s = "\10\uffff}>";
    static final String[] dfa_40s = {
            "\1\3\4\uffff\1\1\7\uffff\1\2\106\uffff\1\5\14\uffff\1\5\4\uffff\1\4\2\uffff\1\4",
            "",
            "",
            "\1\4\1\uffff\1\4\3\uffff\2\4\5\uffff\1\7\4\4\1\uffff\1\4\1\uffff\1\4\2\uffff\1\7\1\uffff\4\4\3\uffff\1\7\11\uffff\32\4\1\7\12\4\1\6\4\uffff\4\4\1\uffff\5\4\15\uffff\2\4\3\uffff\6\4",
            "",
            "",
            "\1\4\1\uffff\1\4\3\uffff\2\4\5\uffff\1\7\4\4\1\uffff\1\4\1\uffff\1\4\2\uffff\1\7\1\uffff\4\4\3\uffff\1\7\11\uffff\32\4\1\7\12\4\1\6\4\uffff\4\4\1\uffff\5\4\15\uffff\2\4\3\uffff\6\4",
            ""
    };

    static final short[] dfa_34 = DFA.unpackEncodedString(dfa_34s);
    static final short[] dfa_35 = DFA.unpackEncodedString(dfa_35s);
    static final char[] dfa_36 = DFA.unpackEncodedStringToUnsignedChars(dfa_36s);
    static final char[] dfa_37 = DFA.unpackEncodedStringToUnsignedChars(dfa_37s);
    static final short[] dfa_38 = DFA.unpackEncodedString(dfa_38s);
    static final short[] dfa_39 = DFA.unpackEncodedString(dfa_39s);
    static final short[][] dfa_40 = unpackEncodedStringArray(dfa_40s);

    class DFA86 extends DFA {

        public DFA86(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 86;
            this.eot = dfa_34;
            this.eof = dfa_35;
            this.min = dfa_36;
            this.max = dfa_37;
            this.accept = dfa_38;
            this.special = dfa_39;
            this.transition = dfa_40;
        }
        public String getDescription() {
            return "4467:2: (this_BoolValue_0= ruleBoolValue | (otherlv_1= '(' this_BoolExpression_2= ruleBoolExpression otherlv_3= ')' ) | this_ReferenceCall_4= ruleReferenceCall | this_ValuedObjectTestExpression_5= ruleValuedObjectTestExpression | this_NorAtMostOneExpression_6= ruleNorAtMostOneExpression )";
        }
    }
    static final String dfa_41s = "\35\uffff";
    static final String dfa_42s = "\1\3\34\uffff";
    static final String dfa_43s = "\1\4\2\0\4\uffff\1\0\25\uffff";
    static final String dfa_44s = "\1\167\2\0\4\uffff\1\0\25\uffff";
    static final String dfa_45s = "\3\uffff\1\2\10\uffff\1\1\20\uffff";
    static final String dfa_46s = "\1\uffff\1\0\1\1\4\uffff\1\2\25\uffff}>";
    static final String[] dfa_47s = {
            "\1\3\1\uffff\1\3\3\uffff\1\1\16\uffff\1\7\7\uffff\1\14\34\uffff\3\3\10\14\4\uffff\2\3\12\uffff\1\2\3\14\23\uffff\2\14\3\uffff\3\14",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_41 = DFA.unpackEncodedString(dfa_41s);
    static final short[] dfa_42 = DFA.unpackEncodedString(dfa_42s);
    static final char[] dfa_43 = DFA.unpackEncodedStringToUnsignedChars(dfa_43s);
    static final char[] dfa_44 = DFA.unpackEncodedStringToUnsignedChars(dfa_44s);
    static final short[] dfa_45 = DFA.unpackEncodedString(dfa_45s);
    static final short[] dfa_46 = DFA.unpackEncodedString(dfa_46s);
    static final short[][] dfa_47 = unpackEncodedStringArray(dfa_47s);

    class DFA90 extends DFA {

        public DFA90(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 90;
            this.eot = dfa_41;
            this.eof = dfa_42;
            this.min = dfa_43;
            this.max = dfa_44;
            this.accept = dfa_45;
            this.special = dfa_46;
            this.transition = dfa_47;
        }
        public String getDescription() {
            return "()* loopback of 4769:3: ( (lv_declarations_1_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA90_1 = input.LA(1);

                         
                        int index90_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred109_InternalScadeEquations()) ) {s = 12;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index90_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA90_2 = input.LA(1);

                         
                        int index90_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred109_InternalScadeEquations()) ) {s = 12;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index90_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA90_7 = input.LA(1);

                         
                        int index90_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred109_InternalScadeEquations()) ) {s = 12;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index90_7);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 90, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_48s = {
            "\1\3\1\uffff\1\3\3\uffff\1\1\14\uffff\1\3\1\uffff\1\7\7\uffff\1\14\34\uffff\3\3\10\14\4\uffff\2\3\12\uffff\1\2\3\14\23\uffff\2\14\3\uffff\3\14",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_48 = unpackEncodedStringArray(dfa_48s);

    class DFA94 extends DFA {

        public DFA94(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 94;
            this.eot = dfa_41;
            this.eof = dfa_41;
            this.min = dfa_43;
            this.max = dfa_44;
            this.accept = dfa_45;
            this.special = dfa_46;
            this.transition = dfa_48;
        }
        public String getDescription() {
            return "()* loopback of 4883:3: ( (lv_declarations_3_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA94_1 = input.LA(1);

                         
                        int index94_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred113_InternalScadeEquations()) ) {s = 12;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index94_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA94_2 = input.LA(1);

                         
                        int index94_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred113_InternalScadeEquations()) ) {s = 12;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index94_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA94_7 = input.LA(1);

                         
                        int index94_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred113_InternalScadeEquations()) ) {s = 12;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index94_7);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 94, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_49s = "\12\uffff";
    static final String dfa_50s = "\1\4\2\0\7\uffff";
    static final String dfa_51s = "\1\131\2\0\7\uffff";
    static final String dfa_52s = "\3\uffff\1\1\1\uffff\1\2\4\uffff";
    static final String dfa_53s = "\1\uffff\1\0\1\1\7\uffff}>";
    static final String[] dfa_54s = {
            "\1\5\1\uffff\1\5\3\uffff\1\1\16\uffff\1\5\45\uffff\2\3\14\uffff\2\5\12\uffff\1\2",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_49 = DFA.unpackEncodedString(dfa_49s);
    static final char[] dfa_50 = DFA.unpackEncodedStringToUnsignedChars(dfa_50s);
    static final char[] dfa_51 = DFA.unpackEncodedStringToUnsignedChars(dfa_51s);
    static final short[] dfa_52 = DFA.unpackEncodedString(dfa_52s);
    static final short[] dfa_53 = DFA.unpackEncodedString(dfa_53s);
    static final short[][] dfa_54 = unpackEncodedStringArray(dfa_54s);

    class DFA98 extends DFA {

        public DFA98(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 98;
            this.eot = dfa_49;
            this.eof = dfa_49;
            this.min = dfa_50;
            this.max = dfa_51;
            this.accept = dfa_52;
            this.special = dfa_53;
            this.transition = dfa_54;
        }
        public String getDescription() {
            return "4968:2: ( ( ( (lv_expression_0_1= ruleAnnotatedExpression | lv_expression_0_2= ruleAnnotatedJsonExpression ) ) ) | ( (lv_effect_1_0= ruleEffect ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA98_1 = input.LA(1);

                         
                        int index98_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred117_InternalScadeEquations()) ) {s = 3;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index98_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA98_2 = input.LA(1);

                         
                        int index98_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred117_InternalScadeEquations()) ) {s = 3;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index98_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 98, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_55s = "\25\uffff";
    static final String dfa_56s = "\1\12\12\0\4\uffff\1\0\5\uffff";
    static final String dfa_57s = "\1\167\12\0\4\uffff\1\0\5\uffff";
    static final String dfa_58s = "\13\uffff\1\1\4\uffff\1\2\1\uffff\1\3\1\4\1\uffff";
    static final String dfa_59s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\4\uffff\1\12\5\uffff}>";
    static final String[] dfa_60s = {
            "\1\1\16\uffff\1\20\7\uffff\1\6\37\uffff\1\7\1\10\1\11\1\12\1\13\1\17\1\22\1\20\20\uffff\1\2\3\13\23\uffff\2\23\3\uffff\1\3\1\4\1\5",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_55 = DFA.unpackEncodedString(dfa_55s);
    static final char[] dfa_56 = DFA.unpackEncodedStringToUnsignedChars(dfa_56s);
    static final char[] dfa_57 = DFA.unpackEncodedStringToUnsignedChars(dfa_57s);
    static final short[] dfa_58 = DFA.unpackEncodedString(dfa_58s);
    static final short[] dfa_59 = DFA.unpackEncodedString(dfa_59s);
    static final short[][] dfa_60 = unpackEncodedStringArray(dfa_60s);

    class DFA101 extends DFA {

        public DFA101(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 101;
            this.eot = dfa_55;
            this.eof = dfa_55;
            this.min = dfa_56;
            this.max = dfa_57;
            this.accept = dfa_58;
            this.special = dfa_59;
            this.transition = dfa_60;
        }
        public String getDescription() {
            return "5166:2: (this_VariableDeclaration_0= ruleVariableDeclaration | this_ReferenceDeclaration_1= ruleReferenceDeclaration | this_ScheduleDeclaration_2= ruleScheduleDeclaration | this_ClassDeclaration_3= ruleClassDeclaration )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA101_1 = input.LA(1);

                         
                        int index101_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred120_InternalScadeEquations()) ) {s = 11;}

                        else if ( (synpred121_InternalScadeEquations()) ) {s = 16;}

                        else if ( (synpred122_InternalScadeEquations()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index101_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA101_2 = input.LA(1);

                         
                        int index101_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred120_InternalScadeEquations()) ) {s = 11;}

                        else if ( (synpred121_InternalScadeEquations()) ) {s = 16;}

                        else if ( (synpred122_InternalScadeEquations()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index101_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA101_3 = input.LA(1);

                         
                        int index101_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred120_InternalScadeEquations()) ) {s = 11;}

                        else if ( (synpred121_InternalScadeEquations()) ) {s = 16;}

                        else if ( (synpred122_InternalScadeEquations()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index101_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA101_4 = input.LA(1);

                         
                        int index101_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred120_InternalScadeEquations()) ) {s = 11;}

                        else if ( (synpred121_InternalScadeEquations()) ) {s = 16;}

                        else if ( (synpred122_InternalScadeEquations()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index101_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA101_5 = input.LA(1);

                         
                        int index101_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred120_InternalScadeEquations()) ) {s = 11;}

                        else if ( (synpred121_InternalScadeEquations()) ) {s = 16;}

                        else if ( (synpred122_InternalScadeEquations()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index101_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA101_6 = input.LA(1);

                         
                        int index101_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred120_InternalScadeEquations()) ) {s = 11;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index101_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA101_7 = input.LA(1);

                         
                        int index101_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred120_InternalScadeEquations()) ) {s = 11;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index101_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA101_8 = input.LA(1);

                         
                        int index101_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred120_InternalScadeEquations()) ) {s = 11;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index101_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA101_9 = input.LA(1);

                         
                        int index101_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred120_InternalScadeEquations()) ) {s = 11;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index101_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA101_10 = input.LA(1);

                         
                        int index101_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred120_InternalScadeEquations()) ) {s = 11;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index101_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA101_15 = input.LA(1);

                         
                        int index101_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred120_InternalScadeEquations()) ) {s = 11;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index101_15);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 101, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA102 extends DFA {

        public DFA102(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 102;
            this.eot = dfa_55;
            this.eof = dfa_55;
            this.min = dfa_56;
            this.max = dfa_57;
            this.accept = dfa_58;
            this.special = dfa_59;
            this.transition = dfa_60;
        }
        public String getDescription() {
            return "5232:2: (this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon | this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon | this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon | this_ClassDeclarationWOSemicolon_3= ruleClassDeclarationWOSemicolon )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA102_1 = input.LA(1);

                         
                        int index102_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalScadeEquations()) ) {s = 11;}

                        else if ( (synpred124_InternalScadeEquations()) ) {s = 16;}

                        else if ( (synpred125_InternalScadeEquations()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index102_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA102_2 = input.LA(1);

                         
                        int index102_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalScadeEquations()) ) {s = 11;}

                        else if ( (synpred124_InternalScadeEquations()) ) {s = 16;}

                        else if ( (synpred125_InternalScadeEquations()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index102_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA102_3 = input.LA(1);

                         
                        int index102_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalScadeEquations()) ) {s = 11;}

                        else if ( (synpred124_InternalScadeEquations()) ) {s = 16;}

                        else if ( (synpred125_InternalScadeEquations()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index102_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA102_4 = input.LA(1);

                         
                        int index102_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalScadeEquations()) ) {s = 11;}

                        else if ( (synpred124_InternalScadeEquations()) ) {s = 16;}

                        else if ( (synpred125_InternalScadeEquations()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index102_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA102_5 = input.LA(1);

                         
                        int index102_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalScadeEquations()) ) {s = 11;}

                        else if ( (synpred124_InternalScadeEquations()) ) {s = 16;}

                        else if ( (synpred125_InternalScadeEquations()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index102_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA102_6 = input.LA(1);

                         
                        int index102_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalScadeEquations()) ) {s = 11;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index102_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA102_7 = input.LA(1);

                         
                        int index102_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalScadeEquations()) ) {s = 11;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index102_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA102_8 = input.LA(1);

                         
                        int index102_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalScadeEquations()) ) {s = 11;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index102_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA102_9 = input.LA(1);

                         
                        int index102_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalScadeEquations()) ) {s = 11;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index102_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA102_10 = input.LA(1);

                         
                        int index102_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalScadeEquations()) ) {s = 11;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index102_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA102_15 = input.LA(1);

                         
                        int index102_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalScadeEquations()) ) {s = 11;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index102_15);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 102, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_61s = "\37\uffff";
    static final String dfa_62s = "\1\1\36\uffff";
    static final String dfa_63s = "\1\4\33\uffff\1\0\2\uffff";
    static final String dfa_64s = "\1\172\33\uffff\1\0\2\uffff";
    static final String dfa_65s = "\1\uffff\1\2\34\uffff\1\1";
    static final String dfa_66s = "\34\uffff\1\0\2\uffff}>";
    static final String[] dfa_67s = {
            "\1\1\5\uffff\2\1\6\uffff\1\34\1\1\3\uffff\1\1\1\uffff\1\1\7\uffff\1\1\37\uffff\10\1\20\uffff\4\1\23\uffff\2\1\3\uffff\6\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_61 = DFA.unpackEncodedString(dfa_61s);
    static final short[] dfa_62 = DFA.unpackEncodedString(dfa_62s);
    static final char[] dfa_63 = DFA.unpackEncodedStringToUnsignedChars(dfa_63s);
    static final char[] dfa_64 = DFA.unpackEncodedStringToUnsignedChars(dfa_64s);
    static final short[] dfa_65 = DFA.unpackEncodedString(dfa_65s);
    static final short[] dfa_66 = DFA.unpackEncodedString(dfa_66s);
    static final short[][] dfa_67 = unpackEncodedStringArray(dfa_67s);

    class DFA123 extends DFA {

        public DFA123(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 123;
            this.eot = dfa_61;
            this.eof = dfa_62;
            this.min = dfa_63;
            this.max = dfa_64;
            this.accept = dfa_65;
            this.special = dfa_66;
            this.transition = dfa_67;
        }
        public String getDescription() {
            return "()* loopback of 5804:3: (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA123_28 = input.LA(1);

                         
                        int index123_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred148_InternalScadeEquations()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index123_28);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 123, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_68s = "\31\uffff";
    static final String dfa_69s = "\1\4\5\0\6\uffff\2\0\13\uffff";
    static final String dfa_70s = "\1\172\5\0\6\uffff\2\0\13\uffff";
    static final String dfa_71s = "\6\uffff\1\1\16\uffff\1\2\3\uffff";
    static final String dfa_72s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\6\uffff\1\5\1\6\13\uffff}>";
    static final String[] dfa_73s = {
            "\1\25\5\uffff\1\1\16\uffff\1\6\7\uffff\1\6\37\uffff\10\6\20\uffff\1\2\1\14\1\15\1\6\23\uffff\2\6\3\uffff\1\3\1\4\1\5\3\25",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_68 = DFA.unpackEncodedString(dfa_68s);
    static final char[] dfa_69 = DFA.unpackEncodedStringToUnsignedChars(dfa_69s);
    static final char[] dfa_70 = DFA.unpackEncodedStringToUnsignedChars(dfa_70s);
    static final short[] dfa_71 = DFA.unpackEncodedString(dfa_71s);
    static final short[] dfa_72 = DFA.unpackEncodedString(dfa_72s);
    static final short[][] dfa_73 = unpackEncodedStringArray(dfa_73s);

    class DFA141 extends DFA {

        public DFA141(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 141;
            this.eot = dfa_68;
            this.eof = dfa_68;
            this.min = dfa_69;
            this.max = dfa_70;
            this.accept = dfa_71;
            this.special = dfa_72;
            this.transition = dfa_73;
        }
        public String getDescription() {
            return "6223:2: (this_Declaration_0= ruleDeclaration | this_MethodDeclaration_1= ruleMethodDeclaration )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA141_1 = input.LA(1);

                         
                        int index141_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred166_InternalScadeEquations()) ) {s = 6;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index141_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA141_2 = input.LA(1);

                         
                        int index141_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred166_InternalScadeEquations()) ) {s = 6;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index141_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA141_3 = input.LA(1);

                         
                        int index141_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred166_InternalScadeEquations()) ) {s = 6;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index141_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA141_4 = input.LA(1);

                         
                        int index141_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred166_InternalScadeEquations()) ) {s = 6;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index141_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA141_5 = input.LA(1);

                         
                        int index141_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred166_InternalScadeEquations()) ) {s = 6;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index141_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA141_12 = input.LA(1);

                         
                        int index141_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred166_InternalScadeEquations()) ) {s = 6;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index141_12);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA141_13 = input.LA(1);

                         
                        int index141_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred166_InternalScadeEquations()) ) {s = 6;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index141_13);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 141, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_74s = "\1\4\34\uffff";
    static final String dfa_75s = "\1\4\3\0\31\uffff";
    static final String dfa_76s = "\1\172\3\0\31\uffff";
    static final String dfa_77s = "\4\uffff\1\2\27\uffff\1\1";
    static final String dfa_78s = "\1\uffff\1\0\1\1\1\2\31\uffff}>";
    static final String[] dfa_79s = {
            "\1\3\5\uffff\1\1\1\4\13\uffff\1\4\1\uffff\1\4\7\uffff\1\4\37\uffff\10\4\20\uffff\1\2\3\4\23\uffff\2\4\3\uffff\6\4",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_74 = DFA.unpackEncodedString(dfa_74s);
    static final char[] dfa_75 = DFA.unpackEncodedStringToUnsignedChars(dfa_75s);
    static final char[] dfa_76 = DFA.unpackEncodedStringToUnsignedChars(dfa_76s);
    static final short[] dfa_77 = DFA.unpackEncodedString(dfa_77s);
    static final short[] dfa_78 = DFA.unpackEncodedString(dfa_78s);
    static final short[][] dfa_79 = unpackEncodedStringArray(dfa_79s);

    class DFA156 extends DFA {

        public DFA156(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 156;
            this.eot = dfa_41;
            this.eof = dfa_74;
            this.min = dfa_75;
            this.max = dfa_76;
            this.accept = dfa_77;
            this.special = dfa_78;
            this.transition = dfa_79;
        }
        public String getDescription() {
            return "6535:3: ( ( (lv_valuedObjects_19_0= ruleValuedObject ) ) (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )* )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA156_1 = input.LA(1);

                         
                        int index156_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred181_InternalScadeEquations()) ) {s = 28;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index156_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA156_2 = input.LA(1);

                         
                        int index156_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred181_InternalScadeEquations()) ) {s = 28;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index156_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA156_3 = input.LA(1);

                         
                        int index156_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred181_InternalScadeEquations()) ) {s = 28;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index156_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 156, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA158 extends DFA {

        public DFA158(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 158;
            this.eot = dfa_68;
            this.eof = dfa_68;
            this.min = dfa_69;
            this.max = dfa_70;
            this.accept = dfa_71;
            this.special = dfa_72;
            this.transition = dfa_73;
        }
        public String getDescription() {
            return "6618:2: (this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon | this_MethodDeclarationWOSemicolon_1= ruleMethodDeclarationWOSemicolon )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA158_1 = input.LA(1);

                         
                        int index158_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred183_InternalScadeEquations()) ) {s = 6;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index158_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA158_2 = input.LA(1);

                         
                        int index158_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred183_InternalScadeEquations()) ) {s = 6;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index158_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA158_3 = input.LA(1);

                         
                        int index158_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred183_InternalScadeEquations()) ) {s = 6;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index158_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA158_4 = input.LA(1);

                         
                        int index158_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred183_InternalScadeEquations()) ) {s = 6;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index158_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA158_5 = input.LA(1);

                         
                        int index158_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred183_InternalScadeEquations()) ) {s = 6;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index158_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA158_12 = input.LA(1);

                         
                        int index158_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred183_InternalScadeEquations()) ) {s = 6;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index158_12);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA158_13 = input.LA(1);

                         
                        int index158_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred183_InternalScadeEquations()) ) {s = 6;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index158_13);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 158, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_80s = "\1\2\5\uffff";
    static final String dfa_81s = "\2\4\1\uffff\2\4\1\uffff";
    static final String dfa_82s = "\1\172\1\131\1\uffff\2\172\1\uffff";
    static final String dfa_83s = "\2\uffff\1\2\2\uffff\1\1";
    static final String[] dfa_84s = {
            "\1\2\5\uffff\2\2\13\uffff\1\2\1\uffff\1\2\7\uffff\1\2\37\uffff\6\2\1\1\1\2\20\uffff\4\2\23\uffff\2\2\3\uffff\6\2",
            "\1\3\1\2\4\uffff\1\2\13\uffff\1\2\54\uffff\1\2\25\uffff\1\2",
            "",
            "\1\2\2\uffff\1\5\2\uffff\2\2\6\uffff\1\2\2\uffff\1\2\1\uffff\1\2\1\uffff\1\2\7\uffff\1\2\37\uffff\11\2\1\uffff\2\2\7\uffff\1\4\4\uffff\4\2\23\uffff\2\2\3\uffff\6\2",
            "\1\2\2\uffff\1\5\2\uffff\2\2\6\uffff\1\2\2\uffff\1\2\1\uffff\1\2\1\uffff\1\2\7\uffff\1\2\37\uffff\11\2\1\uffff\2\2\7\uffff\1\4\4\uffff\4\2\23\uffff\2\2\3\uffff\6\2",
            ""
    };
    static final short[] dfa_80 = DFA.unpackEncodedString(dfa_80s);
    static final char[] dfa_81 = DFA.unpackEncodedStringToUnsignedChars(dfa_81s);
    static final char[] dfa_82 = DFA.unpackEncodedStringToUnsignedChars(dfa_82s);
    static final short[] dfa_83 = DFA.unpackEncodedString(dfa_83s);
    static final short[][] dfa_84 = unpackEncodedStringArray(dfa_84s);

    class DFA173 extends DFA {

        public DFA173(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 173;
            this.eot = dfa_1;
            this.eof = dfa_80;
            this.min = dfa_81;
            this.max = dfa_82;
            this.accept = dfa_83;
            this.special = dfa_5;
            this.transition = dfa_84;
        }
        public String getDescription() {
            return "7022:3: (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )?";
        }
    }
    static final String dfa_85s = "\5\uffff";
    static final String dfa_86s = "\1\1\4\uffff";
    static final String dfa_87s = "\1\4\1\uffff\2\7\1\uffff";
    static final String dfa_88s = "\1\172\1\uffff\2\124\1\uffff";
    static final String dfa_89s = "\1\uffff\1\2\2\uffff\1\1";
    static final String dfa_90s = "\5\uffff}>";
    static final String[] dfa_91s = {
            "\1\2\5\uffff\2\1\13\uffff\1\1\1\uffff\1\1\7\uffff\1\1\37\uffff\10\1\20\uffff\4\1\23\uffff\2\1\3\uffff\6\1",
            "",
            "\1\4\11\uffff\1\1\12\uffff\1\1\67\uffff\1\3",
            "\1\4\11\uffff\1\1\12\uffff\1\1\67\uffff\1\3",
            ""
    };

    static final short[] dfa_85 = DFA.unpackEncodedString(dfa_85s);
    static final short[] dfa_86 = DFA.unpackEncodedString(dfa_86s);
    static final char[] dfa_87 = DFA.unpackEncodedStringToUnsignedChars(dfa_87s);
    static final char[] dfa_88 = DFA.unpackEncodedStringToUnsignedChars(dfa_88s);
    static final short[] dfa_89 = DFA.unpackEncodedString(dfa_89s);
    static final short[] dfa_90 = DFA.unpackEncodedString(dfa_90s);
    static final short[][] dfa_91 = unpackEncodedStringArray(dfa_91s);

    class DFA172 extends DFA {

        public DFA172(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 172;
            this.eot = dfa_85;
            this.eof = dfa_86;
            this.min = dfa_87;
            this.max = dfa_88;
            this.accept = dfa_89;
            this.special = dfa_90;
            this.transition = dfa_91;
        }
        public String getDescription() {
            return "()+ loopback of 7027:4: ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+";
        }
    }
    static final String dfa_92s = "\1\4\3\0\11\uffff";
    static final String dfa_93s = "\1\131\3\0\11\uffff";
    static final String dfa_94s = "\4\uffff\1\4\1\6\1\7\1\10\1\1\1\2\1\3\1\5\1\11";
    static final String dfa_95s = "\1\uffff\1\0\1\1\1\2\11\uffff}>";
    static final String[] dfa_96s = {
            "\1\3\1\uffff\1\4\3\uffff\1\1\16\uffff\1\5\63\uffff\1\6\1\7\12\uffff\1\2",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_92 = DFA.unpackEncodedStringToUnsignedChars(dfa_92s);
    static final char[] dfa_93 = DFA.unpackEncodedStringToUnsignedChars(dfa_93s);
    static final short[] dfa_94 = DFA.unpackEncodedString(dfa_94s);
    static final short[] dfa_95 = DFA.unpackEncodedString(dfa_95s);
    static final short[][] dfa_96 = unpackEncodedStringArray(dfa_96s);

    class DFA211 extends DFA {

        public DFA211(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 211;
            this.eot = dfa_28;
            this.eof = dfa_28;
            this.min = dfa_92;
            this.max = dfa_93;
            this.accept = dfa_94;
            this.special = dfa_95;
            this.transition = dfa_96;
        }
        public String getDescription() {
            return "8249:2: (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | this_ValuedEmission_2= ruleValuedEmission | this_HostcodeEffect_3= ruleHostcodeEffect | this_ReferenceCallEffect_4= ruleReferenceCallEffect | this_FunctionCallEffect_5= ruleFunctionCallEffect | this_PrintCallEffect_6= rulePrintCallEffect | this_RandomizeCallEffect_7= ruleRandomizeCallEffect | this_PureEmission_8= rulePureEmission )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA211_1 = input.LA(1);

                         
                        int index211_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred236_InternalScadeEquations()) ) {s = 8;}

                        else if ( (synpred237_InternalScadeEquations()) ) {s = 9;}

                        else if ( (synpred238_InternalScadeEquations()) ) {s = 10;}

                        else if ( (synpred239_InternalScadeEquations()) ) {s = 4;}

                        else if ( (synpred240_InternalScadeEquations()) ) {s = 11;}

                        else if ( (synpred241_InternalScadeEquations()) ) {s = 5;}

                        else if ( (synpred242_InternalScadeEquations()) ) {s = 6;}

                        else if ( (synpred243_InternalScadeEquations()) ) {s = 7;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index211_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA211_2 = input.LA(1);

                         
                        int index211_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred236_InternalScadeEquations()) ) {s = 8;}

                        else if ( (synpred237_InternalScadeEquations()) ) {s = 9;}

                        else if ( (synpred238_InternalScadeEquations()) ) {s = 10;}

                        else if ( (synpred239_InternalScadeEquations()) ) {s = 4;}

                        else if ( (synpred240_InternalScadeEquations()) ) {s = 11;}

                        else if ( (synpred241_InternalScadeEquations()) ) {s = 5;}

                        else if ( (synpred242_InternalScadeEquations()) ) {s = 6;}

                        else if ( (synpred243_InternalScadeEquations()) ) {s = 7;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index211_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA211_3 = input.LA(1);

                         
                        int index211_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred236_InternalScadeEquations()) ) {s = 8;}

                        else if ( (synpred237_InternalScadeEquations()) ) {s = 9;}

                        else if ( (synpred238_InternalScadeEquations()) ) {s = 10;}

                        else if ( (synpred240_InternalScadeEquations()) ) {s = 11;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index211_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 211, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_97s = "\1\1\1\uffff\2\1\1\uffff";
    static final String dfa_98s = "\1\4\1\uffff\2\4\1\uffff";
    static final String dfa_99s = "\1\131\1\uffff\2\151\1\uffff";
    static final String[] dfa_100s = {
            "\1\2\1\uffff\1\1\3\uffff\1\1\11\uffff\1\1\2\uffff\1\1\1\uffff\1\1\44\uffff\3\1\14\uffff\2\1\12\uffff\1\1",
            "",
            "\1\1\1\uffff\1\1\1\4\2\uffff\1\1\6\uffff\1\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\2\uffff\1\1\10\uffff\1\1\30\uffff\3\1\6\uffff\1\1\1\uffff\1\1\3\uffff\2\1\5\uffff\1\3\4\uffff\1\1\16\uffff\2\1",
            "\1\1\1\uffff\1\1\1\4\2\uffff\1\1\6\uffff\1\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\2\uffff\1\1\10\uffff\1\1\30\uffff\3\1\6\uffff\1\1\1\uffff\1\1\3\uffff\2\1\5\uffff\1\3\4\uffff\1\1\16\uffff\2\1",
            ""
    };
    static final short[] dfa_97 = DFA.unpackEncodedString(dfa_97s);
    static final char[] dfa_98 = DFA.unpackEncodedStringToUnsignedChars(dfa_98s);
    static final char[] dfa_99 = DFA.unpackEncodedStringToUnsignedChars(dfa_99s);
    static final short[][] dfa_100 = unpackEncodedStringArray(dfa_100s);

    class DFA213 extends DFA {

        public DFA213(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 213;
            this.eot = dfa_85;
            this.eof = dfa_97;
            this.min = dfa_98;
            this.max = dfa_99;
            this.accept = dfa_89;
            this.special = dfa_90;
            this.transition = dfa_100;
        }
        public String getDescription() {
            return "()+ loopback of 8419:4: ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+";
        }
    }

    class DFA216 extends DFA {

        public DFA216(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 216;
            this.eot = dfa_85;
            this.eof = dfa_97;
            this.min = dfa_98;
            this.max = dfa_99;
            this.accept = dfa_89;
            this.special = dfa_90;
            this.transition = dfa_100;
        }
        public String getDescription() {
            return "()+ loopback of 8528:4: ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+";
        }
    }
    static final String[] dfa_101s = {
            "\1\2\1\uffff\1\1\3\uffff\1\1\14\uffff\1\1\1\uffff\1\1\44\uffff\3\1\14\uffff\2\1\12\uffff\1\1",
            "",
            "\1\1\1\uffff\1\1\1\4\2\uffff\1\1\6\uffff\1\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\2\uffff\1\1\10\uffff\1\1\30\uffff\3\1\6\uffff\1\1\1\uffff\1\1\3\uffff\2\1\5\uffff\1\3\4\uffff\1\1\16\uffff\2\1",
            "\1\1\1\uffff\1\1\1\4\2\uffff\1\1\6\uffff\1\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\2\uffff\1\1\10\uffff\1\1\30\uffff\3\1\6\uffff\1\1\1\uffff\1\1\3\uffff\2\1\5\uffff\1\3\4\uffff\1\1\16\uffff\2\1",
            ""
    };
    static final short[][] dfa_101 = unpackEncodedStringArray(dfa_101s);

    class DFA219 extends DFA {

        public DFA219(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 219;
            this.eot = dfa_85;
            this.eof = dfa_97;
            this.min = dfa_98;
            this.max = dfa_99;
            this.accept = dfa_89;
            this.special = dfa_90;
            this.transition = dfa_101;
        }
        public String getDescription() {
            return "()+ loopback of 8648:4: ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+";
        }
    }

    class DFA222 extends DFA {

        public DFA222(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 222;
            this.eot = dfa_85;
            this.eof = dfa_97;
            this.min = dfa_98;
            this.max = dfa_99;
            this.accept = dfa_89;
            this.special = dfa_90;
            this.transition = dfa_101;
        }
        public String getDescription() {
            return "()+ loopback of 8749:4: ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+";
        }
    }

    class DFA230 extends DFA {

        public DFA230(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 230;
            this.eot = dfa_85;
            this.eof = dfa_97;
            this.min = dfa_98;
            this.max = dfa_99;
            this.accept = dfa_89;
            this.special = dfa_90;
            this.transition = dfa_101;
        }
        public String getDescription() {
            return "()+ loopback of 9002:4: ( (lv_schedule_14_0= ruleScheduleObjectReference ) )+";
        }
    }

    class DFA237 extends DFA {

        public DFA237(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 237;
            this.eot = dfa_85;
            this.eof = dfa_97;
            this.min = dfa_98;
            this.max = dfa_99;
            this.accept = dfa_89;
            this.special = dfa_90;
            this.transition = dfa_101;
        }
        public String getDescription() {
            return "()+ loopback of 9246:4: ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+";
        }
    }
    static final String dfa_102s = "\21\uffff";
    static final String dfa_103s = "\1\4\1\uffff\15\0\2\uffff";
    static final String dfa_104s = "\1\155\1\uffff\15\0\2\uffff";
    static final String dfa_105s = "\1\uffff\1\1\16\uffff\1\2";
    static final String dfa_106s = "\2\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\2\uffff}>";
    static final String[] dfa_107s = {
            "\1\11\1\5\1\uffff\1\3\1\4\1\10\7\uffff\1\7\4\uffff\1\6\27\uffff\1\1\44\uffff\1\2\4\uffff\1\14\12\uffff\1\1\1\16\1\15\4\uffff\1\12\2\uffff\1\13",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_102 = DFA.unpackEncodedString(dfa_102s);
    static final char[] dfa_103 = DFA.unpackEncodedStringToUnsignedChars(dfa_103s);
    static final char[] dfa_104 = DFA.unpackEncodedStringToUnsignedChars(dfa_104s);
    static final short[] dfa_105 = DFA.unpackEncodedString(dfa_105s);
    static final short[] dfa_106 = DFA.unpackEncodedString(dfa_106s);
    static final short[][] dfa_107 = unpackEncodedStringArray(dfa_107s);

    class DFA242 extends DFA {

        public DFA242(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 242;
            this.eot = dfa_102;
            this.eof = dfa_102;
            this.min = dfa_103;
            this.max = dfa_104;
            this.accept = dfa_105;
            this.special = dfa_106;
            this.transition = dfa_107;
        }
        public String getDescription() {
            return "9397:2: (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA242_2 = input.LA(1);

                         
                        int index242_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalScadeEquations()) ) {s = 1;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index242_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA242_3 = input.LA(1);

                         
                        int index242_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalScadeEquations()) ) {s = 1;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index242_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA242_4 = input.LA(1);

                         
                        int index242_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalScadeEquations()) ) {s = 1;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index242_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA242_5 = input.LA(1);

                         
                        int index242_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalScadeEquations()) ) {s = 1;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index242_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA242_6 = input.LA(1);

                         
                        int index242_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalScadeEquations()) ) {s = 1;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index242_6);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA242_7 = input.LA(1);

                         
                        int index242_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalScadeEquations()) ) {s = 1;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index242_7);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA242_8 = input.LA(1);

                         
                        int index242_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalScadeEquations()) ) {s = 1;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index242_8);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA242_9 = input.LA(1);

                         
                        int index242_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalScadeEquations()) ) {s = 1;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index242_9);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA242_10 = input.LA(1);

                         
                        int index242_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalScadeEquations()) ) {s = 1;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index242_10);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA242_11 = input.LA(1);

                         
                        int index242_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalScadeEquations()) ) {s = 1;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index242_11);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA242_12 = input.LA(1);

                         
                        int index242_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalScadeEquations()) ) {s = 1;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index242_12);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA242_13 = input.LA(1);

                         
                        int index242_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalScadeEquations()) ) {s = 1;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index242_13);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA242_14 = input.LA(1);

                         
                        int index242_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalScadeEquations()) ) {s = 1;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index242_14);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 242, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_108s = "\17\uffff";
    static final String dfa_109s = "\1\4\5\uffff\7\0\2\uffff";
    static final String dfa_110s = "\1\155\5\uffff\7\0\2\uffff";
    static final String dfa_111s = "\1\uffff\1\1\14\uffff\1\2";
    static final String dfa_112s = "\6\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\2\uffff}>";
    static final String[] dfa_113s = {
            "\1\10\1\1\1\uffff\2\1\1\7\7\uffff\1\6\4\uffff\1\1\74\uffff\1\1\4\uffff\1\13\12\uffff\1\16\1\1\1\14\4\uffff\1\11\2\uffff\1\12",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_108 = DFA.unpackEncodedString(dfa_108s);
    static final char[] dfa_109 = DFA.unpackEncodedStringToUnsignedChars(dfa_109s);
    static final char[] dfa_110 = DFA.unpackEncodedStringToUnsignedChars(dfa_110s);
    static final short[] dfa_111 = DFA.unpackEncodedString(dfa_111s);
    static final short[] dfa_112 = DFA.unpackEncodedString(dfa_112s);
    static final short[][] dfa_113 = unpackEncodedStringArray(dfa_113s);

    class DFA248 extends DFA {

        public DFA248(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 248;
            this.eot = dfa_108;
            this.eof = dfa_108;
            this.min = dfa_109;
            this.max = dfa_110;
            this.accept = dfa_111;
            this.special = dfa_112;
            this.transition = dfa_113;
        }
        public String getDescription() {
            return "9733:2: (this_ValuedExpression_0= ruleValuedExpression | this_NotExpression_1= ruleNotExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA248_6 = input.LA(1);

                         
                        int index248_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred280_InternalScadeEquations()) ) {s = 1;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index248_6);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA248_7 = input.LA(1);

                         
                        int index248_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred280_InternalScadeEquations()) ) {s = 1;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index248_7);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA248_8 = input.LA(1);

                         
                        int index248_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred280_InternalScadeEquations()) ) {s = 1;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index248_8);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA248_9 = input.LA(1);

                         
                        int index248_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred280_InternalScadeEquations()) ) {s = 1;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index248_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA248_10 = input.LA(1);

                         
                        int index248_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred280_InternalScadeEquations()) ) {s = 1;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index248_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA248_11 = input.LA(1);

                         
                        int index248_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred280_InternalScadeEquations()) ) {s = 1;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index248_11);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA248_12 = input.LA(1);

                         
                        int index248_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred280_InternalScadeEquations()) ) {s = 1;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index248_12);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 248, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_114s = "\101\uffff";
    static final String dfa_115s = "\1\1\100\uffff";
    static final String dfa_116s = "\1\4\75\uffff\1\0\2\uffff";
    static final String dfa_117s = "\1\172\75\uffff\1\0\2\uffff";
    static final String dfa_118s = "\1\uffff\1\2\76\uffff\1\1";
    static final String dfa_119s = "\76\uffff\1\0\2\uffff}>";
    static final String[] dfa_120s = {
            "\1\1\1\uffff\1\1\3\uffff\2\1\6\uffff\4\1\1\uffff\1\1\1\uffff\1\1\4\uffff\4\1\15\uffff\3\1\5\uffff\22\1\1\uffff\10\1\1\76\1\1\5\uffff\4\1\1\uffff\5\1\15\uffff\2\1\3\uffff\6\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_114 = DFA.unpackEncodedString(dfa_114s);
    static final short[] dfa_115 = DFA.unpackEncodedString(dfa_115s);
    static final char[] dfa_116 = DFA.unpackEncodedStringToUnsignedChars(dfa_116s);
    static final char[] dfa_117 = DFA.unpackEncodedStringToUnsignedChars(dfa_117s);
    static final short[] dfa_118 = DFA.unpackEncodedString(dfa_118s);
    static final short[] dfa_119 = DFA.unpackEncodedString(dfa_119s);
    static final short[][] dfa_120 = unpackEncodedStringArray(dfa_120s);

    class DFA254 extends DFA {

        public DFA254(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 254;
            this.eot = dfa_114;
            this.eof = dfa_115;
            this.min = dfa_116;
            this.max = dfa_117;
            this.accept = dfa_118;
            this.special = dfa_119;
            this.transition = dfa_120;
        }
        public String getDescription() {
            return "()* loopback of 10132:5: (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA254_62 = input.LA(1);

                         
                        int index254_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred286_InternalScadeEquations()) ) {s = 64;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index254_62);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 254, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_121s = "\1\4\76\uffff\1\0\1\uffff";
    static final String dfa_122s = "\1\172\76\uffff\1\0\1\uffff";
    static final String dfa_123s = "\77\uffff\1\0\1\uffff}>";
    static final String[] dfa_124s = {
            "\1\1\1\uffff\1\1\3\uffff\2\1\6\uffff\4\1\1\uffff\1\1\1\uffff\1\1\4\uffff\4\1\15\uffff\3\1\5\uffff\22\1\1\uffff\11\1\1\77\5\uffff\4\1\1\uffff\5\1\15\uffff\2\1\3\uffff\6\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            ""
    };
    static final char[] dfa_121 = DFA.unpackEncodedStringToUnsignedChars(dfa_121s);
    static final char[] dfa_122 = DFA.unpackEncodedStringToUnsignedChars(dfa_122s);
    static final short[] dfa_123 = DFA.unpackEncodedString(dfa_123s);
    static final short[][] dfa_124 = unpackEncodedStringArray(dfa_124s);

    class DFA255 extends DFA {

        public DFA255(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 255;
            this.eot = dfa_114;
            this.eof = dfa_115;
            this.min = dfa_121;
            this.max = dfa_122;
            this.accept = dfa_118;
            this.special = dfa_123;
            this.transition = dfa_124;
        }
        public String getDescription() {
            return "()* loopback of 10208:5: (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA255_63 = input.LA(1);

                         
                        int index255_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalScadeEquations()) ) {s = 64;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index255_63);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 255, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_125s = "\1\4\4\uffff\1\0\7\uffff";
    static final String dfa_126s = "\1\155\4\uffff\1\0\7\uffff";
    static final String dfa_127s = "\1\uffff\1\1\1\2\1\3\1\4\1\uffff\1\6\5\uffff\1\5";
    static final String dfa_128s = "\5\uffff\1\0\7\uffff}>";
    static final String[] dfa_129s = {
            "\1\6\1\3\1\uffff\1\1\1\2\1\6\7\uffff\1\5\4\uffff\1\4\101\uffff\1\6\14\uffff\1\6\4\uffff\1\6\2\uffff\1\6",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_125 = DFA.unpackEncodedStringToUnsignedChars(dfa_125s);
    static final char[] dfa_126 = DFA.unpackEncodedStringToUnsignedChars(dfa_126s);
    static final short[] dfa_127 = DFA.unpackEncodedString(dfa_127s);
    static final short[] dfa_128 = DFA.unpackEncodedString(dfa_128s);
    static final short[][] dfa_129 = unpackEncodedStringArray(dfa_129s);

    class DFA257 extends DFA {

        public DFA257(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 257;
            this.eot = dfa_28;
            this.eof = dfa_28;
            this.min = dfa_125;
            this.max = dfa_126;
            this.accept = dfa_127;
            this.special = dfa_128;
            this.transition = dfa_129;
        }
        public String getDescription() {
            return "10253:2: (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_StringValue_2= ruleStringValue | this_VectorValue_3= ruleVectorValue | (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' ) | this_AtomicExpression_7= ruleAtomicExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA257_5 = input.LA(1);

                         
                        int index257_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalScadeEquations()) ) {s = 12;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index257_5);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 257, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_130s = "\22\uffff";
    static final String dfa_131s = "\1\4\1\uffff\15\0\3\uffff";
    static final String dfa_132s = "\1\155\1\uffff\15\0\3\uffff";
    static final String dfa_133s = "\1\uffff\1\1\16\uffff\1\3\1\2";
    static final String dfa_134s = "\2\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\3\uffff}>";
    static final String[] dfa_135s = {
            "\1\11\1\5\1\uffff\1\3\1\4\1\10\7\uffff\1\7\4\uffff\1\6\27\uffff\1\1\44\uffff\1\2\2\uffff\1\20\1\uffff\1\14\12\uffff\1\1\1\16\1\15\4\uffff\1\12\2\uffff\1\13",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_130 = DFA.unpackEncodedString(dfa_130s);
    static final char[] dfa_131 = DFA.unpackEncodedStringToUnsignedChars(dfa_131s);
    static final char[] dfa_132 = DFA.unpackEncodedStringToUnsignedChars(dfa_132s);
    static final short[] dfa_133 = DFA.unpackEncodedString(dfa_133s);
    static final short[] dfa_134 = DFA.unpackEncodedString(dfa_134s);
    static final short[][] dfa_135 = unpackEncodedStringArray(dfa_135s);

    class DFA268 extends DFA {

        public DFA268(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 268;
            this.eot = dfa_130;
            this.eof = dfa_130;
            this.min = dfa_131;
            this.max = dfa_132;
            this.accept = dfa_133;
            this.special = dfa_134;
            this.transition = dfa_135;
        }
        public String getDescription() {
            return "10966:2: (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression | this_IgnoreValue_2= ruleIgnoreValue )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA268_2 = input.LA(1);

                         
                        int index268_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred305_InternalScadeEquations()) ) {s = 1;}

                        else if ( (synpred306_InternalScadeEquations()) ) {s = 17;}

                         
                        input.seek(index268_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA268_3 = input.LA(1);

                         
                        int index268_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred305_InternalScadeEquations()) ) {s = 1;}

                        else if ( (synpred306_InternalScadeEquations()) ) {s = 17;}

                         
                        input.seek(index268_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA268_4 = input.LA(1);

                         
                        int index268_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred305_InternalScadeEquations()) ) {s = 1;}

                        else if ( (synpred306_InternalScadeEquations()) ) {s = 17;}

                         
                        input.seek(index268_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA268_5 = input.LA(1);

                         
                        int index268_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred305_InternalScadeEquations()) ) {s = 1;}

                        else if ( (synpred306_InternalScadeEquations()) ) {s = 17;}

                         
                        input.seek(index268_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA268_6 = input.LA(1);

                         
                        int index268_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred305_InternalScadeEquations()) ) {s = 1;}

                        else if ( (synpred306_InternalScadeEquations()) ) {s = 17;}

                         
                        input.seek(index268_6);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA268_7 = input.LA(1);

                         
                        int index268_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred305_InternalScadeEquations()) ) {s = 1;}

                        else if ( (synpred306_InternalScadeEquations()) ) {s = 17;}

                         
                        input.seek(index268_7);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA268_8 = input.LA(1);

                         
                        int index268_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred305_InternalScadeEquations()) ) {s = 1;}

                        else if ( (synpred306_InternalScadeEquations()) ) {s = 17;}

                         
                        input.seek(index268_8);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA268_9 = input.LA(1);

                         
                        int index268_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred305_InternalScadeEquations()) ) {s = 1;}

                        else if ( (synpred306_InternalScadeEquations()) ) {s = 17;}

                         
                        input.seek(index268_9);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA268_10 = input.LA(1);

                         
                        int index268_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred305_InternalScadeEquations()) ) {s = 1;}

                        else if ( (synpred306_InternalScadeEquations()) ) {s = 17;}

                         
                        input.seek(index268_10);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA268_11 = input.LA(1);

                         
                        int index268_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred305_InternalScadeEquations()) ) {s = 1;}

                        else if ( (synpred306_InternalScadeEquations()) ) {s = 17;}

                         
                        input.seek(index268_11);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA268_12 = input.LA(1);

                         
                        int index268_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred305_InternalScadeEquations()) ) {s = 1;}

                        else if ( (synpred306_InternalScadeEquations()) ) {s = 17;}

                         
                        input.seek(index268_12);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA268_13 = input.LA(1);

                         
                        int index268_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred305_InternalScadeEquations()) ) {s = 1;}

                        else if ( (synpred306_InternalScadeEquations()) ) {s = 17;}

                         
                        input.seek(index268_13);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA268_14 = input.LA(1);

                         
                        int index268_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred305_InternalScadeEquations()) ) {s = 1;}

                        else if ( (synpred306_InternalScadeEquations()) ) {s = 17;}

                         
                        input.seek(index268_14);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 268, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_136s = "\3\uffff\1\1\4\uffff\2\1";
    static final String dfa_137s = "\1\12\1\uffff\4\4\1\7\1\uffff\2\4";
    static final String dfa_138s = "\1\131\1\uffff\1\4\1\172\1\4\1\10\1\7\1\uffff\2\172";
    static final String dfa_139s = "\1\uffff\1\1\5\uffff\1\2\2\uffff";
    static final String dfa_140s = "\12\uffff}>";
    static final String[] dfa_141s = {
            "\1\1\116\uffff\1\2",
            "",
            "\1\3",
            "\7\1\13\uffff\1\7\2\uffff\1\1\7\uffff\1\1\3\uffff\1\4\31\uffff\13\1\3\uffff\2\1\4\uffff\1\5\4\uffff\1\6\4\1\23\uffff\2\1\3\uffff\6\1",
            "\1\10",
            "\1\10\2\uffff\2\1",
            "\1\11",
            "",
            "\7\1\13\uffff\1\7\2\uffff\1\1\7\uffff\1\1\3\uffff\1\4\31\uffff\13\1\3\uffff\2\1\4\uffff\1\5\4\uffff\1\6\4\1\23\uffff\2\1\3\uffff\6\1",
            "\7\1\13\uffff\1\7\2\uffff\1\1\7\uffff\1\1\35\uffff\13\1\3\uffff\2\1\4\uffff\1\1\5\uffff\4\1\23\uffff\2\1\3\uffff\6\1"
    };
    static final short[] dfa_136 = DFA.unpackEncodedString(dfa_136s);
    static final char[] dfa_137 = DFA.unpackEncodedStringToUnsignedChars(dfa_137s);
    static final char[] dfa_138 = DFA.unpackEncodedStringToUnsignedChars(dfa_138s);
    static final short[] dfa_139 = DFA.unpackEncodedString(dfa_139s);
    static final short[] dfa_140 = DFA.unpackEncodedString(dfa_140s);
    static final short[][] dfa_141 = unpackEncodedStringArray(dfa_141s);

    class DFA275 extends DFA {

        public DFA275(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 275;
            this.eot = dfa_49;
            this.eof = dfa_136;
            this.min = dfa_137;
            this.max = dfa_138;
            this.accept = dfa_139;
            this.special = dfa_140;
            this.transition = dfa_141;
        }
        public String getDescription() {
            return "11566:2: (this_Annotation_0= superAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation )";
        }
    }
    static final String dfa_142s = "\1\131\1\uffff\1\4\1\131\2\4\1\7\1\uffff\2\131";
    static final String[] dfa_143s = {
            "\1\1\116\uffff\1\2",
            "",
            "\1\3",
            "\2\1\4\uffff\1\1\13\uffff\1\7\16\uffff\1\4\43\uffff\1\1\11\uffff\1\5\4\uffff\1\6\1\1",
            "\1\10",
            "\1\10",
            "\1\11",
            "",
            "\2\1\4\uffff\1\1\13\uffff\1\7\16\uffff\1\4\43\uffff\1\1\11\uffff\1\5\4\uffff\1\6\1\1",
            "\2\1\4\uffff\1\1\13\uffff\1\7\62\uffff\1\1\17\uffff\1\1"
    };
    static final char[] dfa_142 = DFA.unpackEncodedStringToUnsignedChars(dfa_142s);
    static final short[][] dfa_143 = unpackEncodedStringArray(dfa_143s);

    class DFA276 extends DFA {

        public DFA276(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 276;
            this.eot = dfa_49;
            this.eof = dfa_136;
            this.min = dfa_137;
            this.max = dfa_142;
            this.accept = dfa_139;
            this.special = dfa_140;
            this.transition = dfa_143;
        }
        public String getDescription() {
            return "11608:2: (this_QuotedStringAnnotation_0= superQuotedStringAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation )";
        }
    }
    static final String dfa_144s = "\26\uffff";
    static final String dfa_145s = "\3\uffff\1\11\4\uffff\1\7\2\uffff\2\11\1\uffff\1\7\1\uffff\1\7\1\uffff\1\7\1\uffff\1\7\1\uffff";
    static final String dfa_146s = "\1\12\1\uffff\4\4\1\7\1\uffff\1\4\2\uffff\12\4\1\0";
    static final String dfa_147s = "\1\131\1\uffff\1\4\1\172\1\4\1\10\1\7\1\uffff\1\172\2\uffff\2\172\1\4\1\172\1\4\1\172\1\4\1\172\1\4\1\172\1\0";
    static final String dfa_148s = "\1\uffff\1\1\5\uffff\1\2\1\uffff\1\4\1\3\13\uffff";
    static final String dfa_149s = "\25\uffff\1\0}>";
    static final String[] dfa_150s = {
            "\1\1\116\uffff\1\2",
            "",
            "\1\3",
            "\1\10\1\7\1\11\3\7\1\11\16\uffff\1\11\7\uffff\1\11\3\uffff\1\4\31\uffff\12\11\1\12\3\uffff\2\11\4\uffff\1\5\4\uffff\1\6\4\11\23\uffff\2\11\3\uffff\6\11",
            "\1\13",
            "\1\13\2\uffff\2\7",
            "\1\14",
            "",
            "\1\7\1\uffff\1\7\3\uffff\1\7\6\uffff\1\11\1\7\2\uffff\1\11\3\uffff\1\7\2\uffff\1\11\4\uffff\1\7\3\uffff\1\15\31\uffff\12\7\1\11\3\uffff\2\7\4\uffff\1\7\1\11\3\uffff\5\7\13\uffff\2\11\6\uffff\2\7\3\uffff\6\7",
            "",
            "",
            "\1\10\1\7\1\11\3\7\1\11\16\uffff\1\11\7\uffff\1\11\3\uffff\1\4\31\uffff\12\11\1\12\3\uffff\2\11\4\uffff\1\5\4\uffff\1\6\4\11\23\uffff\2\11\3\uffff\6\11",
            "\1\10\1\7\1\11\3\7\1\11\16\uffff\1\11\7\uffff\1\11\35\uffff\12\11\1\12\3\uffff\2\11\4\uffff\1\7\5\uffff\4\11\23\uffff\2\11\3\uffff\6\11",
            "\1\16",
            "\1\7\1\uffff\1\7\3\uffff\1\7\6\uffff\1\11\1\7\2\uffff\1\11\3\uffff\1\7\2\uffff\1\11\4\uffff\1\7\3\uffff\1\17\31\uffff\12\7\1\11\3\uffff\2\7\4\uffff\1\7\1\11\3\uffff\5\7\13\uffff\2\11\6\uffff\2\7\3\uffff\6\7",
            "\1\20",
            "\1\7\1\uffff\1\7\3\uffff\1\7\6\uffff\1\11\1\7\2\uffff\1\11\3\uffff\1\7\2\uffff\1\11\4\uffff\1\7\3\uffff\1\21\31\uffff\12\7\1\11\3\uffff\2\7\4\uffff\1\7\1\11\3\uffff\5\7\13\uffff\2\11\6\uffff\2\7\3\uffff\6\7",
            "\1\22",
            "\1\7\1\uffff\1\7\3\uffff\1\7\6\uffff\1\11\1\7\2\uffff\1\11\3\uffff\1\7\2\uffff\1\11\4\uffff\1\7\3\uffff\1\23\31\uffff\12\7\1\11\3\uffff\2\7\4\uffff\1\7\1\11\3\uffff\5\7\13\uffff\2\11\6\uffff\2\7\3\uffff\6\7",
            "\1\24",
            "\1\7\1\uffff\1\7\3\uffff\1\7\6\uffff\1\11\1\7\2\uffff\1\11\3\uffff\1\7\2\uffff\1\11\4\uffff\1\7\3\uffff\1\25\31\uffff\12\7\1\11\3\uffff\2\7\4\uffff\1\7\1\11\3\uffff\5\7\13\uffff\2\11\6\uffff\2\7\3\uffff\6\7",
            "\1\uffff"
    };

    static final short[] dfa_144 = DFA.unpackEncodedString(dfa_144s);
    static final short[] dfa_145 = DFA.unpackEncodedString(dfa_145s);
    static final char[] dfa_146 = DFA.unpackEncodedStringToUnsignedChars(dfa_146s);
    static final char[] dfa_147 = DFA.unpackEncodedStringToUnsignedChars(dfa_147s);
    static final short[] dfa_148 = DFA.unpackEncodedString(dfa_148s);
    static final short[] dfa_149 = DFA.unpackEncodedString(dfa_149s);
    static final short[][] dfa_150 = unpackEncodedStringArray(dfa_150s);

    class DFA277 extends DFA {

        public DFA277(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 277;
            this.eot = dfa_144;
            this.eof = dfa_145;
            this.min = dfa_146;
            this.max = dfa_147;
            this.accept = dfa_148;
            this.special = dfa_149;
            this.transition = dfa_150;
        }
        public String getDescription() {
            return "11650:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA277_21 = input.LA(1);

                         
                        int index277_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred320_InternalScadeEquations()) ) {s = 7;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index277_21);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 277, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_151s = "\2\uffff\1\6\5\uffff\2\6";
    static final String dfa_152s = "\1\130\4\4\1\7\2\uffff\2\4";
    static final String dfa_153s = "\1\130\1\4\1\130\1\4\1\10\1\7\2\uffff\1\130\1\123";
    static final String dfa_154s = "\6\uffff\1\2\1\1\2\uffff";
    static final String[] dfa_155s = {
            "\1\1",
            "\1\2",
            "\2\7\1\uffff\3\7\33\uffff\1\3\55\uffff\1\4\4\uffff\1\5",
            "\1\10",
            "\1\10\2\uffff\2\7",
            "\1\11",
            "",
            "",
            "\2\7\1\uffff\3\7\33\uffff\1\3\55\uffff\1\4\4\uffff\1\5",
            "\2\7\1\uffff\3\7\111\uffff\1\7"
    };
    static final short[] dfa_151 = DFA.unpackEncodedString(dfa_151s);
    static final char[] dfa_152 = DFA.unpackEncodedStringToUnsignedChars(dfa_152s);
    static final char[] dfa_153 = DFA.unpackEncodedStringToUnsignedChars(dfa_153s);
    static final short[] dfa_154 = DFA.unpackEncodedString(dfa_154s);
    static final short[][] dfa_155 = unpackEncodedStringArray(dfa_155s);

    class DFA278 extends DFA {

        public DFA278(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 278;
            this.eot = dfa_49;
            this.eof = dfa_151;
            this.min = dfa_152;
            this.max = dfa_153;
            this.accept = dfa_154;
            this.special = dfa_140;
            this.transition = dfa_155;
        }
        public String getDescription() {
            return "11716:2: (this_StringPragma_0= ruleStringPragma | this_PragmaTag_1= rulePragmaTag )";
        }
    }
    static final String dfa_156s = "\13\uffff";
    static final String dfa_157s = "\1\12\1\uffff\4\4\1\7\2\uffff\2\4";
    static final String dfa_158s = "\1\131\1\uffff\1\4\1\130\1\4\1\10\1\7\2\uffff\1\130\1\123";
    static final String dfa_159s = "\1\uffff\1\1\5\uffff\1\3\1\2\2\uffff";
    static final String dfa_160s = "\13\uffff}>";
    static final String[] dfa_161s = {
            "\1\1\116\uffff\1\2",
            "",
            "\1\3",
            "\2\10\1\uffff\3\10\33\uffff\1\4\43\uffff\1\7\11\uffff\1\5\4\uffff\1\6",
            "\1\11",
            "\1\11\2\uffff\2\10",
            "\1\12",
            "",
            "",
            "\2\10\1\uffff\3\10\33\uffff\1\4\43\uffff\1\7\11\uffff\1\5\4\uffff\1\6",
            "\2\10\1\uffff\3\10\77\uffff\1\7\11\uffff\1\10"
    };

    static final short[] dfa_156 = DFA.unpackEncodedString(dfa_156s);
    static final char[] dfa_157 = DFA.unpackEncodedStringToUnsignedChars(dfa_157s);
    static final char[] dfa_158 = DFA.unpackEncodedStringToUnsignedChars(dfa_158s);
    static final short[] dfa_159 = DFA.unpackEncodedString(dfa_159s);
    static final short[] dfa_160 = DFA.unpackEncodedString(dfa_160s);
    static final short[][] dfa_161 = unpackEncodedStringArray(dfa_161s);

    class DFA279 extends DFA {

        public DFA279(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 279;
            this.eot = dfa_156;
            this.eof = dfa_156;
            this.min = dfa_157;
            this.max = dfa_158;
            this.accept = dfa_159;
            this.special = dfa_160;
            this.transition = dfa_161;
        }
        public String getDescription() {
            return "11758:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation )";
        }
    }
    static final String dfa_162s = "\14\uffff";
    static final String dfa_163s = "\3\uffff\1\10\6\uffff\2\10";
    static final String dfa_164s = "\1\12\1\uffff\4\4\1\7\3\uffff\2\4";
    static final String dfa_165s = "\1\131\1\uffff\1\4\1\131\2\4\1\7\3\uffff\2\131";
    static final String dfa_166s = "\1\uffff\1\1\5\uffff\1\2\1\4\1\3\2\uffff";
    static final String dfa_167s = "\14\uffff}>";
    static final String[] dfa_168s = {
            "\1\1\116\uffff\1\2",
            "",
            "\1\3",
            "\1\10\1\7\4\uffff\1\10\32\uffff\1\4\43\uffff\1\11\11\uffff\1\5\4\uffff\1\6\1\10",
            "\1\12",
            "\1\12",
            "\1\13",
            "",
            "",
            "",
            "\1\10\1\7\4\uffff\1\10\32\uffff\1\4\43\uffff\1\11\11\uffff\1\5\4\uffff\1\6\1\10",
            "\1\10\1\7\4\uffff\1\10\76\uffff\1\11\17\uffff\1\10"
    };

    static final short[] dfa_162 = DFA.unpackEncodedString(dfa_162s);
    static final short[] dfa_163 = DFA.unpackEncodedString(dfa_163s);
    static final char[] dfa_164 = DFA.unpackEncodedStringToUnsignedChars(dfa_164s);
    static final char[] dfa_165 = DFA.unpackEncodedStringToUnsignedChars(dfa_165s);
    static final short[] dfa_166 = DFA.unpackEncodedString(dfa_166s);
    static final short[] dfa_167 = DFA.unpackEncodedString(dfa_167s);
    static final short[][] dfa_168 = unpackEncodedStringArray(dfa_168s);

    class DFA280 extends DFA {

        public DFA280(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 280;
            this.eot = dfa_162;
            this.eof = dfa_163;
            this.min = dfa_164;
            this.max = dfa_165;
            this.accept = dfa_166;
            this.special = dfa_167;
            this.transition = dfa_168;
        }
        public String getDescription() {
            return "11812:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation | this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )";
        }
    }
 

    
    private static class FollowSets000 {
        public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000018000020012L});
        public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000040000L});
        public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x00000000000C0000L});
        public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000200000L});
        public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000240000L});
        public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x00004000004203B0L,0x0000243801080000L});
        public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000100000L});
        public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000000020000L});
        public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000000000010L,0x0000240000000000L});
        public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000000080000L});
        public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000200002L});
        public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000000000000L,0x000100003C000000L});
        public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000000400000L});
        public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000000840000L});
        public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000000900000L});
        public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000000800000L});
        public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000002000000L});
        public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x000000000C000000L});
        public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000010020000L});
        public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000000180000L});
        public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000020000000L});
        public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000000100002L});
        public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000040040000L});
        public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000000000000L,0x000000001C000000L});
        public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000080000002L});
        public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000100000002L});
        public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000140000000L});
        public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000E00100000L});
        public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000000E00000000L});
        public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x000001D000020010L});
        public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000002000100002L});
        public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000000000000410L,0x0000000002000000L});
        public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x00000C0000000000L});
        public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x00000C0020000000L});
        public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000020000000000L});
        public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000080000000000L});
        public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000302E00100002L});
        public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000302E00100012L});
        public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000302000100002L});
        public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000300000000002L});
        public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0003C00000000002L});
        public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0003800000000000L});
        public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0003004000020010L});
        public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x001C000000000002L});
        public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x00000000004203B0L,0x0000243001080000L});
        public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0020000000000002L});
        public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x00000000004203B0L,0x0000242001000000L});
        public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0040000000000002L});
        public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000000080000000L});
        public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0080000000000002L});
        public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0100000000000000L});
        public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0200000000000000L});
        public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0400000000000002L});
        public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0800000000000002L});
        public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x1000000000000002L});
        public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x2000000000000002L});
        public static final BitSet FOLLOW_60 = new BitSet(new long[]{0xC000000202000452L,0x00E300003E0061FFL});
        public static final BitSet FOLLOW_61 = new BitSet(new long[]{0xC000000002000452L,0x0000000002006001L});
        public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000000000400010L});
        public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x4000000000000002L});
        public static final BitSet FOLLOW_64 = new BitSet(new long[]{0xC000000202800450L,0x00E300003E0061FFL});
        public static final BitSet FOLLOW_65 = new BitSet(new long[]{0xC000000002800450L,0x0000000002006001L});
        public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x4000000000800000L});
        public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x8000000000000400L,0x0000000002000000L});
        public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0000000000000400L,0x0000000002000001L});
        public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000000200000400L,0x00E000001E00007EL});
        public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000000000140000L});
        public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000000000000802L});
        public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0000000000040802L});
        public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000000200000400L,0x00E300003E00005EL});
        public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000000200000000L,0x000300003C00005EL});
        public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0000000000000000L,0x000300003C00005EL});
        public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0000000000000000L,0x000300003C00005CL});
        public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000000000000000L,0x000300003C000058L});
        public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0000000000000000L,0x000300003C000050L});
        public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000000000000000L,0x000300003C000040L});
        public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0000000000000000L,0x000300003C000000L});
        public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0000000000400030L});
        public static final BitSet FOLLOW_83 = new BitSet(new long[]{0xC000000202800450L,0x07E300003E0061FFL});
        public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000000000100410L,0x0000000002000000L});
        public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0000000000000C12L,0x0000000002000000L});
        public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0000000202800400L,0x00E300003E0001FEL});
        public static final BitSet FOLLOW_87 = new BitSet(new long[]{0xC000000202000450L,0x07E300003E0061FFL});
        public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000080L});
        public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0000000000100010L});
        public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x0000000000000802L,0x0000000000000080L});
        public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0000000000000812L});
        public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x0000000040000002L});
        public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x0000000002000400L,0x00E0000002000100L});
        public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x0000000002000000L,0x0000000000000100L});
        public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0000000000000420L,0x0000000002000000L});
        public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x0000000000040410L,0x0000000002000000L});
        public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x0000000000000400L,0x00E0000002000080L});
        public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x0000000000400430L,0x0000000002000008L});
        public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x0000000000400410L,0x0000000002000008L});
        public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x0000000000000000L,0x000000C000000000L});
        public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x0000000000400410L,0x0000000002000000L});
        public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x0000000000200002L,0x0000000000001A00L});
        public static final BitSet FOLLOW_105 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
        public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x0000000000000002L,0x0000000000001800L});
        public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x0004000000000000L,0x001C100000048040L});
        public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x0000000000000002L,0x0000000000001000L});
        public static final BitSet FOLLOW_109 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000080L});
        public static final BitSet FOLLOW_110 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_111 = new BitSet(new long[]{0x0000000000000000L,0x0000030000000000L});
        public static final BitSet FOLLOW_112 = new BitSet(new long[]{0x0000000000000440L,0x0000000002000000L});
        public static final BitSet FOLLOW_113 = new BitSet(new long[]{0x0000002010020000L,0x0000000000000200L});
        public static final BitSet FOLLOW_114 = new BitSet(new long[]{0x00004000004203B0L,0x0000243801288000L});
        public static final BitSet FOLLOW_115 = new BitSet(new long[]{0x0000000002000400L,0x0000000002000000L});
        public static final BitSet FOLLOW_116 = new BitSet(new long[]{0x0000000000000400L,0x0000000002002000L});
        public static final BitSet FOLLOW_117 = new BitSet(new long[]{0x0000000000000400L,0x0000000002004000L});
        public static final BitSet FOLLOW_118 = new BitSet(new long[]{0x0000000000000002L,0x0000000000008000L});
        public static final BitSet FOLLOW_119 = new BitSet(new long[]{0x0000000000200002L,0x00000007C0000000L});
        public static final BitSet FOLLOW_120 = new BitSet(new long[]{0x00000000004203B0L,0x00002C2001000000L});
        public static final BitSet FOLLOW_121 = new BitSet(new long[]{0x0000000000000002L,0x0000000000010000L});
        public static final BitSet FOLLOW_122 = new BitSet(new long[]{0x0000000000000002L,0x0000000000020000L});
        public static final BitSet FOLLOW_123 = new BitSet(new long[]{0x0000000000000002L,0x00000000000C0000L});
        public static final BitSet FOLLOW_124 = new BitSet(new long[]{0x0000000000000002L,0x0000000000100000L});
        public static final BitSet FOLLOW_125 = new BitSet(new long[]{0x0000002000000002L,0x0000000000000200L});
        public static final BitSet FOLLOW_126 = new BitSet(new long[]{0x0000000000000080L});
        public static final BitSet FOLLOW_127 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
        public static final BitSet FOLLOW_128 = new BitSet(new long[]{0x00004000004203B0L,0x0000243801480000L});
        public static final BitSet FOLLOW_129 = new BitSet(new long[]{0x0000000000800020L});
        public static final BitSet FOLLOW_130 = new BitSet(new long[]{0x0000000040000000L});
        public static final BitSet FOLLOW_131 = new BitSet(new long[]{0x00000000004003A0L,0x0000000000800200L});
        public static final BitSet FOLLOW_132 = new BitSet(new long[]{0x00000000004003A0L,0x0000000000800600L});
        public static final BitSet FOLLOW_133 = new BitSet(new long[]{0x0000000000040000L,0x0000000000000400L});
        public static final BitSet FOLLOW_134 = new BitSet(new long[]{0x00000000000003B0L,0x0000000000080000L});
        public static final BitSet FOLLOW_135 = new BitSet(new long[]{0x0000000000040002L});
        public static final BitSet FOLLOW_136 = new BitSet(new long[]{0x0000000000000230L});
        public static final BitSet FOLLOW_137 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
        public static final BitSet FOLLOW_138 = new BitSet(new long[]{0x0000002000000002L,0x0000000001080000L});
        public static final BitSet FOLLOW_139 = new BitSet(new long[]{0x0000000000000100L});
    }


}